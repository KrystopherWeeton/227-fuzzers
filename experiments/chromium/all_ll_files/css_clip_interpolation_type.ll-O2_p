; ModuleID = '../../third_party/blink/renderer/core/animation/css_clip_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_clip_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.169", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.113", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist.44"* }
%"class.blink::Worklist.44" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.33" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.116", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.44"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.173" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::CSSClipInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PropertyRegistration" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.178", %class.scoped_refptr.184 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.184 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.185", [4 x i8] }>
%"class.WTF::RefCounted.185" = type { %"class.base::RefCounted.186" }
%"class.base::RefCounted.186" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.187" = type { %"class.WTF::VectorBuffer.188" }
%"class.WTF::VectorBuffer.188" = type { %"class.WTF::VectorBufferBase.189" }
%"class.WTF::VectorBufferBase.189" = type { %"class.std::__1::unique_ptr.190"*, i32, i32 }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::UnderlyingAutosChecker"* }
%"class.blink::UnderlyingAutosChecker" = type <{ %"class.blink::CSSInterpolationType::CSSConversionChecker", %"struct.blink::ClipAutos", [3 x i8] }>
%"class.blink::CSSInterpolationType::CSSConversionChecker" = type { %"class.blink::InterpolationType::ConversionChecker" }
%"struct.blink::ClipAutos" = type { i8, i8, i8, i8, i8 }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Length" = type <{ %union.anon.199, i8, i8, i8, i8 }>
%union.anon.199 = type { i32 }
%"class.blink::InterpolableLength" = type { %"class.blink::InterpolableValue", i32, %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"class.blink::Persistent.1427" }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector.1423", %"class.std::__1::bitset" }
%"class.WTF::Vector.1423" = type { %"class.WTF::VectorBuffer.1424" }
%"class.WTF::VectorBuffer.1424" = type { %"class.WTF::VectorBufferBase.549", [80 x i8] }
%"class.WTF::VectorBufferBase.549" = type { double*, i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::Persistent.1427" = type { %"class.blink::PersistentBase.1428" }
%"class.blink::PersistentBase.1428" = type { %"class.blink::CSSMathExpressionNode"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::CSSMathExpressionNode" = type opaque
%"class.blink::PersistentNodePtr.327" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.1352" = type { %"class.WTF::VectorBuffer.1353" }
%"class.WTF::VectorBuffer.1353" = type { %"class.WTF::VectorBufferBase.1354" }
%"class.WTF::VectorBufferBase.1354" = type { %"class.std::__1::unique_ptr.178"*, i32, i32 }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.722, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.224, %class.scoped_refptr.224, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.224, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.206" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.200", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.202" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.373", %"class.blink::Member.375", %"class.blink::Member.200", %"class.blink::Member.377", %"class.blink::Member.377", %"class.blink::Member.401", %"class.blink::Member.403", %"class.blink::Member.405", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.410", %"class.blink::HeapVector.412" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::Document"* }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.381" }
%"class.blink::HeapHashMap.381" = type { %"class.WTF::HashMap.384" }
%"class.WTF::HashMap.384" = type { %"class.WTF::HashTable.385" }
%"class.WTF::HashTable.385" = type <{ %"struct.WTF::KeyValuePair.387"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.387" = type { %"class.WTF::AtomicString", %"class.blink::Member.388" }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.392", i32, %"class.blink::HeapVector.394" }
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.394" = type { %"class.WTF::Vector.397" }
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399" }
%"class.WTF::VectorBufferBase.399" = type { %"class.blink::Member.392"*, i32, i32 }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.407" }
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::HeapHashMap.409"* }
%"class.blink::HeapHashMap.409" = type opaque
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.412" = type { %"class.WTF::Vector.415" }
%"class.WTF::Vector.415" = type { %"class.WTF::VectorBuffer.416" }
%"class.WTF::VectorBuffer.416" = type { %"class.WTF::VectorBufferBase.417" }
%"class.WTF::VectorBufferBase.417" = type { %"class.blink::Member.418"*, i32, i32 }
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.206" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.210", %"class.blink::Member.212", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.210" = type { %"class.WTF::SingleThreadedBitField.211" }
%"class.WTF::SingleThreadedBitField.211" = type { i32 }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.216 }
%class.scoped_refptr.216 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.217", %"class.WTF::AtomicString", %"class.WTF::Vector.219" }
%"class.WTF::RefCounted.217" = type { %"class.base::RefCounted.218" }
%"class.base::RefCounted.218" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221", [32 x i8] }
%"class.WTF::VectorBufferBase.221" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.985", %"class.WTF::Vector.985", i8, i32, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.996", %"class.blink::Member.998", %"class.blink::Member.1000", %"class.blink::Member.1002", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1010", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1016", %"class.blink::Member.1018", %"class.blink::Member.418", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1021", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.394", %"class.blink::Member.392", %"class.blink::Member.1046", %"class.blink::Member.392", %"class.blink::Member.392", %"class.blink::Member.392", %"class.blink::UserActionElementSet", %"class.blink::Member.1055", double, double, i64, i64, %"class.blink::HeapHashSet.1057", %"class.blink::HeapHashSet.1064", i16, i8, %"class.blink::Member.1071", %"class.blink::Member.1073", %"class.blink::Member.1075", %"class.blink::Member.1077", %"class.blink::TextLinkColors", %"class.blink::Member.1079", i8, [7 x i8], %"class.blink::HeapHashMap.1081", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.392", %"class.WTF::Vector.1088", %"class.blink::Member.1093", %"class.blink::Member.1095", i8, %"class.blink::Member.392", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1097", %"class.blink::HeapVector.1099", %"class.std::__1::unique_ptr.1107", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1113", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1126", %"class.WTF::Vector.1128", i8, i8, %"class.std::__1::unique_ptr.1133", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.394", %"class.blink::HeapVector.1139", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1147", i8, i32, %"class.blink::Member.1149", %"class.blink::Member.1151", %"class.blink::Member.1153", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1155", %"class.WTF::HashMap.1157", %"class.blink::Member.1162", %"class.blink::Member.1164", %"class.blink::Member.1166", %"class.blink::Member.1168", %"class.blink::Member.375", %"class.blink::Member.375", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1170", i8, i32, %"class.blink::Member.1177", %"class.blink::Member.1179", i32, %"class.blink::Member.1181", %"class.blink::Member.1183", %"class.blink::Member.1185", %"class.std::__1::unique_ptr.1187", i64, %"class.std::__1::unique_ptr.1193", i32, i32, %"class.blink::Member.1208", %"class.blink::Member.1210", %"class.blink::Member.1212", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1214", %"class.WTF::Vector.1216", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1221", %"class.blink::Member.1228", %"class.std::__1::unique_ptr.1230", %"class.blink::Member.1236", i8, i8, %"class.WTF::String", %"class.blink::Member.1238", i8, [7 x i8], %"class.blink::HeapHashMap.1240", %"class.blink::HeapObserverSet.1247", %"class.blink::Member.1255", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1257", i32, i8, i8, %"class.blink::WeakMember.1259", %"class.blink::Member.1260" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.978" }
%"class.blink::HeapHashMap.978" = type { %"class.WTF::HashMap.981" }
%"class.WTF::HashMap.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"struct.WTF::KeyValuePair.984"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.984" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.985" = type { %"class.WTF::VectorBuffer.986" }
%"class.WTF::VectorBuffer.986" = type { %"class.WTF::VectorBufferBase.987" }
%"class.WTF::VectorBufferBase.987" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.988 }
%class.scoped_refptr.988 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.989", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.989" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.276" }
%"struct.std::__1::atomic.276" = type { %"struct.std::__1::__atomic_base.277" }
%"struct.std::__1::__atomic_base.277" = type { %"struct.std::__1::__atomic_base.278" }
%"struct.std::__1::__atomic_base.278" = type { %"struct.std::__1::__cxx_atomic_impl.279" }
%"struct.std::__1::__cxx_atomic_impl.279" = type { %"struct.std::__1::__cxx_atomic_base_impl.280" }
%"struct.std::__1::__cxx_atomic_base_impl.280" = type { i32 }
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1273", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1306", i32, i8, [3 x i8], %"class.blink::HeapVector.1308", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1316", %"class.blink::Member.1318", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1327", %"class.blink::Member.1333", %"class.blink::Member.1335", i8, [7 x i8] }>
%"class.blink::Supplementable.1273" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1274" }
%"class.blink::HeapHashMap.1274" = type { %"class.WTF::HashMap.1277" }
%"class.WTF::HashMap.1277" = type { %"class.WTF::HashTable.1278" }
%"class.WTF::HashTable.1278" = type <{ %"struct.WTF::KeyValuePair.1280"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1280" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1281" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.946" }
%"class.blink::HeapHashSet.946" = type { %"class.WTF::HashSet.949" }
%"class.WTF::HashSet.949" = type { %"class.WTF::HashTable.950" }
%"class.WTF::HashTable.950" = type <{ %"class.blink::WeakMember.952"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.952" = type opaque
%"class.blink::Supplementable.1281" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1282" }
%"class.blink::HeapHashMap.1282" = type { %"class.WTF::HashMap.1285" }
%"class.WTF::HashMap.1285" = type { %"class.WTF::HashTable.1286" }
%"class.WTF::HashTable.1286" = type <{ %"struct.WTF::KeyValuePair.1288"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1288" = type { i8*, %"class.blink::Member.1361" }
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1363" }
%"class.blink::Member.1363" = type { %"class.blink::MemberBase.1364" }
%"class.blink::MemberBase.1364" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1289, %"class.std::__1::unique_ptr.1290", %"class.std::__1::unique_ptr.1290", %"class.std::__1::unique_ptr.1296", %"class.std::__1::unique_ptr.1296", %"class.blink::Member.994", i32, [4 x i8], %"class.WTF::HashSet.1302", i32, i32 }
%class.scoped_refptr.1289 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1290" = type { %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1302" = type { %"class.WTF::HashTable.1303" }
%"class.WTF::HashTable.1303" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1308" = type { %"class.WTF::Vector.1311" }
%"class.WTF::Vector.1311" = type { %"class.WTF::VectorBuffer.1312" }
%"class.WTF::VectorBuffer.1312" = type { %"class.WTF::VectorBufferBase.1313" }
%"class.WTF::VectorBufferBase.1313" = type { %"class.blink::Member.1314"*, i32, i32 }
%"class.blink::Member.1314" = type opaque
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1320", i32, i32 }
%"class.blink::HeapHashMap.1320" = type { %"class.WTF::HashMap.1323" }
%"class.WTF::HashMap.1323" = type { %"class.WTF::HashTable.1324" }
%"class.WTF::HashTable.1324" = type <{ %"struct.WTF::KeyValuePair.1326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1326" = type opaque
%"class.std::__1::unique_ptr.1327" = type { %"class.std::__1::__compressed_pair.1328" }
%"class.std::__1::__compressed_pair.1328" = type { %"struct.std::__1::__compressed_pair_elem.1329" }
%"struct.std::__1::__compressed_pair_elem.1329" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1335" = type { %"class.blink::MemberBase.1336" }
%"class.blink::MemberBase.1336" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.996" = type { %"class.blink::MemberBase.997" }
%"class.blink::MemberBase.997" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1004" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.blink::KURL"* }
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1020 }
%class.scoped_refptr.1020 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1021" = type { %"class.WTF::VectorBuffer.1022" }
%"class.WTF::VectorBuffer.1022" = type { %"class.WTF::VectorBufferBase.1023" }
%"class.WTF::VectorBufferBase.1023" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1024 }
%class.scoped_refptr.1024 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1025", i32, i32, %"class.blink::Persistent.1027" }
%"class.WTF::RefCounted.1025" = type { %"class.base::RefCounted.1026" }
%"class.base::RefCounted.1026" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1027" = type { %"class.blink::PersistentBase.1028" }
%"class.blink::PersistentBase.1028" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1031" }
%"class.blink::HeapHashMap.1031" = type { %"class.WTF::HashMap.1034" }
%"class.WTF::HashMap.1034" = type { %"class.WTF::HashTable.1035" }
%"class.WTF::HashTable.1035" = type <{ %"struct.WTF::KeyValuePair.1037"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1037" = type { %"class.blink::WeakMember.1038", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1038" = type { %"class.blink::MemberBase.1039" }
%"class.blink::MemberBase.1039" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1048" }
%"class.blink::HeapHashMap.1048" = type { %"class.WTF::HashMap.1051" }
%"class.WTF::HashMap.1051" = type { %"class.WTF::HashTable.1052" }
%"class.WTF::HashTable.1052" = type <{ %"struct.WTF::KeyValuePair.1054"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1054" = type opaque
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1057" = type { %"class.WTF::HashSet.1060" }
%"class.WTF::HashSet.1060" = type { %"class.WTF::HashTable.1061" }
%"class.WTF::HashTable.1061" = type <{ %"class.blink::WeakMember.1063"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1063" = type opaque
%"class.blink::HeapHashSet.1064" = type { %"class.WTF::HashSet.1067" }
%"class.WTF::HashSet.1067" = type { %"class.WTF::HashTable.1068" }
%"class.WTF::HashTable.1068" = type <{ %"class.blink::WeakMember.1070"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1070" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1081" = type { %"class.WTF::HashMap.1084" }
%"class.WTF::HashMap.1084" = type { %"class.WTF::HashTable.1085" }
%"class.WTF::HashTable.1085" = type <{ %"struct.WTF::KeyValuePair.1087"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1087" = type opaque
%"class.WTF::Vector.1088" = type { %"class.WTF::VectorBuffer.1089" }
%"class.WTF::VectorBuffer.1089" = type { %"class.WTF::VectorBufferBase.1090" }
%"class.WTF::VectorBufferBase.1090" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"class.blink::Member.1105"*, i32, i32 }
%"class.blink::Member.1105" = type opaque
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1113" = type { %"class.WTF::HashSet.1116" }
%"class.WTF::HashSet.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ %"class.blink::WeakMember.1119"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1119" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1120", i32, [4 x i8] }>
%"class.WTF::Vector.1120" = type { %"class.WTF::VectorBuffer.1121" }
%"class.WTF::VectorBuffer.1121" = type { %"class.WTF::VectorBufferBase.1122" }
%"class.WTF::VectorBufferBase.1122" = type { %"struct.std::__1::pair.1123"*, i32, i32 }
%"struct.std::__1::pair.1123" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1128" = type { %"class.WTF::VectorBuffer.1129" }
%"class.WTF::VectorBuffer.1129" = type { %"class.WTF::VectorBufferBase.1130" }
%"class.WTF::VectorBufferBase.1130" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1133" = type { %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1139" = type { %"class.WTF::Vector.1142" }
%"class.WTF::Vector.1142" = type { %"class.WTF::VectorBuffer.1143" }
%"class.WTF::VectorBuffer.1143" = type { %"class.WTF::VectorBufferBase.1144" }
%"class.WTF::VectorBufferBase.1144" = type { %"class.blink::Member.1145"*, i32, i32 }
%"class.blink::Member.1145" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.375" }
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1157" = type { %"class.WTF::HashTable.1158" }
%"class.WTF::HashTable.1158" = type <{ %"struct.WTF::KeyValuePair.1161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1161" = type opaque
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1045", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1042, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1042 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1043" }>
%"class.base::RefCountedThreadSafe.1043" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1044 }
%class.scoped_refptr.1044 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.281" }
%"struct.std::__1::atomic.281" = type { %"struct.std::__1::__atomic_base.282" }
%"struct.std::__1::__atomic_base.282" = type { %"struct.std::__1::__atomic_base.283" }
%"struct.std::__1::__atomic_base.283" = type { %"struct.std::__1::__cxx_atomic_impl.284" }
%"struct.std::__1::__cxx_atomic_impl.284" = type { %"struct.std::__1::__cxx_atomic_base_impl.285" }
%"struct.std::__1::__cxx_atomic_base_impl.285" = type { i8 }
%"class.blink::WeakMember.1045" = type { %"class.blink::MemberBase.376" }
%"class.blink::HeapHashSet.1170" = type { %"class.WTF::HashSet.1173" }
%"class.WTF::HashSet.1173" = type { %"class.WTF::HashTable.1174" }
%"class.WTF::HashTable.1174" = type <{ %"class.blink::Member.1176"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1176" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1187" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1193" = type { %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1196", %"class.WTF::HashSet.1196", %"class.WTF::HashSet.1196", %"class.WTF::HashSet.1196", %"class.WTF::HashSet.1196", %"class.WTF::HashSet.1196", i32, [4 x i8], %"class.WTF::HashMap.1200", %"class.WTF::HashMap.1200", %"class.WTF::HashMap.1200", %"class.WTF::HashMap.1200", %"class.WTF::HashMap.1200", %"class.WTF::HashMap.1200", %"class.WTF::HashMap.1200", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1196" = type { %"class.WTF::HashTable.1197" }
%"class.WTF::HashTable.1197" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1200" = type { %"class.WTF::HashTable.1201" }
%"class.WTF::HashTable.1201" = type <{ %"struct.WTF::KeyValuePair.1204"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1204" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1216" = type { %"class.WTF::VectorBuffer.1217" }
%"class.WTF::VectorBuffer.1217" = type { %"class.WTF::VectorBufferBase.1218" }
%"class.WTF::VectorBufferBase.1218" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1221" = type { %"class.WTF::HashMap.1224" }
%"class.WTF::HashMap.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"struct.WTF::KeyValuePair.1227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1227" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1230" = type { %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.1232" }
%"struct.std::__1::__compressed_pair_elem.1232" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1238" = type { %"class.blink::MemberBase.1239" }
%"class.blink::MemberBase.1239" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1240" = type { %"class.WTF::HashMap.1243" }
%"class.WTF::HashMap.1243" = type { %"class.WTF::HashTable.1244" }
%"class.WTF::HashTable.1244" = type <{ %"struct.WTF::KeyValuePair.1246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1246" = type opaque
%"class.blink::HeapObserverSet.1247" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1248" }
%"class.blink::HeapHashSet.1248" = type { %"class.WTF::HashSet.1251" }
%"class.WTF::HashSet.1251" = type { %"class.WTF::HashTable.1252" }
%"class.WTF::HashTable.1252" = type <{ %"class.blink::WeakMember.1254"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1254" = type opaque
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.375", %"class.blink::HeapHashSet.1264", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1271", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1264" = type { %"class.WTF::HashSet.1267" }
%"class.WTF::HashSet.1267" = type { %"class.WTF::HashTable.1268" }
%"class.WTF::HashTable.1268" = type <{ %"class.blink::Member.1270"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1270" = type opaque
%"class.blink::HeapTaskRunnerTimer.1271" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1272", { i64, i64 } }
%"class.blink::WeakMember.1272" = type { %"class.blink::MemberBase.1258" }
%"class.blink::WeakMember.1259" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.722 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.707", %"class.std::__1::unique_ptr.709" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.300", %"class.blink::DataRef.423", %"class.blink::DataRef.427", %"class.blink::DataRef.627", %"class.blink::DataRef.690", %"class.blink::DataRef.694", %"class.blink::DataRef.698", %"class.blink::DataRef.702", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.225 }
%class.scoped_refptr.225 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.226", %"class.blink::DataRef.228", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.226" = type { %"class.base::RefCounted.227" }
%"class.base::RefCounted.227" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.228" = type { %class.scoped_refptr.229 }
%class.scoped_refptr.229 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.230", %"class.blink::Font" }
%"class.WTF::RefCounted.230" = type { %"class.base::RefCounted.231" }
%"class.base::RefCounted.231" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.264 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.233, %class.scoped_refptr.241, %class.scoped_refptr.251, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.263 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.232 }
%class.scoped_refptr.232 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1337", [4 x i8] }>
%"class.WTF::RefCounted.1337" = type { %"class.base::RefCounted.1338" }
%"class.base::RefCounted.1338" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.233 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.239", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.234" }
%"class.WTF::Vector.234" = type { %"class.WTF::VectorBuffer.235" }
%"class.WTF::VectorBuffer.235" = type { %"class.WTF::VectorBufferBase.236" }
%"class.WTF::VectorBufferBase.236" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.239" = type { %"class.base::RefCounted.240" }
%"class.base::RefCounted.240" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.241 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.242", %"class.WTF::RefCounted.249", [4 x i8] }>
%"class.blink::FontSettings.242" = type { %"class.WTF::Vector.243" }
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { %"class.blink::FontTagValuePair.246"*, i32, i32 }
%"class.blink::FontTagValuePair.246" = type { i32, float }
%"class.WTF::RefCounted.249" = type { %"class.base::RefCounted.250" }
%"class.base::RefCounted.250" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.251 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.252", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.260, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.252" = type { %"class.base::RefCounted.253" }
%"class.base::RefCounted.253" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.256 }
%union.anon.256 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.260 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.261", [4 x i8] }>
%"class.WTF::RefCounted.261" = type { %"class.base::RefCounted.262" }
%"class.base::RefCounted.262" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.263 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.264 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.265", %"class.WTF::Vector.267", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.297", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.265" = type { %"class.base::RefCounted.266" }
%"class.base::RefCounted.266" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.267" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269", [8 x i8] }
%"class.WTF::VectorBufferBase.269" = type { %class.scoped_refptr.270*, i32, i32 }
%class.scoped_refptr.270 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.271", [4 x i8] }>
%"class.WTF::RefCounted.271" = type { %"class.base::RefCounted.272" }
%"class.base::RefCounted.272" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.287", %class.scoped_refptr.294, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.271" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.275 }
%union.anon.275 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.286, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.276" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.276" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.281" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.286 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.290, %class.scoped_refptr.290 }
%class.scoped_refptr.290 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.294 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.295", [4 x i8] }>
%"class.WTF::RefCounted.295" = type { %"class.base::RefCounted.296" }
%"class.base::RefCounted.296" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent.297" = type { %"class.blink::PersistentBase.298" }
%"class.blink::PersistentBase.298" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.299 }
%class.scoped_refptr.299 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.300" = type { %class.scoped_refptr.301 }
%class.scoped_refptr.301 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.302", [4 x i8], %"class.blink::DataRef.304", %"class.blink::DataRef.340", %"class.WTF::Vector.344", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.348, %class.scoped_refptr.357, %"class.blink::Persistent.365", %"class.blink::Persistent.367", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.302" = type { %"class.base::RefCounted.303" }
%"class.base::RefCounted.303" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.304" = type { %class.scoped_refptr.305 }
%class.scoped_refptr.305 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.306", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.308, %class.scoped_refptr.315, %"class.blink::Persistent.328", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.306" = type { %"class.base::RefCounted.307" }
%"class.base::RefCounted.307" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.308 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.309", %"class.WTF::Vector.310" }
%"class.base::RefCountedThreadSafe.309" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.310" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312" }
%"class.WTF::VectorBufferBase.312" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.315 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.316", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.316" = type { %"class.base::RefCounted.317" }
%"class.base::RefCounted.317" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1405 }
%class.scoped_refptr.1405 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1406", %"class.WTF::Vector.610", %"class.WTF::Vector.1408", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1406" = type { %"class.base::RefCounted.1407" }
%"class.base::RefCounted.1407" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.610" = type { %"class.WTF::VectorBuffer.611" }
%"class.WTF::VectorBuffer.611" = type { %"class.WTF::VectorBufferBase.612" }
%"class.WTF::VectorBufferBase.612" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1408" = type { %"class.WTF::VectorBuffer.1409" }
%"class.WTF::VectorBuffer.1409" = type { %"class.WTF::VectorBufferBase.1410" }
%"class.WTF::VectorBufferBase.1410" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1411 }
%union.anon.1411 = type { double }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.320" }
%"class.blink::PersistentBase.320" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.323" }
%"class.WTF::HashMap.323" = type { %"class.WTF::HashTable.324" }
%"class.WTF::HashTable.324" = type <{ %"struct.WTF::KeyValuePair.326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.326" = type opaque
%"class.blink::Persistent.328" = type { %"class.blink::PersistentBase.329" }
%"class.blink::PersistentBase.329" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.332" }
%"class.WTF::Vector.332" = type { %"class.WTF::VectorBuffer.333" }
%"class.WTF::VectorBuffer.333" = type { %"class.WTF::VectorBufferBase.334" }
%"class.WTF::VectorBufferBase.334" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.335", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.340" = type { %class.scoped_refptr.341 }
%class.scoped_refptr.341 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.342", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.342" = type { %"class.base::RefCounted.343" }
%"class.base::RefCounted.343" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.221" }
%class.scoped_refptr.348 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.349", %"class.WTF::Vector.351" }
%"class.WTF::RefCounted.349" = type { %"class.base::RefCounted.350" }
%"class.base::RefCounted.350" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.351" = type { %"class.WTF::VectorBuffer.352" }
%"class.WTF::VectorBuffer.352" = type { %"class.WTF::VectorBufferBase.353" }
%"class.WTF::VectorBufferBase.353" = type { %"struct.std::__1::pair.354"*, i32, i32 }
%"struct.std::__1::pair.354" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.357 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.358", [4 x i8], %"class.WTF::Vector.360" }
%"class.WTF::RefCounted.358" = type { %"class.base::RefCounted.359" }
%"class.base::RefCounted.359" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.360" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.362", [28 x i8] }>
%"class.WTF::VectorBufferBase.362" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.365" = type { %"class.blink::PersistentBase.366" }
%"class.blink::PersistentBase.366" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::Persistent.367" = type { %"class.blink::PersistentBase.368" }
%"class.blink::PersistentBase.368" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.371", %"class.blink::Member.421" }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.423" = type { %class.scoped_refptr.424 }
%class.scoped_refptr.424 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.425", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.425" = type { %"class.base::RefCounted.426" }
%"class.base::RefCounted.426" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.427" = type { %class.scoped_refptr.428 }
%class.scoped_refptr.428 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.429", [4 x i8], %"class.blink::DataRef.431", %"class.blink::DataRef.497", %"class.blink::TransformOperations", %class.scoped_refptr.357, %"class.blink::Persistent.621", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.429" = type { %"class.base::RefCounted.430" }
%"class.base::RefCounted.430" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.431" = type { %class.scoped_refptr.432 }
%class.scoped_refptr.432 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.433", [4 x i8], %"class.blink::DataRef.435", %"class.blink::Persistent.473", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.433" = type { %"class.base::RefCounted.434" }
%"class.base::RefCounted.434" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.435" = type { %class.scoped_refptr.436 }
%class.scoped_refptr.436 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.437", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.455, %class.scoped_refptr.458, %class.scoped_refptr.461, %class.scoped_refptr.464, %class.scoped_refptr.465, %class.scoped_refptr.466, %"class.blink::Persistent.473", %"class.blink::Persistent.488", %"class.absl::optional.492", %"class.absl::optional.492", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.437" = type { %"class.base::RefCounted.438" }
%"class.base::RefCounted.438" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.439", %"class.std::__1::unique_ptr.444" }
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.447", %"class.WTF::Vector.439", i32, i32 }
%"class.WTF::Vector.447" = type { %"class.WTF::VectorBuffer.448" }
%"class.WTF::VectorBuffer.448" = type { %"class.WTF::VectorBufferBase.449" }
%"class.WTF::VectorBufferBase.449" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.455 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.456", [4 x i8] }>
%"class.WTF::RefCounted.456" = type { %"class.base::RefCounted.457" }
%"class.base::RefCounted.457" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.458 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.459", [4 x i8] }>
%"class.WTF::RefCounted.459" = type { %"class.base::RefCounted.460" }
%"class.base::RefCounted.460" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.461 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.462" }>
%"class.WTF::RefCounted.462" = type { %"class.base::RefCounted.463" }
%"class.base::RefCounted.463" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.464 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.465 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.466 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.467", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.467" = type { %"class.base::RefCounted.468" }
%"class.base::RefCounted.468" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.469" }
%"class.blink::DataRef.469" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.365", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.471" }
%"class.WTF::RefCounted.471" = type { %"class.base::RefCounted.472" }
%"class.base::RefCounted.472" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.488" = type { %"class.blink::PersistentBase.489" }
%"class.blink::PersistentBase.489" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.458, %"class.blink::Member.335", i32, [4 x i8] }>
%"class.absl::optional.492" = type { %"class.absl::optional_internal::optional_data.493" }
%"class.absl::optional_internal::optional_data.493" = type { %"class.absl::optional_internal::optional_data_base.494" }
%"class.absl::optional_internal::optional_data_base.494" = type { %"class.absl::optional_internal::optional_data_dtor_base.495" }
%"class.absl::optional_internal::optional_data_dtor_base.495" = type { i8, [3 x i8], %union.anon.496 }
%union.anon.496 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.473" = type { %"class.blink::PersistentBase.474" }
%"class.blink::PersistentBase.474" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.477" }
%"class.blink::HeapVector.477" = type { %"class.WTF::Vector.480" }
%"class.WTF::Vector.480" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { %"class.blink::Member.483"*, i32, i32 }
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.497" = type { %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.499", %"class.blink::DataRef.501", %"class.blink::DataRef.505", %"class.blink::DataRef.514", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.533", %"class.std::__1::unique_ptr.544", %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.604", %"class.WTF::Vector.610", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.499" = type { %"class.base::RefCounted.500" }
%"class.base::RefCounted.500" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.501" = type { %class.scoped_refptr.502 }
%class.scoped_refptr.502 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.503", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.503" = type { %"class.base::RefCounted.504" }
%"class.base::RefCounted.504" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.505" = type { %class.scoped_refptr.506 }
%class.scoped_refptr.506 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.507", [4 x i8], %"class.WTF::Vector.509", i8, [7 x i8] }>
%"class.WTF::RefCounted.507" = type { %"class.base::RefCounted.508" }
%"class.base::RefCounted.508" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.509" = type { %"class.WTF::VectorBuffer.510" }
%"class.WTF::VectorBuffer.510" = type { %"class.WTF::VectorBufferBase.511" }
%"class.WTF::VectorBufferBase.511" = type { i32*, i32, i32 }
%"class.blink::DataRef.514" = type { %class.scoped_refptr.515 }
%class.scoped_refptr.515 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.516", [4 x i8], %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.523", %"class.WTF::HashMap.523", %"class.WTF::HashMap.523", %"class.WTF::HashMap.523", %"class.WTF::HashMap.528", %"class.WTF::Vector.439", %"class.WTF::Vector.439", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.516" = type { %"class.base::RefCounted.517" }
%"class.base::RefCounted.517" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"struct.WTF::KeyValuePair.522"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.522" = type { %"class.WTF::String", %"class.WTF::Vector.1395" }
%"class.WTF::Vector.1395" = type { %"class.WTF::VectorBuffer.1396" }
%"class.WTF::VectorBuffer.1396" = type { %"class.WTF::VectorBufferBase.1397" }
%"class.WTF::VectorBufferBase.1397" = type { i64*, i32, i32 }
%"class.WTF::HashMap.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type { i64, %"class.WTF::Vector.610" }
%"class.WTF::HashMap.528" = type { %"class.WTF::HashTable.529" }
%"class.WTF::HashTable.529" = type <{ %"struct.WTF::KeyValuePair.532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.532" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.536" }
%"class.WTF::HashMap.536" = type { %"class.WTF::HashTable.537" }
%"class.WTF::HashTable.537" = type <{ %"struct.WTF::KeyValuePair.540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.540" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1400", %"class.absl::optional.1400", %"class.absl::optional.1400" }
%"class.absl::optional.1400" = type { %"class.absl::optional_internal::optional_data.1401" }
%"class.absl::optional_internal::optional_data.1401" = type { %"class.absl::optional_internal::optional_data_base.1402" }
%"class.absl::optional_internal::optional_data_base.1402" = type { %"class.absl::optional_internal::optional_data_dtor_base.1403" }
%"class.absl::optional_internal::optional_data_dtor_base.1403" = type { i8, %union.anon.1404 }
%union.anon.1404 = type { i32 }
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.344", %"class.WTF::Vector.559", %"class.WTF::Vector.547", %"class.WTF::Vector.564", %"class.WTF::Vector.569", %"class.WTF::Vector.574" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.547", %"class.WTF::Vector.547", %"class.WTF::Vector.552" }
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { %class.scoped_refptr.555*, i32, i32 }
%class.scoped_refptr.555 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.556" }
%"class.base::RefCountedThreadSafe.556" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.559" = type { %"class.WTF::VectorBuffer.560" }
%"class.WTF::VectorBuffer.560" = type { %"class.WTF::VectorBufferBase.561" }
%"class.WTF::VectorBufferBase.561" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.547" = type { %"class.WTF::VectorBuffer.548" }
%"class.WTF::VectorBuffer.548" = type { %"class.WTF::VectorBufferBase.549" }
%"class.WTF::Vector.564" = type { %"class.WTF::VectorBuffer.565" }
%"class.WTF::VectorBuffer.565" = type { %"class.WTF::VectorBufferBase.566" }
%"class.WTF::VectorBufferBase.566" = type { i32*, i32, i32 }
%"class.WTF::Vector.569" = type { %"class.WTF::VectorBuffer.570" }
%"class.WTF::VectorBuffer.570" = type { %"class.WTF::VectorBufferBase.571" }
%"class.WTF::VectorBufferBase.571" = type { i32*, i32, i32 }
%"class.WTF::Vector.574" = type { %"class.WTF::VectorBuffer.575" }
%"class.WTF::VectorBuffer.575" = type { %"class.WTF::VectorBufferBase.576" }
%"class.WTF::VectorBufferBase.576" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.585" }
%"class.WTF::Vector.585" = type { %"class.WTF::VectorBuffer.586" }
%"class.WTF::VectorBuffer.586" = type { %"class.WTF::VectorBufferBase.587" }
%"class.WTF::VectorBufferBase.587" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.596" }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { %"class.blink::Persistent.365"*, i32, i32 }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.365", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.615" }
%"class.WTF::Vector.615" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617" }
%"class.WTF::VectorBufferBase.617" = type { %class.scoped_refptr.618*, i32, i32 }
%class.scoped_refptr.618 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.462", [4 x i8] }>
%"class.blink::Persistent.621" = type { %"class.blink::PersistentBase.622" }
%"class.blink::PersistentBase.622" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.625" }
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.627" = type { %class.scoped_refptr.628 }
%class.scoped_refptr.628 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.629", [4 x i8], %"class.blink::DataRef.631", %"class.blink::DataRef.635", %"class.blink::DataRef.652", %"class.blink::DataRef.670", %"class.blink::DataRef.682", %"class.blink::DataRef.686", %class.scoped_refptr.656, i32, [4 x i8] }>
%"class.WTF::RefCounted.629" = type { %"class.base::RefCounted.630" }
%"class.base::RefCounted.630" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.631" = type { %class.scoped_refptr.632 }
%class.scoped_refptr.632 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.633", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.633" = type { %"class.base::RefCounted.634" }
%"class.base::RefCounted.634" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.635" = type { %class.scoped_refptr.636 }
%class.scoped_refptr.636 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.637", %class.scoped_refptr.639, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.637" = type { %"class.base::RefCounted.638" }
%"class.base::RefCounted.638" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.639 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.640", %"class.std::__1::unique_ptr.646", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.459" }>
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.652" = type { %class.scoped_refptr.653 }
%class.scoped_refptr.653 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.654", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.654" = type { %"class.base::RefCounted.655" }
%"class.base::RefCounted.655" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.656, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.670" = type { %class.scoped_refptr.671 }
%class.scoped_refptr.671 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.672", [4 x i8], %class.scoped_refptr.674, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.672" = type { %"class.base::RefCounted.673" }
%"class.base::RefCounted.673" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.674 = type { %"class.base::RefCountedData.675"* }
%"class.base::RefCountedData.675" = type { %"class.base::RefCountedThreadSafe.676", %"class.WTF::Vector.677" }
%"class.base::RefCountedThreadSafe.676" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.677" = type { %"class.WTF::VectorBuffer.678" }
%"class.WTF::VectorBuffer.678" = type { %"class.WTF::VectorBufferBase.679" }
%"class.WTF::VectorBufferBase.679" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.682" = type { %class.scoped_refptr.683 }
%class.scoped_refptr.683 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.684", %class.scoped_refptr.656, %class.scoped_refptr.656, %class.scoped_refptr.656 }
%"class.WTF::RefCounted.684" = type { %"class.base::RefCounted.685" }
%"class.base::RefCounted.685" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.686" = type { %class.scoped_refptr.687 }
%class.scoped_refptr.687 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.688", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.688" = type { %"class.base::RefCounted.689" }
%"class.base::RefCounted.689" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.656 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.657", %"class.blink::Persistent.659", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.659" = type { %"class.blink::PersistentBase.660" }
%"class.blink::PersistentBase.660" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.327" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.392", %"class.blink::HeapHashMap.663" }
%"class.blink::HeapHashMap.663" = type { %"class.WTF::HashMap.666" }
%"class.WTF::HashMap.666" = type { %"class.WTF::HashTable.667" }
%"class.WTF::HashTable.667" = type <{ %"struct.WTF::KeyValuePair.669"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.669" = type opaque
%"class.blink::DataRef.690" = type { %class.scoped_refptr.691 }
%class.scoped_refptr.691 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.692", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.692" = type { %"class.base::RefCounted.693" }
%"class.base::RefCounted.693" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.696", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.698" = type { %class.scoped_refptr.699 }
%class.scoped_refptr.699 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.700", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.700" = type { %"class.base::RefCounted.701" }
%"class.base::RefCounted.701" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.702" = type { %class.scoped_refptr.703 }
%class.scoped_refptr.703 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.704", %class.scoped_refptr.706 }
%"class.WTF::RefCounted.704" = type { %"class.base::RefCounted.705" }
%"class.base::RefCounted.705" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.706 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.976", %"class.blink::StyleVariables", %class.scoped_refptr.706 }
%"class.WTF::RefCounted.976" = type { %"class.base::RefCounted.977" }
%"class.base::RefCounted.977" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.707" = type { %"class.base::RefCounted.708" }
%"class.base::RefCounted.708" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.712" }
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.WTF::Vector.715"* }
%"class.WTF::Vector.715" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.224 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.723", %"class.WTF::Vector.875", %"class.blink::HeapHashSet.880", %"class.WTF::Vector.875", %"class.blink::HeapVector.887", %"class.blink::HeapVector.894", %"class.blink::HeapHashMap.901", %"class.WTF::HashSet.908", %"class.WTF::HashSet.908", %"class.blink::HeapHashMap.912", %"class.blink::HeapHashMap.912", %"class.blink::HeapHashMap.912", %"class.blink::HeapHashMap.912" }
%"class.blink::HeapVector.723" = type { %"class.WTF::Vector.726" }
%"class.WTF::Vector.726" = type { %"class.WTF::VectorBuffer.727" }
%"class.WTF::VectorBuffer.727" = type { %"class.WTF::VectorBufferBase.728" }
%"class.WTF::VectorBufferBase.728" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.729", %"struct.blink::Timing", %"class.blink::Member.805", i32, %"class.blink::Member.817", %"class.WTF::Vector.574" }
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.752", i8, %"class.absl::optional.733", %"class.absl::optional.800" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.731", %"struct.blink::Timing", %"class.blink::Member.738", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.733", %"class.absl::optional.747", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.742", %"class.absl::optional.742", i8, i8, i8, %"class.absl::optional.733", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.742" = type { %"class.absl::optional_internal::optional_data.743" }
%"class.absl::optional_internal::optional_data.743" = type { %"class.absl::optional_internal::optional_data_base.744" }
%"class.absl::optional_internal::optional_data_base.744" = type { %"class.absl::optional_internal::optional_data_dtor_base.745" }
%"class.absl::optional_internal::optional_data_dtor_base.745" = type { i8, %union.anon.746 }
%union.anon.746 = type { double }
%"class.absl::optional.747" = type { %"class.absl::optional_internal::optional_data.748" }
%"class.absl::optional_internal::optional_data.748" = type { %"class.absl::optional_internal::optional_data_base.749" }
%"class.absl::optional_internal::optional_data_base.749" = type { %"class.absl::optional_internal::optional_data_dtor_base.750" }
%"class.absl::optional_internal::optional_data_dtor_base.750" = type { i8, %union.anon.751 }
%union.anon.751 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.756", %"class.blink::Member.764", %"class.blink::Member.788", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.555, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.756" = type { %"class.WTF::Vector.759" }
%"class.WTF::Vector.759" = type { %"class.WTF::VectorBuffer.760" }
%"class.WTF::VectorBuffer.760" = type { %"class.WTF::VectorBufferBase.761" }
%"class.WTF::VectorBufferBase.761" = type { %"class.blink::Member.762"*, i32, i32 }
%"class.blink::Member.762" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.742", %"class.absl::optional.1375", %class.scoped_refptr.555 }
%"class.absl::optional.1375" = type { %"class.absl::optional_internal::optional_data.1376" }
%"class.absl::optional_internal::optional_data.1376" = type { %"class.absl::optional_internal::optional_data_base.1377" }
%"class.absl::optional_internal::optional_data_base.1377" = type { %"class.absl::optional_internal::optional_data_dtor_base.1378" }
%"class.absl::optional_internal::optional_data_dtor_base.1378" = type { i8, %union.anon.1379 }
%union.anon.1379 = type { i32 }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::HeapHashMap.766"* }
%"class.blink::HeapHashMap.766" = type { %"class.WTF::HashMap.769" }
%"class.WTF::HashMap.769" = type { %"class.WTF::HashTable.770" }
%"class.WTF::HashTable.770" = type <{ %"struct.WTF::KeyValuePair.772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.772" = type { %"class.blink::PropertyHandle", %"class.blink::Member.773" }
%"class.blink::Member.773" = type { %"class.blink::MemberBase.774" }
%"class.blink::MemberBase.774" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.777" }
%"class.blink::HeapVector.777" = type { %"class.WTF::Vector.780" }
%"class.WTF::Vector.780" = type { %"class.WTF::VectorBuffer.781" }
%"class.WTF::VectorBuffer.781" = type { %"class.WTF::VectorBufferBase.782" }
%"class.WTF::VectorBufferBase.782" = type { %"class.blink::Member.783"*, i32, i32 }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.555, i32, [4 x i8] }>
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.792" }
%"class.blink::HeapVector.792" = type { %"class.WTF::Vector.795" }
%"class.WTF::Vector.795" = type { %"class.WTF::VectorBuffer.796" }
%"class.WTF::VectorBuffer.796" = type { %"class.WTF::VectorBufferBase.797" }
%"class.WTF::VectorBufferBase.797" = type { %"class.blink::Member.798"*, i32, i32 }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1368", %class.scoped_refptr.555, double, double, double, double }
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.733" = type { %"class.absl::optional_internal::optional_data.734" }
%"class.absl::optional_internal::optional_data.734" = type { %"class.absl::optional_internal::optional_data_base.735" }
%"class.absl::optional_internal::optional_data_base.735" = type { %"class.absl::optional_internal::optional_data_dtor_base.736" }
%"class.absl::optional_internal::optional_data_dtor_base.736" = type { i8, %union.anon.737 }
%union.anon.737 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.800" = type { %"class.absl::optional_internal::optional_data.801" }
%"class.absl::optional_internal::optional_data.801" = type { %"class.absl::optional_internal::optional_data_base.802" }
%"class.absl::optional_internal::optional_data_base.802" = type { %"class.absl::optional_internal::optional_data_dtor_base.803" }
%"class.absl::optional_internal::optional_data_dtor_base.803" = type { i8, %union.anon.804 }
%union.anon.804 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.733", i32, [4 x i8], %class.scoped_refptr.555, i16, [6 x i8] }>
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.809", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.809" = type { %"class.WTF::Vector.812" }
%"class.WTF::Vector.812" = type { %"class.WTF::VectorBuffer.813" }
%"class.WTF::VectorBuffer.813" = type { %"class.WTF::VectorBufferBase.814" }
%"class.WTF::VectorBufferBase.814" = type { %"class.blink::Member.815"*, i32, i32 }
%"class.blink::Member.815" = type opaque
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.375", i32, [4 x i8], %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.825", %"class.std::__1::unique_ptr.831", %"class.absl::optional.864" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.821" }
%"class.WTF::HashTable.821" = type <{ %"class.blink::Member.823"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.742", %"class.absl::optional.733", %"class.absl::optional.733", %"class.absl::optional.800", %"class.absl::optional.733", i8, [3 x i8], i32, %"class.blink::Member.953", %"class.blink::Member.953", %"class.blink::Member.955", %"class.blink::Member.375", %"class.blink::Member.817", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.957", %"class.blink::Member.957", %"class.blink::Member.957", %"class.std::__1::unique_ptr.959", i8, [3 x i8], i32, %"class.blink::Member.965", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.937" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.925" }
%"class.blink::HeapVector.925" = type { %"class.WTF::Vector.928" }
%"class.WTF::Vector.928" = type { %"class.WTF::VectorBuffer.929" }
%"class.WTF::VectorBuffer.929" = type { %"class.WTF::VectorBufferBase.930", [32 x i8] }
%"class.WTF::VectorBufferBase.930" = type { %"struct.std::__1::pair.931"*, i32, i32 }
%"struct.std::__1::pair.931" = type { %"class.WTF::AtomicString", %"class.blink::Member.932" }
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::HeapVector.934"* }
%"class.blink::HeapVector.934" = type opaque
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.WTF::Vector.940"* }
%"class.WTF::Vector.940" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.944" }
%"class.blink::WeakMember.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.742", %"class.absl::optional.742", double, i8, i32 }
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.969", %"class.std::__1::unique_ptr.970", %"class.blink::Member.823" }
%"class.blink::ThreadState::PrefinalizerRegistration.969" = type { i8 }
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.825" = type { %"class.WTF::HashSet.828" }
%"class.WTF::HashSet.828" = type { %"class.WTF::HashTable.829" }
%"class.WTF::HashTable.829" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.std::__1::unique_ptr.831" = type { %"class.std::__1::__compressed_pair.832" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.834 }
%class.scoped_refptr.834 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.835", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.835" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.836" }
%"class.std::__1::__hash_table.836" = type <{ %"class.std::__1::unique_ptr.837", %"class.std::__1::__compressed_pair.847", %"class.std::__1::__compressed_pair.852", %"class.std::__1::__compressed_pair.856", [4 x i8] }>
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839", %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.std::__1::__hash_node_base.840"** }
%"struct.std::__1::__hash_node_base.840" = type { %"struct.std::__1::__hash_node_base.840"* }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.std::__1::__bucket_list_deallocator.842" }
%"class.std::__1::__bucket_list_deallocator.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.std::__1::__hash_node_base.840" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.864" = type { %"class.absl::optional_internal::optional_data.865" }
%"class.absl::optional_internal::optional_data.865" = type { %"class.absl::optional_internal::optional_data_base.866" }
%"class.absl::optional_internal::optional_data_base.866" = type { %"class.absl::optional_internal::optional_data_dtor_base.867" }
%"class.absl::optional_internal::optional_data_dtor_base.867" = type { i8, %union.anon.868 }
%union.anon.868 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.869" }
%"class.absl::optional.869" = type { %"class.absl::optional_internal::optional_data.870" }
%"class.absl::optional_internal::optional_data.870" = type { %"class.absl::optional_internal::optional_data_base.871" }
%"class.absl::optional_internal::optional_data_base.871" = type { %"class.absl::optional_internal::optional_data_dtor_base.872" }
%"class.absl::optional_internal::optional_data_dtor_base.872" = type { i8, %union.anon.873 }
%union.anon.873 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.880" = type { %"class.WTF::HashSet.883" }
%"class.WTF::HashSet.883" = type { %"class.WTF::HashTable.884" }
%"class.WTF::HashTable.884" = type <{ %"class.blink::Member.886"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.886" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.875" = type { %"class.WTF::VectorBuffer.876" }
%"class.WTF::VectorBuffer.876" = type { %"class.WTF::VectorBufferBase.877" }
%"class.WTF::VectorBufferBase.877" = type { i32*, i32, i32 }
%"class.blink::HeapVector.887" = type { %"class.WTF::Vector.890" }
%"class.WTF::Vector.890" = type { %"class.WTF::VectorBuffer.891" }
%"class.WTF::VectorBuffer.891" = type { %"class.WTF::VectorBufferBase.892" }
%"class.WTF::VectorBufferBase.892" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.823", %"class.blink::Member.729", %"struct.blink::Timing", %"class.blink::Member.805", i32, %"class.blink::Member.817", %"class.WTF::Vector.574" }
%"class.blink::HeapVector.894" = type { %"class.WTF::Vector.897" }
%"class.WTF::Vector.897" = type { %"class.WTF::VectorBuffer.898" }
%"class.WTF::VectorBuffer.898" = type { %"class.WTF::VectorBufferBase.899" }
%"class.WTF::VectorBufferBase.899" = type { %"class.blink::Member.823"*, i32, i32 }
%"class.blink::HeapHashMap.901" = type { %"class.WTF::HashMap.904" }
%"class.WTF::HashMap.904" = type { %"class.WTF::HashTable.905" }
%"class.WTF::HashTable.905" = type <{ %"struct.WTF::KeyValuePair.907"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.907" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1391" }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.224, %class.scoped_refptr.224, %class.scoped_refptr.224, double, %"class.blink::Member.729" }
%"class.WTF::HashSet.908" = type { %"class.WTF::HashTable.909" }
%"class.WTF::HashTable.909" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.912" = type { %"class.WTF::HashMap.915" }
%"class.WTF::HashMap.915" = type { %"class.WTF::HashTable.916" }
%"class.WTF::HashTable.916" = type <{ %"struct.WTF::KeyValuePair.918"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.918" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1381" }
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::HeapVector.1383"* }
%"class.blink::HeapVector.1383" = type { %"class.WTF::Vector.1386" }
%"class.WTF::Vector.1386" = type { %"class.WTF::VectorBuffer.1387" }
%"class.WTF::VectorBuffer.1387" = type { %"class.WTF::VectorBufferBase.1388", [8 x i8] }
%"class.WTF::VectorBufferBase.1388" = type { %"class.blink::Member.1368"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.919", %"class.WTF::HashSet.919", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.919" = type { %"class.WTF::HashTable.920" }
%"class.WTF::HashTable.920" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.blink::InheritedClipChecker"* }
%"class.blink::InheritedClipChecker" = type { %"class.blink::CSSInterpolationType::CSSConversionChecker", %"class.WTF::Vector.677" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.300", %"class.blink::DataRef.423", %"class.blink::DataRef.427", %"class.blink::DataRef.627", %"class.blink::DataRef.690", %"class.blink::DataRef.694", %"class.blink::DataRef.698", %"class.blink::DataRef.702", [20 x i8], [4 x i8] }>
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178", %class.scoped_refptr.184 }
%"class.blink::CSSClipNonInterpolableValue" = type { %"class.blink::NonInterpolableValue.base", %"struct.blink::ClipAutos", [7 x i8] }
%"class.blink::NonInterpolableValue.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.185" }>
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink20InheritedClipChecker6CreateERKNS_13ComputedStyleE = comdat any

$_ZN5blink20CSSInterpolationTypeD2Ev = comdat any

$_ZN5blink24CSSClipInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN5blink20InheritedClipChecker17GetClipLengthListERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS4_18PartitionAllocatorEEE = comdat any

$_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm = comdat any

$_ZN5blink20InheritedClipCheckerD2Ev = comdat any

$_ZN5blink20InheritedClipCheckerD0Ev = comdat any

$_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZNK5blink20InheritedClipChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE = comdat any

$_ZN5blink17InterpolationType17ConversionCheckerD2Ev = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink20NonInterpolableValueD2Ev = comdat any

$_ZN5blink27CSSClipNonInterpolableValueD0Ev = comdat any

$_ZNK5blink27CSSClipNonInterpolableValue7GetTypeEv = comdat any

$_ZN5blink7DataRefINS_17ComputedStyleBase15StyleVisualDataEE6AccessEv = comdat any

$_ZNK5blink9LengthBoxeqERKS0_ = comdat any

$_ZN5blink9LengthBoxaSERKS0_ = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZN5blink22UnderlyingAutosCheckerD0Ev = comdat any

$_ZNK5blink22UnderlyingAutosChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_22UnderlyingAutosCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_20InheritedClipCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZTVN5blink20InheritedClipCheckerE = comdat any

$_ZTVN5blink27CSSClipNonInterpolableValueE = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

$_ZTVN5blink22UnderlyingAutosCheckerE = comdat any

@_ZN5blink27CSSClipNonInterpolableValue12static_type_E = hidden global i8* bitcast (i8** @_ZN5blink27CSSClipNonInterpolableValue12static_type_E to i8*), align 8
@_ZTVN5blink24CSSClipInterpolationTypeE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSClipInterpolationType"*)* @_ZN5blink24CSSClipInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::CSSClipInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink24CSSClipInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::CSSClipInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink24CSSClipInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSClipInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)* @_ZNK5blink24CSSClipInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSClipInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.187"*)* @_ZNK5blink24CSSClipInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSClipInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.187"*)* @_ZNK5blink24CSSClipInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSClipInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.187"*)* @_ZNK5blink24CSSClipInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.187"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSClipInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink24CSSClipInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSClipInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, align 8
@_ZTVN5blink16InterpolableListE = external unnamed_addr constant { [20 x i8*] }, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolableValue, std::__1::default_delete<blink::InterpolableValue> >]\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Length]\00", align 1
@_ZTVN5blink20InheritedClipCheckerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InheritedClipChecker"*)* @_ZN5blink20InheritedClipCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::InheritedClipChecker"*)* @_ZN5blink20InheritedClipCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::InheritedClipChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20InheritedClipChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZTVN5blink27CSSClipNonInterpolableValueE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NonInterpolableValue"*)* @_ZN5blink20NonInterpolableValueD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSClipNonInterpolableValue"*)* @_ZN5blink27CSSClipNonInterpolableValueD0Ev to i8*), i8* bitcast (i8* (%"class.blink::CSSClipNonInterpolableValue"*)* @_ZNK5blink27CSSClipNonInterpolableValue7GetTypeEv to i8*)] }, comdat, align 8
@_ZTVN5blink20CSSInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink22UnderlyingAutosCheckerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType::ConversionChecker"*)* @_ZN5blink17InterpolationType17ConversionCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::UnderlyingAutosChecker"*)* @_ZN5blink22UnderlyingAutosCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::UnderlyingAutosChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink22UnderlyingAutosChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24CSSClipInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSClipInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16), %"class.WTF::Vector.187"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.193", align 8
  %6 = alloca %"class.blink::LengthBox", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::Length"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::Length"*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.blink::Length"*
  %15 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %15, align 8
  %17 = icmp eq %"class.blink::InterpolableValue"* %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %20 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %20, i64 0, i32 2, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %20, i64 0, i32 2, i64 1
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = trunc i32 %25 to i8
  %27 = lshr i32 %25, 8
  %28 = trunc i32 %27 to i8
  %29 = lshr i32 %25, 16
  %30 = trunc i32 %29 to i8
  %31 = lshr i32 %25, 24
  %32 = trunc i32 %31 to i8
  br label %33

33:                                               ; preds = %4, %18
  %34 = phi i8 [ %26, %18 ], [ 0, %4 ]
  %35 = phi i8 [ %28, %18 ], [ 0, %4 ]
  %36 = phi i8 [ %30, %18 ], [ 0, %4 ]
  %37 = phi i8 [ %32, %18 ], [ 0, %4 ]
  %38 = phi i8 [ %22, %18 ], [ 1, %4 ]
  %39 = bitcast %"class.std::__1::unique_ptr.193"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = tail call noalias i8* @malloc(i64 24) #8
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = bitcast i8* %41 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %42, align 8
  %43 = bitcast i8* %40 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22UnderlyingAutosCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 16
  store i8 %38, i8* %44, align 8
  %45 = getelementptr inbounds i8, i8* %40, i64 17
  store i8 %34, i8* %45, align 1
  %46 = getelementptr inbounds i8, i8* %40, i64 18
  store i8 %35, i8* %46, align 2
  %47 = getelementptr inbounds i8, i8* %40, i64 19
  store i8 %36, i8* %47, align 1
  %48 = getelementptr inbounds i8, i8* %40, i64 20
  store i8 %37, i8* %48, align 4
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.193"* %5, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr.193"* %5 to i8**
  store i8* %40, i8** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %65, label %56, !prof !2

56:                                               ; preds = %33
  %57 = ptrtoint i8* %40 to i64
  %58 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %58, align 8
  %60 = zext i32 %52 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %59, i64 %60
  store %"class.blink::UnderlyingAutosChecker"* null, %"class.blink::UnderlyingAutosChecker"** %49, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.190"* %61 to i64*
  store i64 %57, i64* %62, align 8
  %63 = load i32, i32* %51, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %51, align 4
  br label %66

65:                                               ; preds = %33
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_22UnderlyingAutosCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.187"* %3, %"class.std::__1::unique_ptr.193"* nonnull dereferenceable(8) %5) #8
  br label %66

66:                                               ; preds = %56, %65
  %67 = load %"class.blink::UnderlyingAutosChecker"*, %"class.blink::UnderlyingAutosChecker"** %49, align 8
  store %"class.blink::UnderlyingAutosChecker"* null, %"class.blink::UnderlyingAutosChecker"** %49, align 8
  %68 = icmp eq %"class.blink::UnderlyingAutosChecker"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.blink::UnderlyingAutosChecker"* %67 to void (%"class.blink::UnderlyingAutosChecker"*)***
  %71 = load void (%"class.blink::UnderlyingAutosChecker"*)**, void (%"class.blink::UnderlyingAutosChecker"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::UnderlyingAutosChecker"*)*, void (%"class.blink::UnderlyingAutosChecker"*)** %71, i64 1
  %73 = load void (%"class.blink::UnderlyingAutosChecker"*)*, void (%"class.blink::UnderlyingAutosChecker"*)** %72, align 8
  call void %73(%"class.blink::UnderlyingAutosChecker"* nonnull %67) #8
  br label %74

74:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  %75 = icmp eq i8 %38, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #8
  br label %186

78:                                               ; preds = %74
  %79 = bitcast %"class.blink::LengthBox"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #8
  %80 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %6, i64 0, i32 0, i32 2
  %81 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %6, i64 0, i32 1, i32 2
  %82 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %6, i64 0, i32 2, i32 2
  %83 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %6, i64 0, i32 3, i32 2
  %84 = bitcast i64* %7 to i8*
  %85 = bitcast %"class.blink::LengthBox"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #8
  %86 = icmp eq i8 %34, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %78
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 7, i1 false) #8, !alias.scope !3
  br label %93

88:                                               ; preds = %78
  %89 = bitcast i64* %7 to i32*
  store i32 0, i32* %89, align 8, !alias.scope !6
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 1
  store i8 0, i8* %90, align 4, !alias.scope !6
  %91 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  store i8 2, i8* %91, align 1, !alias.scope !6
  %92 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 3
  store i8 0, i8* %92, align 2, !alias.scope !6
  br label %93

93:                                               ; preds = %88, %87
  %94 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #8
  %95 = icmp eq i8 %35, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 7, i1 false) #8, !alias.scope !9
  br label %102

97:                                               ; preds = %93
  %98 = bitcast i64* %9 to i32*
  store i32 0, i32* %98, align 8, !alias.scope !12
  %99 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 1
  store i8 0, i8* %99, align 4, !alias.scope !12
  %100 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  store i8 2, i8* %100, align 1, !alias.scope !12
  %101 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 3
  store i8 0, i8* %101, align 2, !alias.scope !12
  br label %102

102:                                              ; preds = %97, %96
  %103 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #8
  %104 = icmp eq i8 %36, 0
  br i1 %104, label %106, label %105

105:                                              ; preds = %102
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 7, i1 false) #8, !alias.scope !15
  br label %111

106:                                              ; preds = %102
  %107 = bitcast i64* %11 to i32*
  store i32 0, i32* %107, align 8, !alias.scope !18
  %108 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 1
  store i8 0, i8* %108, align 4, !alias.scope !18
  %109 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 2
  store i8 2, i8* %109, align 1, !alias.scope !18
  %110 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 3
  store i8 0, i8* %110, align 2, !alias.scope !18
  br label %111

111:                                              ; preds = %106, %105
  %112 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #8
  %113 = icmp eq i8 %37, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 0, i64 7, i1 false) #8, !alias.scope !21
  br label %120

115:                                              ; preds = %111
  %116 = bitcast i64* %13 to i32*
  store i32 0, i32* %116, align 8, !alias.scope !24
  %117 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 1
  store i8 0, i8* %117, align 4, !alias.scope !24
  %118 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 2
  store i8 2, i8* %118, align 1, !alias.scope !24
  %119 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 3
  store i8 0, i8* %119, align 2, !alias.scope !24
  br label %120

120:                                              ; preds = %115, %114
  %121 = bitcast %"class.blink::LengthBox"* %6 to i64*
  %122 = load i64, i64* %13, align 8
  store i64 %122, i64* %121, align 8
  %123 = and i64 %122, 280375465082880
  %124 = icmp eq i64 %123, 8796093022208
  br i1 %124, label %125, label %127

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %6, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %126) #8
  br label %127

127:                                              ; preds = %125, %120
  %128 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %6, i64 0, i32 1
  %129 = bitcast %"class.blink::Length"* %128 to i64*
  %130 = load i64, i64* %9, align 8
  store i64 %130, i64* %129, align 8
  %131 = and i64 %130, 280375465082880
  %132 = icmp eq i64 %131, 8796093022208
  br i1 %132, label %133, label %134

133:                                              ; preds = %127
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %128) #8
  br label %134

134:                                              ; preds = %133, %127
  %135 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %6, i64 0, i32 2
  %136 = bitcast %"class.blink::Length"* %135 to i64*
  %137 = load i64, i64* %7, align 8
  store i64 %137, i64* %136, align 8
  %138 = and i64 %137, 280375465082880
  %139 = icmp eq i64 %138, 8796093022208
  br i1 %139, label %140, label %141

140:                                              ; preds = %134
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %135) #8
  br label %141

141:                                              ; preds = %140, %134
  %142 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %6, i64 0, i32 3
  %143 = bitcast %"class.blink::Length"* %142 to i64*
  %144 = load i64, i64* %11, align 8
  store i64 %144, i64* %143, align 8
  %145 = and i64 %144, 280375465082880
  %146 = icmp eq i64 %145, 8796093022208
  br i1 %146, label %147, label %148

147:                                              ; preds = %141
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %142) #8
  br label %148

148:                                              ; preds = %141, %147
  %149 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 2
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 8
  br i1 %151, label %152, label %153

152:                                              ; preds = %148
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %14) #8
  br label %153

153:                                              ; preds = %148, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #8
  %154 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 2
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 8
  br i1 %156, label %157, label %158

157:                                              ; preds = %153
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %12) #8
  br label %158

158:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #8
  %159 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %160 = load i8, i8* %159, align 1
  %161 = icmp eq i8 %160, 8
  br i1 %161, label %162, label %163

162:                                              ; preds = %158
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #8
  br label %163

163:                                              ; preds = %158, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #8
  %164 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, 8
  br i1 %166, label %167, label %168

167:                                              ; preds = %163
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #8
  br label %168

168:                                              ; preds = %163, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #8
  call fastcc void @_ZN5blinkL15CreateClipValueERKNS_9LengthBoxEd(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::LengthBox"* nonnull dereferenceable(32) %6, double 1.000000e+00)
  %169 = load i8, i8* %83, align 1
  %170 = icmp eq i8 %169, 8
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %142) #8
  br label %172

172:                                              ; preds = %171, %168
  %173 = load i8, i8* %82, align 1
  %174 = icmp eq i8 %173, 8
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %135) #8
  br label %176

176:                                              ; preds = %175, %172
  %177 = load i8, i8* %81, align 1
  %178 = icmp eq i8 %177, 8
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %128) #8
  br label %180

180:                                              ; preds = %179, %176
  %181 = load i8, i8* %80, align 1
  %182 = icmp eq i8 %181, 8
  br i1 %182, label %183, label %185

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %6, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %184) #8
  br label %185

185:                                              ; preds = %180, %183
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #8
  br label %186

186:                                              ; preds = %185, %76
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL15CreateClipValueERKNS_9LengthBoxEd(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::LengthBox"* dereferenceable(32), double) unnamed_addr #0 {
  %4 = tail call noalias i8* @malloc(i64 24) #8
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = getelementptr inbounds i8, i8* %4, i64 16
  %8 = bitcast i8* %7 to i32*
  %9 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 4) #8
  %10 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %9, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  %11 = ptrtoint i8* %10 to i64
  %12 = bitcast i8* %6 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = lshr i64 %9, 3
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %8, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 20
  %16 = bitcast i8* %15 to i32*
  store i32 4, i32* %16, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #8
  %17 = ptrtoint i8* %4 to i64
  %18 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %3
  %22 = tail call noalias i8* @malloc(i64 24) #8
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = ptrtoint i8* %22 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #8
  br label %31

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2
  %28 = fptrunc double %2 to float
  %29 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %27, float %28) #8
  %30 = ptrtoint %"class.blink::InterpolableLength"* %29 to i64
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %25, %21 ], [ %30, %26 ]
  %33 = bitcast i8* %6 to %"class.WTF::Vector.1352"*
  %34 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %33, i32 0) #8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.178"* %34 to i64*
  store i64 %32, i64* %37, align 8
  %38 = icmp eq %"class.blink::InterpolableValue"* %36, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::InterpolableValue"* %36 to void (%"class.blink::InterpolableValue"*)***
  %41 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %41, i64 1
  %43 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %42, align 8
  tail call void %43(%"class.blink::InterpolableValue"* nonnull %36) #8
  br label %44

44:                                               ; preds = %31, %39
  %45 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1, i32 2
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %44
  %49 = tail call noalias i8* @malloc(i64 24) #8
  %50 = bitcast i8* %49 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 8
  %52 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #8
  br label %58

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1
  %55 = fptrunc double %2 to float
  %56 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %54, float %55) #8
  %57 = ptrtoint %"class.blink::InterpolableLength"* %56 to i64
  br label %58

58:                                               ; preds = %48, %53
  %59 = phi i64 [ %52, %48 ], [ %57, %53 ]
  %60 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %33, i32 1) #8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %61, align 8
  %63 = bitcast %"class.std::__1::unique_ptr.178"* %60 to i64*
  store i64 %59, i64* %63, align 8
  %64 = icmp eq %"class.blink::InterpolableValue"* %62, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.blink::InterpolableValue"* %62 to void (%"class.blink::InterpolableValue"*)***
  %67 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %67, i64 1
  %69 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %68, align 8
  tail call void %69(%"class.blink::InterpolableValue"* nonnull %62) #8
  br label %70

70:                                               ; preds = %58, %65
  %71 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3, i32 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %70
  %75 = tail call noalias i8* @malloc(i64 24) #8
  %76 = bitcast i8* %75 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds i8, i8* %75, i64 8
  %78 = ptrtoint i8* %75 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #8
  br label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3
  %81 = fptrunc double %2 to float
  %82 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %80, float %81) #8
  %83 = ptrtoint %"class.blink::InterpolableLength"* %82 to i64
  br label %84

84:                                               ; preds = %74, %79
  %85 = phi i64 [ %78, %74 ], [ %83, %79 ]
  %86 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %33, i32 2) #8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.178"* %86 to i64*
  store i64 %85, i64* %89, align 8
  %90 = icmp eq %"class.blink::InterpolableValue"* %88, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %84
  %92 = bitcast %"class.blink::InterpolableValue"* %88 to void (%"class.blink::InterpolableValue"*)***
  %93 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %93, i64 1
  %95 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %94, align 8
  tail call void %95(%"class.blink::InterpolableValue"* nonnull %88) #8
  br label %96

96:                                               ; preds = %84, %91
  %97 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0, i32 2
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %105

100:                                              ; preds = %96
  %101 = tail call noalias i8* @malloc(i64 24) #8
  %102 = bitcast i8* %101 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 8
  %104 = ptrtoint i8* %101 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #8
  br label %110

105:                                              ; preds = %96
  %106 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0
  %107 = fptrunc double %2 to float
  %108 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %106, float %107) #8
  %109 = ptrtoint %"class.blink::InterpolableLength"* %108 to i64
  br label %110

110:                                              ; preds = %100, %105
  %111 = phi i64 [ %104, %100 ], [ %109, %105 ]
  %112 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %33, i32 3) #8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %113, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.178"* %112 to i64*
  store i64 %111, i64* %115, align 8
  %116 = icmp eq %"class.blink::InterpolableValue"* %114, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %110
  %118 = bitcast %"class.blink::InterpolableValue"* %114 to void (%"class.blink::InterpolableValue"*)***
  %119 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %119, i64 1
  %121 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %120, align 8
  tail call void %121(%"class.blink::InterpolableValue"* nonnull %114) #8
  br label %122

122:                                              ; preds = %110, %117
  %123 = load i8, i8* %18, align 1
  %124 = icmp eq i8 %123, 0
  %125 = zext i1 %124 to i8
  %126 = load i8, i8* %45, align 1
  %127 = icmp eq i8 %126, 0
  %128 = zext i1 %127 to i8
  %129 = load i8, i8* %71, align 1
  %130 = icmp eq i8 %129, 0
  %131 = zext i1 %130 to i8
  %132 = load i8, i8* %97, align 1
  %133 = icmp eq i8 %132, 0
  %134 = zext i1 %133 to i8
  %135 = tail call noalias i8* @malloc(i64 24) #8
  %136 = getelementptr inbounds i8, i8* %135, i64 8
  %137 = bitcast i8* %136 to i32*
  store i32 1, i32* %137, align 4
  %138 = bitcast i8* %135 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSClipNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %139 = getelementptr inbounds i8, i8* %135, i64 12
  store i8 0, i8* %139, align 4
  %140 = getelementptr inbounds i8, i8* %135, i64 13
  store i8 %125, i8* %140, align 1
  %141 = getelementptr inbounds i8, i8* %135, i64 14
  store i8 %128, i8* %141, align 2
  %142 = getelementptr inbounds i8, i8* %135, i64 15
  store i8 %131, i8* %142, align 1
  %143 = getelementptr inbounds i8, i8* %135, i64 16
  store i8 %134, i8* %143, align 4
  %144 = ptrtoint i8* %135 to i64
  %145 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %17, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %147 = bitcast %class.scoped_refptr.184* %146 to i64*
  store i64 %144, i64* %147, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24CSSClipInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSClipInterpolationType"* nocapture readnone, %"class.blink::StyleResolverState"* nocapture readnone dereferenceable(600), %"class.WTF::Vector.187"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24CSSClipInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSClipInterpolationType"* nocapture readnone, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.187"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.1339", align 8
  %6 = bitcast %"class.std::__1::unique_ptr.1339"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 4, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = tail call %"class.blink::InheritedClipChecker"* @_ZN5blink20InheritedClipChecker6CreateERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %8)
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.1339", %"class.std::__1::unique_ptr.1339"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::InheritedClipChecker"* %9, %"class.blink::InheritedClipChecker"** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %25, label %16, !prof !2

16:                                               ; preds = %4
  %17 = ptrtoint %"class.blink::InheritedClipChecker"* %9 to i64
  %18 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %18, align 8
  %20 = zext i32 %12 to i64
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %19, i64 %20
  store %"class.blink::InheritedClipChecker"* null, %"class.blink::InheritedClipChecker"** %10, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.190"* %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = load i32, i32* %11, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %11, align 4
  br label %26

25:                                               ; preds = %4
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_20InheritedClipCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.187"* %3, %"class.std::__1::unique_ptr.1339"* nonnull dereferenceable(8) %5) #8
  br label %26

26:                                               ; preds = %16, %25
  %27 = load %"class.blink::InheritedClipChecker"*, %"class.blink::InheritedClipChecker"** %10, align 8
  store %"class.blink::InheritedClipChecker"* null, %"class.blink::InheritedClipChecker"** %10, align 8
  %28 = icmp eq %"class.blink::InheritedClipChecker"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::InheritedClipChecker"* %27 to void (%"class.blink::InheritedClipChecker"*)***
  %31 = load void (%"class.blink::InheritedClipChecker"*)**, void (%"class.blink::InheritedClipChecker"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::InheritedClipChecker"*)*, void (%"class.blink::InheritedClipChecker"*)** %31, i64 1
  %33 = load void (%"class.blink::InheritedClipChecker"*)*, void (%"class.blink::InheritedClipChecker"*)** %32, align 8
  call void %33(%"class.blink::InheritedClipChecker"* nonnull %27) #8
  br label %34

34:                                               ; preds = %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %35 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %36 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %38, i64 0, i32 3
  %40 = load i8, i8* %39, align 4
  %41 = and i8 %40, 16
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %34
  %44 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #8
  br label %54

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %38, i64 0, i32 1
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %36, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %50, i64 0, i32 6
  %52 = load float, float* %51, align 8
  %53 = fpext float %52 to double
  call fastcc void @_ZN5blinkL15CreateClipValueERKNS_9LengthBoxEd(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::LengthBox"* dereferenceable(32) %46, double %53)
  br label %54

54:                                               ; preds = %45, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::InheritedClipChecker"* @_ZN5blink20InheritedClipChecker6CreateERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::Vector.677", align 8
  %3 = bitcast %"class.WTF::Vector.677"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %2, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #8
  call void @_ZN5blink20InheritedClipChecker17GetClipLengthListERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS4_18PartitionAllocatorEEE(%"class.blink::ComputedStyle"* dereferenceable(104) %0, %"class.WTF::Vector.677"* nonnull dereferenceable(16) %2)
  %7 = call noalias i8* @malloc(i64 32) #8
  %8 = bitcast i8* %7 to %"class.blink::InheritedClipChecker"*
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %10, align 8
  %11 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20InheritedClipCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 16
  %13 = load i32, i32* %5, align 8
  %14 = bitcast i8* %12 to %"class.blink::Length"**
  store %"class.blink::Length"* null, %"class.blink::Length"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 24
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 8
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %1
  %19 = zext i32 %13 to i64
  %20 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %19) #8
  %21 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast i8* %12 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  %26 = bitcast i8* %21 to %"class.blink::Length"*
  br label %27

27:                                               ; preds = %18, %1
  %28 = phi %"class.blink::Length"* [ null, %1 ], [ %26, %18 ]
  %29 = load i32, i32* %6, align 4
  %30 = getelementptr inbounds i8, i8* %7, i64 28
  %31 = bitcast i8* %30 to i32*
  store i32 %29, i32* %31, align 4
  %32 = load %"class.blink::Length"*, %"class.blink::Length"** %4, align 8
  %33 = zext i32 %29 to i64
  %34 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 %33
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %51, label %36

36:                                               ; preds = %27, %45
  %37 = phi %"class.blink::Length"* [ %46, %45 ], [ %28, %27 ]
  %38 = phi %"class.blink::Length"* [ %47, %45 ], [ %32, %27 ]
  %39 = bitcast %"class.blink::Length"* %38 to i64*
  %40 = bitcast %"class.blink::Length"* %37 to i64*
  %41 = load i64, i64* %39, align 4
  store i64 %41, i64* %40, align 4
  %42 = and i64 %41, 280375465082880
  %43 = icmp eq i64 %42, 8796093022208
  br i1 %43, label %44, label %45

44:                                               ; preds = %36
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %37) #8
  br label %45

45:                                               ; preds = %44, %36
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 1
  %47 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %48 = icmp eq %"class.blink::Length"* %47, %34
  br i1 %48, label %49, label %36

49:                                               ; preds = %45
  %50 = load %"class.blink::Length"*, %"class.blink::Length"** %4, align 8
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi %"class.blink::Length"* [ %50, %49 ], [ %32, %27 ]
  %53 = icmp eq %"class.blink::Length"* %52, null
  br i1 %53, label %75, label %54, !prof !27

54:                                               ; preds = %51
  %55 = bitcast %"class.blink::Length"* %52 to i8*
  %56 = load i32, i32* %6, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %73, label %58, !prof !2

58:                                               ; preds = %54
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 %59
  br label %61

61:                                               ; preds = %67, %58
  %62 = phi %"class.blink::Length"* [ %68, %67 ], [ %52, %58 ]
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %62, i64 0, i32 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 8
  br i1 %65, label %66, label %67

66:                                               ; preds = %61
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %62) #8
  br label %67

67:                                               ; preds = %66, %61
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %62, i64 1
  %69 = icmp eq %"class.blink::Length"* %68, %60
  br i1 %69, label %70, label %61

70:                                               ; preds = %67
  store i32 0, i32* %6, align 4
  %71 = bitcast %"class.WTF::Vector.677"* %2 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %54
  %74 = phi i8* [ %72, %70 ], [ %55, %54 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #8
  store %"class.blink::Length"* null, %"class.blink::Length"** %4, align 8
  br label %75

75:                                               ; preds = %51, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8
  ret %"class.blink::InheritedClipChecker"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24CSSClipInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSClipInterpolationType"* nocapture readnone, %"class.blink::CSSValue"* readonly dereferenceable(3), %"class.blink::StyleResolverState"* nocapture readnone, %"class.WTF::Vector.187"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 5
  %9 = icmp eq %"class.blink::CSSValue"* %2, null
  %10 = or i1 %9, %8
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  br label %235

13:                                               ; preds = %5
  %14 = tail call noalias i8* @malloc(i64 24) #8
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to %"class.std::__1::unique_ptr.178"**
  store %"class.std::__1::unique_ptr.178"* null, %"class.std::__1::unique_ptr.178"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 16
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 4) #8
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast i8* %16 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %19, align 8
  %26 = getelementptr inbounds i8, i8* %14, i64 20
  %27 = bitcast i8* %26 to i32*
  store i32 4, i32* %27, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #8
  %28 = ptrtoint i8* %14 to i64
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %30 = bitcast i8* %29 to %"class.blink::CSSValue"**
  %31 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %31, i64 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp ne i8 %33, 2
  %35 = icmp eq %"class.blink::CSSValue"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %47, label %37

37:                                               ; preds = %13
  %38 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %31, i64 1, i32 1
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 405
  br i1 %41, label %42, label %47

42:                                               ; preds = %37
  %43 = tail call noalias i8* @malloc(i64 24) #8
  %44 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 8
  %46 = ptrtoint i8* %43 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #8
  br label %50

47:                                               ; preds = %37, %13
  %48 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %31) #8
  %49 = ptrtoint %"class.blink::InterpolableLength"* %48 to i64
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi i64 [ %46, %42 ], [ %49, %47 ]
  %52 = bitcast i8* %16 to %"class.WTF::Vector.1352"*
  %53 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %52, i32 0) #8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %54, align 8
  %56 = bitcast %"class.std::__1::unique_ptr.178"* %53 to i64*
  store i64 %51, i64* %56, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %55, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.blink::InterpolableValue"* %55 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  tail call void %62(%"class.blink::InterpolableValue"* nonnull %55) #8
  br label %63

63:                                               ; preds = %50, %58
  %64 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 5, i32 1
  %65 = bitcast i8* %64 to %"class.blink::CSSValue"**
  %66 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %66, i64 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp ne i8 %68, 2
  %70 = icmp eq %"class.blink::CSSValue"* %66, null
  %71 = or i1 %70, %69
  br i1 %71, label %82, label %72

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %66, i64 1, i32 1
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 405
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = tail call noalias i8* @malloc(i64 24) #8
  %79 = bitcast i8* %78 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds i8, i8* %78, i64 8
  %81 = ptrtoint i8* %78 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #8
  br label %85

82:                                               ; preds = %72, %63
  %83 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %66) #8
  %84 = ptrtoint %"class.blink::InterpolableLength"* %83 to i64
  br label %85

85:                                               ; preds = %77, %82
  %86 = phi i64 [ %81, %77 ], [ %84, %82 ]
  %87 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %52, i32 1) #8
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %88, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.178"* %87 to i64*
  store i64 %86, i64* %90, align 8
  %91 = icmp eq %"class.blink::InterpolableValue"* %89, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %85
  %93 = bitcast %"class.blink::InterpolableValue"* %89 to void (%"class.blink::InterpolableValue"*)***
  %94 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %94, i64 1
  %96 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %95, align 8
  tail call void %96(%"class.blink::InterpolableValue"* nonnull %89) #8
  br label %97

97:                                               ; preds = %85, %92
  %98 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 8
  %99 = bitcast %"class.blink::CSSValue"* %98 to %"class.blink::CSSValue"**
  %100 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %100, i64 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp ne i8 %102, 2
  %104 = icmp eq %"class.blink::CSSValue"* %100, null
  %105 = or i1 %104, %103
  br i1 %105, label %116, label %106

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %100, i64 1, i32 1
  %108 = bitcast i8* %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 405
  br i1 %110, label %111, label %116

111:                                              ; preds = %106
  %112 = tail call noalias i8* @malloc(i64 24) #8
  %113 = bitcast i8* %112 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %113, align 8
  %114 = getelementptr inbounds i8, i8* %112, i64 8
  %115 = ptrtoint i8* %112 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #8
  br label %119

116:                                              ; preds = %106, %97
  %117 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %100) #8
  %118 = ptrtoint %"class.blink::InterpolableLength"* %117 to i64
  br label %119

119:                                              ; preds = %111, %116
  %120 = phi i64 [ %115, %111 ], [ %118, %116 ]
  %121 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %52, i32 2) #8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %122, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.178"* %121 to i64*
  store i64 %120, i64* %124, align 8
  %125 = icmp eq %"class.blink::InterpolableValue"* %123, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %119
  %127 = bitcast %"class.blink::InterpolableValue"* %123 to void (%"class.blink::InterpolableValue"*)***
  %128 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %128, i64 1
  %130 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %129, align 8
  tail call void %130(%"class.blink::InterpolableValue"* nonnull %123) #8
  br label %131

131:                                              ; preds = %119, %126
  %132 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 10, i32 2
  %133 = bitcast i8* %132 to %"class.blink::CSSValue"**
  %134 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %134, i64 0, i32 2
  %136 = load i8, i8* %135, align 1
  %137 = icmp ne i8 %136, 2
  %138 = icmp eq %"class.blink::CSSValue"* %134, null
  %139 = or i1 %138, %137
  br i1 %139, label %150, label %140

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %134, i64 1, i32 1
  %142 = bitcast i8* %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 405
  br i1 %144, label %145, label %150

145:                                              ; preds = %140
  %146 = tail call noalias i8* @malloc(i64 24) #8
  %147 = bitcast i8* %146 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds i8, i8* %146, i64 8
  %149 = ptrtoint i8* %146 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false) #8
  br label %153

150:                                              ; preds = %140, %131
  %151 = tail call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %134) #8
  %152 = ptrtoint %"class.blink::InterpolableLength"* %151 to i64
  br label %153

153:                                              ; preds = %145, %150
  %154 = phi i64 [ %149, %145 ], [ %152, %150 ]
  %155 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %52, i32 3) #8
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %155, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %156, align 8
  %158 = bitcast %"class.std::__1::unique_ptr.178"* %155 to i64*
  store i64 %154, i64* %158, align 8
  %159 = icmp eq %"class.blink::InterpolableValue"* %157, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %153
  %161 = bitcast %"class.blink::InterpolableValue"* %157 to void (%"class.blink::InterpolableValue"*)***
  %162 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %162, i64 1
  %164 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %163, align 8
  tail call void %164(%"class.blink::InterpolableValue"* nonnull %157) #8
  br label %165

165:                                              ; preds = %153, %160
  %166 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %30, align 8
  %167 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %166, i64 0, i32 2
  %168 = load i8, i8* %167, align 1
  %169 = icmp ne i8 %168, 2
  %170 = icmp eq %"class.blink::CSSValue"* %166, null
  %171 = or i1 %170, %169
  br i1 %171, label %178, label %172

172:                                              ; preds = %165
  %173 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %166, i64 1, i32 1
  %174 = bitcast i8* %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 405
  %177 = zext i1 %176 to i8
  br label %178

178:                                              ; preds = %165, %172
  %179 = phi i8 [ 0, %165 ], [ %177, %172 ]
  %180 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %65, align 8
  %181 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %180, i64 0, i32 2
  %182 = load i8, i8* %181, align 1
  %183 = icmp ne i8 %182, 2
  %184 = icmp eq %"class.blink::CSSValue"* %180, null
  %185 = or i1 %184, %183
  br i1 %185, label %192, label %186

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %180, i64 1, i32 1
  %188 = bitcast i8* %187 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 405
  %191 = zext i1 %190 to i8
  br label %192

192:                                              ; preds = %178, %186
  %193 = phi i8 [ 0, %178 ], [ %191, %186 ]
  %194 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %99, align 8
  %195 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %194, i64 0, i32 2
  %196 = load i8, i8* %195, align 1
  %197 = icmp ne i8 %196, 2
  %198 = icmp eq %"class.blink::CSSValue"* %194, null
  %199 = or i1 %198, %197
  br i1 %199, label %206, label %200

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %194, i64 1, i32 1
  %202 = bitcast i8* %201 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, 405
  %205 = zext i1 %204 to i8
  br label %206

206:                                              ; preds = %192, %200
  %207 = phi i8 [ 0, %192 ], [ %205, %200 ]
  %208 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %133, align 8
  %209 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %208, i64 0, i32 2
  %210 = load i8, i8* %209, align 1
  %211 = icmp ne i8 %210, 2
  %212 = icmp eq %"class.blink::CSSValue"* %208, null
  %213 = or i1 %212, %211
  br i1 %213, label %220, label %214

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %208, i64 1, i32 1
  %216 = bitcast i8* %215 to i32*
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, 405
  %219 = zext i1 %218 to i8
  br label %220

220:                                              ; preds = %206, %214
  %221 = phi i8 [ 0, %206 ], [ %219, %214 ]
  %222 = tail call noalias i8* @malloc(i64 24) #8
  %223 = getelementptr inbounds i8, i8* %222, i64 8
  %224 = bitcast i8* %223 to i32*
  store i32 1, i32* %224, align 4
  %225 = bitcast i8* %222 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink27CSSClipNonInterpolableValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %225, align 8
  %226 = getelementptr inbounds i8, i8* %222, i64 12
  store i8 0, i8* %226, align 4
  %227 = getelementptr inbounds i8, i8* %222, i64 13
  store i8 %179, i8* %227, align 1
  %228 = getelementptr inbounds i8, i8* %222, i64 14
  store i8 %193, i8* %228, align 2
  %229 = getelementptr inbounds i8, i8* %222, i64 15
  store i8 %207, i8* %229, align 1
  %230 = getelementptr inbounds i8, i8* %222, i64 16
  store i8 %221, i8* %230, align 4
  %231 = ptrtoint i8* %222 to i64
  %232 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %28, i64* %232, align 8
  %233 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %234 = bitcast %class.scoped_refptr.184* %233 to i64*
  store i64 %231, i64* %234, align 8
  br label %235

235:                                              ; preds = %220, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24CSSClipInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSClipInterpolationType"* nocapture readnone, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %5, i64 0, i32 3
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 16
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #8
  br label %21

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %17, i64 0, i32 6
  %19 = load float, float* %18, align 8
  %20 = fpext float %19 to double
  tail call fastcc void @_ZN5blinkL15CreateClipValueERKNS_9LengthBoxEd(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::LengthBox"* dereferenceable(32) %13, double %20)
  br label %21

21:                                               ; preds = %12, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24CSSClipInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias nocapture sret, %"class.blink::CSSClipInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture dereferenceable(16), %"struct.blink::InterpolationValue"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1
  %6 = getelementptr inbounds %class.scoped_refptr.184, %class.scoped_refptr.184* %5, i64 0, i32 0
  %7 = bitcast %class.scoped_refptr.184* %5 to %"class.blink::CSSClipNonInterpolableValue"**
  %8 = load %"class.blink::CSSClipNonInterpolableValue"*, %"class.blink::CSSClipNonInterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1, i32 0
  %10 = bitcast %"class.blink::NonInterpolableValue"** %9 to %"class.blink::CSSClipNonInterpolableValue"**
  %11 = load %"class.blink::CSSClipNonInterpolableValue"*, %"class.blink::CSSClipNonInterpolableValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %8, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1, !range !28
  %14 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %11, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !range !28
  %16 = icmp eq i8 %13, %15
  br i1 %16, label %17, label %41

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %8, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1, !range !28
  %20 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %11, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1, !range !28
  %22 = icmp eq i8 %19, %21
  br i1 %22, label %23, label %41

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %8, i64 0, i32 1, i32 2
  %25 = load i8, i8* %24, align 1, !range !28
  %26 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %11, i64 0, i32 1, i32 2
  %27 = load i8, i8* %26, align 1, !range !28
  %28 = icmp eq i8 %25, %27
  br i1 %28, label %29, label %41

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %8, i64 0, i32 1, i32 3
  %31 = load i8, i8* %30, align 1, !range !28
  %32 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %11, i64 0, i32 1, i32 3
  %33 = load i8, i8* %32, align 1, !range !28
  %34 = icmp eq i8 %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %8, i64 0, i32 1, i32 4
  %37 = load i8, i8* %36, align 1, !range !28
  %38 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %11, i64 0, i32 1, i32 4
  %39 = load i8, i8* %38, align 1, !range !28
  %40 = icmp eq i8 %37, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %35, %4, %17, %23, %29
  %42 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #8
  br label %57

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %44, align 8
  %47 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %47, align 8
  %50 = bitcast %class.scoped_refptr.184* %5 to i64*
  %51 = load i64, i64* %50, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %6, align 8
  %52 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %46, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %54 = bitcast %"class.std::__1::unique_ptr.178"* %53 to i64*
  store i64 %49, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %56 = bitcast %class.scoped_refptr.184* %55 to i64*
  store i64 %51, i64* %56, align 8
  br label %57

57:                                               ; preds = %43, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24CSSClipInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::CSSClipInterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"* %1) #8
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.blink::NonInterpolableValue"** %7 to %"class.blink::CSSClipNonInterpolableValue"**
  %9 = load %"class.blink::CSSClipNonInterpolableValue"*, %"class.blink::CSSClipNonInterpolableValue"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 1, i32 0
  %11 = bitcast %"class.blink::NonInterpolableValue"** %10 to %"class.blink::CSSClipNonInterpolableValue"**
  %12 = load %"class.blink::CSSClipNonInterpolableValue"*, %"class.blink::CSSClipNonInterpolableValue"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %9, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1, !range !28
  %15 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %12, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !range !28
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %18, label %52

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %9, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1, !range !28
  %21 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %12, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1, !range !28
  %23 = icmp eq i8 %20, %22
  br i1 %23, label %24, label %52

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %9, i64 0, i32 1, i32 2
  %26 = load i8, i8* %25, align 1, !range !28
  %27 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %12, i64 0, i32 1, i32 2
  %28 = load i8, i8* %27, align 1, !range !28
  %29 = icmp eq i8 %26, %28
  br i1 %29, label %30, label %52

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %9, i64 0, i32 1, i32 3
  %32 = load i8, i8* %31, align 1, !range !28
  %33 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %12, i64 0, i32 1, i32 3
  %34 = load i8, i8* %33, align 1, !range !28
  %35 = icmp eq i8 %32, %34
  br i1 %35, label %36, label %52

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %9, i64 0, i32 1, i32 4
  %38 = load i8, i8* %37, align 1, !range !28
  %39 = getelementptr inbounds %"class.blink::CSSClipNonInterpolableValue", %"class.blink::CSSClipNonInterpolableValue"* %12, i64 0, i32 1, i32 4
  %40 = load i8, i8* %39, align 1, !range !28
  %41 = icmp eq i8 %38, %40
  br i1 %41, label %42, label %52

42:                                               ; preds = %36
  %43 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #8
  %44 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %46, align 8
  %48 = bitcast %"class.blink::InterpolableValue"* %45 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %49 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %49, i64 14
  %51 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %50, align 8
  tail call void %51(%"class.blink::InterpolableValue"* %45, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %47) #8
  br label %54

52:                                               ; preds = %5, %18, %24, %30, %36
  %53 = getelementptr inbounds %"class.blink::CSSClipInterpolationType", %"class.blink::CSSClipInterpolationType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"* %1, %"class.blink::InterpolationType"* dereferenceable(32) %53, %"struct.blink::InterpolationValue"* dereferenceable(16) %3) #8
  br label %54

54:                                               ; preds = %52, %42
  ret void
}

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZNK5blink20UnderlyingValueOwner5ValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

declare void @_ZN5blink20UnderlyingValueOwner3SetERKNS_17InterpolationTypeERKNS_18InterpolationValueE(%"class.blink::UnderlyingValueOwner"*, %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSClipInterpolationType"* nocapture readnone, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readonly, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::LengthBox", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.blink::Length"*
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.blink::Length"*
  %14 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %2, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 2, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = bitcast %"class.blink::LengthBox"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #8
  %18 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %2, i64 0, i32 2, i64 1
  %20 = load i8, i8* %19, align 1, !range !28
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 7, i1 false) #8, !alias.scope !29
  br label %30

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %25 = bitcast %"class.blink::InterpolableValue"* %24 to %"class.WTF::Vector.1352"*
  %26 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %25, i32 0) #8, !noalias !34
  %27 = bitcast %"class.std::__1::unique_ptr.178"* %26 to %"class.blink::InterpolableLength"**
  %28 = load %"class.blink::InterpolableLength"*, %"class.blink::InterpolableLength"** %27, align 8, !noalias !34
  %29 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 3
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %7, %"class.blink::InterpolableLength"* %28, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %29, i32 0) #8
  br label %30

30:                                               ; preds = %22, %23
  %31 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %2, i64 0, i32 2, i64 2
  %33 = load i8, i8* %32, align 1, !range !28
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 7, i1 false) #8, !alias.scope !35
  br label %43

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %38 = bitcast %"class.blink::InterpolableValue"* %37 to %"class.WTF::Vector.1352"*
  %39 = call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %38, i32 1) #8, !noalias !40
  %40 = bitcast %"class.std::__1::unique_ptr.178"* %39 to %"class.blink::InterpolableLength"**
  %41 = load %"class.blink::InterpolableLength"*, %"class.blink::InterpolableLength"** %40, align 8, !noalias !40
  %42 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 3
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %9, %"class.blink::InterpolableLength"* %41, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %42, i32 0) #8
  br label %43

43:                                               ; preds = %35, %36
  %44 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8
  %45 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %2, i64 0, i32 2, i64 3
  %46 = load i8, i8* %45, align 1, !range !28
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %43
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 7, i1 false) #8, !alias.scope !41
  br label %56

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %51 = bitcast %"class.blink::InterpolableValue"* %50 to %"class.WTF::Vector.1352"*
  %52 = call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %51, i32 2) #8, !noalias !46
  %53 = bitcast %"class.std::__1::unique_ptr.178"* %52 to %"class.blink::InterpolableLength"**
  %54 = load %"class.blink::InterpolableLength"*, %"class.blink::InterpolableLength"** %53, align 8, !noalias !46
  %55 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 3
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %11, %"class.blink::InterpolableLength"* %54, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %55, i32 0) #8
  br label %56

56:                                               ; preds = %48, %49
  %57 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  %58 = getelementptr inbounds [4 x i8], [4 x i8]* %14, i64 1, i64 0
  %59 = load i8, i8* %58, align 1, !range !28
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 7, i1 false) #8, !alias.scope !47
  br label %69

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %64 = bitcast %"class.blink::InterpolableValue"* %63 to %"class.WTF::Vector.1352"*
  %65 = call dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"* %64, i32 3) #8, !noalias !52
  %66 = bitcast %"class.std::__1::unique_ptr.178"* %65 to %"class.blink::InterpolableLength"**
  %67 = load %"class.blink::InterpolableLength"*, %"class.blink::InterpolableLength"** %66, align 8, !noalias !52
  %68 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 3
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %13, %"class.blink::InterpolableLength"* %67, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %68, i32 0) #8
  br label %69

69:                                               ; preds = %61, %62
  %70 = bitcast %"class.blink::LengthBox"* %5 to i64*
  %71 = load i64, i64* %12, align 8
  store i64 %71, i64* %70, align 8
  %72 = and i64 %71, 280375465082880
  %73 = icmp eq i64 %72, 8796093022208
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %5, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %75) #8
  br label %76

76:                                               ; preds = %74, %69
  %77 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %5, i64 0, i32 1
  %78 = bitcast %"class.blink::Length"* %77 to i64*
  %79 = load i64, i64* %8, align 8
  store i64 %79, i64* %78, align 8
  %80 = and i64 %79, 280375465082880
  %81 = icmp eq i64 %80, 8796093022208
  br i1 %81, label %82, label %83

82:                                               ; preds = %76
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %77) #8
  br label %83

83:                                               ; preds = %82, %76
  %84 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %5, i64 0, i32 2
  %85 = bitcast %"class.blink::Length"* %84 to i64*
  %86 = load i64, i64* %6, align 8
  store i64 %86, i64* %85, align 8
  %87 = and i64 %86, 280375465082880
  %88 = icmp eq i64 %87, 8796093022208
  br i1 %88, label %89, label %90

89:                                               ; preds = %83
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %84) #8
  br label %90

90:                                               ; preds = %89, %83
  %91 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %5, i64 0, i32 3
  %92 = bitcast %"class.blink::Length"* %91 to i64*
  %93 = load i64, i64* %10, align 8
  store i64 %93, i64* %92, align 8
  %94 = and i64 %93, 280375465082880
  %95 = icmp eq i64 %94, 8796093022208
  br i1 %95, label %96, label %97

96:                                               ; preds = %90
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %91) #8
  br label %97

97:                                               ; preds = %90, %96
  %98 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 2
  %99 = getelementptr inbounds %"class.blink::DataRef.423", %"class.blink::DataRef.423"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %100, i64 0, i32 3
  %102 = load i8, i8* %101, align 4
  %103 = and i8 %102, 16
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %111, label %105

105:                                              ; preds = %97
  %106 = call %"class.blink::ComputedStyleBase::StyleVisualData"* @_ZN5blink7DataRefINS_17ComputedStyleBase15StyleVisualDataEE6AccessEv(%"class.blink::DataRef.423"* %98) #8
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %106, i64 0, i32 3
  %108 = load i8, i8* %107, align 4
  %109 = and i8 %108, -17
  store i8 %109, i8* %107, align 4
  %110 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %99, align 8
  br label %111

111:                                              ; preds = %105, %97
  %112 = phi %"class.blink::ComputedStyleBase::StyleVisualData"* [ %100, %97 ], [ %110, %105 ]
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %112, i64 0, i32 1
  %114 = call zeroext i1 @_ZNK5blink9LengthBoxeqERKS0_(%"class.blink::LengthBox"* %113, %"class.blink::LengthBox"* nonnull dereferenceable(32) %5) #8
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = call %"class.blink::ComputedStyleBase::StyleVisualData"* @_ZN5blink7DataRefINS_17ComputedStyleBase15StyleVisualDataEE6AccessEv(%"class.blink::DataRef.423"* %98) #8
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %116, i64 0, i32 1
  %118 = call dereferenceable(32) %"class.blink::LengthBox"* @_ZN5blink9LengthBoxaSERKS0_(%"class.blink::LengthBox"* %117, %"class.blink::LengthBox"* nonnull dereferenceable(32) %5) #8
  br label %119

119:                                              ; preds = %111, %115
  %120 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %5, i64 0, i32 3, i32 2
  %121 = load i8, i8* %120, align 1
  %122 = icmp eq i8 %121, 8
  br i1 %122, label %123, label %124

123:                                              ; preds = %119
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %91) #8
  br label %124

124:                                              ; preds = %123, %119
  %125 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %5, i64 0, i32 2, i32 2
  %126 = load i8, i8* %125, align 1
  %127 = icmp eq i8 %126, 8
  br i1 %127, label %128, label %129

128:                                              ; preds = %124
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #8
  br label %129

129:                                              ; preds = %128, %124
  %130 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %5, i64 0, i32 1, i32 2
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %131, 8
  br i1 %132, label %133, label %134

133:                                              ; preds = %129
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %77) #8
  br label %134

134:                                              ; preds = %133, %129
  %135 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %5, i64 0, i32 0, i32 2
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 8
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %5, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %139) #8
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, 8
  br i1 %143, label %144, label %145

144:                                              ; preds = %140
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %13) #8
  br label %145

145:                                              ; preds = %140, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  %146 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 2
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 8
  br i1 %148, label %149, label %150

149:                                              ; preds = %145
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %11) #8
  br label %150

150:                                              ; preds = %145, %149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8
  %151 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %152 = load i8, i8* %151, align 1
  %153 = icmp eq i8 %152, 8
  br i1 %153, label %154, label %155

154:                                              ; preds = %150
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #8
  br label %155

155:                                              ; preds = %150, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %156 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %157 = load i8, i8* %156, align 1
  %158 = icmp eq i8 %157, 8
  br i1 %158, label %159, label %160

159:                                              ; preds = %155
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #8
  br label %160

160:                                              ; preds = %155, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD2Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24CSSClipInterpolationTypeD0Ev(%"class.blink::CSSClipInterpolationType"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSClipInterpolationType", %"class.blink::CSSClipInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSClipInterpolationType", %"class.blink::CSSClipInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSClipInterpolationType", %"class.blink::CSSClipInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSClipInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.187"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.187"* dereferenceable(16) %6) #8
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #8
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.187"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.187"* dereferenceable(16) %6) #8
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #8
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #8
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #8
  %45 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.186"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.186"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #8
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #8
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #8
  %70 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.186", %"class.base::RefCounted.186"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.186"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.186"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #8
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #8
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.187"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.187"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20InheritedClipChecker17GetClipLengthListERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS4_18PartitionAllocatorEEE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::Vector.677"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %4, i64 0, i32 3
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 16
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %97

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %4, i64 0, i32 1, i32 2
  %11 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %30, label %16, !prof !2

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Length"*, %"class.blink::Length"** %17, align 8
  %19 = zext i32 %12 to i64
  %20 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 %19
  %21 = bitcast %"class.blink::Length"* %10 to i64*
  %22 = bitcast %"class.blink::Length"* %20 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 4
  %24 = and i64 %23, 280375465082880
  %25 = icmp eq i64 %24, 8796093022208
  br i1 %25, label %26, label %27

26:                                               ; preds = %16
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %20) #8
  br label %27

27:                                               ; preds = %26, %16
  %28 = load i32, i32* %11, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %11, align 4
  br label %32

30:                                               ; preds = %9
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.677"* %1, %"class.blink::Length"* dereferenceable(8) %10) #8
  %31 = load i32, i32* %11, align 4
  br label %32

32:                                               ; preds = %27, %30
  %33 = phi i32 [ %29, %27 ], [ %31, %30 ]
  %34 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %3, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %34, i64 0, i32 1, i32 1
  %36 = load i32, i32* %13, align 8
  %37 = icmp eq i32 %33, %36
  br i1 %37, label %52, label %38, !prof !2

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %1, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Length"*, %"class.blink::Length"** %39, align 8
  %41 = zext i32 %33 to i64
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %40, i64 %41
  %43 = bitcast %"class.blink::Length"* %35 to i64*
  %44 = bitcast %"class.blink::Length"* %42 to i64*
  %45 = load i64, i64* %43, align 4
  store i64 %45, i64* %44, align 4
  %46 = and i64 %45, 280375465082880
  %47 = icmp eq i64 %46, 8796093022208
  br i1 %47, label %48, label %49

48:                                               ; preds = %38
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %42) #8
  br label %49

49:                                               ; preds = %48, %38
  %50 = load i32, i32* %11, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %11, align 4
  br label %54

52:                                               ; preds = %32
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.677"* %1, %"class.blink::Length"* dereferenceable(8) %35) #8
  %53 = load i32, i32* %11, align 4
  br label %54

54:                                               ; preds = %49, %52
  %55 = phi i32 [ %51, %49 ], [ %53, %52 ]
  %56 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %3, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %56, i64 0, i32 1, i32 3
  %58 = load i32, i32* %13, align 8
  %59 = icmp eq i32 %55, %58
  br i1 %59, label %74, label %60, !prof !2

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Length"*, %"class.blink::Length"** %61, align 8
  %63 = zext i32 %55 to i64
  %64 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %62, i64 %63
  %65 = bitcast %"class.blink::Length"* %57 to i64*
  %66 = bitcast %"class.blink::Length"* %64 to i64*
  %67 = load i64, i64* %65, align 4
  store i64 %67, i64* %66, align 4
  %68 = and i64 %67, 280375465082880
  %69 = icmp eq i64 %68, 8796093022208
  br i1 %69, label %70, label %71

70:                                               ; preds = %60
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %64) #8
  br label %71

71:                                               ; preds = %70, %60
  %72 = load i32, i32* %11, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %11, align 4
  br label %76

74:                                               ; preds = %54
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.677"* %1, %"class.blink::Length"* dereferenceable(8) %57) #8
  %75 = load i32, i32* %11, align 4
  br label %76

76:                                               ; preds = %71, %74
  %77 = phi i32 [ %73, %71 ], [ %75, %74 ]
  %78 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %3, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %78, i64 0, i32 1, i32 0
  %80 = load i32, i32* %13, align 8
  %81 = icmp eq i32 %77, %80
  br i1 %81, label %96, label %82, !prof !2

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %1, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.blink::Length"*, %"class.blink::Length"** %83, align 8
  %85 = zext i32 %77 to i64
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %84, i64 %85
  %87 = bitcast %"class.blink::Length"* %79 to i64*
  %88 = bitcast %"class.blink::Length"* %86 to i64*
  %89 = load i64, i64* %87, align 4
  store i64 %89, i64* %88, align 4
  %90 = and i64 %89, 280375465082880
  %91 = icmp eq i64 %90, 8796093022208
  br i1 %91, label %92, label %93

92:                                               ; preds = %82
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %86) #8
  br label %93

93:                                               ; preds = %92, %82
  %94 = load i32, i32* %11, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %11, align 4
  br label %97

96:                                               ; preds = %76
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.677"* %1, %"class.blink::Length"* dereferenceable(8) %79) #8
  br label %97

97:                                               ; preds = %2, %96, %93
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.677"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  %8 = icmp ugt %"class.blink::Length"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Length"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !27

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::Length"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.677"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::Length"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.677"* %0, i32 %22) #8
  %36 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::Length"* %1 to i64
  %39 = ptrtoint %"class.blink::Length"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !27

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::Length"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.677"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::Length"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.677"* %0, i32 %50) #8
  %64 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::Length"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::Length"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::Length"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 %72
  %74 = bitcast %"class.blink::Length"* %70 to i64*
  %75 = bitcast %"class.blink::Length"* %73 to i64*
  %76 = load i64, i64* %74, align 4
  store i64 %76, i64* %75, align 4
  %77 = and i64 %76, 280375465082880
  %78 = icmp eq i64 %77, 8796093022208
  br i1 %78, label %79, label %80

79:                                               ; preds = %68
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %73) #8
  br label %80

80:                                               ; preds = %68, %79
  %81 = load i32, i32* %3, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.677"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %34

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Length"*, %"class.blink::Length"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.677"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %4, %28
  %15 = phi %"class.blink::Length"* [ %30, %28 ], [ %6, %4 ]
  %16 = phi %"class.blink::Length"* [ %29, %28 ], [ null, %4 ]
  %17 = bitcast %"class.blink::Length"* %15 to i64*
  %18 = bitcast %"class.blink::Length"* %16 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = and i64 %19, 280375465082880
  %21 = icmp eq i64 %20, 8796093022208
  br i1 %21, label %22, label %23

22:                                               ; preds = %14
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %16) #8
  br label %23

23:                                               ; preds = %22, %14
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %15) #8
  br label %28

28:                                               ; preds = %27, %23
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 1
  %31 = icmp eq %"class.blink::Length"* %30, %10
  br i1 %31, label %32, label %14

32:                                               ; preds = %28, %4
  %33 = bitcast %"class.blink::Length"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %33) #8
  br label %77

34:                                               ; preds = %2
  %35 = zext i32 %1 to i64
  %36 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %35) #8
  %37 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #8
  %38 = lshr i64 %36, 3
  %39 = ptrtoint i8* %37 to i64
  %40 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Length"*, %"class.blink::Length"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 %44
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %34
  %48 = bitcast %"class.blink::Length"* %41 to i8*
  br label %72

49:                                               ; preds = %34
  %50 = bitcast i8* %37 to %"class.blink::Length"*
  br label %51

51:                                               ; preds = %49, %65
  %52 = phi %"class.blink::Length"* [ %67, %65 ], [ %41, %49 ]
  %53 = phi %"class.blink::Length"* [ %66, %65 ], [ %50, %49 ]
  %54 = bitcast %"class.blink::Length"* %52 to i64*
  %55 = bitcast %"class.blink::Length"* %53 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 4
  %57 = and i64 %56, 280375465082880
  %58 = icmp eq i64 %57, 8796093022208
  br i1 %58, label %59, label %60

59:                                               ; preds = %51
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %53) #8
  br label %60

60:                                               ; preds = %59, %51
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 0, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %52) #8
  br label %65

65:                                               ; preds = %64, %60
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %53, i64 1
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 1
  %68 = icmp eq %"class.blink::Length"* %67, %45
  br i1 %68, label %69, label %51

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::Vector.677"* %0 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %47, %69
  %73 = phi i8* [ %71, %69 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #8
  %74 = bitcast %"class.WTF::Vector.677"* %0 to i64*
  store atomic i64 %39, i64* %74 monotonic, align 8
  %75 = trunc i64 %38 to i32
  %76 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %75, i32* %76, align 8
  br label %77

77:                                               ; preds = %72, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20InheritedClipCheckerD2Ev(%"class.blink::InheritedClipChecker"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InheritedClipChecker", %"class.blink::InheritedClipChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20InheritedClipCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InheritedClipChecker", %"class.blink::InheritedClipChecker"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Length"*, %"class.blink::Length"** %4, align 8
  %6 = icmp eq %"class.blink::Length"* %5, null
  br i1 %6, label %29, label %7, !prof !27

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::Length"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::InheritedClipChecker", %"class.blink::InheritedClipChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 %13
  br label %15

15:                                               ; preds = %21, %12
  %16 = phi %"class.blink::Length"* [ %22, %21 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %16) #8
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %23 = icmp eq %"class.blink::Length"* %22, %14
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  %25 = bitcast %"class.WTF::Vector.677"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #8
  store %"class.blink::Length"* null, %"class.blink::Length"** %4, align 8
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20InheritedClipCheckerD0Ev(%"class.blink::InheritedClipChecker"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InheritedClipChecker", %"class.blink::InheritedClipChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20InheritedClipCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InheritedClipChecker", %"class.blink::InheritedClipChecker"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Length"*, %"class.blink::Length"** %4, align 8
  %6 = icmp eq %"class.blink::Length"* %5, null
  br i1 %6, label %29, label %7, !prof !27

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::Length"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::InheritedClipChecker", %"class.blink::InheritedClipChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 %13
  br label %15

15:                                               ; preds = %21, %12
  %16 = phi %"class.blink::Length"* [ %22, %21 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %16) #8
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %23 = icmp eq %"class.blink::Length"* %22, %14
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  %25 = bitcast %"class.WTF::Vector.677"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #8
  br label %29

29:                                               ; preds = %1, %27
  %30 = bitcast %"class.blink::InheritedClipChecker"* %0 to i8*
  tail call void @free(i8* %30) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %4 to %"class.blink::StyleResolverState"**
  %6 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %5, align 8
  %7 = bitcast %"class.blink::CSSInterpolationType::CSSConversionChecker"* %0 to i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)***
  %8 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)**, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %8, i64 3
  %10 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::CSSInterpolationType::CSSConversionChecker"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %6, %"struct.blink::InterpolationValue"* dereferenceable(16) %2) #8
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20InheritedClipChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::InheritedClipChecker"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.677", align 8
  %5 = bitcast %"class.WTF::Vector.677"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.677", %"class.WTF::Vector.677"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 4, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  call void @_ZN5blink20InheritedClipChecker17GetClipLengthListERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS4_18PartitionAllocatorEEE(%"class.blink::ComputedStyle"* dereferenceable(104) %9, %"class.WTF::Vector.677"* nonnull dereferenceable(16) %4)
  %10 = getelementptr inbounds %"class.blink::InheritedClipChecker", %"class.blink::InheritedClipChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %7, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %70

14:                                               ; preds = %3
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %70, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::InheritedClipChecker", %"class.blink::InheritedClipChecker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Length"*, %"class.blink::Length"** %17, align 8
  %19 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  %20 = zext i32 %11 to i64
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 %20
  br label %22

22:                                               ; preds = %66, %16
  %23 = phi %"class.blink::Length"* [ %68, %66 ], [ %19, %16 ]
  %24 = phi %"class.blink::Length"* [ %67, %66 ], [ %18, %16 ]
  %25 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %23, i64 0, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %26, %28
  br i1 %29, label %30, label %70

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 1
  %32 = load i8, i8* %31, align 4, !range !28
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %23, i64 0, i32 1
  %34 = load i8, i8* %33, align 4, !range !28
  %35 = icmp eq i8 %32, %34
  br i1 %35, label %36, label %70

36:                                               ; preds = %30
  %37 = icmp eq i8 %26, 12
  br i1 %37, label %66, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 3
  %40 = load i8, i8* %39, align 2, !range !28
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::Length"* %24 to float*
  %44 = load float, float* %43, align 4
  br label %49

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  br label %49

49:                                               ; preds = %45, %42
  %50 = phi float [ %44, %42 ], [ %48, %45 ]
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %23, i64 0, i32 3
  %52 = load i8, i8* %51, align 2, !range !28
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.blink::Length"* %23 to float*
  %56 = load float, float* %55, align 4
  br label %61

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %23, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = sitofp i32 %59 to float
  br label %61

61:                                               ; preds = %57, %54
  %62 = phi float [ %56, %54 ], [ %60, %57 ]
  %63 = fcmp oeq float %50, %62
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %24, %"class.blink::Length"* dereferenceable(8) %23) #8
  br i1 %65, label %66, label %70

66:                                               ; preds = %64, %61, %36
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 1
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %23, i64 1
  %69 = icmp eq %"class.blink::Length"* %67, %21
  br i1 %69, label %70, label %22

70:                                               ; preds = %22, %30, %64, %66, %3, %14
  %71 = phi i1 [ false, %3 ], [ true, %14 ], [ false, %64 ], [ true, %66 ], [ false, %30 ], [ false, %22 ]
  %72 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  %73 = icmp eq %"class.blink::Length"* %72, null
  br i1 %73, label %95, label %74, !prof !27

74:                                               ; preds = %70
  %75 = bitcast %"class.blink::Length"* %72 to i8*
  %76 = load i32, i32* %7, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %93, label %78, !prof !2

78:                                               ; preds = %74
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %72, i64 %79
  br label %81

81:                                               ; preds = %87, %78
  %82 = phi %"class.blink::Length"* [ %88, %87 ], [ %72, %78 ]
  %83 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %82, i64 0, i32 2
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, 8
  br i1 %85, label %86, label %87

86:                                               ; preds = %81
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %82) #8
  br label %87

87:                                               ; preds = %86, %81
  %88 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %82, i64 1
  %89 = icmp eq %"class.blink::Length"* %88, %80
  br i1 %89, label %90, label %81

90:                                               ; preds = %87
  store i32 0, i32* %7, align 4
  %91 = bitcast %"class.WTF::Vector.677"* %4 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %74
  %94 = phi i8* [ %92, %90 ], [ %75, %74 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %94) #8
  store %"class.blink::Length"* null, %"class.blink::Length"** %6, align 8
  br label %95

95:                                               ; preds = %70, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationType17ConversionCheckerD2Ev(%"class.blink::InterpolationType::ConversionChecker"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1352", %"class.WTF::Vector.1352"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1352", %"class.WTF::Vector.1352"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.178"*, %"class.std::__1::unique_ptr.178"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.178"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20NonInterpolableValueD2Ev(%"class.blink::NonInterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27CSSClipNonInterpolableValueD0Ev(%"class.blink::CSSClipNonInterpolableValue"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::CSSClipNonInterpolableValue"* %0 to i8*
  tail call void @free(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink27CSSClipNonInterpolableValue7GetTypeEv(%"class.blink::CSSClipNonInterpolableValue"*) unnamed_addr #0 comdat align 2 {
  %2 = load i8*, i8** @_ZN5blink27CSSClipNonInterpolableValue12static_type_E, align 8
  ret i8* %2
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyleBase::StyleVisualData"* @_ZN5blink7DataRefINS_17ComputedStyleBase15StyleVisualDataEE6AccessEv(%"class.blink::DataRef.423"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DataRef.423", %"class.blink::DataRef.423"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %45, label %7

7:                                                ; preds = %1
  %8 = tail call noalias i8* @malloc(i64 44) #8
  %9 = bitcast i8* %8 to %"class.blink::ComputedStyleBase::StyleVisualData"*
  tail call void @_ZN5blink17ComputedStyleBase15StyleVisualDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleVisualData"* %9, %"class.blink::ComputedStyleBase::StyleVisualData"* dereferenceable(44) %3) #8
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast %"class.blink::DataRef.423"* %0 to i64*
  %12 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %2, align 8
  store i64 %10, i64* %11, align 8
  %13 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %45

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 1, i32 3, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #8
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 1, i32 2, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #8
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 1, i32 1, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #8
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %12, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #8
  br label %43

43:                                               ; preds = %37, %41
  %44 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %12 to i8*
  tail call void @free(i8* %44) #8
  br label %45

45:                                               ; preds = %43, %14, %7, %1
  %46 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %2, align 8
  ret %"class.blink::ComputedStyleBase::StyleVisualData"* %46
}

declare void @_ZN5blink17ComputedStyleBase15StyleVisualDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"* dereferenceable(44)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LengthBoxeqERKS0_(%"class.blink::LengthBox"*, %"class.blink::LengthBox"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %6, %8
  br i1 %9, label %10, label %178

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !28
  %13 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !28
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %16, label %178

16:                                               ; preds = %10
  %17 = icmp eq i8 %6, 12
  br i1 %17, label %46, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0, i32 3
  %20 = load i8, i8* %19, align 2, !range !28
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::LengthBox"* %0 to float*
  %24 = load float, float* %23, align 4
  br label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  br label %29

29:                                               ; preds = %25, %22
  %30 = phi float [ %24, %22 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0, i32 3
  %32 = load i8, i8* %31, align 2, !range !28
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::LengthBox"* %1 to float*
  %36 = load float, float* %35, align 4
  br label %41

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sitofp i32 %39 to float
  br label %41

41:                                               ; preds = %37, %34
  %42 = phi float [ %36, %34 ], [ %40, %37 ]
  %43 = fcmp oeq float %30, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %3, %"class.blink::Length"* dereferenceable(8) %4) #8
  br i1 %45, label %46, label %178

46:                                               ; preds = %16, %41, %44
  %47 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1
  %49 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 1, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %50, %52
  br i1 %53, label %54, label %178

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 4, !range !28
  %57 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 4, !range !28
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %178

60:                                               ; preds = %54
  %61 = icmp eq i8 %50, 12
  br i1 %61, label %90, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 1, i32 3
  %64 = load i8, i8* %63, align 2, !range !28
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.blink::Length"* %47 to float*
  %68 = load float, float* %67, align 4
  br label %73

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %47, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = sitofp i32 %71 to float
  br label %73

73:                                               ; preds = %69, %66
  %74 = phi float [ %68, %66 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1, i32 3
  %76 = load i8, i8* %75, align 2, !range !28
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = bitcast %"class.blink::Length"* %48 to float*
  %80 = load float, float* %79, align 4
  br label %85

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sitofp i32 %83 to float
  br label %85

85:                                               ; preds = %81, %78
  %86 = phi float [ %80, %78 ], [ %84, %81 ]
  %87 = fcmp oeq float %74, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %47, %"class.blink::Length"* dereferenceable(8) %48) #8
  br i1 %89, label %90, label %178

90:                                               ; preds = %60, %85, %88
  %91 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 2
  %92 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2
  %93 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 2, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2, i32 2
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %94, %96
  br i1 %97, label %98, label %178

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 2, i32 1
  %100 = load i8, i8* %99, align 4, !range !28
  %101 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2, i32 1
  %102 = load i8, i8* %101, align 4, !range !28
  %103 = icmp eq i8 %100, %102
  br i1 %103, label %104, label %178

104:                                              ; preds = %98
  %105 = icmp eq i8 %94, 12
  br i1 %105, label %134, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 2, i32 3
  %108 = load i8, i8* %107, align 2, !range !28
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %106
  %111 = bitcast %"class.blink::Length"* %91 to float*
  %112 = load float, float* %111, align 4
  br label %117

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %91, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = sitofp i32 %115 to float
  br label %117

117:                                              ; preds = %113, %110
  %118 = phi float [ %112, %110 ], [ %116, %113 ]
  %119 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2, i32 3
  %120 = load i8, i8* %119, align 2, !range !28
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %117
  %123 = bitcast %"class.blink::Length"* %92 to float*
  %124 = load float, float* %123, align 4
  br label %129

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %92, i64 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = sitofp i32 %127 to float
  br label %129

129:                                              ; preds = %125, %122
  %130 = phi float [ %124, %122 ], [ %128, %125 ]
  %131 = fcmp oeq float %118, %130
  br i1 %131, label %134, label %132

132:                                              ; preds = %129
  %133 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %91, %"class.blink::Length"* dereferenceable(8) %92) #8
  br i1 %133, label %134, label %178

134:                                              ; preds = %104, %129, %132
  %135 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 3
  %136 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3
  %137 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 3, i32 2
  %138 = load i8, i8* %137, align 1
  %139 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %138, %140
  br i1 %141, label %142, label %178

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 3, i32 1
  %144 = load i8, i8* %143, align 4, !range !28
  %145 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3, i32 1
  %146 = load i8, i8* %145, align 4, !range !28
  %147 = icmp eq i8 %144, %146
  br i1 %147, label %148, label %178

148:                                              ; preds = %142
  %149 = icmp eq i8 %138, 12
  br i1 %149, label %178, label %150

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 3, i32 3
  %152 = load i8, i8* %151, align 2, !range !28
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %150
  %155 = bitcast %"class.blink::Length"* %135 to float*
  %156 = load float, float* %155, align 4
  br label %161

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %135, i64 0, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = sitofp i32 %159 to float
  br label %161

161:                                              ; preds = %157, %154
  %162 = phi float [ %156, %154 ], [ %160, %157 ]
  %163 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3, i32 3
  %164 = load i8, i8* %163, align 2, !range !28
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %161
  %167 = bitcast %"class.blink::Length"* %136 to float*
  %168 = load float, float* %167, align 4
  br label %173

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %136, i64 0, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = sitofp i32 %171 to float
  br label %173

173:                                              ; preds = %169, %166
  %174 = phi float [ %168, %166 ], [ %172, %169 ]
  %175 = fcmp oeq float %162, %174
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %135, %"class.blink::Length"* dereferenceable(8) %136) #8
  br label %178

178:                                              ; preds = %90, %98, %46, %54, %2, %10, %176, %173, %148, %142, %134, %132, %88, %44
  %179 = phi i1 [ false, %132 ], [ false, %88 ], [ false, %44 ], [ false, %142 ], [ false, %134 ], [ true, %173 ], [ true, %148 ], [ %177, %176 ], [ false, %10 ], [ false, %2 ], [ false, %54 ], [ false, %46 ], [ false, %98 ], [ false, %90 ]
  ret i1 %179
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::LengthBox"* @_ZN5blink9LengthBoxaSERKS0_(%"class.blink::LengthBox"*, %"class.blink::LengthBox"* dereferenceable(32)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 8
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %8) #8
  br label %9

9:                                                ; preds = %7, %2
  %10 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 8
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %3) #8
  br label %14

14:                                               ; preds = %9, %13
  %15 = bitcast %"class.blink::LengthBox"* %1 to i64*
  %16 = bitcast %"class.blink::LengthBox"* %0 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 4
  %18 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 1, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %24

23:                                               ; preds = %14
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %19) #8
  br label %24

24:                                               ; preds = %23, %14
  %25 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 1, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #8
  br label %29

29:                                               ; preds = %24, %28
  %30 = bitcast %"class.blink::Length"* %19 to i64*
  %31 = bitcast %"class.blink::Length"* %18 to i64*
  %32 = load i64, i64* %30, align 4
  store i64 %32, i64* %31, align 4
  %33 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2
  %35 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 2, i32 2
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 8
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %34) #8
  br label %39

39:                                               ; preds = %38, %29
  %40 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 2, i32 2
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %33) #8
  br label %44

44:                                               ; preds = %39, %43
  %45 = bitcast %"class.blink::Length"* %34 to i64*
  %46 = bitcast %"class.blink::Length"* %33 to i64*
  %47 = load i64, i64* %45, align 4
  store i64 %47, i64* %46, align 4
  %48 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 3
  %49 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3
  %50 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %1, i64 0, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %54

53:                                               ; preds = %44
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %49) #8
  br label %54

54:                                               ; preds = %53, %44
  %55 = getelementptr inbounds %"class.blink::LengthBox", %"class.blink::LengthBox"* %0, i64 0, i32 3, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 8
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #8
  br label %59

59:                                               ; preds = %54, %58
  %60 = bitcast %"class.blink::Length"* %49 to i64*
  %61 = bitcast %"class.blink::Length"* %48 to i64*
  %62 = load i64, i64* %60, align 4
  store i64 %62, i64* %61, align 4
  ret %"class.blink::LengthBox"* %0
}

declare void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* sret, %"class.blink::InterpolableLength"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.178"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1352"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1352", %"class.WTF::Vector.1352"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.1352", %"class.WTF::Vector.1352"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.178"*, %"class.std::__1::unique_ptr.178"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.178"* %26
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #8
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.178"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.184* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #8
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #8
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22UnderlyingAutosCheckerD0Ev(%"class.blink::UnderlyingAutosChecker"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::UnderlyingAutosChecker"* %0 to i8*
  tail call void @free(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22UnderlyingAutosChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::UnderlyingAutosChecker"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %4, align 8
  %6 = icmp eq %"class.blink::InterpolableValue"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %9 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %9, i64 0, i32 2, i64 0
  %11 = load i8, i8* %10, align 1
  %12 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %9, i64 0, i32 2, i64 1
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = trunc i32 %14 to i8
  %16 = lshr i32 %14, 8
  %17 = trunc i32 %16 to i8
  %18 = lshr i32 %14, 16
  %19 = trunc i32 %18 to i8
  %20 = lshr i32 %14, 24
  %21 = trunc i32 %20 to i8
  br label %22

22:                                               ; preds = %3, %7
  %23 = phi i8 [ %15, %7 ], [ 0, %3 ]
  %24 = phi i8 [ %17, %7 ], [ 0, %3 ]
  %25 = phi i8 [ %19, %7 ], [ 0, %3 ]
  %26 = phi i8 [ %21, %7 ], [ 0, %3 ]
  %27 = phi i8 [ %11, %7 ], [ 1, %3 ]
  %28 = getelementptr inbounds %"class.blink::UnderlyingAutosChecker", %"class.blink::UnderlyingAutosChecker"* %0, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !range !28
  %30 = icmp eq i8 %29, %27
  br i1 %30, label %31, label %47

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::UnderlyingAutosChecker", %"class.blink::UnderlyingAutosChecker"* %0, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1, !range !28
  %34 = icmp eq i8 %33, %23
  br i1 %34, label %35, label %47

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::UnderlyingAutosChecker", %"class.blink::UnderlyingAutosChecker"* %0, i64 0, i32 1, i32 2
  %37 = load i8, i8* %36, align 1, !range !28
  %38 = icmp eq i8 %37, %24
  br i1 %38, label %39, label %47

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::UnderlyingAutosChecker", %"class.blink::UnderlyingAutosChecker"* %0, i64 0, i32 1, i32 3
  %41 = load i8, i8* %40, align 1, !range !28
  %42 = icmp eq i8 %41, %25
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::UnderlyingAutosChecker", %"class.blink::UnderlyingAutosChecker"* %0, i64 0, i32 1, i32 4
  %45 = load i8, i8* %44, align 1, !range !28
  %46 = icmp eq i8 %45, %26
  br label %47

47:                                               ; preds = %22, %31, %35, %39, %43
  %48 = phi i1 [ false, %39 ], [ false, %35 ], [ false, %31 ], [ false, %22 ], [ %46, %43 ]
  ret i1 %48
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_22UnderlyingAutosCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.187"*, %"class.std::__1::unique_ptr.193"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %16, align 8
  br i1 %15, label %18, label %45, !prof !27

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.190"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #8
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #8
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.190"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.190"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !27

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #8
  %36 = bitcast %"class.WTF::Vector.187"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #8
  %40 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.190"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.190"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.193"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.193"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::UnderlyingAutosChecker"* null, %"class.blink::UnderlyingAutosChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.190"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_20InheritedClipCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.187"*, %"class.std::__1::unique_ptr.1339"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %16, align 8
  br i1 %15, label %18, label %45, !prof !27

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.190"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #8
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #8
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.190"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.190"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !27

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #8
  %36 = bitcast %"class.WTF::Vector.187"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #8
  %40 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.190"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.190"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1339", %"class.std::__1::unique_ptr.1339"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1339"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::InheritedClipChecker"* null, %"class.blink::InheritedClipChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.190"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink6Length4AutoEv: argument 0"}
!5 = distinct !{!5, !"_ZN5blink6Length4AutoEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink6Length5FixedIiEES0_T_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink6Length4AutoEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink6Length4AutoEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!14 = distinct !{!14, !"_ZN5blink6Length5FixedIiEES0_T_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink6Length4AutoEv: argument 0"}
!17 = distinct !{!17, !"_ZN5blink6Length4AutoEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!20 = distinct !{!20, !"_ZN5blink6Length5FixedIiEES0_T_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN5blink6Length4AutoEv: argument 0"}
!23 = distinct !{!23, !"_ZN5blink6Length4AutoEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!26 = distinct !{!26, !"_ZN5blink6Length5FixedIiEES0_T_"}
!27 = !{!"branch_weights", i32 2000, i32 1}
!28 = !{i8 0, i8 2}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN5blink6Length4AutoEv: argument 0"}
!31 = distinct !{!31, !"_ZN5blink6Length4AutoEv"}
!32 = distinct !{!32, !33, !"_ZZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateEENK3$_0clEbj: argument 0"}
!33 = distinct !{!33, !"_ZZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateEENK3$_0clEbj"}
!34 = !{!32}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN5blink6Length4AutoEv: argument 0"}
!37 = distinct !{!37, !"_ZN5blink6Length4AutoEv"}
!38 = distinct !{!38, !39, !"_ZZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateEENK3$_0clEbj: argument 0"}
!39 = distinct !{!39, !"_ZZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateEENK3$_0clEbj"}
!40 = !{!38}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZN5blink6Length4AutoEv: argument 0"}
!43 = distinct !{!43, !"_ZN5blink6Length4AutoEv"}
!44 = distinct !{!44, !45, !"_ZZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateEENK3$_0clEbj: argument 0"}
!45 = distinct !{!45, !"_ZZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateEENK3$_0clEbj"}
!46 = !{!44}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZN5blink6Length4AutoEv: argument 0"}
!49 = distinct !{!49, !"_ZN5blink6Length4AutoEv"}
!50 = distinct !{!50, !51, !"_ZZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateEENK3$_0clEbj: argument 0"}
!51 = distinct !{!51, !"_ZZNK5blink24CSSClipInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateEENK3$_0clEbj"}
!52 = !{!50}
