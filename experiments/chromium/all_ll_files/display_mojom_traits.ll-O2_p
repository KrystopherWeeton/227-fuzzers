; ModuleID = '../../ui/display/mojom/display_mojom_traits.cc'
source_filename = "../../ui/display/mojom/display_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.display::mojom::internal::Display_Data" = type { %"struct.mojo::internal::StructHeader", i64, %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer", float, i32, i32, i32, %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.1", i32, i32, i8, [3 x i8], i32 }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"struct.mojo::internal::Pointer.1" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.4", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.2"*, %"class.mojo::ScopedHandleBase.2"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.2" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.2"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.6" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.15, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.17", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.14", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.15 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16" }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.22" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.gfx::mojom::internal::DisplayColorSpaces_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.27", %"struct.mojo::internal::Pointer.28", float, [4 x i8], %"struct.mojo::internal::Pointer.29" }
%"struct.mojo::internal::Pointer.27" = type { i64 }
%"struct.mojo::internal::Pointer.28" = type { i64 }
%"struct.mojo::internal::Pointer.29" = type { i64 }

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7display5mojom8RotationENS1_7Display8RotationEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7display5mojom8RotationENS1_7Display8RotationEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 4
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7display5mojom12TouchSupportENS1_7Display12TouchSupportEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7display5mojom12TouchSupportENS1_7Display12TouchSupportEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 3
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7display5mojom20AccelerometerSupportENS1_7Display20AccelerometerSupportEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7display5mojom20AccelerometerSupportENS1_7Display20AccelerometerSupportEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 3
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7display5mojom15DisplayDataViewENS1_7DisplayEE4ReadES3_PS4_(%"class.display::mojom::internal::Display_Data"*, %"class.mojo::Message"*, %"class.display::Display"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 1
  %6 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = bitcast %"struct.mojo::internal::Pointer"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  br i1 %10, label %50, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds i8, i8* %12, i64 16
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %183, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds i8, i8* %12, i64 20
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %183, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds i8, i8* %12, i64 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 1
  %27 = getelementptr inbounds i8, i8* %12, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 1, i32 0, i32 0
  store i32 %26, i32* %30, align 4
  %31 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 1, i32 0, i32 1
  store i32 %29, i32* %31, align 4
  %32 = icmp sgt i32 %26, 0
  %33 = icmp sgt i32 %16, 0
  %34 = and i1 %33, %32
  %35 = sub nuw nsw i32 2147483647, %26
  %36 = icmp ult i32 %35, %16
  %37 = and i1 %36, %34
  %38 = select i1 %37, i32 %35, i32 %16
  %39 = icmp sgt i32 %38, 0
  %40 = select i1 %39, i32 %38, i32 0
  %41 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 1, i32 1, i32 0
  store i32 %40, i32* %41, align 4
  %42 = icmp sgt i32 %29, 0
  %43 = sub nuw nsw i32 2147483647, %29
  %44 = icmp ult i32 %43, %21
  %45 = and i1 %42, %44
  %46 = select i1 %45, i32 %43, i32 %21
  %47 = icmp sgt i32 %46, 0
  %48 = select i1 %47, i32 %46, i32 0
  %49 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 1, i32 1, i32 1
  store i32 %48, i32* %49, align 4
  br label %50

50:                                               ; preds = %3, %23
  %51 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 3
  %52 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %51, i64 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  %55 = bitcast %"struct.mojo::internal::Pointer.0"* %51 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 %53
  br i1 %54, label %72, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds i8, i8* %56, i64 8
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 1
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %183, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %64, align 1
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %183, label %67

67:                                               ; preds = %62
  %68 = icmp sgt i32 %60, 0
  %69 = select i1 %68, i32 %60, i32 0
  %70 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 2, i32 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 2, i32 1
  store i32 %65, i32* %71, align 4
  br label %72

72:                                               ; preds = %50, %67
  %73 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 4
  %74 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %73, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  %77 = bitcast %"struct.mojo::internal::Pointer"* %73 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %75
  br i1 %76, label %116, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds i8, i8* %78, i64 16
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 1
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %183, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds i8, i8* %78, i64 20
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 1
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %183, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds i8, i8* %78, i64 8
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 1
  %93 = getelementptr inbounds i8, i8* %78, i64 12
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 1
  %96 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 3, i32 0, i32 0
  store i32 %92, i32* %96, align 4
  %97 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 3, i32 0, i32 1
  store i32 %95, i32* %97, align 4
  %98 = icmp sgt i32 %92, 0
  %99 = icmp sgt i32 %82, 0
  %100 = and i1 %99, %98
  %101 = sub nuw nsw i32 2147483647, %92
  %102 = icmp ult i32 %101, %82
  %103 = and i1 %102, %100
  %104 = select i1 %103, i32 %101, i32 %82
  %105 = icmp sgt i32 %104, 0
  %106 = select i1 %105, i32 %104, i32 0
  %107 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 3, i32 1, i32 0
  store i32 %106, i32* %107, align 4
  %108 = icmp sgt i32 %95, 0
  %109 = sub nuw nsw i32 2147483647, %95
  %110 = icmp ult i32 %109, %87
  %111 = and i1 %108, %110
  %112 = select i1 %111, i32 %109, i32 %87
  %113 = icmp sgt i32 %112, 0
  %114 = select i1 %113, i32 %112, i32 0
  %115 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 3, i32 1, i32 1
  store i32 %114, i32* %115, align 4
  br label %116

116:                                              ; preds = %72, %89
  %117 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 5
  %118 = bitcast float* %117 to i32*
  %119 = load i32, i32* %118, align 1
  %120 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 4
  %121 = bitcast float* %120 to i32*
  store i32 %119, i32* %121, align 8
  %122 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 6
  %123 = load i32, i32* %122, align 1
  %124 = icmp ult i32 %123, 4
  br i1 %124, label %125, label %183

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 5
  store i32 %123, i32* %126, align 4
  %127 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 7
  %128 = load i32, i32* %127, align 1
  %129 = icmp ult i32 %128, 3
  br i1 %129, label %130, label %183

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 7
  store i32 %128, i32* %131, align 4
  %132 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 8
  %133 = load i32, i32* %132, align 1
  %134 = icmp ult i32 %133, 3
  br i1 %134, label %135, label %183

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 8
  store i32 %133, i32* %136, align 4
  %137 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 9
  %138 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %137, i64 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %139, 0
  %141 = bitcast %"struct.mojo::internal::Pointer.0"* %137 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 %139
  br i1 %140, label %158, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds i8, i8* %142, i64 8
  %145 = bitcast i8* %144 to i32*
  %146 = load i32, i32* %145, align 1
  %147 = icmp slt i32 %146, 0
  br i1 %147, label %183, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds i8, i8* %142, i64 12
  %150 = bitcast i8* %149 to i32*
  %151 = load i32, i32* %150, align 1
  %152 = icmp slt i32 %151, 0
  br i1 %152, label %183, label %153

153:                                              ; preds = %148
  %154 = icmp sgt i32 %146, 0
  %155 = select i1 %154, i32 %146, i32 0
  %156 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 9, i32 0
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 9, i32 1
  store i32 %151, i32* %157, align 4
  br label %158

158:                                              ; preds = %135, %153
  %159 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 10
  %160 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %159, i64 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %169, label %163

163:                                              ; preds = %158
  %164 = bitcast %"struct.mojo::internal::Pointer.1"* %159 to i8*
  %165 = getelementptr inbounds i8, i8* %164, i64 %161
  %166 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 10
  %167 = bitcast i8* %165 to %"class.gfx::mojom::internal::DisplayColorSpaces_Data"*
  %168 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom26DisplayColorSpacesDataViewENS1_18DisplayColorSpacesEE4ReadES3_PS4_(%"class.gfx::mojom::internal::DisplayColorSpaces_Data"* nonnull %167, %"class.mojo::Message"* %1, %"class.gfx::DisplayColorSpaces"* %166) #4
  br i1 %168, label %169, label %183

169:                                              ; preds = %158, %163
  %170 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 11
  %171 = load i32, i32* %170, align 1
  %172 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 11
  store i32 %171, i32* %172, align 8
  %173 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 12
  %174 = load i32, i32* %173, align 1
  %175 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 12
  store i32 %174, i32* %175, align 4
  %176 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 13
  %177 = load i8, i8* %176, align 1
  %178 = and i8 %177, 1
  %179 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 13
  store i8 %178, i8* %179, align 8
  %180 = getelementptr inbounds %"class.display::mojom::internal::Display_Data", %"class.display::mojom::internal::Display_Data"* %0, i64 0, i32 15
  %181 = load i32, i32* %180, align 1
  %182 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 14
  store i32 %181, i32* %182, align 4
  br label %183

183:                                              ; preds = %130, %125, %116, %148, %143, %84, %79, %62, %57, %18, %13, %163, %169
  %184 = phi i1 [ true, %169 ], [ false, %163 ], [ false, %13 ], [ false, %18 ], [ false, %57 ], [ false, %62 ], [ false, %79 ], [ false, %84 ], [ false, %116 ], [ false, %125 ], [ false, %130 ], [ false, %143 ], [ false, %148 ]
  ret i1 %184
}

declare zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom26DisplayColorSpacesDataViewENS1_18DisplayColorSpacesEE4ReadES3_PS4_(%"class.gfx::mojom::internal::DisplayColorSpaces_Data"*, %"class.mojo::Message"*, %"class.gfx::DisplayColorSpaces"*) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
