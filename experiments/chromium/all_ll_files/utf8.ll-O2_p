; ModuleID = '../../third_party/blink/renderer/platform/wtf/text/utf8.cc'
source_filename = "../../third_party/blink/renderer/platform/wtf/text/utf8.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@_ZN3WTF7unicodeL14kFirstByteMarkE = internal unnamed_addr constant [7 x i8] c"\00\00\C0\E0\F0\F8\FC", align 1
@_ZN3WTF7unicodeL16kOffsetsFromUTF8E = internal unnamed_addr constant [6 x i32] [i32 0, i32 12416, i32 925824, i32 63447168, i32 -100130688, i32 -2113396608], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3WTF7unicode19ConvertLatin1ToUTF8EPPKhS2_PPcS4_(i8** nocapture, i8* readnone, i8** nocapture, i8* readnone) local_unnamed_addr #0 {
  %5 = load i8*, i8** %0, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = icmp ult i8* %5, %1
  br i1 %7, label %8, label %36

8:                                                ; preds = %4, %32
  %9 = phi i8* [ %11, %32 ], [ %5, %4 ]
  %10 = phi i8* [ %34, %32 ], [ %6, %4 ]
  %11 = getelementptr inbounds i8, i8* %9, i64 1
  %12 = load i8, i8* %9, align 1
  %13 = icmp sgt i8 %12, -1
  %14 = select i1 %13, i8 1, i8 2
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds i8, i8* %10, i64 %15
  %17 = icmp ugt i8* %16, %3
  br i1 %17, label %36, label %18

18:                                               ; preds = %8
  %19 = zext i8 %14 to i32
  switch i32 %19, label %32 [
    i32 2, label %20
    i32 1, label %25
  ]

20:                                               ; preds = %18
  %21 = and i8 %12, 63
  %22 = or i8 %21, -128
  %23 = getelementptr inbounds i8, i8* %16, i64 -1
  store i8 %22, i8* %23, align 1
  %24 = lshr i8 %12, 6
  br label %25

25:                                               ; preds = %18, %20
  %26 = phi i8* [ %16, %18 ], [ %23, %20 ]
  %27 = phi i8 [ %12, %18 ], [ %24, %20 ]
  %28 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZN3WTF7unicodeL14kFirstByteMarkE, i64 0, i64 %15
  %29 = load i8, i8* %28, align 1
  %30 = or i8 %29, %27
  %31 = getelementptr inbounds i8, i8* %26, i64 -1
  store i8 %30, i8* %31, align 1
  br label %32

32:                                               ; preds = %18, %25
  %33 = phi i8* [ %16, %18 ], [ %31, %25 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %15
  %35 = icmp eq i8* %11, %1
  br i1 %35, label %36, label %8

36:                                               ; preds = %8, %32, %4
  %37 = phi i8* [ %6, %4 ], [ %10, %8 ], [ %34, %32 ]
  %38 = phi i8* [ %5, %4 ], [ %9, %8 ], [ %1, %32 ]
  %39 = phi i32 [ 0, %4 ], [ 2, %8 ], [ 0, %32 ]
  store i8* %38, i8** %0, align 8
  store i8* %37, i8** %2, align 8
  ret i32 %39
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3WTF7unicode18ConvertUTF16ToUTF8EPPKDsS2_PPcS4_b(i16** nocapture, i16* readnone, i8** nocapture, i8* readnone, i1 zeroext) local_unnamed_addr #0 {
  %6 = load i16*, i16** %0, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = icmp ult i16* %6, %1
  br i1 %8, label %9, label %87

9:                                                ; preds = %5, %83
  %10 = phi i16* [ %35, %83 ], [ %6, %5 ]
  %11 = phi i8* [ %85, %83 ], [ %7, %5 ]
  %12 = getelementptr inbounds i16, i16* %10, i64 1
  %13 = load i16, i16* %10, align 2
  %14 = zext i16 %13 to i32
  %15 = and i16 %13, -1024
  %16 = icmp eq i16 %15, -10240
  br i1 %16, label %17, label %30

17:                                               ; preds = %9
  %18 = icmp ult i16* %12, %1
  br i1 %18, label %19, label %87

19:                                               ; preds = %17
  %20 = load i16, i16* %12, align 2
  %21 = and i16 %20, -1024
  %22 = icmp eq i16 %21, -9216
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = zext i16 %20 to i32
  %25 = shl nuw nsw i32 %14, 10
  %26 = add nsw i32 %25, -56613888
  %27 = add nsw i32 %26, %24
  %28 = getelementptr inbounds i16, i16* %10, i64 2
  br label %33

29:                                               ; preds = %19
  br i1 %4, label %87, label %33

30:                                               ; preds = %9
  %31 = icmp eq i16 %15, -9216
  %32 = and i1 %31, %4
  br i1 %32, label %87, label %33

33:                                               ; preds = %29, %23, %30
  %34 = phi i32 [ %14, %30 ], [ %27, %23 ], [ %14, %29 ]
  %35 = phi i16* [ %12, %30 ], [ %28, %23 ], [ %12, %29 ]
  %36 = icmp slt i32 %34, 128
  br i1 %36, label %45, label %37

37:                                               ; preds = %33
  %38 = icmp slt i32 %34, 2048
  br i1 %38, label %45, label %39

39:                                               ; preds = %37
  %40 = icmp slt i32 %34, 65536
  br i1 %40, label %45, label %41

41:                                               ; preds = %39
  %42 = icmp slt i32 %34, 1114112
  %43 = select i1 %42, i32 %34, i32 65533
  %44 = select i1 %42, i8 4, i8 3
  br label %45

45:                                               ; preds = %41, %39, %37, %33
  %46 = phi i32 [ %34, %33 ], [ %34, %37 ], [ %34, %39 ], [ %43, %41 ]
  %47 = phi i8 [ 1, %33 ], [ 2, %37 ], [ 3, %39 ], [ %44, %41 ]
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds i8, i8* %11, i64 %48
  %50 = icmp ugt i8* %49, %3
  br i1 %50, label %87, label %51

51:                                               ; preds = %45
  %52 = zext i8 %47 to i32
  switch i32 %52, label %83 [
    i32 4, label %53
    i32 3, label %59
    i32 2, label %67
    i32 1, label %75
  ]

53:                                               ; preds = %51
  %54 = trunc i32 %46 to i8
  %55 = and i8 %54, 63
  %56 = or i8 %55, -128
  %57 = getelementptr inbounds i8, i8* %49, i64 -1
  store i8 %56, i8* %57, align 1
  %58 = ashr i32 %46, 6
  br label %59

59:                                               ; preds = %51, %53
  %60 = phi i8* [ %49, %51 ], [ %57, %53 ]
  %61 = phi i32 [ %46, %51 ], [ %58, %53 ]
  %62 = trunc i32 %61 to i8
  %63 = and i8 %62, 63
  %64 = or i8 %63, -128
  %65 = getelementptr inbounds i8, i8* %60, i64 -1
  store i8 %64, i8* %65, align 1
  %66 = ashr i32 %61, 6
  br label %67

67:                                               ; preds = %51, %59
  %68 = phi i8* [ %49, %51 ], [ %65, %59 ]
  %69 = phi i32 [ %46, %51 ], [ %66, %59 ]
  %70 = trunc i32 %69 to i8
  %71 = and i8 %70, 63
  %72 = or i8 %71, -128
  %73 = getelementptr inbounds i8, i8* %68, i64 -1
  store i8 %72, i8* %73, align 1
  %74 = ashr i32 %69, 6
  br label %75

75:                                               ; preds = %51, %67
  %76 = phi i8* [ %49, %51 ], [ %73, %67 ]
  %77 = phi i32 [ %46, %51 ], [ %74, %67 ]
  %78 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZN3WTF7unicodeL14kFirstByteMarkE, i64 0, i64 %48
  %79 = load i8, i8* %78, align 1
  %80 = trunc i32 %77 to i8
  %81 = or i8 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 -1
  store i8 %81, i8* %82, align 1
  br label %83

83:                                               ; preds = %51, %75
  %84 = phi i8* [ %49, %51 ], [ %82, %75 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 %48
  %86 = icmp ult i16* %35, %1
  br i1 %86, label %9, label %87

87:                                               ; preds = %83, %17, %30, %45, %29, %5
  %88 = phi i8* [ %7, %5 ], [ %11, %29 ], [ %11, %45 ], [ %11, %30 ], [ %11, %17 ], [ %85, %83 ]
  %89 = phi i16* [ %6, %5 ], [ %10, %29 ], [ %10, %45 ], [ %10, %30 ], [ %10, %17 ], [ %35, %83 ]
  %90 = phi i32 [ 0, %5 ], [ 3, %29 ], [ 2, %45 ], [ 3, %30 ], [ 1, %17 ], [ 0, %83 ]
  store i16* %89, i16** %0, align 8
  store i8* %88, i8** %2, align 8
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3WTF7unicode18ConvertUTF8ToUTF16EPPKcS2_PPDsS4_Pbb(i8** nocapture, i8*, i16** nocapture, i16* readnone, i8*, i1 zeroext) local_unnamed_addr #1 {
  %7 = bitcast i8** %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = load i16*, i16** %2, align 8
  %10 = inttoptr i64 %8 to i8*
  %11 = icmp ult i8* %10, %1
  br i1 %11, label %12, label %143

12:                                               ; preds = %6
  %13 = ptrtoint i8* %1 to i64
  br label %14

14:                                               ; preds = %12, %138
  %15 = phi i8* [ %10, %12 ], [ %141, %138 ]
  %16 = phi i16 [ 0, %12 ], [ %140, %138 ]
  %17 = phi i16* [ %9, %12 ], [ %139, %138 ]
  %18 = phi i64 [ %8, %12 ], [ %75, %138 ]
  %19 = load i8, i8* %15, align 1
  %20 = icmp sgt i8 %19, -1
  br i1 %20, label %35, label %21

21:                                               ; preds = %14
  %22 = sext i8 %19 to i32
  %23 = and i32 %22, 192
  %24 = icmp eq i32 %23, 192
  br i1 %24, label %25, label %35

25:                                               ; preds = %21
  %26 = and i32 %22, 224
  %27 = icmp eq i32 %26, 192
  br i1 %27, label %35, label %28

28:                                               ; preds = %25
  %29 = and i32 %22, 240
  %30 = icmp eq i32 %29, 224
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = and i32 %22, 248
  %33 = icmp eq i32 %32, 240
  %34 = select i1 %33, i32 4, i32 0
  br label %35

35:                                               ; preds = %14, %21, %25, %28, %31
  %36 = phi i32 [ 1, %14 ], [ 0, %21 ], [ 2, %25 ], [ 3, %28 ], [ %34, %31 ]
  %37 = sub i64 %13, %18
  %38 = zext i32 %36 to i64
  %39 = icmp slt i64 %37, %38
  br i1 %39, label %143, label %40

40:                                               ; preds = %35
  %41 = tail call fastcc zeroext i1 @_ZN3WTF7unicodeL11IsLegalUTF8EPKhi(i8* %15, i32 %36)
  br i1 %41, label %42, label %143

42:                                               ; preds = %40
  switch i32 %36, label %74 [
    i32 1, label %66
    i32 2, label %57
    i32 4, label %43
    i32 3, label %48
  ]

43:                                               ; preds = %42
  %44 = getelementptr inbounds i8, i8* %15, i64 1
  %45 = zext i8 %19 to i32
  %46 = shl nuw nsw i32 %45, 6
  %47 = load i8, i8* %44, align 1
  br label %48

48:                                               ; preds = %42, %43
  %49 = phi i8 [ %47, %43 ], [ %19, %42 ]
  %50 = phi i8* [ %44, %43 ], [ %15, %42 ]
  %51 = phi i32 [ %46, %43 ], [ 0, %42 ]
  %52 = getelementptr inbounds i8, i8* %50, i64 1
  %53 = zext i8 %49 to i32
  %54 = add nuw nsw i32 %51, %53
  %55 = shl nsw i32 %54, 6
  %56 = load i8, i8* %52, align 1
  br label %57

57:                                               ; preds = %42, %48
  %58 = phi i8 [ %56, %48 ], [ %19, %42 ]
  %59 = phi i8* [ %52, %48 ], [ %15, %42 ]
  %60 = phi i32 [ %55, %48 ], [ 0, %42 ]
  %61 = getelementptr inbounds i8, i8* %59, i64 1
  %62 = zext i8 %58 to i32
  %63 = add nuw nsw i32 %60, %62
  %64 = shl i32 %63, 6
  %65 = load i8, i8* %61, align 1
  br label %66

66:                                               ; preds = %42, %57
  %67 = phi i8 [ %65, %57 ], [ %19, %42 ]
  %68 = phi i8* [ %61, %57 ], [ %15, %42 ]
  %69 = phi i32 [ %64, %57 ], [ 0, %42 ]
  %70 = getelementptr inbounds i8, i8* %68, i64 1
  %71 = ptrtoint i8* %70 to i64
  %72 = zext i8 %67 to i32
  %73 = add nuw nsw i32 %69, %72
  br label %74

74:                                               ; preds = %42, %66
  %75 = phi i64 [ %18, %42 ], [ %71, %66 ]
  %76 = phi i32 [ 0, %42 ], [ %73, %66 ]
  %77 = add nsw i32 %36, -1
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZN3WTF7unicodeL16kOffsetsFromUTF8E, i64 0, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 %76, %80
  %82 = icmp ult i16* %17, %3
  br i1 %82, label %89, label %83

83:                                               ; preds = %74
  %84 = zext i32 %36 to i64
  %85 = inttoptr i64 %75 to i8*
  %86 = sub nsw i64 0, %84
  %87 = getelementptr inbounds i8, i8* %85, i64 %86
  %88 = ptrtoint i8* %87 to i64
  br label %143

89:                                               ; preds = %74
  %90 = icmp ult i32 %81, 65536
  br i1 %90, label %91, label %108

91:                                               ; preds = %89
  %92 = and i32 %81, -2048
  %93 = icmp eq i32 %92, 55296
  br i1 %93, label %94, label %104

94:                                               ; preds = %91
  br i1 %5, label %95, label %101

95:                                               ; preds = %94
  %96 = zext i32 %36 to i64
  %97 = inttoptr i64 %75 to i8*
  %98 = sub nsw i64 0, %96
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = ptrtoint i8* %99 to i64
  br label %143

101:                                              ; preds = %94
  %102 = getelementptr inbounds i16, i16* %17, i64 1
  store i16 -3, i16* %17, align 2
  %103 = or i16 %16, -3
  br label %138

104:                                              ; preds = %91
  %105 = trunc i32 %81 to i16
  %106 = getelementptr inbounds i16, i16* %17, i64 1
  store i16 %105, i16* %17, align 2
  %107 = or i16 %16, %105
  br label %138

108:                                              ; preds = %89
  %109 = add nsw i32 %81, -65536
  %110 = icmp ult i32 %109, 1048576
  br i1 %110, label %111, label %128

111:                                              ; preds = %108
  %112 = getelementptr inbounds i16, i16* %17, i64 1
  %113 = icmp ult i16* %112, %3
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = zext i32 %36 to i64
  %116 = inttoptr i64 %75 to i8*
  %117 = sub nsw i64 0, %115
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = ptrtoint i8* %118 to i64
  br label %143

120:                                              ; preds = %111
  %121 = lshr i32 %81, 10
  %122 = trunc i32 %121 to i16
  %123 = add nuw nsw i16 %122, -10304
  store i16 %123, i16* %17, align 2
  %124 = trunc i32 %81 to i16
  %125 = and i16 %124, 1023
  %126 = or i16 %125, -9216
  %127 = getelementptr inbounds i16, i16* %17, i64 2
  store i16 %126, i16* %112, align 2
  br label %138

128:                                              ; preds = %108
  br i1 %5, label %129, label %135

129:                                              ; preds = %128
  %130 = zext i32 %36 to i64
  %131 = inttoptr i64 %75 to i8*
  %132 = sub nsw i64 0, %130
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  %134 = ptrtoint i8* %133 to i64
  br label %143

135:                                              ; preds = %128
  %136 = getelementptr inbounds i16, i16* %17, i64 1
  store i16 -3, i16* %17, align 2
  %137 = or i16 %16, -3
  br label %138

138:                                              ; preds = %120, %135, %101, %104
  %139 = phi i16* [ %102, %101 ], [ %106, %104 ], [ %127, %120 ], [ %136, %135 ]
  %140 = phi i16 [ %103, %101 ], [ %107, %104 ], [ -1, %120 ], [ %137, %135 ]
  %141 = inttoptr i64 %75 to i8*
  %142 = icmp ult i8* %141, %1
  br i1 %142, label %14, label %143

143:                                              ; preds = %138, %35, %40, %6, %129, %114, %95, %83
  %144 = phi i16* [ %17, %83 ], [ %17, %129 ], [ %17, %114 ], [ %17, %95 ], [ %9, %6 ], [ %139, %138 ], [ %17, %35 ], [ %17, %40 ]
  %145 = phi i16 [ %16, %83 ], [ %16, %129 ], [ %16, %114 ], [ %16, %95 ], [ 0, %6 ], [ %140, %138 ], [ %16, %35 ], [ %16, %40 ]
  %146 = phi i64 [ %88, %83 ], [ %134, %129 ], [ %119, %114 ], [ %100, %95 ], [ %8, %6 ], [ %75, %138 ], [ %18, %35 ], [ %18, %40 ]
  %147 = phi i32 [ 2, %83 ], [ 3, %129 ], [ 2, %114 ], [ 3, %95 ], [ 0, %6 ], [ 0, %138 ], [ 1, %35 ], [ 3, %40 ]
  store i64 %146, i64* %7, align 8
  store i16* %144, i16** %2, align 8
  %148 = icmp eq i8* %4, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %143
  %150 = icmp ult i16 %145, 128
  %151 = zext i1 %150 to i8
  store i8 %151, i8* %4, align 1
  br label %152

152:                                              ; preds = %143, %149
  ret i32 %147
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN3WTF7unicodeL11IsLegalUTF8EPKhi(i8* nocapture readonly, i32) unnamed_addr #2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds i8, i8* %0, i64 %3
  switch i32 %1, label %44 [
    i32 4, label %7
    i32 3, label %13
    i32 2, label %20
    i32 1, label %5
  ]

5:                                                ; preds = %2
  %6 = load i8, i8* %0, align 1
  br label %37

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %4, i64 -1
  %9 = load i8, i8* %8, align 1
  %10 = icmp sgt i8 %9, -1
  %11 = icmp ugt i8 %9, -65
  %12 = or i1 %10, %11
  br i1 %12, label %44, label %13

13:                                               ; preds = %7, %2
  %14 = phi i8* [ %4, %2 ], [ %8, %7 ]
  %15 = getelementptr inbounds i8, i8* %14, i64 -1
  %16 = load i8, i8* %15, align 1
  %17 = icmp sgt i8 %16, -1
  %18 = icmp ugt i8 %16, -65
  %19 = or i1 %17, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %13, %2
  %21 = phi i8* [ %4, %2 ], [ %15, %13 ]
  %22 = getelementptr inbounds i8, i8* %21, i64 -1
  %23 = load i8, i8* %22, align 1
  %24 = icmp ugt i8 %23, -65
  br i1 %24, label %44, label %25

25:                                               ; preds = %20
  %26 = load i8, i8* %0, align 1
  switch i8 %26, label %35 [
    i8 -32, label %27
    i8 -19, label %29
    i8 -16, label %31
    i8 -12, label %33
  ]

27:                                               ; preds = %25
  %28 = icmp ult i8 %23, -96
  br i1 %28, label %44, label %37

29:                                               ; preds = %25
  %30 = icmp ugt i8 %23, -97
  br i1 %30, label %44, label %37

31:                                               ; preds = %25
  %32 = icmp ult i8 %23, -112
  br i1 %32, label %44, label %37

33:                                               ; preds = %25
  %34 = icmp ugt i8 %23, -113
  br i1 %34, label %44, label %37

35:                                               ; preds = %25
  %36 = icmp sgt i8 %23, -1
  br i1 %36, label %44, label %37

37:                                               ; preds = %5, %27, %29, %31, %33, %35
  %38 = phi i8 [ %6, %5 ], [ -32, %27 ], [ -19, %29 ], [ -16, %31 ], [ -12, %33 ], [ %26, %35 ]
  %39 = icmp slt i8 %38, 0
  %40 = icmp ult i8 %38, -62
  %41 = and i1 %39, %40
  %42 = icmp ult i8 %38, -11
  %43 = xor i1 %41, %42
  ret i1 %43

44:                                               ; preds = %35, %33, %31, %29, %27, %20, %13, %7, %2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3WTF7unicode51CalculateStringHashAndLengthFromUTF8MaskingTop8BitsEPKcS2_RjS3_(i8*, i8*, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 {
  %5 = icmp eq i8* %0, null
  br i1 %5, label %218, label %6

6:                                                ; preds = %4
  %7 = ptrtoint i8* %0 to i64
  store i32 0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  %8 = icmp eq i8* %1, null
  %9 = ptrtoint i8* %1 to i64
  br label %10

10:                                               ; preds = %47, %6
  %11 = phi i16 [ 0, %6 ], [ %49, %47 ]
  %12 = phi i64 [ %7, %6 ], [ %50, %47 ]
  %13 = phi i8 [ 0, %6 ], [ %51, %47 ]
  %14 = phi i32 [ -1640531527, %6 ], [ %52, %47 ]
  %15 = inttoptr i64 %12 to i8*
  %16 = icmp ult i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %10
  br i1 %8, label %18, label %194

18:                                               ; preds = %17
  %19 = load i8, i8* %15, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %194, label %23

21:                                               ; preds = %10
  %22 = load i8, i8* %15, align 1
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i8 [ %22, %21 ], [ %19, %18 ]
  %25 = icmp sgt i8 %24, -1
  br i1 %25, label %26, label %55

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %15, i64 1
  %28 = ptrtoint i8* %27 to i64
  %29 = sext i8 %24 to i16
  %30 = icmp eq i8 %13, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %26
  %32 = zext i16 %11 to i32
  %33 = add i32 %14, %32
  %34 = shl i32 %33, 16
  %35 = zext i16 %29 to i32
  %36 = shl nuw nsw i32 %35, 11
  %37 = xor i32 %34, %33
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 11
  %40 = add i32 %39, %38
  br label %41

41:                                               ; preds = %26, %31
  %42 = phi i16 [ %11, %31 ], [ %29, %26 ]
  %43 = phi i8 [ 0, %31 ], [ 1, %26 ]
  %44 = phi i32 [ %40, %31 ], [ %14, %26 ]
  %45 = load i32, i32* %2, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %2, align 4
  br label %47

47:                                               ; preds = %152, %149, %185, %41
  %48 = phi i32 [ 2, %185 ], [ 1, %41 ], [ 1, %149 ], [ 1, %152 ]
  %49 = phi i16 [ %189, %185 ], [ %42, %41 ], [ %150, %149 ], [ %11, %152 ]
  %50 = phi i64 [ %138, %185 ], [ %28, %41 ], [ %138, %149 ], [ %138, %152 ]
  %51 = phi i8 [ %13, %185 ], [ %43, %41 ], [ 1, %149 ], [ 0, %152 ]
  %52 = phi i32 [ %193, %185 ], [ %44, %41 ], [ %14, %149 ], [ %161, %152 ]
  %53 = load i32, i32* %3, align 4
  %54 = add i32 %53, %48
  store i32 %54, i32* %3, align 4
  br label %10

55:                                               ; preds = %23
  %56 = sext i8 %24 to i32
  %57 = and i32 %56, 192
  %58 = icmp eq i32 %57, 192
  br i1 %58, label %59, label %69

59:                                               ; preds = %55
  %60 = and i32 %56, 224
  %61 = icmp eq i32 %60, 192
  br i1 %61, label %69, label %62

62:                                               ; preds = %59
  %63 = and i32 %56, 240
  %64 = icmp eq i32 %63, 224
  br i1 %64, label %69, label %65

65:                                               ; preds = %62
  %66 = and i32 %56, 248
  %67 = icmp eq i32 %66, 240
  %68 = select i1 %67, i32 4, i32 0
  br label %69

69:                                               ; preds = %55, %59, %62, %65
  %70 = phi i32 [ 0, %55 ], [ 2, %59 ], [ 3, %62 ], [ %68, %65 ]
  %71 = load i32, i32* %2, align 4
  %72 = add i32 %71, %70
  store i32 %72, i32* %2, align 4
  br i1 %8, label %73, label %85

73:                                               ; preds = %69
  %74 = icmp ugt i32 %70, 1
  br i1 %74, label %75, label %89

75:                                               ; preds = %73
  %76 = zext i32 %70 to i64
  br label %79

77:                                               ; preds = %79
  %78 = icmp eq i64 %84, %76
  br i1 %78, label %89, label %79

79:                                               ; preds = %77, %75
  %80 = phi i64 [ 1, %75 ], [ %84, %77 ]
  %81 = getelementptr inbounds i8, i8* %15, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 0
  %84 = add nuw nsw i64 %80, 1
  br i1 %83, label %218, label %77

85:                                               ; preds = %69
  %86 = sub i64 %9, %12
  %87 = zext i32 %70 to i64
  %88 = icmp slt i64 %86, %87
  br i1 %88, label %218, label %89

89:                                               ; preds = %77, %73, %85
  %90 = tail call fastcc zeroext i1 @_ZN3WTF7unicodeL11IsLegalUTF8EPKhi(i8* %15, i32 %70)
  br i1 %90, label %91, label %218

91:                                               ; preds = %89
  switch i32 %70, label %137 [
    i32 6, label %92
    i32 5, label %97
    i32 4, label %105
    i32 3, label %113
    i32 2, label %121
    i32 1, label %129
  ]

92:                                               ; preds = %91
  %93 = getelementptr inbounds i8, i8* %15, i64 1
  %94 = load i8, i8* %15, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 6
  br label %97

97:                                               ; preds = %91, %92
  %98 = phi i8* [ %93, %92 ], [ %15, %91 ]
  %99 = phi i32 [ %96, %92 ], [ 0, %91 ]
  %100 = getelementptr inbounds i8, i8* %98, i64 1
  %101 = load i8, i8* %98, align 1
  %102 = zext i8 %101 to i32
  %103 = add nuw nsw i32 %99, %102
  %104 = shl nsw i32 %103, 6
  br label %105

105:                                              ; preds = %91, %97
  %106 = phi i8* [ %100, %97 ], [ %15, %91 ]
  %107 = phi i32 [ %104, %97 ], [ 0, %91 ]
  %108 = getelementptr inbounds i8, i8* %106, i64 1
  %109 = load i8, i8* %106, align 1
  %110 = zext i8 %109 to i32
  %111 = add nuw nsw i32 %107, %110
  %112 = shl i32 %111, 6
  br label %113

113:                                              ; preds = %91, %105
  %114 = phi i8* [ %108, %105 ], [ %15, %91 ]
  %115 = phi i32 [ %112, %105 ], [ 0, %91 ]
  %116 = getelementptr inbounds i8, i8* %114, i64 1
  %117 = load i8, i8* %114, align 1
  %118 = zext i8 %117 to i32
  %119 = add nuw nsw i32 %115, %118
  %120 = shl i32 %119, 6
  br label %121

121:                                              ; preds = %91, %113
  %122 = phi i8* [ %116, %113 ], [ %15, %91 ]
  %123 = phi i32 [ %120, %113 ], [ 0, %91 ]
  %124 = getelementptr inbounds i8, i8* %122, i64 1
  %125 = load i8, i8* %122, align 1
  %126 = zext i8 %125 to i32
  %127 = add nsw i32 %123, %126
  %128 = shl i32 %127, 6
  br label %129

129:                                              ; preds = %91, %121
  %130 = phi i8* [ %124, %121 ], [ %15, %91 ]
  %131 = phi i32 [ %128, %121 ], [ 0, %91 ]
  %132 = getelementptr inbounds i8, i8* %130, i64 1
  %133 = ptrtoint i8* %132 to i64
  %134 = load i8, i8* %130, align 1
  %135 = zext i8 %134 to i32
  %136 = add nsw i32 %131, %135
  br label %137

137:                                              ; preds = %91, %129
  %138 = phi i64 [ %12, %91 ], [ %133, %129 ]
  %139 = phi i32 [ 0, %91 ], [ %136, %129 ]
  %140 = add nsw i32 %70, -1
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZN3WTF7unicodeL16kOffsetsFromUTF8E, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = sub nsw i32 %139, %143
  %145 = icmp ult i32 %144, 65536
  br i1 %145, label %146, label %162

146:                                              ; preds = %137
  %147 = and i32 %144, -2048
  %148 = icmp eq i32 %147, 55296
  br i1 %148, label %218, label %149

149:                                              ; preds = %146
  %150 = trunc i32 %144 to i16
  %151 = icmp eq i8 %13, 0
  br i1 %151, label %47, label %152

152:                                              ; preds = %149
  %153 = zext i16 %11 to i32
  %154 = add i32 %14, %153
  %155 = shl i32 %154, 16
  %156 = shl i32 %144, 11
  %157 = and i32 %156, 134215680
  %158 = xor i32 %155, %154
  %159 = xor i32 %158, %157
  %160 = lshr i32 %159, 11
  %161 = add i32 %160, %159
  br label %47

162:                                              ; preds = %137
  %163 = add nsw i32 %144, -65536
  %164 = icmp ult i32 %163, 1048576
  br i1 %164, label %165, label %218

165:                                              ; preds = %162
  %166 = lshr i32 %144, 10
  %167 = trunc i32 %166 to i16
  %168 = add nuw nsw i16 %167, -10304
  %169 = trunc i32 %144 to i16
  %170 = and i16 %169, 1023
  %171 = or i16 %170, -9216
  %172 = icmp eq i8 %13, 0
  br i1 %172, label %179, label %173

173:                                              ; preds = %165
  %174 = zext i16 %11 to i32
  %175 = add i32 %14, %174
  %176 = shl i32 %175, 16
  %177 = zext i16 %168 to i32
  %178 = shl nuw nsw i32 %177, 11
  br label %185

179:                                              ; preds = %165
  %180 = zext i16 %168 to i32
  %181 = add i32 %14, %180
  %182 = shl i32 %181, 16
  %183 = zext i16 %171 to i32
  %184 = shl nuw nsw i32 %183, 11
  br label %185

185:                                              ; preds = %173, %179
  %186 = phi i32 [ %175, %173 ], [ %184, %179 ]
  %187 = phi i32 [ %176, %173 ], [ %181, %179 ]
  %188 = phi i32 [ %178, %173 ], [ %182, %179 ]
  %189 = phi i16 [ %171, %173 ], [ %11, %179 ]
  %190 = xor i32 %187, %186
  %191 = xor i32 %190, %188
  %192 = lshr i32 %191, 11
  %193 = add i32 %192, %191
  br label %47

194:                                              ; preds = %18, %17
  %195 = icmp eq i8 %13, 0
  br i1 %195, label %203, label %196

196:                                              ; preds = %194
  %197 = zext i16 %11 to i32
  %198 = add i32 %14, %197
  %199 = shl i32 %198, 11
  %200 = xor i32 %199, %198
  %201 = lshr i32 %200, 17
  %202 = add i32 %201, %200
  br label %203

203:                                              ; preds = %194, %196
  %204 = phi i32 [ %202, %196 ], [ %14, %194 ]
  %205 = shl i32 %204, 3
  %206 = xor i32 %205, %204
  %207 = lshr i32 %206, 5
  %208 = add i32 %207, %206
  %209 = shl i32 %208, 2
  %210 = xor i32 %209, %208
  %211 = lshr i32 %210, 15
  %212 = add i32 %211, %210
  %213 = shl i32 %212, 10
  %214 = xor i32 %213, %212
  %215 = and i32 %214, 16777215
  %216 = icmp eq i32 %215, 0
  %217 = select i1 %216, i32 8388608, i32 %215
  br label %218

218:                                              ; preds = %162, %146, %89, %85, %79, %203, %4
  %219 = phi i32 [ 0, %4 ], [ %217, %203 ], [ 0, %79 ], [ 0, %85 ], [ 0, %89 ], [ 0, %146 ], [ 0, %162 ]
  ret i32 %219
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3WTF7unicode18EqualUTF16WithUTF8EPKDsS2_PKcS4_(i16* readonly, i16* readnone, i8*, i8*) local_unnamed_addr #2 {
  %5 = icmp ult i8* %2, %3
  br i1 %5, label %6, label %111

6:                                                ; preds = %4
  %7 = ptrtoint i8* %3 to i64
  br label %8

8:                                                ; preds = %20, %6
  %9 = phi i16* [ %0, %6 ], [ %22, %20 ]
  %10 = phi i8* [ %2, %6 ], [ %21, %20 ]
  %11 = load i8, i8* %10, align 1
  %12 = icmp sgt i8 %11, -1
  br i1 %12, label %13, label %24

13:                                               ; preds = %8
  %14 = getelementptr inbounds i16, i16* %9, i64 1
  %15 = load i16, i16* %9, align 2
  %16 = zext i16 %15 to i32
  %17 = getelementptr inbounds i8, i8* %10, i64 1
  %18 = sext i8 %11 to i32
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %114

20:                                               ; preds = %103, %89, %13
  %21 = phi i8* [ %17, %13 ], [ %78, %103 ], [ %78, %89 ]
  %22 = phi i16* [ %14, %13 ], [ %105, %103 ], [ %90, %89 ]
  %23 = icmp ult i8* %21, %3
  br i1 %23, label %8, label %111

24:                                               ; preds = %8
  %25 = sext i8 %11 to i32
  %26 = and i32 %25, 192
  %27 = icmp eq i32 %26, 192
  br i1 %27, label %28, label %38

28:                                               ; preds = %24
  %29 = and i32 %25, 224
  %30 = icmp eq i32 %29, 192
  br i1 %30, label %38, label %31

31:                                               ; preds = %28
  %32 = and i32 %25, 240
  %33 = icmp eq i32 %32, 224
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = and i32 %25, 248
  %36 = icmp eq i32 %35, 240
  %37 = select i1 %36, i32 4, i32 0
  br label %38

38:                                               ; preds = %34, %31, %28, %24
  %39 = phi i32 [ 0, %24 ], [ 2, %28 ], [ 3, %31 ], [ %37, %34 ]
  %40 = ptrtoint i8* %10 to i64
  %41 = sub i64 %7, %40
  %42 = zext i32 %39 to i64
  %43 = icmp slt i64 %41, %42
  br i1 %43, label %114, label %44

44:                                               ; preds = %38
  %45 = tail call fastcc zeroext i1 @_ZN3WTF7unicodeL11IsLegalUTF8EPKhi(i8* %10, i32 %39) #3
  br i1 %45, label %46, label %114

46:                                               ; preds = %44
  switch i32 %39, label %77 [
    i32 1, label %70
    i32 2, label %61
    i32 4, label %47
    i32 3, label %52
  ]

47:                                               ; preds = %46
  %48 = getelementptr inbounds i8, i8* %10, i64 1
  %49 = zext i8 %11 to i32
  %50 = shl nuw nsw i32 %49, 6
  %51 = load i8, i8* %48, align 1
  br label %52

52:                                               ; preds = %47, %46
  %53 = phi i8 [ %51, %47 ], [ %11, %46 ]
  %54 = phi i8* [ %48, %47 ], [ %10, %46 ]
  %55 = phi i32 [ %50, %47 ], [ 0, %46 ]
  %56 = getelementptr inbounds i8, i8* %54, i64 1
  %57 = zext i8 %53 to i32
  %58 = add nuw nsw i32 %55, %57
  %59 = shl nsw i32 %58, 6
  %60 = load i8, i8* %56, align 1
  br label %61

61:                                               ; preds = %52, %46
  %62 = phi i8 [ %60, %52 ], [ %11, %46 ]
  %63 = phi i8* [ %56, %52 ], [ %10, %46 ]
  %64 = phi i32 [ %59, %52 ], [ 0, %46 ]
  %65 = getelementptr inbounds i8, i8* %63, i64 1
  %66 = zext i8 %62 to i32
  %67 = add nuw nsw i32 %64, %66
  %68 = shl i32 %67, 6
  %69 = load i8, i8* %65, align 1
  br label %70

70:                                               ; preds = %61, %46
  %71 = phi i8 [ %69, %61 ], [ %11, %46 ]
  %72 = phi i8* [ %65, %61 ], [ %10, %46 ]
  %73 = phi i32 [ %68, %61 ], [ 0, %46 ]
  %74 = getelementptr inbounds i8, i8* %72, i64 1
  %75 = zext i8 %71 to i32
  %76 = add nuw nsw i32 %73, %75
  br label %77

77:                                               ; preds = %70, %46
  %78 = phi i8* [ %10, %46 ], [ %74, %70 ]
  %79 = phi i32 [ 0, %46 ], [ %76, %70 ]
  %80 = add nsw i32 %39, -1
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZN3WTF7unicodeL16kOffsetsFromUTF8E, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sub nsw i32 %79, %83
  %85 = icmp ult i32 %84, 65536
  br i1 %85, label %86, label %94

86:                                               ; preds = %77
  %87 = and i32 %84, -2048
  %88 = icmp eq i32 %87, 55296
  br i1 %88, label %114, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds i16, i16* %9, i64 1
  %91 = load i16, i16* %9, align 2
  %92 = zext i16 %91 to i32
  %93 = icmp eq i32 %84, %92
  br i1 %93, label %20, label %114

94:                                               ; preds = %77
  %95 = add nsw i32 %84, -65536
  %96 = icmp ult i32 %95, 1048576
  br i1 %96, label %97, label %114

97:                                               ; preds = %94
  %98 = load i16, i16* %9, align 2
  %99 = lshr i32 %84, 10
  %100 = trunc i32 %99 to i16
  %101 = add nuw nsw i16 %100, -10304
  %102 = icmp eq i16 %98, %101
  br i1 %102, label %103, label %114

103:                                              ; preds = %97
  %104 = getelementptr inbounds i16, i16* %9, i64 1
  %105 = getelementptr inbounds i16, i16* %9, i64 2
  %106 = load i16, i16* %104, align 2
  %107 = zext i16 %106 to i32
  %108 = and i32 %84, 1023
  %109 = or i32 %108, 56320
  %110 = icmp eq i32 %109, %107
  br i1 %110, label %20, label %114

111:                                              ; preds = %20, %4
  %112 = phi i16* [ %0, %4 ], [ %22, %20 ]
  %113 = icmp eq i16* %112, %1
  br label %114

114:                                              ; preds = %13, %38, %44, %86, %89, %94, %97, %103, %111
  %115 = phi i1 [ %113, %111 ], [ false, %103 ], [ false, %97 ], [ false, %94 ], [ false, %89 ], [ false, %86 ], [ false, %44 ], [ false, %38 ], [ false, %13 ]
  ret i1 %115
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3WTF7unicode19EqualLatin1WithUTF8EPKhS2_PKcS4_(i8* readonly, i8* readnone, i8*, i8*) local_unnamed_addr #2 {
  %5 = icmp ult i8* %2, %3
  br i1 %5, label %6, label %92

6:                                                ; preds = %4
  %7 = ptrtoint i8* %3 to i64
  br label %8

8:                                                ; preds = %19, %6
  %9 = phi i8* [ %0, %6 ], [ %21, %19 ]
  %10 = phi i8* [ %2, %6 ], [ %20, %19 ]
  %11 = load i8, i8* %10, align 1
  %12 = icmp sgt i8 %11, -1
  br i1 %12, label %13, label %23

13:                                               ; preds = %8
  %14 = load i8, i8* %9, align 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds i8, i8* %10, i64 1
  %17 = sext i8 %11 to i32
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %95

19:                                               ; preds = %88, %13
  %20 = phi i8* [ %16, %13 ], [ %77, %88 ]
  %21 = getelementptr inbounds i8, i8* %9, i64 1
  %22 = icmp ult i8* %20, %3
  br i1 %22, label %8, label %92

23:                                               ; preds = %8
  %24 = sext i8 %11 to i32
  %25 = and i32 %24, 192
  %26 = icmp eq i32 %25, 192
  br i1 %26, label %27, label %37

27:                                               ; preds = %23
  %28 = and i32 %24, 224
  %29 = icmp eq i32 %28, 192
  br i1 %29, label %37, label %30

30:                                               ; preds = %27
  %31 = and i32 %24, 240
  %32 = icmp eq i32 %31, 224
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = and i32 %24, 248
  %35 = icmp eq i32 %34, 240
  %36 = select i1 %35, i32 4, i32 0
  br label %37

37:                                               ; preds = %33, %30, %27, %23
  %38 = phi i32 [ 0, %23 ], [ 2, %27 ], [ 3, %30 ], [ %36, %33 ]
  %39 = ptrtoint i8* %10 to i64
  %40 = sub i64 %7, %39
  %41 = zext i32 %38 to i64
  %42 = icmp slt i64 %40, %41
  br i1 %42, label %95, label %43

43:                                               ; preds = %37
  %44 = tail call fastcc zeroext i1 @_ZN3WTF7unicodeL11IsLegalUTF8EPKhi(i8* %10, i32 %38) #3
  br i1 %44, label %45, label %95

45:                                               ; preds = %43
  switch i32 %38, label %76 [
    i32 1, label %69
    i32 2, label %60
    i32 4, label %46
    i32 3, label %51
  ]

46:                                               ; preds = %45
  %47 = getelementptr inbounds i8, i8* %10, i64 1
  %48 = zext i8 %11 to i32
  %49 = shl nuw nsw i32 %48, 6
  %50 = load i8, i8* %47, align 1
  br label %51

51:                                               ; preds = %46, %45
  %52 = phi i8 [ %50, %46 ], [ %11, %45 ]
  %53 = phi i8* [ %47, %46 ], [ %10, %45 ]
  %54 = phi i32 [ %49, %46 ], [ 0, %45 ]
  %55 = getelementptr inbounds i8, i8* %53, i64 1
  %56 = zext i8 %52 to i32
  %57 = add nuw nsw i32 %54, %56
  %58 = shl nsw i32 %57, 6
  %59 = load i8, i8* %55, align 1
  br label %60

60:                                               ; preds = %51, %45
  %61 = phi i8 [ %59, %51 ], [ %11, %45 ]
  %62 = phi i8* [ %55, %51 ], [ %10, %45 ]
  %63 = phi i32 [ %58, %51 ], [ 0, %45 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 1
  %65 = zext i8 %61 to i32
  %66 = add nuw nsw i32 %63, %65
  %67 = shl i32 %66, 6
  %68 = load i8, i8* %64, align 1
  br label %69

69:                                               ; preds = %60, %45
  %70 = phi i8 [ %68, %60 ], [ %11, %45 ]
  %71 = phi i8* [ %64, %60 ], [ %10, %45 ]
  %72 = phi i32 [ %67, %60 ], [ 0, %45 ]
  %73 = getelementptr inbounds i8, i8* %71, i64 1
  %74 = zext i8 %70 to i32
  %75 = add nuw nsw i32 %72, %74
  br label %76

76:                                               ; preds = %69, %45
  %77 = phi i8* [ %10, %45 ], [ %73, %69 ]
  %78 = phi i32 [ 0, %45 ], [ %75, %69 ]
  %79 = add nsw i32 %38, -1
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZN3WTF7unicodeL16kOffsetsFromUTF8E, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = sub nsw i32 %78, %82
  %84 = icmp ugt i32 %83, 65535
  %85 = and i32 %83, -2048
  %86 = icmp eq i32 %85, 55296
  %87 = or i1 %84, %86
  br i1 %87, label %95, label %88

88:                                               ; preds = %76
  %89 = load i8, i8* %9, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %83, %90
  br i1 %91, label %19, label %95

92:                                               ; preds = %19, %4
  %93 = phi i8* [ %0, %4 ], [ %21, %19 ]
  %94 = icmp eq i8* %93, %1
  br label %95

95:                                               ; preds = %13, %37, %43, %76, %88, %92
  %96 = phi i1 [ %94, %92 ], [ false, %88 ], [ false, %76 ], [ false, %43 ], [ false, %37 ], [ false, %13 ]
  ret i1 %96
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
