; ModuleID = '../../third_party/blink/renderer/core/css/css_image_generator_value.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_image_generator_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.6", i32, [4 x i8], %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.179", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.118", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i64 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.98", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.112", [4 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { i64 }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { float }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.121", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.130" }
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.189" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::CSSImageGeneratorValue" = type { %"class.blink::CSSValue", [5 x i8], %"class.WTF::HashMap.203", %"class.blink::GeneratedImageCache", %"class.blink::SelfKeepAlive" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::HashMap.203" = type { %"class.WTF::HashTable.204" }
%"class.WTF::HashTable.204" = type <{ %"struct.WTF::KeyValuePair.207"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.207" = type <{ %"class.blink::ImageResourceObserver"*, %"struct.blink::SizeAndCount", [4 x i8] }>
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"struct.blink::SizeAndCount" = type { %"class.blink::FloatSize", i32 }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::GeneratedImageCache" = type { %"class.WTF::HashCountedSet", %"class.WTF::HashMap.196" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::FloatSize", i32 }
%"class.WTF::HashMap.196" = type { %"class.WTF::HashTable.197" }
%"class.WTF::HashTable.197" = type <{ %"struct.WTF::KeyValuePair.200"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.200" = type { %"class.blink::FloatSize", %class.scoped_refptr.201 }
%class.scoped_refptr.201 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.183" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.1" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.208" }
%"class.blink::PersistentBase.208" = type { %"class.blink::CSSImageGeneratorValue"*, %"class.blink::PersistentNodePtr.209" }
%"class.blink::PersistentNodePtr.209" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentLocation" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::Document" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"class.blink::cssvalue::CSSCrossfadeValue" = type { %"class.blink::CSSImageGeneratorValue", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.214", %"class.blink::Member.216", %"class.blink::Member.216", %"class.blink::cssvalue::CSSCrossfadeValue::CrossfadeSubimageObserverProxy" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.220", float, i8, %class.scoped_refptr.201, %"class.WTF::HashCountedSet.222", %"class.WTF::HashCountedSet.222" }
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type opaque
%"class.WTF::HashCountedSet.222" = type { %"class.WTF::HashMap.223" }
%"class.WTF::HashMap.223" = type { %"class.WTF::HashTable.224" }
%"class.WTF::HashTable.224" = type <{ %"struct.WTF::KeyValuePair.227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.227" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::cssvalue::CSSCrossfadeValue::CrossfadeSubimageObserverProxy" = type <{ %"class.blink::ImageResourceObserver", %"class.blink::Member.228", i8, [7 x i8] }>
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::cssvalue::CSSCrossfadeValue"* }
%"class.blink::cssvalue::CSSGradientValue" = type <{ %"class.blink::CSSImageGeneratorValue", %"class.blink::HeapVector", i32, i8, [3 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.232" }
%"class.WTF::Vector.232" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234", [32 x i8] }
%"class.WTF::VectorBufferBase.234" = type { %"struct.blink::cssvalue::CSSGradientColorStop"*, i32, i32 }
%"struct.blink::cssvalue::CSSGradientColorStop" = type { %"class.blink::Member.235", %"class.blink::Member.237" }
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSPaintValue" = type <{ %"class.blink::CSSImageGeneratorValue", i8, [7 x i8], %"class.blink::Member.241", %"class.blink::HeapHashMap", %"class.blink::Member.255", %"class.blink::Member.261", %"class.WTF::Vector.264", i32, [4 x i8] }>
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::CSSCustomIdentValue"* }
%"class.blink::CSSCustomIdentValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.243 }
%class.scoped_refptr.243 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.244" }
%"struct.std::__1::atomic.244" = type { %"struct.std::__1::__atomic_base.245" }
%"struct.std::__1::__atomic_base.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl.247" }
%"struct.std::__1::__cxx_atomic_impl.247" = type { %"struct.std::__1::__cxx_atomic_base_impl.248" }
%"struct.std::__1::__cxx_atomic_base_impl.248" = type { i32 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.251" }
%"class.WTF::HashMap.251" = type { %"class.WTF::HashTable.252" }
%"class.WTF::HashTable.252" = type <{ %"struct.WTF::KeyValuePair.254"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.254" = type opaque
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::CSSPaintValue::Observer"* }
%"class.blink::CSSPaintValue::Observer" = type { %"class.blink::CSSPaintImageGenerator::Observer", %"class.blink::Member.259" }
%"class.blink::CSSPaintImageGenerator::Observer" = type { i32 (...)** }
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::CSSPaintValue"* }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::HeapVector.263"* }
%"class.blink::HeapVector.263" = type opaque
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { %class.scoped_refptr.267*, i32, i32 }
%class.scoped_refptr.267 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.268", %"class.WTF::Vector.270", %"class.WTF::Vector.275", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.268" = type { %"class.base::RefCounted.269" }
%"class.base::RefCounted.269" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.275" = type { %"class.WTF::VectorBuffer.276" }
%"class.WTF::VectorBuffer.276" = type { %"class.WTF::VectorBufferBase.277" }
%"class.WTF::VectorBufferBase.277" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::cssvalue::CSSLinearGradientValue" = type { %"class.blink::cssvalue::CSSGradientValue.base", %"class.blink::Member.237", %"class.blink::Member.237", %"class.blink::Member.237", %"class.blink::Member.237", %"class.blink::Member.235" }
%"class.blink::cssvalue::CSSGradientValue.base" = type <{ %"class.blink::CSSImageGeneratorValue", %"class.blink::HeapVector", i32, i8 }>
%"class.blink::cssvalue::CSSRadialGradientValue" = type { %"class.blink::cssvalue::CSSGradientValue.base", %"class.blink::Member.237", %"class.blink::Member.237", %"class.blink::Member.237", %"class.blink::Member.237", %"class.blink::Member.235", %"class.blink::Member.235", %"class.blink::Member.282", %"class.blink::Member.282", %"class.blink::Member.235", %"class.blink::Member.235" }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::CSSIdentifierValue"* }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::cssvalue::CSSConicGradientValue" = type { %"class.blink::cssvalue::CSSGradientValue.base", %"class.blink::Member.237", %"class.blink::Member.237", %"class.blink::Member.235" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.287 }
%union.anon.287 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF14HashCountedSetIN5blink9FloatSizeENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE5eraseERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERKS2_S6_EENS_18HashTableAddResultISI_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS7_jSJ_ = comdat any

$_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS2_iEENS_18HashTableAddResultISF_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS4_jSG_ = comdat any

$_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE5eraseEPKS7_ = comdat any

$_ZN5blink14PersistentBaseINS_22CSSImageGeneratorValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_22CSSImageGeneratorValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22CSSImageGeneratorValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_22CSSImageGeneratorValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERS4_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/platform/heap/self_keep_alive.h\00", section "llvm.metadata"
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink9FloatSizeE13scoped_refptrINS2_5ImageEEEEEEPKcv = private unnamed_addr constant [113 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::FloatSize, scoped_refptr<blink::Image> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink9FloatSizeEjEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::FloatSize, unsigned int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink21ImageResourceObserverENS2_12SizeAndCountEEEEEPKcv = private unnamed_addr constant [124 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::ImageResourceObserver *, blink::SizeAndCount>]\00", align 1

@_ZN5blink22CSSImageGeneratorValueC1ENS_8CSSValue9ClassTypeE = hidden unnamed_addr alias void (%"class.blink::CSSImageGeneratorValue"*, i32), void (%"class.blink::CSSImageGeneratorValue"*, i32)* @_ZN5blink22CSSImageGeneratorValueC2ENS_8CSSValue9ClassTypeE
@_ZN5blink22CSSImageGeneratorValueD1Ev = hidden unnamed_addr alias void (%"class.blink::CSSImageGeneratorValue"*), void (%"class.blink::CSSImageGeneratorValue"*)* @_ZN5blink22CSSImageGeneratorValueD2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.blink::Image"* @_ZNK5blink19GeneratedImageCache8GetImageERKNS_9FloatSizeE(%"class.blink::GeneratedImageCache"* nocapture readonly, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp ugt float %4, 0.000000e+00
  %6 = bitcast float %4 to i32
  br i1 %5, label %7, label %85

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fcmp ugt float %9, 0.000000e+00
  %11 = bitcast float %9 to i32
  br i1 %10, label %12, label %85

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::GeneratedImageCache", %"class.blink::GeneratedImageCache"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.200"*, %"struct.WTF::KeyValuePair.200"** %13, align 8
  %15 = icmp eq %"struct.WTF::KeyValuePair.200"* %14, null
  %16 = getelementptr inbounds %"class.blink::GeneratedImageCache", %"class.blink::GeneratedImageCache"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  br i1 %15, label %74, label %18

18:                                               ; preds = %12
  %19 = add i32 %17, -1
  %20 = zext i32 %19 to i64
  %21 = zext i32 %6 to i64
  %22 = mul i64 %21, 5146158508761418231
  %23 = zext i32 %11 to i64
  %24 = mul i64 %23, -682818954288075998
  %25 = add i64 %24, %22
  %26 = lshr i64 %25, 32
  %27 = trunc i64 %26 to i32
  %28 = and i32 %19, %27
  %29 = zext i32 %28 to i64
  %30 = xor i32 %27, -1
  %31 = lshr i64 %25, 55
  %32 = trunc i64 %31 to i32
  %33 = add i32 %32, %30
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %65, %18
  %45 = phi i64 [ 0, %18 ], [ %67, %65 ]
  %46 = phi i64 [ %29, %18 ], [ %69, %65 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %14, i64 %46
  %48 = bitcast %"struct.WTF::KeyValuePair.200"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %6
  %51 = bitcast i32 %49 to float
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %14, i64 %46, i32 0, i32 1
  br i1 %50, label %55, label %53

53:                                               ; preds = %44
  %54 = load float, float* %52, align 4
  br label %60

55:                                               ; preds = %44
  %56 = bitcast float* %52 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  %59 = bitcast i32 %57 to float
  br i1 %58, label %70, label %60

60:                                               ; preds = %55, %53
  %61 = phi float [ %54, %53 ], [ %59, %55 ]
  %62 = fcmp oeq float %51, 0x7FF0000000000000
  %63 = fcmp oeq float %61, 0x7FF0000000000000
  %64 = and i1 %62, %63
  br i1 %64, label %74, label %65

65:                                               ; preds = %60
  %66 = icmp eq i64 %45, 0
  %67 = select i1 %66, i64 %43, i64 %45
  %68 = add i64 %67, %46
  %69 = and i64 %68, %20
  br label %44

70:                                               ; preds = %55
  %71 = icmp eq %"struct.WTF::KeyValuePair.200"* %47, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = zext i32 %17 to i64
  br label %77

74:                                               ; preds = %60, %70, %12
  %75 = zext i32 %17 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %14, i64 %75
  br label %77

77:                                               ; preds = %72, %74
  %78 = phi i64 [ %73, %72 ], [ %75, %74 ]
  %79 = phi %"struct.WTF::KeyValuePair.200"* [ %47, %72 ], [ %76, %74 ]
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %14, i64 %78
  %81 = icmp eq %"struct.WTF::KeyValuePair.200"* %79, %80
  br i1 %81, label %85, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %79, i64 0, i32 1, i32 0
  %84 = load %"class.blink::Image"*, %"class.blink::Image"** %83, align 8
  br label %85

85:                                               ; preds = %7, %2, %82, %77
  %86 = phi %"class.blink::Image"* [ null, %7 ], [ %84, %82 ], [ null, %77 ], [ null, %2 ]
  ret %"class.blink::Image"* %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19GeneratedImageCache8PutImageERKNS_9FloatSizeE13scoped_refptrINS_5ImageEE(%"class.blink::GeneratedImageCache"*, %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::Image"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.scoped_refptr.201, align 8
  %5 = getelementptr inbounds %class.scoped_refptr.201, %class.scoped_refptr.201* %4, i64 0, i32 0
  store %"class.blink::Image"* %2, %"class.blink::Image"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::GeneratedImageCache", %"class.blink::GeneratedImageCache"* %0, i64 0, i32 1, i32 0
  %7 = call { %"struct.WTF::KeyValuePair.200"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERKS2_S6_EENS_18HashTableAddResultISI_S7_EEOT0_OT1_(%"class.WTF::HashTable.197"* %6, %"class.blink::FloatSize"* dereferenceable(8) %1, %class.scoped_refptr.201* nonnull dereferenceable(8) %4) #6
  %8 = load %"class.blink::Image"*, %"class.blink::Image"** %5, align 8
  %9 = icmp eq %"class.blink::Image"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %8, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.blink::Image"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.blink::Image"*)***
  %19 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %19, i64 1
  %21 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %20, align 8
  call void %21(%"class.blink::Image"* nonnull %17) #6
  br label %22

22:                                               ; preds = %3, %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19GeneratedImageCache7AddSizeERKNS_9FloatSizeE(%"class.blink::GeneratedImageCache"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #6
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::GeneratedImageCache", %"class.blink::GeneratedImageCache"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS2_iEENS_18HashTableAddResultISF_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"class.blink::FloatSize"* dereferenceable(8) %1, i32* nonnull dereferenceable(4) %3) #6
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %6, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #6
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19GeneratedImageCache10RemoveSizeERKNS_9FloatSizeE(%"class.blink::GeneratedImageCache"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::GeneratedImageCache", %"class.blink::GeneratedImageCache"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZN3WTF14HashCountedSetIN5blink9FloatSizeENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE5eraseERKS2_(%"class.WTF::HashCountedSet"* %3, %"class.blink::FloatSize"* dereferenceable(8) %1)
  br i1 %4, label %5, label %83

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::GeneratedImageCache", %"class.blink::GeneratedImageCache"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashMap.196", %"class.WTF::HashMap.196"* %6, i64 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.200"*, %"struct.WTF::KeyValuePair.200"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair.200"* %8, null
  %10 = getelementptr inbounds %"class.blink::GeneratedImageCache", %"class.blink::GeneratedImageCache"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  br i1 %9, label %73, label %12

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  %14 = zext i32 %13 to i64
  %15 = bitcast %"class.blink::FloatSize"* %1 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %16 to i64
  %21 = mul i64 %20, 5146158508761418231
  %22 = zext i32 %19 to i64
  %23 = mul i64 %22, -682818954288075998
  %24 = add i64 %23, %21
  %25 = lshr i64 %24, 32
  %26 = trunc i64 %25 to i32
  %27 = and i32 %13, %26
  %28 = zext i32 %27 to i64
  %29 = xor i32 %26, -1
  %30 = lshr i64 %24, 55
  %31 = trunc i64 %30 to i32
  %32 = add i32 %31, %29
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  br label %43

43:                                               ; preds = %64, %12
  %44 = phi i64 [ 0, %12 ], [ %66, %64 ]
  %45 = phi i64 [ %28, %12 ], [ %68, %64 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %8, i64 %45
  %47 = bitcast %"struct.WTF::KeyValuePair.200"* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %16
  %50 = bitcast i32 %48 to float
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %8, i64 %45, i32 0, i32 1
  br i1 %49, label %54, label %52

52:                                               ; preds = %43
  %53 = load float, float* %51, align 4
  br label %59

54:                                               ; preds = %43
  %55 = bitcast float* %51 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %19
  %58 = bitcast i32 %56 to float
  br i1 %57, label %69, label %59

59:                                               ; preds = %54, %52
  %60 = phi float [ %53, %52 ], [ %58, %54 ]
  %61 = fcmp oeq float %50, 0x7FF0000000000000
  %62 = fcmp oeq float %60, 0x7FF0000000000000
  %63 = and i1 %61, %62
  br i1 %63, label %73, label %64

64:                                               ; preds = %59
  %65 = icmp eq i64 %44, 0
  %66 = select i1 %65, i64 %42, i64 %44
  %67 = add i64 %66, %45
  %68 = and i64 %67, %14
  br label %43

69:                                               ; preds = %54
  %70 = icmp eq %"struct.WTF::KeyValuePair.200"* %46, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = zext i32 %11 to i64
  br label %76

73:                                               ; preds = %59, %69, %5
  %74 = zext i32 %11 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %8, i64 %74
  br label %76

76:                                               ; preds = %71, %73
  %77 = phi i64 [ %72, %71 ], [ %74, %73 ]
  %78 = phi %"struct.WTF::KeyValuePair.200"* [ %46, %71 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %8, i64 %77
  %80 = icmp eq %"struct.WTF::KeyValuePair.200"* %79, %78
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::HashMap.196", %"class.WTF::HashMap.196"* %6, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.197"* %82, %"struct.WTF::KeyValuePair.200"* %78) #6
  br label %83

83:                                               ; preds = %81, %76, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF14HashCountedSetIN5blink9FloatSizeENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE5eraseERKS2_(%"class.WTF::HashCountedSet"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %69, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::FloatSize"* %1 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %12 to i64
  %17 = mul i64 %16, 5146158508761418231
  %18 = zext i32 %15 to i64
  %19 = mul i64 %18, -682818954288075998
  %20 = add i64 %19, %17
  %21 = lshr i64 %20, 32
  %22 = trunc i64 %21 to i32
  %23 = and i32 %9, %22
  %24 = zext i32 %23 to i64
  %25 = xor i32 %22, -1
  %26 = lshr i64 %20, 55
  %27 = trunc i64 %26 to i32
  %28 = add i32 %27, %25
  %29 = shl i32 %28, 12
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 7
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 2
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 20
  %36 = xor i32 %35, %34
  %37 = or i32 %36, 1
  %38 = zext i32 %37 to i64
  br label %39

39:                                               ; preds = %60, %8
  %40 = phi i64 [ 0, %8 ], [ %62, %60 ]
  %41 = phi i64 [ %24, %8 ], [ %64, %60 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %41
  %43 = bitcast %"struct.WTF::KeyValuePair"* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %12
  %46 = bitcast i32 %44 to float
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %41, i32 0, i32 1
  br i1 %45, label %50, label %48

48:                                               ; preds = %39
  %49 = load float, float* %47, align 4
  br label %55

50:                                               ; preds = %39
  %51 = bitcast float* %47 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %15
  %54 = bitcast i32 %52 to float
  br i1 %53, label %65, label %55

55:                                               ; preds = %50, %48
  %56 = phi float [ %49, %48 ], [ %54, %50 ]
  %57 = fcmp oeq float %46, 0x7FF0000000000000
  %58 = fcmp oeq float %56, 0x7FF0000000000000
  %59 = and i1 %57, %58
  br i1 %59, label %69, label %60

60:                                               ; preds = %55
  %61 = icmp eq i64 %40, 0
  %62 = select i1 %61, i64 %38, i64 %40
  %63 = add i64 %62, %41
  %64 = and i64 %63, %10
  br label %39

65:                                               ; preds = %50
  %66 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = zext i32 %7 to i64
  br label %72

69:                                               ; preds = %55, %65, %2
  %70 = zext i32 %7 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %70
  br label %72

72:                                               ; preds = %67, %69
  %73 = phi i64 [ %68, %67 ], [ %70, %69 ]
  %74 = phi %"struct.WTF::KeyValuePair"* [ %42, %67 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %73
  %76 = icmp eq %"struct.WTF::KeyValuePair"* %75, %74
  br i1 %76, label %150, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, -1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %77
  store i32 %80, i32* %78, align 4
  br label %150

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0
  %85 = bitcast %"struct.WTF::KeyValuePair"* %74 to i32*
  store i32 -8388608, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 0, i32 1
  %87 = bitcast float* %86 to i32*
  store i32 -8388608, i32* %87, align 4
  %88 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 1
  %91 = and i32 %90, 2147483647
  %92 = and i32 %89, -2147483648
  %93 = or i32 %91, %92
  store i32 %93, i32* %88, align 8
  %94 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, -1
  store i32 %96, i32* %94, align 4
  %97 = mul i32 %96, 6
  %98 = load i32, i32* %6, align 8
  %99 = icmp ult i32 %97, %98
  %100 = icmp ugt i32 %98, 8
  %101 = and i1 %99, %100
  br i1 %101, label %102, label %150

102:                                              ; preds = %83
  %103 = lshr i32 %98, 1
  %104 = zext i32 %103 to i64
  %105 = mul nuw nsw i64 %104, 12
  %106 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %105, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink9FloatSizeEjEEEEPKcv, i64 0, i64 0)) #6
  %107 = bitcast i8* %106 to %"struct.WTF::KeyValuePair"*
  %108 = icmp eq i32 %103, 0
  br i1 %108, label %148, label %109

109:                                              ; preds = %102
  %110 = add nsw i64 %104, -1
  %111 = and i64 %104, 3
  %112 = icmp ult i64 %110, 3
  br i1 %112, label %136, label %113

113:                                              ; preds = %109
  %114 = sub nsw i64 %104, %111
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i64 [ 0, %113 ], [ %133, %115 ]
  %117 = phi i64 [ %114, %113 ], [ %134, %115 ]
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %116
  %119 = bitcast %"struct.WTF::KeyValuePair"* %118 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %119, align 4
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %116, i32 1
  store i32 0, i32* %120, align 4
  %121 = or i64 %116, 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %121
  %123 = bitcast %"struct.WTF::KeyValuePair"* %122 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %123, align 4
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %121, i32 1
  store i32 0, i32* %124, align 4
  %125 = or i64 %116, 2
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %125
  %127 = bitcast %"struct.WTF::KeyValuePair"* %126 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %127, align 4
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %125, i32 1
  store i32 0, i32* %128, align 4
  %129 = or i64 %116, 3
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %129
  %131 = bitcast %"struct.WTF::KeyValuePair"* %130 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %131, align 4
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %129, i32 1
  store i32 0, i32* %132, align 4
  %133 = add nuw nsw i64 %116, 4
  %134 = add i64 %117, -4
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %115

136:                                              ; preds = %115, %109
  %137 = phi i64 [ 0, %109 ], [ %133, %115 ]
  %138 = icmp eq i64 %111, 0
  br i1 %138, label %148, label %139

139:                                              ; preds = %136, %139
  %140 = phi i64 [ %145, %139 ], [ %137, %136 ]
  %141 = phi i64 [ %146, %139 ], [ %111, %136 ]
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %140
  %143 = bitcast %"struct.WTF::KeyValuePair"* %142 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %143, align 4
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 %140, i32 1
  store i32 0, i32* %144, align 4
  %145 = add nuw nsw i64 %140, 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %139, !llvm.loop !2

148:                                              ; preds = %136, %139, %102
  %149 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS4_jSG_(%"class.WTF::HashTable"* %84, %"struct.WTF::KeyValuePair"* %107, i32 %103, %"struct.WTF::KeyValuePair"* null) #6
  br label %150

150:                                              ; preds = %72, %82, %83, %148
  %151 = phi i1 [ false, %72 ], [ false, %82 ], [ true, %83 ], [ true, %148 ]
  ret i1 %151
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22CSSImageGeneratorValueC2ENS_8CSSValue9ClassTypeE(%"class.blink::CSSImageGeneratorValue"*, i32) unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::PersistentLocation", align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 0
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, -8
  store i8 %7, i8* %5, align 1
  %8 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 2
  %9 = trunc i32 %1 to i8
  store i8 %9, i8* %8, align 1
  %10 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2
  %11 = bitcast %"class.WTF::HashMap.203"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #6
  %12 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3
  %13 = bitcast %"class.blink::GeneratedImageCache"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #6
  %14 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3, i32 1
  %15 = bitcast %"class.WTF::HashMap.196"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #6
  %16 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 4
  %17 = bitcast %"class.blink::PersistentLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 32, i1 false)
  %18 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %18) #6
  %19 = bitcast %"class.blink::SelfKeepAlive"* %16 to i8*
  %20 = call i8* @llvm.ptr.annotation.p0i8(i8* %19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22CSSImageGeneratorValueD2Ev(%"class.blink::CSSImageGeneratorValue"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::SelfKeepAlive"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #6
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"class.blink::PersistentNode"**
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %1
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #6
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !4

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #6
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %24 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  store %"class.blink::PersistentNode"* %22, %"class.blink::PersistentNode"** %23, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %6, align 8
  br label %28

28:                                               ; preds = %1, %16
  %29 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %30 = load %"struct.WTF::KeyValuePair.200"*, %"struct.WTF::KeyValuePair.200"** %29, align 8
  %31 = icmp eq %"struct.WTF::KeyValuePair.200"* %30, null
  br i1 %31, label %68, label %32, !prof !5

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %66, label %36

36:                                               ; preds = %32
  %37 = zext i32 %34 to i64
  br label %38

38:                                               ; preds = %63, %36
  %39 = phi i64 [ 0, %36 ], [ %64, %63 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %30, i64 %39, i32 0, i32 0
  %41 = load float, float* %40, align 4
  %42 = fcmp oeq float %41, 0xFFF0000000000000
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %30, i64 %39, i32 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = fcmp oeq float %44, 0xFFF0000000000000
  %46 = or i1 %42, %45
  br i1 %46, label %63, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %30, i64 %39, i32 1, i32 0
  %49 = load %"class.blink::Image"*, %"class.blink::Image"** %48, align 8
  %50 = icmp eq %"class.blink::Image"* %49, null
  br i1 %50, label %63, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %49, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %63

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %52, i64 -2
  %58 = bitcast %"class.base::RefCountedThreadSafe"* %57 to %"class.blink::Image"*
  %59 = bitcast %"class.base::RefCountedThreadSafe"* %57 to void (%"class.blink::Image"*)***
  %60 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %60, i64 1
  %62 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %61, align 8
  tail call void %62(%"class.blink::Image"* nonnull %58) #6
  br label %63

63:                                               ; preds = %56, %51, %47, %38
  %64 = add nuw nsw i64 %39, 1
  %65 = icmp eq i64 %64, %37
  br i1 %65, label %66, label %38

66:                                               ; preds = %63, %32
  %67 = bitcast %"struct.WTF::KeyValuePair.200"* %30 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %67) #6
  store %"struct.WTF::KeyValuePair.200"* null, %"struct.WTF::KeyValuePair.200"** %29, align 8
  br label %68

68:                                               ; preds = %66, %28
  %69 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %69, align 8
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %70, null
  br i1 %71, label %74, label %72, !prof !5

72:                                               ; preds = %68
  %73 = bitcast %"struct.WTF::KeyValuePair"* %70 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %73) #6
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %69, align 8
  br label %74

74:                                               ; preds = %68, %72
  %75 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2, i32 0, i32 0
  %76 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %75, align 8
  %77 = icmp eq %"struct.WTF::KeyValuePair.207"* %76, null
  br i1 %77, label %80, label %78, !prof !5

78:                                               ; preds = %74
  %79 = bitcast %"struct.WTF::KeyValuePair.207"* %76 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #6
  store %"struct.WTF::KeyValuePair.207"* null, %"struct.WTF::KeyValuePair.207"** %75, align 8
  br label %80

80:                                               ; preds = %74, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22CSSImageGeneratorValue9AddClientEPKNS_21ImageResourceObserverE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::ImageResourceObserver"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::ImageResourceObserver"*, align 8
  %4 = alloca %"struct.blink::SizeAndCount", align 4
  store %"class.blink::ImageResourceObserver"* %1, %"class.blink::ImageResourceObserver"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 4
  %10 = bitcast %"class.blink::SelfKeepAlive"* %9 to i8*
  %11 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #6
  %12 = bitcast i8* %11 to %"class.blink::PersistentBase.208"*
  tail call void @_ZN5blink14PersistentBaseINS_22CSSImageGeneratorValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.208"* %12, %"class.blink::CSSImageGeneratorValue"* %0) #6
  br label %13

13:                                               ; preds = %8, %2
  %14 = bitcast %"struct.blink::SizeAndCount"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"struct.blink::SizeAndCount", %"struct.blink::SizeAndCount"* %4, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"struct.blink::SizeAndCount", %"struct.blink::SizeAndCount"* %4, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %16, align 4
  %17 = getelementptr inbounds %"struct.blink::SizeAndCount", %"struct.blink::SizeAndCount"* %4, i64 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2, i32 0
  %19 = call { %"struct.WTF::KeyValuePair.207"*, i8 } @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERS4_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.204"* %18, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %3, %"struct.blink::SizeAndCount"* nonnull dereferenceable(12) %4) #6
  %20 = extractvalue { %"struct.WTF::KeyValuePair.207"*, i8 } %19, 0
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #6
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %20, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %21, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22CSSImageGeneratorValue12RemoveClientEPKNS_21ImageResourceObserverE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::ImageResourceObserver"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::ImageResourceObserver"*, align 8
  store %"class.blink::ImageResourceObserver"* %1, %"class.blink::ImageResourceObserver"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.WTF::HashMap.203", %"class.WTF::HashMap.203"* %4, i64 0, i32 0
  %6 = call { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.204"* %5, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %3) #6
  %7 = extractvalue { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } %6, 0
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %7, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.blink::SizeAndCount", %"struct.blink::SizeAndCount"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::SizeAndCount", %"struct.blink::SizeAndCount"* %8, i64 0, i32 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = fcmp ugt float %11, 0.000000e+00
  br i1 %12, label %13, label %21

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %7, i64 0, i32 1, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fcmp ugt float %15, 0.000000e+00
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3
  call void @_ZN5blink19GeneratedImageCache10RemoveSizeERKNS_9FloatSizeE(%"class.blink::GeneratedImageCache"* %18, %"class.blink::FloatSize"* dereferenceable(8) %9)
  %19 = bitcast %"struct.blink::SizeAndCount"* %8 to i32*
  store i32 0, i32* %19, align 4
  %20 = bitcast float* %14 to i32*
  store i32 0, i32* %20, align 4
  br label %21

21:                                               ; preds = %13, %2, %17
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %7, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %22, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %107

26:                                               ; preds = %21
  %27 = call { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.204"* %5, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %3) #6
  %28 = extractvalue { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } %27, 0
  %29 = getelementptr inbounds %"class.WTF::HashMap.203", %"class.WTF::HashMap.203"* %4, i64 0, i32 0, i32 0
  %30 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %30, i64 %33
  %35 = icmp eq %"struct.WTF::KeyValuePair.207"* %34, %28
  br i1 %35, label %107, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %28, i64 0, i32 0
  store %"class.blink::ImageResourceObserver"* inttoptr (i64 -1 to %"class.blink::ImageResourceObserver"*), %"class.blink::ImageResourceObserver"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  %41 = and i32 %40, 2147483647
  %42 = and i32 %39, -2147483648
  %43 = or i32 %41, %42
  store i32 %43, i32* %38, align 8
  %44 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, -1
  store i32 %46, i32* %44, align 4
  %47 = mul i32 %46, 6
  %48 = load i32, i32* %31, align 8
  %49 = icmp ult i32 %47, %48
  %50 = icmp ugt i32 %48, 8
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %107

52:                                               ; preds = %36
  %53 = lshr i32 %48, 1
  %54 = zext i32 %53 to i64
  %55 = mul nuw nsw i64 %54, 24
  %56 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %55, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink21ImageResourceObserverENS2_12SizeAndCountEEEEEPKcv, i64 0, i64 0)) #6
  %57 = bitcast i8* %56 to %"struct.WTF::KeyValuePair.207"*
  %58 = icmp eq i32 %53, 0
  br i1 %58, label %105, label %59

59:                                               ; preds = %52
  %60 = add nsw i64 %54, -1
  %61 = and i64 %54, 7
  %62 = icmp ult i64 %60, 7
  br i1 %62, label %94, label %63

63:                                               ; preds = %59
  %64 = sub nsw i64 %54, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %91, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %92, %65 ]
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %57, i64 %66
  %69 = bitcast %"struct.WTF::KeyValuePair.207"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 20, i1 false) #6
  %70 = or i64 %66, 1
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %57, i64 %70
  %72 = bitcast %"struct.WTF::KeyValuePair.207"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 20, i1 false) #6
  %73 = or i64 %66, 2
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %57, i64 %73
  %75 = bitcast %"struct.WTF::KeyValuePair.207"* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 20, i1 false) #6
  %76 = or i64 %66, 3
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %57, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair.207"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 20, i1 false) #6
  %79 = or i64 %66, 4
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %57, i64 %79
  %81 = bitcast %"struct.WTF::KeyValuePair.207"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 20, i1 false) #6
  %82 = or i64 %66, 5
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %57, i64 %82
  %84 = bitcast %"struct.WTF::KeyValuePair.207"* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 20, i1 false) #6
  %85 = or i64 %66, 6
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %57, i64 %85
  %87 = bitcast %"struct.WTF::KeyValuePair.207"* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 20, i1 false) #6
  %88 = or i64 %66, 7
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %57, i64 %88
  %90 = bitcast %"struct.WTF::KeyValuePair.207"* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 20, i1 false) #6
  %91 = add nuw nsw i64 %66, 8
  %92 = add i64 %67, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %65

94:                                               ; preds = %65, %59
  %95 = phi i64 [ 0, %59 ], [ %91, %65 ]
  %96 = icmp eq i64 %61, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %102, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %103, %97 ], [ %61, %94 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %57, i64 %98
  %101 = bitcast %"struct.WTF::KeyValuePair.207"* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 20, i1 false) #6
  %102 = add nuw nsw i64 %98, 1
  %103 = add i64 %99, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %97, !llvm.loop !6

105:                                              ; preds = %94, %97, %52
  %106 = call %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.204"* %5, %"struct.WTF::KeyValuePair.207"* %57, i32 %53, %"struct.WTF::KeyValuePair.207"* null) #6
  br label %107

107:                                              ; preds = %105, %36, %26, %21
  %108 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %139

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 4
  %113 = bitcast %"class.blink::SelfKeepAlive"* %112 to i8*
  %114 = call i8* @llvm.ptr.annotation.p0i8(i8* %113, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 71) #6
  %115 = bitcast i8* %114 to %"class.blink::CSSImageGeneratorValue"**
  store %"class.blink::CSSImageGeneratorValue"* null, %"class.blink::CSSImageGeneratorValue"** %115, align 8
  %116 = getelementptr inbounds i8, i8* %114, i64 8
  %117 = bitcast i8* %116 to %"class.blink::PersistentNode"**
  %118 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %117, align 8
  %119 = icmp eq %"class.blink::PersistentNode"* %118, null
  br i1 %119, label %139, label %120

120:                                              ; preds = %111
  %121 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %122 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %121, i64 0, i32 1
  %123 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %122) #6
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !4

125:                                              ; preds = %120
  %126 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %122, i8* %126) #6
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i8* [ %126, %125 ], [ %123, %120 ]
  %129 = bitcast i8* %128 to %"class.blink::ThreadState"**
  %130 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 3, i32 0, i32 0, i32 0
  %132 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %131, align 8
  %133 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %117, align 8
  %134 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %132, i64 0, i32 0, i32 0
  %135 = bitcast %"class.blink::PersistentRegion"* %132 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.blink::PersistentNode"* %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %133, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %138, align 8
  store %"class.blink::PersistentNode"* %133, %"class.blink::PersistentNode"** %134, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %117, align 8
  br label %139

139:                                              ; preds = %127, %111, %107
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZNK5blink22CSSImageGeneratorValue8GetImageEPKNS_21ImageResourceObserverERKNS_9FloatSizeE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::ImageResourceObserver"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::ImageResourceObserver"*, align 8
  store %"class.blink::ImageResourceObserver"* %1, %"class.blink::ImageResourceObserver"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.WTF::HashMap.203", %"class.WTF::HashMap.203"* %6, i64 0, i32 0
  %8 = call { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.204"* %7, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %5) #6
  %9 = extractvalue { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.203", %"class.WTF::HashMap.203"* %6, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair.207"* %9, %15
  br i1 %16, label %60, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %9, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %18, i64 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %20, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %9, i64 0, i32 1, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %26, %28
  br i1 %29, label %30, label %60

30:                                               ; preds = %17, %24
  %31 = fcmp ugt float %20, 0.000000e+00
  br i1 %31, label %32, label %42

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %9, i64 0, i32 1, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fcmp ugt float %34, 0.000000e+00
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3
  call void @_ZN5blink19GeneratedImageCache10RemoveSizeERKNS_9FloatSizeE(%"class.blink::GeneratedImageCache"* %37, %"class.blink::FloatSize"* dereferenceable(8) %18)
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %9, i64 0, i32 1
  %39 = bitcast %"struct.blink::SizeAndCount"* %38 to i32*
  store i32 0, i32* %39, align 4
  %40 = bitcast float* %33 to i32*
  store i32 0, i32* %40, align 4
  %41 = load float, float* %21, align 4
  br label %42

42:                                               ; preds = %32, %30, %36
  %43 = phi float [ %22, %32 ], [ %22, %30 ], [ %41, %36 ]
  %44 = fcmp ugt float %43, 0.000000e+00
  br i1 %44, label %45, label %60

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 1
  %47 = load float, float* %46, align 4
  %48 = fcmp ugt float %47, 0.000000e+00
  br i1 %48, label %49, label %60

49:                                               ; preds = %45
  %50 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #6
  store i32 0, i32* %4, align 4
  %51 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS2_iEENS_18HashTableAddResultISF_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %51, %"class.blink::FloatSize"* dereferenceable(8) %2, i32* nonnull dereferenceable(4) %4) #6
  %53 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %52, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #6
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %54, align 4
  %57 = bitcast %"class.blink::FloatSize"* %2 to i64*
  %58 = bitcast %"class.blink::FloatSize"* %18 to i64*
  %59 = load i64, i64* %57, align 4
  store i64 %59, i64* %58, align 4
  br label %60

60:                                               ; preds = %45, %3, %42, %24, %49
  %61 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 0
  %62 = load float, float* %61, align 4
  %63 = fcmp ugt float %62, 0.000000e+00
  %64 = bitcast float %62 to i32
  br i1 %63, label %65, label %143

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = fcmp ugt float %67, 0.000000e+00
  %69 = bitcast float %67 to i32
  br i1 %68, label %70, label %143

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %72 = load %"struct.WTF::KeyValuePair.200"*, %"struct.WTF::KeyValuePair.200"** %71, align 8
  %73 = icmp eq %"struct.WTF::KeyValuePair.200"* %72, null
  %74 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  br i1 %73, label %132, label %76

76:                                               ; preds = %70
  %77 = add i32 %75, -1
  %78 = zext i32 %77 to i64
  %79 = zext i32 %64 to i64
  %80 = mul i64 %79, 5146158508761418231
  %81 = zext i32 %69 to i64
  %82 = mul i64 %81, -682818954288075998
  %83 = add i64 %82, %80
  %84 = lshr i64 %83, 32
  %85 = trunc i64 %84 to i32
  %86 = and i32 %77, %85
  %87 = zext i32 %86 to i64
  %88 = xor i32 %85, -1
  %89 = lshr i64 %83, 55
  %90 = trunc i64 %89 to i32
  %91 = add i32 %90, %88
  %92 = shl i32 %91, 12
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 7
  %95 = xor i32 %94, %93
  %96 = shl i32 %95, 2
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 20
  %99 = xor i32 %98, %97
  %100 = or i32 %99, 1
  %101 = zext i32 %100 to i64
  br label %102

102:                                              ; preds = %123, %76
  %103 = phi i64 [ 0, %76 ], [ %125, %123 ]
  %104 = phi i64 [ %87, %76 ], [ %127, %123 ]
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %72, i64 %104
  %106 = bitcast %"struct.WTF::KeyValuePair.200"* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, %64
  %109 = bitcast i32 %107 to float
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %72, i64 %104, i32 0, i32 1
  br i1 %108, label %113, label %111

111:                                              ; preds = %102
  %112 = load float, float* %110, align 4
  br label %118

113:                                              ; preds = %102
  %114 = bitcast float* %110 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, %69
  %117 = bitcast i32 %115 to float
  br i1 %116, label %128, label %118

118:                                              ; preds = %113, %111
  %119 = phi float [ %112, %111 ], [ %117, %113 ]
  %120 = fcmp oeq float %109, 0x7FF0000000000000
  %121 = fcmp oeq float %119, 0x7FF0000000000000
  %122 = and i1 %120, %121
  br i1 %122, label %132, label %123

123:                                              ; preds = %118
  %124 = icmp eq i64 %103, 0
  %125 = select i1 %124, i64 %101, i64 %103
  %126 = add i64 %125, %104
  %127 = and i64 %126, %78
  br label %102

128:                                              ; preds = %113
  %129 = icmp eq %"struct.WTF::KeyValuePair.200"* %105, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = zext i32 %75 to i64
  br label %135

132:                                              ; preds = %118, %128, %70
  %133 = zext i32 %75 to i64
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %72, i64 %133
  br label %135

135:                                              ; preds = %132, %130
  %136 = phi i64 [ %131, %130 ], [ %133, %132 ]
  %137 = phi %"struct.WTF::KeyValuePair.200"* [ %105, %130 ], [ %134, %132 ]
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %72, i64 %136
  %139 = icmp eq %"struct.WTF::KeyValuePair.200"* %137, %138
  br i1 %139, label %143, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %137, i64 0, i32 1, i32 0
  %142 = load %"class.blink::Image"*, %"class.blink::Image"** %141, align 8
  br label %143

143:                                              ; preds = %60, %65, %135, %140
  %144 = phi %"class.blink::Image"* [ null, %65 ], [ %142, %140 ], [ null, %135 ], [ null, %60 ]
  ret %"class.blink::Image"* %144
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22CSSImageGeneratorValue8PutImageERKNS_9FloatSizeE13scoped_refptrINS_5ImageEE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::Image"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.scoped_refptr.201, align 8
  %5 = bitcast %class.scoped_refptr.201* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = getelementptr inbounds %class.scoped_refptr.201, %class.scoped_refptr.201* %4, i64 0, i32 0
  store %"class.blink::Image"* %2, %"class.blink::Image"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 3, i32 1, i32 0
  %8 = call { %"struct.WTF::KeyValuePair.200"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERKS2_S6_EENS_18HashTableAddResultISI_S7_EEOT0_OT1_(%"class.WTF::HashTable.197"* %7, %"class.blink::FloatSize"* dereferenceable(8) %1, %class.scoped_refptr.201* nonnull dereferenceable(8) %4) #6
  %9 = load %"class.blink::Image"*, %"class.blink::Image"** %6, align 8
  %10 = icmp eq %"class.blink::Image"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %9, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %17 to %"class.blink::Image"*
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %17 to void (%"class.blink::Image"*)***
  %20 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %20, i64 1
  %22 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %21, align 8
  call void %22(%"class.blink::Image"* nonnull %18) #6
  br label %23

23:                                               ; preds = %16, %11, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZN5blink22CSSImageGeneratorValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::ImageResourceObserver"* dereferenceable(8), %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 2
  %7 = load i8, i8* %6, align 1
  switch i8 %7, label %23 [
    i8 19, label %8
    i8 21, label %11
    i8 20, label %14
    i8 22, label %17
    i8 23, label %20
  ]

8:                                                ; preds = %5
  %9 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  %10 = tail call %"class.blink::Image"* @_ZNK5blink8cssvalue17CSSCrossfadeValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::cssvalue::CSSCrossfadeValue"* %9, %"class.blink::ImageResourceObserver"* dereferenceable(8) %1, %"class.blink::Document"* %2, %"class.blink::ComputedStyle"* %3, %"class.blink::FloatSize"* dereferenceable(8) %4) #6
  br label %23

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSGradientValue"*
  %13 = tail call %"class.blink::Image"* @_ZNK5blink8cssvalue16CSSGradientValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::cssvalue::CSSGradientValue"* %12, %"class.blink::ImageResourceObserver"* dereferenceable(8) %1, %"class.blink::Document"* %2, %"class.blink::ComputedStyle"* %3, %"class.blink::FloatSize"* dereferenceable(8) %4) #6
  br label %23

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::CSSPaintValue"*
  %16 = tail call %"class.blink::Image"* @_ZN5blink13CSSPaintValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::CSSPaintValue"* %15, %"class.blink::ImageResourceObserver"* dereferenceable(8) %1, %"class.blink::Document"* %2, %"class.blink::ComputedStyle"* %3, %"class.blink::FloatSize"* dereferenceable(8) %4) #6
  br label %23

17:                                               ; preds = %5
  %18 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSGradientValue"*
  %19 = tail call %"class.blink::Image"* @_ZNK5blink8cssvalue16CSSGradientValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::cssvalue::CSSGradientValue"* %18, %"class.blink::ImageResourceObserver"* dereferenceable(8) %1, %"class.blink::Document"* %2, %"class.blink::ComputedStyle"* %3, %"class.blink::FloatSize"* dereferenceable(8) %4) #6
  br label %23

20:                                               ; preds = %5
  %21 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSGradientValue"*
  %22 = tail call %"class.blink::Image"* @_ZNK5blink8cssvalue16CSSGradientValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::cssvalue::CSSGradientValue"* %21, %"class.blink::ImageResourceObserver"* dereferenceable(8) %1, %"class.blink::Document"* %2, %"class.blink::ComputedStyle"* %3, %"class.blink::FloatSize"* dereferenceable(8) %4) #6
  br label %23

23:                                               ; preds = %5, %20, %17, %14, %11, %8
  %24 = phi %"class.blink::Image"* [ %22, %20 ], [ %19, %17 ], [ %16, %14 ], [ %13, %11 ], [ %10, %8 ], [ null, %5 ]
  ret %"class.blink::Image"* %24
}

declare %"class.blink::Image"* @_ZNK5blink8cssvalue17CSSCrossfadeValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::cssvalue::CSSCrossfadeValue"*, %"class.blink::ImageResourceObserver"* dereferenceable(8), %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.blink::Image"* @_ZNK5blink8cssvalue16CSSGradientValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::cssvalue::CSSGradientValue"*, %"class.blink::ImageResourceObserver"* dereferenceable(8), %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.blink::Image"* @_ZN5blink13CSSPaintValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::CSSPaintValue"*, %"class.blink::ImageResourceObserver"* dereferenceable(8), %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22CSSImageGeneratorValue21IsUsingCustomPropertyERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CSSImageGeneratorValue"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 20
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::CSSPaintValue"*
  %9 = tail call zeroext i1 @_ZNK5blink13CSSPaintValue21IsUsingCustomPropertyERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CSSPaintValue"* %8, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::Document"* %2) #6
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i1 [ %9, %7 ], [ false, %3 ]
  ret i1 %11
}

declare zeroext i1 @_ZNK5blink13CSSPaintValue21IsUsingCustomPropertyERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CSSPaintValue"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink22CSSImageGeneratorValue11IsFixedSizeEv(%"class.blink::CSSImageGeneratorValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 19
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN5blink22CSSImageGeneratorValue9FixedSizeERKNS_8DocumentERKNS_9FloatSizeE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::Document"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 19
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  %9 = tail call <2 x float> @_ZNK5blink8cssvalue17CSSCrossfadeValue9FixedSizeERKNS_8DocumentERKNS_9FloatSizeE(%"class.blink::cssvalue::CSSCrossfadeValue"* %8, %"class.blink::Document"* %1, %"class.blink::FloatSize"* dereferenceable(8) %2) #6
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi <2 x float> [ %9, %7 ], [ zeroinitializer, %3 ]
  ret <2 x float> %11
}

declare <2 x float> @_ZNK5blink8cssvalue17CSSCrossfadeValue9FixedSizeERKNS_8DocumentERKNS_9FloatSizeE(%"class.blink::cssvalue::CSSCrossfadeValue"*, %"class.blink::Document"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22CSSImageGeneratorValue9IsPendingEv(%"class.blink::CSSImageGeneratorValue"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  switch i8 %3, label %8 [
    i8 19, label %4
    i8 20, label %7
  ]

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  %6 = tail call zeroext i1 @_ZNK5blink8cssvalue17CSSCrossfadeValue9IsPendingEv(%"class.blink::cssvalue::CSSCrossfadeValue"* %5) #6
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %7, %4
  %9 = phi i1 [ true, %7 ], [ %6, %4 ], [ false, %1 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK5blink8cssvalue17CSSCrossfadeValue9IsPendingEv(%"class.blink::cssvalue::CSSCrossfadeValue"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22CSSImageGeneratorValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %21 [
    i8 19, label %6
    i8 21, label %9
    i8 20, label %12
    i8 22, label %15
    i8 23, label %18
  ]

6:                                                ; preds = %3
  %7 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  %8 = tail call zeroext i1 @_ZNK5blink8cssvalue17CSSCrossfadeValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::cssvalue::CSSCrossfadeValue"* %7, %"class.blink::Document"* %1, %"class.blink::ComputedStyle"* %2) #6
  br label %21

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSGradientValue"*
  %11 = tail call zeroext i1 @_ZNK5blink8cssvalue16CSSGradientValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::cssvalue::CSSGradientValue"* %10, %"class.blink::Document"* %1, %"class.blink::ComputedStyle"* %2) #6
  br label %21

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::CSSPaintValue"*
  %14 = tail call zeroext i1 @_ZNK5blink13CSSPaintValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::CSSPaintValue"* %13, %"class.blink::Document"* %1, %"class.blink::ComputedStyle"* %2) #6
  br label %21

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSGradientValue"*
  %17 = tail call zeroext i1 @_ZNK5blink8cssvalue16CSSGradientValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::cssvalue::CSSGradientValue"* %16, %"class.blink::Document"* %1, %"class.blink::ComputedStyle"* %2) #6
  br label %21

18:                                               ; preds = %3
  %19 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSGradientValue"*
  %20 = tail call zeroext i1 @_ZNK5blink8cssvalue16CSSGradientValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::cssvalue::CSSGradientValue"* %19, %"class.blink::Document"* %1, %"class.blink::ComputedStyle"* %2) #6
  br label %21

21:                                               ; preds = %3, %18, %15, %12, %9, %6
  %22 = phi i1 [ %20, %18 ], [ %17, %15 ], [ %14, %12 ], [ %11, %9 ], [ %8, %6 ], [ false, %3 ]
  ret i1 %22
}

declare zeroext i1 @_ZNK5blink8cssvalue17CSSCrossfadeValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::cssvalue::CSSCrossfadeValue"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink8cssvalue16CSSGradientValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::cssvalue::CSSGradientValue"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink13CSSPaintValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::CSSPaintValue"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22CSSImageGeneratorValue13LoadSubimagesERKNS_8DocumentE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::Document"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 19
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  tail call void @_ZN5blink8cssvalue17CSSCrossfadeValue13LoadSubimagesERKNS_8DocumentE(%"class.blink::cssvalue::CSSCrossfadeValue"* %7, %"class.blink::Document"* %1) #6
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN5blink8cssvalue17CSSCrossfadeValue13LoadSubimagesERKNS_8DocumentE(%"class.blink::cssvalue::CSSCrossfadeValue"*, %"class.blink::Document"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSImageGeneratorValue"* @_ZN5blink22CSSImageGeneratorValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %0, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %23 [
    i8 19, label %6
    i8 21, label %10
    i8 20, label %14
    i8 22, label %15
    i8 23, label %19
  ]

6:                                                ; preds = %3
  %7 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  %8 = tail call %"class.blink::cssvalue::CSSCrossfadeValue"* @_ZN5blink8cssvalue17CSSCrossfadeValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::cssvalue::CSSCrossfadeValue"* %7, %"class.blink::ComputedStyle"* %1, i1 zeroext %2) #6
  %9 = getelementptr inbounds %"class.blink::cssvalue::CSSCrossfadeValue", %"class.blink::cssvalue::CSSCrossfadeValue"* %8, i64 0, i32 0
  br label %23

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSLinearGradientValue"*
  %12 = tail call %"class.blink::cssvalue::CSSLinearGradientValue"* @_ZN5blink8cssvalue22CSSLinearGradientValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::cssvalue::CSSLinearGradientValue"* %11, %"class.blink::ComputedStyle"* %1, i1 zeroext %2) #6
  %13 = getelementptr inbounds %"class.blink::cssvalue::CSSLinearGradientValue", %"class.blink::cssvalue::CSSLinearGradientValue"* %12, i64 0, i32 0, i32 0
  br label %23

14:                                               ; preds = %3
  br label %23

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSRadialGradientValue"*
  %17 = tail call %"class.blink::cssvalue::CSSRadialGradientValue"* @_ZN5blink8cssvalue22CSSRadialGradientValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::cssvalue::CSSRadialGradientValue"* %16, %"class.blink::ComputedStyle"* %1, i1 zeroext %2) #6
  %18 = getelementptr inbounds %"class.blink::cssvalue::CSSRadialGradientValue", %"class.blink::cssvalue::CSSRadialGradientValue"* %17, i64 0, i32 0, i32 0
  br label %23

19:                                               ; preds = %3
  %20 = bitcast %"class.blink::CSSImageGeneratorValue"* %0 to %"class.blink::cssvalue::CSSConicGradientValue"*
  %21 = tail call %"class.blink::cssvalue::CSSConicGradientValue"* @_ZN5blink8cssvalue21CSSConicGradientValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::cssvalue::CSSConicGradientValue"* %20, %"class.blink::ComputedStyle"* %1, i1 zeroext %2) #6
  %22 = getelementptr inbounds %"class.blink::cssvalue::CSSConicGradientValue", %"class.blink::cssvalue::CSSConicGradientValue"* %21, i64 0, i32 0, i32 0
  br label %23

23:                                               ; preds = %3, %19, %15, %14, %10, %6
  %24 = phi %"class.blink::CSSImageGeneratorValue"* [ %22, %19 ], [ %18, %15 ], [ %0, %14 ], [ %13, %10 ], [ %9, %6 ], [ null, %3 ]
  ret %"class.blink::CSSImageGeneratorValue"* %24
}

declare %"class.blink::cssvalue::CSSCrossfadeValue"* @_ZN5blink8cssvalue17CSSCrossfadeValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::cssvalue::CSSCrossfadeValue"*, %"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #4

declare %"class.blink::cssvalue::CSSLinearGradientValue"* @_ZN5blink8cssvalue22CSSLinearGradientValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::cssvalue::CSSLinearGradientValue"*, %"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #4

declare %"class.blink::cssvalue::CSSRadialGradientValue"* @_ZN5blink8cssvalue22CSSRadialGradientValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::cssvalue::CSSRadialGradientValue"*, %"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #4

declare %"class.blink::cssvalue::CSSConicGradientValue"* @_ZN5blink8cssvalue21CSSConicGradientValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::cssvalue::CSSConicGradientValue"*, %"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #4

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #6

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.200"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERKS2_S6_EENS_18HashTableAddResultISI_S7_EEOT0_OT1_(%"class.WTF::HashTable.197"*, %"class.blink::FloatSize"* dereferenceable(8), %class.scoped_refptr.201* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.200"*, %"struct.WTF::KeyValuePair.200"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.200"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.200"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.197"* %0, %"struct.WTF::KeyValuePair.200"* null)
  %9 = load %"struct.WTF::KeyValuePair.200"*, %"struct.WTF::KeyValuePair.200"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.200"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::FloatSize"* %1 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %17 to i64
  %22 = mul i64 %21, 5146158508761418231
  %23 = zext i32 %20 to i64
  %24 = mul i64 %23, -682818954288075998
  %25 = add i64 %24, %22
  %26 = lshr i64 %25, 32
  %27 = trunc i64 %26 to i32
  %28 = and i32 %14, %27
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %11, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %30, i64 0, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %32, 0x7FF0000000000000
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %11, i64 %29, i32 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fcmp oeq float %35, 0x7FF0000000000000
  %37 = and i1 %33, %36
  br i1 %37, label %87, label %38

38:                                               ; preds = %10
  %39 = xor i32 %27, -1
  %40 = lshr i64 %25, 55
  %41 = trunc i64 %40 to i32
  %42 = add i32 %41, %39
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %38, %68
  %54 = phi float [ %35, %38 ], [ %82, %68 ]
  %55 = phi float [ %32, %38 ], [ %79, %68 ]
  %56 = phi %"struct.WTF::KeyValuePair.200"* [ %30, %38 ], [ %77, %68 ]
  %57 = phi %"struct.WTF::KeyValuePair.200"* [ null, %38 ], [ %72, %68 ]
  %58 = phi i64 [ %29, %38 ], [ %76, %68 ]
  %59 = phi i64 [ 0, %38 ], [ %74, %68 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.200"* %56 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %17
  br i1 %62, label %63, label %68

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %11, i64 %58, i32 0, i32 1
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %20
  br i1 %67, label %136, label %68

68:                                               ; preds = %53, %63
  %69 = fcmp oeq float %55, 0xFFF0000000000000
  %70 = fcmp oeq float %54, 0xFFF0000000000000
  %71 = or i1 %69, %70
  %72 = select i1 %71, %"struct.WTF::KeyValuePair.200"* %56, %"struct.WTF::KeyValuePair.200"* %57
  %73 = icmp eq i64 %59, 0
  %74 = select i1 %73, i64 %52, i64 %59
  %75 = add i64 %74, %58
  %76 = and i64 %75, %15
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %11, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %77, i64 0, i32 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = fcmp oeq float %79, 0x7FF0000000000000
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %11, i64 %76, i32 0, i32 1
  %82 = load float, float* %81, align 4
  %83 = fcmp oeq float %82, 0x7FF0000000000000
  %84 = and i1 %80, %83
  br i1 %84, label %85, label %53

85:                                               ; preds = %68
  %86 = icmp eq %"struct.WTF::KeyValuePair.200"* %72, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %10, %85
  %88 = phi %"struct.WTF::KeyValuePair.200"* [ %77, %85 ], [ %30, %10 ]
  %89 = bitcast %"struct.WTF::KeyValuePair.200"* %88 to i64*
  br label %99

90:                                               ; preds = %85
  %91 = bitcast %"struct.WTF::KeyValuePair.200"* %72 to i64*
  store i64 9187343241974906880, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %72, i64 0, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, 2147483647
  %96 = and i32 %95, 2147483647
  %97 = and i32 %94, -2147483648
  %98 = or i32 %96, %97
  store i32 %98, i32* %93, align 8
  br label %99

99:                                               ; preds = %87, %90
  %100 = phi i64* [ %89, %87 ], [ %91, %90 ]
  %101 = phi %"struct.WTF::KeyValuePair.200"* [ %88, %87 ], [ %72, %90 ]
  %102 = bitcast %"class.blink::FloatSize"* %1 to i64*
  %103 = load i64, i64* %102, align 4
  store i64 %103, i64* %100, align 8
  %104 = getelementptr inbounds %class.scoped_refptr.201, %class.scoped_refptr.201* %2, i64 0, i32 0
  %105 = bitcast %class.scoped_refptr.201* %2 to i64*
  %106 = load i64, i64* %105, align 8
  store %"class.blink::Image"* null, %"class.blink::Image"** %104, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %101, i64 0, i32 1
  %108 = bitcast %class.scoped_refptr.201* %107 to i64*
  %109 = getelementptr inbounds %class.scoped_refptr.201, %class.scoped_refptr.201* %107, i64 0, i32 0
  %110 = load %"class.blink::Image"*, %"class.blink::Image"** %109, align 8
  store i64 %106, i64* %108, align 8
  %111 = icmp eq %"class.blink::Image"* %110, null
  br i1 %111, label %124, label %112

112:                                              ; preds = %99
  %113 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %110, i64 0, i32 1, i32 0
  %114 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw sub i32* %114, i32 1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %113, i64 -2
  %119 = bitcast %"class.base::RefCountedThreadSafe"* %118 to %"class.blink::Image"*
  %120 = bitcast %"class.base::RefCountedThreadSafe"* %118 to void (%"class.blink::Image"*)***
  %121 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %121, i64 1
  %123 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %122, align 8
  tail call void %123(%"class.blink::Image"* nonnull %119) #6
  br label %124

124:                                              ; preds = %99, %112, %117
  %125 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, %127
  %131 = shl i32 %130, 1
  %132 = load i32, i32* %12, align 8
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %124
  %135 = tail call %"struct.WTF::KeyValuePair.200"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.197"* %0, %"struct.WTF::KeyValuePair.200"* %101)
  br label %136

136:                                              ; preds = %63, %124, %134
  %137 = phi i8 [ 1, %124 ], [ 1, %134 ], [ 0, %63 ]
  %138 = phi %"struct.WTF::KeyValuePair.200"* [ %101, %124 ], [ %135, %134 ], [ %56, %63 ]
  %139 = insertvalue { %"struct.WTF::KeyValuePair.200"*, i8 } undef, %"struct.WTF::KeyValuePair.200"* %138, 0
  %140 = insertvalue { %"struct.WTF::KeyValuePair.200"*, i8 } %139, i8 %137, 1
  ret { %"struct.WTF::KeyValuePair.200"*, i8 } %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.200"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.197"*, %"struct.WTF::KeyValuePair.200"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink9FloatSizeE13scoped_refptrINS2_5ImageEEEEEEPKcv, i64 0, i64 0)) #6
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.200"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair.200"* %47 to i64*
  store i64 9187343241974906880, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %45, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %50
  %52 = bitcast %"struct.WTF::KeyValuePair.200"* %51 to i64*
  store i64 9187343241974906880, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %50, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %54
  %56 = bitcast %"struct.WTF::KeyValuePair.200"* %55 to i64*
  store i64 9187343241974906880, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %54, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair.200"* %59 to i64*
  store i64 9187343241974906880, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %58, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %69
  %72 = bitcast %"struct.WTF::KeyValuePair.200"* %71 to i64*
  store i64 9187343241974906880, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %36, i64 %69, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !7

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.200"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS7_jSJ_(%"class.WTF::HashTable.197"* %0, %"struct.WTF::KeyValuePair.200"* %36, i32 %32, %"struct.WTF::KeyValuePair.200"* %1) #6
  ret %"struct.WTF::KeyValuePair.200"* %78
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.200"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS7_jSJ_(%"class.WTF::HashTable.197"*, %"struct.WTF::KeyValuePair.200"*, i32, %"struct.WTF::KeyValuePair.200"*) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.197", align 8
  %6 = bitcast %"class.WTF::HashTable.197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.197"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.200"* %1, %"struct.WTF::KeyValuePair.200"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.200"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.197"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.197"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.200"*, %"struct.WTF::KeyValuePair.200"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.200"* %22 to i64
  br label %75

24:                                               ; preds = %129
  %25 = bitcast %"class.WTF::HashTable.197"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.197"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %130, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.200"* [ null, %16 ], [ %133, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %131, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.200"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %71, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %69, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %66, %39
  %42 = phi i64 [ 0, %39 ], [ %67, %66 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %35, i64 %42, i32 0, i32 0
  %44 = load float, float* %43, align 4
  %45 = fcmp oeq float %44, 0xFFF0000000000000
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %35, i64 %42, i32 0, i32 1
  %47 = load float, float* %46, align 4
  %48 = fcmp oeq float %47, 0xFFF0000000000000
  %49 = or i1 %45, %48
  br i1 %49, label %66, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %35, i64 %42, i32 1, i32 0
  %52 = load %"class.blink::Image"*, %"class.blink::Image"** %51, align 8
  %53 = icmp eq %"class.blink::Image"* %52, null
  br i1 %53, label %66, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %52, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %66

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe"* %60 to %"class.blink::Image"*
  %62 = bitcast %"class.base::RefCountedThreadSafe"* %60 to void (%"class.blink::Image"*)***
  %63 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %63, i64 1
  %65 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %64, align 8
  call void %65(%"class.blink::Image"* nonnull %61) #6
  br label %66

66:                                               ; preds = %59, %54, %50, %41
  %67 = add nuw nsw i64 %42, 1
  %68 = icmp eq i64 %67, %40
  br i1 %68, label %69, label %41

69:                                               ; preds = %66, %37
  %70 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #6
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %71

71:                                               ; preds = %28, %69
  %72 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, -2147483648
  store i32 %74, i32* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret %"struct.WTF::KeyValuePair.200"* %33

75:                                               ; preds = %21, %129
  %76 = phi i64 [ %130, %129 ], [ %23, %21 ]
  %77 = phi i32 [ %131, %129 ], [ %13, %21 ]
  %78 = phi %"struct.WTF::KeyValuePair.200"* [ %132, %129 ], [ %22, %21 ]
  %79 = phi %"struct.WTF::KeyValuePair.200"* [ %133, %129 ], [ null, %21 ]
  %80 = phi i32 [ %134, %129 ], [ 0, %21 ]
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %78, i64 %81
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %82, i64 0, i32 0, i32 0
  %84 = load float, float* %83, align 4
  %85 = fcmp oeq float %84, 0x7FF0000000000000
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %78, i64 %81, i32 0, i32 1
  %87 = load float, float* %86, align 4
  %88 = fcmp oeq float %87, 0x7FF0000000000000
  %89 = and i1 %85, %88
  br i1 %89, label %129, label %90

90:                                               ; preds = %75
  %91 = fcmp oeq float %84, 0xFFF0000000000000
  %92 = fcmp oeq float %87, 0xFFF0000000000000
  %93 = or i1 %91, %92
  br i1 %93, label %129, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %82, i64 0, i32 0
  %96 = call { %"struct.WTF::KeyValuePair.200"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.197"* nonnull %5, %"class.blink::FloatSize"* dereferenceable(8) %95) #6
  %97 = extractvalue { %"struct.WTF::KeyValuePair.200"*, i8 } %96, 0
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %97, i64 0, i32 1, i32 0
  %99 = load %"class.blink::Image"*, %"class.blink::Image"** %98, align 8
  %100 = icmp eq %"class.blink::Image"* %99, null
  br i1 %100, label %113, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %99, i64 0, i32 1, i32 0
  %103 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw sub i32* %103, i32 1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %113

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %102, i64 -2
  %108 = bitcast %"class.base::RefCountedThreadSafe"* %107 to %"class.blink::Image"*
  %109 = bitcast %"class.base::RefCountedThreadSafe"* %107 to void (%"class.blink::Image"*)***
  %110 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %110, i64 1
  %112 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %111, align 8
  call void %112(%"class.blink::Image"* nonnull %108) #6
  br label %113

113:                                              ; preds = %94, %101, %106
  %114 = bitcast %"struct.WTF::KeyValuePair.200"* %82 to i64*
  %115 = bitcast %"struct.WTF::KeyValuePair.200"* %97 to i64*
  %116 = load i64, i64* %114, align 8
  store i64 %116, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %97, i64 0, i32 1
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %78, i64 %81, i32 1
  %119 = getelementptr inbounds %class.scoped_refptr.201, %class.scoped_refptr.201* %118, i64 0, i32 0
  %120 = bitcast %class.scoped_refptr.201* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %class.scoped_refptr.201* %117 to i64*
  store i64 %121, i64* %122, align 8
  store %"class.blink::Image"* null, %"class.blink::Image"** %119, align 8
  %123 = load %"struct.WTF::KeyValuePair.200"*, %"struct.WTF::KeyValuePair.200"** %15, align 8
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %123, i64 %81
  %125 = icmp eq %"struct.WTF::KeyValuePair.200"* %124, %3
  %126 = select i1 %125, %"struct.WTF::KeyValuePair.200"* %97, %"struct.WTF::KeyValuePair.200"* %79
  %127 = load i32, i32* %12, align 8
  %128 = ptrtoint %"struct.WTF::KeyValuePair.200"* %123 to i64
  br label %129

129:                                              ; preds = %75, %90, %113
  %130 = phi i64 [ %76, %90 ], [ %128, %113 ], [ %76, %75 ]
  %131 = phi i32 [ %77, %90 ], [ %127, %113 ], [ %77, %75 ]
  %132 = phi %"struct.WTF::KeyValuePair.200"* [ %78, %90 ], [ %123, %113 ], [ %78, %75 ]
  %133 = phi %"struct.WTF::KeyValuePair.200"* [ %79, %90 ], [ %126, %113 ], [ %79, %75 ]
  %134 = add i32 %80, 1
  %135 = icmp eq i32 %134, %131
  br i1 %135, label %24, label %75
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.200"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.197"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.200"*, %"struct.WTF::KeyValuePair.200"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::FloatSize"* %1 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %10 to i64
  %15 = mul i64 %14, 5146158508761418231
  %16 = zext i32 %13 to i64
  %17 = mul i64 %16, -682818954288075998
  %18 = add i64 %17, %15
  %19 = lshr i64 %18, 32
  %20 = trunc i64 %19 to i32
  %21 = and i32 %7, %20
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %4, i64 %22
  %24 = ptrtoint %"struct.WTF::KeyValuePair.200"* %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %23, i64 0, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %26, 0x7FF0000000000000
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %4, i64 %22, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fcmp oeq float %29, 0x7FF0000000000000
  %31 = and i1 %27, %30
  br i1 %31, label %50, label %32

32:                                               ; preds = %2
  %33 = xor i32 %20, -1
  %34 = lshr i64 %18, 55
  %35 = trunc i64 %34 to i32
  %36 = add i32 %35, %33
  %37 = shl i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 7
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 2
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 20
  %44 = xor i32 %43, %42
  %45 = or i32 %44, 1
  %46 = zext i32 %45 to i64
  br label %56

47:                                               ; preds = %72
  %48 = ptrtoint %"struct.WTF::KeyValuePair.200"* %81 to i64
  %49 = inttoptr i64 %76 to %"struct.WTF::KeyValuePair.200"*
  br label %50

50:                                               ; preds = %47, %2
  %51 = phi i64 [ %48, %47 ], [ %24, %2 ]
  %52 = phi %"struct.WTF::KeyValuePair.200"* [ %49, %47 ], [ null, %2 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair.200"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair.200"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %90

56:                                               ; preds = %72, %32
  %57 = phi i64 [ 0, %32 ], [ %76, %72 ]
  %58 = phi float [ %29, %32 ], [ %87, %72 ]
  %59 = phi float [ %26, %32 ], [ %84, %72 ]
  %60 = phi i64 [ %24, %32 ], [ %82, %72 ]
  %61 = phi %"struct.WTF::KeyValuePair.200"* [ %23, %32 ], [ %81, %72 ]
  %62 = phi i64 [ %22, %32 ], [ %80, %72 ]
  %63 = phi i64 [ 0, %32 ], [ %78, %72 ]
  %64 = bitcast %"struct.WTF::KeyValuePair.200"* %61 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %10
  br i1 %66, label %67, label %72

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %4, i64 %62, i32 0, i32 1
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %13
  br i1 %71, label %90, label %72

72:                                               ; preds = %67, %56
  %73 = fcmp oeq float %59, 0xFFF0000000000000
  %74 = fcmp oeq float %58, 0xFFF0000000000000
  %75 = or i1 %74, %73
  %76 = select i1 %75, i64 %60, i64 %57
  %77 = icmp eq i64 %63, 0
  %78 = select i1 %77, i64 %46, i64 %63
  %79 = add i64 %78, %62
  %80 = and i64 %79, %8
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %4, i64 %80
  %82 = ptrtoint %"struct.WTF::KeyValuePair.200"* %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %81, i64 0, i32 0, i32 0
  %84 = load float, float* %83, align 4
  %85 = fcmp oeq float %84, 0x7FF0000000000000
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %4, i64 %80, i32 0, i32 1
  %87 = load float, float* %86, align 4
  %88 = fcmp oeq float %87, 0x7FF0000000000000
  %89 = and i1 %85, %88
  br i1 %89, label %47, label %56

90:                                               ; preds = %67, %50
  %91 = phi i64 [ %55, %50 ], [ %60, %67 ]
  %92 = phi i8 [ 0, %50 ], [ 1, %67 ]
  %93 = inttoptr i64 %91 to %"struct.WTF::KeyValuePair.200"*
  %94 = insertvalue { %"struct.WTF::KeyValuePair.200"*, i8 } undef, %"struct.WTF::KeyValuePair.200"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair.200"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair.200"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS2_iEENS_18HashTableAddResultISF_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::FloatSize"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::FloatSize"* %1 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %17 to i64
  %22 = mul i64 %21, 5146158508761418231
  %23 = zext i32 %20 to i64
  %24 = mul i64 %23, -682818954288075998
  %25 = add i64 %24, %22
  %26 = lshr i64 %25, 32
  %27 = trunc i64 %26 to i32
  %28 = and i32 %14, %27
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %32, 0x7FF0000000000000
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %29, i32 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fcmp oeq float %35, 0x7FF0000000000000
  %37 = and i1 %33, %36
  br i1 %37, label %96, label %38

38:                                               ; preds = %10
  %39 = xor i32 %27, -1
  %40 = lshr i64 %25, 55
  %41 = trunc i64 %40 to i32
  %42 = add i32 %41, %39
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %38, %68
  %54 = phi float [ %35, %38 ], [ %82, %68 ]
  %55 = phi float [ %32, %38 ], [ %79, %68 ]
  %56 = phi %"struct.WTF::KeyValuePair"* [ %30, %38 ], [ %77, %68 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ null, %38 ], [ %72, %68 ]
  %58 = phi i64 [ %29, %38 ], [ %76, %68 ]
  %59 = phi i64 [ 0, %38 ], [ %74, %68 ]
  %60 = bitcast %"struct.WTF::KeyValuePair"* %56 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %17
  br i1 %62, label %63, label %68

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %58, i32 0, i32 1
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %20
  br i1 %67, label %114, label %68

68:                                               ; preds = %53, %63
  %69 = fcmp oeq float %55, 0xFFF0000000000000
  %70 = fcmp oeq float %54, 0xFFF0000000000000
  %71 = or i1 %69, %70
  %72 = select i1 %71, %"struct.WTF::KeyValuePair"* %56, %"struct.WTF::KeyValuePair"* %57
  %73 = icmp eq i64 %59, 0
  %74 = select i1 %73, i64 %52, i64 %59
  %75 = add i64 %74, %58
  %76 = and i64 %75, %15
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = fcmp oeq float %79, 0x7FF0000000000000
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %76, i32 0, i32 1
  %82 = load float, float* %81, align 4
  %83 = fcmp oeq float %82, 0x7FF0000000000000
  %84 = and i1 %80, %83
  br i1 %84, label %85, label %53

85:                                               ; preds = %68
  %86 = icmp eq %"struct.WTF::KeyValuePair"* %72, null
  br i1 %86, label %96, label %87

87:                                               ; preds = %85
  %88 = bitcast %"struct.WTF::KeyValuePair"* %72 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %88, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 1
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 2147483647
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  br label %96

96:                                               ; preds = %10, %85, %87
  %97 = phi %"struct.WTF::KeyValuePair"* [ %72, %87 ], [ %77, %85 ], [ %30, %10 ]
  %98 = bitcast %"class.blink::FloatSize"* %1 to i64*
  %99 = bitcast %"struct.WTF::KeyValuePair"* %97 to i64*
  %100 = load i64, i64* %98, align 4
  store i64 %100, i64* %99, align 4
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %97, i64 0, i32 1
  %102 = load i32, i32* %2, align 4
  store i32 %102, i32* %101, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, %105
  %109 = shl i32 %108, 1
  %110 = load i32, i32* %12, align 8
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %96
  %113 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %97)
  br label %114

114:                                              ; preds = %63, %96, %112
  %115 = phi i8 [ 1, %96 ], [ 1, %112 ], [ 0, %63 ]
  %116 = phi %"struct.WTF::KeyValuePair"* [ %97, %96 ], [ %113, %112 ], [ %56, %63 ]
  %117 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %116, 0
  %118 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %117, i8 %115, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 12
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink9FloatSizeEjEEEEPKcv, i64 0, i64 0)) #6
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair"* %47 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %48, align 4
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1
  store i32 0, i32* %49, align 4
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50
  %52 = bitcast %"struct.WTF::KeyValuePair"* %51 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %52, align 4
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1
  store i32 0, i32* %53, align 4
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54
  %56 = bitcast %"struct.WTF::KeyValuePair"* %55 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %56, align 4
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1
  store i32 0, i32* %57, align 4
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair"* %59 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %60, align 4
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1
  store i32 0, i32* %61, align 4
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69
  %72 = bitcast %"struct.WTF::KeyValuePair"* %71 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %72, align 4
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1
  store i32 0, i32* %73, align 4
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !8

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS4_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #6
  ret %"struct.WTF::KeyValuePair"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS4_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %73
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %74, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %77, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %75, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #6
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %73
  %43 = phi i64 [ %74, %73 ], [ %23, %21 ]
  %44 = phi i32 [ %75, %73 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %76, %73 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %77, %73 ], [ null, %21 ]
  %47 = phi i32 [ %78, %73 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0, i32 0
  %51 = load float, float* %50, align 4
  %52 = fcmp oeq float %51, 0x7FF0000000000000
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48, i32 0, i32 1
  %54 = load float, float* %53, align 4
  %55 = fcmp oeq float %54, 0x7FF0000000000000
  %56 = and i1 %52, %55
  br i1 %56, label %73, label %57

57:                                               ; preds = %42
  %58 = fcmp oeq float %51, 0xFFF0000000000000
  %59 = fcmp oeq float %54, 0xFFF0000000000000
  %60 = or i1 %58, %59
  br i1 %60, label %73, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %63 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::FloatSize"* dereferenceable(8) %62) #6
  %64 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %63, 0
  %65 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  %66 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 12, i1 false) #6
  %67 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 %48
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, %3
  %70 = select i1 %69, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %46
  %71 = load i32, i32* %12, align 8
  %72 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %73

73:                                               ; preds = %42, %57, %61
  %74 = phi i64 [ %43, %57 ], [ %72, %61 ], [ %43, %42 ]
  %75 = phi i32 [ %44, %57 ], [ %71, %61 ], [ %44, %42 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %45, %57 ], [ %67, %61 ], [ %45, %42 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %46, %57 ], [ %70, %61 ], [ %46, %42 ]
  %78 = add i32 %47, 1
  %79 = icmp eq i32 %78, %75
  br i1 %79, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::FloatSize"* %1 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %10 to i64
  %15 = mul i64 %14, 5146158508761418231
  %16 = zext i32 %13 to i64
  %17 = mul i64 %16, -682818954288075998
  %18 = add i64 %17, %15
  %19 = lshr i64 %18, 32
  %20 = trunc i64 %19 to i32
  %21 = and i32 %7, %20
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = ptrtoint %"struct.WTF::KeyValuePair"* %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %26, 0x7FF0000000000000
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fcmp oeq float %29, 0x7FF0000000000000
  %31 = and i1 %27, %30
  br i1 %31, label %50, label %32

32:                                               ; preds = %2
  %33 = xor i32 %20, -1
  %34 = lshr i64 %18, 55
  %35 = trunc i64 %34 to i32
  %36 = add i32 %35, %33
  %37 = shl i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 7
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 2
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 20
  %44 = xor i32 %43, %42
  %45 = or i32 %44, 1
  %46 = zext i32 %45 to i64
  br label %56

47:                                               ; preds = %72
  %48 = ptrtoint %"struct.WTF::KeyValuePair"* %81 to i64
  %49 = inttoptr i64 %76 to %"struct.WTF::KeyValuePair"*
  br label %50

50:                                               ; preds = %47, %2
  %51 = phi i64 [ %48, %47 ], [ %24, %2 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %49, %47 ], [ null, %2 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %90

56:                                               ; preds = %72, %32
  %57 = phi i64 [ 0, %32 ], [ %76, %72 ]
  %58 = phi float [ %29, %32 ], [ %87, %72 ]
  %59 = phi float [ %26, %32 ], [ %84, %72 ]
  %60 = phi i64 [ %24, %32 ], [ %82, %72 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ %23, %32 ], [ %81, %72 ]
  %62 = phi i64 [ %22, %32 ], [ %80, %72 ]
  %63 = phi i64 [ 0, %32 ], [ %78, %72 ]
  %64 = bitcast %"struct.WTF::KeyValuePair"* %61 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %10
  br i1 %66, label %67, label %72

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %62, i32 0, i32 1
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %13
  br i1 %71, label %90, label %72

72:                                               ; preds = %67, %56
  %73 = fcmp oeq float %59, 0xFFF0000000000000
  %74 = fcmp oeq float %58, 0xFFF0000000000000
  %75 = or i1 %74, %73
  %76 = select i1 %75, i64 %60, i64 %57
  %77 = icmp eq i64 %63, 0
  %78 = select i1 %77, i64 %46, i64 %63
  %79 = add i64 %78, %62
  %80 = and i64 %79, %8
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %80
  %82 = ptrtoint %"struct.WTF::KeyValuePair"* %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0, i32 0
  %84 = load float, float* %83, align 4
  %85 = fcmp oeq float %84, 0x7FF0000000000000
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %80, i32 0, i32 1
  %87 = load float, float* %86, align 4
  %88 = fcmp oeq float %87, 0x7FF0000000000000
  %89 = and i1 %85, %88
  br i1 %89, label %47, label %56

90:                                               ; preds = %67, %50
  %91 = phi i64 [ %55, %50 ], [ %60, %67 ]
  %92 = phi i8 [ 0, %50 ], [ 1, %67 ]
  %93 = inttoptr i64 %91 to %"struct.WTF::KeyValuePair"*
  %94 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.197"*, %"struct.WTF::KeyValuePair.200"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %5 = icmp eq %"class.blink::Image"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::Image"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::Image"*)***
  %15 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %15, i64 1
  %17 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %16, align 8
  tail call void %17(%"class.blink::Image"* nonnull %13) #6
  br label %18

18:                                               ; preds = %2, %6, %11
  %19 = bitcast %"struct.WTF::KeyValuePair.200"* %1 to i32*
  store i32 -8388608, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %1, i64 0, i32 0, i32 1
  %21 = bitcast float* %20 to i32*
  store i32 -8388608, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, 1
  %25 = and i32 %24, 2147483647
  %26 = and i32 %23, -2147483648
  %27 = or i32 %25, %26
  store i32 %27, i32* %22, align 8
  %28 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, -1
  store i32 %30, i32* %28, align 4
  %31 = mul i32 %30, 6
  %32 = getelementptr inbounds %"class.WTF::HashTable.197", %"class.WTF::HashTable.197"* %0, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp ult i32 %31, %33
  %35 = icmp ugt i32 %33, 8
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %85

37:                                               ; preds = %18
  %38 = lshr i32 %33, 1
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  %41 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %40, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink9FloatSizeE13scoped_refptrINS2_5ImageEEEEEEPKcv, i64 0, i64 0)) #6
  %42 = bitcast i8* %41 to %"struct.WTF::KeyValuePair.200"*
  %43 = icmp eq i32 %38, 0
  br i1 %43, label %83, label %44

44:                                               ; preds = %37
  %45 = add nsw i64 %39, -1
  %46 = and i64 %39, 3
  %47 = icmp ult i64 %45, 3
  br i1 %47, label %71, label %48

48:                                               ; preds = %44
  %49 = sub nsw i64 %39, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %68, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %69, %50 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %51
  %54 = bitcast %"struct.WTF::KeyValuePair.200"* %53 to i64*
  store i64 9187343241974906880, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %51, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %55, align 8
  %56 = or i64 %51, 1
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %56
  %58 = bitcast %"struct.WTF::KeyValuePair.200"* %57 to i64*
  store i64 9187343241974906880, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %56, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %59, align 8
  %60 = or i64 %51, 2
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %60
  %62 = bitcast %"struct.WTF::KeyValuePair.200"* %61 to i64*
  store i64 9187343241974906880, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %60, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %63, align 8
  %64 = or i64 %51, 3
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %64
  %66 = bitcast %"struct.WTF::KeyValuePair.200"* %65 to i64*
  store i64 9187343241974906880, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %64, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %67, align 8
  %68 = add nuw nsw i64 %51, 4
  %69 = add i64 %52, -4
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %50

71:                                               ; preds = %50, %44
  %72 = phi i64 [ 0, %44 ], [ %68, %50 ]
  %73 = icmp eq i64 %46, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %71, %74
  %75 = phi i64 [ %80, %74 ], [ %72, %71 ]
  %76 = phi i64 [ %81, %74 ], [ %46, %71 ]
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %75
  %78 = bitcast %"struct.WTF::KeyValuePair.200"* %77 to i64*
  store i64 9187343241974906880, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.200", %"struct.WTF::KeyValuePair.200"* %42, i64 %75, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %79, align 8
  %80 = add nuw nsw i64 %75, 1
  %81 = add i64 %76, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %74, !llvm.loop !9

83:                                               ; preds = %71, %74, %37
  %84 = tail call %"struct.WTF::KeyValuePair.200"* @_ZN3WTF9HashTableIN5blink9FloatSizeENS_12KeyValuePairIS2_13scoped_refptrINS1_5ImageEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS6_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS7_jSJ_(%"class.WTF::HashTable.197"* %0, %"struct.WTF::KeyValuePair.200"* %42, i32 %38, %"struct.WTF::KeyValuePair.200"* null) #6
  br label %85

85:                                               ; preds = %83, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_22CSSImageGeneratorValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.208"*, %"class.blink::CSSImageGeneratorValue"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.208", %"class.blink::PersistentBase.208"* %0, i64 0, i32 0
  store %"class.blink::CSSImageGeneratorValue"* %1, %"class.blink::CSSImageGeneratorValue"** %3, align 8
  %4 = ptrtoint %"class.blink::CSSImageGeneratorValue"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %10
    i64 -1, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.208", %"class.blink::PersistentBase.208"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  tail call void @_ZN5blink14PersistentBaseINS_22CSSImageGeneratorValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.208"* %0) #6
  br label %33

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::PersistentBase.208", %"class.blink::PersistentBase.208"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #6
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !4

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #6
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  br label %33

33:                                               ; preds = %21, %10, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_22CSSImageGeneratorValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.208"*) local_unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.blink::PersistentBase.208"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 0, label %31
    i64 -1, label %31
  ]

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %20, label %23, !prof !4

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %21) #6
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  br label %23

23:                                               ; preds = %11, %20
  %24 = phi %"class.blink::PersistentNode"* [ %22, %20 ], [ %18, %11 ]
  %25 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to %"class.blink::PersistentBase.208"**
  store %"class.blink::PersistentBase.208"* %0, %"class.blink::PersistentBase.208"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22CSSImageGeneratorValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentBase.208", %"class.blink::PersistentBase.208"* %0, i64 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %30, align 8
  br label %31

31:                                               ; preds = %1, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22CSSImageGeneratorValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::CSSImageGeneratorValue"**
  %5 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #6
  %7 = icmp eq %"class.blink::CSSImageGeneratorValue"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %5, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22CSSImageGeneratorValueEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #6
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22CSSImageGeneratorValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #4

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.207"*, i8 } @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERS4_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.204"*, %"class.blink::ImageResourceObserver"** dereferenceable(8), %"struct.blink::SizeAndCount"* dereferenceable(12)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.207"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.204"* %0, %"struct.WTF::KeyValuePair.207"* null)
  %9 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.207"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ImageResourceObserver"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %39, i64 0, i32 0
  %41 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %40, align 8
  %42 = icmp eq %"class.blink::ImageResourceObserver"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ImageResourceObserver"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ImageResourceObserver"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.207"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.207"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ImageResourceObserver"* %59, %43
  br i1 %64, label %105, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ImageResourceObserver"* %59, inttoptr (i64 -1 to %"class.blink::ImageResourceObserver"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.207"* %60, %"struct.WTF::KeyValuePair.207"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %72, i64 0, i32 0
  %74 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %73, align 8
  %75 = icmp eq %"class.blink::ImageResourceObserver"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.207"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.207"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 20, i1 false) #6
  %80 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.207"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.207"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %89, i64 0, i32 1
  %92 = bitcast %"struct.blink::SizeAndCount"* %91 to i8*
  %93 = bitcast %"struct.blink::SizeAndCount"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 12, i1 false) #6
  %94 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %12, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %87
  %104 = tail call %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.204"* %0, %"struct.WTF::KeyValuePair.207"* %89)
  br label %105

105:                                              ; preds = %58, %87, %103
  %106 = phi i8 [ 1, %87 ], [ 1, %103 ], [ 0, %58 ]
  %107 = phi %"struct.WTF::KeyValuePair.207"* [ %89, %87 ], [ %104, %103 ], [ %60, %58 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair.207"*, i8 } undef, %"struct.WTF::KeyValuePair.207"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair.207"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair.207"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.204"*, %"struct.WTF::KeyValuePair.207"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink21ImageResourceObserverENS2_12SizeAndCountEEEEEPKcv, i64 0, i64 0)) #6
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.207"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 7
  %41 = icmp ult i64 %39, 7
  br i1 %41, label %73, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %70, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %71, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair.207"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 20, i1 false) #6
  %49 = or i64 %45, 1
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %36, i64 %49
  %51 = bitcast %"struct.WTF::KeyValuePair.207"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 20, i1 false) #6
  %52 = or i64 %45, 2
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %36, i64 %52
  %54 = bitcast %"struct.WTF::KeyValuePair.207"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 20, i1 false) #6
  %55 = or i64 %45, 3
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %36, i64 %55
  %57 = bitcast %"struct.WTF::KeyValuePair.207"* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 20, i1 false) #6
  %58 = or i64 %45, 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %36, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair.207"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 20, i1 false) #6
  %61 = or i64 %45, 5
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.207"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 20, i1 false) #6
  %64 = or i64 %45, 6
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %36, i64 %64
  %66 = bitcast %"struct.WTF::KeyValuePair.207"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 20, i1 false) #6
  %67 = or i64 %45, 7
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %36, i64 %67
  %69 = bitcast %"struct.WTF::KeyValuePair.207"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 20, i1 false) #6
  %70 = add nuw nsw i64 %45, 8
  %71 = add i64 %46, -8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %44

73:                                               ; preds = %44, %38
  %74 = phi i64 [ 0, %38 ], [ %70, %44 ]
  %75 = icmp eq i64 %40, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %73, %76
  %77 = phi i64 [ %81, %76 ], [ %74, %73 ]
  %78 = phi i64 [ %82, %76 ], [ %40, %73 ]
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %36, i64 %77
  %80 = bitcast %"struct.WTF::KeyValuePair.207"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 20, i1 false) #6
  %81 = add nuw nsw i64 %77, 1
  %82 = add i64 %78, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %76, !llvm.loop !10

84:                                               ; preds = %73, %76, %31
  %85 = call %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.204"* %0, %"struct.WTF::KeyValuePair.207"* %36, i32 %32, %"struct.WTF::KeyValuePair.207"* %1) #6
  ret %"struct.WTF::KeyValuePair.207"* %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.207"* @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.204"*, %"struct.WTF::KeyValuePair.207"*, i32, %"struct.WTF::KeyValuePair.207"*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.204", align 8
  %6 = bitcast %"class.WTF::HashTable.204"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.204"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.207"* %1, %"struct.WTF::KeyValuePair.207"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.207"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.204"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.204"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.207"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.204"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.204"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.207"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #6
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret %"struct.WTF::KeyValuePair.207"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.207"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.207"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.207"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.207"*, i8 } @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.204"* nonnull %5, %"class.blink::ImageResourceObserver"** dereferenceable(8) %53) #6
  %55 = extractvalue { %"struct.WTF::KeyValuePair.207"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.207"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.207"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #6
  %58 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.207"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.207"* %55, %"struct.WTF::KeyValuePair.207"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.207"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.207"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.207"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.207"*, i8 } @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.204"*, %"class.blink::ImageResourceObserver"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::ImageResourceObserver"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.207"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %32, i64 0, i32 0
  %35 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %34, align 8
  %36 = icmp eq %"class.blink::ImageResourceObserver"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::ImageResourceObserver"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.207"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.207"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.207"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.207"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.207"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::ImageResourceObserver"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::ImageResourceObserver"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::ImageResourceObserver"* %63, inttoptr (i64 -1 to %"class.blink::ImageResourceObserver"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.207"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %75, i64 0, i32 0
  %78 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %77, align 8
  %79 = icmp eq %"class.blink::ImageResourceObserver"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.207"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.207"*, i8 } undef, %"struct.WTF::KeyValuePair.207"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.207"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.207"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } @_ZN3WTF9HashTableIPKN5blink21ImageResourceObserverENS_12KeyValuePairIS4_NS1_12SizeAndCountEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.204"*, %"class.blink::ImageResourceObserver"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.207"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.204", %"class.WTF::HashTable.204"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::ImageResourceObserver"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %34, i64 0, i32 0
  %36 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::ImageResourceObserver"*
  %38 = icmp eq %"class.blink::ImageResourceObserver"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::ImageResourceObserver"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::ImageResourceObserver"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %63, i64 0, i32 0
  %65 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %64, align 8
  %66 = icmp eq %"class.blink::ImageResourceObserver"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.207"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.207"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.207", %"struct.WTF::KeyValuePair.207"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.207"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.207"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } undef, %"struct.WTF::KeyValuePair.207"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } %79, %"struct.WTF::KeyValuePair.207"* %78, 1
  ret { %"struct.WTF::KeyValuePair.207"*, %"struct.WTF::KeyValuePair.207"* } %80
}

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
