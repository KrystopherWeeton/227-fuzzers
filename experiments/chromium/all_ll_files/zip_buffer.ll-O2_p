; ModuleID = '../../third_party/libzip/src/lib/zip_buffer.c'
source_filename = "../../third_party/libzip/src/lib/zip_buffer.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_buffer = type { i8, i8, i8*, i64, i64 }
%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_zip_buffer_data(%struct.zip_buffer* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_buffer_free(%struct.zip_buffer*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.zip_buffer* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #7
  br label %10

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  tail call void @free(i8* %11) #7
  br label %12

12:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_zip_buffer_eof(%struct.zip_buffer* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_zip_buffer_get(%struct.zip_buffer* nocapture, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %1
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %2, %6, %11
  store i8 0, i8* %3, align 8
  br label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  store i64 %9, i64* %7, align 8
  br label %22

22:                                               ; preds = %15, %16, %21
  %23 = phi i8* [ null, %15 ], [ null, %16 ], [ %19, %21 ]
  ret i8* %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_zip_buffer_peek(%struct.zip_buffer* nocapture, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %1
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %2, %11, %6
  store i8 0, i8* %3, align 8
  br label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %8
  br label %20

20:                                               ; preds = %16, %15
  %21 = phi i8* [ null, %15 ], [ %19, %16 ]
  ret i8* %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i16 @_zip_buffer_get_16(%struct.zip_buffer* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 2
  %9 = icmp ult i64 %8, 2
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %8, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %10, %5, %1
  store i8 0, i8* %2, align 8
  br label %28

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %15
  store i64 %8, i64* %6, align 8
  %21 = load i8, i8* %18, align 1
  %22 = zext i8 %21 to i16
  %23 = getelementptr inbounds i8, i8* %18, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i16
  %26 = shl nuw i16 %25, 8
  %27 = or i16 %26, %22
  br label %28

28:                                               ; preds = %15, %14, %20
  %29 = phi i16 [ %27, %20 ], [ 0, %14 ], [ 0, %15 ]
  ret i16 %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_zip_buffer_get_32(%struct.zip_buffer* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 4
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %8, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %10, %5, %1
  store i8 0, i8* %2, align 8
  br label %38

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %15
  store i64 %8, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 8
  %25 = getelementptr inbounds i8, i8* %18, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = or i32 %24, %27
  %29 = shl nuw nsw i32 %28, 8
  %30 = getelementptr inbounds i8, i8* %18, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = or i32 %29, %32
  %34 = shl nuw i32 %33, 8
  %35 = load i8, i8* %18, align 1
  %36 = zext i8 %35 to i32
  %37 = or i32 %34, %36
  br label %38

38:                                               ; preds = %15, %14, %20
  %39 = phi i32 [ %37, %20 ], [ 0, %14 ], [ 0, %15 ]
  ret i32 %39
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_zip_buffer_get_64(%struct.zip_buffer* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 8
  %9 = icmp ult i64 %8, 8
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %8, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %10, %5, %1
  store i8 0, i8* %2, align 8
  br label %58

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %58, label %20

20:                                               ; preds = %15
  store i64 %8, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 7
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = shl nuw i64 %23, 56
  %25 = getelementptr inbounds i8, i8* %18, i64 6
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = shl nuw nsw i64 %27, 48
  %29 = or i64 %28, %24
  %30 = getelementptr inbounds i8, i8* %18, i64 5
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 40
  %34 = or i64 %29, %33
  %35 = getelementptr inbounds i8, i8* %18, i64 4
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = shl nuw nsw i64 %37, 32
  %39 = or i64 %34, %38
  %40 = getelementptr inbounds i8, i8* %18, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = shl nuw nsw i64 %42, 24
  %44 = or i64 %39, %43
  %45 = getelementptr inbounds i8, i8* %18, i64 2
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = shl nuw nsw i64 %47, 16
  %49 = or i64 %44, %48
  %50 = getelementptr inbounds i8, i8* %18, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = shl nuw nsw i64 %52, 8
  %54 = or i64 %49, %53
  %55 = load i8, i8* %18, align 1
  %56 = zext i8 %55 to i64
  %57 = add i64 %54, %56
  br label %58

58:                                               ; preds = %15, %14, %20
  %59 = phi i64 [ %57, %20 ], [ 0, %14 ], [ 0, %15 ]
  ret i64 %59
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_zip_buffer_get_8(%struct.zip_buffer* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %8, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %10, %5, %1
  store i8 0, i8* %2, align 8
  br label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  store i64 %8, i64* %6, align 8
  %21 = load i8, i8* %18, align 1
  br label %22

22:                                               ; preds = %15, %14, %20
  %23 = phi i8 [ %21, %20 ], [ 0, %14 ], [ 0, %15 ]
  ret i8 %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_zip_buffer_left(%struct.zip_buffer* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i64 [ %10, %5 ], [ 0, %1 ]
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_zip_buffer_read(%struct.zip_buffer* nocapture, i8* nocapture, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  br label %13

13:                                               ; preds = %3, %7
  %14 = phi i64 [ %12, %7 ], [ 0, %3 ]
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %16, label %23

16:                                               ; preds = %13
  br i1 %6, label %37, label %17

17:                                               ; preds = %16
  %18 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  br label %27

23:                                               ; preds = %13
  br i1 %6, label %37, label %24

24:                                               ; preds = %23
  %25 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %24, %17
  %28 = phi i64 [ %21, %17 ], [ %26, %24 ]
  %29 = phi i64 [ %22, %17 ], [ %2, %24 ]
  %30 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %31 = add i64 %28, %29
  %32 = icmp ult i64 %31, %29
  br i1 %32, label %37, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %31, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %16, %33, %27, %23
  %38 = phi i64 [ %29, %33 ], [ %29, %27 ], [ %2, %23 ], [ 0, %16 ]
  store i8 0, i8* %4, align 8
  br label %45

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %28
  %43 = icmp eq i8* %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  store i64 %31, i64* %30, align 8
  br label %45

45:                                               ; preds = %37, %39, %44
  %46 = phi i64 [ %38, %37 ], [ %29, %39 ], [ %29, %44 ]
  %47 = phi i8* [ null, %37 ], [ null, %39 ], [ %42, %44 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %47, i64 %46, i1 false)
  ret i64 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.zip_buffer* @_zip_buffer_new(i8*, i64) local_unnamed_addr #1 {
  %3 = icmp eq i8* %0, null
  %4 = zext i1 %3 to i8
  br i1 %3, label %5, label %8

5:                                                ; preds = %2
  %6 = tail call noalias i8* @malloc(i64 %1) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %5, %2
  %9 = phi i8* [ %6, %5 ], [ %0, %2 ]
  %10 = tail call noalias i8* @malloc(i64 32) #7
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  br i1 %3, label %13, label %23

13:                                               ; preds = %12
  tail call void @free(i8* nonnull %9) #7
  br label %23

14:                                               ; preds = %8
  %15 = bitcast i8* %10 to %struct.zip_buffer*
  store i8 1, i8* %10, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 8
  %17 = bitcast i8* %16 to i8**
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %1, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %10, i64 24
  %21 = bitcast i8* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 %4, i8* %22, align 1
  br label %23

23:                                               ; preds = %12, %13, %5, %14
  %24 = phi %struct.zip_buffer* [ %15, %14 ], [ null, %5 ], [ null, %13 ], [ null, %12 ]
  ret %struct.zip_buffer* %24
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_buffer* @_zip_buffer_new_from_source(%struct.zip_source*, i64, i8*, %struct.zip_error*) local_unnamed_addr #1 {
  %5 = icmp eq i8* %2, null
  %6 = zext i1 %5 to i8
  br i1 %5, label %7, label %10

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 %1) #7
  %9 = icmp eq i8* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %7, %4
  %11 = phi i8* [ %8, %7 ], [ %2, %4 ]
  %12 = tail call noalias i8* @malloc(i64 32) #7
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  br i1 %5, label %15, label %27

15:                                               ; preds = %14
  tail call void @free(i8* nonnull %11) #7
  br label %27

16:                                               ; preds = %10
  store i8 1, i8* %12, align 8
  %17 = getelementptr inbounds i8, i8* %12, i64 8
  %18 = bitcast i8* %17 to i8**
  store i8* %11, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 16
  %20 = bitcast i8* %19 to i64*
  store i64 %1, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %12, i64 24
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %6, i8* %23, align 1
  %24 = bitcast i8* %12 to %struct.zip_buffer*
  %25 = tail call i32 @_zip_read(%struct.zip_source* %0, i8* nonnull %11, i64 %1, %struct.zip_error* %3) #7
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %28, label %31

27:                                               ; preds = %14, %15, %7
  tail call void @zip_error_set(%struct.zip_error* %3, i32 14, i32 0) #7
  br label %31

28:                                               ; preds = %16
  br i1 %5, label %29, label %30

29:                                               ; preds = %28
  tail call void @free(i8* nonnull %11) #7
  br label %30

30:                                               ; preds = %28, %29
  tail call void @free(i8* nonnull %12) #7
  br label %31

31:                                               ; preds = %16, %30, %27
  %32 = phi %struct.zip_buffer* [ null, %27 ], [ null, %30 ], [ %24, %16 ]
  ret %struct.zip_buffer* %32
}

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #6

declare i32 @_zip_read(%struct.zip_source*, i8*, i64, %struct.zip_error*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_zip_buffer_offset(%struct.zip_buffer* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_zip_buffer_ok(%struct.zip_buffer* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_zip_buffer_put(%struct.zip_buffer* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %2
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %10, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %7, %3
  store i8 0, i8* %4, align 8
  br label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %9
  %21 = icmp eq i8* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  store i64 %10, i64* %8, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %1, i64 %2, i1 false)
  br label %23

23:                                               ; preds = %17, %16, %22
  %24 = phi i32 [ 0, %22 ], [ -1, %16 ], [ -1, %17 ]
  ret i32 %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_zip_buffer_put_16(%struct.zip_buffer* nocapture, i16 zeroext) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 2
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %6, %2
  store i8 0, i8* %3, align 8
  br label %26

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  store i64 %9, i64* %7, align 8
  %22 = trunc i16 %1 to i8
  store i8 %22, i8* %19, align 1
  %23 = lshr i16 %1, 8
  %24 = trunc i16 %23 to i8
  %25 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %24, i8* %25, align 1
  br label %26

26:                                               ; preds = %16, %15, %21
  %27 = phi i32 [ 0, %21 ], [ -1, %15 ], [ -1, %16 ]
  ret i32 %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_zip_buffer_put_32(%struct.zip_buffer* nocapture, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 4
  %10 = icmp ult i64 %9, 4
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %6, %2
  store i8 0, i8* %3, align 8
  br label %32

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  store i64 %9, i64* %7, align 8
  %22 = trunc i32 %1 to i8
  store i8 %22, i8* %19, align 1
  %23 = lshr i32 %1, 8
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %1, 16
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds i8, i8* %19, i64 2
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %1, 24
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds i8, i8* %19, i64 3
  store i8 %30, i8* %31, align 1
  br label %32

32:                                               ; preds = %16, %15, %21
  %33 = phi i32 [ 0, %21 ], [ -1, %15 ], [ -1, %16 ]
  ret i32 %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_zip_buffer_put_64(%struct.zip_buffer* nocapture, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 8
  %10 = icmp ult i64 %9, 8
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %6, %2
  store i8 0, i8* %3, align 8
  br label %44

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %44, label %21

21:                                               ; preds = %16
  store i64 %9, i64* %7, align 8
  %22 = trunc i64 %1 to i8
  store i8 %22, i8* %19, align 1
  %23 = lshr i64 %1, 8
  %24 = trunc i64 %23 to i8
  %25 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %1, 16
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds i8, i8* %19, i64 2
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %1, 24
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds i8, i8* %19, i64 3
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %1, 32
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %1, 40
  %36 = trunc i64 %35 to i8
  %37 = getelementptr inbounds i8, i8* %19, i64 5
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %1, 48
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds i8, i8* %19, i64 6
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %1, 56
  %42 = trunc i64 %41 to i8
  %43 = getelementptr inbounds i8, i8* %19, i64 7
  store i8 %42, i8* %43, align 1
  br label %44

44:                                               ; preds = %16, %15, %21
  %45 = phi i32 [ 0, %21 ], [ -1, %15 ], [ -1, %16 ]
  ret i32 %45
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_zip_buffer_put_8(%struct.zip_buffer* nocapture, i8 zeroext) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %9, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %6, %2
  store i8 0, i8* %3, align 8
  br label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  store i64 %9, i64* %7, align 8
  store i8 %1, i8* %19, align 1
  br label %22

22:                                               ; preds = %16, %15, %21
  %23 = phi i32 [ 0, %21 ], [ -1, %15 ], [ -1, %16 ]
  ret i32 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_zip_buffer_set_offset(%struct.zip_buffer* nocapture, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  %6 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %10

8:                                                ; preds = %2
  store i8 1, i8* %6, align 8
  %9 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  store i64 %1, i64* %9, align 8
  br label %10

10:                                               ; preds = %8, %7
  %11 = phi i32 [ -1, %7 ], [ 0, %8 ]
  ret i32 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_zip_buffer_skip(%struct.zip_buffer* nocapture, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  %6 = icmp ult i64 %5, %4
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  store i8 0, i8* %8, align 8
  br label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %5
  %13 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 0
  br i1 %12, label %14, label %15

14:                                               ; preds = %9
  store i8 0, i8* %13, align 8
  br label %16

15:                                               ; preds = %9
  store i8 1, i8* %13, align 8
  store i64 %5, i64* %3, align 8
  br label %16

16:                                               ; preds = %15, %14, %7
  %17 = phi i32 [ -1, %7 ], [ -1, %14 ], [ 0, %15 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_zip_buffer_size(%struct.zip_buffer* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_buffer, %struct.zip_buffer* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
