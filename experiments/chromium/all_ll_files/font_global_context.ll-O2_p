; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_global_context.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_global_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::ThreadSpecific<blink::FontGlobalContext *> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::ThreadSpecific<blink::FontGlobalContext *> >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::ThreadSpecific.335" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.112", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i64 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::Worklist.43"* }
%"class.blink::Worklist.43" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.92", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.106", [4 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94", %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64 }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { float }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.115", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.43"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.217" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::FontGlobalContext" = type { %"class.blink::FontCache", %"class.std::__1::unique_ptr.195", %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t*, %"class.std::__1::unique_ptr.206", %"class.WTF::LruCache", %"class.WTF::LruCache" }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap", %"class.WTF::HashMap.173", %"class.blink::FontDataCache", %"class.blink::Persistent.193", float, [4 x i8] }>
%class.sk_sp = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashSet" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.blink::FontCacheKey", %"class.WTF::HashMap.248" }
%"struct.blink::FontCacheKey" = type <{ %"class.blink::FontFaceCreationParams", i32, i32, float, [4 x i8], %class.scoped_refptr.242, i8, [7 x i8] }>
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.237" }
%"struct.std::__1::atomic.237" = type { %"struct.std::__1::__atomic_base.238" }
%"struct.std::__1::__atomic_base.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.242 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.243" }
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, float }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::HashMap.248" = type { %"class.WTF::HashTable.249" }
%"class.WTF::HashTable.249" = type <{ %"struct.WTF::KeyValuePair.252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.252" = type { i32, %"class.std::__1::unique_ptr.253" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::FontPlatformData"* }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.224, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.235, i8, [7 x i8] }>
%class.sk_sp.224 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.225" }
%"struct.std::__1::atomic.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__cxx_atomic_impl.228" }
%"struct.std::__1::__cxx_atomic_impl.228" = type { %"struct.std::__1::__cxx_atomic_base_impl.229" }
%"struct.std::__1::__cxx_atomic_base_impl.229" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.235 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%"class.WTF::HashMap.173" = type { %"class.WTF::HashTable.174" }
%"class.WTF::HashTable.174" = type <{ %"struct.WTF::KeyValuePair.177"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.177" = type { %"struct.blink::FallbackListCompositeKey", %"class.std::__1::unique_ptr.264" }
%"struct.blink::FallbackListCompositeKey" = type { %"class.WTF::Vector.259", i32, float, float, float, i32, i32 }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"struct.blink::FontCacheKey"*, i32, i32 }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::ShapeCache"* }
%"class.blink::ShapeCache" = type { %"class.WTF::HashMap.267", %"class.WTF::HashMap.306", i32, %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.267" = type { %"class.WTF::HashTable.268" }
%"class.WTF::HashTable.268" = type <{ %"struct.WTF::KeyValuePair.271"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.271" = type { i32, %class.scoped_refptr.272 }
%class.scoped_refptr.272 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.273", float, %"class.blink::FloatRect", %"class.WTF::Vector.275", %class.scoped_refptr.281, %"class.std::__1::unique_ptr.295", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.273" = type { %"class.base::RefCounted.274" }
%"class.base::RefCounted.274" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.WTF::Vector.275" = type { %"class.WTF::VectorBuffer.276" }
%"class.WTF::VectorBuffer.276" = type { %"class.WTF::VectorBufferBase.277" }
%"class.WTF::VectorBufferBase.277" = type { %class.scoped_refptr.278*, i32, i32 }
%class.scoped_refptr.278 = type opaque
%class.scoped_refptr.281 = type { %"class.blink::SimpleFontData"* }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.285", %class.scoped_refptr.292, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.282" }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.284 }
%union.anon.284 = type { float }
%class.SkFont = type <{ %class.sk_sp.224, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.288, %class.scoped_refptr.288 }
%class.scoped_refptr.288 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.292 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.293", [4 x i8] }>
%"class.WTF::RefCounted.293" = type { %"class.base::RefCounted.294" }
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.298", i32, float }
%"class.WTF::Vector.298" = type { %"class.WTF::VectorBuffer.299" }
%"class.WTF::VectorBuffer.299" = type { %"class.WTF::VectorBufferBase.300" }
%"class.WTF::VectorBufferBase.300" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.WTF::HashMap.306" = type { %"class.WTF::HashTable.307" }
%"class.WTF::HashTable.307" = type <{ %"struct.WTF::KeyValuePair.310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.310" = type { %"class.blink::ShapeCache::SmallStringKey", %class.scoped_refptr.272 }
%"class.blink::ShapeCache::SmallStringKey" = type { i32, i16, [15 x i16] }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.225" }
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.178", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.178" = type { %"class.WTF::HashTable.179" }
%"class.WTF::HashTable.179" = type <{ %"struct.WTF::KeyValuePair.182"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.182" = type { %"class.blink::FontPlatformData"*, %"struct.std::__1::pair.315" }
%"struct.std::__1::pair.315" = type <{ %class.scoped_refptr.288, i32, [4 x i8] }>
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.183", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.183" = type { %"class.WTF::HashTable.184" }
%"class.WTF::HashTable.184" = type <{ %"struct.WTF::KeyValuePair.187"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.187" = type <{ %class.scoped_refptr.288, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.188", i32, i32 }
%"class.WTF::Vector.188" = type { %"class.WTF::VectorBuffer.189" }
%"class.WTF::VectorBuffer.189" = type { %"class.WTF::VectorBufferBase.190" }
%"class.WTF::VectorBufferBase.190" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %class.scoped_refptr.288 }
%"class.blink::Persistent.193" = type { %"class.blink::PersistentBase.194" }
%"class.blink::PersistentBase.194" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::HarfBuzzFontCache"* }
%"class.blink::HarfBuzzFontCache" = type { %"class.WTF::HashMap.198" }
%"class.WTF::HashMap.198" = type { %"class.WTF::HashTable.199" }
%"class.WTF::HashTable.199" = type <{ %"struct.WTF::KeyValuePair.202"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.202" = type { i64, %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.blink::HbFontCacheEntry"* }
%"class.blink::HbFontCacheEntry" = type { %"class.WTF::RefCounted.317", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.323" }
%"class.WTF::RefCounted.317" = type { %"class.base::RefCounted.318" }
%"class.base::RefCounted.318" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %struct.hb_font_t* }
%struct.hb_font_t = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.blink::HarfBuzzFontData"* }
%"struct.blink::HarfBuzzFontData" = type opaque
%struct.hb_font_funcs_t = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::FontUniqueNameLookup"* }
%"class.blink::FontUniqueNameLookup" = type { i32 (...)** }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.212", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.212" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"struct.WTF::KeyValuePair.216"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.216" = type { i32, %"class.std::__1::unique_ptr.329" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey" = type { i32, %"class.blink::IdentifiableToken", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* }
%"class.blink::IdentifiableToken" = type { i64 }
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* }
%"struct.std::__1::default_delete.204" = type { i8 }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.282", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink9FontCacheD2Ev = comdat any

$_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3GetERKj = comdat any

$_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3PutERKjOS2_ = comdat any

$_ZN3WTF7HashMapIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS1_10ShapeCacheENS3_14default_deleteIS5_EEEENS1_28FallbackListCompositeKeyHashENS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS8_EENS_18PartitionAllocatorEED2Ev = comdat any

$_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEED2Ev = comdat any

$_ZN5blink10ShapeCacheD2Ev = comdat any

$_ZN3WTF14ThreadSpecificIPN5blink17FontGlobalContextEE7DestroyEPv = comdat any

$_ZNKSt3__114default_deleteIN5blink17HarfBuzzFontCacheEEclEPS2_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_S8_SL_EERKjSF_EENS_18HashTableAddResultISM_SG_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6ExpandEPSG_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE8RehashToEPSG_jSN_ = comdat any

$_ZN3WTF7HashMapIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS1_14default_deleteISB_EEEES7_S9_NS8_ISE_EENS_18PartitionAllocatorEE5eraseERKj = comdat any

@_ZZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent = internal global i64 0, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific.335"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17FontGlobalContextEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FontGlobalContext *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIm13scoped_refptrIN5blink16HbFontCacheEntryEENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [278 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<unsigned long, scoped_refptr<blink::HbFontCacheEntry>, WTF::IntHash<unsigned long>, WTF::UnsignedWithZeroKeyHashTraits<unsigned long>, WTF::HashTraits<scoped_refptr<blink::HbFontCacheEntry> >, WTF::PartitionAllocator>]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEEEEPKcv = private unnamed_addr constant [405 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, std::__1::unique_ptr<WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey, std::__1::default_delete<WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey> > >]\00", align 1

@_ZN5blink17FontGlobalContextC1Ev = hidden unnamed_addr alias void (%"class.blink::FontGlobalContext"*), void (%"class.blink::FontGlobalContext"*)* @_ZN5blink17FontGlobalContextC2Ev
@_ZN5blink17FontGlobalContextD1Ev = hidden unnamed_addr alias void (%"class.blink::FontGlobalContext"*), void (%"class.blink::FontGlobalContext"*)* @_ZN5blink17FontGlobalContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store %"class.blink::FontGlobalContext"** null, %"class.blink::FontGlobalContext"*** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent to %"class.blink::FontGlobalContext"***), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificIPN5blink17FontGlobalContextEE7DestroyEPv) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent) #8
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %8
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17FontGlobalContextEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %12) #8
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %8 ]
  %15 = bitcast i8* %14 to %"class.blink::FontGlobalContext"**
  %16 = load %"class.blink::FontGlobalContext"*, %"class.blink::FontGlobalContext"** %15, align 8
  %17 = icmp eq %"class.blink::FontGlobalContext"* %16, null
  %18 = icmp eq i32 %0, 1
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %38

20:                                               ; preds = %13
  %21 = tail call noalias i8* @malloc(i64 312) #8
  %22 = bitcast i8* %21 to %"class.blink::FontCache"*
  tail call void @_ZN5blink9FontCacheC1Ev(%"class.blink::FontCache"* %22) #8
  %23 = getelementptr inbounds i8, i8* %21, i64 184
  %24 = getelementptr inbounds i8, i8* %21, i64 240
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #8
  %25 = getelementptr inbounds i8, i8* %21, i64 256
  %26 = bitcast i8* %25 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 52, i1 false) #8
  store i64 250, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %21, i64 264
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 20, i1 false) #8
  %28 = getelementptr inbounds i8, i8* %21, i64 288
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #8
  %29 = getelementptr inbounds i8, i8* %21, i64 304
  %30 = bitcast i8* %29 to i64*
  store i64 250, i64* %30, align 8
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !3

33:                                               ; preds = %20
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17FontGlobalContextEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %34) #8
  br label %35

35:                                               ; preds = %20, %33
  %36 = phi i8* [ %34, %33 ], [ %31, %20 ]
  %37 = bitcast i8* %36 to i8**
  store i8* %21, i8** %37, align 8
  br label %38

38:                                               ; preds = %13, %35
  %39 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43, !prof !3

41:                                               ; preds = %38
  %42 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17FontGlobalContextEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink17FontGlobalContext3GetENS_14CreateIfNeededEE17s_font_persistent, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %42) #8
  br label %43

43:                                               ; preds = %38, %41
  %44 = phi i8* [ %42, %41 ], [ %39, %38 ]
  %45 = bitcast i8* %44 to %"class.blink::FontGlobalContext"**
  %46 = load %"class.blink::FontGlobalContext"*, %"class.blink::FontGlobalContext"** %45, align 8
  ret %"class.blink::FontGlobalContext"* %46
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17FontGlobalContextC2Ev(%"class.blink::FontGlobalContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 0
  tail call void @_ZN5blink9FontCacheC1Ev(%"class.blink::FontCache"* %2) #8
  %3 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 5, i32 1
  %5 = bitcast %"class.WTF::DoublyLinkedList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #8
  %6 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 5, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr.195"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 52, i1 false)
  store i64 250, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 6
  %9 = bitcast %"class.WTF::LruCache"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #8
  %10 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 6, i32 1
  %11 = bitcast %"class.WTF::DoublyLinkedList"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #8
  %12 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 6, i32 2
  store i64 250, i64* %12, align 8
  ret void
}

declare void @_ZN5blink9FontCacheC1Ev(%"class.blink::FontCache"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17FontGlobalContextD2Ev(%"class.blink::FontGlobalContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.216"* %3, null
  br i1 %4, label %27, label %5, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %22, %9
  %12 = phi i64 [ 0, %9 ], [ %23, %22 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %3, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %17, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %17, align 8
  %19 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %18 to i8*
  tail call void @free(i8* %21) #8
  br label %22

22:                                               ; preds = %20, %16, %11
  %23 = add nuw nsw i64 %12, 1
  %24 = icmp eq i64 %23, %10
  br i1 %24, label %25, label %11

25:                                               ; preds = %22, %5
  %26 = bitcast %"struct.WTF::KeyValuePair.216"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #8
  store %"struct.WTF::KeyValuePair.216"* null, %"struct.WTF::KeyValuePair.216"** %2, align 8
  br label %27

27:                                               ; preds = %1, %25
  %28 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %29 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %28, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair.216"* %29, null
  br i1 %30, label %53, label %31, !prof !4

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %31
  %36 = zext i32 %33 to i64
  br label %37

37:                                               ; preds = %48, %35
  %38 = phi i64 [ 0, %35 ], [ %49, %48 ]
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %29, i64 %38, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %48, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %29, i64 %38, i32 1, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %43, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %43, align 8
  %45 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %44 to i8*
  tail call void @free(i8* %47) #8
  br label %48

48:                                               ; preds = %46, %42, %37
  %49 = add nuw nsw i64 %38, 1
  %50 = icmp eq i64 %49, %36
  br i1 %50, label %51, label %37

51:                                               ; preds = %48, %31
  %52 = bitcast %"struct.WTF::KeyValuePair.216"* %29 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #8
  store %"struct.WTF::KeyValuePair.216"* null, %"struct.WTF::KeyValuePair.216"** %28, align 8
  br label %53

53:                                               ; preds = %27, %51
  %54 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.blink::FontUniqueNameLookup"*, %"class.blink::FontUniqueNameLookup"** %54, align 8
  store %"class.blink::FontUniqueNameLookup"* null, %"class.blink::FontUniqueNameLookup"** %54, align 8
  %56 = icmp eq %"class.blink::FontUniqueNameLookup"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.blink::FontUniqueNameLookup"* %55 to void (%"class.blink::FontUniqueNameLookup"*)***
  %59 = load void (%"class.blink::FontUniqueNameLookup"*)**, void (%"class.blink::FontUniqueNameLookup"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::FontUniqueNameLookup"*)*, void (%"class.blink::FontUniqueNameLookup"*)** %59, i64 2
  %61 = load void (%"class.blink::FontUniqueNameLookup"*)*, void (%"class.blink::FontUniqueNameLookup"*)** %60, align 8
  tail call void %61(%"class.blink::FontUniqueNameLookup"* nonnull %55) #8
  br label %62

62:                                               ; preds = %53, %57
  %63 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.195"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::HarfBuzzFontCache"*, %"class.blink::HarfBuzzFontCache"** %64, align 8
  store %"class.blink::HarfBuzzFontCache"* null, %"class.blink::HarfBuzzFontCache"** %64, align 8
  %66 = icmp eq %"class.blink::HarfBuzzFontCache"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.std::__1::unique_ptr.195"* %63 to %"struct.std::__1::default_delete.204"*
  tail call void @_ZNKSt3__114default_deleteIN5blink17HarfBuzzFontCacheEEclEPS2_(%"struct.std::__1::default_delete.204"* %68, %"class.blink::HarfBuzzFontCache"* nonnull %65) #8
  br label %69

69:                                               ; preds = %62, %67
  %70 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 0
  tail call void @_ZN5blink9FontCacheD2Ev(%"class.blink::FontCache"* %70) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9FontCacheD2Ev(%"class.blink::FontCache"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 11, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific.335"*, %"class.WTF::ThreadSpecific.335"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific.335", %"class.WTF::ThreadSpecific.335"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10, i32 1
  tail call void @_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::LinkedHashSet"* %25) #8
  %26 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %27 = load %"struct.WTF::KeyValuePair.182"*, %"struct.WTF::KeyValuePair.182"** %26, align 8
  %28 = icmp eq %"struct.WTF::KeyValuePair.182"* %27, null
  br i1 %28, label %62, label %29, !prof !4

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %29
  %34 = zext i32 %31 to i64
  br label %35

35:                                               ; preds = %57, %33
  %36 = phi i64 [ 0, %33 ], [ %58, %57 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %27, i64 %36, i32 0
  %38 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %37, align 8
  %39 = icmp eq %"class.blink::FontPlatformData"* %38, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  br i1 %39, label %57, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %27, i64 %36, i32 1, i32 0, i32 0
  %42 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %41, align 8
  %43 = icmp eq %"class.blink::SimpleFontData"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %42, i64 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.base::RefCounted.283", %"class.base::RefCounted.283"* %45, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %46) #8
  %47 = getelementptr inbounds %"class.base::RefCounted.283", %"class.base::RefCounted.283"* %45, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.base::RefCounted.283", %"class.base::RefCounted.283"* %45, i64 -2
  %52 = bitcast %"class.base::RefCounted.283"* %51 to %"class.blink::FontData"*
  %53 = bitcast %"class.base::RefCounted.283"* %51 to void (%"class.blink::FontData"*)***
  %54 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %54, i64 1
  %56 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %55, align 8
  tail call void %56(%"class.blink::FontData"* nonnull %52) #8
  br label %57

57:                                               ; preds = %50, %44, %40, %35
  %58 = add nuw nsw i64 %36, 1
  %59 = icmp eq i64 %58, %34
  br i1 %59, label %60, label %35

60:                                               ; preds = %57, %29
  %61 = bitcast %"struct.WTF::KeyValuePair.182"* %27 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #8
  store %"struct.WTF::KeyValuePair.182"* null, %"struct.WTF::KeyValuePair.182"** %26, align 8
  br label %62

62:                                               ; preds = %24, %60
  %63 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 9
  tail call void @_ZN3WTF7HashMapIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS1_10ShapeCacheENS3_14default_deleteIS5_EEEENS1_28FallbackListCompositeKeyHashENS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS8_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap.173"* %63) #8
  %64 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = icmp eq %"struct.WTF::KeyValuePair"* %65, null
  br i1 %66, label %163, label %67, !prof !4

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 8, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %161, label %71

71:                                               ; preds = %67
  %72 = zext i32 %69 to i64
  br label %73

73:                                               ; preds = %158, %71
  %74 = phi i64 [ 0, %71 ], [ %159, %158 ]
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %78, label %82

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %74, i32 0, i32 3
  %80 = load float, float* %79, align 8
  %81 = fcmp oeq float %80, 0x47EFFFFFE0000000
  br i1 %81, label %158, label %82

82:                                               ; preds = %78, %73
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %74, i32 1, i32 0, i32 0
  %84 = load %"struct.WTF::KeyValuePair.252"*, %"struct.WTF::KeyValuePair.252"** %83, align 8
  %85 = icmp eq %"struct.WTF::KeyValuePair.252"* %84, null
  br i1 %85, label %108, label %86, !prof !4

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %74, i32 1, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %86
  %91 = zext i32 %88 to i64
  br label %92

92:                                               ; preds = %103, %90
  %93 = phi i64 [ 0, %90 ], [ %104, %103 ]
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.252", %"struct.WTF::KeyValuePair.252"* %84, i64 %93, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, -2
  br i1 %96, label %103, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.252", %"struct.WTF::KeyValuePair.252"* %84, i64 %93, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %98, align 8
  store %"class.blink::FontPlatformData"* null, %"class.blink::FontPlatformData"** %98, align 8
  %100 = icmp eq %"class.blink::FontPlatformData"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  tail call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %99) #8
  %102 = bitcast %"class.blink::FontPlatformData"* %99 to i8*
  tail call void @free(i8* %102) #8
  br label %103

103:                                              ; preds = %101, %97, %92
  %104 = add nuw nsw i64 %93, 1
  %105 = icmp eq i64 %104, %91
  br i1 %105, label %106, label %92

106:                                              ; preds = %103, %86
  %107 = bitcast %"struct.WTF::KeyValuePair.252"* %84 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %107) #8
  store %"struct.WTF::KeyValuePair.252"* null, %"struct.WTF::KeyValuePair.252"** %83, align 8
  br label %108

108:                                              ; preds = %82, %106
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %74, i32 0, i32 5, i32 0
  %110 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %109, align 8
  %111 = icmp eq %"class.blink::FontVariationSettings"* %110, null
  br i1 %111, label %132, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %110, i64 0, i32 1, i32 0
  %114 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %113, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %114) #8
  %115 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %113, i64 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %132

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %113, i64 -4
  %120 = bitcast %"class.base::RefCounted"* %119 to %"class.blink::FontTagValuePair"**
  %121 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %120, align 8
  %122 = icmp eq %"class.blink::FontTagValuePair"* %121, null
  %123 = bitcast %"class.blink::FontTagValuePair"* %121 to i8*
  br i1 %122, label %130, label %124, !prof !4

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %113, i64 -1, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %124
  store i32 0, i32* %125, align 4
  br label %129

129:                                              ; preds = %128, %124
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %123) #8
  br label %130

130:                                              ; preds = %129, %118
  %131 = bitcast %"class.base::RefCounted"* %119 to i8*
  tail call void @free(i8* %131) #8
  br label %132

132:                                              ; preds = %130, %112, %108
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %74, i32 0, i32 0, i32 2
  %134 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  tail call void @_ZdlPv(i8* %140) #9
  br label %141

141:                                              ; preds = %138, %132
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %74, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #8
  br label %158

158:                                              ; preds = %157, %154, %141, %78
  %159 = add nuw nsw i64 %74, 1
  %160 = icmp eq i64 %159, %72
  br i1 %160, label %161, label %73

161:                                              ; preds = %158, %67
  %162 = bitcast %"struct.WTF::KeyValuePair"* %65 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %162) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %64, align 8
  br label %163

163:                                              ; preds = %62, %161
  %164 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  %165 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %164, align 8
  %166 = icmp eq %"class.blink::PersistentNode"* %165, null
  br i1 %166, label %186, label %167

167:                                              ; preds = %163
  %168 = load %"class.WTF::ThreadSpecific.335"*, %"class.WTF::ThreadSpecific.335"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %169 = getelementptr inbounds %"class.WTF::ThreadSpecific.335", %"class.WTF::ThreadSpecific.335"* %168, i64 0, i32 1
  %170 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %169) #8
  %171 = icmp eq i8* %170, null
  br i1 %171, label %172, label %174, !prof !3

172:                                              ; preds = %167
  %173 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %169, i8* %173) #8
  br label %174

174:                                              ; preds = %172, %167
  %175 = phi i8* [ %173, %172 ], [ %170, %167 ]
  %176 = bitcast i8* %175 to %"class.blink::ThreadState"**
  %177 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %177, i64 0, i32 3, i32 0, i32 0, i32 0
  %179 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %178, align 8
  %180 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %164, align 8
  %181 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %179, i64 0, i32 0, i32 0
  %182 = bitcast %"class.blink::PersistentRegion"* %179 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast %"class.blink::PersistentNode"* %180 to i64*
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %180, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %185, align 8
  store %"class.blink::PersistentNode"* %180, %"class.blink::PersistentNode"** %181, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %164, align 8
  br label %186

186:                                              ; preds = %163, %174
  %187 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 3, i32 0
  %188 = load %class.SkFontMgr*, %class.SkFontMgr** %187, align 8
  %189 = icmp eq %class.SkFontMgr* %188, null
  br i1 %189, label %200, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %188, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 -1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %200

194:                                              ; preds = %190
  %195 = bitcast %class.SkFontMgr* %188 to %class.SkRefCntBase*
  %196 = bitcast %class.SkFontMgr* %188 to void (%class.SkRefCntBase*)***
  %197 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %196, align 8
  %198 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, i64 2
  %199 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %198, align 8
  tail call void %199(%class.SkRefCntBase* nonnull %195) #8
  br label %200

200:                                              ; preds = %186, %190, %194
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontUniqueNameLookup"* @_ZN5blink17FontGlobalContext23GetFontUniqueNameLookupEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1)
  %2 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::FontUniqueNameLookup"*, %"class.blink::FontUniqueNameLookup"** %2, align 8
  %4 = icmp eq %"class.blink::FontUniqueNameLookup"* %3, null
  br i1 %4, label %5, label %19

5:                                                ; preds = %0
  %6 = tail call %"class.blink::FontUniqueNameLookup"* @_ZN5blink20FontUniqueNameLookup27GetPlatformUniqueNameLookupEv() #8
  %7 = ptrtoint %"class.blink::FontUniqueNameLookup"* %6 to i64
  %8 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1)
  %9 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %8, i64 0, i32 4
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.206"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::FontUniqueNameLookup"*, %"class.blink::FontUniqueNameLookup"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.206"* %9 to i64*
  store i64 %7, i64* %12, align 8
  %13 = icmp eq %"class.blink::FontUniqueNameLookup"* %11, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::FontUniqueNameLookup"* %11 to void (%"class.blink::FontUniqueNameLookup"*)***
  %16 = load void (%"class.blink::FontUniqueNameLookup"*)**, void (%"class.blink::FontUniqueNameLookup"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::FontUniqueNameLookup"*)*, void (%"class.blink::FontUniqueNameLookup"*)** %16, i64 2
  %18 = load void (%"class.blink::FontUniqueNameLookup"*)*, void (%"class.blink::FontUniqueNameLookup"*)** %17, align 8
  tail call void %18(%"class.blink::FontUniqueNameLookup"* nonnull %11) #8
  br label %19

19:                                               ; preds = %0, %5, %14
  %20 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1)
  %21 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.blink::FontUniqueNameLookup"*, %"class.blink::FontUniqueNameLookup"** %21, align 8
  ret %"class.blink::FontUniqueNameLookup"* %22
}

declare %"class.blink::FontUniqueNameLookup"* @_ZN5blink20FontUniqueNameLookup27GetPlatformUniqueNameLookupEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HarfBuzzFontCache"* @_ZN5blink17FontGlobalContext20GetHarfBuzzFontCacheEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1)
  %2 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.195"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HarfBuzzFontCache"*, %"class.blink::HarfBuzzFontCache"** %3, align 8
  %5 = icmp eq %"class.blink::HarfBuzzFontCache"* %4, null
  br i1 %5, label %6, label %17

6:                                                ; preds = %0
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([278 x i8], [278 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIm13scoped_refptrIN5blink16HbFontCacheEntryEENS_7IntHashImEENS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = ptrtoint i8* %7 to i64
  %9 = load %"class.blink::HarfBuzzFontCache"*, %"class.blink::HarfBuzzFontCache"** %3, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.195"* %2 to i64*
  store i64 %8, i64* %10, align 8
  %11 = icmp eq %"class.blink::HarfBuzzFontCache"* %9, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = bitcast i8* %7 to %"class.blink::HarfBuzzFontCache"*
  br label %17

14:                                               ; preds = %6
  %15 = bitcast %"class.std::__1::unique_ptr.195"* %2 to %"struct.std::__1::default_delete.204"*
  tail call void @_ZNKSt3__114default_deleteIN5blink17HarfBuzzFontCacheEEclEPS2_(%"struct.std::__1::default_delete.204"* %15, %"class.blink::HarfBuzzFontCache"* nonnull %9) #8
  %16 = load %"class.blink::HarfBuzzFontCache"*, %"class.blink::HarfBuzzFontCache"** %3, align 8
  br label %17

17:                                               ; preds = %12, %14, %0
  %18 = phi %"class.blink::HarfBuzzFontCache"* [ %4, %0 ], [ %16, %14 ], [ %13, %12 ]
  ret %"class.blink::HarfBuzzFontCache"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink17FontGlobalContext26GetOrComputeTypefaceDigestERKNS_16FontPlatformDataE(%"class.blink::FontGlobalContext"*, %"class.blink::FontPlatformData"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::IdentifiableToken", align 8
  %5 = tail call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %1) #8
  %6 = icmp eq %class.SkTypeface* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  %9 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %5, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %3, align 4
  %11 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 5
  %12 = call %"class.blink::IdentifiableToken"* @_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3GetERKj(%"class.WTF::LruCache"* %11, i32* nonnull dereferenceable(4) %3)
  %13 = icmp eq %"class.blink::IdentifiableToken"* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %7
  %15 = bitcast %"class.blink::IdentifiableToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = call i64 @_ZNK5blink16FontPlatformData21ComputeTypefaceDigestEv(%"class.blink::FontPlatformData"* %1) #8
  %17 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %4, i64 0, i32 0
  store i64 %16, i64* %17, align 8
  call void @_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3PutERKjOS2_(%"class.WTF::LruCache"* %11, i32* nonnull dereferenceable(4) %3, %"class.blink::IdentifiableToken"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  %18 = call %"class.blink::IdentifiableToken"* @_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3GetERKj(%"class.WTF::LruCache"* %11, i32* nonnull dereferenceable(4) %3)
  br label %19

19:                                               ; preds = %7, %14
  %20 = phi %"class.blink::IdentifiableToken"* [ %12, %7 ], [ %18, %14 ]
  %21 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  br label %23

23:                                               ; preds = %2, %19
  %24 = phi i64 [ %22, %19 ], [ 0, %2 ]
  ret i64 %24
}

declare %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::IdentifiableToken"* @_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3GetERKj(%"class.WTF::LruCache"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %111, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair.216"* %8, null
  %10 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  br i1 %9, label %68, label %12

12:                                               ; preds = %6
  %13 = add i32 %11, -1
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %1, align 4
  %16 = shl i32 %15, 15
  %17 = xor i32 %16, -1
  %18 = add i32 %15, %17
  %19 = lshr i32 %18, 10
  %20 = xor i32 %19, %18
  %21 = mul i32 %20, 9
  %22 = lshr i32 %21, 6
  %23 = xor i32 %22, %21
  %24 = shl i32 %23, 11
  %25 = xor i32 %24, -1
  %26 = add i32 %23, %25
  %27 = lshr i32 %26, 16
  %28 = xor i32 %27, %26
  %29 = and i32 %28, %13
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %8, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, %15
  br i1 %34, label %63, label %35

35:                                               ; preds = %12
  %36 = xor i32 %28, -1
  %37 = lshr i32 %26, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %54, %35
  %50 = phi i32 [ %33, %35 ], [ %61, %54 ]
  %51 = phi i64 [ %30, %35 ], [ %58, %54 ]
  %52 = phi i64 [ 0, %35 ], [ %56, %54 ]
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %68, label %54

54:                                               ; preds = %49
  %55 = icmp eq i64 %52, 0
  %56 = select i1 %55, i64 %48, i64 %52
  %57 = add i64 %56, %51
  %58 = and i64 %57, %14
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %8, i64 %58
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %15
  br i1 %62, label %63, label %49

63:                                               ; preds = %54, %12
  %64 = phi %"struct.WTF::KeyValuePair.216"* [ %31, %12 ], [ %59, %54 ]
  %65 = icmp eq %"struct.WTF::KeyValuePair.216"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = zext i32 %11 to i64
  br label %71

68:                                               ; preds = %49, %63, %6
  %69 = zext i32 %11 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %8, i64 %69
  br label %71

71:                                               ; preds = %66, %68
  %72 = phi i64 [ %67, %66 ], [ %69, %68 ]
  %73 = phi %"struct.WTF::KeyValuePair.216"* [ %64, %66 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %8, i64 %72
  %75 = icmp eq %"struct.WTF::KeyValuePair.216"* %73, %74
  br i1 %75, label %111, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %73, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %77, align 8
  %79 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %80 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %78, i64 0, i32 2
  %81 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %80, align 8
  %82 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %81, null
  %83 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %78, i64 0, i32 3
  %84 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::DoublyLinkedList"* %79 to i64*
  %87 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %81, i64 0, i32 3
  %88 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %87 to i64*
  %89 = select i1 %82, i64* %86, i64* %88
  store i64 %85, i64* %89, align 8
  %90 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %83, align 8
  %91 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %90, null
  %92 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %80 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %90, i64 0, i32 2
  %95 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  %96 = select i1 %91, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %95, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %94
  %97 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %96 to i64*
  store i64 %93, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::DoublyLinkedList", %"class.WTF::DoublyLinkedList"* %79, i64 0, i32 0
  %99 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %98, align 8
  %100 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %99, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %76
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %78, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %98, align 8
  %102 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %78, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %102, align 8
  %103 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #8
  br label %108

104:                                              ; preds = %76
  %105 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %99, i64 0, i32 2
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %78, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %105, align 8
  %106 = bitcast %"class.WTF::DoublyLinkedList"* %79 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %84, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %80, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %78, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %98, align 8
  br label %108

108:                                              ; preds = %101, %104
  %109 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %77, align 8
  %110 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %109, i64 0, i32 1
  br label %111

111:                                              ; preds = %108, %71, %2
  %112 = phi %"class.blink::IdentifiableToken"* [ null, %2 ], [ %110, %108 ], [ null, %71 ]
  ret %"class.blink::IdentifiableToken"* %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3PutERKjOS2_(%"class.WTF::LruCache"*, i32* dereferenceable(4), %"class.blink::IdentifiableToken"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.329", align 8
  %5 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.216"* %7, null
  %9 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %67, label %11

11:                                               ; preds = %3
  %12 = add i32 %10, -1
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %1, align 4
  %15 = shl i32 %14, 15
  %16 = xor i32 %15, -1
  %17 = add i32 %14, %16
  %18 = lshr i32 %17, 10
  %19 = xor i32 %18, %17
  %20 = mul i32 %19, 9
  %21 = lshr i32 %20, 6
  %22 = xor i32 %21, %20
  %23 = shl i32 %22, 11
  %24 = xor i32 %23, -1
  %25 = add i32 %22, %24
  %26 = lshr i32 %25, 16
  %27 = xor i32 %26, %25
  %28 = and i32 %27, %12
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %7, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %14
  br i1 %33, label %62, label %34

34:                                               ; preds = %11
  %35 = xor i32 %27, -1
  %36 = lshr i32 %25, 23
  %37 = add i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %48

48:                                               ; preds = %53, %34
  %49 = phi i32 [ %32, %34 ], [ %60, %53 ]
  %50 = phi i64 [ %29, %34 ], [ %57, %53 ]
  %51 = phi i64 [ 0, %34 ], [ %55, %53 ]
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %67, label %53

53:                                               ; preds = %48
  %54 = icmp eq i64 %51, 0
  %55 = select i1 %54, i64 %47, i64 %51
  %56 = add i64 %55, %50
  %57 = and i64 %56, %13
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %7, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %14
  br i1 %61, label %62, label %48

62:                                               ; preds = %53, %11
  %63 = phi %"struct.WTF::KeyValuePair.216"* [ %30, %11 ], [ %58, %53 ]
  %64 = icmp eq %"struct.WTF::KeyValuePair.216"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = zext i32 %10 to i64
  br label %70

67:                                               ; preds = %48, %62, %3
  %68 = zext i32 %10 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %7, i64 %68
  br label %70

70:                                               ; preds = %65, %67
  %71 = phi i64 [ %66, %65 ], [ %68, %67 ]
  %72 = phi %"struct.WTF::KeyValuePair.216"* [ %63, %65 ], [ %69, %67 ]
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %7, i64 %71
  %74 = icmp eq %"struct.WTF::KeyValuePair.216"* %72, %73
  br i1 %74, label %116, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %72, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %2, i64 0, i32 0
  %79 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %77, i64 0, i32 1, i32 0
  %80 = load i64, i64* %78, align 8
  store i64 %80, i64* %79, align 8
  %81 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %82 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %76, align 8
  %83 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %82, i64 0, i32 2
  %84 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %83, align 8
  %85 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %84, null
  %86 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %82, i64 0, i32 3
  %87 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.WTF::DoublyLinkedList"* %81 to i64*
  %90 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %84, i64 0, i32 3
  %91 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %90 to i64*
  %92 = select i1 %85, i64* %89, i64* %91
  store i64 %88, i64* %92, align 8
  %93 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %86, align 8
  %94 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %93, null
  %95 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %83 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %93, i64 0, i32 2
  %98 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  %99 = select i1 %94, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %98, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %97
  %100 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %99 to i64*
  store i64 %96, i64* %100, align 8
  %101 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %76, align 8
  %102 = getelementptr inbounds %"class.WTF::DoublyLinkedList", %"class.WTF::DoublyLinkedList"* %81, i64 0, i32 0
  %103 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %102, align 8
  %104 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %103, null
  br i1 %104, label %105, label %109

105:                                              ; preds = %75
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %101, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %102, align 8
  %106 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %101, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %106, align 8
  %107 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %101, i64 0, i32 2
  %108 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 16, i1 false) #8
  br label %154

109:                                              ; preds = %75
  %110 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %103, i64 0, i32 2
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %101, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %110, align 8
  %111 = bitcast %"class.WTF::DoublyLinkedList"* %81 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %101, i64 0, i32 3
  %114 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %101, i64 0, i32 2
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %115, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %101, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %102, align 8
  br label %154

116:                                              ; preds = %70
  %117 = bitcast %"class.std::__1::unique_ptr.329"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.329"* %4, i64 0, i32 0, i32 0, i32 0
  %119 = tail call noalias i8* @malloc(i64 32) #8
  %120 = getelementptr inbounds i8, i8* %119, i64 16
  %121 = bitcast i8* %119 to i32*
  %122 = load i32, i32* %1, align 4
  store i32 %122, i32* %121, align 8
  %123 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %2, i64 0, i32 0
  %124 = getelementptr inbounds i8, i8* %119, i64 8
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %123, align 8
  store i64 %126, i64* %125, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #8
  %127 = bitcast %"class.std::__1::unique_ptr.329"* %4 to i8**
  store i8* %119, i8** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0
  %129 = call { %"struct.WTF::KeyValuePair.216"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_S8_SL_EERKjSF_EENS_18HashTableAddResultISM_SG_EEOT0_OT1_(%"class.WTF::HashTable.213"* %128, i32* dereferenceable(4) %1, %"class.std::__1::unique_ptr.329"* nonnull dereferenceable(8) %4) #8
  %130 = extractvalue { %"struct.WTF::KeyValuePair.216"*, i8 } %129, 0
  %131 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %130, i64 0, i32 1, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %132, align 8
  %134 = getelementptr inbounds %"class.WTF::DoublyLinkedList", %"class.WTF::DoublyLinkedList"* %131, i64 0, i32 0
  %135 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %134, align 8
  %136 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %135, null
  br i1 %136, label %137, label %141

137:                                              ; preds = %116
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %133, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %134, align 8
  %138 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %133, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %138, align 8
  %139 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %133, i64 0, i32 2
  %140 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %139 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 16, i1 false) #8
  br label %148

141:                                              ; preds = %116
  %142 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %135, i64 0, i32 2
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %133, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %142, align 8
  %143 = bitcast %"class.WTF::DoublyLinkedList"* %131 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %133, i64 0, i32 3
  %146 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %133, i64 0, i32 2
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %147, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %133, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %134, align 8
  br label %148

148:                                              ; preds = %137, %141
  %149 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %118, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %118, align 8
  %150 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %149 to i8*
  call void @free(i8* %152) #8
  br label %153

153:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #8
  br label %154

154:                                              ; preds = %109, %105, %153
  %155 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 0, i32 0, i32 2
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 2
  %159 = load i64, i64* %158, align 8
  %160 = icmp ult i64 %159, %157
  br i1 %160, label %161, label %183

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1, i32 1
  %163 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %162, align 8
  %164 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %163, i64 0, i32 2
  %165 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %164, align 8
  %166 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %165, null
  %167 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %163, i64 0, i32 3
  %168 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %0, i64 0, i32 1
  %171 = bitcast %"class.WTF::DoublyLinkedList"* %170 to i64*
  %172 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %165, i64 0, i32 3
  %173 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %172 to i64*
  %174 = select i1 %166, i64* %171, i64* %173
  store i64 %169, i64* %174, align 8
  %175 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %167, align 8
  %176 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %175, null
  %177 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %164 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %175, i64 0, i32 2
  %180 = select i1 %176, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %162, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %179
  %181 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %180 to i64*
  store i64 %178, i64* %181, align 8
  %182 = getelementptr inbounds %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey", %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %163, i64 0, i32 0
  call void @_ZN3WTF7HashMapIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS1_14default_deleteISB_EEEES7_S9_NS8_ISE_EENS_18PartitionAllocatorEE5eraseERKj(%"class.WTF::HashMap.212"* %5, i32* dereferenceable(4) %182) #8
  br label %183

183:                                              ; preds = %161, %154
  ret void
}

declare i64 @_ZNK5blink16FontPlatformData21ComputeTypefaceDigestEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink17FontGlobalContext32GetOrComputePostScriptNameDigestERKNS_16FontPlatformDataE(%"class.blink::FontGlobalContext"*, %"class.blink::FontPlatformData"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::IdentifiableToken", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %1) #8
  %7 = icmp eq %class.SkTypeface* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %2
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  %10 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %6, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %3, align 4
  %12 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %0, i64 0, i32 6
  %13 = call %"class.blink::IdentifiableToken"* @_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3GetERKj(%"class.WTF::LruCache"* %12, i32* nonnull dereferenceable(4) %3)
  %14 = icmp eq %"class.blink::IdentifiableToken"* %13, null
  br i1 %14, label %15, label %39

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::IdentifiableToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = call %"class.WTF::StringImpl"* @_ZNK5blink16FontPlatformData17GetPostScriptNameEv(%"class.blink::FontPlatformData"* %1) #8
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = call i64 @_ZN5blink32IdentifiabilityBenignStringTokenERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %21 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %4, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  call void @_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3PutERKjOS2_(%"class.WTF::LruCache"* %12, i32* nonnull dereferenceable(4) %3, %"class.blink::IdentifiableToken"* nonnull dereferenceable(8) %4)
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #8
  br label %37

37:                                               ; preds = %15, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %38 = call %"class.blink::IdentifiableToken"* @_ZN3WTF8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE3GetERKj(%"class.WTF::LruCache"* %12, i32* nonnull dereferenceable(4) %3)
  br label %39

39:                                               ; preds = %8, %37
  %40 = phi %"class.blink::IdentifiableToken"* [ %13, %8 ], [ %38, %37 ]
  %41 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %40, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  br label %43

43:                                               ; preds = %2, %39
  %44 = phi i64 [ %42, %39 ], [ -7286425919675154353, %2 ]
  ret i64 %44
}

declare i64 @_ZN5blink32IdentifiabilityBenignStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink16FontPlatformData17GetPostScriptNameEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17FontGlobalContext11ClearMemoryEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 0)
  %2 = icmp eq %"class.blink::FontGlobalContext"* %1, null
  br i1 %2, label %67, label %3

3:                                                ; preds = %0
  %4 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 0
  tail call void @_ZN5blink9FontCache10InvalidateEv(%"class.blink::FontCache"* %4) #8
  %5 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 5
  %6 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.216"* %7, null
  br i1 %8, label %33, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  %14 = zext i32 %11 to i64
  br label %15

15:                                               ; preds = %26, %13
  %16 = phi i64 [ 0, %13 ], [ %27, %26 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %7, i64 %16, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %7, i64 %16, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %21, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %21, align 8
  %23 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %22 to i8*
  tail call void @free(i8* %25) #8
  br label %26

26:                                               ; preds = %24, %20, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = icmp eq i64 %27, %14
  br i1 %28, label %29, label %15

29:                                               ; preds = %26, %9
  %30 = bitcast %"struct.WTF::KeyValuePair.216"* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #8
  %31 = bitcast %"class.WTF::LruCache"* %5 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %10, align 8
  %32 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %32, align 4
  br label %33

33:                                               ; preds = %3, %29
  %34 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 5, i32 1
  %35 = bitcast %"class.WTF::DoublyLinkedList"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #8
  %36 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 6
  %37 = getelementptr inbounds %"class.WTF::LruCache", %"class.WTF::LruCache"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %37, align 8
  %39 = icmp eq %"struct.WTF::KeyValuePair.216"* %38, null
  br i1 %39, label %64, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %40
  %45 = zext i32 %42 to i64
  br label %46

46:                                               ; preds = %57, %44
  %47 = phi i64 [ 0, %44 ], [ %58, %57 ]
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %38, i64 %47, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %38, i64 %47, i32 1, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %52, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %52, align 8
  %54 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %53 to i8*
  tail call void @free(i8* %56) #8
  br label %57

57:                                               ; preds = %55, %51, %46
  %58 = add nuw nsw i64 %47, 1
  %59 = icmp eq i64 %58, %45
  br i1 %59, label %60, label %46

60:                                               ; preds = %57, %40
  %61 = bitcast %"struct.WTF::KeyValuePair.216"* %38 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #8
  %62 = bitcast %"class.WTF::LruCache"* %36 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  store i32 0, i32* %41, align 8
  %63 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  store i32 0, i32* %63, align 4
  br label %64

64:                                               ; preds = %33, %60
  %65 = getelementptr inbounds %"class.blink::FontGlobalContext", %"class.blink::FontGlobalContext"* %1, i64 0, i32 6, i32 1
  %66 = bitcast %"class.WTF::DoublyLinkedList"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #8
  br label %67

67:                                               ; preds = %0, %64
  ret void
}

declare void @_ZN5blink9FontCache10InvalidateEv(%"class.blink::FontCache"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIN5blink24FallbackListCompositeKeyENSt3__110unique_ptrINS1_10ShapeCacheENS3_14default_deleteIS5_EEEENS1_28FallbackListCompositeKeyHashENS1_30FallbackListCompositeKeyTraitsENS_10HashTraitsIS8_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap.173"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashMap.173", %"class.WTF::HashMap.173"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.177"*, %"struct.WTF::KeyValuePair.177"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.177"* %3, null
  br i1 %4, label %99, label %5, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashMap.173", %"class.WTF::HashMap.173"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %97, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %94, %9
  %12 = phi i64 [ 0, %9 ], [ %95, %94 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.177", %"struct.WTF::KeyValuePair.177"* %3, i64 %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %94, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.177", %"struct.WTF::KeyValuePair.177"* %3, i64 %12
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.177", %"struct.WTF::KeyValuePair.177"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::ShapeCache"*, %"class.blink::ShapeCache"** %18, align 8
  store %"class.blink::ShapeCache"* null, %"class.blink::ShapeCache"** %18, align 8
  %20 = icmp eq %"class.blink::ShapeCache"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  tail call void @_ZN5blink10ShapeCacheD2Ev(%"class.blink::ShapeCache"* nonnull %19) #8
  %22 = bitcast %"class.blink::ShapeCache"* %19 to i8*
  tail call void @free(i8* %22) #8
  br label %23

23:                                               ; preds = %21, %16
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.177", %"struct.WTF::KeyValuePair.177"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.blink::FontCacheKey"*, %"struct.blink::FontCacheKey"** %24, align 8
  %26 = icmp eq %"struct.blink::FontCacheKey"* %25, null
  br i1 %26, label %94, label %27, !prof !4

27:                                               ; preds = %23
  %28 = bitcast %"struct.blink::FontCacheKey"* %25 to i8*
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.177", %"struct.WTF::KeyValuePair.177"* %3, i64 %12, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %92, label %32, !prof !3

32:                                               ; preds = %27
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %25, i64 %33
  br label %35

35:                                               ; preds = %86, %32
  %36 = phi %"struct.blink::FontCacheKey"* [ %87, %86 ], [ %25, %32 ]
  %37 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %36, i64 0, i32 5, i32 0
  %38 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %37, align 8
  %39 = icmp eq %"class.blink::FontVariationSettings"* %38, null
  br i1 %39, label %60, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %38, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %41, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #8
  %43 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %41, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %60

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %41, i64 -4
  %48 = bitcast %"class.base::RefCounted"* %47 to %"class.blink::FontTagValuePair"**
  %49 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %48, align 8
  %50 = icmp eq %"class.blink::FontTagValuePair"* %49, null
  %51 = bitcast %"class.blink::FontTagValuePair"* %49 to i8*
  br i1 %50, label %58, label %52, !prof !4

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %41, i64 -1, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56, !prof !3

56:                                               ; preds = %52
  store i32 0, i32* %53, align 4
  br label %57

57:                                               ; preds = %56, %52
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %51) #8
  br label %58

58:                                               ; preds = %57, %46
  %59 = bitcast %"class.base::RefCounted"* %47 to i8*
  tail call void @free(i8* %59) #8
  br label %60

60:                                               ; preds = %58, %40, %35
  %61 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %36, i64 0, i32 0, i32 2
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #9
  br label %69

69:                                               ; preds = %66, %60
  %70 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %36, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #8
  br label %86

86:                                               ; preds = %69, %82, %85
  %87 = getelementptr inbounds %"struct.blink::FontCacheKey", %"struct.blink::FontCacheKey"* %36, i64 1
  %88 = icmp eq %"struct.blink::FontCacheKey"* %87, %34
  br i1 %88, label %89, label %35

89:                                               ; preds = %86
  store i32 0, i32* %29, align 4
  %90 = bitcast %"struct.WTF::KeyValuePair.177"* %17 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %27
  %93 = phi i8* [ %91, %89 ], [ %28, %27 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #8
  store %"struct.blink::FontCacheKey"* null, %"struct.blink::FontCacheKey"** %24, align 8
  br label %94

94:                                               ; preds = %92, %23, %11
  %95 = add nuw nsw i64 %12, 1
  %96 = icmp eq i64 %95, %10
  br i1 %96, label %97, label %11

97:                                               ; preds = %94, %5
  %98 = bitcast %"struct.WTF::KeyValuePair.177"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #8
  store %"struct.WTF::KeyValuePair.177"* null, %"struct.WTF::KeyValuePair.177"** %2, align 8
  br label %99

99:                                               ; preds = %1, %97
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::LinkedHashSet"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %3, align 8
  %5 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %4, null
  br i1 %5, label %40, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %4 to i8*
  %8 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0
  %17 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %16, align 8
  %18 = icmp eq %"class.blink::SimpleFontData"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %17, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCounted.283", %"class.base::RefCounted.283"* %20, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #8
  %22 = getelementptr inbounds %"class.base::RefCounted.283", %"class.base::RefCounted.283"* %20, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::RefCounted.283", %"class.base::RefCounted.283"* %20, i64 -2
  %27 = bitcast %"class.base::RefCounted.283"* %26 to %"class.blink::FontData"*
  %28 = bitcast %"class.base::RefCounted.283"* %26 to void (%"class.blink::FontData"*)***
  %29 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %29, i64 1
  %31 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %30, align 8
  tail call void %31(%"class.blink::FontData"* nonnull %27) #8
  br label %32

32:                                               ; preds = %25, %19, %14
  %33 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 1
  %34 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::VectorBackedLinkedList"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #8
  store %"class.WTF::VectorBackedLinkedListNode"* null, %"class.WTF::VectorBackedLinkedListNode"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = load %"struct.WTF::KeyValuePair.187"*, %"struct.WTF::KeyValuePair.187"** %41, align 8
  %43 = icmp eq %"struct.WTF::KeyValuePair.187"* %42, null
  br i1 %43, label %73, label %44, !prof !4

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %71, label %48

48:                                               ; preds = %44
  %49 = zext i32 %46 to i64
  br label %50

50:                                               ; preds = %68, %48
  %51 = phi i64 [ 0, %48 ], [ %69, %68 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.187", %"struct.WTF::KeyValuePair.187"* %42, i64 %51
  %53 = bitcast %"struct.WTF::KeyValuePair.187"* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = ptrtoint i8* %54 to i64
  switch i64 %55, label %56 [
    i64 -1, label %68
    i64 0, label %68
  ]

56:                                               ; preds = %50
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  %58 = bitcast i8* %57 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #8
  %59 = bitcast i8* %57 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  %63 = bitcast i8* %54 to %"class.blink::FontData"*
  %64 = bitcast i8* %54 to void (%"class.blink::FontData"*)***
  %65 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %65, i64 1
  %67 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %66, align 8
  tail call void %67(%"class.blink::FontData"* nonnull %63) #8
  br label %68

68:                                               ; preds = %62, %56, %50, %50
  %69 = add nuw nsw i64 %51, 1
  %70 = icmp eq i64 %69, %49
  br i1 %70, label %71, label %50

71:                                               ; preds = %68, %44
  %72 = bitcast %"struct.WTF::KeyValuePair.187"* %42 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #8
  store %"struct.WTF::KeyValuePair.187"* null, %"struct.WTF::KeyValuePair.187"** %41, align 8
  br label %73

73:                                               ; preds = %40, %71
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10ShapeCacheD2Ev(%"class.blink::ShapeCache"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #8
  %3 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.310"*, %"struct.WTF::KeyValuePair.310"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.310"* %4, null
  br i1 %5, label %34, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %29, %10
  %13 = phi i64 [ 0, %10 ], [ %30, %29 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.310", %"struct.WTF::KeyValuePair.310"* %4, i64 %13, i32 0, i32 1
  %15 = load i16, i16* %14, align 4
  %16 = and i16 %15, 32767
  %17 = icmp eq i16 %16, 17
  br i1 %17, label %29, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.310", %"struct.WTF::KeyValuePair.310"* %4, i64 %13, i32 1, i32 0
  %20 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %19, align 8
  %21 = icmp eq %"class.blink::ShapeResult"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #8
  %24 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %20) #8
  %28 = bitcast %"class.blink::ShapeResult"* %20 to i8*
  tail call void @free(i8* %28) #8
  br label %29

29:                                               ; preds = %27, %22, %18, %12
  %30 = add nuw nsw i64 %13, 1
  %31 = icmp eq i64 %30, %11
  br i1 %31, label %32, label %12

32:                                               ; preds = %29, %6
  %33 = bitcast %"struct.WTF::KeyValuePair.310"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #8
  store %"struct.WTF::KeyValuePair.310"* null, %"struct.WTF::KeyValuePair.310"** %3, align 8
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.WTF::KeyValuePair.271"*, %"struct.WTF::KeyValuePair.271"** %35, align 8
  %37 = icmp eq %"struct.WTF::KeyValuePair.271"* %36, null
  br i1 %37, label %65, label %38, !prof !4

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ShapeCache", %"class.blink::ShapeCache"* %0, i64 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = zext i32 %40 to i64
  br label %44

44:                                               ; preds = %60, %42
  %45 = phi i64 [ 0, %42 ], [ %61, %60 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.271", %"struct.WTF::KeyValuePair.271"* %36, i64 %45, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, -2
  br i1 %48, label %60, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.271", %"struct.WTF::KeyValuePair.271"* %36, i64 %45, i32 1, i32 0
  %51 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %50, align 8
  %52 = icmp eq %"class.blink::ShapeResult"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %51, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #8
  %55 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %51) #8
  %59 = bitcast %"class.blink::ShapeResult"* %51 to i8*
  tail call void @free(i8* %59) #8
  br label %60

60:                                               ; preds = %58, %53, %49, %44
  %61 = add nuw nsw i64 %45, 1
  %62 = icmp eq i64 %61, %43
  br i1 %62, label %63, label %44

63:                                               ; preds = %60, %38
  %64 = bitcast %"struct.WTF::KeyValuePair.271"* %36 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %64) #8
  store %"struct.WTF::KeyValuePair.271"* null, %"struct.WTF::KeyValuePair.271"** %35, align 8
  br label %65

65:                                               ; preds = %34, %63
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"*) unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF14ThreadSpecificIPN5blink17FontGlobalContextEE7DestroyEPv(i8*) #6 comdat align 2 {
  %2 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #8
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %0) #8
  br label %4

4:                                                ; preds = %1, %3
  ret void
}

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #3

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #3

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink17HarfBuzzFontCacheEEclEPS2_(%"struct.std::__1::default_delete.204"*, %"class.blink::HarfBuzzFontCache"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::HarfBuzzFontCache"* %1, null
  br i1 %3, label %37, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::HarfBuzzFontCache", %"class.blink::HarfBuzzFontCache"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.202"* %6, null
  br i1 %7, label %35, label %8, !prof !4

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::HarfBuzzFontCache", %"class.blink::HarfBuzzFontCache"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %8
  %13 = zext i32 %10 to i64
  br label %14

14:                                               ; preds = %30, %12
  %15 = phi i64 [ 0, %12 ], [ %31, %30 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %6, i64 %15, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, -2
  br i1 %18, label %30, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %6, i64 %15, i32 1, i32 0
  %21 = load %"class.blink::HbFontCacheEntry"*, %"class.blink::HbFontCacheEntry"** %20, align 8
  %22 = icmp eq %"class.blink::HbFontCacheEntry"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %21, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #8
  %25 = getelementptr inbounds %"class.blink::HbFontCacheEntry", %"class.blink::HbFontCacheEntry"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  tail call void @_ZN5blink16HbFontCacheEntryD1Ev(%"class.blink::HbFontCacheEntry"* nonnull %21) #8
  %29 = bitcast %"class.blink::HbFontCacheEntry"* %21 to i8*
  tail call void @free(i8* %29) #8
  br label %30

30:                                               ; preds = %28, %23, %19, %14
  %31 = add nuw nsw i64 %15, 1
  %32 = icmp eq i64 %31, %13
  br i1 %32, label %33, label %14

33:                                               ; preds = %30, %8
  %34 = bitcast %"struct.WTF::KeyValuePair.202"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %34) #8
  store %"struct.WTF::KeyValuePair.202"* null, %"struct.WTF::KeyValuePair.202"** %5, align 8
  br label %35

35:                                               ; preds = %4, %33
  %36 = bitcast %"class.blink::HarfBuzzFontCache"* %1 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %36) #8
  br label %37

37:                                               ; preds = %35, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink16HbFontCacheEntryD1Ev(%"class.blink::HbFontCacheEntry"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.216"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_S8_SL_EERKjSF_EENS_18HashTableAddResultISM_SG_EEOT0_OT1_(%"class.WTF::HashTable.213"*, i32* dereferenceable(4), %"class.std::__1::unique_ptr.329"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.216"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable.213"* %0, %"struct.WTF::KeyValuePair.216"* null)
  %9 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.216"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.216"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.216"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %105, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.216"* %52, %"struct.WTF::KeyValuePair.216"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.216"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.216"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.216"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %81, i64 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.329"* %2, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr.329"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %84, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.329"* %83, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.329"* %83 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %88, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %79
  %92 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %88 to i8*
  tail call void @free(i8* %92) #8
  br label %93

93:                                               ; preds = %79, %91
  %94 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %12, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %93
  %104 = tail call %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable.213"* %0, %"struct.WTF::KeyValuePair.216"* %81)
  br label %105

105:                                              ; preds = %50, %93, %103
  %106 = phi i8 [ 1, %93 ], [ 1, %103 ], [ 0, %50 ]
  %107 = phi %"struct.WTF::KeyValuePair.216"* [ %81, %93 ], [ %104, %103 ], [ %52, %50 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair.216"*, i8 } undef, %"struct.WTF::KeyValuePair.216"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair.216"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair.216"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE6ExpandEPSG_(%"class.WTF::HashTable.213"*, %"struct.WTF::KeyValuePair.216"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([405 x i8], [405 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.216"*
  %37 = call %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE8RehashToEPSG_jSN_(%"class.WTF::HashTable.213"* %0, %"struct.WTF::KeyValuePair.216"* %36, i32 %32, %"struct.WTF::KeyValuePair.216"* %1) #8
  ret %"struct.WTF::KeyValuePair.216"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE8RehashToEPSG_jSN_(%"class.WTF::HashTable.213"*, %"struct.WTF::KeyValuePair.216"*, i32, %"struct.WTF::KeyValuePair.216"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.216"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.213"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.216"* %16 to i64
  br label %51

18:                                               ; preds = %148
  %19 = bitcast %"class.WTF::HashTable.213"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %149, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.216"* [ null, %10 ], [ %152, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %150, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.216"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %37, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %37, align 8
  %39 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %38 to i8*
  tail call void @free(i8* %41) #8
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #8
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.213", %"class.WTF::HashTable.213"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.216"* %23

51:                                               ; preds = %13, %148
  %52 = phi i64 [ %17, %13 ], [ %149, %148 ]
  %53 = phi i32 [ %7, %13 ], [ %150, %148 ]
  %54 = phi %"struct.WTF::KeyValuePair.216"* [ %16, %13 ], [ %151, %148 ]
  %55 = phi %"struct.WTF::KeyValuePair.216"* [ null, %13 ], [ %152, %148 ]
  %56 = phi i32 [ 0, %13 ], [ %153, %148 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  %61 = icmp ult i32 %60, 2
  br i1 %61, label %148, label %62

62:                                               ; preds = %51
  %63 = shl i32 %59, 15
  %64 = xor i32 %63, -1
  %65 = add i32 %59, %64
  %66 = lshr i32 %65, 10
  %67 = xor i32 %66, %65
  %68 = mul i32 %67, 9
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = shl i32 %70, 11
  %72 = xor i32 %71, -1
  %73 = add i32 %70, %72
  %74 = lshr i32 %73, 16
  %75 = xor i32 %74, %73
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %1, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair.216"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %62
  %84 = xor i32 %75, -1
  %85 = lshr i32 %73, 23
  %86 = add i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %106

97:                                               ; preds = %113
  %98 = ptrtoint %"struct.WTF::KeyValuePair.216"* %120 to i64
  %99 = inttoptr i64 %115 to %"struct.WTF::KeyValuePair.216"*
  br label %100

100:                                              ; preds = %97, %62
  %101 = phi i64 [ %98, %97 ], [ %79, %62 ]
  %102 = phi %"struct.WTF::KeyValuePair.216"* [ %99, %97 ], [ null, %62 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.216"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair.216"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %125

106:                                              ; preds = %113, %83
  %107 = phi i64 [ 0, %83 ], [ %115, %113 ]
  %108 = phi i32 [ %81, %83 ], [ %123, %113 ]
  %109 = phi i64 [ %79, %83 ], [ %121, %113 ]
  %110 = phi i64 [ %77, %83 ], [ %119, %113 ]
  %111 = phi i64 [ 0, %83 ], [ %117, %113 ]
  %112 = icmp eq i32 %108, %59
  br i1 %112, label %125, label %113

113:                                              ; preds = %106
  %114 = icmp eq i32 %108, -1
  %115 = select i1 %114, i64 %109, i64 %107
  %116 = icmp eq i64 %111, 0
  %117 = select i1 %116, i64 %96, i64 %111
  %118 = add i64 %117, %110
  %119 = and i64 %118, %15
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %1, i64 %119
  %121 = ptrtoint %"struct.WTF::KeyValuePair.216"* %120 to i64
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %120, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %97, label %106

125:                                              ; preds = %106, %100
  %126 = phi i64 [ %105, %100 ], [ %109, %106 ]
  %127 = inttoptr i64 %126 to %"struct.WTF::KeyValuePair.216"*
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %127, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %128, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %128, align 8
  %130 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %125
  %132 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %129 to i8*
  tail call void @free(i8* %132) #8
  br label %133

133:                                              ; preds = %125, %131
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %127, i64 0, i32 0
  %135 = load i32, i32* %58, align 8
  store i32 %135, i32* %134, align 8
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %127, i64 0, i32 1
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %54, i64 %57, i32 1
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.329"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.329"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.329"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %9, align 8
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %142, i64 %57
  %144 = icmp eq %"struct.WTF::KeyValuePair.216"* %143, %3
  %145 = select i1 %144, %"struct.WTF::KeyValuePair.216"* %127, %"struct.WTF::KeyValuePair.216"* %55
  %146 = load i32, i32* %6, align 8
  %147 = ptrtoint %"struct.WTF::KeyValuePair.216"* %142 to i64
  br label %148

148:                                              ; preds = %51, %133
  %149 = phi i64 [ %52, %51 ], [ %147, %133 ]
  %150 = phi i32 [ %53, %51 ], [ %146, %133 ]
  %151 = phi %"struct.WTF::KeyValuePair.216"* [ %54, %51 ], [ %142, %133 ]
  %152 = phi %"struct.WTF::KeyValuePair.216"* [ %55, %51 ], [ %145, %133 ]
  %153 = add i32 %56, 1
  %154 = icmp eq i32 %153, %150
  br i1 %154, label %18, label %51
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS1_14default_deleteISB_EEEES7_S9_NS8_ISE_EENS_18PartitionAllocatorEE5eraseERKj(%"class.WTF::HashMap.212"*, i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.212", %"class.WTF::HashMap.212"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.216"*, %"struct.WTF::KeyValuePair.216"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.216"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap.212", %"class.WTF::HashMap.212"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %8
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %8
  %60 = phi %"struct.WTF::KeyValuePair.216"* [ %27, %8 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair.216"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair.216"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashMap.212", %"class.WTF::HashMap.212"* %0, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %4, i64 %68
  %72 = icmp eq %"struct.WTF::KeyValuePair.216"* %71, %69
  br i1 %72, label %102, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %69, i64 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %74, align 8
  store %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* null, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"** %74, align 8
  %76 = icmp eq %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* %75 to i8*
  tail call void @free(i8* %78) #8
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.216", %"struct.WTF::KeyValuePair.216"* %69, i64 0, i32 0
  store i32 -1, i32* %80, align 4
  %81 = getelementptr inbounds %"class.WTF::HashMap.212", %"class.WTF::HashMap.212"* %0, i64 0, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 1
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = getelementptr inbounds %"class.WTF::HashMap.212", %"class.WTF::HashMap.212"* %0, i64 0, i32 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, -1
  store i32 %89, i32* %87, align 4
  %90 = mul i32 %89, 6
  %91 = load i32, i32* %6, align 8
  %92 = icmp ult i32 %90, %91
  %93 = icmp ugt i32 %91, 8
  %94 = and i1 %92, %93
  br i1 %94, label %95, label %102

95:                                               ; preds = %79
  %96 = lshr i32 %91, 1
  %97 = zext i32 %96 to i64
  %98 = shl nuw nsw i64 %97, 4
  %99 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %98, i8* getelementptr inbounds ([405 x i8], [405 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %99, i8 0, i64 %98, i1 false) #8
  %100 = bitcast i8* %99 to %"struct.WTF::KeyValuePair.216"*
  %101 = tail call %"struct.WTF::KeyValuePair.216"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrINS_8LruCacheIjN5blink17IdentifiableTokenENS_7IntHashIjEENS_10HashTraitsIjEEE21MappedListNodeWithKeyENS2_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISF_EEEESA_NS_18PartitionAllocatorEE8RehashToEPSG_jSN_(%"class.WTF::HashTable.213"* %70, %"struct.WTF::KeyValuePair.216"* %100, i32 %96, %"struct.WTF::KeyValuePair.216"* null) #8
  br label %102

102:                                              ; preds = %67, %79, %95
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
