; ModuleID = 'gen/chrome/common/network_diagnostics.mojom-test-utils.cc'
source_filename = "gen/chrome/common/network_diagnostics.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.chrome::mojom::NetworkDiagnosticsAsyncWaiter" = type { %"class.chrome::mojom::NetworkDiagnostics"* }
%"class.chrome::mojom::NetworkDiagnostics" = type { i32 (...)** }
%"class.chrome::mojom::NetworkDiagnosticsClientAsyncWaiter" = type { %"class.chrome::mojom::NetworkDiagnosticsClient"* }
%"class.chrome::mojom::NetworkDiagnosticsClient" = type { i32 (...)** }
%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting" = type { %"class.chrome::mojom::NetworkDiagnostics" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting" = type { %"class.chrome::mojom::NetworkDiagnosticsClient" }

$_ZN6chrome5mojom18NetworkDiagnosticsD2Ev = comdat any

$_ZN6chrome5mojom39NetworkDiagnosticsInterceptorForTestingD0Ev = comdat any

$_ZN6chrome5mojom24NetworkDiagnosticsClientD2Ev = comdat any

$_ZN6chrome5mojom45NetworkDiagnosticsClientInterceptorForTestingD0Ev = comdat any

@_ZTVN6chrome5mojom39NetworkDiagnosticsInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.chrome::mojom::NetworkDiagnostics"*)* @_ZN6chrome5mojom18NetworkDiagnosticsD2Ev to i8*), i8* bitcast (void (%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*)* @_ZN6chrome5mojom39NetworkDiagnosticsInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*, %class.GURL*)* @_ZN6chrome5mojom39NetworkDiagnosticsInterceptorForTesting21RunNetworkDiagnosticsERK4GURL to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN6chrome5mojom45NetworkDiagnosticsClientInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.chrome::mojom::NetworkDiagnosticsClient"*)* @_ZN6chrome5mojom24NetworkDiagnosticsClientD2Ev to i8*), i8* bitcast (void (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)* @_ZN6chrome5mojom45NetworkDiagnosticsClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*, i1)* @_ZN6chrome5mojom45NetworkDiagnosticsClientInterceptorForTesting34SetCanShowNetworkDiagnosticsDialogEb to i8*), i8* bitcast (void (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*, i32)* @_ZN6chrome5mojom45NetworkDiagnosticsClientInterceptorForTesting14DNSProbeStatusEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN6chrome5mojom29NetworkDiagnosticsAsyncWaiterC1EPNS0_18NetworkDiagnosticsE = hidden unnamed_addr alias void (%"class.chrome::mojom::NetworkDiagnosticsAsyncWaiter"*, %"class.chrome::mojom::NetworkDiagnostics"*), void (%"class.chrome::mojom::NetworkDiagnosticsAsyncWaiter"*, %"class.chrome::mojom::NetworkDiagnostics"*)* @_ZN6chrome5mojom29NetworkDiagnosticsAsyncWaiterC2EPNS0_18NetworkDiagnosticsE
@_ZN6chrome5mojom29NetworkDiagnosticsAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.chrome::mojom::NetworkDiagnosticsAsyncWaiter"*), void (%"class.chrome::mojom::NetworkDiagnosticsAsyncWaiter"*)* @_ZN6chrome5mojom29NetworkDiagnosticsAsyncWaiterD2Ev
@_ZN6chrome5mojom35NetworkDiagnosticsClientAsyncWaiterC1EPNS0_24NetworkDiagnosticsClientE = hidden unnamed_addr alias void (%"class.chrome::mojom::NetworkDiagnosticsClientAsyncWaiter"*, %"class.chrome::mojom::NetworkDiagnosticsClient"*), void (%"class.chrome::mojom::NetworkDiagnosticsClientAsyncWaiter"*, %"class.chrome::mojom::NetworkDiagnosticsClient"*)* @_ZN6chrome5mojom35NetworkDiagnosticsClientAsyncWaiterC2EPNS0_24NetworkDiagnosticsClientE
@_ZN6chrome5mojom35NetworkDiagnosticsClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.chrome::mojom::NetworkDiagnosticsClientAsyncWaiter"*), void (%"class.chrome::mojom::NetworkDiagnosticsClientAsyncWaiter"*)* @_ZN6chrome5mojom35NetworkDiagnosticsClientAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6chrome5mojom39NetworkDiagnosticsInterceptorForTesting21RunNetworkDiagnosticsERK4GURL(%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"* %0 to %"class.chrome::mojom::NetworkDiagnostics"* (%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*)***
  %4 = load %"class.chrome::mojom::NetworkDiagnostics"* (%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*)**, %"class.chrome::mojom::NetworkDiagnostics"* (%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.chrome::mojom::NetworkDiagnostics"* (%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*)*, %"class.chrome::mojom::NetworkDiagnostics"* (%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.chrome::mojom::NetworkDiagnostics"* (%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*)*, %"class.chrome::mojom::NetworkDiagnostics"* (%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.chrome::mojom::NetworkDiagnostics"* %6(%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.chrome::mojom::NetworkDiagnostics"* %7 to void (%"class.chrome::mojom::NetworkDiagnostics"*, %class.GURL*)***
  %9 = load void (%"class.chrome::mojom::NetworkDiagnostics"*, %class.GURL*)**, void (%"class.chrome::mojom::NetworkDiagnostics"*, %class.GURL*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.chrome::mojom::NetworkDiagnostics"*, %class.GURL*)*, void (%"class.chrome::mojom::NetworkDiagnostics"*, %class.GURL*)** %9, i64 2
  %11 = load void (%"class.chrome::mojom::NetworkDiagnostics"*, %class.GURL*)*, void (%"class.chrome::mojom::NetworkDiagnostics"*, %class.GURL*)** %10, align 8
  tail call void %11(%"class.chrome::mojom::NetworkDiagnostics"* %7, %class.GURL* dereferenceable(120) %1) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6chrome5mojom29NetworkDiagnosticsAsyncWaiterC2EPNS0_18NetworkDiagnosticsE(%"class.chrome::mojom::NetworkDiagnosticsAsyncWaiter"* nocapture, %"class.chrome::mojom::NetworkDiagnostics"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.chrome::mojom::NetworkDiagnosticsAsyncWaiter", %"class.chrome::mojom::NetworkDiagnosticsAsyncWaiter"* %0, i64 0, i32 0
  store %"class.chrome::mojom::NetworkDiagnostics"* %1, %"class.chrome::mojom::NetworkDiagnostics"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6chrome5mojom29NetworkDiagnosticsAsyncWaiterD2Ev(%"class.chrome::mojom::NetworkDiagnosticsAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6chrome5mojom45NetworkDiagnosticsClientInterceptorForTesting34SetCanShowNetworkDiagnosticsDialogEb(%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"* %0 to %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)***
  %4 = load %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)**, %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)*, %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)** %4, i64 4
  %6 = load %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)*, %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.chrome::mojom::NetworkDiagnosticsClient"* %6(%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.chrome::mojom::NetworkDiagnosticsClient"* %7 to void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i1)***
  %9 = load void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i1)**, void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i1)*, void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i1)** %9, i64 2
  %11 = load void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i1)*, void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i1)** %10, align 8
  tail call void %11(%"class.chrome::mojom::NetworkDiagnosticsClient"* %7, i1 zeroext %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6chrome5mojom45NetworkDiagnosticsClientInterceptorForTesting14DNSProbeStatusEi(%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"* %0 to %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)***
  %4 = load %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)**, %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)*, %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)** %4, i64 4
  %6 = load %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)*, %"class.chrome::mojom::NetworkDiagnosticsClient"* (%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.chrome::mojom::NetworkDiagnosticsClient"* %6(%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.chrome::mojom::NetworkDiagnosticsClient"* %7 to void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i32)***
  %9 = load void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i32)**, void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i32)*, void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i32)** %9, i64 3
  %11 = load void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i32)*, void (%"class.chrome::mojom::NetworkDiagnosticsClient"*, i32)** %10, align 8
  tail call void %11(%"class.chrome::mojom::NetworkDiagnosticsClient"* %7, i32 %1) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6chrome5mojom35NetworkDiagnosticsClientAsyncWaiterC2EPNS0_24NetworkDiagnosticsClientE(%"class.chrome::mojom::NetworkDiagnosticsClientAsyncWaiter"* nocapture, %"class.chrome::mojom::NetworkDiagnosticsClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.chrome::mojom::NetworkDiagnosticsClientAsyncWaiter", %"class.chrome::mojom::NetworkDiagnosticsClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.chrome::mojom::NetworkDiagnosticsClient"* %1, %"class.chrome::mojom::NetworkDiagnosticsClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6chrome5mojom35NetworkDiagnosticsClientAsyncWaiterD2Ev(%"class.chrome::mojom::NetworkDiagnosticsClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6chrome5mojom18NetworkDiagnosticsD2Ev(%"class.chrome::mojom::NetworkDiagnostics"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6chrome5mojom39NetworkDiagnosticsInterceptorForTestingD0Ev(%"class.chrome::mojom::NetworkDiagnosticsInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6chrome5mojom24NetworkDiagnosticsClientD2Ev(%"class.chrome::mojom::NetworkDiagnosticsClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6chrome5mojom45NetworkDiagnosticsClientInterceptorForTestingD0Ev(%"class.chrome::mojom::NetworkDiagnosticsClientInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
