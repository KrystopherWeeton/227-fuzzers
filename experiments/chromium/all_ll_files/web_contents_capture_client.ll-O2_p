; ModuleID = '../../extensions/browser/api/web_contents_capture_client.cc'
source_filename = "../../extensions/browser/api/web_contents_capture_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::WebContentsCaptureClient" = type { i32 (...)**, i32, i32 }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"struct.extensions::api::extension_types::ImageDetails" = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.content::RenderWidgetHostView" = type { i32 (...)** }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.14 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.8, i32, i32 }
%class.sk_sp.8 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.14 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i8* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10extensions13kMimeTypeJpegE = external constant [0 x i8], align 1
@_ZN10extensions12kMimeTypePngE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [16 x i8] c"data:%s;base64,\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions24WebContentsCaptureClient12CaptureAsyncEPN7content11WebContentsEPKNS_3api15extension_types12ImageDetailsEN4base12OnceCallbackIFvRK8SkBitmapEEE(%"class.extensions::WebContentsCaptureClient"*, %"class.content::WebContents"*, %"struct.extensions::api::extension_types::ImageDetails"* readonly, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = alloca %"class.gfx::Size", align 4
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = icmp eq %"class.content::WebContents"* %1, null
  br i1 %8, label %53, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.content::WebContents"* %1 to %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)***
  %11 = load %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)**, %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)*, %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)** %11, i64 20
  %13 = load %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)*, %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)** %12, align 8
  %14 = tail call %"class.content::RenderWidgetHostView"* %13(%"class.content::WebContents"* nonnull %1) #7
  %15 = icmp eq %"class.content::RenderWidgetHostView"* %14, null
  br i1 %15, label %53, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.extensions::WebContentsCaptureClient"* %0 to i32 (%"class.extensions::WebContentsCaptureClient"*, %"class.content::WebContents"*)***
  %18 = load i32 (%"class.extensions::WebContentsCaptureClient"*, %"class.content::WebContents"*)**, i32 (%"class.extensions::WebContentsCaptureClient"*, %"class.content::WebContents"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.extensions::WebContentsCaptureClient"*, %"class.content::WebContents"*)*, i32 (%"class.extensions::WebContentsCaptureClient"*, %"class.content::WebContents"*)** %18, i64 2
  %20 = load i32 (%"class.extensions::WebContentsCaptureClient"*, %"class.content::WebContents"*)*, i32 (%"class.extensions::WebContentsCaptureClient"*, %"class.content::WebContents"*)** %19, align 8
  %21 = tail call i32 %20(%"class.extensions::WebContentsCaptureClient"* %0, %"class.content::WebContents"* nonnull %1) #7
  switch i32 %21, label %23 [
    i32 1, label %53
    i32 2, label %22
  ]

22:                                               ; preds = %16
  br label %53

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.extensions::WebContentsCaptureClient", %"class.extensions::WebContentsCaptureClient"* %0, i64 0, i32 1
  store i32 1, i32* %24, align 8
  %25 = getelementptr inbounds %"class.extensions::WebContentsCaptureClient", %"class.extensions::WebContentsCaptureClient"* %0, i64 0, i32 2
  store i32 90, i32* %25, align 4
  %26 = icmp eq %"struct.extensions::api::extension_types::ImageDetails"* %2, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.extensions::api::extension_types::ImageDetails", %"struct.extensions::api::extension_types::ImageDetails"* %2, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  store i32 %29, i32* %24, align 8
  br label %32

32:                                               ; preds = %27, %31
  %33 = getelementptr inbounds %"struct.extensions::api::extension_types::ImageDetails", %"struct.extensions::api::extension_types::ImageDetails"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = icmp eq i32* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = load i32, i32* %34, align 4
  store i32 %37, i32* %25, align 4
  br label %38

38:                                               ; preds = %32, %23, %36
  %39 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #7
  %40 = bitcast %"class.gfx::Size"* %6 to i8*
  %41 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %41, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  %42 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 0
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 1
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %48 = bitcast %"class.content::RenderWidgetHostView"* %14 to void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Rect"*, %"class.gfx::Size"*, %"class.base::OnceCallback"*)***
  %49 = load void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Rect"*, %"class.gfx::Size"*, %"class.base::OnceCallback"*)**, void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Rect"*, %"class.gfx::Size"*, %"class.base::OnceCallback"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Rect"*, %"class.gfx::Size"*, %"class.base::OnceCallback"*)*, void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Rect"*, %"class.gfx::Size"*, %"class.base::OnceCallback"*)** %49, i64 39
  %51 = load void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Rect"*, %"class.gfx::Size"*, %"class.base::OnceCallback"*)*, void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Rect"*, %"class.gfx::Size"*, %"class.base::OnceCallback"*)** %50, align 8
  call void %51(%"class.content::RenderWidgetHostView"* nonnull %14, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::Size"* nonnull dereferenceable(8) %6, %"class.base::OnceCallback"* nonnull %7) #7
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #7
  br label %53

53:                                               ; preds = %4, %22, %38, %16, %9
  %54 = phi i32 [ 5, %9 ], [ 4, %22 ], [ 0, %38 ], [ 3, %16 ], [ 5, %4 ]
  ret i32 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions24WebContentsCaptureClient23CopyFromSurfaceCompleteERK8SkBitmap(%"class.extensions::WebContentsCaptureClient"*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %12 = load %class.SkPixelRef*, %class.SkPixelRef** %11, align 8
  %13 = icmp eq %class.SkPixelRef* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %2, %6, %10
  %15 = bitcast %"class.extensions::WebContentsCaptureClient"* %0 to void (%"class.extensions::WebContentsCaptureClient"*, i32)***
  %16 = load void (%"class.extensions::WebContentsCaptureClient"*, i32)**, void (%"class.extensions::WebContentsCaptureClient"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.extensions::WebContentsCaptureClient"*, i32)*, void (%"class.extensions::WebContentsCaptureClient"*, i32)** %16, i64 4
  %18 = load void (%"class.extensions::WebContentsCaptureClient"*, i32)*, void (%"class.extensions::WebContentsCaptureClient"*, i32)** %17, align 8
  tail call void %18(%"class.extensions::WebContentsCaptureClient"* %0, i32 1) #7
  br label %24

19:                                               ; preds = %10
  %20 = bitcast %"class.extensions::WebContentsCaptureClient"* %0 to void (%"class.extensions::WebContentsCaptureClient"*, %class.SkBitmap*)***
  %21 = load void (%"class.extensions::WebContentsCaptureClient"*, %class.SkBitmap*)**, void (%"class.extensions::WebContentsCaptureClient"*, %class.SkBitmap*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.extensions::WebContentsCaptureClient"*, %class.SkBitmap*)*, void (%"class.extensions::WebContentsCaptureClient"*, %class.SkBitmap*)** %21, i64 5
  %23 = load void (%"class.extensions::WebContentsCaptureClient"*, %class.SkBitmap*)*, void (%"class.extensions::WebContentsCaptureClient"*, %class.SkBitmap*)** %22, align 8
  tail call void %23(%"class.extensions::WebContentsCaptureClient"* %0, %class.SkBitmap* dereferenceable(56) %1) #7
  br label %24

24:                                               ; preds = %19, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions24WebContentsCaptureClient12EncodeBitmapERK8SkBitmapPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::WebContentsCaptureClient"*, %class.SkBitmap* dereferenceable(56), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #7
  %11 = bitcast %"class.extensions::WebContentsCaptureClient"* %0 to i1 (%"class.extensions::WebContentsCaptureClient"*)***
  %12 = load i1 (%"class.extensions::WebContentsCaptureClient"*)**, i1 (%"class.extensions::WebContentsCaptureClient"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.extensions::WebContentsCaptureClient"*)*, i1 (%"class.extensions::WebContentsCaptureClient"*)** %12, i64 3
  %14 = load i1 (%"class.extensions::WebContentsCaptureClient"*)*, i1 (%"class.extensions::WebContentsCaptureClient"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.extensions::WebContentsCaptureClient"* %0) #7
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #7
  %19 = getelementptr inbounds %"class.extensions::WebContentsCaptureClient", %"class.extensions::WebContentsCaptureClient"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %109 [
    i32 1, label %21
    i32 2, label %49
  ]

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.extensions::WebContentsCaptureClient", %"class.extensions::WebContentsCaptureClient"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = call zeroext i1 @_ZN3gfx9JPEGCodec6EncodeERK8SkBitmapiPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56) %1, i32 %23, %"class.std::__1::vector"* nonnull %4) #7
  %25 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13kMimeTypeJpegE, i64 0, i64 0), align 1
  %26 = call i1 @llvm.is.constant.i8(i8 %25) #7
  br i1 %26, label %27, label %47

27:                                               ; preds = %21
  %28 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13kMimeTypeJpegE, i64 0, i64 0)) #7
  %29 = icmp ult i64 %28, 23
  br i1 %29, label %30, label %45

30:                                               ; preds = %27
  %31 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  store i64 %28, i64* %18, align 8
  %36 = load i8*, i8** %17, align 8
  br label %39

37:                                               ; preds = %30
  %38 = trunc i64 %28 to i8
  store i8 %38, i8* %32, align 1
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i8* [ %36, %35 ], [ %16, %37 ]
  %41 = icmp eq i64 %28, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13kMimeTypeJpegE, i64 0, i64 0), i64 %28, i1 false) #7
  br label %43

43:                                               ; preds = %42, %39
  %44 = getelementptr inbounds i8, i8* %40, i64 %28
  store i8 0, i8* %44, align 1
  br i1 %24, label %76, label %109

45:                                               ; preds = %27
  %46 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13kMimeTypeJpegE, i64 0, i64 0), i64 %28) #7
  br i1 %24, label %76, label %109

47:                                               ; preds = %21
  %48 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13kMimeTypeJpegE, i64 0, i64 0)) #7
  br i1 %24, label %76, label %109

49:                                               ; preds = %3
  %50 = xor i1 %15, true
  %51 = call zeroext i1 @_ZN3gfx8PNGCodec18EncodeBGRASkBitmapERK8SkBitmapbPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56) %1, i1 zeroext %50, %"class.std::__1::vector"* nonnull %4) #7
  %52 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions12kMimeTypePngE, i64 0, i64 0), align 1
  %53 = call i1 @llvm.is.constant.i8(i8 %52) #7
  br i1 %53, label %54, label %74

54:                                               ; preds = %49
  %55 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions12kMimeTypePngE, i64 0, i64 0)) #7
  %56 = icmp ult i64 %55, 23
  br i1 %56, label %57, label %72

57:                                               ; preds = %54
  %58 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  store i64 %55, i64* %18, align 8
  %63 = load i8*, i8** %17, align 8
  br label %66

64:                                               ; preds = %57
  %65 = trunc i64 %55 to i8
  store i8 %65, i8* %59, align 1
  br label %66

66:                                               ; preds = %64, %62
  %67 = phi i8* [ %63, %62 ], [ %16, %64 ]
  %68 = icmp eq i64 %55, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions12kMimeTypePngE, i64 0, i64 0), i64 %55, i1 false) #7
  br label %70

70:                                               ; preds = %69, %66
  %71 = getelementptr inbounds i8, i8* %67, i64 %55
  store i8 0, i8* %71, align 1
  br i1 %51, label %76, label %109

72:                                               ; preds = %54
  %73 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions12kMimeTypePngE, i64 0, i64 0), i64 %55) #7
  br i1 %51, label %76, label %109

74:                                               ; preds = %49
  %75 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions12kMimeTypePngE, i64 0, i64 0)) #7
  br i1 %51, label %76, label %109

76:                                               ; preds = %72, %70, %47, %45, %43, %74
  %77 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #7
  %78 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %79 = bitcast %"class.std::__1::vector"* %4 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast i8** %10 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %82, %80
  %84 = bitcast %"class.base::BasicStringPiece"* %6 to i64*
  store i64 %80, i64* %84, align 8
  store i64 %83, i64* %78, align 8
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6, %"class.std::__1::basic_string"* %2) #7
  %85 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #7
  %86 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = load i8*, i8** %17, align 8
  %91 = select i1 %89, i8* %90, i8* %16
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* %91) #7
  %92 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = zext i8 %94 to i64
  %101 = select i1 %95, i8* %97, i8* %85
  %102 = select i1 %95, i64 %99, i64 %100
  %103 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"* %2, i64 0, i8* %101, i64 %102) #7
  %104 = load i8, i8* %93, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %76
  %107 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %107) #8
  br label %108

108:                                              ; preds = %76, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #7
  br label %109

109:                                              ; preds = %72, %70, %47, %45, %43, %3, %74, %108
  %110 = phi i1 [ true, %108 ], [ false, %74 ], [ false, %3 ], [ false, %43 ], [ false, %45 ], [ false, %47 ], [ false, %70 ], [ false, %72 ]
  %111 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %116) #8
  br label %117

117:                                              ; preds = %109, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #7
  %118 = load i8*, i8** %9, align 8
  %119 = icmp eq i8* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %117
  %121 = ptrtoint i8* %118 to i64
  %122 = bitcast i8** %10 to i64*
  store i64 %121, i64* %122, align 8
  call void @_ZdlPv(i8* nonnull %118) #8
  br label %123

123:                                              ; preds = %117, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  ret i1 %110
}

declare zeroext i1 @_ZN3gfx9JPEGCodec6EncodeERK8SkBitmapiPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56), i32, %"class.std::__1::vector"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3gfx8PNGCodec18EncodeBGRASkBitmapERK8SkBitmapbPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56), i1 zeroext, %"class.std::__1::vector"*) local_unnamed_addr #3

declare void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
