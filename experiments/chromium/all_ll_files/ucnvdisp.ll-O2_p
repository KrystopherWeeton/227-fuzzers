; ModuleID = '../../third_party/icu/source/common/ucnvdisp.cpp'
source_filename = "../../third_party/icu/source/common/ucnvdisp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UConverter = type { void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, i8*, i8*, i8*, i8*, %struct.UConverterSharedData*, i32, i8, i8, i8, i8, i8, [7 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], [32 x i8], [2 x i16], [2 x i16], [32 x i16], i32, [19 x i16], [31 x i8], i8, i8, i8, i32 }
%struct.UConverterFromUnicodeArgs = type { i16, i8, %struct.UConverter*, i16*, i16*, i8*, i8*, i32* }
%struct.UConverterToUnicodeArgs = type { i16, i8, %struct.UConverter*, i8*, i8*, i16*, i16*, i32* }
%struct.UConverterSharedData = type { i32, i32, i8*, %struct.UConverterStaticData*, i8, i8, %struct.UConverterImpl*, i32, %struct.UConverterMBCSTable }
%struct.UConverterStaticData = type { i32, [60 x i8], i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] }
%struct.UConverterImpl = type { i32, void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)*, void (%struct.UConverterSharedData*)*, void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)*, void (%struct.UConverter*)*, void (%struct.UConverter*, i32)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, i32 (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverter*, i8*, i32*)*, i8* (%struct.UConverter*)*, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)*, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)*, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* }
%struct.UConverterLoadArgs = type { i32, i32, i8, i8, i16, i32, i8*, i8*, i8* }
%struct.USetAdder = type { %struct.USet*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)*, void (%struct.USet*, i16*, i32)*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)* }
%struct.USet = type opaque
%struct.UConverterMBCSTable = type { i8, i8, i8, i32, [256 x i32]*, [256 x i32]*, i16*, %struct._MBCSToUFallback*, i16*, i16*, [64 x i16], i8*, i8*, i32, i8, i8, i8, i16, i32, i8*, i8*, %struct.UConverterSharedData*, i32* }
%struct._MBCSToUFallback = type { i32, i32 }
%struct.UResourceBundle = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucnv_getDisplayName_69(%struct.UConverter* readonly, i8*, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #4
  store i32 -1431655766, i32* %6, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #4
  store i32 0, i32* %7, align 4
  %10 = icmp eq i32* %4, null
  br i1 %10, label %56, label %11

11:                                               ; preds = %5
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %56

14:                                               ; preds = %11
  %15 = icmp eq %struct.UConverter* %0, null
  %16 = icmp slt i32 %3, 0
  %17 = or i1 %15, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = icmp sgt i32 %3, 0
  %20 = icmp eq i16* %2, null
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %14
  store i32 1, i32* %4, align 4
  br label %56

23:                                               ; preds = %18
  %24 = tail call %struct.UResourceBundle* @ures_open_69(i8* null, i8* %1, i32* nonnull %4) #4
  %25 = load i32, i32* %4, align 4
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  %29 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %28, align 8
  %30 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %29, i64 0, i32 3
  %31 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %30, align 8
  %32 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %31, i64 0, i32 1, i64 0
  %33 = call i16* @ures_getStringByKey_69(%struct.UResourceBundle* %24, i8* %32, i32* nonnull %6, i32* nonnull %7) #4
  call void @ures_close_69(%struct.UResourceBundle* %24) #4
  %34 = load i32, i32* %7, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %27
  %37 = load i32, i32* %4, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  store i32 %34, i32* %4, align 4
  br label %40

40:                                               ; preds = %39, %36
  %41 = load i32, i32* %6, align 4
  %42 = call i32 @uprv_min_69(i32 %41, i32 %3) #4
  %43 = shl nsw i32 %42, 1
  %44 = call i16* @u_memcpy_69(i16* %2, i16* %33, i32 %43) #4
  br label %53

45:                                               ; preds = %27
  %46 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %28, align 8
  %47 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %46, i64 0, i32 3
  %48 = load %struct.UConverterStaticData*, %struct.UConverterStaticData** %47, align 8
  %49 = getelementptr inbounds %struct.UConverterStaticData, %struct.UConverterStaticData* %48, i64 0, i32 1, i64 0
  %50 = call i64 @strlen(i8* %49) #5
  %51 = trunc i64 %50 to i32
  store i32 %51, i32* %6, align 4
  %52 = call i32 @uprv_min_69(i32 %51, i32 %3) #4
  call void @u_charsToUChars_69(i8* %49, i16* %2, i32 %52) #4
  br label %53

53:                                               ; preds = %45, %40
  %54 = load i32, i32* %6, align 4
  %55 = call i32 @u_terminateUChars_69(i16* %2, i32 %3, i32 %54, i32* nonnull %4) #4
  br label %56

56:                                               ; preds = %23, %5, %11, %53, %22
  %57 = phi i32 [ 0, %22 ], [ %55, %53 ], [ 0, %11 ], [ 0, %5 ], [ 0, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #4
  ret i32 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.UResourceBundle* @ures_open_69(i8*, i8*, i32*) local_unnamed_addr #2

declare i16* @ures_getStringByKey_69(%struct.UResourceBundle*, i8*, i32*, i32*) local_unnamed_addr #2

declare void @ures_close_69(%struct.UResourceBundle*) local_unnamed_addr #2

declare i16* @u_memcpy_69(i16*, i16*, i32) local_unnamed_addr #2

declare i32 @uprv_min_69(i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare void @u_charsToUChars_69(i8*, i16*, i32) local_unnamed_addr #2

declare i32 @u_terminateUChars_69(i16*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
