; ModuleID = '../../third_party/blink/renderer/core/svg/svg_element.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::HashMap.1796" = type { %"class.WTF::HashTable.1797" }
%"class.WTF::HashTable.1797" = type <{ %"struct.WTF::KeyValuePair.1800"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1800" = type <{ %"class.WTF::StringImpl"*, i32, [4 x i8] }>
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<blink::QualifiedName, blink::AnimatedPropertyType, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, blink::AnimatedPropertyTypeHashTraits, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<blink::QualifiedName, blink::AnimatedPropertyType, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, blink::AnimatedPropertyTypeHashTraits, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StaticSingleton.1906" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::HeapHashSet<blink::Member<blink::SVGElement>, WTF::MemberHash<blink::SVGElement>, WTF::HashTraits<blink::Member<blink::SVGElement> > > > >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::HeapHashSet<blink::Member<blink::SVGElement>, WTF::MemberHash<blink::SVGElement>, WTF::HashTraits<blink::Member<blink::SVGElement> > > > >::InstanceStorage" = type { [16 x i8] }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StaticSingleton.2028" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::HeapHashSet<blink::WeakMember<blink::SVGElement>, WTF::MemberHash<blink::SVGElement>, WTF::HashTraits<blink::WeakMember<blink::SVGElement> > > > >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::HeapHashSet<blink::WeakMember<blink::SVGElement>, WTF::MemberHash<blink::SVGElement>, WTF::HashTraits<blink::WeakMember<blink::SVGElement> > > > >::InstanceStorage" = type { [16 x i8] }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.139", i32, [4 x i8], %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.277", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.311", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.318", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.257", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i64 }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::Worklist.186"* }
%"class.blink::Worklist.186" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::Worklist.193"* }
%"class.blink::Worklist.193" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::Worklist.200"* }
%"class.blink::Worklist.200" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.175" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.235", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { i64 }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { float }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.260", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.269" }
%"class.WTF::Vector.269" = type { %"class.WTF::VectorBuffer.270" }
%"class.WTF::VectorBuffer.270" = type { %"class.WTF::VectorBufferBase.271" }
%"class.WTF::VectorBufferBase.271" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.299" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.186"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.193"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.200"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.214"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1409" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.1410" }
%"struct.std::__1::__compressed_pair_elem.1410" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.317 }
%class.scoped_refptr.317 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.318" = type { %"struct.std::__1::__atomic_base.319" }
%"struct.std::__1::__atomic_base.319" = type { %"struct.std::__1::__cxx_atomic_impl.320" }
%"struct.std::__1::__cxx_atomic_impl.320" = type { %"struct.std::__1::__cxx_atomic_base_impl.321" }
%"struct.std::__1::__cxx_atomic_base_impl.321" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.121" }
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.862", i32, i32, %"class.blink::Persistent.864" }
%"class.WTF::RefCounted.862" = type { %"class.base::RefCounted.863" }
%"class.base::RefCounted.863" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.864" = type { %"class.blink::PersistentBase.865" }
%"class.blink::PersistentBase.865" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.355" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.868" }
%"class.blink::HeapHashMap.868" = type { %"class.WTF::HashMap.871" }
%"class.WTF::HashMap.871" = type { %"class.WTF::HashTable.872" }
%"class.WTF::HashTable.872" = type <{ %"struct.WTF::KeyValuePair.874"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.874" = type { %"class.blink::WeakMember.875", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.355" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.32", %"class.blink::Member.807" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.402", %"class.blink::Member.404", %"class.blink::Member.0", %"class.blink::Member.406", %"class.blink::Member.406", %"class.blink::Member.430", %"class.blink::Member.432", %"class.blink::Member.434", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.439", %"class.blink::HeapVector.441" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::Document"* }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.410" }
%"class.blink::HeapHashMap.410" = type { %"class.WTF::HashMap.413" }
%"class.WTF::HashMap.413" = type { %"class.WTF::HashTable.414" }
%"class.WTF::HashTable.414" = type <{ %"struct.WTF::KeyValuePair.416"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.416" = type { %"class.WTF::AtomicString", %"class.blink::Member.417" }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.421", i32, %"class.blink::HeapVector.423" }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.423" = type { %"class.WTF::Vector.426" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.blink::Member.421"*, i32, i32 }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.436" }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::HeapHashMap.438"* }
%"class.blink::HeapHashMap.438" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.441" = type { %"class.WTF::Vector.444" }
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446" }
%"class.WTF::VectorBufferBase.446" = type { %"class.blink::Member.447"*, i32, i32 }
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.449", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.451, %"class.WTF::Vector.470", %"class.WTF::Vector.470", %"class.blink::Member", %"class.blink::Member.475", %"class.blink::HeapHashSet.479", %"class.blink::Member.404", %"class.WTF::HashSet.486", %"class.WTF::TextPosition", %"class.blink::Member.490", %"class.blink::HeapVector.492", %"class.blink::Member.499" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.451 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.452", %"class.WTF::Vector.454" }
%"class.WTF::RefCounted.452" = type { %"class.base::RefCounted.453" }
%"class.base::RefCounted.453" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.454" = type { %"class.WTF::VectorBuffer.455" }
%"class.WTF::VectorBuffer.455" = type { %"class.WTF::VectorBufferBase.456" }
%"class.WTF::VectorBufferBase.456" = type { %"class.std::__1::unique_ptr.457"*, i32, i32 }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.460", %"class.WTF::String" }
%"class.WTF::Vector.460" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::VectorBufferBase.462" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.470" = type { %"class.WTF::VectorBuffer.471" }
%"class.WTF::VectorBuffer.471" = type { %"class.WTF::VectorBufferBase.472" }
%"class.WTF::VectorBufferBase.472" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.477" }
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.479" = type { %"class.WTF::HashSet.482" }
%"class.WTF::HashSet.482" = type { %"class.WTF::HashTable.483" }
%"class.WTF::HashTable.483" = type <{ %"class.blink::WeakMember.485"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.485" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.486" = type { %"class.WTF::HashTable.487" }
%"class.WTF::HashTable.487" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.451, %"class.blink::Member.447", %"class.blink::Member.475" }
%"class.blink::HeapVector.492" = type { %"class.WTF::Vector.495" }
%"class.WTF::Vector.495" = type { %"class.WTF::VectorBuffer.496" }
%"class.WTF::VectorBuffer.496" = type { %"class.WTF::VectorBufferBase.497" }
%"class.WTF::VectorBufferBase.497" = type { %"class.blink::Member.475"*, i32, i32 }
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.19", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::SVGElement"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.27" }
%"class.WTF::HashTable.27" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::QualifiedName", %"class.blink::Member.29" }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::SVGAnimatedPropertyBase"* }
%"class.blink::SVGAnimatedPropertyBase" = type { %"class.blink::GarbageCollectedMixin", i24, %"class.blink::Member.31", %"class.blink::QualifiedName"* }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.24" }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type { %"class.blink::HeapHashSet.36", %"class.blink::HeapHashSet.36", %"class.blink::HeapHashSet", %"class.blink::Member.31", %"class.blink::Member.42", %"class.blink::Member.44", i8, [7 x i8], %"class.WTF::HashSet.55", %"class.blink::Member.59", %class.scoped_refptr.74, %"class.blink::AffineTransform" }
%"class.blink::HeapHashSet.36" = type { %"class.WTF::HashSet.39" }
%"class.WTF::HashSet.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"class.blink::Member.31"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::SVGElementResourceClient"* }
%"class.blink::SVGElementResourceClient" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ElementSMILAnimations"* }
%"class.blink::ElementSMILAnimations" = type { %"class.blink::HeapHashMap.48" }
%"class.blink::HeapHashMap.48" = type { %"class.WTF::HashMap.51" }
%"class.WTF::HashMap.51" = type { %"class.WTF::HashTable.52" }
%"class.WTF::HashTable.52" = type <{ %"struct.WTF::KeyValuePair.54"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.54" = type opaque
%"class.WTF::HashSet.55" = type { %"class.WTF::HashTable.56" }
%"class.WTF::HashTable.56" = type <{ %"class.blink::QualifiedName"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.61", %"class.blink::HeapVector", i8, [7 x i8] }>
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.59" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1416" }
%"class.blink::WeakMember.1416" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1292", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1333", i32, i8, [3 x i8], %"class.blink::HeapVector.1335", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1343", %"class.blink::Member.1345", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1354", %"class.blink::Member.1360", %"class.blink::Member.1362", i8, [7 x i8] }>
%"class.blink::Supplementable.1292" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1293" }
%"class.blink::HeapHashMap.1293" = type { %"class.WTF::HashMap.1296" }
%"class.WTF::HashMap.1296" = type { %"class.WTF::HashTable.1297" }
%"class.WTF::HashTable.1297" = type <{ %"struct.WTF::KeyValuePair.1299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1299" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1300" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1228" }
%"class.blink::HeapObserverSet.1228" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1229" }
%"class.blink::HeapHashSet.1229" = type { %"class.WTF::HashSet.1232" }
%"class.WTF::HashSet.1232" = type { %"class.WTF::HashTable.1233" }
%"class.WTF::HashTable.1233" = type <{ %"class.blink::WeakMember.1235"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1235" = type opaque
%"class.blink::Supplementable.1300" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1301" }
%"class.blink::HeapHashMap.1301" = type { %"class.WTF::HashMap.1304" }
%"class.WTF::HashMap.1304" = type { %"class.WTF::HashTable.1305" }
%"class.WTF::HashTable.1305" = type <{ %"struct.WTF::KeyValuePair.1307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1307" = type { i8*, %"class.blink::Member.1929" }
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1931" }
%"class.blink::Member.1931" = type { %"class.blink::MemberBase.1932" }
%"class.blink::MemberBase.1932" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1308, %"class.std::__1::unique_ptr.1317", %"class.std::__1::unique_ptr.1317", %"class.std::__1::unique_ptr.1323", %"class.std::__1::unique_ptr.1323", %"class.blink::Member.831", i32, [4 x i8], %"class.WTF::HashSet.1329", i32, i32 }
%class.scoped_refptr.1308 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1309", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1311", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1316 }
%"class.WTF::RefCounted.1309" = type { %"class.base::RefCounted.1310" }
%"class.base::RefCounted.1310" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1311" = type { %"class.absl::optional_internal::optional_data.1312" }
%"class.absl::optional_internal::optional_data.1312" = type { %"class.absl::optional_internal::optional_data_base.1313" }
%"class.absl::optional_internal::optional_data_base.1313" = type { %"class.absl::optional_internal::optional_data_dtor_base.1314" }
%"class.absl::optional_internal::optional_data_dtor_base.1314" = type { i8, %union.anon.1315 }
%union.anon.1315 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1316 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1317" = type { %"class.std::__1::__compressed_pair.1318" }
%"class.std::__1::__compressed_pair.1318" = type { %"struct.std::__1::__compressed_pair_elem.1319" }
%"struct.std::__1::__compressed_pair_elem.1319" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1323" = type { %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.1325" }
%"struct.std::__1::__compressed_pair_elem.1325" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.WTF::HashSet.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1335" = type { %"class.WTF::Vector.1338" }
%"class.WTF::Vector.1338" = type { %"class.WTF::VectorBuffer.1339" }
%"class.WTF::VectorBuffer.1339" = type { %"class.WTF::VectorBufferBase.1340" }
%"class.WTF::VectorBufferBase.1340" = type { %"class.blink::Member.1341"*, i32, i32 }
%"class.blink::Member.1341" = type opaque
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1347", i32, i32 }
%"class.blink::HeapHashMap.1347" = type { %"class.WTF::HashMap.1350" }
%"class.WTF::HashMap.1350" = type { %"class.WTF::HashTable.1351" }
%"class.WTF::HashTable.1351" = type <{ %"struct.WTF::KeyValuePair.1353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1353" = type opaque
%"class.std::__1::unique_ptr.1354" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1345", i8, [7 x i8], %"class.WTF::Vector.1366", %"class.blink::HeapVector.1401", i8, [7 x i8], %"class.WTF::HashSet.1329", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1369" }
%"class.std::__1::unique_ptr.1369" = type { %"class.std::__1::__compressed_pair.1370" }
%"class.std::__1::__compressed_pair.1370" = type { %"struct.std::__1::__compressed_pair_elem.1371" }
%"struct.std::__1::__compressed_pair_elem.1371" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1372", %"class.WTF::HashMap.1379", %"class.WTF::HashMap.1384", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.691", i32, %"class.mojo::StructPtr.1389", %"class.WTF::Vector.691" }
%"class.mojo::StructPtr.1372" = type { %"class.std::__1::unique_ptr.1373" }
%"class.std::__1::unique_ptr.1373" = type { %"class.std::__1::__compressed_pair.1374" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.1375" }
%"struct.std::__1::__compressed_pair_elem.1375" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"struct.WTF::KeyValuePair.1383"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1383" = type opaque
%"class.WTF::HashMap.1384" = type { %"class.WTF::HashTable.1385" }
%"class.WTF::HashTable.1385" = type <{ %"struct.WTF::KeyValuePair.1388"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1388" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1389" = type { %"class.std::__1::unique_ptr.1390" }
%"class.std::__1::unique_ptr.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.691", i8, i8, [6 x i8] }>
%"class.WTF::Vector.691" = type { %"class.WTF::VectorBuffer.692" }
%"class.WTF::VectorBuffer.692" = type { %"class.WTF::VectorBufferBase.693" }
%"class.WTF::VectorBufferBase.693" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.1401" = type { %"class.WTF::Vector.1404" }
%"class.WTF::Vector.1404" = type { %"class.WTF::VectorBuffer.1405" }
%"class.WTF::VectorBuffer.1405" = type { %"class.WTF::VectorBufferBase.1406" }
%"class.WTF::VectorBufferBase.1406" = type { %"class.blink::Member.1407"*, i32, i32 }
%"class.blink::Member.1407" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.65" }
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67", [96 x i8] }
%"class.WTF::VectorBufferBase.67" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.68" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%class.scoped_refptr.74 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.792", %"class.std::__1::unique_ptr.794" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.324", %"class.blink::DataRef.504", %"class.blink::DataRef.508", %"class.blink::DataRef.708", %"class.blink::DataRef.775", %"class.blink::DataRef.779", %"class.blink::DataRef.783", %"class.blink::DataRef.787", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.75 }
%class.scoped_refptr.75 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.76", %"class.blink::DataRef.78", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.76" = type { %"class.base::RefCounted.77" }
%"class.base::RefCounted.77" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.78" = type { %class.scoped_refptr.79 }
%class.scoped_refptr.79 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.80", %"class.blink::Font" }
%"class.WTF::RefCounted.80" = type { %"class.base::RefCounted.81" }
%"class.base::RefCounted.81" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.109 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.83, %class.scoped_refptr.91, %class.scoped_refptr.101, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.108 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.82 }
%class.scoped_refptr.82 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1414", [4 x i8] }>
%"class.WTF::RefCounted.1414" = type { %"class.base::RefCounted.1415" }
%"class.base::RefCounted.1415" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.83 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.89", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.84" }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86" }
%"class.WTF::VectorBufferBase.86" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.89" = type { %"class.base::RefCounted.90" }
%"class.base::RefCounted.90" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.91 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.92", %"class.WTF::RefCounted.99", [4 x i8] }>
%"class.blink::FontSettings.92" = type { %"class.WTF::Vector.93" }
%"class.WTF::Vector.93" = type { %"class.WTF::VectorBuffer.94" }
%"class.WTF::VectorBuffer.94" = type { %"class.WTF::VectorBufferBase.95" }
%"class.WTF::VectorBufferBase.95" = type { %"class.blink::FontTagValuePair.96"*, i32, i32 }
%"class.blink::FontTagValuePair.96" = type { i32, float }
%"class.WTF::RefCounted.99" = type { %"class.base::RefCounted.100" }
%"class.base::RefCounted.100" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.101 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.102", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.105, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.102" = type { %"class.base::RefCounted.103" }
%"class.base::RefCounted.103" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.105 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.106", [4 x i8] }>
%"class.WTF::RefCounted.106" = type { %"class.base::RefCounted.107" }
%"class.base::RefCounted.107" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.108 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.109 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.110", %"class.WTF::Vector.112", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.110" = type { %"class.base::RefCounted.111" }
%"class.base::RefCounted.111" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.112" = type { %"class.WTF::VectorBuffer.113" }
%"class.WTF::VectorBuffer.113" = type { %"class.WTF::VectorBufferBase.114", [8 x i8] }
%"class.WTF::VectorBufferBase.114" = type { %class.scoped_refptr.115*, i32, i32 }
%class.scoped_refptr.115 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.116", [4 x i8] }>
%"class.WTF::RefCounted.116" = type { %"class.base::RefCounted.117" }
%"class.base::RefCounted.117" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.136, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.116" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.120 }
%union.anon.120 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.131, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.121" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.121" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.126" }
%"struct.std::__1::atomic.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__cxx_atomic_impl.129" }
%"struct.std::__1::__cxx_atomic_impl.129" = type { %"struct.std::__1::__cxx_atomic_base_impl.130" }
%"struct.std::__1::__cxx_atomic_base_impl.130" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.131 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.134, %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.136 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.137", [4 x i8] }>
%"class.WTF::RefCounted.137" = type { %"class.base::RefCounted.138" }
%"class.base::RefCounted.138" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.121" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.126" }
%"class.blink::Length" = type <{ %union.anon.323, i8, i8, i8, i8 }>
%union.anon.323 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.324" = type { %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.326", [4 x i8], %"class.blink::DataRef.328", %"class.blink::DataRef.369", %"class.WTF::Vector.373", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.377, %class.scoped_refptr.386, %"class.blink::Persistent.394", %"class.blink::Persistent.396", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.326" = type { %"class.base::RefCounted.327" }
%"class.base::RefCounted.327" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.328" = type { %class.scoped_refptr.329 }
%class.scoped_refptr.329 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.330", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.332, %class.scoped_refptr.339, %"class.blink::Persistent.356", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.330" = type { %"class.base::RefCounted.331" }
%"class.base::RefCounted.331" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.332 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.333", %"class.WTF::Vector.334" }
%"class.base::RefCountedThreadSafe.333" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.334" = type { %"class.WTF::VectorBuffer.335" }
%"class.WTF::VectorBuffer.335" = type { %"class.WTF::VectorBufferBase.336" }
%"class.WTF::VectorBufferBase.336" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.339 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.340", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.340" = type { %"class.base::RefCounted.341" }
%"class.base::RefCounted.341" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.342", %"class.blink::Persistent" }
%"class.WTF::HashMap.342" = type { %"class.WTF::HashTable.343" }
%"class.WTF::HashTable.343" = type <{ %"struct.WTF::KeyValuePair.346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.346" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1959 }
%class.scoped_refptr.1959 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1960", %"class.WTF::Vector.691", %"class.WTF::Vector.1962", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1960" = type { %"class.base::RefCounted.1961" }
%"class.base::RefCounted.1961" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1962" = type { %"class.WTF::VectorBuffer.1963" }
%"class.WTF::VectorBuffer.1963" = type { %"class.WTF::VectorBufferBase.1964" }
%"class.WTF::VectorBufferBase.1964" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1965 }
%union.anon.1965 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.347" }
%"class.blink::PersistentBase.347" = type { %"class.blink::HeapHashMap.348"*, %"class.blink::PersistentNodePtr.355" }
%"class.blink::HeapHashMap.348" = type { %"class.WTF::HashMap.351" }
%"class.WTF::HashMap.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"struct.WTF::KeyValuePair.354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.354" = type opaque
%"class.blink::Persistent.356" = type { %"class.blink::PersistentBase.357" }
%"class.blink::PersistentBase.357" = type { %"class.blink::HeapVector.358"*, %"class.blink::PersistentNodePtr.355" }
%"class.blink::HeapVector.358" = type { %"class.WTF::Vector.361" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.363" }
%"class.WTF::VectorBufferBase.363" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.364", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.369" = type { %class.scoped_refptr.370 }
%class.scoped_refptr.370 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.371", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.371" = type { %"class.base::RefCounted.372" }
%"class.base::RefCounted.372" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.377 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.378", %"class.WTF::Vector.380" }
%"class.WTF::RefCounted.378" = type { %"class.base::RefCounted.379" }
%"class.base::RefCounted.379" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"struct.std::__1::pair.383"*, i32, i32 }
%"struct.std::__1::pair.383" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.386 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.387", [4 x i8], %"class.WTF::Vector.389" }
%"class.WTF::RefCounted.387" = type { %"class.base::RefCounted.388" }
%"class.base::RefCounted.388" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.391", [28 x i8] }>
%"class.WTF::VectorBufferBase.391" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.394" = type { %"class.blink::PersistentBase.395" }
%"class.blink::PersistentBase.395" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.355" }
%"class.blink::Persistent.396" = type { %"class.blink::PersistentBase.397" }
%"class.blink::PersistentBase.397" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.355" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.400", %"class.blink::Member.502" }
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.504" = type { %class.scoped_refptr.505 }
%class.scoped_refptr.505 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.506", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.506" = type { %"class.base::RefCounted.507" }
%"class.base::RefCounted.507" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.508" = type { %class.scoped_refptr.509 }
%class.scoped_refptr.509 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.510", [4 x i8], %"class.blink::DataRef.512", %"class.blink::DataRef.578", %"class.blink::TransformOperations", %class.scoped_refptr.386, %"class.blink::Persistent.702", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.510" = type { %"class.base::RefCounted.511" }
%"class.base::RefCounted.511" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.512" = type { %class.scoped_refptr.513 }
%class.scoped_refptr.513 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.514", [4 x i8], %"class.blink::DataRef.516", %"class.blink::Persistent.554", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.514" = type { %"class.base::RefCounted.515" }
%"class.base::RefCounted.515" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.516" = type { %class.scoped_refptr.517 }
%class.scoped_refptr.517 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.518", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.536, %class.scoped_refptr.539, %class.scoped_refptr.542, %class.scoped_refptr.545, %class.scoped_refptr.546, %class.scoped_refptr.547, %"class.blink::Persistent.554", %"class.blink::Persistent.569", %"class.absl::optional.573", %"class.absl::optional.573", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.518" = type { %"class.base::RefCounted.519" }
%"class.base::RefCounted.519" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.520", %"class.std::__1::unique_ptr.525" }
%"class.WTF::Vector.520" = type { %"class.WTF::VectorBuffer.521" }
%"class.WTF::VectorBuffer.521" = type { %"class.WTF::VectorBufferBase.522" }
%"class.WTF::VectorBufferBase.522" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.528", %"class.WTF::Vector.520", i32, i32 }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.536 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.537", [4 x i8] }>
%"class.WTF::RefCounted.537" = type { %"class.base::RefCounted.538" }
%"class.base::RefCounted.538" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.539 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.540", [4 x i8] }>
%"class.WTF::RefCounted.540" = type { %"class.base::RefCounted.541" }
%"class.base::RefCounted.541" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.542 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.543" }>
%"class.WTF::RefCounted.543" = type { %"class.base::RefCounted.544" }
%"class.base::RefCounted.544" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.545 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.546 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.547 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.548", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.548" = type { %"class.base::RefCounted.549" }
%"class.base::RefCounted.549" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.550" }
%"class.blink::DataRef.550" = type { %class.scoped_refptr.551 }
%class.scoped_refptr.551 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.394", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.552" }
%"class.WTF::RefCounted.552" = type { %"class.base::RefCounted.553" }
%"class.base::RefCounted.553" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.569" = type { %"class.blink::PersistentBase.570" }
%"class.blink::PersistentBase.570" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.355" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.539, %"class.blink::Member.364", i32, [4 x i8] }>
%"class.absl::optional.573" = type { %"class.absl::optional_internal::optional_data.574" }
%"class.absl::optional_internal::optional_data.574" = type { %"class.absl::optional_internal::optional_data_base.575" }
%"class.absl::optional_internal::optional_data_base.575" = type { %"class.absl::optional_internal::optional_data_dtor_base.576" }
%"class.absl::optional_internal::optional_data_dtor_base.576" = type { i8, [3 x i8], %union.anon.577 }
%union.anon.577 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.554" = type { %"class.blink::PersistentBase.555" }
%"class.blink::PersistentBase.555" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.355" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.558" }
%"class.blink::HeapVector.558" = type { %"class.WTF::Vector.561" }
%"class.WTF::Vector.561" = type { %"class.WTF::VectorBuffer.562" }
%"class.WTF::VectorBuffer.562" = type { %"class.WTF::VectorBufferBase.563" }
%"class.WTF::VectorBufferBase.563" = type { %"class.blink::Member.564"*, i32, i32 }
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.578" = type { %class.scoped_refptr.579 }
%class.scoped_refptr.579 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.580", %"class.blink::DataRef.582", %"class.blink::DataRef.586", %"class.blink::DataRef.595", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.614", %"class.std::__1::unique_ptr.625", %"class.std::__1::unique_ptr.663", %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.685", %"class.WTF::Vector.691", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.580" = type { %"class.base::RefCounted.581" }
%"class.base::RefCounted.581" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.582" = type { %class.scoped_refptr.583 }
%class.scoped_refptr.583 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.584", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.584" = type { %"class.base::RefCounted.585" }
%"class.base::RefCounted.585" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.586" = type { %class.scoped_refptr.587 }
%class.scoped_refptr.587 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.588", [4 x i8], %"class.WTF::Vector.590", i8, [7 x i8] }>
%"class.WTF::RefCounted.588" = type { %"class.base::RefCounted.589" }
%"class.base::RefCounted.589" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.592" }
%"class.WTF::VectorBufferBase.592" = type { i32*, i32, i32 }
%"class.blink::DataRef.595" = type { %class.scoped_refptr.596 }
%class.scoped_refptr.596 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.597", [4 x i8], %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.604", %"class.WTF::HashMap.604", %"class.WTF::HashMap.604", %"class.WTF::HashMap.604", %"class.WTF::HashMap.609", %"class.WTF::Vector.520", %"class.WTF::Vector.520", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.597" = type { %"class.base::RefCounted.598" }
%"class.base::RefCounted.598" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.599" = type { %"class.WTF::HashTable.600" }
%"class.WTF::HashTable.600" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type { %"class.WTF::String", %"class.WTF::Vector.1949" }
%"class.WTF::Vector.1949" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951" }
%"class.WTF::VectorBufferBase.1951" = type { i64*, i32, i32 }
%"class.WTF::HashMap.604" = type { %"class.WTF::HashTable.605" }
%"class.WTF::HashTable.605" = type <{ %"struct.WTF::KeyValuePair.608"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.608" = type { i64, %"class.WTF::Vector.691" }
%"class.WTF::HashMap.609" = type { %"class.WTF::HashTable.610" }
%"class.WTF::HashTable.610" = type <{ %"struct.WTF::KeyValuePair.613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.613" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.617" }
%"class.WTF::HashMap.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"struct.WTF::KeyValuePair.621"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.621" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1954", %"class.absl::optional.1954", %"class.absl::optional.1954" }
%"class.absl::optional.1954" = type { %"class.absl::optional_internal::optional_data.1955" }
%"class.absl::optional_internal::optional_data.1955" = type { %"class.absl::optional_internal::optional_data_base.1956" }
%"class.absl::optional_internal::optional_data_base.1956" = type { %"class.absl::optional_internal::optional_data_dtor_base.1957" }
%"class.absl::optional_internal::optional_data_dtor_base.1957" = type { i8, %union.anon.1958 }
%union.anon.1958 = type { i32 }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.373", %"class.WTF::Vector.640", %"class.WTF::Vector.628", %"class.WTF::Vector.645", %"class.WTF::Vector.650", %"class.WTF::Vector.655" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.628", %"class.WTF::Vector.628", %"class.WTF::Vector.633" }
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { %class.scoped_refptr.636*, i32, i32 }
%class.scoped_refptr.636 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.637" }
%"class.base::RefCountedThreadSafe.637" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.640" = type { %"class.WTF::VectorBuffer.641" }
%"class.WTF::VectorBuffer.641" = type { %"class.WTF::VectorBufferBase.642" }
%"class.WTF::VectorBufferBase.642" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { double*, i32, i32 }
%"class.WTF::Vector.645" = type { %"class.WTF::VectorBuffer.646" }
%"class.WTF::VectorBuffer.646" = type { %"class.WTF::VectorBufferBase.647" }
%"class.WTF::VectorBufferBase.647" = type { i32*, i32, i32 }
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.652" }
%"class.WTF::VectorBufferBase.652" = type { i32*, i32, i32 }
%"class.WTF::Vector.655" = type { %"class.WTF::VectorBuffer.656" }
%"class.WTF::VectorBuffer.656" = type { %"class.WTF::VectorBufferBase.657" }
%"class.WTF::VectorBufferBase.657" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.666" }
%"class.WTF::Vector.666" = type { %"class.WTF::VectorBuffer.667" }
%"class.WTF::VectorBuffer.667" = type { %"class.WTF::VectorBufferBase.668" }
%"class.WTF::VectorBufferBase.668" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.677" }
%"class.WTF::Vector.677" = type { %"class.WTF::VectorBuffer.678" }
%"class.WTF::VectorBuffer.678" = type { %"class.WTF::VectorBufferBase.679" }
%"class.WTF::VectorBufferBase.679" = type { %"class.blink::Persistent.394"*, i32, i32 }
%"class.std::__1::unique_ptr.685" = type { %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.394", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.696" }
%"class.WTF::Vector.696" = type { %"class.WTF::VectorBuffer.697" }
%"class.WTF::VectorBuffer.697" = type { %"class.WTF::VectorBufferBase.698" }
%"class.WTF::VectorBufferBase.698" = type { %class.scoped_refptr.699*, i32, i32 }
%class.scoped_refptr.699 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.543", [4 x i8] }>
%"class.blink::Persistent.702" = type { %"class.blink::PersistentBase.703" }
%"class.blink::PersistentBase.703" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.355" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.706" }
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.708" = type { %class.scoped_refptr.709 }
%class.scoped_refptr.709 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.710", [4 x i8], %"class.blink::DataRef.712", %"class.blink::DataRef.716", %"class.blink::DataRef.737", %"class.blink::DataRef.755", %"class.blink::DataRef.767", %"class.blink::DataRef.771", %class.scoped_refptr.741, i32, [4 x i8] }>
%"class.WTF::RefCounted.710" = type { %"class.base::RefCounted.711" }
%"class.base::RefCounted.711" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.712" = type { %class.scoped_refptr.713 }
%class.scoped_refptr.713 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.714", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.714" = type { %"class.base::RefCounted.715" }
%"class.base::RefCounted.715" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.716" = type { %class.scoped_refptr.717 }
%class.scoped_refptr.717 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.718", %class.scoped_refptr.720, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.718" = type { %"class.base::RefCounted.719" }
%"class.base::RefCounted.719" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.720 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.721", %"class.std::__1::unique_ptr.727", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.540" }>
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.730, i32, %"struct.std::__1::atomic.126", %"struct.std::__1::atomic.126", i8, i8 }>
%class.sk_sp.730 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.731, %class.SkTDArray.732, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.121" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.731 = type { i8*, i32, i32 }
%class.SkTDArray.732 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.733 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.121", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.733 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.318", [3 x i8] }
%"class.blink::DataRef.737" = type { %class.scoped_refptr.738 }
%class.scoped_refptr.738 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.739", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.739" = type { %"class.base::RefCounted.740" }
%"class.base::RefCounted.740" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.741, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.755" = type { %class.scoped_refptr.756 }
%class.scoped_refptr.756 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.757", [4 x i8], %class.scoped_refptr.759, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.757" = type { %"class.base::RefCounted.758" }
%"class.base::RefCounted.758" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.759 = type { %"class.base::RefCountedData.760"* }
%"class.base::RefCountedData.760" = type { %"class.base::RefCountedThreadSafe.761", %"class.WTF::Vector.762" }
%"class.base::RefCountedThreadSafe.761" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.763" }
%"class.WTF::VectorBuffer.763" = type { %"class.WTF::VectorBufferBase.764" }
%"class.WTF::VectorBufferBase.764" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.767" = type { %class.scoped_refptr.768 }
%class.scoped_refptr.768 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.769", %class.scoped_refptr.741, %class.scoped_refptr.741, %class.scoped_refptr.741 }
%"class.WTF::RefCounted.769" = type { %"class.base::RefCounted.770" }
%"class.base::RefCounted.770" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.771" = type { %class.scoped_refptr.772 }
%class.scoped_refptr.772 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.773", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.773" = type { %"class.base::RefCounted.774" }
%"class.base::RefCounted.774" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.741 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.742", %"class.blink::Persistent.744", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.742" = type { %"class.base::RefCounted.743" }
%"class.base::RefCounted.743" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.744" = type { %"class.blink::PersistentBase.745" }
%"class.blink::PersistentBase.745" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.355" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.421", %"class.blink::HeapHashMap.748" }
%"class.blink::HeapHashMap.748" = type { %"class.WTF::HashMap.751" }
%"class.WTF::HashMap.751" = type { %"class.WTF::HashTable.752" }
%"class.WTF::HashTable.752" = type <{ %"struct.WTF::KeyValuePair.754"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.754" = type opaque
%"class.blink::DataRef.775" = type { %class.scoped_refptr.776 }
%class.scoped_refptr.776 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.777", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.777" = type { %"class.base::RefCounted.778" }
%"class.base::RefCounted.778" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.779" = type { %class.scoped_refptr.780 }
%class.scoped_refptr.780 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.781", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.781" = type { %"class.base::RefCounted.782" }
%"class.base::RefCounted.782" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.783" = type { %class.scoped_refptr.784 }
%class.scoped_refptr.784 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.785", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.785" = type { %"class.base::RefCounted.786" }
%"class.base::RefCounted.786" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.787" = type { %class.scoped_refptr.788 }
%class.scoped_refptr.788 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.789", %class.scoped_refptr.791 }
%"class.WTF::RefCounted.789" = type { %"class.base::RefCounted.790" }
%"class.base::RefCounted.790" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.791 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.813", %"class.blink::StyleVariables", %class.scoped_refptr.791 }
%"class.WTF::RefCounted.813" = type { %"class.base::RefCounted.814" }
%"class.base::RefCounted.814" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.792" = type { %"class.base::RefCounted.793" }
%"class.base::RefCounted.793" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.797" }
%"class.std::__1::unique_ptr.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.WTF::Vector.800"* }
%"class.WTF::Vector.800" = type { %"class.WTF::VectorBuffer.1969" }
%"class.WTF::VectorBuffer.1969" = type { %"class.WTF::VectorBufferBase.1970", [32 x i8] }
%"class.WTF::VectorBufferBase.1970" = type { %class.scoped_refptr.1635*, i32, i32 }
%class.scoped_refptr.1635 = type { %"class.blink::ComputedStyle"* }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty" }
%"class.blink::SVGAnimatedProperty" = type { %"class.blink::SVGAnimatedPropertyCommon" }
%"class.blink::SVGAnimatedPropertyCommon" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.809", %"class.blink::Member.809" }
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::SVGString"* }
%"class.blink::SVGString" = type { %"class.blink::SVGPropertyBase", %"class.WTF::String" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.822", %"class.WTF::Vector.822", i8, i32, %"class.blink::Member.829", %"class.blink::Member.831", %"class.blink::Member.833", %"class.blink::Member.835", %"class.blink::Member.837", %"class.blink::Member.839", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.847", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.853", %"class.blink::Member.855", %"class.blink::Member.447", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.858", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.423", %"class.blink::Member.421", %"class.blink::Member.883", %"class.blink::Member.421", %"class.blink::Member.421", %"class.blink::Member.421", %"class.blink::UserActionElementSet", %"class.blink::Member.892", double, double, i64, i64, %"class.blink::HeapHashSet.894", %"class.blink::HeapHashSet.901", i16, i8, %"class.blink::Member.908", %"class.blink::Member.910", %"class.blink::Member.912", %"class.blink::Member.914", %"class.blink::TextLinkColors", %"class.blink::Member.916", i8, [7 x i8], %"class.blink::HeapHashMap.918", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.421", %"class.WTF::Vector.925", %"class.blink::Member.930", %"class.blink::Member.932", i8, %"class.blink::Member.421", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.934", %"class.blink::HeapVector.936", %"class.std::__1::unique_ptr.944", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.950", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.963", %"class.WTF::Vector.974", i8, i8, %"class.std::__1::unique_ptr.979", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.423", %"class.blink::HeapVector.985", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.993", i8, i32, %"class.blink::Member.995", %"class.blink::Member.997", %"class.blink::Member.999", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1001", %"class.WTF::HashMap.1003", %"class.blink::Member.1008", %"class.blink::Member.1085", %"class.blink::Member.1087", %"class.blink::Member.1089", %"class.blink::Member.404", %"class.blink::Member.404", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1091", i8, i32, %"class.blink::Member.1098", %"class.blink::Member.1100", i32, %"class.blink::Member.1102", %"class.blink::Member.1104", %"class.blink::Member.1106", %"class.std::__1::unique_ptr.1108", i64, %"class.std::__1::unique_ptr.1114", i32, i32, %"class.blink::Member.1125", %"class.blink::Member.1127", %"class.blink::Member.1129", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1131", %"class.WTF::Vector.1133", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1138", %"class.blink::Member.1145", %"class.std::__1::unique_ptr.1147", %"class.blink::Member.1153", i8, i8, %"class.WTF::String", %"class.blink::Member.1155", i8, [7 x i8], %"class.blink::HeapHashMap.1157", %"class.blink::HeapObserverSet", %"class.blink::Member.1171", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1173", i32, i8, i8, %"class.blink::WeakMember.1175", %"class.blink::Member.1176" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.815" }
%"class.blink::HeapHashMap.815" = type { %"class.WTF::HashMap.818" }
%"class.WTF::HashMap.818" = type { %"class.WTF::HashTable.819" }
%"class.WTF::HashTable.819" = type <{ %"struct.WTF::KeyValuePair.821"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.821" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.825 }
%class.scoped_refptr.825 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.826", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.826" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.841" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.841" = type { %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"class.blink::KURL"* }
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.857 }
%class.scoped_refptr.857 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.858" = type { %"class.WTF::VectorBuffer.859" }
%"class.WTF::VectorBuffer.859" = type { %"class.WTF::VectorBufferBase.860" }
%"class.WTF::VectorBufferBase.860" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.861 }
%class.scoped_refptr.861 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.883" = type { %"class.blink::MemberBase.884" }
%"class.blink::MemberBase.884" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.885" }
%"class.blink::HeapHashMap.885" = type { %"class.WTF::HashMap.888" }
%"class.WTF::HashMap.888" = type { %"class.WTF::HashTable.889" }
%"class.WTF::HashTable.889" = type <{ %"struct.WTF::KeyValuePair.891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.891" = type opaque
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.894" = type { %"class.WTF::HashSet.897" }
%"class.WTF::HashSet.897" = type { %"class.WTF::HashTable.898" }
%"class.WTF::HashTable.898" = type <{ %"class.blink::WeakMember.900"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.900" = type opaque
%"class.blink::HeapHashSet.901" = type { %"class.WTF::HashSet.904" }
%"class.WTF::HashSet.904" = type { %"class.WTF::HashTable.905" }
%"class.WTF::HashTable.905" = type <{ %"class.blink::WeakMember.907"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.907" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.441" }
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.918" = type { %"class.WTF::HashMap.921" }
%"class.WTF::HashMap.921" = type { %"class.WTF::HashTable.922" }
%"class.WTF::HashTable.922" = type <{ %"struct.WTF::KeyValuePair.924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.924" = type opaque
%"class.WTF::Vector.925" = type { %"class.WTF::VectorBuffer.926" }
%"class.WTF::VectorBuffer.926" = type { %"class.WTF::VectorBufferBase.927" }
%"class.WTF::VectorBufferBase.927" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.936" = type { %"class.WTF::Vector.939" }
%"class.WTF::Vector.939" = type { %"class.WTF::VectorBuffer.940" }
%"class.WTF::VectorBuffer.940" = type { %"class.WTF::VectorBufferBase.941" }
%"class.WTF::VectorBufferBase.941" = type { %"class.blink::Member.942"*, i32, i32 }
%"class.blink::Member.942" = type opaque
%"class.std::__1::unique_ptr.944" = type { %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.950" = type { %"class.WTF::HashSet.953" }
%"class.WTF::HashSet.953" = type { %"class.WTF::HashTable.954" }
%"class.WTF::HashTable.954" = type <{ %"class.blink::WeakMember.956"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.956" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.957", i32, [4 x i8] }>
%"class.WTF::Vector.957" = type { %"class.WTF::VectorBuffer.958" }
%"class.WTF::VectorBuffer.958" = type { %"class.WTF::VectorBufferBase.959" }
%"class.WTF::VectorBufferBase.959" = type { %"struct.std::__1::pair.960"*, i32, i32 }
%"struct.std::__1::pair.960" = type opaque
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type { %"class.blink::Member.404", %"class.blink::HeapHashSet.967", %"class.blink::HeapHashSet.36", %"class.blink::HeapHashSet.967", %"class.blink::FloatPoint" }
%"class.blink::HeapHashSet.967" = type { %"class.WTF::HashSet.970" }
%"class.WTF::HashSet.970" = type { %"class.WTF::HashTable.971" }
%"class.WTF::HashTable.971" = type <{ %"class.blink::Member.973"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.973" = type opaque
%"class.WTF::Vector.974" = type { %"class.WTF::VectorBuffer.975" }
%"class.WTF::VectorBuffer.975" = type { %"class.WTF::VectorBufferBase.976" }
%"class.WTF::VectorBufferBase.976" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.985" = type { %"class.WTF::Vector.988" }
%"class.WTF::Vector.988" = type { %"class.WTF::VectorBuffer.989" }
%"class.WTF::VectorBuffer.989" = type { %"class.WTF::VectorBufferBase.990" }
%"class.WTF::VectorBufferBase.990" = type { %"class.blink::Member.991"*, i32, i32 }
%"class.blink::Member.991" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.404" }
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1003" = type { %"class.WTF::HashTable.1004" }
%"class.WTF::HashTable.1004" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type { i64, %"class.blink::Member.404", %"class.blink::HeapHashSet.1012", %"class.blink::HeapHashSet.1012", %"class.blink::HeapHashMap.1078" }
%"class.blink::HeapHashSet.1012" = type { %"class.WTF::HashSet.1015" }
%"class.WTF::HashSet.1015" = type { %"class.WTF::HashTable.1016" }
%"class.WTF::HashTable.1016" = type <{ %"class.blink::WeakMember.1018"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.404", i32, [4 x i8], %"class.blink::HeapHashSet.1020", %"class.blink::HeapHashSet.1028", %"class.std::__1::unique_ptr.1035", %"class.absl::optional.1068" }
%"class.blink::HeapHashSet.1020" = type { %"class.WTF::HashSet.1023" }
%"class.WTF::HashSet.1023" = type { %"class.WTF::HashTable.1024" }
%"class.WTF::HashTable.1024" = type <{ %"class.blink::Member.1026"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.1236", %"class.absl::optional.1241", %"class.absl::optional.1241", %"class.absl::optional.1246", %"class.absl::optional.1241", i8, [3 x i8], i32, %"class.blink::Member.1251", %"class.blink::Member.1251", %"class.blink::Member.1253", %"class.blink::Member.404", %"class.blink::Member.1266", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1267", %"class.blink::Member.1267", %"class.blink::Member.1267", %"class.std::__1::unique_ptr.1275", i8, [3 x i8], i32, %"class.blink::Member.1281", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1219" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1191" }
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196", [32 x i8] }
%"class.WTF::VectorBufferBase.1196" = type { %"struct.std::__1::pair.1197"*, i32, i32 }
%"struct.std::__1::pair.1197" = type { %"class.WTF::AtomicString", %"class.blink::Member.1198" }
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::HeapVector.1200"* }
%"class.blink::HeapVector.1200" = type { %"class.WTF::Vector.1203" }
%"class.WTF::Vector.1203" = type { %"class.WTF::VectorBuffer.1204" }
%"class.WTF::VectorBuffer.1204" = type { %"class.WTF::VectorBufferBase.1205", [16 x i8] }
%"class.WTF::VectorBufferBase.1205" = type { %"class.blink::RegisteredEventListener"*, i32, i32 }
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1206", i8, [7 x i8] }>
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::EventListener"* }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1210" }
%"class.absl::optional.1210" = type { %"class.absl::optional_internal::optional_data.1211" }
%"class.absl::optional_internal::optional_data.1211" = type { %"class.absl::optional_internal::optional_data_base.1212" }
%"class.absl::optional_internal::optional_data_base.1212" = type { %"class.absl::optional_internal::optional_data_dtor_base.1213" }
%"class.absl::optional_internal::optional_data_dtor_base.1213" = type { i8, %union.anon.1214 }
%union.anon.1214 = type { i64 }
%"class.std::__1::unique_ptr.1219" = type { %"class.std::__1::__compressed_pair.1220" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.WTF::Vector.1222"* }
%"class.WTF::Vector.1222" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1226" }
%"class.blink::WeakMember.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.absl::optional.1236" = type { %"class.absl::optional_internal::optional_data.1237" }
%"class.absl::optional_internal::optional_data.1237" = type { %"class.absl::optional_internal::optional_data_base.1238" }
%"class.absl::optional_internal::optional_data_base.1238" = type { %"class.absl::optional_internal::optional_data_dtor_base.1239" }
%"class.absl::optional_internal::optional_data_dtor_base.1239" = type { i8, %union.anon.1240 }
%union.anon.1240 = type { double }
%"class.absl::optional.1246" = type { %"class.absl::optional_internal::optional_data.1247" }
%"class.absl::optional_internal::optional_data.1247" = type { %"class.absl::optional_internal::optional_data_base.1248" }
%"class.absl::optional_internal::optional_data_base.1248" = type { %"class.absl::optional_internal::optional_data_dtor_base.1249" }
%"class.absl::optional_internal::optional_data_dtor_base.1249" = type { i8, %union.anon.1250 }
%union.anon.1250 = type { i32 }
%"class.absl::optional.1241" = type { %"class.absl::optional_internal::optional_data.1242" }
%"class.absl::optional_internal::optional_data.1242" = type { %"class.absl::optional_internal::optional_data_base.1243" }
%"class.absl::optional_internal::optional_data_base.1243" = type { %"class.absl::optional_internal::optional_data_dtor_base.1244" }
%"class.absl::optional_internal::optional_data_dtor_base.1244" = type { i8, %union.anon.1245 }
%union.anon.1245 = type { %"class.blink::AnimationTimeDelta" }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::AnimationEffect"* }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1255", %"struct.blink::Timing", %"class.blink::Member.1257", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.1241", %"class.absl::optional.1261", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::AnimationEffectOwner"* }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.1241", i32, [4 x i8], %class.scoped_refptr.636, i16, [6 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.1236", %"class.absl::optional.1236", i8, i8, i8, %"class.absl::optional.1241", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1261" = type { %"class.absl::optional_internal::optional_data.1262" }
%"class.absl::optional_internal::optional_data.1262" = type { %"class.absl::optional_internal::optional_data_base.1263" }
%"class.absl::optional_internal::optional_data_base.1263" = type { %"class.absl::optional_internal::optional_data_dtor_base.1264" }
%"class.absl::optional_internal::optional_data_dtor_base.1264" = type { i8, %union.anon.1265 }
%union.anon.1265 = type { i32 }
%"class.blink::Member.1266" = type { %"class.blink::MemberBase.1019" }
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1269", %"class.blink::Member.1269", %"class.blink::Member.1271", %"class.blink::Member.1273", %"class.base::TimeTicks" }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1271" = type { %"class.blink::MemberBase.1272" }
%"class.blink::MemberBase.1272" = type { %"class.blink::Event"* }
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.std::__1::unique_ptr.1275" = type { %"class.std::__1::__compressed_pair.1276" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.1236", %"class.absl::optional.1236", double, i8, i32 }
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1285", %"class.std::__1::unique_ptr.1286", %"class.blink::Member.1026" }
%"class.blink::ThreadState::PrefinalizerRegistration.1285" = type { i8 }
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.1028" = type { %"class.WTF::HashSet.1031" }
%"class.WTF::HashSet.1031" = type { %"class.WTF::HashTable.1032" }
%"class.WTF::HashTable.1032" = type <{ %"class.blink::WeakMember.1034"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1034" = type opaque
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.1038 }
%class.scoped_refptr.1038 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.1039", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.1039" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.1040" }
%"class.std::__1::__hash_table.1040" = type <{ %"class.std::__1::unique_ptr.1041", %"class.std::__1::__compressed_pair.1051", %"class.std::__1::__compressed_pair.1056", %"class.std::__1::__compressed_pair.1060", [4 x i8] }>
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043", %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"struct.std::__1::__hash_node_base.1044"** }
%"struct.std::__1::__hash_node_base.1044" = type { %"struct.std::__1::__hash_node_base.1044"* }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"class.std::__1::__bucket_list_deallocator.1046" }
%"class.std::__1::__bucket_list_deallocator.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"struct.std::__1::__hash_node_base.1044" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.1068" = type { %"class.absl::optional_internal::optional_data.1069" }
%"class.absl::optional_internal::optional_data.1069" = type { %"class.absl::optional_internal::optional_data_base.1070" }
%"class.absl::optional_internal::optional_data_base.1070" = type { %"class.absl::optional_internal::optional_data_dtor_base.1071" }
%"class.absl::optional_internal::optional_data_dtor_base.1071" = type { i8, %union.anon.1072 }
%union.anon.1072 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.1073" }
%"class.absl::optional.1073" = type { %"class.absl::optional_internal::optional_data.1074" }
%"class.absl::optional_internal::optional_data.1074" = type { %"class.absl::optional_internal::optional_data_base.1075" }
%"class.absl::optional_internal::optional_data_base.1075" = type { %"class.absl::optional_internal::optional_data_dtor_base.1076" }
%"class.absl::optional_internal::optional_data_dtor_base.1076" = type { i8, %union.anon.1077 }
%union.anon.1077 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::HeapHashMap.1078" = type { %"class.WTF::HashMap.1081" }
%"class.WTF::HashMap.1081" = type { %"class.WTF::HashTable.1082" }
%"class.WTF::HashTable.1082" = type <{ %"struct.WTF::KeyValuePair.1084"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1084" = type opaque
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.882", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.879, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.879 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.880" }>
%"class.base::RefCountedThreadSafe.880" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.881 }
%class.scoped_refptr.881 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.882" = type { %"class.blink::MemberBase.405" }
%"class.blink::HeapHashSet.1091" = type { %"class.WTF::HashSet.1094" }
%"class.WTF::HashSet.1094" = type { %"class.WTF::HashTable.1095" }
%"class.WTF::HashTable.1095" = type <{ %"class.blink::Member.1097"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1097" = type opaque
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1108" = type { %"class.std::__1::__compressed_pair.1109" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", i32, [4 x i8], %"class.WTF::HashMap.1117", %"class.WTF::HashMap.1117", %"class.WTF::HashMap.1117", %"class.WTF::HashMap.1117", %"class.WTF::HashMap.1117", %"class.WTF::HashMap.1117", %"class.WTF::HashMap.1117", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1117" = type { %"class.WTF::HashTable.1118" }
%"class.WTF::HashTable.1118" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1133" = type { %"class.WTF::VectorBuffer.1134" }
%"class.WTF::VectorBuffer.1134" = type { %"class.WTF::VectorBufferBase.1135" }
%"class.WTF::VectorBufferBase.1135" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1138" = type { %"class.WTF::HashMap.1141" }
%"class.WTF::HashMap.1141" = type { %"class.WTF::HashTable.1142" }
%"class.WTF::HashTable.1142" = type <{ %"struct.WTF::KeyValuePair.1144"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1144" = type opaque
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1157" = type { %"class.WTF::HashMap.1160" }
%"class.WTF::HashMap.1160" = type { %"class.WTF::HashTable.1161" }
%"class.WTF::HashTable.1161" = type <{ %"struct.WTF::KeyValuePair.1163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1163" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1164" }
%"class.blink::HeapHashSet.1164" = type { %"class.WTF::HashSet.1167" }
%"class.WTF::HashSet.1167" = type { %"class.WTF::HashTable.1168" }
%"class.WTF::HashTable.1168" = type <{ %"class.blink::WeakMember.1170"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1170" = type opaque
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.404", %"class.blink::HeapHashSet.1180", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1187", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1180" = type { %"class.WTF::HashSet.1183" }
%"class.WTF::HashSet.1183" = type { %"class.WTF::HashTable.1184" }
%"class.WTF::HashTable.1184" = type <{ %"class.blink::Member.1186"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1186" = type opaque
%"class.blink::HeapTaskRunnerTimer.1187" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1188", { i64, i64 } }
%"class.blink::WeakMember.1188" = type { %"class.blink::MemberBase.1174" }
%"class.blink::WeakMember.1175" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::SVGElement::InstanceUpdateBlocker" = type { %"class.blink::SVGElement"* }
%"class.blink::StyleRecalcChange" = type <{ i32, i8, i8, [2 x i8] }>
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.912", %"class.blink::Member.1832", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.1832" = type { %"class.blink::MemberBase.1833" }
%"class.blink::MemberBase.1833" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::SVGParsingError" = type { i32 }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1419", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1431", %"class.WTF::Vector.1433" }
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1422", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1422" = type { %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.WTF::Vector.1433" = type { %"class.WTF::VectorBuffer.1434" }
%"class.WTF::VectorBuffer.1434" = type { %"class.WTF::VectorBufferBase.1435" }
%"class.WTF::VectorBufferBase.1435" = type { i32*, i32, i32 }
%"class.blink::PropertyHandle" = type { i32, %union.anon.1445, %"class.WTF::AtomicString" }
%union.anon.1445 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::HeapHashMap.1438" = type { %"class.WTF::HashMap.1441" }
%"class.WTF::HashMap.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"struct.WTF::KeyValuePair.1444"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1444" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1446" }
%"class.blink::Member.1446" = type { %"class.blink::MemberBase.1447" }
%"class.blink::MemberBase.1447" = type { %"class.blink::HeapVector.1448"* }
%"class.blink::HeapVector.1448" = type { %"class.WTF::Vector.1451" }
%"class.WTF::Vector.1451" = type { %"class.WTF::VectorBuffer.1452" }
%"class.WTF::VectorBuffer.1452" = type { %"class.WTF::VectorBufferBase.1453", [8 x i8] }
%"class.WTF::VectorBufferBase.1453" = type { %"class.blink::Member.1454"*, i32, i32 }
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.1455" }
%"class.blink::MemberBase.1455" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::SVGInterpolationTypesMap" = type { %"class.blink::InterpolationTypesMap" }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.blink::SVGInterpolationEnvironment" = type { %"class.blink::InterpolationEnvironment", %"class.blink::SVGElement"*, %"class.blink::SVGPropertyBase"* }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::ElementAnimations" = type { %"class.blink::EffectStack", %"class.blink::CSSAnimations", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1614", i8, %class.scoped_refptr.74, %"class.std::__1::unique_ptr.1621" }
%"class.blink::EffectStack" = type { %"class.blink::HeapVector.1460" }
%"class.blink::HeapVector.1460" = type { %"class.WTF::Vector.1463" }
%"class.WTF::Vector.1463" = type { %"class.WTF::VectorBuffer.1464" }
%"class.WTF::VectorBuffer.1464" = type { %"class.WTF::VectorBufferBase.1465" }
%"class.WTF::VectorBufferBase.1465" = type { %"class.blink::Member.1466"*, i32, i32 }
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::SampledEffect"* }
%"class.blink::SampledEffect" = type { %"class.blink::WeakMember.1470", %"class.blink::HeapVector.1472", i32, i32 }
%"class.blink::WeakMember.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::KeyframeEffect"* }
%"class.blink::KeyframeEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.421", %"class.blink::Member.421", %"class.WTF::String", %"class.blink::Member.1487", %"class.blink::Member.1466", i32, %"class.WTF::Vector.1433", i8, %"class.absl::optional.1535" }
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.1491", %"class.blink::Member.1499", %"class.blink::Member.1523", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.636, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.1491" = type { %"class.WTF::Vector.1494" }
%"class.WTF::Vector.1494" = type { %"class.WTF::VectorBuffer.1495" }
%"class.WTF::VectorBuffer.1495" = type { %"class.WTF::VectorBufferBase.1496" }
%"class.WTF::VectorBufferBase.1496" = type { %"class.blink::Member.1497"*, i32, i32 }
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1936" }
%"class.blink::MemberBase.1936" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.1236", %"class.absl::optional.1939", %class.scoped_refptr.636 }
%"class.absl::optional.1939" = type { %"class.absl::optional_internal::optional_data.1940" }
%"class.absl::optional_internal::optional_data.1940" = type { %"class.absl::optional_internal::optional_data_base.1941" }
%"class.absl::optional_internal::optional_data_base.1941" = type { %"class.absl::optional_internal::optional_data_dtor_base.1942" }
%"class.absl::optional_internal::optional_data_dtor_base.1942" = type { i8, %union.anon.1943 }
%union.anon.1943 = type { i32 }
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::HeapHashMap.1501"* }
%"class.blink::HeapHashMap.1501" = type { %"class.WTF::HashMap.1504" }
%"class.WTF::HashMap.1504" = type { %"class.WTF::HashTable.1505" }
%"class.WTF::HashTable.1505" = type <{ %"struct.WTF::KeyValuePair.1507"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1507" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1508" }
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.1512" }
%"class.blink::HeapVector.1512" = type { %"class.WTF::Vector.1515" }
%"class.WTF::Vector.1515" = type { %"class.WTF::VectorBuffer.1516" }
%"class.WTF::VectorBuffer.1516" = type { %"class.WTF::VectorBufferBase.1517" }
%"class.WTF::VectorBufferBase.1517" = type { %"class.blink::Member.1518"*, i32, i32 }
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.636, i32, [4 x i8] }>
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.1527" }
%"class.blink::HeapVector.1527" = type { %"class.WTF::Vector.1530" }
%"class.WTF::Vector.1530" = type { %"class.WTF::VectorBuffer.1531" }
%"class.WTF::VectorBuffer.1531" = type { %"class.WTF::VectorBufferBase.1532" }
%"class.WTF::VectorBufferBase.1532" = type { %"class.blink::Member.1533"*, i32, i32 }
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1454", %class.scoped_refptr.636, double, double, double, double }
%"class.absl::optional.1535" = type { %"class.absl::optional_internal::optional_data.1536" }
%"class.absl::optional_internal::optional_data.1536" = type { %"class.absl::optional_internal::optional_data_base.1537" }
%"class.absl::optional_internal::optional_data_base.1537" = type { %"class.absl::optional_internal::optional_data_dtor_base.1538" }
%"class.absl::optional_internal::optional_data_dtor_base.1538" = type { i8, %union.anon.1539 }
%union.anon.1539 = type { %"class.blink::FloatSize" }
%"class.blink::HeapVector.1472" = type { %"class.WTF::Vector.1475" }
%"class.WTF::Vector.1475" = type { %"class.WTF::VectorBuffer.1476" }
%"class.WTF::VectorBuffer.1476" = type { %"class.WTF::VectorBufferBase.1453" }
%"class.blink::CSSAnimations" = type { %"class.blink::HeapVector.1542", %"class.blink::HeapHashMap.1550", %"class.blink::CSSAnimationUpdate", %"class.blink::HeapHashMap.1438", %"class.blink::HeapHashMap.1438" }
%"class.blink::HeapVector.1542" = type { %"class.WTF::Vector.1545" }
%"class.WTF::Vector.1545" = type { %"class.WTF::VectorBuffer.1546" }
%"class.WTF::VectorBuffer.1546" = type { %"class.WTF::VectorBufferBase.1547" }
%"class.WTF::VectorBufferBase.1547" = type { %"class.blink::Member.1548"*, i32, i32 }
%"class.blink::Member.1548" = type opaque
%"class.blink::HeapHashMap.1550" = type { %"class.WTF::HashMap.1553" }
%"class.WTF::HashMap.1553" = type { %"class.WTF::HashTable.1554" }
%"class.WTF::HashTable.1554" = type <{ %"struct.WTF::KeyValuePair.1556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1556" = type opaque
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.1557", %"class.WTF::Vector.1578", %"class.blink::HeapHashSet.1480", %"class.WTF::Vector.1578", %"class.blink::HeapVector.1583", %"class.blink::HeapVector.1590", %"class.blink::HeapHashMap.1597", %"class.WTF::HashSet.1604", %"class.WTF::HashSet.1604", %"class.blink::HeapHashMap.1438", %"class.blink::HeapHashMap.1438", %"class.blink::HeapHashMap.1438", %"class.blink::HeapHashMap.1438" }
%"class.blink::HeapVector.1557" = type { %"class.WTF::Vector.1560" }
%"class.WTF::Vector.1560" = type { %"class.WTF::VectorBuffer.1561" }
%"class.WTF::VectorBuffer.1561" = type { %"class.WTF::VectorBufferBase.1562" }
%"class.WTF::VectorBufferBase.1562" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.1563", %"struct.blink::Timing", %"class.blink::Member.1565", i32, %"class.blink::Member.1266", %"class.WTF::Vector.655" }
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.1487", i8, %"class.absl::optional.1241", %"class.absl::optional.1246" }
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1569", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.1569" = type { %"class.WTF::Vector.1572" }
%"class.WTF::Vector.1572" = type { %"class.WTF::VectorBuffer.1573" }
%"class.WTF::VectorBuffer.1573" = type { %"class.WTF::VectorBufferBase.1574" }
%"class.WTF::VectorBufferBase.1574" = type { %"class.blink::Member.1575"*, i32, i32 }
%"class.blink::Member.1575" = type opaque
%"class.blink::HeapHashSet.1480" = type { %"class.WTF::HashSet.1483" }
%"class.WTF::HashSet.1483" = type { %"class.WTF::HashTable.1484" }
%"class.WTF::HashTable.1484" = type <{ %"class.blink::Member.1486"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1944" }
%"class.blink::MemberBase.1944" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.1578" = type { %"class.WTF::VectorBuffer.1579" }
%"class.WTF::VectorBuffer.1579" = type { %"class.WTF::VectorBufferBase.1580" }
%"class.WTF::VectorBufferBase.1580" = type { i32*, i32, i32 }
%"class.blink::HeapVector.1583" = type { %"class.WTF::Vector.1586" }
%"class.WTF::Vector.1586" = type { %"class.WTF::VectorBuffer.1587" }
%"class.WTF::VectorBuffer.1587" = type { %"class.WTF::VectorBufferBase.1588" }
%"class.WTF::VectorBufferBase.1588" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.1026", %"class.blink::Member.1563", %"struct.blink::Timing", %"class.blink::Member.1565", i32, %"class.blink::Member.1266", %"class.WTF::Vector.655" }
%"class.blink::HeapVector.1590" = type { %"class.WTF::Vector.1593" }
%"class.WTF::Vector.1593" = type { %"class.WTF::VectorBuffer.1594" }
%"class.WTF::VectorBuffer.1594" = type { %"class.WTF::VectorBufferBase.1595" }
%"class.WTF::VectorBufferBase.1595" = type { %"class.blink::Member.1026"*, i32, i32 }
%"class.blink::HeapHashMap.1597" = type { %"class.WTF::HashMap.1600" }
%"class.WTF::HashMap.1600" = type { %"class.WTF::HashTable.1601" }
%"class.WTF::HashTable.1601" = type <{ %"struct.WTF::KeyValuePair.1603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1603" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1945" }
%"class.blink::Member.1945" = type { %"class.blink::MemberBase.1946" }
%"class.blink::MemberBase.1946" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.1635, %class.scoped_refptr.1635, %class.scoped_refptr.1635, double, %"class.blink::Member.1563" }
%"class.WTF::HashSet.1604" = type { %"class.WTF::HashTable.1605" }
%"class.WTF::HashTable.1605" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1610" }
%"class.WTF::HashMap.1610" = type { %"class.WTF::HashTable.1611" }
%"class.WTF::HashTable.1611" = type <{ %"struct.WTF::KeyValuePair.1613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1613" = type opaque
%"class.blink::HeapHashSet.1614" = type { %"class.WTF::HashSet.1617" }
%"class.WTF::HashSet.1617" = type { %"class.WTF::HashTable.1618" }
%"class.WTF::HashTable.1618" = type <{ %"class.blink::WeakMember.1620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1620" = type opaque
%"class.std::__1::unique_ptr.1621" = type { %"class.std::__1::__compressed_pair.1622" }
%"class.std::__1::__compressed_pair.1622" = type { %"struct.std::__1::__compressed_pair_elem.1623" }
%"struct.std::__1::__compressed_pair_elem.1623" = type { %"class.blink::CSSBitsetBase"* }
%"class.blink::CSSBitsetBase" = type opaque
%"class.blink::HeapVector.1479" = type opaque
%"struct.blink::SVGElement::SvgAttributeChangedParams" = type <{ %"class.blink::QualifiedName"*, i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1974", %"class.blink::Member.1976", %"class.blink::Member.1978", %"class.blink::Member.1997", %"class.blink::Member.1999" }
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1635 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1635, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1637" }
%"class.std::__1::unique_ptr.1637" = type { %"class.std::__1::__compressed_pair.1638" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1639" }
%"struct.std::__1::__compressed_pair_elem.1639" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1640", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1646", %"class.std::__1::unique_ptr.1769", i8, %"class.absl::optional.1775", %class.scoped_refptr.1751, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1780" }
%"class.std::__1::unique_ptr.1640" = type { %"class.std::__1::__compressed_pair.1641" }
%"class.std::__1::__compressed_pair.1641" = type { %"struct.std::__1::__compressed_pair_elem.1642" }
%"struct.std::__1::__compressed_pair_elem.1642" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1646" = type { %"class.std::__1::__compressed_pair.1647" }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1649, %class.scoped_refptr.1649, %class.scoped_refptr.1649, %class.scoped_refptr.1649, %class.scoped_refptr.1649, %class.scoped_refptr.1649, %class.scoped_refptr.1684, %class.scoped_refptr.1700, %class.scoped_refptr.1701, %class.scoped_refptr.1701, %class.scoped_refptr.1701, %class.scoped_refptr.1701, %class.scoped_refptr.1701, %class.scoped_refptr.1701, %class.scoped_refptr.1741, %class.scoped_refptr.1742, %class.scoped_refptr.1742, %class.scoped_refptr.1742, %class.scoped_refptr.1742, %class.scoped_refptr.1742, %class.scoped_refptr.1742, %class.scoped_refptr.1742, %class.scoped_refptr.1742, %class.scoped_refptr.1765 }
%class.scoped_refptr.1649 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1666" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1650", i8, i8, %class.scoped_refptr.1652, i32, i32 }
%"class.WTF::RefCounted.1650" = type { %"class.base::RefCounted.1651" }
%"class.base::RefCounted.1651" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1652 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1659, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1660", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1653" }
%"class.std::__1::unique_ptr.1653" = type { %"class.std::__1::__compressed_pair.1654" }
%"class.std::__1::__compressed_pair.1654" = type { %"struct.std::__1::__compressed_pair_elem.1655" }
%"struct.std::__1::__compressed_pair_elem.1655" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1659 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1685", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1685" = type { %"class.WTF::RefCounted.1686", i8, i8, %class.scoped_refptr.1659, i32, i32 }
%"class.WTF::RefCounted.1686" = type { %"class.base::RefCounted.1687" }
%"class.base::RefCounted.1687" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1688" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1688" = type { %"class.absl::optional_internal::optional_data.1689" }
%"class.absl::optional_internal::optional_data.1689" = type { %"class.absl::optional_internal::optional_data_base.1690" }
%"class.absl::optional_internal::optional_data_base.1690" = type { %"class.absl::optional_internal::optional_data_dtor_base.1691" }
%"class.absl::optional_internal::optional_data_dtor_base.1691" = type { i8, %union.anon.1692 }
%union.anon.1692 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1693", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1693" = type { %"class.std::__1::__vector_base.1694" }
%"class.std::__1::__vector_base.1694" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1695" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1660" = type { %"class.std::__1::__compressed_pair.1661" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.1662" }
%"struct.std::__1::__compressed_pair_elem.1662" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1666" = type { %"class.std::__1::__compressed_pair.1667" }
%"class.std::__1::__compressed_pair.1667" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"struct.std::__1::__compressed_pair_elem.1668" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1669", %"class.std::__1::unique_ptr.1675", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1669" = type { %"class.std::__1::__compressed_pair.1670" }
%"class.std::__1::__compressed_pair.1670" = type { %"struct.std::__1::__compressed_pair_elem.1671" }
%"struct.std::__1::__compressed_pair_elem.1671" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1675" = type { %"class.std::__1::__compressed_pair.1676" }
%"class.std::__1::__compressed_pair.1676" = type { %"struct.std::__1::__compressed_pair_elem.1677" }
%"struct.std::__1::__compressed_pair_elem.1677" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1684 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1700 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1701 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1702" }
%"class.blink::PaintPropertyNode.1702" = type { %"class.WTF::RefCounted.1703", i8, i8, %class.scoped_refptr.1705, i32, i32 }
%"class.WTF::RefCounted.1703" = type { %"class.base::RefCounted.1704" }
%"class.base::RefCounted.1704" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1705 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1652, %class.scoped_refptr.1706, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1728", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1706 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1743" }
%"class.blink::PaintPropertyNode.1743" = type { %"class.WTF::RefCounted.1744", i8, i8, %class.scoped_refptr.1706, i32, i32 }
%"class.WTF::RefCounted.1744" = type { %"class.base::RefCounted.1745" }
%"class.base::RefCounted.1745" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1707" }
%"class.std::__1::vector.1707" = type { %"class.std::__1::__vector_base.1708" }
%"class.std::__1::__vector_base.1708" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1723" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1709, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1716", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1709 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1710, i32, %"class.absl::optional.1711", i8, i32 }
%class.sk_sp.1710 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1711" = type { %"class.absl::optional_internal::optional_data.1712" }
%"class.absl::optional_internal::optional_data.1712" = type { %"class.absl::optional_internal::optional_data_base.1713" }
%"class.absl::optional_internal::optional_data_base.1713" = type { %"class.absl::optional_internal::optional_data_dtor_base.1714" }
%"class.absl::optional_internal::optional_data_dtor_base.1714" = type { i8, %union.anon.1715 }
%union.anon.1715 = type { %struct.SkRect }
%"class.std::__1::vector.1716" = type { %"class.std::__1::__vector_base.1717" }
%"class.std::__1::__vector_base.1717" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1718" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1718" = type { %"struct.std::__1::__compressed_pair_elem.1719" }
%"struct.std::__1::__compressed_pair_elem.1719" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1723" = type { %"struct.std::__1::__compressed_pair_elem.1724" }
%"struct.std::__1::__compressed_pair_elem.1724" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1728" = type { %"class.std::__1::__compressed_pair.1729" }
%"class.std::__1::__compressed_pair.1729" = type { %"struct.std::__1::__compressed_pair_elem.1730" }
%"struct.std::__1::__compressed_pair_elem.1730" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1734" }
%"class.std::__1::vector.1734" = type { %"class.std::__1::__vector_base.1735" }
%"class.std::__1::__vector_base.1735" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1736" }
%"class.std::__1::__compressed_pair.1736" = type { %"struct.std::__1::__compressed_pair_elem.1737" }
%"struct.std::__1::__compressed_pair_elem.1737" = type { i32* }
%class.scoped_refptr.1741 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1742 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1754" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1652, %"class.absl::optional.1746", %class.scoped_refptr.1751, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1746" = type { %"class.absl::optional_internal::optional_data.1747" }
%"class.absl::optional_internal::optional_data.1747" = type { %"class.absl::optional_internal::optional_data_base.1748" }
%"class.absl::optional_internal::optional_data_base.1748" = type { %"class.absl::optional_internal::optional_data_dtor_base.1749" }
%"class.absl::optional_internal::optional_data_dtor_base.1749" = type { i8, [3 x i8], %union.anon.1750 }
%union.anon.1750 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1754" = type { %"class.std::__1::__compressed_pair.1755" }
%"class.std::__1::__compressed_pair.1755" = type { %"struct.std::__1::__compressed_pair_elem.1756" }
%"struct.std::__1::__compressed_pair_elem.1756" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1757", i32, [4 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759" }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1765 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1652, %class.scoped_refptr.1706, %class.scoped_refptr.1705 }
%"class.absl::optional.1775" = type { %"class.absl::optional_internal::optional_data.1776" }
%"class.absl::optional_internal::optional_data.1776" = type { %"class.absl::optional_internal::optional_data_base.1777" }
%"class.absl::optional_internal::optional_data_base.1777" = type { %"class.absl::optional_internal::optional_data_dtor_base.1778" }
%"class.absl::optional_internal::optional_data_dtor_base.1778" = type { i8, %union.anon.1779 }
%union.anon.1779 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1751 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1752", [4 x i8] }
%"class.WTF::RefCounted.1752" = type { %"class.base::RefCounted.1753" }
%"class.base::RefCounted.1753" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1780" = type { %"class.std::__1::__compressed_pair.1781" }
%"class.std::__1::__compressed_pair.1781" = type { %"struct.std::__1::__compressed_pair_elem.1782" }
%"struct.std::__1::__compressed_pair_elem.1782" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1982", %"class.blink::HeapHashSet.1991" }
%"class.blink::HeapVector.1982" = type { %"class.WTF::Vector.1985" }
%"class.WTF::Vector.1985" = type { %"class.WTF::VectorBuffer.1986" }
%"class.WTF::VectorBuffer.1986" = type { %"class.WTF::VectorBufferBase.1987" }
%"class.WTF::VectorBufferBase.1987" = type { %"class.blink::Member.1988"*, i32, i32 }
%"class.blink::Member.1988" = type { %"class.blink::MemberBase.1989" }
%"class.blink::MemberBase.1989" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1991" = type { %"class.WTF::HashSet.1994" }
%"class.WTF::HashSet.1994" = type { %"class.WTF::HashTable.1995" }
%"class.WTF::HashTable.1995" = type <{ %"class.blink::Member.1988"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::HeapHashSet.2001"* }
%"class.blink::HeapHashSet.2001" = type opaque
%"class.blink::SVGSVGElement" = type <{ %"class.blink::SVGGraphicsElement", %"class.blink::SVGFitToViewBox", %"class.blink::SVGZoomAndPan.base", [4 x i8], %"class.blink::Member.1811", %"class.blink::Member.1811", %"class.blink::Member.1811", %"class.blink::Member.1811", %"class.blink::Member.1813", %"class.blink::Member.1815", %"class.blink::Member.1819", float, [4 x i8] }>
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.1805" }
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1803", %"class.blink::Member.1803" }
%"class.blink::Member.1803" = type { %"class.blink::MemberBase.1804" }
%"class.blink::MemberBase.1804" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::SVGFitToViewBox" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1807", %"class.blink::Member.1809" }
%"class.blink::Member.1807" = type { %"class.blink::MemberBase.1808" }
%"class.blink::MemberBase.1808" = type { %"class.blink::SVGAnimatedRect"* }
%"class.blink::SVGAnimatedRect" = type opaque
%"class.blink::Member.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::SVGAnimatedPreserveAspectRatio"* }
%"class.blink::SVGAnimatedPreserveAspectRatio" = type opaque
%"class.blink::SVGZoomAndPan.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1811" = type { %"class.blink::MemberBase.1812" }
%"class.blink::MemberBase.1812" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type opaque
%"class.blink::Member.1813" = type { %"class.blink::MemberBase.1814" }
%"class.blink::MemberBase.1814" = type { %"class.blink::SMILTimeContainer"* }
%"class.blink::SMILTimeContainer" = type opaque
%"class.blink::Member.1815" = type { %"class.blink::MemberBase.1816" }
%"class.blink::MemberBase.1816" = type { %"class.blink::SVGPoint"* }
%"class.blink::SVGPoint" = type { %"class.blink::SVGListablePropertyBase", %"class.blink::FloatPoint" }
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember.1817" }
%"class.blink::UntracedMember.1817" = type { %"class.blink::MemberBase.1818" }
%"class.blink::MemberBase.1818" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type opaque
%"class.blink::Member.1819" = type { %"class.blink::MemberBase.1820" }
%"class.blink::MemberBase.1820" = type { %"class.blink::SVGViewSpec"* }
%"class.blink::SVGViewSpec" = type opaque
%"class.blink::HeapVector.1914" = type { %"class.WTF::Vector.1917" }
%"class.WTF::Vector.1917" = type { %"class.WTF::VectorBuffer.1918" }
%"class.WTF::VectorBuffer.1918" = type { %"class.WTF::VectorBufferBase.1919" }
%"class.WTF::VectorBufferBase.1919" = type { %"class.blink::Member.31"*, i32, i32 }
%"class.blink::SVGUseElement" = type { %"class.blink::SVGGraphicsElement", %"class.blink::SVGURIReference", %"class.blink::ResourceClient.base", %"class.blink::Member.1828", %"class.blink::Member.1811", %"class.blink::Member.1811", %"class.blink::Member.1811", %"class.blink::Member.1811", %"class.blink::KURL", i8, i8, i8, %"class.blink::Member.1830" }
%"class.blink::SVGURIReference" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1823" }
%"class.blink::Member.1823" = type { %"class.blink::MemberBase.1824" }
%"class.blink::MemberBase.1824" = type { %"class.blink::SVGAnimatedHref"* }
%"class.blink::SVGAnimatedHref" = type opaque
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1825", [7 x i8], %"class.blink::Member.1826", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.1825" = type { i8 }
%"class.blink::Member.1826" = type { %"class.blink::MemberBase.1827" }
%"class.blink::MemberBase.1827" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type opaque
%"class.blink::Member.1828" = type { %"class.blink::MemberBase.1829" }
%"class.blink::MemberBase.1829" = type { %"class.blink::SVGResourceDocumentContent"* }
%"class.blink::SVGResourceDocumentContent" = type opaque
%"class.blink::Member.1830" = type { %"class.blink::MemberBase.1831" }
%"class.blink::MemberBase.1831" = type { %"class.blink::IdTargetObserver"* }
%"class.blink::IdTargetObserver" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.1789", %"class.WTF::String"* }
%"class.blink::HeapVector.1789" = type { %"class.WTF::Vector.1792" }
%"class.WTF::Vector.1792" = type { %"class.WTF::VectorBuffer.1793" }
%"class.WTF::VectorBuffer.1793" = type { %"class.WTF::VectorBufferBase.1794" }
%"class.WTF::VectorBufferBase.1794" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutSVGResourceContainer" = type { %"class.blink::LayoutSVGHiddenContainer.base", i16, [4 x i8] }
%"class.blink::LayoutSVGHiddenContainer.base" = type { %"class.blink::LayoutSVGContainer.base" }
%"class.blink::LayoutSVGContainer.base" = type <{ %"class.blink::LayoutSVGModelObject", %"class.blink::SVGContentContainer", i8, i8 }>
%"class.blink::LayoutSVGModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::SVGContentContainer" = type { %"class.blink::LayoutObjectChildList", %"class.blink::FloatRect", %"class.blink::FloatRect" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::PersistentBase.2034" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr.1913" }
%"class.blink::PersistentNodePtr.1913" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::JSEventHandlerForContentAttribute" = type { %"class.blink::JSEventHandler.base", i8, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition", %"class.v8::Isolate"* }
%"class.blink::JSEventHandler.base" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.1834", i32 }>
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::Member.1834" = type { %"class.blink::MemberBase.1835" }
%"class.blink::MemberBase.1835" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.1838", %"class.blink::Member.1838" }
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1842, %"class.blink::Member.1843", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1842 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1843" = type { %"class.blink::MemberBase.1844" }
%"class.blink::MemberBase.1844" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1845" }
%"class.blink::Persistent.1845" = type { %"class.blink::PersistentBase.1846" }
%"class.blink::PersistentBase.1846" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.355" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%struct.AttrToTypeEntry = type <{ %"class.blink::QualifiedName"*, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1854" = type <{ %"class.blink::QualifiedName", i32, [4 x i8] }>
%"class.WTF::HashTable.1851" = type <{ %"struct.WTF::KeyValuePair.1854"*, i32, i32, i32, [4 x i8] }>
%"class.blink::AddEventListenerOptionsResolved" = type <{ %"class.blink::AddEventListenerOptions", i8, i8, [6 x i8] }>
%"class.blink::AddEventListenerOptions" = type { %"class.blink::EventListenerOptions.base", i8, i8, i8, i8, %"class.blink::Member.1861" }
%"class.blink::EventListenerOptions.base" = type <{ %"class.blink::IDLDictionaryBase", i8, i8 }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member.1861" = type { %"class.blink::MemberBase.1862" }
%"class.blink::MemberBase.1862" = type { %"class.blink::AbortSignal"* }
%"class.blink::AbortSignal" = type opaque
%"class.blink::EventListenerOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.1628" }
%"class.WTF::Vector.1628" = type { %"class.WTF::VectorBuffer.1629" }
%"class.WTF::VectorBuffer.1629" = type { %"class.WTF::VectorBufferBase.1630", [64 x i8] }
%"class.WTF::VectorBufferBase.1630" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%"class.blink::StyleRequest" = type { %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*, i32, i8, i32, i32, %"class.blink::CustomScrollbar"*, %"class.WTF::AtomicString" }
%"class.blink::CustomScrollbar" = type <{ %"class.blink::Scrollbar", %"class.WTF::HashMap.1900", i8, [7 x i8] }>
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1895", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1897", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.421" }
%"class.blink::Member.1895" = type { %"class.blink::MemberBase.1896" }
%"class.blink::MemberBase.1896" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1897" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1898", { i64, i64 } }
%"class.blink::WeakMember.1898" = type { %"class.blink::MemberBase.1899" }
%"class.blink::MemberBase.1899" = type { %"class.blink::Scrollbar"* }
%"class.WTF::HashMap.1900" = type { %"class.WTF::HashTable.1901" }
%"class.WTF::HashTable.1901" = type <{ %"struct.WTF::KeyValuePair.1904"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1904" = type { i32, %"class.blink::LayoutCustomScrollbarPart"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.404", %class.scoped_refptr.1635, %"class.blink::SelectorFilter", %"class.blink::Member.1891", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1867" }
%"class.blink::HeapHashMap.1867" = type { %"class.WTF::HashMap.1870" }
%"class.WTF::HashMap.1870" = type { %"class.WTF::HashTable.1871" }
%"class.WTF::HashTable.1871" = type <{ %"struct.WTF::KeyValuePair.1873"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1873" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1874", %"class.std::__1::unique_ptr.1885" }
%"class.blink::HeapVector.1874" = type { %"class.WTF::Vector.1877" }
%"class.WTF::Vector.1877" = type { %"class.WTF::VectorBuffer.1878" }
%"class.WTF::VectorBuffer.1878" = type { %"class.WTF::VectorBufferBase.1879" }
%"class.WTF::VectorBufferBase.1879" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.421", %"class.WTF::Vector.1880" }
%"class.WTF::Vector.1880" = type { %"class.WTF::VectorBuffer.1881" }
%"class.WTF::VectorBuffer.1881" = type { %"class.WTF::VectorBufferBase.1580", [16 x i8] }
%"class.std::__1::unique_ptr.1885" = type { %"class.std::__1::__compressed_pair.1886" }
%"class.std::__1::__compressed_pair.1886" = type { %"struct.std::__1::__compressed_pair_elem.1887" }
%"struct.std::__1::__compressed_pair_elem.1887" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1891" = type { %"class.blink::MemberBase.1892" }
%"class.blink::MemberBase.1892" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::StyleChangeReasonForTracing" = type opaque
%"class.blink::PersistentBase.1912" = type { %"class.blink::HeapHashSet.36"*, %"class.blink::PersistentNodePtr.1913" }
%"class.v8::Value" = type { i8 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1925" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1925" = type { %"class.v8::TracedReference.1926" }
%"class.v8::TracedReference.1926" = type { %"class.v8::BasicTracedReference.1927" }
%"class.v8::BasicTracedReference.1927" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.WTF::HashMap.1928" = type opaque
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%class.anon.2002 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2016" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2016" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2003", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2003" = type { %"class.std::__1::__vector_base.2004" }
%"class.std::__1::__vector_base.2004" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2011" }
%"class.std::__1::__compressed_pair.2011" = type { %"struct.std::__1::__compressed_pair_elem.2012" }
%"struct.std::__1::__compressed_pair_elem.2012" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2005", i64, i64 }
%"class.std::__1::unique_ptr.2005" = type { %"class.std::__1::__compressed_pair.2006" }
%"class.std::__1::__compressed_pair.2006" = type { %"struct.std::__1::__compressed_pair_elem.2007" }
%"struct.std::__1::__compressed_pair_elem.2007" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.324", %"class.blink::DataRef.504", %"class.blink::DataRef.508", %"class.blink::DataRef.708", %"class.blink::DataRef.775", %"class.blink::DataRef.779", %"class.blink::DataRef.783", %"class.blink::DataRef.787", [20 x i8], [4 x i8] }>
%"class.WTF::VectorBuffer.390" = type <{ %"class.WTF::VectorBufferBase.391", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.534" = type { i8 }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2074" = type { %"class.WTF::StringTypeAdapter.2075" }
%"class.WTF::StringTypeAdapter.2075" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapHashTableBacking.2095" = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2035", %"class.blink::FreeList", %"class.WTF::Vector.2040" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.2035" = type { %"class.WTF::VectorBuffer.2036" }
%"class.WTF::VectorBuffer.2036" = type { %"class.WTF::VectorBufferBase.2037" }
%"class.WTF::VectorBufferBase.2037" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.2040" = type { %"class.WTF::VectorBuffer.2041" }
%"class.WTF::VectorBuffer.2041" = type { %"class.WTF::VectorBufferBase.2042" }
%"class.WTF::VectorBufferBase.2042" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapHashTableBacking.2113" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN3WTF12CopyToVectorIN5blink11HeapHashSetINS1_6MemberINS1_10SVGElementEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEENS1_10HeapVectorIS5_Lj0EEEEEvRKT_RT0_ = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink10SVGElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink10SVGElement13SupportsFocusEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZN5blink7Element20BeginParsingChildrenEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25MatchesEnabledPseudoClassEv = comdat any

$_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv = comdat any

$_ZNK5blink7Element27MatchesReadWritePseudoClassEv = comdat any

$_ZNK5blink7Element28MatchesValidityPseudoClassesEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element12willValidateEv = comdat any

$_ZN5blink7Element14IsValidElementEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZNK5blink7Element21IsDisabledFormControlEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGeometryElementEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGraphicsElementEv = comdat any

$_ZNK5blink10SVGElement14IsFilterEffectEv = comdat any

$_ZNK5blink10SVGElement13IsTextContentEv = comdat any

$_ZNK5blink10SVGElement17IsTextPositioningEv = comdat any

$_ZNK5blink10SVGElement22IsStructurallyExternalEv = comdat any

$_ZNK5blink10SVGElement7IsValidEv = comdat any

$_ZN5blink10SVGElement22AnimateMotionTransformEv = comdat any

$_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv = comdat any

$_ZNK5blink24InterpolationEnvironment5IsCSSEv = comdat any

$_ZNK5blink27SVGInterpolationEnvironment5IsSVGEv = comdat any

$_ZN5blink27SVGInterpolationEnvironmentD0Ev = comdat any

$_ZN5blink24InterpolationEnvironmentD2Ev = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10SVGElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEEaSERKSB_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE4swapERSB_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF6VectorIN5blink23RegisteredEventListenerELj1ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_18SVGElementRareDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18SVGElementRareDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18SVGElementRareDataEE7GetNameEPKv = comdat any

$_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_ = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EES2_RS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE13AllocateTableEj = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6LookupERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE13AllocateTableEj = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_13QualifiedNameENS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSA_IS7_EEEEEEvPT_ = comdat any

$_ZN5blink26SVGAttributeHashTranslator7GetHashERKNS_13QualifiedNameE = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10SVGElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10SVGElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10SVGElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10SVGElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN5blink10TraceTraitINS_17SVGAnimatedStringEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink27SVGInterpolationEnvironmentE = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_18SVGElementRareDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18SVGElementRareDataEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink10SVGElementE = hidden unnamed_addr constant { [169 x i8*], [3 x i8*] } { [169 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElementD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)* @_ZNK5blink10SVGElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i1)* @_ZN5blink10SVGElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::SVGElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.1928"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink10SVGElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i32)* @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZN5blink7Element14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i64)* @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::SVGElement"*, %"class.blink::StyleRecalcContext"*)* @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::SVGElement"*, i32)* @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGeometryElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement14IsFilterEffectEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13IsTextContentEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement17IsTextPositioningEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22IsStructurallyExternalEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement7IsValidEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)* @_ZN5blink10SVGElement19SvgAttributeChangedERKNS0_25SvgAttributeChangedParamsE to i8*), i8* bitcast (%"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement22AnimateMotionTransformEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)] }, align 8
@_ZN5blink10html_names10kClassAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [8 x i8] c"Error: \00", align 1
@_ZZN5blink10SVGElement32CssPropertyIdForSVGAttributeNameEPKNS_16ExecutionContextERKNS_13QualifiedNameEE23property_name_to_id_map = internal unnamed_addr global %"class.WTF::HashMap.1796"* null, align 8
@_ZN5blink9svg_names22kAlignmentBaselineAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kBaselineShiftAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names22kBufferedRenderingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kClipAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kClipPathAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kClipRuleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kColorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names23kColorInterpolationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names30kColorInterpolationFiltersAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names19kColorRenderingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kCursorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kDirectionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kDisplayAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kDominantBaselineAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kFillAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kFillOpacityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kFillRuleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kFilterAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kFloodColorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kFloodOpacityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kFontFamilyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kFontSizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kFontStretchAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kFontStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kFontVariantAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kFontWeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names19kImageRenderingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kLetterSpacingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kLightingColorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kMarkerEndAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kMarkerMidAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kMarkerStartAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kMaskAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kMaskTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kOpacityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kOverflowAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kPaintOrderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kPointerEventsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names19kShapeRenderingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kStopColorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kStopOpacityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kStrokeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names20kStrokeDasharrayAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kStrokeDashoffsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kStrokeLinecapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names19kStrokeLinejoinAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kStrokeMiterlimitAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kStrokeOpacityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kStrokeWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kTextAnchorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names19kTextDecorationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kTextRenderingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names20kTransformOriginAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kUnicodeBidiAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kVectorEffectAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kVisibilityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kWordSpacingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kWritingModeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26layout_invalidation_reason12kSizeChangedE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason8kUnknownE = external constant [0 x i8], align 1
@_ZN5blink10html_names10kNonceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameEE18s_css_property_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameEE18s_css_property_map = internal global i64 0, align 8
@_ZN5blink16event_type_names5kLoadE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names8kFocusinE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names9kFocusoutE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names6kFocusE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names5kBlurE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies = internal global %"class.WTF::StaticSingleton.1906" zeroinitializer, align 8
@_ZGVZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies = internal global i64 0, align 8
@_ZN5blink9svg_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink7ElementE = external unnamed_addr constant { [157 x i8*], [3 x i8*] }, align 8
@_ZTVN5blink24SVGInterpolationTypesMapE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN5blink27SVGInterpolationEnvironmentE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::InterpolationEnvironment"*)* @_ZNK5blink24InterpolationEnvironment5IsCSSEv to i8*), i8* bitcast (i1 (%"class.blink::SVGInterpolationEnvironment"*)* @_ZNK5blink27SVGInterpolationEnvironment5IsSVGEv to i8*), i8* bitcast (void (%"class.blink::InterpolationEnvironment"*)* @_ZN5blink24InterpolationEnvironmentD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGInterpolationEnvironment"*)* @_ZN5blink27SVGInterpolationEnvironmentD0Ev to i8*)] }, comdat, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.1 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZZN5blinkL14EmptyInstancesEvE17s_empty_instances = internal global %"class.WTF::StaticSingleton.2028" zeroinitializer, align 8
@_ZGVZN5blinkL14EmptyInstancesEvE17s_empty_instances = internal global i64 0, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.11 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_10SVGElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [362 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::SVGElement>, blink::WeakMember<blink::SVGElement>, WTF::IdentityExtractor, WTF::MemberHash<blink::SVGElement>, WTF::HashTraits<blink::WeakMember<blink::SVGElement> >, WTF::HashTraits<blink::WeakMember<blink::SVGElement> >, blink::HeapAllocator> >]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_svg_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10g_any_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10SVGElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink9svg_names7kSVGTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZTVN5blink17SVGAnimatedStringE = external unnamed_addr constant { [14 x i8*], [13 x i8*] }, align 8
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGPropertyBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink9SVGStringE = external unnamed_addr constant { [11 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SVGElementRareDataEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGElementRareData]\00", align 1
@_ZZN5blink11GCInfoTraitINS_18SVGElementRareDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18SVGElementRareDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18SVGElementRareDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18SVGElementRareDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18SVGElementRareDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink9svg_names17kForeignObjectTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.15 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.16 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink9svg_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::QualifiedName]\00", align 1
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIPNS_10StringImplEN5blink13CSSPropertyIDENS_10StringHashENS_10HashTraitsIS3_EENS7_IS5_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [218 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<WTF::StringImpl *, blink::CSSPropertyID, WTF::StringHash, WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<blink::CSSPropertyID>, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPNS_10StringImplEN5blink13CSSPropertyIDEEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::StringImpl *, blink::CSSPropertyID>]\00", align 1
@_ZN5blink9svg_names9kImageTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names10kSymbolTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names7kUseTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameENS2_20AnimatedPropertyTypeEEEEEPKcv = private unnamed_addr constant [116 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::QualifiedName, blink::AnimatedPropertyType>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13QualifiedNameENS_12KeyValuePairIS4_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [451 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::QualifiedName, WTF::KeyValuePair<blink::QualifiedName, blink::Member<blink::SVGAnimatedPropertyBase> >, WTF::KeyValuePairKeyExtractor, blink::QualifiedNameHash, WTF::HashMapValueTraits<WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<blink::Member<blink::SVGAnimatedPropertyBase> > >, WTF::HashTraits<blink::QualifiedName>, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_10SVGElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [346 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::SVGElement>, blink::Member<blink::SVGElement>, WTF::IdentityExtractor, WTF::MemberHash<blink::SVGElement>, WTF::HashTraits<blink::Member<blink::SVGElement> >, WTF::HashTraits<blink::Member<blink::SVGElement> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.20 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10SVGElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [161 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::SVGElement>, WTF::VectorTraits<blink::Member<blink::SVGElement> > >]\00", align 1

@_ZN5blink10SVGElementC1ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE = hidden unnamed_addr alias void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.blink::Document"*, i32), void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.blink::Document"*, i32)* @_ZN5blink10SVGElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE
@_ZN5blink10SVGElementD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGElement"*), void (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElementD2Ev
@_ZN5blink10SVGElement21InstanceUpdateBlockerC1EPS0_ = hidden unnamed_addr alias void (%"class.blink::SVGElement::InstanceUpdateBlocker"*, %"class.blink::SVGElement"*), void (%"class.blink::SVGElement::InstanceUpdateBlocker"*, %"class.blink::SVGElement"*)* @_ZN5blink10SVGElement21InstanceUpdateBlockerC2EPS0_
@_ZN5blink10SVGElement21InstanceUpdateBlockerD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGElement::InstanceUpdateBlocker"*), void (%"class.blink::SVGElement::InstanceUpdateBlocker"*)* @_ZN5blink10SVGElement21InstanceUpdateBlockerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::SVGAnimatedPropertyBase"*, align 8
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Document"* %2, i32 %3) #13
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [169 x i8*], [3 x i8*] }, { [169 x i8*], [3 x i8*] }* @_ZTVN5blink10SVGElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [169 x i8*], [3 x i8*] }, { [169 x i8*], [3 x i8*] }* @_ZTVN5blink10SVGElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 1
  %10 = bitcast %"class.blink::HeapHashSet"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #13
  %11 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::HeapHashMap"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #13
  %13 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::SVGElementRareData"* null, %"class.blink::SVGElementRareData"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 4
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #13
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i64**
  store i64* null, i64** %19, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 16
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #13
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9SVGStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = bitcast i8* %20 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %29, i32 17, %"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %15, i32 0, i32 0) #13
  %30 = bitcast i8* %20 to i32 (...)***
  %31 = getelementptr inbounds i8, i8* %16, i64 48
  %32 = bitcast i8* %31 to i8**
  store i8* %21, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %16, i64 56
  %34 = bitcast i8* %33 to i8**
  store i8* %21, i8** %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [13 x i8*] }, { [14 x i8*], [13 x i8*] }* @_ZTVN5blink17SVGAnimatedStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [13 x i8*] }, { [14 x i8*], [13 x i8*] }* @_ZTVN5blink17SVGAnimatedStringE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %35 = getelementptr inbounds i8, i8* %16, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = bitcast %"class.blink::Member.807"* %14 to i8**
  store i8* %16, i8** %39, align 8
  %40 = icmp eq i8* %16, null
  %41 = select i1 %40, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %29
  %42 = bitcast %"class.blink::SVGAnimatedPropertyBase"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  store %"class.blink::SVGAnimatedPropertyBase"* %41, %"class.blink::SVGAnimatedPropertyBase"** %5, align 8
  %43 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %41, i64 0, i32 3
  %44 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0
  %46 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.27"* %45, %"class.blink::QualifiedName"* dereferenceable(8) %44, %"class.blink::SVGAnimatedPropertyBase"** nonnull dereferenceable(8) %5) #13
  %47 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %46, 1
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %61

50:                                               ; preds = %4
  %51 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %46, 0
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 0, i32 1
  %53 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %5, align 8
  %54 = ptrtoint %"class.blink::SVGAnimatedPropertyBase"* %53 to i64
  %55 = bitcast %"class.blink::Member.29"* %52 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %53 to i8*
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #13
  br label %61

61:                                               ; preds = %4, %50, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %62 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, 2048
  store i32 %64, i32* %62, align 8
  ret void
}

declare void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"*, %"class.blink::SVGAnimatedPropertyBase"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGAnimatedPropertyBase"*, align 8
  store %"class.blink::SVGAnimatedPropertyBase"* %1, %"class.blink::SVGAnimatedPropertyBase"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %1, i64 0, i32 3
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.27"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.blink::SVGAnimatedPropertyBase"** nonnull dereferenceable(8) %3) #13
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %7, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %7, 0
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 0, i32 1
  %14 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %3, align 8
  %15 = ptrtoint %"class.blink::SVGAnimatedPropertyBase"* %14 to i64
  %16 = bitcast %"class.blink::Member.29"* %13 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %14 to i8*
  %21 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #13
  br label %22

22:                                               ; preds = %2, %11, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElementD2Ev(%"class.blink::SVGElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #13
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElementD0Ev(%"class.blink::SVGElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #13
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement16DetachLayoutTreeEb(%"class.blink::SVGElement"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"* %3, i1 zeroext %1) #13
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %4, align 8
  %6 = icmp eq %"class.blink::SVGElementRareData"* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZN5blink18SVGElementRareData28ClearOverriddenComputedStyleEv(%"class.blink::SVGElementRareData"* nonnull %5) #13
  br label %8

8:                                                ; preds = %2, %7
  ret void
}

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink18SVGElementRareData28ClearOverriddenComputedStyleEv(%"class.blink::SVGElementRareData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::SVGElement"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %4, align 8
  %6 = icmp eq %"class.blink::SVGElementRareData"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = bitcast i64* %3 to %"class.blink::StyleRecalcChange"*
  %9 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = call zeroext i1 @_ZNK5blink17StyleRecalcChange20ShouldRecalcStyleForERKNS_4NodeE(%"class.blink::StyleRecalcChange"* nonnull %8, %"class.blink::Node"* dereferenceable(64) %9) #13
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %4, align 8
  %13 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %12, i64 0, i32 6
  %14 = load i8, i8* %13, align 8
  %15 = or i8 %14, 2
  store i8 %15, i8* %13, align 8
  br label %16

16:                                               ; preds = %2, %11, %7
  ret void
}

declare zeroext i1 @_ZNK5blink17StyleRecalcChange20ShouldRecalcStyleForERKNS_4NodeE(%"class.blink::StyleRecalcChange"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGElementRareData"* @_ZN5blink10SVGElement17EnsureSVGRareDataEv(%"class.blink::SVGElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  %5 = icmp eq %"class.blink::SVGElementRareData"* %4, null
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #13
  %9 = getelementptr inbounds i8, i8* %7, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #13
  %10 = getelementptr inbounds i8, i8* %7, i64 72
  %11 = getelementptr inbounds i8, i8* %7, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #13
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, -8
  store i8 %13, i8* %11, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #13
  %15 = getelementptr inbounds i8, i8* %7, i64 128
  %16 = getelementptr inbounds i8, i8* %7, i64 144
  %17 = bitcast i8* %16 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %17) #13
  %18 = getelementptr inbounds i8, i8* %7, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = ptrtoint i8* %7 to i64
  %23 = bitcast %"class.blink::Member.32"* %2 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %7 to %"class.blink::SVGElementRareData"*
  br i1 %25, label %30, label %27

27:                                               ; preds = %6
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #13
  %29 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  br label %30

30:                                               ; preds = %1, %27, %6
  %31 = phi %"class.blink::SVGElementRareData"* [ %4, %1 ], [ %29, %27 ], [ %26, %6 ]
  ret %"class.blink::SVGElementRareData"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE, align 8
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = icmp eq %"class.blink::SVGElement"* %0, null
  br i1 %4, label %86, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp eq i32 %8, 32
  br i1 %9, label %10, label %86

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %14 = bitcast %"class.blink::Member"* %13 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %86

21:                                               ; preds = %10
  %22 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %3) #13
  %23 = icmp eq %"class.blink::ContainerNode"* %22, null
  br i1 %23, label %86, label %24

24:                                               ; preds = %21
  %25 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %3) #13
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 48
  %29 = icmp ne i32 %28, 32
  %30 = icmp eq %"class.blink::ContainerNode"* %25, null
  %31 = or i1 %30, %29
  br i1 %31, label %45, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0
  %34 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kForeignObjectTagE, align 8
  %35 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 1, i32 2
  %38 = bitcast %"class.blink::Member"* %37 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  br i1 %44, label %86, label %45

45:                                               ; preds = %24, %32
  %46 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %3) #13
  %47 = icmp eq %"class.blink::ShadowRoot"* %46, null
  br i1 %47, label %80, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %46, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.blink::Node"** %49 to %"class.blink::Element"**
  %51 = load %"class.blink::Element"*, %"class.blink::Element"** %50, align 8
  %52 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE, align 8
  %53 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %51, i64 0, i32 0, i32 0
  %54 = icmp eq %"class.blink::Element"* %51, null
  br i1 %54, label %80, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %51, i64 0, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 48
  %59 = icmp eq i32 %58, 32
  br i1 %59, label %60, label %80

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %52, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 1, i32 2
  %64 = bitcast %"class.blink::Member"* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %67, %69
  br i1 %70, label %71, label %80

71:                                               ; preds = %60
  %72 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %3) #13
  %73 = icmp eq %"class.blink::Element"* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %71
  %75 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %3) #13
  %76 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %75, i64 0, i32 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 48
  %79 = icmp eq i32 %78, 32
  br i1 %79, label %86, label %80

80:                                               ; preds = %55, %48, %45, %71, %74, %60
  %81 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %3) #13
  %82 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %81, i64 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 48
  %85 = icmp ne i32 %84, 32
  br label %86

86:                                               ; preds = %1, %5, %74, %32, %21, %10, %80
  %87 = phi i1 [ %85, %80 ], [ false, %10 ], [ true, %21 ], [ true, %32 ], [ false, %74 ], [ false, %5 ], [ false, %1 ]
  ret i1 %87
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10SVGElement15InUseShadowTreeEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #13
  %4 = icmp eq %"class.blink::ShadowRoot"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.blink::Node"** %6 to %"class.blink::Element"**
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE, align 8
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0
  %11 = icmp eq %"class.blink::Element"* %8, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 32
  br i1 %16, label %17, label %28

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %21 = bitcast %"class.blink::Member"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br label %28

28:                                               ; preds = %1, %5, %12, %17
  %29 = phi i1 [ false, %1 ], [ false, %5 ], [ false, %12 ], [ %27, %17 ]
  ret i1 %29
}

declare %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement27ReportAttributeParsingErrorENS_15SVGParsingErrorERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::SVGElement"*, i32, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::SVGParsingError", align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::SVGParsingError", %"class.blink::SVGParsingError"* %5, i64 0, i32 0
  store i32 %1, i32* %10, align 4
  %11 = and i32 %1, 255
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %128, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %128, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #13
  store i32 6, i32* %6, align 4
  %23 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #13
  store i32 3, i32* %7, align 4
  %24 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %27 = bitcast %"class.blink::SVGElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %28 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %28, i64 27
  %30 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %29, align 8
  %31 = tail call %"class.WTF::StringImpl"* %30(%"class.blink::Element"* %26) #13
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = call %"class.WTF::StringImpl"* @_ZNK5blink15SVGParsingError6FormatERKN3WTF6StringERKNS_13QualifiedNameERKNS1_12AtomicStringE(%"class.blink::SVGParsingError"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::QualifiedName"* dereferenceable(8) %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #13
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %78, label %35

35:                                               ; preds = %17
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %52

42:                                               ; preds = %35
  %43 = zext i32 %41 to i33
  %44 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #13
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %42
  call void @llvm.trap() #13
  unreachable

50:                                               ; preds = %42
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %40, align 4
  br label %52

52:                                               ; preds = %50, %35
  %53 = phi i32 [ %51, %50 ], [ %41, %35 ]
  %54 = load atomic i32, i32* %36 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %67

57:                                               ; preds = %52
  %58 = zext i32 %53 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #13
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %57
  call void @llvm.trap() #13
  unreachable

65:                                               ; preds = %57
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %40, align 4
  br label %67

67:                                               ; preds = %65, %52
  %68 = phi i32 [ %66, %65 ], [ %53, %52 ]
  %69 = load atomic i32, i32* %36 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  %73 = add i32 %68, -1
  store i32 %73, i32* %40, align 4
  br label %74

74:                                               ; preds = %72, %67
  %75 = phi i32 [ %73, %72 ], [ %68, %67 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %78

78:                                               ; preds = %17, %74, %77
  %79 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %80, align 8
  %81 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %8) #13
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %21, %"class.blink::ConsoleMessage"* %81, i1 zeroext false) #13
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #13
  br label %97

97:                                               ; preds = %78, %93, %96
  br i1 %34, label %111, label %98

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %111

111:                                              ; preds = %97, %107, %110
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #13
  br label %127

127:                                              ; preds = %111, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #13
  br label %128

128:                                              ; preds = %13, %4, %127
  ret void
}

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15SVGParsingError6FormatERKN3WTF6StringERKNS_13QualifiedNameERKNS1_12AtomicStringE(%"class.blink::SVGParsingError"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink10SVGElement5titleEv(%"class.blink::SVGElement"*) unnamed_addr #0 align 2 {
  %2 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE, align 8
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = icmp eq %"class.blink::SVGElement"* %0, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp eq i32 %8, 32
  br i1 %9, label %10, label %30

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %14 = bitcast %"class.blink::Member"* %13 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %30

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %26, i64 0, i32 47, i32 0, i32 0
  %28 = load %"class.blink::Element"*, %"class.blink::Element"** %27, align 8
  %29 = icmp eq %"class.blink::Element"* %22, %28
  br i1 %29, label %113, label %30

30:                                               ; preds = %1, %5, %21, %10
  %31 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %3) #13
  %32 = icmp eq %"class.blink::ShadowRoot"* %31, null
  br i1 %32, label %82, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %31, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.blink::Node"** %34 to %"class.blink::Element"**
  %36 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  %37 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE, align 8
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %36, i64 0, i32 0, i32 0
  %39 = icmp eq %"class.blink::Element"* %36, null
  br i1 %39, label %82, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %36, i64 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 48
  %44 = icmp eq i32 %43, 32
  br i1 %44, label %45, label %82

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %37, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 2
  %49 = bitcast %"class.blink::Member"* %48 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %52, %54
  br i1 %55, label %56, label %82

56:                                               ; preds = %45
  %57 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %3) #13
  %58 = bitcast %"class.blink::Element"* %57 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %59 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %59, i64 108
  %61 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %60, align 8
  %62 = tail call %"class.WTF::StringImpl"* %61(%"class.blink::Element"* %57) #13
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %82, label %64

64:                                               ; preds = %56
  %65 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %113

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %82

82:                                               ; preds = %56, %81, %78, %40, %33, %30, %45
  %83 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %84 = load %"class.blink::Node"*, %"class.blink::Node"** %83, align 8
  %85 = icmp eq %"class.blink::Node"* %84, null
  br i1 %85, label %113, label %86

86:                                               ; preds = %82
  %87 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE, align 8
  %88 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %87, i64 0, i32 0, i32 0, i32 0
  br label %89

89:                                               ; preds = %105, %86
  %90 = phi %"class.blink::Node"* [ %84, %86 ], [ %107, %105 ]
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = and i32 %92, 48
  %94 = icmp eq i32 %93, 32
  br i1 %94, label %95, label %105

95:                                               ; preds = %89
  %96 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %88, align 8
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 1, i32 2
  %98 = bitcast %"class.blink::Member"* %97 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %99 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %99, i64 0, i32 3, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %101, %103
  br i1 %104, label %109, label %105

105:                                              ; preds = %95, %89
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 5, i32 0, i32 0
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %113, label %89

109:                                              ; preds = %95
  %110 = bitcast %"class.blink::Node"* %90 to %"class.blink::Element"*
  %111 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* nonnull %110) #13
  %112 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  br label %113

113:                                              ; preds = %105, %82, %64, %21, %109
  %114 = phi i64 [ %112, %109 ], [ 0, %21 ], [ %65, %64 ], [ 0, %82 ], [ 0, %105 ]
  %115 = inttoptr i64 %114 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %115
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10SVGElement22InstanceUpdatesBlockedEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 6
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 1
  %9 = icmp ne i8 %8, 0
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement25SetInstanceUpdatesBlockedEb(%"class.blink::SVGElement"* nocapture readonly, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  %5 = icmp eq %"class.blink::SVGElementRareData"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = zext i1 %1 to i8
  %8 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %4, i64 0, i32 6
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, -2
  %11 = or i8 %10, %7
  store i8 %11, i8* %8, align 8
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement23SetWebAnimationsPendingEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call dereferenceable(88) %"class.blink::SVGDocumentExtensions"* @_ZN5blink8Document19AccessSVGExtensionsEv(%"class.blink::Document"* %5) #13
  tail call void @_ZN5blink21SVGDocumentExtensions33AddWebAnimationsPendingSVGElementERNS_10SVGElementE(%"class.blink::SVGDocumentExtensions"* %6, %"class.blink::SVGElement"* dereferenceable(168) %0) #13
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %8, align 8
  %10 = icmp eq %"class.blink::SVGElementRareData"* %9, null
  br i1 %10, label %11, label %35

11:                                               ; preds = %1
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #13
  %13 = getelementptr inbounds i8, i8* %12, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #13
  %14 = getelementptr inbounds i8, i8* %12, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #13
  %15 = getelementptr inbounds i8, i8* %12, i64 72
  %16 = getelementptr inbounds i8, i8* %12, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #13
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, -8
  store i8 %18, i8* %16, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #13
  %20 = getelementptr inbounds i8, i8* %12, i64 128
  %21 = getelementptr inbounds i8, i8* %12, i64 144
  %22 = bitcast i8* %21 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %22) #13
  %23 = getelementptr inbounds i8, i8* %12, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = ptrtoint i8* %12 to i64
  %28 = bitcast %"class.blink::Member.32"* %7 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  %31 = bitcast i8* %12 to %"class.blink::SVGElementRareData"*
  br i1 %30, label %35, label %32

32:                                               ; preds = %11
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #13
  %34 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %8, align 8
  br label %35

35:                                               ; preds = %1, %11, %32
  %36 = phi %"class.blink::SVGElementRareData"* [ %9, %1 ], [ %34, %32 ], [ %31, %11 ]
  %37 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %36, i64 0, i32 6
  %38 = load i8, i8* %37, align 8
  %39 = or i8 %38, 4
  store i8 %39, i8* %37, align 8
  ret void
}

declare dereferenceable(88) %"class.blink::SVGDocumentExtensions"* @_ZN5blink8Document19AccessSVGExtensionsEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink21SVGDocumentExtensions33AddWebAnimationsPendingSVGElementERNS_10SVGElementE(%"class.blink::SVGDocumentExtensions"*, %"class.blink::SVGElement"* dereferenceable(168)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement24ApplyActiveWebAnimationsEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::HeapHashMap.1438", align 8
  %5 = alloca %"class.blink::SVGInterpolationTypesMap", align 8
  %6 = alloca %"class.blink::SVGInterpolationEnvironment", align 8
  %7 = bitcast %"class.blink::HeapHashMap.1438"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.blink::HeapHashMap.1438", %"class.blink::HeapHashMap.1438"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HeapHashMap.1438", %"class.blink::HeapHashMap.1438"* %4, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.blink::HeapHashMap.1438", %"class.blink::HeapHashMap.1438"* %4, i64 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::HeapHashMap.1438"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = tail call %"class.blink::ElementAnimations"* @_ZNK5blink7Element20GetElementAnimationsEv(%"class.blink::Element"* %11) #13
  %14 = getelementptr inbounds %"class.blink::ElementAnimations", %"class.blink::ElementAnimations"* %13, i64 0, i32 0
  call void @_ZN5blink11EffectStack20ActiveInterpolationsEPS0_PKNS_10HeapVectorINS_6MemberIKNS_11InertEffectEEELj0EEEPKNS_11HeapHashSetINS3_IKNS_9AnimationEEEN3WTF10MemberHashISC_EENSE_10HashTraitsISD_EEEENS_14KeyframeEffect8PriorityEPFbRKNS_14PropertyHandleEEPSM_(%"class.blink::HeapHashMap.1438"* nonnull sret %4, %"class.blink::EffectStack"* %14, %"class.blink::HeapVector.1479"* null, %"class.blink::HeapHashSet.1480"* null, i32 0, i1 (%"class.blink::PropertyHandle"*)* nonnull @_ZN5blinkL20IsSVGAttributeHandleERKNS_14PropertyHandleE, %"class.blink::KeyframeEffect"* null) #13
  %15 = load i32, i32* %10, align 4
  %16 = icmp eq i32 %15, 0
  %17 = load %"struct.WTF::KeyValuePair.1444"*, %"struct.WTF::KeyValuePair.1444"** %8, align 8
  %18 = load i32, i32* %9, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %17, i64 %19
  br i1 %16, label %60, label %21

21:                                               ; preds = %1
  %22 = icmp eq i32 %18, 0
  br i1 %22, label %60, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %27 = bitcast %union.anon.1445* %26 to i8*
  %28 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %53, %23
  %30 = phi %"struct.WTF::KeyValuePair.1444"* [ %17, %23 ], [ %54, %53 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  store i32 0, i32* %25, align 8, !alias.scope !3
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #13, !alias.scope !3
  %32 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %31, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #13
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %48

48:                                               ; preds = %47, %44, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %30, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 1
  %52 = or i1 %32, %51
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %30, i64 1
  %55 = icmp eq %"struct.WTF::KeyValuePair.1444"* %54, %20
  br i1 %55, label %56, label %29

56:                                               ; preds = %53, %48
  %57 = phi %"struct.WTF::KeyValuePair.1444"* [ %20, %53 ], [ %30, %48 ]
  %58 = load %"struct.WTF::KeyValuePair.1444"*, %"struct.WTF::KeyValuePair.1444"** %8, align 8
  %59 = load i32, i32* %9, align 8
  br label %60

60:                                               ; preds = %56, %1, %21
  %61 = phi i32 [ %18, %1 ], [ 0, %21 ], [ %59, %56 ]
  %62 = phi %"struct.WTF::KeyValuePair.1444"* [ %17, %1 ], [ %17, %21 ], [ %58, %56 ]
  %63 = phi %"struct.WTF::KeyValuePair.1444"* [ %20, %1 ], [ %17, %21 ], [ %57, %56 ]
  %64 = zext i32 %61 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %62, i64 %64
  %66 = icmp eq %"struct.WTF::KeyValuePair.1444"* %63, %65
  br i1 %66, label %83, label %67

67:                                               ; preds = %60
  %68 = bitcast %"class.blink::SVGInterpolationTypesMap"* %5 to i8*
  %69 = getelementptr inbounds %"class.blink::SVGInterpolationTypesMap", %"class.blink::SVGInterpolationTypesMap"* %5, i64 0, i32 0, i32 0
  %70 = bitcast %"class.blink::SVGInterpolationEnvironment"* %6 to i8*
  %71 = getelementptr inbounds %"class.blink::SVGInterpolationEnvironment", %"class.blink::SVGInterpolationEnvironment"* %6, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::SVGInterpolationEnvironment", %"class.blink::SVGInterpolationEnvironment"* %6, i64 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.blink::SVGInterpolationEnvironment", %"class.blink::SVGInterpolationEnvironment"* %6, i64 0, i32 1
  %74 = getelementptr inbounds %"class.blink::SVGInterpolationEnvironment", %"class.blink::SVGInterpolationEnvironment"* %6, i64 0, i32 2
  %75 = getelementptr inbounds %"class.blink::SVGInterpolationTypesMap", %"class.blink::SVGInterpolationTypesMap"* %5, i64 0, i32 0
  %76 = getelementptr inbounds %"class.blink::SVGInterpolationEnvironment", %"class.blink::SVGInterpolationEnvironment"* %6, i64 0, i32 0
  %77 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %78 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %79 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %80 = bitcast %union.anon.1445* %79 to i8*
  %81 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %82 = bitcast %"class.blink::SVGInterpolationEnvironment"* %6 to i8*
  br label %87

83:                                               ; preds = %129, %60
  %84 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %85 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %84, align 8
  %86 = icmp eq %"class.blink::SVGElementRareData"* %85, null
  br i1 %86, label %136, label %132

87:                                               ; preds = %67, %129
  %88 = phi %"struct.WTF::KeyValuePair.1444"* [ %63, %67 ], [ %130, %129 ]
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %88, i64 0, i32 0, i32 1
  %90 = bitcast %union.anon.1445* %89 to %"class.blink::QualifiedName"**
  %91 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %90, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink24SVGInterpolationTypesMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 32, i1 false)
  %92 = call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %91)
  %93 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %92 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)***
  %94 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)** %94, i64 3
  %96 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)** %95, align 8
  %97 = call dereferenceable(8) %"class.blink::SVGPropertyBase"* %96(%"class.blink::SVGAnimatedPropertyBase"* %92) #13
  store %"class.blink::InterpolationTypesMap"* %75, %"class.blink::InterpolationTypesMap"** %72, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27SVGInterpolationEnvironmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  store %"class.blink::SVGElement"* %0, %"class.blink::SVGElement"** %73, align 8
  store %"class.blink::SVGPropertyBase"* %97, %"class.blink::SVGPropertyBase"** %74, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %88, i64 0, i32 1, i32 0, i32 0
  %99 = load %"class.blink::HeapVector.1448"*, %"class.blink::HeapVector.1448"** %98, align 8
  call void @_ZN5blink26InvalidatableInterpolation10ApplyStackERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEERNS_24InterpolationEnvironmentE(%"class.blink::HeapVector.1448"* dereferenceable(24) %99, %"class.blink::InterpolationEnvironment"* nonnull dereferenceable(16) %76) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #13
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %88, i64 1
  %101 = icmp eq %"struct.WTF::KeyValuePair.1444"* %100, %20
  br i1 %101, label %129, label %102

102:                                              ; preds = %87, %126
  %103 = phi %"struct.WTF::KeyValuePair.1444"* [ %127, %126 ], [ %100, %87 ]
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %103, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13
  store i32 0, i32* %78, align 8, !alias.scope !8
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #13, !alias.scope !8
  %105 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %104, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #13
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #13
  br label %121

121:                                              ; preds = %120, %117, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %103, i64 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, 1
  %125 = or i1 %105, %124
  br i1 %125, label %126, label %129

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.1444", %"struct.WTF::KeyValuePair.1444"* %103, i64 1
  %128 = icmp eq %"struct.WTF::KeyValuePair.1444"* %127, %20
  br i1 %128, label %129, label %102

129:                                              ; preds = %121, %126, %87
  %130 = phi %"struct.WTF::KeyValuePair.1444"* [ %20, %87 ], [ %103, %121 ], [ %20, %126 ]
  %131 = icmp eq %"struct.WTF::KeyValuePair.1444"* %130, %65
  br i1 %131, label %83, label %87

132:                                              ; preds = %83
  %133 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %85, i64 0, i32 6
  %134 = load i8, i8* %133, align 8
  %135 = and i8 %134, -5
  store i8 %135, i8* %133, align 8
  br label %136

136:                                              ; preds = %83, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

declare void @_ZN5blink11EffectStack20ActiveInterpolationsEPS0_PKNS_10HeapVectorINS_6MemberIKNS_11InertEffectEEELj0EEEPKNS_11HeapHashSetINS3_IKNS_9AnimationEEEN3WTF10MemberHashISC_EENSE_10HashTraitsISD_EEEENS_14KeyframeEffect8PriorityEPFbRKNS_14PropertyHandleEEPSM_(%"class.blink::HeapHashMap.1438"* sret, %"class.blink::EffectStack"*, %"class.blink::HeapVector.1479"*, %"class.blink::HeapHashSet.1480"*, i32, i1 (%"class.blink::PropertyHandle"*)*, %"class.blink::KeyframeEffect"*) local_unnamed_addr #1

declare %"class.blink::ElementAnimations"* @_ZNK5blink7Element20GetElementAnimationsEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN5blinkL20IsSVGAttributeHandleERKNS_14PropertyHandleE(%"class.blink::PropertyHandle"* nocapture readonly dereferenceable(24)) #3 {
  %2 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 5
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* nocapture readonly, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = tail call i32 @_ZN5blink26SVGAttributeHashTranslator7GetHashERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %1) #13
  %12 = and i32 %11, %9
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %17, %19
  br i1 %20, label %72, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = xor i32 %11, -1
  %27 = lshr i32 %11, 23
  %28 = add i32 %27, %26
  %29 = shl i32 %28, 12
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 7
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 2
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 20
  %36 = xor i32 %35, %34
  %37 = or i32 %36, 1
  %38 = zext i32 %37 to i64
  br label %39

39:                                               ; preds = %61, %21
  %40 = phi %"struct.WTF::KeyValuePair"* [ %14, %21 ], [ %66, %61 ]
  %41 = phi i64 [ %13, %21 ], [ %65, %61 ]
  %42 = phi i64 [ 0, %21 ], [ %63, %61 ]
  %43 = bitcast %"struct.WTF::KeyValuePair"* %40 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, inttoptr (i64 -1 to i8*)
  br i1 %45, label %61, label %46

46:                                               ; preds = %39
  %47 = bitcast i8* %44 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %48 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %23, %47
  br i1 %48, label %70, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %44, i64 16
  %51 = bitcast i8* %50 to %"class.WTF::StringImpl"**
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %52, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %49
  %56 = getelementptr inbounds i8, i8* %44, i64 24
  %57 = bitcast i8* %56 to %"class.WTF::StringImpl"**
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %58, %59
  br i1 %60, label %70, label %61

61:                                               ; preds = %55, %49, %39
  %62 = icmp eq i64 %42, 0
  %63 = select i1 %62, i64 %38, i64 %42
  %64 = add i64 %63, %41
  %65 = and i64 %64, %10
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, %19
  br i1 %69, label %72, label %39

70:                                               ; preds = %55, %46
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %40, null
  br i1 %71, label %72, label %78

72:                                               ; preds = %61, %70, %6, %2
  %73 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %74 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 %76
  br label %78

78:                                               ; preds = %70, %72
  %79 = phi %"struct.WTF::KeyValuePair"* [ %77, %72 ], [ %40, %70 ]
  %80 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %81 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 %83
  %85 = icmp eq %"struct.WTF::KeyValuePair"* %79, %84
  br i1 %85, label %89, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1, i32 0, i32 0
  %88 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %87, align 8
  br label %89

89:                                               ; preds = %78, %86
  %90 = phi %"class.blink::SVGAnimatedPropertyBase"* [ %88, %86 ], [ null, %78 ]
  ret %"class.blink::SVGAnimatedPropertyBase"* %90
}

declare void @_ZN5blink26InvalidatableInterpolation10ApplyStackERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEERNS_24InterpolationEnvironmentE(%"class.blink::HeapVector.1448"* dereferenceable(24), %"class.blink::InterpolationEnvironment"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement23SetWebAnimatedAttributeERKNS_13QualifiedNameEPNS_15SVGPropertyBaseE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::SVGPropertyBase"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink10SVGElement20SetAnimatedAttributeERKNS_13QualifiedNameEPNS_15SVGPropertyBaseE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::SVGPropertyBase"* %2)
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %5, align 8
  %7 = icmp eq %"class.blink::SVGElementRareData"* %6, null
  br i1 %7, label %8, label %32

8:                                                ; preds = %3
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #13
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #13
  %11 = getelementptr inbounds i8, i8* %9, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %9, i64 72
  %13 = getelementptr inbounds i8, i8* %9, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #13
  %14 = load i8, i8* %13, align 8
  %15 = and i8 %14, -8
  store i8 %15, i8* %13, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #13
  %17 = getelementptr inbounds i8, i8* %9, i64 128
  %18 = getelementptr inbounds i8, i8* %9, i64 144
  %19 = bitcast i8* %18 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %19) #13
  %20 = getelementptr inbounds i8, i8* %9, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = ptrtoint i8* %9 to i64
  %25 = bitcast %"class.blink::Member.32"* %4 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  %28 = bitcast i8* %9 to %"class.blink::SVGElementRareData"*
  br i1 %27, label %32, label %29

29:                                               ; preds = %8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #13
  %31 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %5, align 8
  br label %32

32:                                               ; preds = %3, %8, %29
  %33 = phi %"class.blink::SVGElementRareData"* [ %6, %3 ], [ %31, %29 ], [ %28, %8 ]
  %34 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %33, i64 0, i32 8, i32 0
  %35 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.56"* %34, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::QualifiedName"* dereferenceable(8) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement20SetAnimatedAttributeERKNS_13QualifiedNameEPNS_15SVGPropertyBaseE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::SVGPropertyBase"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SVGElement::SvgAttributeChangedParams", align 8
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %9
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %13, align 8
  %15 = icmp eq %"class.blink::ElementData"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %16, %11
  tail call void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"* %12) #13
  br label %22

22:                                               ; preds = %21, %16, %3
  %23 = bitcast %"struct.blink::SVGElement::SvgAttributeChangedParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %4, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %4, i64 0, i32 1
  %26 = bitcast %"struct.blink::SVGElement::SvgAttributeChangedParams"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  store %"class.blink::QualifiedName"* %1, %"class.blink::QualifiedName"** %24, align 8
  store i32 0, i32* %25, align 8
  %27 = icmp eq %"class.blink::SVGElement"* %0, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %29, align 8
  %31 = icmp eq %"class.blink::SVGElementRareData"* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %30, i64 0, i32 6
  %34 = load i8, i8* %33, align 8
  %35 = or i8 %34, 1
  store i8 %35, i8* %33, align 8
  br label %36

36:                                               ; preds = %32, %28, %22
  %37 = tail call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %1) #13
  %38 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %37, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %37 to void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)***
  %41 = load void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)** %41, i64 6
  %43 = load void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)** %42, align 8
  tail call void %43(%"class.blink::SVGAnimatedPropertyBase"* nonnull %37, %"class.blink::SVGPropertyBase"* %2) #13
  %44 = bitcast %"class.blink::SVGElement"* %0 to void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)***
  %45 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)**, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %45, i64 163
  %47 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %46, align 8
  call void %47(%"class.blink::SVGElement"* %0, %"struct.blink::SVGElement::SvgAttributeChangedParams"* nonnull dereferenceable(16) %4) #13
  br label %48

48:                                               ; preds = %39, %36
  %49 = call dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %0) #13
  %50 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %49, i64 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %49, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %49, i64 0, i32 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %54, i64 %57
  br i1 %52, label %71, label %59

59:                                               ; preds = %48
  %60 = icmp eq i32 %56, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %59, %65
  %62 = phi %"class.blink::WeakMember"* [ %66, %65 ], [ %54, %59 ]
  %63 = bitcast %"class.blink::WeakMember"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %68 [
    i64 -1, label %65
    i64 0, label %65
  ]

65:                                               ; preds = %61, %61
  %66 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %62, i64 1
  %67 = icmp eq %"class.blink::WeakMember"* %66, %58
  br i1 %67, label %71, label %61

68:                                               ; preds = %61, %59
  %69 = phi %"class.blink::WeakMember"* [ %54, %59 ], [ %62, %61 ]
  %70 = icmp eq %"class.blink::WeakMember"* %69, %58
  br i1 %70, label %71, label %80

71:                                               ; preds = %65, %106, %96, %103, %68, %48
  br i1 %27, label %108, label %72

72:                                               ; preds = %71
  %73 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %73, align 8
  %75 = icmp eq %"class.blink::SVGElementRareData"* %74, null
  br i1 %75, label %108, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %74, i64 0, i32 6
  %78 = load i8, i8* %77, align 8
  %79 = and i8 %78, -2
  store i8 %79, i8* %77, align 8
  br label %108

80:                                               ; preds = %68, %106
  %81 = phi %"class.blink::WeakMember"* [ %100, %106 ], [ %69, %68 ]
  %82 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %82, align 8
  %84 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %24, align 8
  %85 = call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %83, %"class.blink::QualifiedName"* dereferenceable(8) %84) #13
  %86 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %85, null
  br i1 %86, label %96, label %87

87:                                               ; preds = %80
  %88 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %85 to void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)***
  %89 = load void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)** %89, i64 6
  %91 = load void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGPropertyBase"*)** %90, align 8
  call void %91(%"class.blink::SVGAnimatedPropertyBase"* nonnull %85, %"class.blink::SVGPropertyBase"* %2) #13
  %92 = bitcast %"class.blink::SVGElement"* %83 to void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)***
  %93 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)**, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %93, i64 163
  %95 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %94, align 8
  call void %95(%"class.blink::SVGElement"* %83, %"struct.blink::SVGElement::SvgAttributeChangedParams"* nonnull dereferenceable(16) %4) #13
  br label %96

96:                                               ; preds = %87, %80
  %97 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %81, i64 1
  %98 = icmp eq %"class.blink::WeakMember"* %97, %58
  br i1 %98, label %71, label %99

99:                                               ; preds = %96, %103
  %100 = phi %"class.blink::WeakMember"* [ %104, %103 ], [ %97, %96 ]
  %101 = bitcast %"class.blink::WeakMember"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %106 [
    i64 -1, label %103
    i64 0, label %103
  ]

103:                                              ; preds = %99, %99
  %104 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %100, i64 1
  %105 = icmp eq %"class.blink::WeakMember"* %104, %58
  br i1 %105, label %71, label %99

106:                                              ; preds = %99
  %107 = icmp eq %"class.blink::WeakMember"* %100, %58
  br i1 %107, label %71, label %80

108:                                              ; preds = %71, %72, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement26ClearWebAnimatedAttributesEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %79, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 8
  %7 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 8, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashSet.55", %"class.WTF::HashSet.55"* %6, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 8, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %14
  br i1 %9, label %40, label %16

16:                                               ; preds = %5
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %16
  %19 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  br label %22

22:                                               ; preds = %29, %18
  %23 = phi %"class.blink::QualifiedName"* [ %11, %18 ], [ %30, %29 ]
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %21
  %27 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %28 = or i1 %27, %26
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 1
  %31 = icmp eq %"class.blink::QualifiedName"* %30, %15
  br i1 %31, label %40, label %22

32:                                               ; preds = %22, %16
  %33 = phi %"class.blink::QualifiedName"* [ %11, %16 ], [ %23, %22 ]
  %34 = icmp eq %"class.blink::QualifiedName"* %33, %15
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 0, i32 0, i32 0
  br label %61

38:                                               ; preds = %61, %77, %74
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %10, align 8
  br label %40

40:                                               ; preds = %29, %5, %38, %32
  %41 = phi %"class.blink::QualifiedName"* [ %39, %38 ], [ %11, %32 ], [ %11, %5 ], [ %11, %29 ]
  %42 = icmp eq %"class.blink::QualifiedName"* %41, null
  br i1 %42, label %79, label %43

43:                                               ; preds = %40
  %44 = load i32, i32* %12, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %43
  %47 = zext i32 %44 to i64
  br label %48

48:                                               ; preds = %55, %46
  %49 = phi i64 [ 0, %46 ], [ %56, %55 ]
  %50 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %41, i64 %49
  %51 = bitcast %"class.blink::QualifiedName"* %50 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %55, label %54

54:                                               ; preds = %48
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %50) #13
  br label %55

55:                                               ; preds = %54, %48
  %56 = add nuw nsw i64 %49, 1
  %57 = icmp eq i64 %56, %47
  br i1 %57, label %58, label %48

58:                                               ; preds = %55, %43
  %59 = bitcast %"class.blink::QualifiedName"* %41 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %59) #13
  %60 = bitcast %"class.WTF::HashSet.55"* %6 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  store i32 0, i32* %12, align 8
  store i32 0, i32* %7, align 4
  br label %79

61:                                               ; preds = %35, %77
  %62 = phi %"class.blink::QualifiedName"* [ %33, %35 ], [ %68, %77 ]
  tail call void @_ZN5blink10SVGElement22ClearAnimatedAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %62)
  %63 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %62, i64 1
  %64 = icmp eq %"class.blink::QualifiedName"* %63, %15
  br i1 %64, label %38, label %65

65:                                               ; preds = %61
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  br label %67

67:                                               ; preds = %74, %65
  %68 = phi %"class.blink::QualifiedName"* [ %63, %65 ], [ %75, %74 ]
  %69 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %70, %66
  %72 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %70, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %73 = or i1 %72, %71
  br i1 %73, label %74, label %77

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %68, i64 1
  %76 = icmp eq %"class.blink::QualifiedName"* %75, %15
  br i1 %76, label %38, label %67

77:                                               ; preds = %67
  %78 = icmp eq %"class.blink::QualifiedName"* %68, %15
  br i1 %78, label %38, label %61

79:                                               ; preds = %1, %58, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement22ClearAnimatedAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGElement::SvgAttributeChangedParams", align 8
  %4 = bitcast %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3, i64 0, i32 1
  %7 = bitcast %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  store %"class.blink::QualifiedName"* %1, %"class.blink::QualifiedName"** %5, align 8
  store i32 0, i32* %6, align 8
  %8 = icmp eq %"class.blink::SVGElement"* %0, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %10, align 8
  %12 = icmp eq %"class.blink::SVGElementRareData"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %11, i64 0, i32 6
  %15 = load i8, i8* %14, align 8
  %16 = or i8 %15, 1
  store i8 %16, i8* %14, align 8
  br label %17

17:                                               ; preds = %13, %9, %2
  %18 = tail call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %1) #13
  %19 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %18 to void (%"class.blink::SVGAnimatedPropertyBase"*)***
  %22 = load void (%"class.blink::SVGAnimatedPropertyBase"*)**, void (%"class.blink::SVGAnimatedPropertyBase"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*)** %22, i64 7
  %24 = load void (%"class.blink::SVGAnimatedPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*)** %23, align 8
  tail call void %24(%"class.blink::SVGAnimatedPropertyBase"* nonnull %18) #13
  %25 = bitcast %"class.blink::SVGElement"* %0 to void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)***
  %26 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)**, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %26, i64 163
  %28 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %27, align 8
  call void %28(%"class.blink::SVGElement"* %0, %"struct.blink::SVGElement::SvgAttributeChangedParams"* nonnull dereferenceable(16) %3) #13
  br label %29

29:                                               ; preds = %20, %17
  %30 = call dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %0) #13
  %31 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %30, i64 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %30, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %30, i64 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %35, i64 %38
  br i1 %33, label %52, label %40

40:                                               ; preds = %29
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %40, %46
  %43 = phi %"class.blink::WeakMember"* [ %47, %46 ], [ %35, %40 ]
  %44 = bitcast %"class.blink::WeakMember"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %49 [
    i64 -1, label %46
    i64 0, label %46
  ]

46:                                               ; preds = %42, %42
  %47 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %43, i64 1
  %48 = icmp eq %"class.blink::WeakMember"* %47, %39
  br i1 %48, label %52, label %42

49:                                               ; preds = %42, %40
  %50 = phi %"class.blink::WeakMember"* [ %35, %40 ], [ %43, %42 ]
  %51 = icmp eq %"class.blink::WeakMember"* %50, %39
  br i1 %51, label %52, label %61

52:                                               ; preds = %46, %87, %77, %84, %49, %29
  br i1 %8, label %89, label %53

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %54, align 8
  %56 = icmp eq %"class.blink::SVGElementRareData"* %55, null
  br i1 %56, label %89, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %55, i64 0, i32 6
  %59 = load i8, i8* %58, align 8
  %60 = and i8 %59, -2
  store i8 %60, i8* %58, align 8
  br label %89

61:                                               ; preds = %49, %87
  %62 = phi %"class.blink::WeakMember"* [ %81, %87 ], [ %50, %49 ]
  %63 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %63, align 8
  %65 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %5, align 8
  %66 = call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %64, %"class.blink::QualifiedName"* dereferenceable(8) %65) #13
  %67 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %66 to void (%"class.blink::SVGAnimatedPropertyBase"*)***
  %70 = load void (%"class.blink::SVGAnimatedPropertyBase"*)**, void (%"class.blink::SVGAnimatedPropertyBase"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*)** %70, i64 7
  %72 = load void (%"class.blink::SVGAnimatedPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*)** %71, align 8
  call void %72(%"class.blink::SVGAnimatedPropertyBase"* nonnull %66) #13
  %73 = bitcast %"class.blink::SVGElement"* %64 to void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)***
  %74 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)**, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %74, i64 163
  %76 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %75, align 8
  call void %76(%"class.blink::SVGElement"* %64, %"struct.blink::SVGElement::SvgAttributeChangedParams"* nonnull dereferenceable(16) %3) #13
  br label %77

77:                                               ; preds = %68, %61
  %78 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %62, i64 1
  %79 = icmp eq %"class.blink::WeakMember"* %78, %39
  br i1 %79, label %52, label %80

80:                                               ; preds = %77, %84
  %81 = phi %"class.blink::WeakMember"* [ %85, %84 ], [ %78, %77 ]
  %82 = bitcast %"class.blink::WeakMember"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  switch i64 %83, label %87 [
    i64 -1, label %84
    i64 0, label %84
  ]

84:                                               ; preds = %80, %80
  %85 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %81, i64 1
  %86 = icmp eq %"class.blink::WeakMember"* %85, %39
  br i1 %86, label %52, label %80

87:                                               ; preds = %80
  %88 = icmp eq %"class.blink::WeakMember"* %81, %39
  br i1 %88, label %52, label %61

89:                                               ; preds = %52, %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ElementSMILAnimations"* @_ZNK5blink10SVGElement17GetSMILAnimationsEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::ElementSMILAnimations"*, %"class.blink::ElementSMILAnimations"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::ElementSMILAnimations"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::ElementSMILAnimations"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.blink::ElementSMILAnimations"* @_ZN5blink10SVGElement20EnsureSMILAnimationsEv(%"class.blink::SVGElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  %5 = icmp eq %"class.blink::SVGElementRareData"* %4, null
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #13
  %9 = getelementptr inbounds i8, i8* %7, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #13
  %10 = getelementptr inbounds i8, i8* %7, i64 72
  %11 = getelementptr inbounds i8, i8* %7, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #13
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, -8
  store i8 %13, i8* %11, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #13
  %15 = getelementptr inbounds i8, i8* %7, i64 128
  %16 = getelementptr inbounds i8, i8* %7, i64 144
  %17 = bitcast i8* %16 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %17) #13
  %18 = getelementptr inbounds i8, i8* %7, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = ptrtoint i8* %7 to i64
  %23 = bitcast %"class.blink::Member.32"* %2 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %7 to %"class.blink::SVGElementRareData"*
  br i1 %25, label %30, label %27

27:                                               ; preds = %6
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #13
  %29 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  br label %30

30:                                               ; preds = %1, %6, %27
  %31 = phi %"class.blink::SVGElementRareData"* [ %4, %1 ], [ %29, %27 ], [ %26, %6 ]
  %32 = tail call dereferenceable(24) %"class.blink::ElementSMILAnimations"* @_ZN5blink18SVGElementRareData20EnsureSMILAnimationsEv(%"class.blink::SVGElementRareData"* %31) #13
  ret %"class.blink::ElementSMILAnimations"* %32
}

declare dereferenceable(24) %"class.blink::ElementSMILAnimations"* @_ZN5blink18SVGElementRareData20EnsureSMILAnimationsEv(%"class.blink::SVGElementRareData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement26SetAnimatedMotionTransformERKNS_15AffineTransformE(%"class.blink::SVGElement"*, %"class.blink::AffineTransform"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::SVGElement"* %0, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %5, align 8
  %7 = icmp eq %"class.blink::SVGElementRareData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %6, i64 0, i32 6
  %10 = load i8, i8* %9, align 8
  %11 = or i8 %10, 1
  store i8 %11, i8* %9, align 8
  br label %12

12:                                               ; preds = %8, %4, %2
  %13 = bitcast %"class.blink::SVGElement"* %0 to %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)***
  %14 = load %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)**, %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)*, %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)** %14, i64 164
  %16 = load %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)*, %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)** %15, align 8
  %17 = tail call %"class.blink::AffineTransform"* %16(%"class.blink::SVGElement"* %0) #13
  %18 = bitcast %"class.blink::AffineTransform"* %1 to i8*
  %19 = bitcast %"class.blink::AffineTransform"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %18, i64 48, i1 false) #13
  %20 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %23, label %29, label %25

25:                                               ; preds = %12
  %26 = bitcast %"class.blink::NodeData"** %24 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  br label %31

29:                                               ; preds = %12
  %30 = bitcast %"class.blink::NodeData"** %24 to %"class.blink::NodeRenderingData"**
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi %"class.blink::NodeRenderingData"** [ %28, %25 ], [ %30, %29 ]
  %33 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %33, i64 0, i32 1
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::LayoutObject"* %35 to void (%"class.blink::LayoutObject"*)***
  %39 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %39, i64 34
  %41 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %40, align 8
  tail call void %41(%"class.blink::LayoutObject"* nonnull %35) #13
  tail call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* nonnull %35) #13
  tail call void @_ZN5blink26LayoutSVGResourceContainer42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectEb(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %35, i1 zeroext true) #13
  br label %42

42:                                               ; preds = %37, %31
  %43 = tail call dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %0) #13
  %44 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %43, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %43, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %43, i64 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %48, i64 %51
  br i1 %46, label %65, label %53

53:                                               ; preds = %42
  %54 = icmp eq i32 %50, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %53, %59
  %56 = phi %"class.blink::WeakMember"* [ %60, %59 ], [ %48, %53 ]
  %57 = bitcast %"class.blink::WeakMember"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  switch i64 %58, label %62 [
    i64 -1, label %59
    i64 0, label %59
  ]

59:                                               ; preds = %55, %55
  %60 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %56, i64 1
  %61 = icmp eq %"class.blink::WeakMember"* %60, %52
  br i1 %61, label %65, label %55

62:                                               ; preds = %55, %53
  %63 = phi %"class.blink::WeakMember"* [ %48, %53 ], [ %56, %55 ]
  %64 = icmp eq %"class.blink::WeakMember"* %63, %52
  br i1 %64, label %65, label %74

65:                                               ; preds = %59, %116, %106, %113, %62, %42
  br i1 %3, label %118, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %67, align 8
  %69 = icmp eq %"class.blink::SVGElementRareData"* %68, null
  br i1 %69, label %118, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %68, i64 0, i32 6
  %72 = load i8, i8* %71, align 8
  %73 = and i8 %72, -2
  store i8 %73, i8* %71, align 8
  br label %118

74:                                               ; preds = %62, %116
  %75 = phi %"class.blink::WeakMember"* [ %110, %116 ], [ %63, %62 ]
  %76 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %76, align 8
  %78 = bitcast %"class.blink::SVGElement"* %77 to %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)***
  %79 = load %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)**, %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)*** %78, align 8
  %80 = getelementptr inbounds %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)*, %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)** %79, i64 164
  %81 = load %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)*, %"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)** %80, align 8
  %82 = tail call %"class.blink::AffineTransform"* %81(%"class.blink::SVGElement"* %77) #13
  %83 = bitcast %"class.blink::AffineTransform"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %18, i64 48, i1 false) #13
  %84 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %77, i64 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %77, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %87, label %93, label %89

89:                                               ; preds = %74
  %90 = bitcast %"class.blink::NodeData"** %88 to %"class.blink::NodeRareData"**
  %91 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %91, i64 0, i32 1, i32 0, i32 0
  br label %95

93:                                               ; preds = %74
  %94 = bitcast %"class.blink::NodeData"** %88 to %"class.blink::NodeRenderingData"**
  br label %95

95:                                               ; preds = %93, %89
  %96 = phi %"class.blink::NodeRenderingData"** [ %92, %89 ], [ %94, %93 ]
  %97 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %97, i64 0, i32 1
  %99 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %98, align 8
  %100 = icmp eq %"class.blink::LayoutObject"* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.blink::LayoutObject"* %99 to void (%"class.blink::LayoutObject"*)***
  %103 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %103, i64 34
  %105 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %104, align 8
  tail call void %105(%"class.blink::LayoutObject"* nonnull %99) #13
  tail call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* nonnull %99) #13
  tail call void @_ZN5blink26LayoutSVGResourceContainer42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectEb(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %99, i1 zeroext true) #13
  br label %106

106:                                              ; preds = %101, %95
  %107 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %75, i64 1
  %108 = icmp eq %"class.blink::WeakMember"* %107, %52
  br i1 %108, label %65, label %109

109:                                              ; preds = %106, %113
  %110 = phi %"class.blink::WeakMember"* [ %114, %113 ], [ %107, %106 ]
  %111 = bitcast %"class.blink::WeakMember"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  switch i64 %112, label %116 [
    i64 -1, label %113
    i64 0, label %113
  ]

113:                                              ; preds = %109, %109
  %114 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %110, i64 1
  %115 = icmp eq %"class.blink::WeakMember"* %114, %52
  br i1 %115, label %65, label %109

116:                                              ; preds = %109
  %117 = icmp eq %"class.blink::WeakMember"* %110, %52
  br i1 %117, label %65, label %74

118:                                              ; preds = %65, %66, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement28ClearAnimatedMotionTransformEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AffineTransform", align 8
  %3 = bitcast %"class.blink::AffineTransform"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #13
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %2) #13
  call void @_ZN5blink10SVGElement26SetAnimatedMotionTransformERKNS_15AffineTransformE(%"class.blink::SVGElement"* %0, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %2)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #13
  ret void
}

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10SVGElement27HasNonCSSPropertyAnimationsEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 8, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 5, i32 0, i32 0
  %11 = load %"class.blink::ElementSMILAnimations"*, %"class.blink::ElementSMILAnimations"** %10, align 8
  %12 = icmp eq %"class.blink::ElementSMILAnimations"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::ElementSMILAnimations", %"class.blink::ElementSMILAnimations"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %13, %1, %9
  br label %18

18:                                               ; preds = %13, %5, %17
  %19 = phi i1 [ false, %17 ], [ true, %5 ], [ true, %13 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE(%"class.blink::AffineTransform"* noalias sret, %"class.blink::SVGElement"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10SVGElement12HasTransformENS0_20ApplyMotionTransformE(%"class.blink::SVGElement"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %6, label %12, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %10 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %10, i64 0, i32 1, i32 0, i32 0
  br label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi %"class.blink::NodeRenderingData"** [ %11, %8 ], [ %13, %12 ]
  %16 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %16, i64 0, i32 1
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %70, label %20

20:                                               ; preds = %14
  br i1 %6, label %25, label %21

21:                                               ; preds = %20
  %22 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %23 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %23, i64 0, i32 1, i32 0, i32 0
  br label %27

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  br label %27

27:                                               ; preds = %21, %25
  %28 = phi %"class.blink::NodeRenderingData"** [ %24, %21 ], [ %26, %25 ]
  %29 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %29, i64 0, i32 1
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %35, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %76

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %35, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %43, i64 0, i32 23, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %76

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %43, i64 0, i32 11, i32 0
  %49 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %48, align 8
  %50 = icmp eq %"class.blink::BasicShape"* %49, null
  br i1 %50, label %51, label %76

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %35, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %53, i64 0, i32 39
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 2097152
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %43, i64 0, i32 14, i32 0
  %60 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %59, align 8
  %61 = icmp eq %"class.blink::TranslateTransformOperation"* %60, null
  br i1 %61, label %62, label %76

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %43, i64 0, i32 12, i32 0
  %64 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %63, align 8
  %65 = icmp eq %"class.blink::RotateTransformOperation"* %64, null
  br i1 %65, label %66, label %76

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %43, i64 0, i32 13, i32 0
  %68 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %67, align 8
  %69 = icmp eq %"class.blink::ScaleTransformOperation"* %68, null
  br i1 %69, label %70, label %76

70:                                               ; preds = %66, %14
  %71 = icmp eq i32 %1, 1
  br i1 %71, label %72, label %76

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %73, align 8
  %75 = icmp ne %"class.blink::SVGElementRareData"* %74, null
  br label %76

76:                                               ; preds = %66, %39, %27, %47, %51, %58, %62, %70, %72
  %77 = phi i1 [ true, %66 ], [ false, %70 ], [ %75, %72 ], [ true, %62 ], [ true, %58 ], [ true, %51 ], [ true, %47 ], [ true, %27 ], [ true, %39 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10SVGElement18CalculateTransformENS0_20ApplyMotionTransformE(%"class.blink::AffineTransform"* noalias sret, %"class.blink::SVGElement"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %8, label %14, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %12, i64 0, i32 1, i32 0, i32 0
  br label %16

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %16

16:                                               ; preds = %10, %14
  %17 = phi %"class.blink::NodeRenderingData"** [ %13, %10 ], [ %15, %14 ]
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  %22 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 -1, i64 48, i1 false)
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #13
  %23 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %23, label %65, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 5, i32 0
  %26 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %28, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %28, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 23, i32 0, i32 2
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %63

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 11, i32 0
  %42 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %41, align 8
  %43 = icmp eq %"class.blink::BasicShape"* %42, null
  br i1 %43, label %44, label %63

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %28, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %46, i64 0, i32 39
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 2097152
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 14, i32 0
  %53 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %52, align 8
  %54 = icmp eq %"class.blink::TranslateTransformOperation"* %53, null
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 12, i32 0
  %57 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %56, align 8
  %58 = icmp eq %"class.blink::RotateTransformOperation"* %57, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 13, i32 0
  %61 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %60, align 8
  %62 = icmp eq %"class.blink::ScaleTransformOperation"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59, %32, %24, %40, %44, %51, %55
  %64 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %64) #13
  call void @_ZN5blink15TransformHelper16ComputeTransformERKNS_12LayoutObjectENS_13ComputedStyle20ApplyTransformOriginE(%"class.blink::AffineTransform"* nonnull sret %4, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %20, i32 0) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %64, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #13
  br label %65

65:                                               ; preds = %59, %16, %63
  %66 = icmp eq i32 %2, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 3, i32 0, i32 0
  %69 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %68, align 8
  %70 = icmp eq %"class.blink::SVGElementRareData"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = call %"class.blink::AffineTransform"* @_ZN5blink18SVGElementRareData22AnimateMotionTransformEv(%"class.blink::SVGElementRareData"* nonnull %69) #13
  %73 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform11PreMultiplyERKS0_(%"class.blink::AffineTransform"* %0, %"class.blink::AffineTransform"* dereferenceable(48) %72) #13
  br label %74

74:                                               ; preds = %67, %71, %65
  ret void
}

declare void @_ZN5blink15TransformHelper16ComputeTransformERKNS_12LayoutObjectENS_13ComputedStyle20ApplyTransformOriginE(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"* dereferenceable(88), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform11PreMultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

declare %"class.blink::AffineTransform"* @_ZN5blink18SVGElementRareData22AnimateMotionTransformEv(%"class.blink::SVGElementRareData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZN5blink7Element12InsertedIntoERNS_13ContainerNodeE(%"class.blink::Element"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #13
  tail call void @_ZN5blink7Element9HideNonceEv(%"class.blink::Element"* %3) #13
  %5 = bitcast %"class.blink::SVGElement"* %0 to i1 (%"class.blink::SVGElement"*)***
  %6 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %6, i64 166
  %8 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::SVGElement"* %0) #13
  tail call void @_ZN5blink10SVGElement32UpdateRelativeLengthsInformationEbPS0_(%"class.blink::SVGElement"* %0, i1 zeroext %9, %"class.blink::SVGElement"* %0) #13
  ret i32 0
}

declare i32 @_ZN5blink7Element12InsertedIntoERNS_13ContainerNodeE(%"class.blink::Element"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN5blink7Element9HideNonceEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  %8 = and i32 %5, 12
  %9 = icmp eq i32 %8, 8
  br i1 %9, label %10, label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %13, align 8
  %15 = icmp eq %"class.blink::ContainerNode"* %14, %1
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %3) #13
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %17, i64 0, i32 0
  br label %19

19:                                               ; preds = %2, %10, %16
  %20 = phi %"class.blink::ContainerNode"* [ %18, %16 ], [ %1, %10 ], [ %1, %2 ]
  %21 = icmp eq %"class.blink::ContainerNode"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %20, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 48
  %26 = icmp eq i32 %25, 32
  %27 = bitcast %"class.blink::ContainerNode"* %20 to %"class.blink::SVGElement"*
  %28 = select i1 %26, %"class.blink::SVGElement"* %27, %"class.blink::SVGElement"* null
  br label %29

29:                                               ; preds = %19, %22
  %30 = phi %"class.blink::SVGElement"* [ %28, %22 ], [ null, %19 ]
  br i1 %7, label %55, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %31
  %36 = icmp eq %"class.blink::SVGElement"* %30, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %38) #13
  %40 = icmp eq %"class.blink::Element"* %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  tail call void @_ZN5blink10SVGElement32UpdateRelativeLengthsInformationEbPS0_(%"class.blink::SVGElement"* nonnull %30, i1 zeroext false, %"class.blink::SVGElement"* %0)
  br label %42

42:                                               ; preds = %37, %35, %41
  %43 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable"* %43) #13
  br label %44

44:                                               ; preds = %31, %42
  %45 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element11RemovedFromERNS_13ContainerNodeE(%"class.blink::Element"* %45, %"class.blink::ContainerNode"* dereferenceable(80) %1) #13
  %46 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %46, align 8
  %48 = icmp eq %"class.blink::SVGElementRareData"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %47, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %50, align 8
  %52 = icmp eq %"class.blink::SVGElement"* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  tail call void @_ZN5blink10SVGElement21RemoveInstanceMappingEPS0_(%"class.blink::SVGElement"* nonnull %51, %"class.blink::SVGElement"* %0)
  br label %54

54:                                               ; preds = %44, %49, %53
  tail call void @_ZN5blink10SVGElement28RebuildAllIncomingReferencesEv(%"class.blink::SVGElement"* %0)
  tail call void @_ZN5blink10SVGElement27RemoveAllIncomingReferencesEv(%"class.blink::SVGElement"* %0)
  br label %57

55:                                               ; preds = %29
  %56 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element11RemovedFromERNS_13ContainerNodeE(%"class.blink::Element"* %56, %"class.blink::ContainerNode"* dereferenceable(80) %1) #13
  br label %57

57:                                               ; preds = %55, %54
  tail call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement32UpdateRelativeLengthsInformationEbPS0_(%"class.blink::SVGElement"*, i1 zeroext, %"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SVGElement"*, align 8
  store %"class.blink::SVGElement"* %2, %"class.blink::SVGElement"** %4, align 8
  %5 = icmp eq %"class.blink::SVGElement"* %0, null
  br i1 %5, label %130, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %6, %14
  %9 = phi %"class.blink::Node"* [ %18, %14 ], [ %7, %6 ]
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %164, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.blink::Node"** %15 to %"class.blink::ContainerNode"**
  %17 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %17, i64 0, i32 0
  %19 = icmp eq %"class.blink::ContainerNode"* %17, null
  br i1 %19, label %20, label %8

20:                                               ; preds = %14
  br i1 %5, label %130, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %23 = bitcast %"class.blink::SVGElement"** %4 to %"class.blink::Element"**
  br label %24

24:                                               ; preds = %21, %124
  %25 = phi i1 [ %1, %21 ], [ %122, %124 ]
  %26 = phi %"class.blink::Element"* [ %22, %21 ], [ %126, %124 ]
  %27 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %26, i64 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 48
  %30 = icmp eq i32 %29, 32
  br i1 %30, label %31, label %128

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::Element"* %26 to %"class.blink::SVGElement"*
  %33 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %32, i64 0, i32 1, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp ne i32 %34, 0
  %36 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %26, i64 1
  br i1 %25, label %37, label %40

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::Element"* %36 to %"class.WTF::HashTable"*
  %39 = call { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %38, %"class.blink::SVGElement"** nonnull dereferenceable(8) %4, %"class.blink::SVGElement"** nonnull dereferenceable(8) %4) #13
  br label %120

40:                                               ; preds = %31
  %41 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %4, align 8
  %42 = ptrtoint %"class.blink::SVGElement"* %41 to i64
  %43 = bitcast %"class.blink::Element"* %36 to %"class.blink::WeakMember"**
  %44 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %43, align 8
  %45 = icmp eq %"class.blink::WeakMember"* %44, null
  %46 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %26, i64 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %"class.blink::TraceWrapperV8Reference"* %46 to i32*
  %48 = load i32, i32* %47, align 8
  br i1 %45, label %110, label %49

49:                                               ; preds = %40
  %50 = add i32 %48, -1
  %51 = zext i32 %50 to i64
  %52 = shl i64 %42, 32
  %53 = xor i64 %52, -1
  %54 = add i64 %53, %42
  %55 = lshr i64 %54, 22
  %56 = xor i64 %55, %54
  %57 = shl i64 %56, 13
  %58 = xor i64 %57, -1
  %59 = add i64 %56, %58
  %60 = lshr i64 %59, 8
  %61 = xor i64 %60, %59
  %62 = mul i64 %61, 9
  %63 = lshr i64 %62, 15
  %64 = xor i64 %63, %62
  %65 = shl i64 %64, 27
  %66 = xor i64 %65, -1
  %67 = add i64 %64, %66
  %68 = lshr i64 %67, 31
  %69 = xor i64 %68, %67
  %70 = trunc i64 %69 to i32
  %71 = and i32 %50, %70
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %44, i64 %72
  %74 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %74, align 8
  %76 = icmp eq %"class.blink::SVGElement"* %75, %41
  br i1 %76, label %105, label %77

77:                                               ; preds = %49
  %78 = xor i32 %70, -1
  %79 = lshr i32 %70, 23
  %80 = add i32 %79, %78
  %81 = shl i32 %80, 12
  %82 = xor i32 %81, %80
  %83 = lshr i32 %82, 7
  %84 = xor i32 %83, %82
  %85 = shl i32 %84, 2
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 20
  %88 = xor i32 %87, %86
  %89 = or i32 %88, 1
  %90 = zext i32 %89 to i64
  br label %91

91:                                               ; preds = %96, %77
  %92 = phi %"class.blink::SVGElement"* [ %75, %77 ], [ %103, %96 ]
  %93 = phi i64 [ %72, %77 ], [ %100, %96 ]
  %94 = phi i64 [ 0, %77 ], [ %98, %96 ]
  %95 = icmp eq %"class.blink::SVGElement"* %92, null
  br i1 %95, label %110, label %96

96:                                               ; preds = %91
  %97 = icmp eq i64 %94, 0
  %98 = select i1 %97, i64 %90, i64 %94
  %99 = add i64 %98, %93
  %100 = and i64 %99, %51
  %101 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %44, i64 %100
  %102 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %102, align 8
  %104 = icmp eq %"class.blink::SVGElement"* %103, %41
  br i1 %104, label %105, label %91

105:                                              ; preds = %96, %49
  %106 = phi %"class.blink::WeakMember"* [ %73, %49 ], [ %101, %96 ]
  %107 = icmp eq %"class.blink::WeakMember"* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %105
  %109 = zext i32 %48 to i64
  br label %113

110:                                              ; preds = %91, %105, %40
  %111 = zext i32 %48 to i64
  %112 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %44, i64 %111
  br label %113

113:                                              ; preds = %110, %108
  %114 = phi i64 [ %109, %108 ], [ %111, %110 ]
  %115 = phi %"class.blink::WeakMember"* [ %106, %108 ], [ %112, %110 ]
  %116 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %44, i64 %114
  %117 = icmp eq %"class.blink::WeakMember"* %116, %115
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = bitcast %"class.blink::Element"* %36 to %"class.WTF::HashTable"*
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"* %119, %"class.blink::WeakMember"* %115) #13
  br label %120

120:                                              ; preds = %118, %113, %37
  %121 = load i32, i32* %33, align 4
  %122 = icmp ne i32 %121, 0
  %123 = xor i1 %35, %122
  br i1 %123, label %124, label %164

124:                                              ; preds = %120
  store %"class.blink::Element"* %26, %"class.blink::Element"** %23, align 8
  %125 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %26, i64 0, i32 0, i32 0
  %126 = call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %125) #13
  %127 = icmp eq %"class.blink::Element"* %126, null
  br i1 %127, label %128, label %24

128:                                              ; preds = %24, %124
  %129 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %4, align 8
  br label %130

130:                                              ; preds = %3, %128, %20
  %131 = phi %"class.blink::SVGElement"* [ %129, %128 ], [ %2, %20 ], [ %2, %3 ]
  %132 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE, align 8
  %133 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %131, i64 0, i32 0, i32 0, i32 0
  %134 = icmp eq %"class.blink::SVGElement"* %131, null
  br i1 %134, label %164, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %131, i64 0, i32 0, i32 0, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %137, 48
  %139 = icmp eq i32 %138, 32
  br i1 %139, label %140, label %164

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %132, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %133, i64 1, i32 2
  %144 = bitcast %"class.blink::Member"* %143 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %142, i64 0, i32 3, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %147, %149
  %151 = bitcast %"class.blink::SVGElement"* %131 to %"class.blink::SVGSVGElement"*
  br i1 %150, label %152, label %164

152:                                              ; preds = %140
  %153 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %154 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %154, i64 0, i32 2, i32 0, i32 0
  %156 = load %"class.blink::Document"*, %"class.blink::Document"** %155, align 8
  %157 = call dereferenceable(88) %"class.blink::SVGDocumentExtensions"* @_ZN5blink8Document19AccessSVGExtensionsEv(%"class.blink::Document"* %156) #13
  %158 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %4, align 8
  %159 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %158, i64 0, i32 1, i32 0, i32 0, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %163, label %162

162:                                              ; preds = %152
  call void @_ZN5blink21SVGDocumentExtensions39AddSVGRootWithRelativeLengthDescendentsEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"* %157, %"class.blink::SVGSVGElement"* nonnull %151) #13
  br label %164

163:                                              ; preds = %152
  call void @_ZN5blink21SVGDocumentExtensions42RemoveSVGRootWithRelativeLengthDescendentsEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"* %157, %"class.blink::SVGSVGElement"* nonnull %151) #13
  br label %164

164:                                              ; preds = %8, %120, %140, %130, %135, %163, %162
  ret void
}

declare void @_ZN5blink7Element11RemovedFromERNS_13ContainerNodeE(%"class.blink::Element"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement21RemoveInstanceMappingEPS0_(%"class.blink::SVGElement"* nocapture readonly, %"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %4, i64 0, i32 2, i32 0
  %6 = ptrtoint %"class.blink::SVGElement"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %7, align 8
  %9 = icmp eq %"class.blink::WeakMember"* %8, null
  %10 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %4, i64 0, i32 2, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  br i1 %9, label %73, label %12

12:                                               ; preds = %2
  %13 = add i32 %11, -1
  %14 = zext i32 %13 to i64
  %15 = shl i64 %6, 32
  %16 = xor i64 %15, -1
  %17 = add i64 %16, %6
  %18 = lshr i64 %17, 22
  %19 = xor i64 %18, %17
  %20 = shl i64 %19, 13
  %21 = xor i64 %20, -1
  %22 = add i64 %19, %21
  %23 = lshr i64 %22, 8
  %24 = xor i64 %23, %22
  %25 = mul i64 %24, 9
  %26 = lshr i64 %25, 15
  %27 = xor i64 %26, %25
  %28 = shl i64 %27, 27
  %29 = xor i64 %28, -1
  %30 = add i64 %27, %29
  %31 = lshr i64 %30, 31
  %32 = xor i64 %31, %30
  %33 = trunc i64 %32 to i32
  %34 = and i32 %13, %33
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %8, i64 %35
  %37 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %37, align 8
  %39 = icmp eq %"class.blink::SVGElement"* %38, %1
  br i1 %39, label %68, label %40

40:                                               ; preds = %12
  %41 = xor i32 %33, -1
  %42 = lshr i32 %33, 23
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %59, %40
  %55 = phi %"class.blink::SVGElement"* [ %38, %40 ], [ %66, %59 ]
  %56 = phi i64 [ %35, %40 ], [ %63, %59 ]
  %57 = phi i64 [ 0, %40 ], [ %61, %59 ]
  %58 = icmp eq %"class.blink::SVGElement"* %55, null
  br i1 %58, label %73, label %59

59:                                               ; preds = %54
  %60 = icmp eq i64 %57, 0
  %61 = select i1 %60, i64 %53, i64 %57
  %62 = add i64 %61, %56
  %63 = and i64 %62, %14
  %64 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %8, i64 %63
  %65 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %65, align 8
  %67 = icmp eq %"class.blink::SVGElement"* %66, %1
  br i1 %67, label %68, label %54

68:                                               ; preds = %59, %12
  %69 = phi %"class.blink::WeakMember"* [ %36, %12 ], [ %64, %59 ]
  %70 = icmp eq %"class.blink::WeakMember"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = zext i32 %11 to i64
  br label %76

73:                                               ; preds = %54, %68, %2
  %74 = zext i32 %11 to i64
  %75 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %8, i64 %74
  br label %76

76:                                               ; preds = %73, %71
  %77 = phi i64 [ %72, %71 ], [ %74, %73 ]
  %78 = phi %"class.blink::WeakMember"* [ %69, %71 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %8, i64 %77
  %80 = icmp eq %"class.blink::WeakMember"* %79, %78
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"* %82, %"class.blink::WeakMember"* %78) #13
  br label %83

83:                                               ; preds = %76, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement28RebuildAllIncomingReferencesEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.1914", align 8
  %3 = alloca %"struct.blink::SVGElement::SvgAttributeChangedParams", align 8
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %4, align 8
  %6 = icmp eq %"class.blink::SVGElementRareData"* %5, null
  br i1 %6, label %101, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %5, i64 0, i32 1
  %9 = bitcast %"class.blink::HeapVector.1914"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.blink::HeapVector.1914", %"class.blink::HeapVector.1914"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector.1914", %"class.blink::HeapVector.1914"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #13
  call void @_ZN3WTF12CopyToVectorIN5blink11HeapHashSetINS1_6MemberINS1_10SVGElementEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEENS1_10HeapVectorIS5_Lj0EEEEEvRKT_RT0_(%"class.blink::HeapHashSet.36"* dereferenceable(24) %8, %"class.blink::HeapVector.1914"* nonnull dereferenceable(16) %2)
  %12 = bitcast %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3, i64 0, i32 1
  %14 = bitcast %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kHrefAttrE to i64*), align 8
  %16 = bitcast %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3 to i64*
  store i64 %15, i64* %16, align 8
  store i32 0, i32* %13, align 8
  %17 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %10, align 8
  %18 = load i32, i32* %11, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %17, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.blink::HeapHashSet.36", %"class.blink::HeapHashSet.36"* %8, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %26

25:                                               ; preds = %98, %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  br label %101

26:                                               ; preds = %22, %98
  %27 = phi %"class.blink::Member.31"* [ %17, %22 ], [ %99, %98 ]
  %28 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %28, align 8
  %30 = ptrtoint %"class.blink::SVGElement"* %29 to i64
  %31 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %23, align 8
  %32 = icmp eq %"class.blink::Member.31"* %31, null
  br i1 %32, label %98, label %33

33:                                               ; preds = %26
  %34 = load i32, i32* %24, align 8
  %35 = add i32 %34, -1
  %36 = zext i32 %35 to i64
  %37 = shl i64 %30, 32
  %38 = xor i64 %37, -1
  %39 = add i64 %38, %30
  %40 = lshr i64 %39, 22
  %41 = xor i64 %40, %39
  %42 = shl i64 %41, 13
  %43 = xor i64 %42, -1
  %44 = add i64 %41, %43
  %45 = lshr i64 %44, 8
  %46 = xor i64 %45, %44
  %47 = mul i64 %46, 9
  %48 = lshr i64 %47, 15
  %49 = xor i64 %48, %47
  %50 = shl i64 %49, 27
  %51 = xor i64 %50, -1
  %52 = add i64 %49, %51
  %53 = lshr i64 %52, 31
  %54 = xor i64 %53, %52
  %55 = trunc i64 %54 to i32
  %56 = and i32 %35, %55
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %31, i64 %57
  %59 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %59, align 8
  %61 = icmp eq %"class.blink::SVGElement"* %60, %29
  br i1 %61, label %90, label %62

62:                                               ; preds = %33
  %63 = xor i32 %55, -1
  %64 = lshr i32 %55, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %76

76:                                               ; preds = %81, %62
  %77 = phi %"class.blink::SVGElement"* [ %60, %62 ], [ %88, %81 ]
  %78 = phi i64 [ %57, %62 ], [ %85, %81 ]
  %79 = phi i64 [ 0, %62 ], [ %83, %81 ]
  %80 = icmp eq %"class.blink::SVGElement"* %77, null
  br i1 %80, label %98, label %81

81:                                               ; preds = %76
  %82 = icmp eq i64 %79, 0
  %83 = select i1 %82, i64 %75, i64 %79
  %84 = add i64 %83, %78
  %85 = and i64 %84, %36
  %86 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %31, i64 %85
  %87 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %87, align 8
  %89 = icmp eq %"class.blink::SVGElement"* %88, %29
  br i1 %89, label %90, label %76

90:                                               ; preds = %81, %33
  %91 = phi %"class.blink::Member.31"* [ %58, %33 ], [ %86, %81 ]
  %92 = icmp eq %"class.blink::Member.31"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %90
  %94 = bitcast %"class.blink::SVGElement"* %29 to void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)***
  %95 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)**, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %95, i64 163
  %97 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %96, align 8
  call void %97(%"class.blink::SVGElement"* %29, %"struct.blink::SVGElement::SvgAttributeChangedParams"* nonnull dereferenceable(16) %3) #13
  br label %98

98:                                               ; preds = %76, %90, %26, %93
  %99 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %27, i64 1
  %100 = icmp eq %"class.blink::Member.31"* %99, %20
  br i1 %100, label %25, label %26

101:                                              ; preds = %1, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement27RemoveAllIncomingReferencesEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %159, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashSet.39", %"class.WTF::HashSet.39"* %6, i64 0, i32 0, i32 0
  %11 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %11, i64 %14
  br i1 %9, label %64, label %16

16:                                               ; preds = %5
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"class.blink::Member.31"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"class.blink::Member.31"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %19, i64 1
  %24 = icmp eq %"class.blink::Member.31"* %23, %15
  br i1 %24, label %64, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"class.blink::Member.31"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"class.blink::Member.31"* %26, %15
  br i1 %27, label %64, label %28

28:                                               ; preds = %25
  %29 = ptrtoint %"class.blink::SVGElement"* %0 to i64
  %30 = shl i64 %29, 32
  %31 = xor i64 %30, -1
  %32 = add i64 %31, %29
  %33 = lshr i64 %32, 22
  %34 = xor i64 %33, %32
  %35 = shl i64 %34, 13
  %36 = xor i64 %35, -1
  %37 = add i64 %34, %36
  %38 = lshr i64 %37, 8
  %39 = xor i64 %38, %37
  %40 = mul i64 %39, 9
  %41 = lshr i64 %40, 15
  %42 = xor i64 %41, %40
  %43 = shl i64 %42, 27
  %44 = xor i64 %43, -1
  %45 = add i64 %42, %44
  %46 = lshr i64 %45, 31
  %47 = xor i64 %46, %45
  %48 = trunc i64 %47 to i32
  %49 = xor i32 %48, -1
  %50 = lshr i32 %48, 23
  %51 = add i32 %50, %49
  %52 = shl i32 %51, 12
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 7
  %55 = xor i32 %54, %53
  %56 = shl i32 %55, 2
  %57 = xor i32 %56, %55
  %58 = lshr i32 %57, 20
  %59 = xor i32 %58, %57
  %60 = or i32 %59, 1
  %61 = zext i32 %60 to i64
  br label %70

62:                                               ; preds = %147, %157, %154
  %63 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %10, align 8
  br label %64

64:                                               ; preds = %22, %5, %62, %25
  %65 = phi %"class.blink::Member.31"* [ %63, %62 ], [ %11, %25 ], [ %11, %5 ], [ %11, %22 ]
  %66 = icmp eq %"class.blink::Member.31"* %65, null
  br i1 %66, label %159, label %67

67:                                               ; preds = %64
  %68 = bitcast %"class.blink::Member.31"* %65 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %68) #13
  %69 = bitcast %"class.WTF::HashSet.39"* %6 to i64*
  store atomic i64 0, i64* %69 monotonic, align 8
  store i32 0, i32* %12, align 8
  store i32 0, i32* %7, align 4
  br label %159

70:                                               ; preds = %28, %157
  %71 = phi %"class.blink::Member.31"* [ %26, %28 ], [ %151, %157 ]
  %72 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %73, i64 0, i32 3
  %75 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %75, align 8
  %77 = icmp eq %"class.blink::SVGElementRareData"* %76, null
  br i1 %77, label %78, label %102

78:                                               ; preds = %70
  %79 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 20, i1 false) #13
  %80 = getelementptr inbounds i8, i8* %79, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 20, i1 false) #13
  %81 = getelementptr inbounds i8, i8* %79, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 20, i1 false) #13
  %82 = getelementptr inbounds i8, i8* %79, i64 72
  %83 = getelementptr inbounds i8, i8* %79, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #13
  %84 = load i8, i8* %83, align 8
  %85 = and i8 %84, -8
  store i8 %85, i8* %83, align 8
  %86 = getelementptr inbounds i8, i8* %79, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 20, i1 false) #13
  %87 = getelementptr inbounds i8, i8* %79, i64 128
  %88 = getelementptr inbounds i8, i8* %79, i64 144
  %89 = bitcast i8* %88 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %89) #13
  %90 = getelementptr inbounds i8, i8* %79, i64 -4
  %91 = bitcast i8* %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = or i16 %92, 1
  store atomic i16 %93, i16* %91 release, align 2
  %94 = ptrtoint i8* %79 to i64
  %95 = bitcast %"class.blink::Member.32"* %74 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  %98 = bitcast i8* %79 to %"class.blink::SVGElementRareData"*
  br i1 %97, label %102, label %99

99:                                               ; preds = %78
  %100 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %79) #13
  %101 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %75, align 8
  br label %102

102:                                              ; preds = %70, %78, %99
  %103 = phi %"class.blink::SVGElementRareData"* [ %76, %70 ], [ %101, %99 ], [ %98, %78 ]
  %104 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %104, align 8
  %106 = icmp eq %"class.blink::Member.31"* %105, null
  %107 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %103, i64 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  br i1 %106, label %137, label %109

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  %111 = zext i32 %110 to i64
  %112 = and i32 %110, %48
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %105, i64 %113
  %115 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %115, align 8
  %117 = icmp eq %"class.blink::SVGElement"* %116, %0
  br i1 %117, label %132, label %118

118:                                              ; preds = %109, %123
  %119 = phi %"class.blink::SVGElement"* [ %130, %123 ], [ %116, %109 ]
  %120 = phi i64 [ %127, %123 ], [ %113, %109 ]
  %121 = phi i64 [ %125, %123 ], [ 0, %109 ]
  %122 = icmp eq %"class.blink::SVGElement"* %119, null
  br i1 %122, label %137, label %123

123:                                              ; preds = %118
  %124 = icmp eq i64 %121, 0
  %125 = select i1 %124, i64 %61, i64 %121
  %126 = add i64 %125, %120
  %127 = and i64 %126, %111
  %128 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %105, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %129, align 8
  %131 = icmp eq %"class.blink::SVGElement"* %130, %0
  br i1 %131, label %132, label %118

132:                                              ; preds = %123, %109
  %133 = phi %"class.blink::Member.31"* [ %114, %109 ], [ %128, %123 ]
  %134 = icmp eq %"class.blink::Member.31"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = zext i32 %108 to i64
  br label %140

137:                                              ; preds = %118, %132, %102
  %138 = zext i32 %108 to i64
  %139 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %105, i64 %138
  br label %140

140:                                              ; preds = %137, %135
  %141 = phi i64 [ %136, %135 ], [ %138, %137 ]
  %142 = phi %"class.blink::Member.31"* [ %133, %135 ], [ %139, %137 ]
  %143 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %105, i64 %141
  %144 = icmp eq %"class.blink::Member.31"* %143, %142
  br i1 %144, label %147, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.40"* %146, %"class.blink::Member.31"* %142) #13
  br label %147

147:                                              ; preds = %140, %145
  %148 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %71, i64 1
  %149 = icmp eq %"class.blink::Member.31"* %148, %15
  br i1 %149, label %62, label %150

150:                                              ; preds = %147, %154
  %151 = phi %"class.blink::Member.31"* [ %155, %154 ], [ %148, %147 ]
  %152 = bitcast %"class.blink::Member.31"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  switch i64 %153, label %157 [
    i64 -1, label %154
    i64 0, label %154
  ]

154:                                              ; preds = %150, %150
  %155 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %151, i64 1
  %156 = icmp eq %"class.blink::Member.31"* %155, %15
  br i1 %156, label %62, label %150

157:                                              ; preds = %150
  %158 = icmp eq %"class.blink::Member.31"* %151, %15
  br i1 %158, label %62, label %70

159:                                              ; preds = %1, %67, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 6
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %118

10:                                               ; preds = %5, %1
  %11 = tail call dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %0)
  %12 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %11, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %118, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %11, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %17, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %15, %27
  %24 = phi %"class.blink::WeakMember"* [ %28, %27 ], [ %17, %15 ]
  %25 = bitcast %"class.blink::WeakMember"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  switch i64 %26, label %30 [
    i64 -1, label %27
    i64 0, label %27
  ]

27:                                               ; preds = %23, %23
  %28 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %24, i64 1
  %29 = icmp eq %"class.blink::WeakMember"* %28, %21
  br i1 %29, label %36, label %23

30:                                               ; preds = %23, %15
  %31 = phi %"class.blink::WeakMember"* [ %17, %15 ], [ %24, %23 ]
  %32 = icmp eq %"class.blink::WeakMember"* %31, %21
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE, align 8
  %35 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  br label %39

36:                                               ; preds = %27, %106, %116, %113, %30
  %37 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %38 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %37, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable"* %38) #13
  br label %118

39:                                               ; preds = %33, %116
  %40 = phi %"class.blink::WeakMember"* [ %31, %33 ], [ %110, %116 ]
  %41 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %42, i64 0, i32 3
  %44 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %44, align 8
  %46 = icmp eq %"class.blink::SVGElementRareData"* %45, null
  br i1 %46, label %47, label %71

47:                                               ; preds = %39
  %48 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 20, i1 false) #13
  %49 = getelementptr inbounds i8, i8* %48, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 20, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %48, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 20, i1 false) #13
  %51 = getelementptr inbounds i8, i8* %48, i64 72
  %52 = getelementptr inbounds i8, i8* %48, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #13
  %53 = load i8, i8* %52, align 8
  %54 = and i8 %53, -8
  store i8 %54, i8* %52, align 8
  %55 = getelementptr inbounds i8, i8* %48, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 20, i1 false) #13
  %56 = getelementptr inbounds i8, i8* %48, i64 128
  %57 = getelementptr inbounds i8, i8* %48, i64 144
  %58 = bitcast i8* %57 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %58) #13
  %59 = getelementptr inbounds i8, i8* %48, i64 -4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = or i16 %61, 1
  store atomic i16 %62, i16* %60 release, align 2
  %63 = ptrtoint i8* %48 to i64
  %64 = bitcast %"class.blink::Member.32"* %43 to i64*
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  %67 = bitcast i8* %48 to %"class.blink::SVGElementRareData"*
  br i1 %66, label %71, label %68

68:                                               ; preds = %47
  %69 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  %70 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %44, align 8
  br label %71

71:                                               ; preds = %68, %47, %39
  %72 = phi %"class.blink::SVGElementRareData"* [ %45, %39 ], [ %70, %68 ], [ %67, %47 ]
  %73 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %72, i64 0, i32 3
  %74 = bitcast %"class.blink::Member.31"* %73 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %71
  %78 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #13
  br label %79

79:                                               ; preds = %71, %77
  %80 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %42, i64 0, i32 0, i32 0, i32 0
  %81 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %80) #13
  %82 = icmp eq %"class.blink::ShadowRoot"* %81, null
  br i1 %82, label %106, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %81, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast %"class.blink::Node"** %84 to %"class.blink::Element"**
  %86 = load %"class.blink::Element"*, %"class.blink::Element"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %86, i64 0, i32 0, i32 0
  %88 = icmp eq %"class.blink::Element"* %86, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 48
  %93 = icmp eq i32 %92, 32
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %96 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 1, i32 2
  %97 = bitcast %"class.blink::Member"* %96 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %98 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 3, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 3, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %100, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %94
  %105 = bitcast %"class.blink::Element"* %86 to %"class.blink::SVGUseElement"*
  tail call void @_ZN5blink13SVGUseElement20InvalidateShadowTreeEv(%"class.blink::SVGUseElement"* nonnull %105) #13
  br label %106

106:                                              ; preds = %94, %89, %83, %79, %104
  %107 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %40, i64 1
  %108 = icmp eq %"class.blink::WeakMember"* %107, %21
  br i1 %108, label %36, label %109

109:                                              ; preds = %106, %113
  %110 = phi %"class.blink::WeakMember"* [ %114, %113 ], [ %107, %106 ]
  %111 = bitcast %"class.blink::WeakMember"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  switch i64 %112, label %116 [
    i64 -1, label %113
    i64 0, label %113
  ]

113:                                              ; preds = %109, %109
  %114 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %110, i64 1
  %115 = icmp eq %"class.blink::WeakMember"* %114, %21
  br i1 %115, label %36, label %109

116:                                              ; preds = %109
  %117 = icmp eq %"class.blink::WeakMember"* %110, %21
  br i1 %117, label %36, label %39

118:                                              ; preds = %5, %36, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::Element"* %3, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56) %1) #13
  tail call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %0)
  ret void
}

declare void @_ZN5blink7Element15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::Element"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink10SVGElement32CssPropertyIdForSVGAttributeNameEPKNS_16ExecutionContextERKNS_13QualifiedNameE(%"class.blink::ExecutionContext"*, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca [58 x %"class.blink::QualifiedName"*], align 16
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::StringImpl"*, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %278

11:                                               ; preds = %2
  %12 = load %"class.WTF::HashMap.1796"*, %"class.WTF::HashMap.1796"** @_ZZN5blink10SVGElement32CssPropertyIdForSVGAttributeNameEPKNS_16ExecutionContextERKNS_13QualifiedNameEE23property_name_to_id_map, align 8
  %13 = icmp eq %"class.WTF::HashMap.1796"* %12, null
  br i1 %13, label %14, label %223

14:                                               ; preds = %11
  %15 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([218 x i8], [218 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIPNS_10StringImplEN5blink13CSSPropertyIDENS_10StringHashENS_10HashTraitsIS3_EENS7_IS5_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #13
  store i8* %15, i8** bitcast (%"class.WTF::HashMap.1796"** @_ZZN5blink10SVGElement32CssPropertyIdForSVGAttributeNameEPKNS_16ExecutionContextERKNS_13QualifiedNameEE23property_name_to_id_map to i8**), align 8
  %16 = bitcast [58 x %"class.blink::QualifiedName"*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 464, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 464, i1 false)
  %17 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names22kAlignmentBaselineAttrE to i64*), align 8
  %18 = bitcast [58 x %"class.blink::QualifiedName"*]* %3 to i64*
  store i64 %17, i64* %18, align 16
  %19 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 1
  %20 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kBaselineShiftAttrE to i64*), align 8
  %21 = bitcast %"class.blink::QualifiedName"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 2
  %23 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names22kBufferedRenderingAttrE to i64*), align 8
  %24 = bitcast %"class.blink::QualifiedName"** %22 to i64*
  store i64 %23, i64* %24, align 16
  %25 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 3
  %26 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kClipAttrE to i64*), align 8
  %27 = bitcast %"class.blink::QualifiedName"** %25 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 4
  %29 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kClipPathAttrE to i64*), align 8
  %30 = bitcast %"class.blink::QualifiedName"** %28 to i64*
  store i64 %29, i64* %30, align 16
  %31 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 5
  %32 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kClipRuleAttrE to i64*), align 8
  %33 = bitcast %"class.blink::QualifiedName"** %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 6
  %35 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names10kColorAttrE to i64*), align 8
  %36 = bitcast %"class.blink::QualifiedName"** %34 to i64*
  store i64 %35, i64* %36, align 16
  %37 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 7
  %38 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names23kColorInterpolationAttrE to i64*), align 8
  %39 = bitcast %"class.blink::QualifiedName"** %37 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 8
  %41 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names30kColorInterpolationFiltersAttrE to i64*), align 8
  %42 = bitcast %"class.blink::QualifiedName"** %40 to i64*
  store i64 %41, i64* %42, align 16
  %43 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 9
  %44 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kColorRenderingAttrE to i64*), align 8
  %45 = bitcast %"class.blink::QualifiedName"** %43 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 10
  %47 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kCursorAttrE to i64*), align 8
  %48 = bitcast %"class.blink::QualifiedName"** %46 to i64*
  store i64 %47, i64* %48, align 16
  %49 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 11
  %50 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kDirectionAttrE to i64*), align 8
  %51 = bitcast %"class.blink::QualifiedName"** %49 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 12
  %53 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kDisplayAttrE to i64*), align 8
  %54 = bitcast %"class.blink::QualifiedName"** %52 to i64*
  store i64 %53, i64* %54, align 16
  %55 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 13
  %56 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kDominantBaselineAttrE to i64*), align 8
  %57 = bitcast %"class.blink::QualifiedName"** %55 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 14
  %59 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kFillAttrE to i64*), align 8
  %60 = bitcast %"class.blink::QualifiedName"** %58 to i64*
  store i64 %59, i64* %60, align 16
  %61 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 15
  %62 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kFillOpacityAttrE to i64*), align 8
  %63 = bitcast %"class.blink::QualifiedName"** %61 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 16
  %65 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kFillRuleAttrE to i64*), align 8
  %66 = bitcast %"class.blink::QualifiedName"** %64 to i64*
  store i64 %65, i64* %66, align 16
  %67 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 17
  %68 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kFilterAttrE to i64*), align 8
  %69 = bitcast %"class.blink::QualifiedName"** %67 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 18
  %71 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kFloodColorAttrE to i64*), align 8
  %72 = bitcast %"class.blink::QualifiedName"** %70 to i64*
  store i64 %71, i64* %72, align 16
  %73 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 19
  %74 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kFloodOpacityAttrE to i64*), align 8
  %75 = bitcast %"class.blink::QualifiedName"** %73 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 20
  %77 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kFontFamilyAttrE to i64*), align 8
  %78 = bitcast %"class.blink::QualifiedName"** %76 to i64*
  store i64 %77, i64* %78, align 16
  %79 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 21
  %80 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kFontSizeAttrE to i64*), align 8
  %81 = bitcast %"class.blink::QualifiedName"** %79 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 22
  %83 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kFontStretchAttrE to i64*), align 8
  %84 = bitcast %"class.blink::QualifiedName"** %82 to i64*
  store i64 %83, i64* %84, align 16
  %85 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 23
  %86 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kFontStyleAttrE to i64*), align 8
  %87 = bitcast %"class.blink::QualifiedName"** %85 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 24
  %89 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kFontVariantAttrE to i64*), align 8
  %90 = bitcast %"class.blink::QualifiedName"** %88 to i64*
  store i64 %89, i64* %90, align 16
  %91 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 25
  %92 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kFontWeightAttrE to i64*), align 8
  %93 = bitcast %"class.blink::QualifiedName"** %91 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 26
  %95 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kImageRenderingAttrE to i64*), align 8
  %96 = bitcast %"class.blink::QualifiedName"** %94 to i64*
  store i64 %95, i64* %96, align 16
  %97 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 27
  %98 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kLetterSpacingAttrE to i64*), align 8
  %99 = bitcast %"class.blink::QualifiedName"** %97 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 28
  %101 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kLightingColorAttrE to i64*), align 8
  %102 = bitcast %"class.blink::QualifiedName"** %100 to i64*
  store i64 %101, i64* %102, align 16
  %103 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 29
  %104 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kMarkerEndAttrE to i64*), align 8
  %105 = bitcast %"class.blink::QualifiedName"** %103 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 30
  %107 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kMarkerMidAttrE to i64*), align 8
  %108 = bitcast %"class.blink::QualifiedName"** %106 to i64*
  store i64 %107, i64* %108, align 16
  %109 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 31
  %110 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kMarkerStartAttrE to i64*), align 8
  %111 = bitcast %"class.blink::QualifiedName"** %109 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 32
  %113 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kMaskAttrE to i64*), align 8
  %114 = bitcast %"class.blink::QualifiedName"** %112 to i64*
  store i64 %113, i64* %114, align 16
  %115 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 33
  %116 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kMaskTypeAttrE to i64*), align 8
  %117 = bitcast %"class.blink::QualifiedName"** %115 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 34
  %119 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kOpacityAttrE to i64*), align 8
  %120 = bitcast %"class.blink::QualifiedName"** %118 to i64*
  store i64 %119, i64* %120, align 16
  %121 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 35
  %122 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kOverflowAttrE to i64*), align 8
  %123 = bitcast %"class.blink::QualifiedName"** %121 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 36
  %125 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kPaintOrderAttrE to i64*), align 8
  %126 = bitcast %"class.blink::QualifiedName"** %124 to i64*
  store i64 %125, i64* %126, align 16
  %127 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 37
  %128 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kPointerEventsAttrE to i64*), align 8
  %129 = bitcast %"class.blink::QualifiedName"** %127 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 38
  %131 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kShapeRenderingAttrE to i64*), align 8
  %132 = bitcast %"class.blink::QualifiedName"** %130 to i64*
  store i64 %131, i64* %132, align 16
  %133 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 39
  %134 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kStopColorAttrE to i64*), align 8
  %135 = bitcast %"class.blink::QualifiedName"** %133 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 40
  %137 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kStopOpacityAttrE to i64*), align 8
  %138 = bitcast %"class.blink::QualifiedName"** %136 to i64*
  store i64 %137, i64* %138, align 16
  %139 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 41
  %140 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kStrokeAttrE to i64*), align 8
  %141 = bitcast %"class.blink::QualifiedName"** %139 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 42
  %143 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names20kStrokeDasharrayAttrE to i64*), align 8
  %144 = bitcast %"class.blink::QualifiedName"** %142 to i64*
  store i64 %143, i64* %144, align 16
  %145 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 43
  %146 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kStrokeDashoffsetAttrE to i64*), align 8
  %147 = bitcast %"class.blink::QualifiedName"** %145 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 44
  %149 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kStrokeLinecapAttrE to i64*), align 8
  %150 = bitcast %"class.blink::QualifiedName"** %148 to i64*
  store i64 %149, i64* %150, align 16
  %151 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 45
  %152 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kStrokeLinejoinAttrE to i64*), align 8
  %153 = bitcast %"class.blink::QualifiedName"** %151 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 46
  %155 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kStrokeMiterlimitAttrE to i64*), align 8
  %156 = bitcast %"class.blink::QualifiedName"** %154 to i64*
  store i64 %155, i64* %156, align 16
  %157 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 47
  %158 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kStrokeOpacityAttrE to i64*), align 8
  %159 = bitcast %"class.blink::QualifiedName"** %157 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 48
  %161 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kStrokeWidthAttrE to i64*), align 8
  %162 = bitcast %"class.blink::QualifiedName"** %160 to i64*
  store i64 %161, i64* %162, align 16
  %163 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 49
  %164 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kTextAnchorAttrE to i64*), align 8
  %165 = bitcast %"class.blink::QualifiedName"** %163 to i64*
  store i64 %164, i64* %165, align 8
  %166 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 50
  %167 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kTextDecorationAttrE to i64*), align 8
  %168 = bitcast %"class.blink::QualifiedName"** %166 to i64*
  store i64 %167, i64* %168, align 16
  %169 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 51
  %170 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kTextRenderingAttrE to i64*), align 8
  %171 = bitcast %"class.blink::QualifiedName"** %169 to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 52
  %173 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names20kTransformOriginAttrE to i64*), align 8
  %174 = bitcast %"class.blink::QualifiedName"** %172 to i64*
  store i64 %173, i64* %174, align 16
  %175 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 53
  %176 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kUnicodeBidiAttrE to i64*), align 8
  %177 = bitcast %"class.blink::QualifiedName"** %175 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 54
  %179 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kVectorEffectAttrE to i64*), align 8
  %180 = bitcast %"class.blink::QualifiedName"** %178 to i64*
  store i64 %179, i64* %180, align 16
  %181 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 55
  %182 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kVisibilityAttrE to i64*), align 8
  %183 = bitcast %"class.blink::QualifiedName"** %181 to i64*
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 56
  %185 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kWordSpacingAttrE to i64*), align 8
  %186 = bitcast %"class.blink::QualifiedName"** %184 to i64*
  store i64 %185, i64* %186, align 16
  %187 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 57
  %188 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kWritingModeAttrE to i64*), align 8
  %189 = bitcast %"class.blink::QualifiedName"** %187 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast i32* %4 to i8*
  %191 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  %192 = bitcast %"class.WTF::StringImpl"** %5 to i64*
  br label %196

193:                                              ; preds = %220
  call void @llvm.lifetime.end.p0i8(i64 464, i8* nonnull %16) #13
  %194 = load %"class.WTF::HashMap.1796"*, %"class.WTF::HashMap.1796"** @_ZZN5blink10SVGElement32CssPropertyIdForSVGAttributeNameEPKNS_16ExecutionContextERKNS_13QualifiedNameEE23property_name_to_id_map, align 8
  %195 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  br label %223

196:                                              ; preds = %220, %14
  %197 = phi i64 [ 0, %14 ], [ %221, %220 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %190) #13
  store i32 -1431655766, i32* %4, align 4
  %198 = getelementptr inbounds [58 x %"class.blink::QualifiedName"*], [58 x %"class.blink::QualifiedName"*]* %3, i64 0, i64 %197
  %199 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %198, align 8
  %200 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %199, i64 0, i32 0, i32 0
  %201 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %201, i64 0, i32 3, i32 0
  %203 = call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %0, %"class.WTF::String"* dereferenceable(8) %202) #13
  store i32 %203, i32* %4, align 4
  %204 = load %"class.WTF::HashMap.1796"*, %"class.WTF::HashMap.1796"** @_ZZN5blink10SVGElement32CssPropertyIdForSVGAttributeNameEPKNS_16ExecutionContextERKNS_13QualifiedNameEE23property_name_to_id_map, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #13
  %205 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %198, align 8
  %206 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %205, i64 0, i32 0, i32 0
  %207 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %207, i64 0, i32 3, i32 0, i32 0, i32 0
  %209 = bitcast %"class.WTF::StringImpl"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  store i64 %210, i64* %192, align 8
  %211 = getelementptr inbounds %"class.WTF::HashMap.1796", %"class.WTF::HashMap.1796"* %204, i64 0, i32 0
  %212 = call { %"struct.WTF::KeyValuePair.1800"*, i8 } @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EES2_RS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.1797"* %211, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %4) #13
  %213 = extractvalue { %"struct.WTF::KeyValuePair.1800"*, i8 } %212, 1
  %214 = and i8 %213, 1
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %196
  %217 = extractvalue { %"struct.WTF::KeyValuePair.1800"*, i8 } %212, 0
  %218 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %217, i64 0, i32 1
  %219 = load i32, i32* %4, align 4
  store i32 %219, i32* %218, align 4
  br label %220

220:                                              ; preds = %196, %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190) #13
  %221 = add nuw nsw i64 %197, 1
  %222 = icmp eq i64 %221, 58
  br i1 %222, label %193, label %196

223:                                              ; preds = %11, %193
  %224 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %7, %11 ], [ %195, %193 ]
  %225 = phi %"class.WTF::HashMap.1796"* [ %12, %11 ], [ %194, %193 ]
  %226 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %224, i64 0, i32 3, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = getelementptr inbounds %"class.WTF::HashMap.1796", %"class.WTF::HashMap.1796"* %225, i64 0, i32 0, i32 0
  %229 = load %"struct.WTF::KeyValuePair.1800"*, %"struct.WTF::KeyValuePair.1800"** %228, align 8
  %230 = icmp eq %"struct.WTF::KeyValuePair.1800"* %229, null
  br i1 %230, label %278, label %231

231:                                              ; preds = %223
  %232 = getelementptr inbounds %"class.WTF::HashMap.1796", %"class.WTF::HashMap.1796"* %225, i64 0, i32 0, i32 1
  %233 = load i32, i32* %232, align 8
  %234 = add i32 %233, -1
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = lshr i32 %237, 8
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %231
  %241 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %227) #13
  br label %242

242:                                              ; preds = %240, %231
  %243 = phi i32 [ %241, %240 ], [ %238, %231 ]
  %244 = and i32 %243, %234
  %245 = zext i32 %244 to i64
  %246 = xor i32 %243, -1
  %247 = lshr i32 %243, 23
  %248 = add i32 %247, %246
  %249 = shl i32 %248, 12
  %250 = xor i32 %249, %248
  %251 = lshr i32 %250, 7
  %252 = xor i32 %251, %250
  %253 = shl i32 %252, 2
  %254 = xor i32 %253, %252
  %255 = lshr i32 %254, 20
  %256 = xor i32 %255, %254
  %257 = or i32 %256, 1
  %258 = zext i32 %257 to i64
  br label %259

259:                                              ; preds = %268, %242
  %260 = phi i64 [ 0, %242 ], [ %270, %268 ]
  %261 = phi i64 [ %245, %242 ], [ %272, %268 ]
  %262 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %229, i64 %261
  %263 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %262, i64 0, i32 0
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = ptrtoint %"class.WTF::StringImpl"* %264 to i64
  switch i64 %265, label %266 [
    i64 0, label %278
    i64 -1, label %268
  ]

266:                                              ; preds = %259
  %267 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %264, %"class.WTF::StringImpl"* %227) #13
  br i1 %267, label %273, label %268

268:                                              ; preds = %266, %259
  %269 = icmp eq i64 %260, 0
  %270 = select i1 %269, i64 %258, i64 %260
  %271 = add i64 %270, %261
  %272 = and i64 %271, %235
  br label %259

273:                                              ; preds = %266
  %274 = icmp eq %"struct.WTF::KeyValuePair.1800"* %262, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %273
  %276 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %229, i64 %261, i32 1
  %277 = load i32, i32* %276, align 4
  br label %278

278:                                              ; preds = %259, %223, %275, %273, %2
  %279 = phi i32 [ 0, %2 ], [ %277, %275 ], [ 0, %273 ], [ 0, %223 ], [ 0, %259 ]
  ret i32 %279
}

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink21SVGDocumentExtensions39AddSVGRootWithRelativeLengthDescendentsEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"*, %"class.blink::SVGSVGElement"*) local_unnamed_addr #1

declare void @_ZN5blink21SVGDocumentExtensions42RemoveSVGRootWithRelativeLengthDescendentsEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"*, %"class.blink::SVGSVGElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement31InvalidateRelativeLengthClientsEPNS_18SubtreeLayoutScopeE(%"class.blink::SVGElement"*, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 256
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %82, label %7

7:                                                ; preds = %2
  %8 = and i32 %4, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %9, label %15, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %13 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %13, i64 0, i32 1, i32 0, i32 0
  br label %17

15:                                               ; preds = %7
  %16 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi %"class.blink::NodeRenderingData"** [ %14, %11 ], [ %16, %15 ]
  %19 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %19, i64 0, i32 1
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = icmp eq %"class.blink::LayoutObject"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::LayoutObject"* %21 to i1 (%"class.blink::LayoutObject"*, i32)***
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* nonnull %21, i32 66) #13
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = bitcast %"class.blink::LayoutObject"* %21 to %"class.blink::LayoutSVGResourceContainer"*
  tail call void @_ZN5blink26LayoutSVGResourceContainer31InvalidateCacheAndMarkForLayoutEPKcPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutSVGResourceContainer"* nonnull %34, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kSizeChangedE, i64 0, i64 0), %"class.blink::SubtreeLayoutScope"* %1) #13
  br label %42

35:                                               ; preds = %23, %27
  %36 = bitcast %"class.blink::SVGElement"* %0 to i1 (%"class.blink::SVGElement"*)***
  %37 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %37, i64 166
  %39 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::SVGElement"* %0) #13
  br i1 %40, label %41, label %42

41:                                               ; preds = %35
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %21, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason8kUnknownE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* %1) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %21, i8 zeroext 3) #13
  br label %42

42:                                               ; preds = %17, %33, %41, %35
  %43 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %47, i64 %50
  br i1 %45, label %82, label %52

52:                                               ; preds = %42
  %53 = icmp eq i32 %49, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %52, %58
  %55 = phi %"class.blink::WeakMember"* [ %59, %58 ], [ %47, %52 ]
  %56 = bitcast %"class.blink::WeakMember"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  switch i64 %57, label %61 [
    i64 -1, label %58
    i64 0, label %58
  ]

58:                                               ; preds = %54, %54
  %59 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %55, i64 1
  %60 = icmp eq %"class.blink::WeakMember"* %59, %51
  br i1 %60, label %82, label %54

61:                                               ; preds = %54, %52
  %62 = phi %"class.blink::WeakMember"* [ %47, %52 ], [ %55, %54 ]
  %63 = icmp eq %"class.blink::WeakMember"* %62, %51
  br i1 %63, label %82, label %64

64:                                               ; preds = %61, %80
  %65 = phi %"class.blink::WeakMember"* [ %74, %80 ], [ %62, %61 ]
  %66 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %66, align 8
  %68 = icmp eq %"class.blink::SVGElement"* %67, %0
  br i1 %68, label %70, label %69

69:                                               ; preds = %64
  tail call void @_ZN5blink10SVGElement31InvalidateRelativeLengthClientsEPNS_18SubtreeLayoutScopeE(%"class.blink::SVGElement"* %67, %"class.blink::SubtreeLayoutScope"* %1)
  br label %70

70:                                               ; preds = %64, %69
  %71 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %65, i64 1
  %72 = icmp eq %"class.blink::WeakMember"* %71, %51
  br i1 %72, label %82, label %73

73:                                               ; preds = %70, %77
  %74 = phi %"class.blink::WeakMember"* [ %78, %77 ], [ %71, %70 ]
  %75 = bitcast %"class.blink::WeakMember"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  switch i64 %76, label %80 [
    i64 -1, label %77
    i64 0, label %77
  ]

77:                                               ; preds = %73, %73
  %78 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %74, i64 1
  %79 = icmp eq %"class.blink::WeakMember"* %78, %51
  br i1 %79, label %82, label %73

80:                                               ; preds = %73
  %81 = icmp eq %"class.blink::WeakMember"* %74, %51
  br i1 %81, label %82, label %64

82:                                               ; preds = %58, %70, %80, %77, %42, %61, %2
  ret void
}

declare void @_ZN5blink26LayoutSVGResourceContainer31InvalidateCacheAndMarkForLayoutEPKcPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutSVGResourceContainer"*, i8*, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::SVGSVGElement"* @_ZNK5blink10SVGElement15ownerSVGElementEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = bitcast %"class.blink::Node"** %2 to %"class.blink::ContainerNode"**
  %4 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %3, align 8
  %5 = icmp eq %"class.blink::ContainerNode"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE, align 8
  %8 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %7, i64 0, i32 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %6, %29
  %10 = phi %"class.blink::ContainerNode"* [ %4, %6 ], [ %32, %29 ]
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 32
  br i1 %14, label %15, label %29

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1, i32 2
  %19 = bitcast %"class.blink::Member"* %18 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %22, %24
  %26 = bitcast %"class.blink::ContainerNode"* %10 to %"class.blink::SVGSVGElement"*
  %27 = select i1 %25, %"class.blink::SVGSVGElement"* %26, %"class.blink::SVGSVGElement"* null
  %28 = icmp eq %"class.blink::SVGSVGElement"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %9, %15
  %30 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.blink::Node"** %30 to %"class.blink::ContainerNode"**
  %32 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %31, align 8
  %33 = icmp eq %"class.blink::ContainerNode"* %32, null
  br i1 %33, label %34, label %9

34:                                               ; preds = %15, %29, %1
  %35 = phi %"class.blink::SVGSVGElement"* [ null, %1 ], [ null, %29 ], [ %27, %15 ]
  ret %"class.blink::SVGSVGElement"* %35
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::SVGElement"* @_ZNK5blink10SVGElement15viewportElementEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = bitcast %"class.blink::Node"** %2 to %"class.blink::ContainerNode"**
  %4 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %3, align 8
  %5 = icmp eq %"class.blink::ContainerNode"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %1
  %7 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE, align 8
  %8 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kImageTagE, align 8
  %10 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kSymbolTagE, align 8
  %12 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %6, %42
  %14 = phi %"class.blink::ContainerNode"* [ %4, %6 ], [ %45, %42 ]
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 48
  %18 = icmp eq i32 %17, 32
  br i1 %18, label %19, label %42

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %26, %28
  br i1 %29, label %40, label %30

30:                                               ; preds = %19
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %26, %33
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %26, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %35, %30, %19
  %41 = bitcast %"class.blink::ContainerNode"* %14 to %"class.blink::SVGElement"*
  br label %47

42:                                               ; preds = %13, %35
  %43 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.blink::Node"** %43 to %"class.blink::ContainerNode"**
  %45 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %44, align 8
  %46 = icmp eq %"class.blink::ContainerNode"* %45, null
  br i1 %46, label %47, label %13

47:                                               ; preds = %42, %1, %40
  %48 = phi %"class.blink::SVGElement"* [ %41, %40 ], [ null, %1 ], [ null, %42 ]
  ret %"class.blink::SVGElement"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement20MapInstanceToElementEPS0_(%"class.blink::SVGElement"* nocapture, %"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGElement"*, align 8
  store %"class.blink::SVGElement"* %1, %"class.blink::SVGElement"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %5, align 8
  %7 = icmp eq %"class.blink::SVGElementRareData"* %6, null
  br i1 %7, label %8, label %32

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #13
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #13
  %11 = getelementptr inbounds i8, i8* %9, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %9, i64 72
  %13 = getelementptr inbounds i8, i8* %9, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #13
  %14 = load i8, i8* %13, align 8
  %15 = and i8 %14, -8
  store i8 %15, i8* %13, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #13
  %17 = getelementptr inbounds i8, i8* %9, i64 128
  %18 = getelementptr inbounds i8, i8* %9, i64 144
  %19 = bitcast i8* %18 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %19) #13
  %20 = getelementptr inbounds i8, i8* %9, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = ptrtoint i8* %9 to i64
  %25 = bitcast %"class.blink::Member.32"* %4 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  %28 = bitcast i8* %9 to %"class.blink::SVGElementRareData"*
  br i1 %27, label %32, label %29

29:                                               ; preds = %8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #13
  %31 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %5, align 8
  br label %32

32:                                               ; preds = %2, %8, %29
  %33 = phi %"class.blink::SVGElementRareData"* [ %6, %2 ], [ %31, %29 ], [ %28, %8 ]
  %34 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = call { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %34, %"class.blink::SVGElement"** nonnull dereferenceable(8) %3, %"class.blink::SVGElement"** nonnull dereferenceable(8) %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %5, label %84

5:                                                ; preds = %1
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL14EmptyInstancesEvE17s_empty_instances to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %82, !prof !13

8:                                                ; preds = %5
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL14EmptyInstancesEvE17s_empty_instances) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %82, label %11

11:                                               ; preds = %8
  %12 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %13 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %17 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %16, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %18

18:                                               ; preds = %15, %11
  %19 = phi i32 [ %13, %11 ], [ %17, %15 ]
  %20 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %12, i64 0, i32 19, i64 0
  %21 = bitcast %"class.blink::BaseArena"** %20 to %"class.blink::NormalPageArena"**
  %22 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %22, i64 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 32
  br i1 %25, label %56, label %26, !prof !2

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %22, i64 0, i32 3
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 32
  store i8* %29, i8** %27, align 8
  %30 = add i64 %24, -32
  store i64 %30, i64* %23, align 8
  %31 = bitcast i8* %28 to i32*
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %28, i64 4
  %33 = bitcast i8* %32 to i16*
  %34 = trunc i32 %19 to i16
  %35 = shl i16 %34, 2
  store atomic i16 %35, i16* %33 monotonic, align 2
  %36 = getelementptr inbounds i8, i8* %28, i64 6
  %37 = bitcast i8* %36 to i16*
  store i16 16, i16* %37, align 2
  %38 = ptrtoint i8* %28 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4400
  %42 = bitcast i8* %41 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %43 = bitcast i8* %41 to i64*
  %44 = load i64, i64* %43, align 16
  %45 = sub i64 %38, %44
  %46 = lshr i64 %45, 3
  %47 = lshr i64 %45, 6
  %48 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %42, i64 0, i32 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = trunc i64 %46 to i32
  %51 = and i32 %50, 7
  %52 = shl i32 1, %51
  %53 = trunc i32 %52 to i8
  %54 = or i8 %49, %53
  store atomic i8 %54, i8* %48 release, align 1
  %55 = getelementptr inbounds i8, i8* %28, i64 8
  br label %59

56:                                               ; preds = %18
  %57 = zext i32 %19 to i64
  %58 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %22, i64 32, i64 %57) #13
  br label %59

59:                                               ; preds = %56, %26
  %60 = phi i8* [ %55, %26 ], [ %58, %56 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 20, i1 false) #13
  %61 = getelementptr inbounds i8, i8* %60, i64 -4
  %62 = bitcast i8* %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = or i16 %63, 1
  store atomic i16 %64, i16* %62 release, align 2
  store i8* %60, i8** bitcast (%"class.WTF::StaticSingleton.2028"* @_ZZN5blinkL14EmptyInstancesEvE17s_empty_instances to i8**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2028", %"class.WTF::StaticSingleton.2028"* @_ZZN5blinkL14EmptyInstancesEvE17s_empty_instances, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %65 = ptrtoint i8* %60 to i64
  switch i64 %65, label %66 [
    i64 0, label %81
    i64 -1, label %81
  ]

66:                                               ; preds = %59
  %67 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %68 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %68, align 8
  %70 = icmp eq %"class.blink::PersistentNode"* %69, null
  br i1 %70, label %71, label %74, !prof !2

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %67, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %72) #13
  %73 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %68, align 8
  br label %74

74:                                               ; preds = %71, %66
  %75 = phi %"class.blink::PersistentNode"* [ %73, %71 ], [ %69, %66 ]
  %76 = bitcast %"class.blink::PersistentNode"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::PersistentRegion"* %67 to i64*
  store i64 %77, i64* %78, align 8
  %79 = bitcast %"class.blink::PersistentNode"* %75 to %"class.blink::PersistentBase.2034"**
  store %"class.blink::PersistentBase.2034"* bitcast (%"class.WTF::StaticSingleton.2028"* @_ZZN5blinkL14EmptyInstancesEvE17s_empty_instances to %"class.blink::PersistentBase.2034"*), %"class.blink::PersistentBase.2034"** %79, align 8
  %80 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %75, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv, void (%"class.blink::Visitor"*, i8*)** %80, align 8
  store %"class.blink::PersistentNode"* %75, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2028", %"class.WTF::StaticSingleton.2028"* @_ZZN5blinkL14EmptyInstancesEvE17s_empty_instances, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %81

81:                                               ; preds = %74, %59, %59
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL14EmptyInstancesEvE17s_empty_instances) #13
  br label %82

82:                                               ; preds = %5, %8, %81
  %83 = load %"class.blink::HeapHashSet"*, %"class.blink::HeapHashSet"** bitcast (%"class.WTF::StaticSingleton.2028"* @_ZZN5blinkL14EmptyInstancesEvE17s_empty_instances to %"class.blink::HeapHashSet"**), align 8
  br label %86

84:                                               ; preds = %1
  %85 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 2
  br label %86

86:                                               ; preds = %84, %82
  %87 = phi %"class.blink::HeapHashSet"* [ %85, %84 ], [ %83, %82 ]
  ret %"class.blink::HeapHashSet"* %87
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::SVGElement"* @_ZNK5blink10SVGElement20CorrespondingElementEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::SVGElement"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::SVGElement"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGUseElement"* @_ZNK5blink10SVGElement20GeneratingUseElementEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %2) #13
  %4 = icmp eq %"class.blink::ShadowRoot"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.blink::Node"** %6 to %"class.blink::Element"**
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE, align 8
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0
  %11 = icmp eq %"class.blink::Element"* %8, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 32
  br i1 %16, label %17, label %30

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %21 = bitcast %"class.blink::Member"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  %28 = bitcast %"class.blink::Element"* %8 to %"class.blink::SVGUseElement"*
  %29 = select i1 %27, %"class.blink::SVGUseElement"* %28, %"class.blink::SVGUseElement"* null
  br label %30

30:                                               ; preds = %17, %12, %5, %1
  %31 = phi %"class.blink::SVGUseElement"* [ null, %1 ], [ null, %5 ], [ null, %12 ], [ %29, %17 ]
  ret %"class.blink::SVGUseElement"* %31
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement23SetCorrespondingElementEPS0_(%"class.blink::SVGElement"* nocapture, %"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %4, align 8
  %6 = icmp eq %"class.blink::SVGElementRareData"* %5, null
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #13
  %9 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #13
  %10 = getelementptr inbounds i8, i8* %8, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #13
  %11 = getelementptr inbounds i8, i8* %8, i64 72
  %12 = getelementptr inbounds i8, i8* %8, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #13
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, -8
  store i8 %14, i8* %12, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #13
  %16 = getelementptr inbounds i8, i8* %8, i64 128
  %17 = getelementptr inbounds i8, i8* %8, i64 144
  %18 = bitcast i8* %17 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %18) #13
  %19 = getelementptr inbounds i8, i8* %8, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = ptrtoint i8* %8 to i64
  %24 = bitcast %"class.blink::Member.32"* %3 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  %27 = bitcast i8* %8 to %"class.blink::SVGElementRareData"*
  br i1 %26, label %31, label %28

28:                                               ; preds = %7
  %29 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %8) #13
  %30 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %4, align 8
  br label %31

31:                                               ; preds = %2, %7, %28
  %32 = phi %"class.blink::SVGElementRareData"* [ %5, %2 ], [ %30, %28 ], [ %27, %7 ]
  %33 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %32, i64 0, i32 3
  %34 = ptrtoint %"class.blink::SVGElement"* %1 to i64
  %35 = bitcast %"class.blink::Member.31"* %33 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::SVGElement"* %1 to i8*
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #13
  br label %41

41:                                               ; preds = %31, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = tail call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %4)
  %6 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0
  %11 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %5 to i32 (%"class.blink::SVGAnimatedPropertyBase"*, %"class.WTF::String"*)***
  %12 = load i32 (%"class.blink::SVGAnimatedPropertyBase"*, %"class.WTF::String"*)**, i32 (%"class.blink::SVGAnimatedPropertyBase"*, %"class.WTF::String"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.blink::SVGAnimatedPropertyBase"*, %"class.WTF::String"*)*, i32 (%"class.blink::SVGAnimatedPropertyBase"*, %"class.WTF::String"*)** %12, i64 8
  %14 = load i32 (%"class.blink::SVGAnimatedPropertyBase"*, %"class.WTF::String"*)*, i32 (%"class.blink::SVGAnimatedPropertyBase"*, %"class.WTF::String"*)** %13, align 8
  %15 = tail call i32 %14(%"class.blink::SVGAnimatedPropertyBase"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %10) #13
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %8, align 8
  tail call void @_ZN5blink10SVGElement27ReportAttributeParsingErrorENS_15SVGParsingErrorERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::SVGElement"* %0, i32 %15, %"class.blink::QualifiedName"* dereferenceable(8) %16, %"class.WTF::AtomicString"* dereferenceable(8) %17)
  br label %60

18:                                               ; preds = %2
  %19 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kNonceAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %19, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %22, %24
  br i1 %25, label %26, label %38

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %27, align 8
  %29 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %31, %33
  br i1 %34, label %38, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element8setNonceERKN3WTF12AtomicStringE(%"class.blink::Element"* %36, %"class.WTF::AtomicString"* dereferenceable(8) %28) #13
  %37 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  br label %38

38:                                               ; preds = %26, %35, %18
  %39 = phi %"class.blink::QualifiedName"* [ %19, %26 ], [ %37, %35 ], [ %19, %18 ]
  %40 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink11HTMLElement25EventNameForAttributeNameERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %39) #13
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %58, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.blink::SVGElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %48 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %48, i64 10
  %50 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %49, align 8
  %51 = tail call %"class.blink::ExecutionContext"* %50(%"class.blink::Node"* %46) #13
  %52 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %53 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %54 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %53, align 8
  %55 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %51, %"class.blink::QualifiedName"* dereferenceable(8) %52, %"class.WTF::AtomicString"* dereferenceable(8) %54, i32 0) #13
  %56 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %45, %"class.WTF::AtomicString"* dereferenceable(8) %40, %"class.blink::EventListener"* %56) #13
  br label %60

58:                                               ; preds = %38
  %59 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element14ParseAttributeERKNS0_27AttributeModificationParamsE(%"class.blink::Element"* %59, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #13
  br label %60

60:                                               ; preds = %44, %58, %7
  ret void
}

declare void @_ZN5blink7Element8setNonceERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink11HTMLElement25EventNameForAttributeNameERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #1

declare %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZN5blink7Element14ParseAttributeERKNS0_27AttributeModificationParamsE(%"class.blink::Element"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca [53 x %struct.AttrToTypeEntry], align 16
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameEE18s_css_property_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !13

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameEE18s_css_property_map) #13
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameEE18s_css_property_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #13
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameEE18s_css_property_map) #13
  br label %9

9:                                                ; preds = %5, %8, %1
  %10 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameEE18s_css_property_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %242

12:                                               ; preds = %9
  %13 = bitcast [53 x %struct.AttrToTypeEntry]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 848, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 848, i1 false)
  %14 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names22kAlignmentBaselineAttrE to i64*), align 8
  %15 = bitcast [53 x %struct.AttrToTypeEntry]* %2 to i64*
  store i64 %14, i64* %15, align 16
  %16 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 0, i32 1
  store i32 17, i32* %16, align 8
  %17 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 1
  %18 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kBaselineShiftAttrE to i64*), align 8
  %19 = bitcast %struct.AttrToTypeEntry* %17 to i64*
  store i64 %18, i64* %19, align 16
  %20 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 1, i32 1
  store i32 17, i32* %20, align 8
  %21 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 2
  %22 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names22kBufferedRenderingAttrE to i64*), align 8
  %23 = bitcast %struct.AttrToTypeEntry* %21 to i64*
  store i64 %22, i64* %23, align 16
  %24 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 2, i32 1
  store i32 17, i32* %24, align 8
  %25 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 3
  %26 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kClipPathAttrE to i64*), align 8
  %27 = bitcast %struct.AttrToTypeEntry* %25 to i64*
  store i64 %26, i64* %27, align 16
  %28 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 3, i32 1
  store i32 17, i32* %28, align 8
  %29 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 4
  %30 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kClipRuleAttrE to i64*), align 8
  %31 = bitcast %struct.AttrToTypeEntry* %29 to i64*
  store i64 %30, i64* %31, align 16
  %32 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 4, i32 1
  store i32 17, i32* %32, align 8
  %33 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 5
  %34 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names10kColorAttrE to i64*), align 8
  %35 = bitcast %struct.AttrToTypeEntry* %33 to i64*
  store i64 %34, i64* %35, align 16
  %36 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 5, i32 1
  store i32 3, i32* %36, align 8
  %37 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 6
  %38 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names23kColorInterpolationAttrE to i64*), align 8
  %39 = bitcast %struct.AttrToTypeEntry* %37 to i64*
  store i64 %38, i64* %39, align 16
  %40 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 6, i32 1
  store i32 17, i32* %40, align 8
  %41 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 7
  %42 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names30kColorInterpolationFiltersAttrE to i64*), align 8
  %43 = bitcast %struct.AttrToTypeEntry* %41 to i64*
  store i64 %42, i64* %43, align 16
  %44 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 7, i32 1
  store i32 17, i32* %44, align 8
  %45 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 8
  %46 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kColorRenderingAttrE to i64*), align 8
  %47 = bitcast %struct.AttrToTypeEntry* %45 to i64*
  store i64 %46, i64* %47, align 16
  %48 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 8, i32 1
  store i32 17, i32* %48, align 8
  %49 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 9
  %50 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kCursorAttrE to i64*), align 8
  %51 = bitcast %struct.AttrToTypeEntry* %49 to i64*
  store i64 %50, i64* %51, align 16
  %52 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 9, i32 1
  store i32 17, i32* %52, align 8
  %53 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 10
  %54 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kDisplayAttrE to i64*), align 8
  %55 = bitcast %struct.AttrToTypeEntry* %53 to i64*
  store i64 %54, i64* %55, align 16
  %56 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 10, i32 1
  store i32 17, i32* %56, align 8
  %57 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 11
  %58 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kDominantBaselineAttrE to i64*), align 8
  %59 = bitcast %struct.AttrToTypeEntry* %57 to i64*
  store i64 %58, i64* %59, align 16
  %60 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 11, i32 1
  store i32 17, i32* %60, align 8
  %61 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 12
  %62 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kFillAttrE to i64*), align 8
  %63 = bitcast %struct.AttrToTypeEntry* %61 to i64*
  store i64 %62, i64* %63, align 16
  %64 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 12, i32 1
  store i32 3, i32* %64, align 8
  %65 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 13
  %66 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kFillOpacityAttrE to i64*), align 8
  %67 = bitcast %struct.AttrToTypeEntry* %65 to i64*
  store i64 %66, i64* %67, align 16
  %68 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 13, i32 1
  store i32 9, i32* %68, align 8
  %69 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 14
  %70 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kFillRuleAttrE to i64*), align 8
  %71 = bitcast %struct.AttrToTypeEntry* %69 to i64*
  store i64 %70, i64* %71, align 16
  %72 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 14, i32 1
  store i32 17, i32* %72, align 8
  %73 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 15
  %74 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kFilterAttrE to i64*), align 8
  %75 = bitcast %struct.AttrToTypeEntry* %73 to i64*
  store i64 %74, i64* %75, align 16
  %76 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 15, i32 1
  store i32 17, i32* %76, align 8
  %77 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 16
  %78 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kFloodColorAttrE to i64*), align 8
  %79 = bitcast %struct.AttrToTypeEntry* %77 to i64*
  store i64 %78, i64* %79, align 16
  %80 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 16, i32 1
  store i32 3, i32* %80, align 8
  %81 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 17
  %82 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kFloodOpacityAttrE to i64*), align 8
  %83 = bitcast %struct.AttrToTypeEntry* %81 to i64*
  store i64 %82, i64* %83, align 16
  %84 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 17, i32 1
  store i32 9, i32* %84, align 8
  %85 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 18
  %86 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kFontFamilyAttrE to i64*), align 8
  %87 = bitcast %struct.AttrToTypeEntry* %85 to i64*
  store i64 %86, i64* %87, align 16
  %88 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 18, i32 1
  store i32 17, i32* %88, align 8
  %89 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 19
  %90 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kFontSizeAttrE to i64*), align 8
  %91 = bitcast %struct.AttrToTypeEntry* %89 to i64*
  store i64 %90, i64* %91, align 16
  %92 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 19, i32 1
  store i32 7, i32* %92, align 8
  %93 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 20
  %94 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kFontStretchAttrE to i64*), align 8
  %95 = bitcast %struct.AttrToTypeEntry* %93 to i64*
  store i64 %94, i64* %95, align 16
  %96 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 20, i32 1
  store i32 17, i32* %96, align 8
  %97 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 21
  %98 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kFontStyleAttrE to i64*), align 8
  %99 = bitcast %struct.AttrToTypeEntry* %97 to i64*
  store i64 %98, i64* %99, align 16
  %100 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 21, i32 1
  store i32 17, i32* %100, align 8
  %101 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 22
  %102 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kFontVariantAttrE to i64*), align 8
  %103 = bitcast %struct.AttrToTypeEntry* %101 to i64*
  store i64 %102, i64* %103, align 16
  %104 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 22, i32 1
  store i32 17, i32* %104, align 8
  %105 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 23
  %106 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kFontWeightAttrE to i64*), align 8
  %107 = bitcast %struct.AttrToTypeEntry* %105 to i64*
  store i64 %106, i64* %107, align 16
  %108 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 23, i32 1
  store i32 17, i32* %108, align 8
  %109 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 24
  %110 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kImageRenderingAttrE to i64*), align 8
  %111 = bitcast %struct.AttrToTypeEntry* %109 to i64*
  store i64 %110, i64* %111, align 16
  %112 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 24, i32 1
  store i32 17, i32* %112, align 8
  %113 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 25
  %114 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kLetterSpacingAttrE to i64*), align 8
  %115 = bitcast %struct.AttrToTypeEntry* %113 to i64*
  store i64 %114, i64* %115, align 16
  %116 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 25, i32 1
  store i32 7, i32* %116, align 8
  %117 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 26
  %118 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kLightingColorAttrE to i64*), align 8
  %119 = bitcast %struct.AttrToTypeEntry* %117 to i64*
  store i64 %118, i64* %119, align 16
  %120 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 26, i32 1
  store i32 3, i32* %120, align 8
  %121 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 27
  %122 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kMarkerEndAttrE to i64*), align 8
  %123 = bitcast %struct.AttrToTypeEntry* %121 to i64*
  store i64 %122, i64* %123, align 16
  %124 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 27, i32 1
  store i32 17, i32* %124, align 8
  %125 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 28
  %126 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kMarkerMidAttrE to i64*), align 8
  %127 = bitcast %struct.AttrToTypeEntry* %125 to i64*
  store i64 %126, i64* %127, align 16
  %128 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 28, i32 1
  store i32 17, i32* %128, align 8
  %129 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 29
  %130 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kMarkerStartAttrE to i64*), align 8
  %131 = bitcast %struct.AttrToTypeEntry* %129 to i64*
  store i64 %130, i64* %131, align 16
  %132 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 29, i32 1
  store i32 17, i32* %132, align 8
  %133 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 30
  %134 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names9kMaskAttrE to i64*), align 8
  %135 = bitcast %struct.AttrToTypeEntry* %133 to i64*
  store i64 %134, i64* %135, align 16
  %136 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 30, i32 1
  store i32 17, i32* %136, align 8
  %137 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 31
  %138 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kMaskTypeAttrE to i64*), align 8
  %139 = bitcast %struct.AttrToTypeEntry* %137 to i64*
  store i64 %138, i64* %139, align 16
  %140 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 31, i32 1
  store i32 17, i32* %140, align 8
  %141 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 32
  %142 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names12kOpacityAttrE to i64*), align 8
  %143 = bitcast %struct.AttrToTypeEntry* %141 to i64*
  store i64 %142, i64* %143, align 16
  %144 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 32, i32 1
  store i32 9, i32* %144, align 8
  %145 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 33
  %146 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names13kOverflowAttrE to i64*), align 8
  %147 = bitcast %struct.AttrToTypeEntry* %145 to i64*
  store i64 %146, i64* %147, align 16
  %148 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 33, i32 1
  store i32 17, i32* %148, align 8
  %149 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 34
  %150 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kPaintOrderAttrE to i64*), align 8
  %151 = bitcast %struct.AttrToTypeEntry* %149 to i64*
  store i64 %150, i64* %151, align 16
  %152 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 34, i32 1
  store i32 17, i32* %152, align 8
  %153 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 35
  %154 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kPointerEventsAttrE to i64*), align 8
  %155 = bitcast %struct.AttrToTypeEntry* %153 to i64*
  store i64 %154, i64* %155, align 16
  %156 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 35, i32 1
  store i32 17, i32* %156, align 8
  %157 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 36
  %158 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kShapeRenderingAttrE to i64*), align 8
  %159 = bitcast %struct.AttrToTypeEntry* %157 to i64*
  store i64 %158, i64* %159, align 16
  %160 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 36, i32 1
  store i32 17, i32* %160, align 8
  %161 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 37
  %162 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names14kStopColorAttrE to i64*), align 8
  %163 = bitcast %struct.AttrToTypeEntry* %161 to i64*
  store i64 %162, i64* %163, align 16
  %164 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 37, i32 1
  store i32 3, i32* %164, align 8
  %165 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 38
  %166 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kStopOpacityAttrE to i64*), align 8
  %167 = bitcast %struct.AttrToTypeEntry* %165 to i64*
  store i64 %166, i64* %167, align 16
  %168 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 38, i32 1
  store i32 9, i32* %168, align 8
  %169 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 39
  %170 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names11kStrokeAttrE to i64*), align 8
  %171 = bitcast %struct.AttrToTypeEntry* %169 to i64*
  store i64 %170, i64* %171, align 16
  %172 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 39, i32 1
  store i32 3, i32* %172, align 8
  %173 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 40
  %174 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names20kStrokeDasharrayAttrE to i64*), align 8
  %175 = bitcast %struct.AttrToTypeEntry* %173 to i64*
  store i64 %174, i64* %175, align 16
  %176 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 40, i32 1
  store i32 8, i32* %176, align 8
  %177 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 41
  %178 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kStrokeDashoffsetAttrE to i64*), align 8
  %179 = bitcast %struct.AttrToTypeEntry* %177 to i64*
  store i64 %178, i64* %179, align 16
  %180 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 41, i32 1
  store i32 7, i32* %180, align 8
  %181 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 42
  %182 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kStrokeLinecapAttrE to i64*), align 8
  %183 = bitcast %struct.AttrToTypeEntry* %181 to i64*
  store i64 %182, i64* %183, align 16
  %184 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 42, i32 1
  store i32 17, i32* %184, align 8
  %185 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 43
  %186 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kStrokeLinejoinAttrE to i64*), align 8
  %187 = bitcast %struct.AttrToTypeEntry* %185 to i64*
  store i64 %186, i64* %187, align 16
  %188 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 43, i32 1
  store i32 17, i32* %188, align 8
  %189 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 44
  %190 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names21kStrokeMiterlimitAttrE to i64*), align 8
  %191 = bitcast %struct.AttrToTypeEntry* %189 to i64*
  store i64 %190, i64* %191, align 16
  %192 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 44, i32 1
  store i32 9, i32* %192, align 8
  %193 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 45
  %194 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kStrokeOpacityAttrE to i64*), align 8
  %195 = bitcast %struct.AttrToTypeEntry* %193 to i64*
  store i64 %194, i64* %195, align 16
  %196 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 45, i32 1
  store i32 9, i32* %196, align 8
  %197 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 46
  %198 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kStrokeWidthAttrE to i64*), align 8
  %199 = bitcast %struct.AttrToTypeEntry* %197 to i64*
  store i64 %198, i64* %199, align 16
  %200 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 46, i32 1
  store i32 7, i32* %200, align 8
  %201 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 47
  %202 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kTextAnchorAttrE to i64*), align 8
  %203 = bitcast %struct.AttrToTypeEntry* %201 to i64*
  store i64 %202, i64* %203, align 16
  %204 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 47, i32 1
  store i32 17, i32* %204, align 8
  %205 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 48
  %206 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names19kTextDecorationAttrE to i64*), align 8
  %207 = bitcast %struct.AttrToTypeEntry* %205 to i64*
  store i64 %206, i64* %207, align 16
  %208 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 48, i32 1
  store i32 17, i32* %208, align 8
  %209 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 49
  %210 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names18kTextRenderingAttrE to i64*), align 8
  %211 = bitcast %struct.AttrToTypeEntry* %209 to i64*
  store i64 %210, i64* %211, align 16
  %212 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 49, i32 1
  store i32 17, i32* %212, align 8
  %213 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 50
  %214 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names17kVectorEffectAttrE to i64*), align 8
  %215 = bitcast %struct.AttrToTypeEntry* %213 to i64*
  store i64 %214, i64* %215, align 16
  %216 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 50, i32 1
  store i32 17, i32* %216, align 8
  %217 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 51
  %218 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names15kVisibilityAttrE to i64*), align 8
  %219 = bitcast %struct.AttrToTypeEntry* %217 to i64*
  store i64 %218, i64* %219, align 16
  %220 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 51, i32 1
  store i32 17, i32* %220, align 8
  %221 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 52
  %222 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9svg_names16kWordSpacingAttrE to i64*), align 8
  %223 = bitcast %struct.AttrToTypeEntry* %221 to i64*
  store i64 %222, i64* %223, align 16
  %224 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 52, i32 1
  store i32 7, i32* %224, align 8
  br label %226

225:                                              ; preds = %239
  call void @llvm.lifetime.end.p0i8(i64 848, i8* nonnull %13) #13
  br label %242

226:                                              ; preds = %239, %12
  %227 = phi i64 [ 0, %12 ], [ %240, %239 ]
  %228 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 %227, i32 0
  %229 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %228, align 16
  %230 = getelementptr inbounds [53 x %struct.AttrToTypeEntry], [53 x %struct.AttrToTypeEntry]* %2, i64 0, i64 %227, i32 1
  %231 = call { %"struct.WTF::KeyValuePair.1854"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1851"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameEE18s_css_property_map to %"class.WTF::HashTable.1851"*), %"class.blink::QualifiedName"* dereferenceable(8) %229, i32* dereferenceable(4) %230) #13
  %232 = extractvalue { %"struct.WTF::KeyValuePair.1854"*, i8 } %231, 1
  %233 = and i8 %232, 1
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %235, label %239

235:                                              ; preds = %226
  %236 = extractvalue { %"struct.WTF::KeyValuePair.1854"*, i8 } %231, 0
  %237 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %236, i64 0, i32 1
  %238 = load i32, i32* %230, align 8
  store i32 %238, i32* %237, align 4
  br label %239

239:                                              ; preds = %226, %235
  %240 = add nuw nsw i64 %227, 1
  %241 = icmp eq i64 %240, 53
  br i1 %241, label %225, label %226

242:                                              ; preds = %225, %9
  %243 = call %"struct.WTF::KeyValuePair.1854"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.1851"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameEE18s_css_property_map to %"class.WTF::HashTable.1851"*), %"class.blink::QualifiedName"* dereferenceable(8) %0) #13
  %244 = icmp eq %"struct.WTF::KeyValuePair.1854"* %243, null
  br i1 %244, label %248, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %243, i64 0, i32 1
  %247 = load i32, i32* %246, align 4
  br label %248

248:                                              ; preds = %242, %245
  %249 = phi i32 [ %247, %245 ], [ 0, %242 ]
  ret i32 %249
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10SVGElement23IsAnimatableCSSPropertyERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %0)
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %1)
  %4 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %3, i64 0, i32 1
  %7 = bitcast i24* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 65504
  %10 = icmp ne i32 %9, 0
  br label %20

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::SVGElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %14 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %14, i64 10
  %16 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %15, align 8
  %17 = tail call %"class.blink::ExecutionContext"* %16(%"class.blink::Node"* %12) #13
  %18 = tail call i32 @_ZN5blink10SVGElement32CssPropertyIdForSVGAttributeNameEPKNS_16ExecutionContextERKNS_13QualifiedNameE(%"class.blink::ExecutionContext"* %17, %"class.blink::QualifiedName"* dereferenceable(8) %1)
  %19 = icmp sgt i32 %18, 0
  br label %20

20:                                               ; preds = %5, %11
  %21 = phi i1 [ %19, %11 ], [ %10, %5 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::SVGElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %7, i64 10
  %9 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %8, align 8
  %10 = tail call %"class.blink::ExecutionContext"* %9(%"class.blink::Node"* %5) #13
  %11 = tail call i32 @_ZN5blink10SVGElement32CssPropertyIdForSVGAttributeNameEPKNS_16ExecutionContextERKNS_13QualifiedNameE(%"class.blink::ExecutionContext"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %1)
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::Element"* %14, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 %11, %"class.WTF::String"* dereferenceable(8) %15) #13
  br label %16

16:                                               ; preds = %13, %4
  ret void
}

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv(%"class.blink::SVGElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1, %18
  %6 = phi %"class.blink::Node"* [ %20, %18 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 48
  %10 = icmp eq i32 %9, 32
  br i1 %10, label %11, label %18

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::Node"* %6 to %"class.blink::SVGElement"*
  %13 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::SVGElement"*)***
  %14 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %14, i64 165
  %16 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::SVGElement"* nonnull %12) #13
  br i1 %17, label %29, label %40

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 5, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %40, label %5

22:                                               ; preds = %34
  %23 = bitcast %"class.blink::Node"* %32 to %"class.blink::SVGElement"*
  %24 = bitcast %"class.blink::Node"* %32 to i1 (%"class.blink::SVGElement"*)***
  %25 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %25, i64 165
  %27 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::SVGElement"* nonnull %23) #13
  br i1 %28, label %39, label %40

29:                                               ; preds = %11, %39
  %30 = phi %"class.blink::Node"* [ %32, %39 ], [ %6, %11 ]
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 5, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 48
  %38 = icmp eq i32 %37, 32
  br i1 %38, label %22, label %39

39:                                               ; preds = %34, %22
  br label %29

40:                                               ; preds = %18, %22, %29, %11, %1
  %41 = phi i1 [ true, %1 ], [ false, %11 ], [ false, %22 ], [ true, %29 ], [ true, %18 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeapHashSet", align 8
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::RegisteredEventListener"* dereferenceable(16) %2) #13
  %6 = bitcast %"class.blink::HeapHashSet"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.blink::HeapHashSet"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 20, i1 false) #13
  %11 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %5) #13
  %12 = icmp eq %"class.blink::ShadowRoot"* %11, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %3
  %14 = tail call dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %0) #13
  %15 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %14, i64 0, i32 0, i32 0
  %17 = call dereferenceable(24) %"class.WTF::HashTable"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEEaSERKSB_(%"class.WTF::HashTable"* nonnull %15, %"class.WTF::HashTable"* dereferenceable(24) %16) #13
  br label %18

18:                                               ; preds = %3, %13
  %19 = call %"class.blink::AddEventListenerOptionsResolved"* @_ZNK5blink23RegisteredEventListener7OptionsEv(%"class.blink::RegisteredEventListener"* %2) #13
  %20 = getelementptr inbounds %"class.blink::RegisteredEventListener", %"class.blink::RegisteredEventListener"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::EventListener"*, %"class.blink::EventListener"** %20, align 8
  %22 = load i32, i32* %9, align 4
  %23 = icmp eq i32 %22, 0
  %24 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %7, align 8
  %25 = load i32, i32* %8, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %24, i64 %26
  br i1 %23, label %40, label %28

28:                                               ; preds = %18
  %29 = icmp eq i32 %25, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %28, %34
  %31 = phi %"class.blink::WeakMember"* [ %35, %34 ], [ %24, %28 ]
  %32 = bitcast %"class.blink::WeakMember"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  switch i64 %33, label %37 [
    i64 -1, label %34
    i64 0, label %34
  ]

34:                                               ; preds = %30, %30
  %35 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %31, i64 1
  %36 = icmp eq %"class.blink::WeakMember"* %35, %27
  br i1 %36, label %40, label %30

37:                                               ; preds = %30, %28
  %38 = phi %"class.blink::WeakMember"* [ %24, %28 ], [ %31, %30 ]
  %39 = icmp eq %"class.blink::WeakMember"* %38, %27
  br i1 %39, label %40, label %41

40:                                               ; preds = %34, %41, %56, %53, %18, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void

41:                                               ; preds = %37, %56
  %42 = phi %"class.blink::WeakMember"* [ %50, %56 ], [ %38, %37 ]
  %43 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = call zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"* %45, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::EventListener"* %21, %"class.blink::AddEventListenerOptionsResolved"* %19) #13
  %47 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %42, i64 1
  %48 = icmp eq %"class.blink::WeakMember"* %47, %27
  br i1 %48, label %40, label %49

49:                                               ; preds = %41, %53
  %50 = phi %"class.blink::WeakMember"* [ %54, %53 ], [ %47, %41 ]
  %51 = bitcast %"class.blink::WeakMember"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  switch i64 %52, label %56 [
    i64 -1, label %53
    i64 0, label %53
  ]

53:                                               ; preds = %49, %49
  %54 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %50, i64 1
  %55 = icmp eq %"class.blink::WeakMember"* %54, %27
  br i1 %55, label %40, label %49

56:                                               ; preds = %49
  %57 = icmp eq %"class.blink::WeakMember"* %50, %27
  br i1 %57, label %40, label %41
}

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare %"class.blink::AddEventListenerOptionsResolved"* @_ZNK5blink23RegisteredEventListener7OptionsEv(%"class.blink::RegisteredEventListener"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeapHashSet", align 8
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::RegisteredEventListener"* dereferenceable(16) %2) #13
  %6 = bitcast %"class.blink::HeapHashSet"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.blink::HeapHashSet"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 20, i1 false) #13
  %11 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %5) #13
  %12 = icmp eq %"class.blink::ShadowRoot"* %11, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %3
  %14 = tail call dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %0) #13
  %15 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %14, i64 0, i32 0, i32 0
  %17 = call dereferenceable(24) %"class.WTF::HashTable"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEEaSERKSB_(%"class.WTF::HashTable"* nonnull %15, %"class.WTF::HashTable"* dereferenceable(24) %16) #13
  br label %18

18:                                               ; preds = %3, %13
  %19 = call %"class.blink::AddEventListenerOptionsResolved"* @_ZNK5blink23RegisteredEventListener7OptionsEv(%"class.blink::RegisteredEventListener"* %2) #13
  %20 = bitcast %"class.blink::AddEventListenerOptionsResolved"* %19 to %"class.blink::EventListenerOptions"*
  %21 = getelementptr inbounds %"class.blink::RegisteredEventListener", %"class.blink::RegisteredEventListener"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::EventListener"*, %"class.blink::EventListener"** %21, align 8
  %23 = load i32, i32* %9, align 4
  %24 = icmp eq i32 %23, 0
  %25 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %7, align 8
  %26 = load i32, i32* %8, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %25, i64 %27
  br i1 %24, label %41, label %29

29:                                               ; preds = %18
  %30 = icmp eq i32 %26, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %29, %35
  %32 = phi %"class.blink::WeakMember"* [ %36, %35 ], [ %25, %29 ]
  %33 = bitcast %"class.blink::WeakMember"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  switch i64 %34, label %38 [
    i64 -1, label %35
    i64 0, label %35
  ]

35:                                               ; preds = %31, %31
  %36 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %32, i64 1
  %37 = icmp eq %"class.blink::WeakMember"* %36, %28
  br i1 %37, label %41, label %31

38:                                               ; preds = %31, %29
  %39 = phi %"class.blink::WeakMember"* [ %25, %29 ], [ %32, %31 ]
  %40 = icmp eq %"class.blink::WeakMember"* %39, %28
  br i1 %40, label %41, label %42

41:                                               ; preds = %35, %42, %57, %54, %18, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void

42:                                               ; preds = %38, %57
  %43 = phi %"class.blink::WeakMember"* [ %51, %57 ], [ %39, %38 ]
  %44 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = call zeroext i1 @_ZN5blink11EventTarget27RemoveEventListenerInternalERKN3WTF12AtomicStringEPKNS_13EventListenerEPKNS_20EventListenerOptionsE(%"class.blink::EventTarget"* %46, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::EventListener"* %22, %"class.blink::EventListenerOptions"* %20) #13
  %48 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %43, i64 1
  %49 = icmp eq %"class.blink::WeakMember"* %48, %28
  br i1 %49, label %41, label %50

50:                                               ; preds = %42, %54
  %51 = phi %"class.blink::WeakMember"* [ %55, %54 ], [ %48, %42 ]
  %52 = bitcast %"class.blink::WeakMember"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  switch i64 %53, label %57 [
    i64 -1, label %54
    i64 0, label %54
  ]

54:                                               ; preds = %50, %50
  %55 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %51, i64 1
  %56 = icmp eq %"class.blink::WeakMember"* %55, %28
  br i1 %56, label %41, label %50

57:                                               ; preds = %50
  %58 = icmp eq %"class.blink::WeakMember"* %51, %28
  br i1 %58, label %41, label %42
}

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN5blink11EventTarget27RemoveEventListenerInternalERKN3WTF12AtomicStringEPKNS_13EventListenerEPKNS_20EventListenerOptionsE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::EventListenerOptions"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10SVGElement26SendSVGLoadEventIfPossibleEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::SVGElement"* %0 to i1 (%"class.blink::SVGElement"*)***
  %3 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %3, i64 165
  %5 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::SVGElement"* %0) #13
  br i1 %6, label %7, label %82

7:                                                ; preds = %1
  %8 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %2, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %8, i64 161
  %10 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::SVGElement"* %0) #13
  br i1 %11, label %32, label %12

12:                                               ; preds = %7
  %13 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE, align 8
  %14 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = icmp eq %"class.blink::SVGElement"* %0, null
  br i1 %15, label %82, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 48
  %20 = icmp eq i32 %19, 32
  br i1 %20, label %21, label %82

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %13, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 2
  %25 = bitcast %"class.blink::Member"* %24 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %32, label %82

32:                                               ; preds = %21, %7
  %33 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  %35 = bitcast %"class.blink::SVGElement"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %36 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %36, i64 25
  %38 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %37, align 8
  %39 = tail call %"class.blink::EventTargetData"* %38(%"class.blink::EventTarget"* %33) #13
  %40 = icmp eq %"class.blink::EventTargetData"* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %39, i64 0, i32 0
  %43 = tail call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %42, %"class.WTF::AtomicString"* dereferenceable(8) %34) #13
  br i1 %43, label %74, label %44

44:                                               ; preds = %41, %32
  %45 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %46 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %45) #13
  %47 = icmp eq %"class.blink::Element"* %46, null
  br i1 %47, label %82, label %48

48:                                               ; preds = %44, %70
  %49 = phi %"class.blink::Element"* [ %72, %70 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = tail call %"class.blink::HeapVector.1200"* @_ZN5blink11EventTarget17GetEventListenersERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %50, %"class.WTF::AtomicString"* dereferenceable(8) %34) #13
  %52 = icmp eq %"class.blink::HeapVector.1200"* %51, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::HeapVector.1200", %"class.blink::HeapVector.1200"* %51, i64 0, i32 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::HeapVector.1200", %"class.blink::HeapVector.1200"* %51, i64 0, i32 0
  br label %62

59:                                               ; preds = %62
  %60 = load i32, i32* %54, align 4
  %61 = icmp ult i32 %69, %60
  br i1 %61, label %62, label %70

62:                                               ; preds = %59, %57
  %63 = phi i32 [ 0, %57 ], [ %69, %59 ]
  %64 = tail call dereferenceable(16) %"class.blink::RegisteredEventListener"* @_ZN3WTF6VectorIN5blink23RegisteredEventListenerELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1203"* %58, i32 %63) #13
  %65 = getelementptr inbounds %"class.blink::RegisteredEventListener", %"class.blink::RegisteredEventListener"* %64, i64 0, i32 1
  %66 = load i8, i8* %65, align 8
  %67 = and i8 %66, 1
  %68 = icmp eq i8 %67, 0
  %69 = add nuw i32 %63, 1
  br i1 %68, label %59, label %74

70:                                               ; preds = %59, %53, %48
  %71 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %49, i64 0, i32 0, i32 0
  %72 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %71) #13
  %73 = icmp eq %"class.blink::Element"* %72, null
  br i1 %73, label %82, label %48

74:                                               ; preds = %62, %41
  %75 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #13
  %76 = bitcast i8* %75 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %76, %"class.WTF::AtomicString"* dereferenceable(8) %34, i32 1, i32 1, i32 1) #13
  %77 = getelementptr inbounds i8, i8* %75, i64 -4
  %78 = bitcast i8* %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = or i16 %79, 1
  store atomic i16 %80, i16* %78 release, align 2
  %81 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %33, %"class.blink::Event"* dereferenceable(104) %76) #13
  br label %82

82:                                               ; preds = %70, %12, %16, %44, %21, %74, %1
  %83 = phi i1 [ false, %1 ], [ true, %74 ], [ true, %21 ], [ true, %44 ], [ true, %16 ], [ true, %12 ], [ true, %70 ]
  ret i1 %83
}

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement48SendSVGLoadEventToSelfAndAncestorChainIfPossibleEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"* %0)
  br i1 %2, label %26, label %3

3:                                                ; preds = %1, %23
  %4 = phi %"class.blink::SVGElement"* [ %24, %23 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %5) #13
  %7 = tail call zeroext i1 @_ZN5blink10SVGElement26SendSVGLoadEventIfPossibleEv(%"class.blink::SVGElement"* %4)
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %12, i64 0, i32 85
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 1
  %16 = icmp eq %"class.blink::Element"* %6, null
  %17 = or i1 %16, %15
  br i1 %17, label %26, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 48
  %22 = icmp eq i32 %21, 32
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::Element"* %6 to %"class.blink::SVGElement"*
  %25 = tail call zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"* %24)
  br i1 %25, label %26, label %3

26:                                               ; preds = %23, %8, %3, %18, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGElement::SvgAttributeChangedParams", align 8
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element16AttributeChangedERKNS0_27AttributeModificationParamsE(%"class.blink::Element"* %4, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #13
  %5 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %5, align 8
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN5blink10SVGElement28RebuildAllIncomingReferencesEv(%"class.blink::SVGElement"* %0)
  tail call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %0)
  br label %30

14:                                               ; preds = %2
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %17
  br i1 %18, label %30, label %19

19:                                               ; preds = %14
  %20 = bitcast %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3, i64 0, i32 0
  store %"class.blink::QualifiedName"* %6, %"class.blink::QualifiedName"** %23, align 8
  %24 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3, i64 0, i32 1
  store i32 %22, i32* %24, align 8
  %25 = bitcast %"class.blink::SVGElement"* %0 to void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)***
  %26 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)**, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %26, i64 163
  %28 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %27, align 8
  call void %28(%"class.blink::SVGElement"* %0, %"struct.blink::SVGElement::SvgAttributeChangedParams"* nonnull dereferenceable(16) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  %29 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %5, align 8
  call void @_ZN5blink10SVGElement41UpdateWebAnimatedAttributeOnBaseValChangeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %29)
  br label %30

30:                                               ; preds = %14, %19, %13
  ret void
}

declare void @_ZN5blink7Element16AttributeChangedERKNS0_27AttributeModificationParamsE(%"class.blink::Element"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement41UpdateWebAnimatedAttributeOnBaseValChangeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  %5 = icmp eq %"class.blink::SVGElementRareData"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %4, i64 0, i32 8, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %47, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %4, i64 0, i32 8, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_(%"class.WTF::HashTable.56"* %11, %"class.blink::QualifiedName"* dereferenceable(8) %1) #13
  br i1 %12, label %13, label %47

13:                                               ; preds = %10
  %14 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  %15 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %14, i64 0, i32 6
  %16 = load i8, i8* %15, align 8
  %17 = or i8 %16, 4
  store i8 %17, i8* %15, align 8
  %18 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_svg_enabled_E, align 1, !range !14
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %47, label %20

20:                                               ; preds = %13
  %21 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  %22 = icmp eq %"class.blink::SVGElementRareData"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %21, i64 0, i32 6
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %23, %20
  %29 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %30 = tail call %"class.blink::ElementAnimations"* @_ZNK5blink7Element20GetElementAnimationsEv(%"class.blink::Element"* %29) #13
  %31 = icmp eq %"class.blink::ElementAnimations"* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 130, i32 0, i32 0
  %38 = load %"class.blink::DocumentAnimations"*, %"class.blink::DocumentAnimations"** %37, align 8
  %39 = tail call zeroext i1 @_ZN5blink18DocumentAnimations26NeedsAnimationTimingUpdateEv(%"class.blink::DocumentAnimations"* %38) #13
  br i1 %39, label %40, label %47

40:                                               ; preds = %32, %23
  %41 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %44, i64 0, i32 130, i32 0, i32 0
  %46 = load %"class.blink::DocumentAnimations"*, %"class.blink::DocumentAnimations"** %45, align 8
  tail call void @_ZN5blink18DocumentAnimations29UpdateAnimationTimingIfNeededEv(%"class.blink::DocumentAnimations"* %46) #13
  tail call void @_ZN5blink10SVGElement24ApplyActiveWebAnimationsEv(%"class.blink::SVGElement"* %0) #13
  br label %47

47:                                               ; preds = %2, %40, %32, %28, %13, %10, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement19SvgAttributeChangedERKNS0_25SvgAttributeChangedParamsE(%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %1, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::SVGElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %8 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %8, i64 10
  %10 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %9, align 8
  %11 = tail call %"class.blink::ExecutionContext"* %10(%"class.blink::Node"* %6) #13
  %12 = tail call i32 @_ZN5blink10SVGElement32CssPropertyIdForSVGAttributeNameEPKNS_16ExecutionContextERKNS_13QualifiedNameE(%"class.blink::ExecutionContext"* %11, %"class.blink::QualifiedName"* dereferenceable(8) %5)
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  tail call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %0)
  br label %76

15:                                               ; preds = %2
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %18, %20
  br i1 %21, label %22, label %76

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %24 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 4, i32 0, i32 0
  %26 = load %"class.blink::SVGAnimatedString"*, %"class.blink::SVGAnimatedString"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::SVGAnimatedString", %"class.blink::SVGAnimatedString"* %26, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::SVGString"*, %"class.blink::SVGString"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::SVGString", %"class.blink::SVGString"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %55, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 acquire, align 4
  %35 = and i32 %34, 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %32
  %38 = load atomic i32, i32* %33 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %55

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #13
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #13
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %55

53:                                               ; preds = %32
  %54 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %30) #13
  br label %55

55:                                               ; preds = %22, %37, %51, %53
  %56 = phi %"class.WTF::StringImpl"* [ %54, %53 ], [ %30, %37 ], [ %30, %51 ], [ null, %22 ]
  %57 = ptrtoint %"class.WTF::StringImpl"* %56 to i64
  %58 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %57, i64* %58, align 8
  call void @_ZN5blink7Element21ClassAttributeChangedERKN3WTF12AtomicStringE(%"class.blink::Element"* %23, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #13
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %75

75:                                               ; preds = %55, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %0)
  br label %76

76:                                               ; preds = %15, %75, %14
  ret void
}

declare void @_ZN5blink7Element21ClassAttributeChangedERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement16BaseValueChangedERKNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"*, %"class.blink::SVGAnimatedPropertyBase"* readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGElement::SvgAttributeChangedParams", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %1, i64 0, i32 3
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %8, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11, %2
  tail call void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"* %7) #13
  %18 = bitcast %"class.blink::ElementData"** %8 to %"class.blink::UniqueElementData"**
  %19 = load %"class.blink::UniqueElementData"*, %"class.blink::UniqueElementData"** %18, align 8
  br label %20

20:                                               ; preds = %11, %17
  %21 = phi %"class.blink::UniqueElementData"* [ %19, %17 ], [ %12, %11 ]
  %22 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = or i32 %23, -2147483648
  store atomic i32 %24, i32* %22 monotonic, align 4
  %25 = bitcast %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3, i64 0, i32 0
  store %"class.blink::QualifiedName"* %6, %"class.blink::QualifiedName"** %26, align 8
  %27 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %3, i64 0, i32 1
  store i32 0, i32* %27, align 8
  %28 = bitcast %"class.blink::SVGElement"* %0 to void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)***
  %29 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)**, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %29, i64 163
  %31 = load void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)*, void (%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)** %30, align 8
  call void %31(%"class.blink::SVGElement"* %0, %"struct.blink::SVGElement::SvgAttributeChangedParams"* nonnull dereferenceable(16) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  %32 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 4, i32 0, i32 0
  %33 = load %"class.blink::SVGAnimatedString"*, %"class.blink::SVGAnimatedString"** %32, align 8
  %34 = icmp eq %"class.blink::SVGAnimatedString"* %33, null
  %35 = getelementptr inbounds %"class.blink::SVGAnimatedString", %"class.blink::SVGAnimatedString"* %33, i64 0, i32 1, i32 0, i32 0
  %36 = select i1 %34, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %35
  %37 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %36, %1
  br i1 %37, label %38, label %90

38:                                               ; preds = %20
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %40 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.blink::SVGAnimatedString", %"class.blink::SVGAnimatedString"* %33, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::SVGString"*, %"class.blink::SVGString"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::SVGString", %"class.blink::SVGString"* %42, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %69, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 acquire, align 4
  %49 = and i32 %48, 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %46
  %52 = load atomic i32, i32* %47 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %69

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #13
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %55
  call void @llvm.trap() #13
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %69

67:                                               ; preds = %46
  %68 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %44) #13
  br label %69

69:                                               ; preds = %38, %51, %65, %67
  %70 = phi %"class.WTF::StringImpl"* [ %68, %67 ], [ %44, %51 ], [ %44, %65 ], [ null, %38 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %72 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %71, i64* %72, align 8
  call void @_ZN5blink7Element15UpdateClassListERKN3WTF12AtomicStringES4_(%"class.blink::Element"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %39, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #13
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #13
  br label %89

89:                                               ; preds = %69, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  br label %90

90:                                               ; preds = %89, %20
  call void @_ZN5blink10SVGElement41UpdateWebAnimatedAttributeOnBaseValChangeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %6)
  ret void
}

declare void @_ZN5blink7Element15UpdateClassListERKN3WTF12AtomicStringES4_(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement29EnsureAttributeAnimValUpdatedEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_svg_enabled_E, align 1, !range !14
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %32, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %5, align 8
  %7 = icmp eq %"class.blink::SVGElementRareData"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %6, i64 0, i32 6
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %15 = tail call %"class.blink::ElementAnimations"* @_ZNK5blink7Element20GetElementAnimationsEv(%"class.blink::Element"* %14) #13
  %16 = icmp eq %"class.blink::ElementAnimations"* %15, null
  br i1 %16, label %32, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 130, i32 0, i32 0
  %23 = load %"class.blink::DocumentAnimations"*, %"class.blink::DocumentAnimations"** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink18DocumentAnimations26NeedsAnimationTimingUpdateEv(%"class.blink::DocumentAnimations"* %23) #13
  br i1 %24, label %25, label %32

25:                                               ; preds = %8, %17
  %26 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %29, i64 0, i32 130, i32 0, i32 0
  %31 = load %"class.blink::DocumentAnimations"*, %"class.blink::DocumentAnimations"** %30, align 8
  tail call void @_ZN5blink18DocumentAnimations29UpdateAnimationTimingIfNeededEv(%"class.blink::DocumentAnimations"* %31) #13
  tail call void @_ZN5blink10SVGElement24ApplyActiveWebAnimationsEv(%"class.blink::SVGElement"* %0)
  br label %32

32:                                               ; preds = %1, %13, %25, %17
  ret void
}

declare zeroext i1 @_ZN5blink18DocumentAnimations26NeedsAnimationTimingUpdateEv(%"class.blink::DocumentAnimations"*) local_unnamed_addr #1

declare void @_ZN5blink18DocumentAnimations29UpdateAnimationTimingIfNeededEv(%"class.blink::DocumentAnimations"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10SVGElement23SynchronizeSVGAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* nocapture readonly, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %9, label %78

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %41, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %19
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  br label %25

25:                                               ; preds = %32, %21
  %26 = phi %"struct.WTF::KeyValuePair"* [ %14, %21 ], [ %33, %32 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %28, %24
  %30 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %28, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %31 = or i1 %30, %29
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, %18
  br i1 %34, label %41, label %25

35:                                               ; preds = %25, %19
  %36 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %26, %25 ]
  %37 = icmp eq %"struct.WTF::KeyValuePair"* %36, %18
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  br label %47

41:                                               ; preds = %32, %61, %76, %73, %9, %35
  %42 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 2147483647
  store atomic i32 %46, i32* %44 monotonic, align 4
  br label %92

47:                                               ; preds = %38, %76
  %48 = phi %"struct.WTF::KeyValuePair"* [ %36, %38 ], [ %67, %76 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %49, align 8
  %51 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %50 to i1 (%"class.blink::SVGAnimatedPropertyBase"*)***
  %52 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)**, i1 (%"class.blink::SVGAnimatedPropertyBase"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %52, i64 9
  %54 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::SVGAnimatedPropertyBase"* %50) #13
  br i1 %55, label %56, label %61

56:                                               ; preds = %47
  %57 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %50 to void (%"class.blink::SVGAnimatedPropertyBase"*)***
  %58 = load void (%"class.blink::SVGAnimatedPropertyBase"*)**, void (%"class.blink::SVGAnimatedPropertyBase"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*)** %58, i64 10
  %60 = load void (%"class.blink::SVGAnimatedPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*)** %59, align 8
  tail call void %60(%"class.blink::SVGAnimatedPropertyBase"* %50) #13
  br label %61

61:                                               ; preds = %56, %47
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 1
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %18
  br i1 %63, label %41, label %64

64:                                               ; preds = %61
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  br label %66

66:                                               ; preds = %73, %64
  %67 = phi %"struct.WTF::KeyValuePair"* [ %62, %64 ], [ %74, %73 ]
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, %65
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %72 = or i1 %71, %70
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 1
  %75 = icmp eq %"struct.WTF::KeyValuePair"* %74, %18
  br i1 %75, label %41, label %66

76:                                               ; preds = %66
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, %18
  br i1 %77, label %41, label %47

78:                                               ; preds = %2
  %79 = tail call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %1)
  %80 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %79, null
  br i1 %80, label %92, label %81

81:                                               ; preds = %78
  %82 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %79 to i1 (%"class.blink::SVGAnimatedPropertyBase"*)***
  %83 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)**, i1 (%"class.blink::SVGAnimatedPropertyBase"*)*** %82, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %83, i64 9
  %85 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::SVGAnimatedPropertyBase"* nonnull %79) #13
  br i1 %86, label %87, label %92

87:                                               ; preds = %81
  %88 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %79 to void (%"class.blink::SVGAnimatedPropertyBase"*)***
  %89 = load void (%"class.blink::SVGAnimatedPropertyBase"*)**, void (%"class.blink::SVGAnimatedPropertyBase"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*)** %89, i64 10
  %91 = load void (%"class.blink::SVGAnimatedPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyBase"*)** %90, align 8
  tail call void %91(%"class.blink::SVGAnimatedPropertyBase"* nonnull %79) #13
  br label %92

92:                                               ; preds = %81, %87, %78, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  br i1 %5, label %36, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %12
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  br label %18

18:                                               ; preds = %25, %14
  %19 = phi %"struct.WTF::KeyValuePair"* [ %7, %14 ], [ %26, %25 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %21, %17
  %23 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %21, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %24 = or i1 %23, %22
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %11
  br i1 %27, label %36, label %18

28:                                               ; preds = %18, %12
  %29 = phi %"struct.WTF::KeyValuePair"* [ %7, %12 ], [ %19, %18 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %11
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %33 = bitcast %"class.blink::SVGElement"* %0 to void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)***
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  br label %37

36:                                               ; preds = %25, %58, %73, %70, %2, %28
  ret void

37:                                               ; preds = %31, %73
  %38 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %64, %73 ]
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %40, i64 0, i32 1
  %42 = bitcast i24* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 65504
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %37
  %47 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %40 to i1 (%"class.blink::SVGAnimatedPropertyBase"*)***
  %48 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)**, i1 (%"class.blink::SVGAnimatedPropertyBase"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %48, i64 4
  %50 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::SVGAnimatedPropertyBase"* %40) #13
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %40, i64 0, i32 3
  %54 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %53, align 8
  %55 = load void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)**, void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)*** %33, align 8
  %56 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)*, void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)** %55, i64 82
  %57 = load void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)*, void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)** %56, align 8
  tail call void %57(%"class.blink::SVGElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %54, %"class.WTF::AtomicString"* dereferenceable(8) %32, %"class.blink::MutableCSSPropertyValueSet"* %1) #13
  br label %58

58:                                               ; preds = %37, %46, %52
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 1
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %11
  br i1 %60, label %36, label %61

61:                                               ; preds = %58
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  br label %63

63:                                               ; preds = %70, %61
  %64 = phi %"struct.WTF::KeyValuePair"* [ %59, %61 ], [ %71, %70 ]
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %62
  %68 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %73

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %71, %11
  br i1 %72, label %36, label %63

73:                                               ; preds = %63
  %74 = icmp eq %"struct.WTF::KeyValuePair"* %64, %11
  br i1 %74, label %36, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ComputedStyle"* @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::SVGElement"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRequest", align 8
  %4 = alloca %"class.blink::StyleRequest", align 8
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %5, align 8
  %7 = icmp eq %"class.blink::SVGElementRareData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %6, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %9, align 8
  %11 = icmp eq %"class.blink::SVGElement"* %10, null
  br i1 %11, label %12, label %60

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %16) #13
  %18 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %19 = bitcast %"class.blink::StyleRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #13
  %20 = bitcast %"class.blink::StyleRequest"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 48, i1 false)
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #13
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #13
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %12, %26, %41
  %44 = call %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver12ResolveStyleEPNS_7ElementERKNS_18StyleRecalcContextERKNS_12StyleRequestE(%"class.blink::StyleResolver"* %17, %"class.blink::Element"* %18, %"class.blink::StyleRecalcContext"* dereferenceable(8) %1, %"class.blink::StyleRequest"* nonnull dereferenceable(48) %3) #13
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %153, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %153

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #13
  br label %153

60:                                               ; preds = %8
  %61 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %61) #13
  %63 = icmp eq %"class.blink::Element"* %62, null
  br i1 %63, label %101, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %62, i64 0, i32 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 12
  %68 = icmp eq i32 %67, 0
  %69 = and i32 %66, 1
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %62, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %68, label %72, label %85

72:                                               ; preds = %64
  br i1 %70, label %80, label %73

73:                                               ; preds = %72
  %74 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRareData"**
  %75 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %75, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %77, i64 0, i32 2, i32 0
  %79 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %78, align 8
  br label %101

80:                                               ; preds = %72
  %81 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRenderingData"**
  %82 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %82, i64 0, i32 2, i32 0
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %83, align 8
  br label %101

85:                                               ; preds = %64
  br i1 %70, label %90, label %86

86:                                               ; preds = %85
  %87 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRareData"**
  %88 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %88, i64 0, i32 1, i32 0, i32 0
  br label %92

90:                                               ; preds = %85
  %91 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRenderingData"**
  br label %92

92:                                               ; preds = %90, %86
  %93 = phi %"class.blink::NodeRenderingData"** [ %89, %86 ], [ %91, %90 ]
  %94 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %94, i64 0, i32 1
  %96 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %95, align 8
  %97 = icmp eq %"class.blink::LayoutObject"* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %96, i64 0, i32 5, i32 0
  %100 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %99, align 8
  br label %101

101:                                              ; preds = %98, %92, %80, %73, %60
  %102 = phi %"class.blink::ComputedStyle"* [ null, %60 ], [ %100, %98 ], [ null, %92 ], [ %79, %73 ], [ %84, %80 ]
  %103 = bitcast %"class.blink::StyleRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %103) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 48, i1 false)
  %104 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %4, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 21, i1 false) #13
  %105 = bitcast i32* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 16, i1 false) #13
  %106 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %107 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %106, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %4, i64 0, i32 7, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %109, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %110, label %128, label %111

111:                                              ; preds = %101
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %116
  tail call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %128

128:                                              ; preds = %101, %111, %126
  %129 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %4, i64 0, i32 0
  store %"class.blink::ComputedStyle"* %102, %"class.blink::ComputedStyle"** %129, align 8
  %130 = getelementptr inbounds %"class.blink::StyleRequest", %"class.blink::StyleRequest"* %4, i64 0, i32 1
  store %"class.blink::ComputedStyle"* %102, %"class.blink::ComputedStyle"** %130, align 8
  %131 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %132 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %132, i64 0, i32 2, i32 0, i32 0
  %134 = load %"class.blink::Document"*, %"class.blink::Document"** %133, align 8
  %135 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %134) #13
  %136 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %10, i64 0, i32 0
  %137 = call %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver12ResolveStyleEPNS_7ElementERKNS_18StyleRecalcContextERKNS_12StyleRequestE(%"class.blink::StyleResolver"* %135, %"class.blink::Element"* %136, %"class.blink::StyleRecalcContext"* dereferenceable(8) %1, %"class.blink::StyleRequest"* nonnull dereferenceable(48) %4) #13
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %128
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #13
  br label %153

153:                                              ; preds = %152, %149, %128, %59, %56, %43
  %154 = phi i8* [ %19, %43 ], [ %19, %56 ], [ %19, %59 ], [ %103, %128 ], [ %103, %149 ], [ %103, %152 ]
  %155 = phi %"class.blink::ComputedStyle"* [ %44, %43 ], [ %44, %56 ], [ %44, %59 ], [ %137, %128 ], [ %137, %149 ], [ %137, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %154) #13
  ret %"class.blink::ComputedStyle"* %155
}

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver12ResolveStyleEPNS_7ElementERKNS_18StyleRecalcContextERKNS_12StyleRequestE(%"class.blink::StyleResolver"*, %"class.blink::Element"*, %"class.blink::StyleRecalcContext"* dereferenceable(8), %"class.blink::StyleRequest"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10SVGElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::SVGElement"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SVGElement"* %0 to i1 (%"class.blink::SVGElement"*)***
  %4 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %4, i64 162
  %6 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::SVGElement"* %0) #13
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %9) #13
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 60
  %16 = icmp eq i32 %15, 32
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %19 = tail call zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"* %18, %"class.blink::ComputedStyle"* dereferenceable(104) %1) #13
  br label %20

20:                                               ; preds = %8, %12, %17, %2
  %21 = phi i1 [ false, %2 ], [ %19, %17 ], [ false, %12 ], [ false, %8 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10SVGElement12HasSVGParentEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %2) #13
  %4 = icmp eq %"class.blink::ContainerNode"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = and i32 %7, 48
  %12 = icmp eq i32 %11, 32
  br label %13

13:                                               ; preds = %5, %1, %10
  %14 = phi i1 [ %12, %10 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink10SVGElement27AnimatedSMILStylePropertiesEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 9, i32 0, i32 0
  %7 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::MutableCSSPropertyValueSet"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink10SVGElement33EnsureAnimatedSMILStylePropertiesEv(%"class.blink::SVGElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  %5 = icmp eq %"class.blink::SVGElementRareData"* %4, null
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #13
  %9 = getelementptr inbounds i8, i8* %7, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #13
  %10 = getelementptr inbounds i8, i8* %7, i64 72
  %11 = getelementptr inbounds i8, i8* %7, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #13
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, -8
  store i8 %13, i8* %11, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #13
  %15 = getelementptr inbounds i8, i8* %7, i64 128
  %16 = getelementptr inbounds i8, i8* %7, i64 144
  %17 = bitcast i8* %16 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %17) #13
  %18 = getelementptr inbounds i8, i8* %7, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = ptrtoint i8* %7 to i64
  %23 = bitcast %"class.blink::Member.32"* %2 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %7 to %"class.blink::SVGElementRareData"*
  br i1 %25, label %30, label %27

27:                                               ; preds = %6
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #13
  %29 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  br label %30

30:                                               ; preds = %1, %6, %27
  %31 = phi %"class.blink::SVGElementRareData"* [ %4, %1 ], [ %29, %27 ], [ %26, %6 ]
  %32 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink18SVGElementRareData33EnsureAnimatedSMILStylePropertiesEv(%"class.blink::SVGElementRareData"* %31) #13
  ret %"class.blink::MutableCSSPropertyValueSet"* %32
}

declare %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink18SVGElementRareData33EnsureAnimatedSMILStylePropertiesEv(%"class.blink::SVGElementRareData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ComputedStyle"* @_ZN5blink10SVGElement24BaseComputedStyleForSMILEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %8 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %6, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %7) #13
  br label %26

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %10) #13
  %12 = icmp eq %"class.blink::ContainerNode"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %11, i64 0, i32 0
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %16 = bitcast %"class.blink::ContainerNode"* %11 to %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)***
  %17 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)**, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %17, i64 71
  %19 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %18, align 8
  %20 = tail call %"class.blink::ComputedStyle"* %19(%"class.blink::Node"* %14, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %15) #13
  br label %21

21:                                               ; preds = %9, %13
  %22 = phi %"class.blink::ComputedStyle"* [ %20, %13 ], [ null, %9 ]
  %23 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %24 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  %25 = tail call %"class.blink::ComputedStyle"* @_ZN5blink18SVGElementRareData21OverrideComputedStyleEPNS_7ElementEPKNS_13ComputedStyleE(%"class.blink::SVGElementRareData"* %23, %"class.blink::Element"* %24, %"class.blink::ComputedStyle"* %22) #13
  br label %26

26:                                               ; preds = %21, %5
  %27 = phi %"class.blink::ComputedStyle"* [ %25, %21 ], [ %8, %5 ]
  ret %"class.blink::ComputedStyle"* %27
}

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink18SVGElementRareData21OverrideComputedStyleEPNS_7ElementEPKNS_13ComputedStyleE(%"class.blink::SVGElementRareData"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10SVGElement22HasFocusEventListenersEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kFocusinE, align 8
  %4 = bitcast %"class.blink::SVGElement"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %5, i64 25
  %7 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %6, align 8
  %8 = tail call %"class.blink::EventTargetData"* %7(%"class.blink::EventTarget"* %2) #13
  %9 = icmp eq %"class.blink::EventTargetData"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %8, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %3) #13
  br i1 %12, label %43, label %13

13:                                               ; preds = %1, %10
  %14 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kFocusoutE, align 8
  %15 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %4, align 8
  %16 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %15, i64 25
  %17 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %16, align 8
  %18 = tail call %"class.blink::EventTargetData"* %17(%"class.blink::EventTarget"* %2) #13
  %19 = icmp eq %"class.blink::EventTargetData"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %18, i64 0, i32 0
  %22 = tail call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %21, %"class.WTF::AtomicString"* dereferenceable(8) %14) #13
  br i1 %22, label %43, label %23

23:                                               ; preds = %13, %20
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kFocusE, align 8
  %25 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %4, align 8
  %26 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %25, i64 25
  %27 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %26, align 8
  %28 = tail call %"class.blink::EventTargetData"* %27(%"class.blink::EventTarget"* %2) #13
  %29 = icmp eq %"class.blink::EventTargetData"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %28, i64 0, i32 0
  %32 = tail call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %31, %"class.WTF::AtomicString"* dereferenceable(8) %24) #13
  br i1 %32, label %43, label %33

33:                                               ; preds = %23, %30
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kBlurE, align 8
  %35 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %4, align 8
  %36 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %35, i64 25
  %37 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %36, align 8
  %38 = tail call %"class.blink::EventTargetData"* %37(%"class.blink::EventTarget"* %2) #13
  %39 = icmp eq %"class.blink::EventTargetData"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %38, i64 0, i32 0
  %42 = tail call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %41, %"class.WTF::AtomicString"* dereferenceable(8) %34) #13
  br label %43

43:                                               ; preds = %40, %33, %30, %20, %10
  %44 = phi i1 [ true, %30 ], [ true, %20 ], [ true, %10 ], [ %42, %40 ], [ false, %33 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink26LayoutSVGResourceContainer42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectEb(%"class.blink::LayoutObject"* dereferenceable(88) %0, i1 zeroext true) #13
  ret void
}

declare void @_ZN5blink26LayoutSVGResourceContainer42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectEb(%"class.blink::LayoutObject"* dereferenceable(88), i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink13SVGUseElement20InvalidateShadowTreeEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement31SetNeedsStyleRecalcForInstancesENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::SVGElement"* nocapture readonly, i32, %"class.blink::StyleChangeReasonForTracing"*) local_unnamed_addr #0 align 2 {
  %4 = tail call dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %0)
  %5 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %42, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %4, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %8, %20
  %17 = phi %"class.blink::WeakMember"* [ %21, %20 ], [ %10, %8 ]
  %18 = bitcast %"class.blink::WeakMember"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %17, i64 1
  %22 = icmp eq %"class.blink::WeakMember"* %21, %14
  br i1 %22, label %42, label %16

23:                                               ; preds = %16, %8
  %24 = phi %"class.blink::WeakMember"* [ %10, %8 ], [ %17, %16 ]
  %25 = icmp eq %"class.blink::WeakMember"* %24, %14
  br i1 %25, label %42, label %26

26:                                               ; preds = %23, %40
  %27 = phi %"class.blink::WeakMember"* [ %34, %40 ], [ %24, %23 ]
  %28 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %29, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %30, i32 %1, %"class.blink::StyleChangeReasonForTracing"* %2) #13
  %31 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %27, i64 1
  %32 = icmp eq %"class.blink::WeakMember"* %31, %14
  br i1 %32, label %42, label %33

33:                                               ; preds = %26, %37
  %34 = phi %"class.blink::WeakMember"* [ %38, %37 ], [ %31, %26 ]
  %35 = bitcast %"class.blink::WeakMember"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  switch i64 %36, label %40 [
    i64 -1, label %37
    i64 0, label %37
  ]

37:                                               ; preds = %33, %33
  %38 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %34, i64 1
  %39 = icmp eq %"class.blink::WeakMember"* %38, %14
  br i1 %39, label %42, label %33

40:                                               ; preds = %33
  %41 = icmp eq %"class.blink::WeakMember"* %34, %14
  br i1 %41, label %42, label %26

42:                                               ; preds = %20, %26, %40, %37, %23, %3
  ret void
}

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement21InstanceUpdateBlockerC2EPS0_(%"class.blink::SVGElement::InstanceUpdateBlocker"* nocapture, %"class.blink::SVGElement"*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement::InstanceUpdateBlocker", %"class.blink::SVGElement::InstanceUpdateBlocker"* %0, i64 0, i32 0
  store %"class.blink::SVGElement"* %1, %"class.blink::SVGElement"** %3, align 8
  %4 = icmp eq %"class.blink::SVGElement"* %1, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %6, align 8
  %8 = icmp eq %"class.blink::SVGElementRareData"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %7, i64 0, i32 6
  %11 = load i8, i8* %10, align 8
  %12 = or i8 %11, 1
  store i8 %12, i8* %10, align 8
  br label %13

13:                                               ; preds = %9, %5, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement21InstanceUpdateBlockerD2Ev(%"class.blink::SVGElement::InstanceUpdateBlocker"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement::InstanceUpdateBlocker", %"class.blink::SVGElement::InstanceUpdateBlocker"* %0, i64 0, i32 0
  %3 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElement"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %6, align 8
  %8 = icmp eq %"class.blink::SVGElementRareData"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %7, i64 0, i32 6
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, -2
  store i8 %12, i8* %10, align 8
  br label %13

13:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HeapHashSet.36"* @_ZNK5blink10SVGElement23SetOfIncomingReferencesEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  %5 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 1
  %6 = select i1 %4, %"class.blink::HeapHashSet.36"* null, %"class.blink::HeapHashSet.36"* %5
  ret %"class.blink::HeapHashSet.36"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement14AddReferenceToEPS0_(%"class.blink::SVGElement"*, %"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGElement"*, align 8
  %4 = alloca %"class.blink::SVGElement"*, align 8
  store %"class.blink::SVGElement"* %1, %"class.blink::SVGElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %6, align 8
  %8 = icmp eq %"class.blink::SVGElementRareData"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #13
  %11 = getelementptr inbounds i8, i8* %10, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %10, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #13
  %13 = getelementptr inbounds i8, i8* %10, i64 72
  %14 = getelementptr inbounds i8, i8* %10, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  %15 = load i8, i8* %14, align 8
  %16 = and i8 %15, -8
  store i8 %16, i8* %14, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #13
  %18 = getelementptr inbounds i8, i8* %10, i64 128
  %19 = getelementptr inbounds i8, i8* %10, i64 144
  %20 = bitcast i8* %19 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %20) #13
  %21 = getelementptr inbounds i8, i8* %10, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  %25 = ptrtoint i8* %10 to i64
  %26 = bitcast %"class.blink::Member.32"* %5 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  %29 = bitcast i8* %10 to %"class.blink::SVGElementRareData"*
  br i1 %28, label %33, label %30

30:                                               ; preds = %9
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #13
  %32 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %6, align 8
  br label %33

33:                                               ; preds = %2, %9, %30
  %34 = phi %"class.blink::SVGElementRareData"* [ %7, %2 ], [ %32, %30 ], [ %29, %9 ]
  %35 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = call { %"class.blink::Member.31"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.40"* %35, %"class.blink::SVGElement"** nonnull dereferenceable(8) %3, %"class.blink::SVGElement"** nonnull dereferenceable(8) %3) #13
  %37 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %3, align 8
  %38 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %37, i64 0, i32 3
  %39 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %39, align 8
  %41 = icmp eq %"class.blink::SVGElementRareData"* %40, null
  br i1 %41, label %42, label %66

42:                                               ; preds = %33
  %43 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 20, i1 false) #13
  %44 = getelementptr inbounds i8, i8* %43, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 20, i1 false) #13
  %45 = getelementptr inbounds i8, i8* %43, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 20, i1 false) #13
  %46 = getelementptr inbounds i8, i8* %43, i64 72
  %47 = getelementptr inbounds i8, i8* %43, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #13
  %48 = load i8, i8* %47, align 8
  %49 = and i8 %48, -8
  store i8 %49, i8* %47, align 8
  %50 = getelementptr inbounds i8, i8* %43, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 20, i1 false) #13
  %51 = getelementptr inbounds i8, i8* %43, i64 128
  %52 = getelementptr inbounds i8, i8* %43, i64 144
  %53 = bitcast i8* %52 to %"class.blink::AffineTransform"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #13
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %53) #13
  %54 = getelementptr inbounds i8, i8* %43, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  %58 = ptrtoint i8* %43 to i64
  %59 = bitcast %"class.blink::Member.32"* %38 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  %62 = bitcast i8* %43 to %"class.blink::SVGElementRareData"*
  br i1 %61, label %66, label %63

63:                                               ; preds = %42
  %64 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %43) #13
  %65 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %39, align 8
  br label %66

66:                                               ; preds = %33, %42, %63
  %67 = phi %"class.blink::SVGElementRareData"* [ %40, %33 ], [ %65, %63 ], [ %62, %42 ]
  %68 = bitcast %"class.blink::SVGElement"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #13
  store %"class.blink::SVGElement"* %0, %"class.blink::SVGElement"** %4, align 8
  %69 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %67, i64 0, i32 1, i32 0, i32 0
  %70 = call { %"class.blink::Member.31"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.40"* %69, %"class.blink::SVGElement"** nonnull dereferenceable(8) %4, %"class.blink::SVGElement"** nonnull dereferenceable(8) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.blink::HeapHashSet.36"* @_ZN5blink10SVGElement32GetDependencyTraversalVisitedSetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %77, !prof !13

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %77, label %6

6:                                                ; preds = %3
  %7 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %8 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %12 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %11, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %8, %6 ], [ %12, %10 ]
  %15 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %7, i64 0, i32 19, i64 0
  %16 = bitcast %"class.blink::BaseArena"** %15 to %"class.blink::NormalPageArena"**
  %17 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %17, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 32
  br i1 %20, label %51, label %21, !prof !2

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %17, i64 0, i32 3
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 32
  store i8* %24, i8** %22, align 8
  %25 = add i64 %19, -32
  store i64 %25, i64* %18, align 8
  %26 = bitcast i8* %23 to i32*
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %23, i64 4
  %28 = bitcast i8* %27 to i16*
  %29 = trunc i32 %14 to i16
  %30 = shl i16 %29, 2
  store atomic i16 %30, i16* %28 monotonic, align 2
  %31 = getelementptr inbounds i8, i8* %23, i64 6
  %32 = bitcast i8* %31 to i16*
  store i16 16, i16* %32, align 2
  %33 = ptrtoint i8* %23 to i64
  %34 = and i64 %33, -131072
  %35 = inttoptr i64 %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 4400
  %37 = bitcast i8* %36 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %38 = bitcast i8* %36 to i64*
  %39 = load i64, i64* %38, align 16
  %40 = sub i64 %33, %39
  %41 = lshr i64 %40, 3
  %42 = lshr i64 %40, 6
  %43 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %37, i64 0, i32 0, i32 1, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = trunc i64 %41 to i32
  %46 = and i32 %45, 7
  %47 = shl i32 1, %46
  %48 = trunc i32 %47 to i8
  %49 = or i8 %44, %48
  store atomic i8 %49, i8* %43 release, align 1
  %50 = getelementptr inbounds i8, i8* %23, i64 8
  br label %54

51:                                               ; preds = %13
  %52 = zext i32 %14 to i64
  %53 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %17, i64 32, i64 %52) #13
  br label %54

54:                                               ; preds = %51, %21
  %55 = phi i8* [ %50, %21 ], [ %53, %51 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 20, i1 false) #13
  %56 = getelementptr inbounds i8, i8* %55, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  store i8* %55, i8** bitcast (%"class.WTF::StaticSingleton.1906"* @_ZZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies to i8**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.1906", %"class.WTF::StaticSingleton.1906"* @_ZZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %60 = ptrtoint i8* %55 to i64
  switch i64 %60, label %61 [
    i64 0, label %76
    i64 -1, label %76
  ]

61:                                               ; preds = %54
  %62 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %63 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %63, align 8
  %65 = icmp eq %"class.blink::PersistentNode"* %64, null
  br i1 %65, label %66, label %69, !prof !2

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %62, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %67) #13
  %68 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %63, align 8
  br label %69

69:                                               ; preds = %66, %61
  %70 = phi %"class.blink::PersistentNode"* [ %68, %66 ], [ %64, %61 ]
  %71 = bitcast %"class.blink::PersistentNode"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.blink::PersistentRegion"* %62 to i64*
  store i64 %72, i64* %73, align 8
  %74 = bitcast %"class.blink::PersistentNode"* %70 to %"class.blink::PersistentBase.1912"**
  store %"class.blink::PersistentBase.1912"* bitcast (%"class.WTF::StaticSingleton.1906"* @_ZZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies to %"class.blink::PersistentBase.1912"*), %"class.blink::PersistentBase.1912"** %74, align 8
  %75 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %70, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv, void (%"class.blink::Visitor"*, i8*)** %75, align 8
  store %"class.blink::PersistentNode"* %70, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.1906", %"class.WTF::StaticSingleton.1906"* @_ZZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %76

76:                                               ; preds = %54, %54, %69
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies) #13
  br label %77

77:                                               ; preds = %3, %76, %0
  %78 = load %"class.blink::HeapHashSet.36"*, %"class.blink::HeapHashSet.36"** bitcast (%"class.WTF::StaticSingleton.1906"* @_ZZN5blink10SVGElement32GetDependencyTraversalVisitedSetEvE27s_invalidating_dependencies to %"class.blink::HeapHashSet.36"**), align 8
  ret %"class.blink::HeapHashSet.36"* %78
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12CopyToVectorIN5blink11HeapHashSetINS1_6MemberINS1_10SVGElementEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEENS1_10HeapVectorIS5_Lj0EEEEEvRKT_RT0_(%"class.blink::HeapHashSet.36"* dereferenceable(24), %"class.blink::HeapVector.1914"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #13
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !2

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #13
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"class.blink::HeapVector.1914", %"class.blink::HeapVector.1914"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HeapHashSet.36", %"class.blink::HeapHashSet.36"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::HeapVector.1914", %"class.blink::HeapVector.1914"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp ult i32 %20, %18
  br i1 %21, label %33, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.blink::HeapVector.1914", %"class.blink::HeapVector.1914"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %24, i64 %25
  %28 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %24, i64 %26
  %29 = bitcast %"class.blink::Member.31"* %27 to i8*
  %30 = ptrtoint %"class.blink::Member.31"* %28 to i64
  %31 = ptrtoint %"class.blink::Member.31"* %27 to i64
  %32 = sub i64 %30, %31
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #13
  br label %58

33:                                               ; preds = %9
  %34 = getelementptr inbounds %"class.blink::HeapVector.1914", %"class.blink::HeapVector.1914"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ult i32 %35, %18
  br i1 %36, label %37, label %46

37:                                               ; preds = %33
  %38 = lshr i32 %35, 2
  %39 = add nuw i32 %35, 1
  %40 = add i32 %39, %38
  %41 = icmp ugt i32 %40, 4
  %42 = select i1 %41, i32 %40, i32 4
  %43 = icmp ugt i32 %42, %18
  %44 = select i1 %43, i32 %42, i32 %18
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_10SVGElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1917"* %16, i32 %44) #13
  %45 = load i32, i32* %19, align 4
  br label %46

46:                                               ; preds = %37, %33
  %47 = phi i32 [ %45, %37 ], [ %20, %33 ]
  %48 = getelementptr inbounds %"class.blink::HeapVector.1914", %"class.blink::HeapVector.1914"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %48, align 8
  %50 = zext i32 %47 to i64
  %51 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %49, i64 %50
  %52 = zext i32 %18 to i64
  %53 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %49, i64 %52
  %54 = bitcast %"class.blink::Member.31"* %51 to i8*
  %55 = ptrtoint %"class.blink::Member.31"* %53 to i64
  %56 = ptrtoint %"class.blink::Member.31"* %51 to i64
  %57 = sub i64 %55, %56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 %57, i1 false) #13
  br label %58

58:                                               ; preds = %22, %46
  store i32 %18, i32* %19, align 4
  %59 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %60 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %59, i64 0, i32 1
  %61 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %60) #13
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %65, !prof !2

63:                                               ; preds = %58
  %64 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %60, i8* %64) #13
  br label %65

65:                                               ; preds = %58, %63
  %66 = phi i8* [ %64, %63 ], [ %61, %58 ]
  %67 = bitcast i8* %66 to %"class.blink::ThreadState"**
  %68 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %68, i64 0, i32 14
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = load i32, i32* %17, align 4
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.blink::HeapHashSet.36", %"class.blink::HeapHashSet.36"* %0, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::HeapHashSet.36", %"class.blink::HeapHashSet.36"* %0, i64 0, i32 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %75, i64 %78
  br i1 %73, label %92, label %80

80:                                               ; preds = %65
  %81 = icmp eq i32 %77, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %80, %86
  %83 = phi %"class.blink::Member.31"* [ %87, %86 ], [ %75, %80 ]
  %84 = bitcast %"class.blink::Member.31"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  switch i64 %85, label %89 [
    i64 -1, label %86
    i64 0, label %86
  ]

86:                                               ; preds = %82, %82
  %87 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %83, i64 1
  %88 = icmp eq %"class.blink::Member.31"* %87, %79
  br i1 %88, label %92, label %82

89:                                               ; preds = %82, %80
  %90 = phi %"class.blink::Member.31"* [ %75, %80 ], [ %83, %82 ]
  %91 = icmp eq %"class.blink::Member.31"* %90, %79
  br i1 %91, label %92, label %93

92:                                               ; preds = %86, %105, %115, %112, %65, %89
  ret void

93:                                               ; preds = %89, %115
  %94 = phi i32 [ %116, %115 ], [ 0, %89 ]
  %95 = phi %"class.blink::Member.31"* [ %109, %115 ], [ %90, %89 ]
  %96 = tail call dereferenceable(8) %"class.blink::Member.31"* @_ZN3WTF6VectorIN5blink6MemberINS1_10SVGElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1917"* %16, i32 %94) #13
  %97 = bitcast %"class.blink::Member.31"* %95 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.blink::Member.31"* %96 to i64*
  store atomic i64 %98, i64* %99 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %93
  %103 = inttoptr i64 %98 to i8*
  %104 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %103) #13
  br label %105

105:                                              ; preds = %93, %102
  %106 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %95, i64 1
  %107 = icmp eq %"class.blink::Member.31"* %106, %79
  br i1 %107, label %92, label %108

108:                                              ; preds = %105, %112
  %109 = phi %"class.blink::Member.31"* [ %113, %112 ], [ %106, %105 ]
  %110 = bitcast %"class.blink::Member.31"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  switch i64 %111, label %115 [
    i64 -1, label %112
    i64 0, label %112
  ]

112:                                              ; preds = %108, %108
  %113 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %109, i64 1
  %114 = icmp eq %"class.blink::Member.31"* %113, %79
  br i1 %114, label %92, label %108

115:                                              ; preds = %108
  %116 = add i32 %94, 1
  %117 = icmp eq %"class.blink::Member.31"* %109, %79
  br i1 %117, label %92, label %93
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement27RemoveAllOutgoingReferencesEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %159, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %10, i64 %13
  br i1 %8, label %63, label %15

15:                                               ; preds = %5
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %15, %21
  %18 = phi %"class.blink::Member.31"* [ %22, %21 ], [ %10, %15 ]
  %19 = bitcast %"class.blink::Member.31"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  switch i64 %20, label %24 [
    i64 -1, label %21
    i64 0, label %21
  ]

21:                                               ; preds = %17, %17
  %22 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %18, i64 1
  %23 = icmp eq %"class.blink::Member.31"* %22, %14
  br i1 %23, label %63, label %17

24:                                               ; preds = %17, %15
  %25 = phi %"class.blink::Member.31"* [ %10, %15 ], [ %18, %17 ]
  %26 = icmp eq %"class.blink::Member.31"* %25, %14
  br i1 %26, label %63, label %27

27:                                               ; preds = %24
  %28 = ptrtoint %"class.blink::SVGElement"* %0 to i64
  %29 = shl i64 %28, 32
  %30 = xor i64 %29, -1
  %31 = add i64 %30, %28
  %32 = lshr i64 %31, 22
  %33 = xor i64 %32, %31
  %34 = shl i64 %33, 13
  %35 = xor i64 %34, -1
  %36 = add i64 %33, %35
  %37 = lshr i64 %36, 8
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, 9
  %40 = lshr i64 %39, 15
  %41 = xor i64 %40, %39
  %42 = shl i64 %41, 27
  %43 = xor i64 %42, -1
  %44 = add i64 %41, %43
  %45 = lshr i64 %44, 31
  %46 = xor i64 %45, %44
  %47 = trunc i64 %46 to i32
  %48 = xor i32 %47, -1
  %49 = lshr i32 %47, 23
  %50 = add i32 %49, %48
  %51 = shl i32 %50, 12
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 7
  %54 = xor i32 %53, %52
  %55 = shl i32 %54, 2
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 20
  %58 = xor i32 %57, %56
  %59 = or i32 %58, 1
  %60 = zext i32 %59 to i64
  br label %69

61:                                               ; preds = %147, %157, %154
  %62 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %9, align 8
  br label %63

63:                                               ; preds = %21, %5, %61, %24
  %64 = phi %"class.blink::Member.31"* [ %62, %61 ], [ %10, %24 ], [ %10, %5 ], [ %10, %21 ]
  %65 = icmp eq %"class.blink::Member.31"* %64, null
  br i1 %65, label %159, label %66

66:                                               ; preds = %63
  %67 = bitcast %"class.blink::Member.31"* %64 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %67) #13
  %68 = bitcast %"class.blink::SVGElementRareData"* %3 to i64*
  store atomic i64 0, i64* %68 monotonic, align 8
  store i32 0, i32* %11, align 8
  store i32 0, i32* %6, align 4
  br label %159

69:                                               ; preds = %27, %157
  %70 = phi %"class.blink::Member.31"* [ %25, %27 ], [ %151, %157 ]
  %71 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %72, i64 0, i32 3
  %74 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %74, align 8
  %76 = icmp eq %"class.blink::SVGElementRareData"* %75, null
  br i1 %76, label %77, label %101

77:                                               ; preds = %69
  %78 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 20, i1 false) #13
  %79 = getelementptr inbounds i8, i8* %78, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 20, i1 false) #13
  %80 = getelementptr inbounds i8, i8* %78, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 20, i1 false) #13
  %81 = getelementptr inbounds i8, i8* %78, i64 72
  %82 = getelementptr inbounds i8, i8* %78, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #13
  %83 = load i8, i8* %82, align 8
  %84 = and i8 %83, -8
  store i8 %84, i8* %82, align 8
  %85 = getelementptr inbounds i8, i8* %78, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 20, i1 false) #13
  %86 = getelementptr inbounds i8, i8* %78, i64 128
  %87 = getelementptr inbounds i8, i8* %78, i64 144
  %88 = bitcast i8* %87 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %88) #13
  %89 = getelementptr inbounds i8, i8* %78, i64 -4
  %90 = bitcast i8* %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = or i16 %91, 1
  store atomic i16 %92, i16* %90 release, align 2
  %93 = ptrtoint i8* %78 to i64
  %94 = bitcast %"class.blink::Member.32"* %73 to i64*
  store atomic i64 %93, i64* %94 monotonic, align 8
  %95 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %96 = icmp eq i32 %95, 0
  %97 = bitcast i8* %78 to %"class.blink::SVGElementRareData"*
  br i1 %96, label %101, label %98

98:                                               ; preds = %77
  %99 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #13
  %100 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %74, align 8
  br label %101

101:                                              ; preds = %69, %77, %98
  %102 = phi %"class.blink::SVGElementRareData"* [ %75, %69 ], [ %100, %98 ], [ %97, %77 ]
  %103 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %102, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.WTF::HashSet.39", %"class.WTF::HashSet.39"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %104, align 8
  %106 = icmp eq %"class.blink::Member.31"* %105, null
  %107 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %102, i64 0, i32 1, i32 0, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  br i1 %106, label %137, label %109

109:                                              ; preds = %101
  %110 = add i32 %108, -1
  %111 = zext i32 %110 to i64
  %112 = and i32 %110, %47
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %105, i64 %113
  %115 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %115, align 8
  %117 = icmp eq %"class.blink::SVGElement"* %116, %0
  br i1 %117, label %132, label %118

118:                                              ; preds = %109, %123
  %119 = phi %"class.blink::SVGElement"* [ %130, %123 ], [ %116, %109 ]
  %120 = phi i64 [ %127, %123 ], [ %113, %109 ]
  %121 = phi i64 [ %125, %123 ], [ 0, %109 ]
  %122 = icmp eq %"class.blink::SVGElement"* %119, null
  br i1 %122, label %137, label %123

123:                                              ; preds = %118
  %124 = icmp eq i64 %121, 0
  %125 = select i1 %124, i64 %60, i64 %121
  %126 = add i64 %125, %120
  %127 = and i64 %126, %111
  %128 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %105, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %129, align 8
  %131 = icmp eq %"class.blink::SVGElement"* %130, %0
  br i1 %131, label %132, label %118

132:                                              ; preds = %123, %109
  %133 = phi %"class.blink::Member.31"* [ %114, %109 ], [ %128, %123 ]
  %134 = icmp eq %"class.blink::Member.31"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = zext i32 %108 to i64
  br label %140

137:                                              ; preds = %118, %132, %101
  %138 = zext i32 %108 to i64
  %139 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %105, i64 %138
  br label %140

140:                                              ; preds = %137, %135
  %141 = phi i64 [ %136, %135 ], [ %138, %137 ]
  %142 = phi %"class.blink::Member.31"* [ %133, %135 ], [ %139, %137 ]
  %143 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %105, i64 %141
  %144 = icmp eq %"class.blink::Member.31"* %143, %142
  br i1 %144, label %147, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::HashSet.39", %"class.WTF::HashSet.39"* %103, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.40"* %146, %"class.blink::Member.31"* %142) #13
  br label %147

147:                                              ; preds = %140, %145
  %148 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %70, i64 1
  %149 = icmp eq %"class.blink::Member.31"* %148, %14
  br i1 %149, label %61, label %150

150:                                              ; preds = %147, %154
  %151 = phi %"class.blink::Member.31"* [ %155, %154 ], [ %148, %147 ]
  %152 = bitcast %"class.blink::Member.31"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  switch i64 %153, label %157 [
    i64 -1, label %154
    i64 0, label %154
  ]

154:                                              ; preds = %150, %150
  %155 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %151, i64 1
  %156 = icmp eq %"class.blink::Member.31"* %155, %14
  br i1 %156, label %61, label %150

157:                                              ; preds = %150
  %158 = icmp eq %"class.blink::Member.31"* %151, %14
  br i1 %158, label %61, label %69

159:                                              ; preds = %1, %66, %63
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::SVGElementResourceClient"* @_ZN5blink10SVGElement20GetSVGResourceClientEv(%"class.blink::SVGElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElementRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElementRareData", %"class.blink::SVGElementRareData"* %3, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::SVGElementResourceClient"*, %"class.blink::SVGElementResourceClient"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::SVGElementResourceClient"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::SVGElementResourceClient"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGElementResourceClient"* @_ZN5blink10SVGElement23EnsureSVGResourceClientEv(%"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.32", %"class.blink::Member.32"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  %5 = icmp eq %"class.blink::SVGElementRareData"* %4, null
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64 192) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #13
  %9 = getelementptr inbounds i8, i8* %7, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #13
  %10 = getelementptr inbounds i8, i8* %7, i64 72
  %11 = getelementptr inbounds i8, i8* %7, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #13
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, -8
  store i8 %13, i8* %11, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #13
  %15 = getelementptr inbounds i8, i8* %7, i64 128
  %16 = getelementptr inbounds i8, i8* %7, i64 144
  %17 = bitcast i8* %16 to %"class.blink::AffineTransform"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %17) #13
  %18 = getelementptr inbounds i8, i8* %7, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = ptrtoint i8* %7 to i64
  %23 = bitcast %"class.blink::Member.32"* %2 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %7 to %"class.blink::SVGElementRareData"*
  br i1 %25, label %30, label %27

27:                                               ; preds = %6
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #13
  %29 = load %"class.blink::SVGElementRareData"*, %"class.blink::SVGElementRareData"** %3, align 8
  br label %30

30:                                               ; preds = %1, %6, %27
  %31 = phi %"class.blink::SVGElementRareData"* [ %4, %1 ], [ %29, %27 ], [ %26, %6 ]
  %32 = tail call %"class.blink::SVGElementResourceClient"* @_ZN5blink18SVGElementRareData23EnsureSVGResourceClientEPNS_10SVGElementE(%"class.blink::SVGElementRareData"* %31, %"class.blink::SVGElement"* %0) #13
  ret %"class.blink::SVGElementResourceClient"* %32
}

declare %"class.blink::SVGElementResourceClient"* @_ZN5blink18SVGElementRareData23EnsureSVGResourceClientEPNS_10SVGElementE(%"class.blink::SVGElementRareData"*, %"class.blink::SVGElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10SVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::HeapHashSet"* %4 to i8*
  %6 = bitcast %"class.blink::HeapHashSet"* %4 to i64*
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = inttoptr i64 %7 to %"class.blink::WeakMember"*
  %9 = bitcast %"class.blink::HeapHashSet"* %4 to i8**
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %11 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, i64 11
  %13 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8** %9) #13
  %14 = inttoptr i64 %7 to i8*
  %15 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13
  %16 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"class.blink::WeakMember"**
  store %"class.blink::WeakMember"* %8, %"class.blink::WeakMember"** %16, align 8
  %17 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %17, align 8
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %19 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %19, i64 10
  %21 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8* %14, i8** %9, i8* %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10SVGElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13
  %22 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::HeapHashMap"* %22 to i64*
  %24 = load atomic i64, i64* %23 monotonic, align 8
  %25 = bitcast %"class.blink::HeapHashMap"* %22 to i8**
  %26 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %10, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %26, i64 11
  %28 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8** %25) #13
  %29 = icmp eq i64 %24, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %2
  %31 = inttoptr i64 %24 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #13
  br label %36

36:                                               ; preds = %2, %30
  %37 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 3
  %38 = bitcast %"class.blink::Member.32"* %37 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = inttoptr i64 %39 to i8*
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18SVGElementRareDataEE5TraceEPNS_7VisitorEPKv) #13
  br label %47

47:                                               ; preds = %36, %41
  %48 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 4
  %49 = bitcast %"class.blink::Member.807"* %48 to i64*
  %50 = load atomic i64, i64* %49 monotonic, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = inttoptr i64 %50 to i8*
  %54 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, i64 5
  %57 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %56, align 8
  tail call void %57(%"class.blink::Visitor"* %1, i8* nonnull %53, i8* nonnull %53, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SVGAnimatedStringEE5TraceEPNS_7VisitorEPKv) #13
  br label %58

58:                                               ; preds = %47, %52
  %59 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %59, %"class.blink::Visitor"* %1) #13
  ret void
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::SVGElement"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %3, %"class.blink::Event"* null, i32 %1) #13
  ret void
}

declare void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"*, %"class.blink::Event"*, i32) local_unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #13
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink10SVGElement18GetWrapperTypeInfoEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10SVGElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #13
  ret %"class.blink::ComputedStyle"* %4
}

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.1928"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13SupportsFocusEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BeginParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -1025
  store i32 %4, i32* %2, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesEnabledPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27MatchesReadWritePseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element28MatchesValidityPseudoClassesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12willValidateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Element14IsValidElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDisabledFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGeometryElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement14IsFilterEffectEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13IsTextContentEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement17IsTextPositioningEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22IsStructurallyExternalEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement7IsValidEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AffineTransform"* @_ZN5blink10SVGElement22AnimateMotionTransformEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AffineTransform"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24InterpolationEnvironment5IsCSSEv(%"class.blink::InterpolationEnvironment"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27SVGInterpolationEnvironment5IsSVGEv(%"class.blink::SVGInterpolationEnvironment"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27SVGInterpolationEnvironmentD0Ev(%"class.blink::SVGInterpolationEnvironment"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::SVGInterpolationEnvironment"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24InterpolationEnvironmentD2Ev(%"class.blink::InterpolationEnvironment"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.2002, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !15

23:                                               ; preds = %19
  %24 = bitcast %class.anon.2002* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = getelementptr inbounds %class.anon.2002, %class.anon.2002* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.2002, %class.anon.2002* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), %class.anon.2002* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #13
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.2002* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = tail call i8* @_Znwm(i64 192) #14
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #13
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #13
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #13
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #13
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #13
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #13
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #13
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = getelementptr inbounds %class.anon.2002, %class.anon.2002* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #13
  %40 = getelementptr inbounds %class.anon.2002, %class.anon.2002* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #13
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #13
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #13
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #13
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #13
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !16

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !18

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !19

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #14
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #14, !noalias !20
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !20
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #14
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = bitcast i8* %1 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = inttoptr i64 %5 to %"class.blink::WeakMember"*
  %7 = bitcast i8* %1 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #13
  %12 = inttoptr i64 %5 to i8*
  %13 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  %14 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"class.blink::WeakMember"**
  store %"class.blink::WeakMember"* %6, %"class.blink::WeakMember"** %14, align 8
  %15 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %15, align 8
  %16 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %17 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %17, i64 10
  %19 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %0, i8* %12, i8** %7, i8* %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10SVGElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %1) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_10SVGElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember"**
  %4 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %3, align 8
  %5 = icmp eq %"class.blink::WeakMember"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %4, i64 %10
  %12 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 -1
  %13 = icmp ult %"class.blink::WeakMember"* %12, %4
  br i1 %13, label %61, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %57
  %20 = phi %"class.blink::WeakMember"* [ %12, %14 ], [ %58, %57 ]
  %21 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %21, align 8
  %23 = ptrtoint %"class.blink::SVGElement"* %22 to i64
  switch i64 %23, label %24 [
    i64 -1, label %57
    i64 0, label %57
  ]

24:                                               ; preds = %19
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #13
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #13
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = icmp eq %"class.blink::ThreadState"* %34, null
  br i1 %35, label %57, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %22, i64 -1, i32 4
  %38 = bitcast %"class.blink::Member.807"* %37 to %"class.blink::HeapObjectHeader"*
  %39 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %38, i64 0, i32 2
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, 1
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::WeakMember"* %20 to i64*
  store atomic i64 -1, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = load i32, i32* %16, align 8
  %51 = add i32 %50, 1
  %52 = and i32 %51, 2147483647
  %53 = and i32 %50, -2147483648
  %54 = or i32 %52, %53
  store i32 %54, i32* %16, align 8
  %55 = load i32, i32* %18, align 4
  %56 = add i32 %55, -1
  store i32 %56, i32* %18, align 4
  br label %57

57:                                               ; preds = %36, %19, %19, %31, %49
  %58 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %20, i64 -1
  %59 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %3, align 8
  %60 = icmp ult %"class.blink::WeakMember"* %58, %59
  br i1 %60, label %61, label %19

61:                                               ; preds = %57, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #13
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %3, i64 %33
  %35 = bitcast %"class.blink::WeakMember"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #13
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #13
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGElement"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapHashSet"**
  %5 = load %"class.blink::HeapHashSet"*, %"class.blink::HeapHashSet"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #13
  %7 = icmp eq %"class.blink::HeapHashSet"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapHashSet"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_10WeakMemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #13
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEEaSERKSB_(%"class.WTF::HashTable"*, %"class.WTF::HashTable"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable", align 8
  %4 = bitcast %"class.WTF::HashTable"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 2
  %6 = bitcast %"class.WTF::HashTable"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 20, i1 false) #13
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %44, label %9

9:                                                ; preds = %2
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %3, i32 %7) #13
  %10 = load i32, i32* %5, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 0
  %13 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %13, i64 %16
  br i1 %11, label %44, label %18

18:                                               ; preds = %9
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %18, %24
  %21 = phi %"class.blink::WeakMember"* [ %25, %24 ], [ %13, %18 ]
  %22 = bitcast %"class.blink::WeakMember"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  switch i64 %23, label %27 [
    i64 -1, label %24
    i64 0, label %24
  ]

24:                                               ; preds = %20, %20
  %25 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %21, i64 1
  %26 = icmp eq %"class.blink::WeakMember"* %25, %17
  br i1 %26, label %44, label %20

27:                                               ; preds = %20, %18
  %28 = phi %"class.blink::WeakMember"* [ %13, %18 ], [ %21, %20 ]
  %29 = icmp eq %"class.blink::WeakMember"* %28, %17
  br i1 %29, label %44, label %30

30:                                               ; preds = %27, %42
  %31 = phi %"class.blink::WeakMember"* [ %36, %42 ], [ %28, %27 ]
  %32 = call { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %3, %"class.blink::WeakMember"* dereferenceable(8) %31, %"class.blink::WeakMember"* dereferenceable(8) %31) #13
  %33 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %31, i64 1
  %34 = icmp eq %"class.blink::WeakMember"* %33, %17
  br i1 %34, label %44, label %35

35:                                               ; preds = %30, %39
  %36 = phi %"class.blink::WeakMember"* [ %40, %39 ], [ %33, %30 ]
  %37 = bitcast %"class.blink::WeakMember"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %36, i64 1
  %41 = icmp eq %"class.blink::WeakMember"* %40, %17
  br i1 %41, label %44, label %35

42:                                               ; preds = %35
  %43 = icmp eq %"class.blink::WeakMember"* %36, %17
  br i1 %43, label %44, label %30

44:                                               ; preds = %24, %30, %42, %39, %2, %9, %27
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE4swapERSB_(%"class.WTF::HashTable"* %0, %"class.WTF::HashTable"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret %"class.WTF::HashTable"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE4swapERSB_(%"class.WTF::HashTable"*, %"class.WTF::HashTable"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 0
  %5 = bitcast %"class.WTF::HashTable"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  store atomic i64 %8, i64* %5 monotonic, align 8
  store atomic i64 %6, i64* %7 monotonic, align 8
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %6 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #13
  br label %14

14:                                               ; preds = %2, %11
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.WTF::HashTable"* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #13
  br label %21

21:                                               ; preds = %14, %17
  %22 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %3, align 8
  %23 = icmp eq %"class.blink::WeakMember"* %22, null
  %24 = bitcast %"class.blink::WeakMember"* %22 to i8*
  br i1 %23, label %29, label %25

25:                                               ; preds = %21
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* nonnull %24) #13
  br label %29

29:                                               ; preds = %28, %25, %21
  %30 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  %31 = icmp eq %"class.blink::WeakMember"* %30, null
  %32 = bitcast %"class.blink::WeakMember"* %30 to i8*
  br i1 %31, label %37, label %33

33:                                               ; preds = %29
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* nonnull %32) #13
  br label %37

37:                                               ; preds = %36, %33, %29
  %38 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 1
  %40 = load i32, i32* %38, align 4
  %41 = load i32, i32* %39, align 4
  store i32 %41, i32* %38, align 4
  store i32 %40, i32* %39, align 4
  %42 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 2
  %44 = load i32, i32* %42, align 4
  %45 = load i32, i32* %43, align 4
  store i32 %45, i32* %42, align 4
  store i32 %44, i32* %43, align 4
  %46 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 2147483647
  %49 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 2147483647
  %52 = and i32 %47, -2147483648
  %53 = or i32 %51, %52
  store i32 %53, i32* %46, align 8
  %54 = load i32, i32* %49, align 8
  %55 = and i32 %54, -2147483648
  %56 = or i32 %55, %48
  store i32 %56, i32* %49, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0)) #13
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13
  store i8 -86, i8* %3, align 1
  %32 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"* %0, i32 %18, %"class.blink::WeakMember"* null, i8* nonnull dereferenceable(1) %3) #13
  %33 = load i8, i8* %3, align 1, !range !14
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #13
  %38 = bitcast %"class.blink::HeapHashTableBacking"* %37 to %"class.blink::WeakMember"*
  %39 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %38, i32 %18, %"class.blink::WeakMember"* null) #13
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"*, i32, %"class.blink::WeakMember"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !14
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %33 = icmp eq %"class.blink::WeakMember"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::WeakMember"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #13
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #13
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::WeakMember"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::WeakMember"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::WeakMember"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 %54
  %60 = icmp eq %"class.blink::WeakMember"* %59, %2
  %61 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::WeakMember"* %61, %"class.blink::WeakMember"* %55
  %63 = bitcast %"class.blink::WeakMember"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::WeakMember"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::WeakMember"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #13
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::WeakMember"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %42, i32 %1, %"class.blink::WeakMember"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::WeakMember"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %84, i64 %81
  %86 = icmp eq %"class.blink::WeakMember"* %85, %2
  %87 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::WeakMember"* %87, %"class.blink::WeakMember"* %82
  %89 = bitcast %"class.blink::WeakMember"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::WeakMember"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %96, i64 %95
  %98 = icmp eq %"class.blink::WeakMember"* %97, %2
  %99 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::WeakMember"* %99, %"class.blink::WeakMember"* %88
  %101 = bitcast %"class.blink::WeakMember"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::WeakMember"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::WeakMember"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::WeakMember"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"*, i32, %"class.blink::WeakMember"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::WeakMember"* %1, %"class.blink::WeakMember"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"class.blink::WeakMember"* %1 to i64
  %17 = bitcast %"class.blink::WeakMember"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %19, align 8
  br label %48

21:                                               ; preds = %140
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %141, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"class.blink::WeakMember"* [ null, %15 ], [ %143, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #13
  %33 = load i32, i32* %12, align 8
  br label %34

34:                                               ; preds = %25, %32
  %35 = phi i32 [ %27, %25 ], [ %33, %32 ]
  %36 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.WTF::HashTable"* %5 to i64*
  store atomic i64 %26, i64* %36 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = inttoptr i64 %26 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #13
  br label %44

44:                                               ; preds = %34, %41
  store i32 %2, i32* %12, align 8
  store i64 %37, i64* %38, align 8
  store i32 %35, i32* %8, align 8
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable"* nonnull %5)
  %45 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, -2147483648
  store i32 %47, i32* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"class.blink::WeakMember"* %29

48:                                               ; preds = %18, %140
  %49 = phi i32 [ %13, %18 ], [ %141, %140 ]
  %50 = phi %"class.blink::WeakMember"* [ %20, %18 ], [ %142, %140 ]
  %51 = phi %"class.blink::WeakMember"* [ null, %18 ], [ %143, %140 ]
  %52 = phi i32 [ 0, %18 ], [ %144, %140 ]
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %50, i64 %53
  %55 = bitcast %"class.blink::WeakMember"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %57 [
    i64 -1, label %140
    i64 0, label %140
  ]

57:                                               ; preds = %48
  %58 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %7, align 8
  %59 = load i32, i32* %8, align 8
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = shl i64 %56, 32
  %63 = xor i64 %62, -1
  %64 = add i64 %56, %63
  %65 = lshr i64 %64, 22
  %66 = xor i64 %65, %64
  %67 = shl i64 %66, 13
  %68 = xor i64 %67, -1
  %69 = add i64 %66, %68
  %70 = lshr i64 %69, 8
  %71 = xor i64 %70, %69
  %72 = mul i64 %71, 9
  %73 = lshr i64 %72, 15
  %74 = xor i64 %73, %72
  %75 = shl i64 %74, 27
  %76 = xor i64 %75, -1
  %77 = add i64 %74, %76
  %78 = lshr i64 %77, 31
  %79 = xor i64 %78, %77
  %80 = trunc i64 %79 to i32
  %81 = and i32 %60, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 %82
  %84 = ptrtoint %"class.blink::WeakMember"* %83 to i64
  %85 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %83, i64 0, i32 0, i32 0
  %86 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %85, align 8
  %87 = icmp eq %"class.blink::SVGElement"* %86, null
  %88 = inttoptr i64 %56 to %"class.blink::SVGElement"*
  br i1 %87, label %106, label %89

89:                                               ; preds = %57
  %90 = xor i32 %80, -1
  %91 = lshr i32 %80, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  br label %112

103:                                              ; preds = %119
  %104 = ptrtoint %"class.blink::WeakMember"* %126 to i64
  %105 = inttoptr i64 %121 to %"class.blink::WeakMember"*
  br label %106

106:                                              ; preds = %103, %57
  %107 = phi i64 [ %104, %103 ], [ %84, %57 ]
  %108 = phi %"class.blink::WeakMember"* [ %105, %103 ], [ null, %57 ]
  %109 = icmp eq %"class.blink::WeakMember"* %108, null
  %110 = ptrtoint %"class.blink::WeakMember"* %108 to i64
  %111 = select i1 %109, i64 %107, i64 %110
  br label %131

112:                                              ; preds = %119, %89
  %113 = phi i64 [ 0, %89 ], [ %121, %119 ]
  %114 = phi %"class.blink::SVGElement"* [ %86, %89 ], [ %129, %119 ]
  %115 = phi i64 [ %84, %89 ], [ %127, %119 ]
  %116 = phi i64 [ %82, %89 ], [ %125, %119 ]
  %117 = phi i64 [ 0, %89 ], [ %123, %119 ]
  %118 = icmp eq %"class.blink::SVGElement"* %114, %88
  br i1 %118, label %131, label %119

119:                                              ; preds = %112
  %120 = icmp eq %"class.blink::SVGElement"* %114, inttoptr (i64 -1 to %"class.blink::SVGElement"*)
  %121 = select i1 %120, i64 %115, i64 %113
  %122 = icmp eq i64 %117, 0
  %123 = select i1 %122, i64 %102, i64 %117
  %124 = add i64 %123, %116
  %125 = and i64 %124, %61
  %126 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %58, i64 %125
  %127 = ptrtoint %"class.blink::WeakMember"* %126 to i64
  %128 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %126, i64 0, i32 0, i32 0
  %129 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %128, align 8
  %130 = icmp eq %"class.blink::SVGElement"* %129, null
  br i1 %130, label %103, label %112

131:                                              ; preds = %112, %106
  %132 = phi i64 [ %111, %106 ], [ %115, %112 ]
  %133 = inttoptr i64 %132 to %"class.blink::WeakMember"*
  %134 = inttoptr i64 %132 to i64*
  store i64 %56, i64* %134, align 8
  %135 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %19, align 8
  %136 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %135, i64 %53
  %137 = icmp eq %"class.blink::WeakMember"* %136, %3
  %138 = select i1 %137, %"class.blink::WeakMember"* %133, %"class.blink::WeakMember"* %51
  %139 = load i32, i32* %12, align 8
  br label %140

140:                                              ; preds = %48, %48, %131
  %141 = phi i32 [ %49, %48 ], [ %139, %131 ], [ %49, %48 ]
  %142 = phi %"class.blink::WeakMember"* [ %50, %48 ], [ %135, %131 ], [ %50, %48 ]
  %143 = phi %"class.blink::WeakMember"* [ %51, %48 ], [ %138, %131 ], [ %51, %48 ]
  %144 = add i32 %52, 1
  %145 = icmp eq i32 %144, %141
  br i1 %145, label %21, label %48
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([362 x i8], [362 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_10SVGElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #13
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %3 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %2, align 8
  %4 = icmp eq %"class.blink::WeakMember"* %3, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %5
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #13
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #13
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 9
  %22 = load i8, i8* %21, align 1, !range !14
  %23 = icmp ne i8 %22, 0
  %24 = icmp ne i32 %7, 0
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %41

26:                                               ; preds = %17
  %27 = zext i32 %7 to i64
  br label %28

28:                                               ; preds = %38, %26
  %29 = phi i64 [ 0, %26 ], [ %39, %38 ]
  %30 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %3, i64 %29
  %31 = bitcast %"class.blink::WeakMember"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %33 [
    i64 -1, label %38
    i64 0, label %38
  ]

33:                                               ; preds = %28
  store atomic i64 -1, i64* %31 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #13
  br label %38

38:                                               ; preds = %36, %33, %28, %28
  %39 = add nuw nsw i64 %29, 1
  %40 = icmp eq i64 %39, %27
  br i1 %40, label %41, label %28

41:                                               ; preds = %38, %5, %17
  %42 = bitcast %"class.blink::WeakMember"* %3 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %42) #13
  %43 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %6, align 8
  %44 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  store i32 0, i32* %44, align 4
  br label %45

45:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"* dereferenceable(8), %"class.blink::WeakMember"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  %6 = icmp eq %"class.blink::WeakMember"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* null)
  %9 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::WeakMember"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::WeakMember"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %40, align 8
  %42 = icmp eq %"class.blink::SVGElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SVGElement"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SVGElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::WeakMember"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::WeakMember"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::SVGElement"* %59, %43
  br i1 %64, label %149, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::SVGElement"* %59, inttoptr (i64 -1 to %"class.blink::SVGElement"*)
  %67 = select i1 %66, %"class.blink::WeakMember"* %60, %"class.blink::WeakMember"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %73, align 8
  %75 = icmp eq %"class.blink::SVGElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::WeakMember"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::WeakMember"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::WeakMember"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"class.blink::WeakMember"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::WeakMember"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #13
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::WeakMember"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #13
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %87)
  br label %149

115:                                              ; preds = %103
  %116 = mul i32 %106, 6
  %117 = icmp ult i32 %116, %111
  %118 = icmp ugt i32 %111, 8
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %149

120:                                              ; preds = %115
  %121 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %122 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %121, i64 0, i32 1
  %123 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %122) #13
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !2

125:                                              ; preds = %120
  %126 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %122, i8* %126) #13
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i8* [ %126, %125 ], [ %123, %120 ]
  %129 = bitcast i8* %128 to %"class.blink::ThreadState"**
  %130 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 6
  %132 = load i8, i8* %131, align 8, !range !14
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 16
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %149, label %138

138:                                              ; preds = %127, %134
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 13
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 8
  %144 = lshr i32 %143, 1
  %145 = zext i32 %144 to i64
  %146 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %145) #13
  %147 = bitcast %"class.blink::HeapHashTableBacking"* %146 to %"class.blink::WeakMember"*
  %148 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %147, i32 %144, %"class.blink::WeakMember"* %87) #13
  br label %149

149:                                              ; preds = %58, %134, %115, %113, %142, %138
  %150 = phi i8 [ 1, %138 ], [ 1, %142 ], [ 1, %113 ], [ 1, %115 ], [ 1, %134 ], [ 0, %58 ]
  %151 = phi %"class.blink::WeakMember"* [ %87, %138 ], [ %148, %142 ], [ %114, %113 ], [ %87, %115 ], [ %87, %134 ], [ %60, %58 ]
  %152 = insertvalue { %"class.blink::WeakMember"*, i8 } undef, %"class.blink::WeakMember"* %151, 0
  %153 = insertvalue { %"class.blink::WeakMember"*, i8 } %152, i8 %150, 1
  ret { %"class.blink::WeakMember"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"class.blink::WeakMember"* %1, i8* nonnull dereferenceable(1) %4) #13
  %37 = load i8, i8* %4, align 1, !range !14
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #13
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::WeakMember"*
  %44 = call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %43, i32 %40, %"class.blink::WeakMember"* %1) #13
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::WeakMember"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::WeakMember"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare %"class.blink::HeapVector.1200"* @_ZN5blink11EventTarget17GetEventListenersERKN3WTF12AtomicStringE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::RegisteredEventListener"* @_ZN3WTF6VectorIN5blink23RegisteredEventListenerELj1ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1203"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1203", %"class.WTF::Vector.1203"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.1203", %"class.WTF::Vector.1203"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::RegisteredEventListener"*, %"class.blink::RegisteredEventListener"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::RegisteredEventListener", %"class.blink::RegisteredEventListener"* %24, i64 %25
  ret %"class.blink::RegisteredEventListener"* %26
}

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"*, i32, %"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18SVGElementRareDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18SVGElementRareDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18SVGElementRareDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18SVGElementRareDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SVGElementRareDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18SVGElementRareDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGElementRareData"*
  tail call void @_ZNK5blink18SVGElementRareData5TraceEPNS_7VisitorE(%"class.blink::SVGElementRareData"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18SVGElementRareDataEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 136
  %3 = bitcast i8* %2 to %"class.blink::ComputedStyle"**
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyle"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 1, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.793"* %7) #13
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds i8, i8* %0, i64 104
  %10 = bitcast i8* %9 to %"class.blink::QualifiedName"**
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %10, align 8
  %12 = icmp eq %"class.blink::QualifiedName"* %11, null
  br i1 %12, label %32, label %13, !prof !15

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8, i8* %0, i64 112
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %13
  %19 = zext i32 %16 to i64
  br label %20

20:                                               ; preds = %27, %18
  %21 = phi i64 [ 0, %18 ], [ %28, %27 ]
  %22 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %21
  %23 = bitcast %"class.blink::QualifiedName"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, inttoptr (i64 -1 to i8*)
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %22) #13
  br label %27

27:                                               ; preds = %26, %20
  %28 = add nuw nsw i64 %21, 1
  %29 = icmp eq i64 %28, %19
  br i1 %29, label %30, label %20

30:                                               ; preds = %27, %13
  %31 = bitcast %"class.blink::QualifiedName"* %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #13
  store %"class.blink::QualifiedName"* null, %"class.blink::QualifiedName"** %10, align 8
  br label %32

32:                                               ; preds = %8, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18SVGElementRareDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink18SVGElementRareData5TraceEPNS_7VisitorE(%"class.blink::SVGElementRareData"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.793"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::RefCounted.793", %"class.base::RefCounted.793"* %0, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #13
  %3 = getelementptr inbounds %"class.base::RefCounted.793", %"class.base::RefCounted.793"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %52

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCounted.793", %"class.base::RefCounted.793"* %0, i64 -23
  %8 = icmp eq %"class.base::RefCounted.793"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.base::RefCounted.793", %"class.base::RefCounted.793"* %0, i64 1
  %11 = bitcast %"class.base::RefCounted.793"* %10 to %"class.blink::StyleCachedData"**
  %12 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %11, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %11, align 8
  %13 = icmp eq %"class.blink::StyleCachedData"* %12, null
  br i1 %13, label %49, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::Vector.800"*, %"class.WTF::Vector.800"** %15, align 8
  store %"class.WTF::Vector.800"* null, %"class.WTF::Vector.800"** %15, align 8
  %17 = icmp eq %"class.WTF::Vector.800"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22, !prof !2

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %16, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.1635*, %class.scoped_refptr.1635** %23, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.1635, %class.scoped_refptr.1635* %24, i64 %25
  br label %27

27:                                               ; preds = %22, %33
  %28 = phi %class.scoped_refptr.1635* [ %34, %33 ], [ %24, %22 ]
  %29 = getelementptr inbounds %class.scoped_refptr.1635, %class.scoped_refptr.1635* %28, i64 0, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = icmp eq %"class.blink::ComputedStyle"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %30) #13
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds %class.scoped_refptr.1635, %class.scoped_refptr.1635* %28, i64 1
  %35 = icmp eq %class.scoped_refptr.1635* %34, %26
  br i1 %35, label %36, label %27

36:                                               ; preds = %33
  store i32 0, i32* %19, align 4
  br label %37

37:                                               ; preds = %36, %18
  %38 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %16, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.scoped_refptr.1635*, %class.scoped_refptr.1635** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %16, i64 0, i32 0, i32 1, i64 0
  %41 = bitcast i8* %40 to %class.scoped_refptr.1635*
  %42 = icmp eq %class.scoped_refptr.1635* %39, %41
  br i1 %42, label %45, label %43, !prof !15

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1969"* %44, %class.scoped_refptr.1635* %39) #13
  br label %45

45:                                               ; preds = %37, %43
  store %class.scoped_refptr.1635* null, %class.scoped_refptr.1635** %38, align 8
  %46 = bitcast %"class.WTF::Vector.800"* %16 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %46) #13
  br label %47

47:                                               ; preds = %14, %45
  %48 = bitcast %"class.blink::StyleCachedData"* %12 to i8*
  tail call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %47, %9
  %50 = bitcast %"class.base::RefCounted.793"* %7 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* nonnull %50) #13
  %51 = bitcast %"class.base::RefCounted.793"* %7 to i8*
  tail call void @free(i8* %51) #13
  br label %52

52:                                               ; preds = %49, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.790", %"class.base::RefCounted.790"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.790"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #13
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #13
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #13
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #13
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #13
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #13
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #13
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #13
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.782", %"class.base::RefCounted.782"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.782"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #13
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #13
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #13
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #13
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #13
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #13
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #13
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #13
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #13
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #13
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #13
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #13
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #13
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #13
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #13
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #13
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #13
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #13
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #13
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #13
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #13
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #13
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #13
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.81"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #13
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #13
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #13
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.base::RefCounted.793", %"class.base::RefCounted.793"* %2, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %3) #13
  %4 = getelementptr inbounds %"class.base::RefCounted.793", %"class.base::RefCounted.793"* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %51

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::RefCounted.793", %"class.base::RefCounted.793"* %2, i64 -23
  %9 = getelementptr inbounds %"class.base::RefCounted.793", %"class.base::RefCounted.793"* %2, i64 1
  %10 = bitcast %"class.base::RefCounted.793"* %9 to %"class.blink::StyleCachedData"**
  %11 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %10, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %10, align 8
  %12 = icmp eq %"class.blink::StyleCachedData"* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::Vector.800"*, %"class.WTF::Vector.800"** %14, align 8
  store %"class.WTF::Vector.800"* null, %"class.WTF::Vector.800"** %14, align 8
  %16 = icmp eq %"class.WTF::Vector.800"* %15, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %15, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %36, label %21, !prof !2

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr.1635*, %class.scoped_refptr.1635** %22, align 8
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %class.scoped_refptr.1635, %class.scoped_refptr.1635* %23, i64 %24
  br label %26

26:                                               ; preds = %21, %32
  %27 = phi %class.scoped_refptr.1635* [ %33, %32 ], [ %23, %21 ]
  %28 = getelementptr inbounds %class.scoped_refptr.1635, %class.scoped_refptr.1635* %27, i64 0, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = icmp eq %"class.blink::ComputedStyle"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %29) #13
  br label %32

32:                                               ; preds = %31, %26
  %33 = getelementptr inbounds %class.scoped_refptr.1635, %class.scoped_refptr.1635* %27, i64 1
  %34 = icmp eq %class.scoped_refptr.1635* %33, %25
  br i1 %34, label %35, label %26

35:                                               ; preds = %32
  store i32 0, i32* %18, align 4
  br label %36

36:                                               ; preds = %35, %17
  %37 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %15, i64 0, i32 0, i32 0, i32 0
  %38 = load %class.scoped_refptr.1635*, %class.scoped_refptr.1635** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %15, i64 0, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %class.scoped_refptr.1635*
  %41 = icmp eq %class.scoped_refptr.1635* %38, %40
  br i1 %41, label %44, label %42, !prof !15

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::Vector.800", %"class.WTF::Vector.800"* %15, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1969"* %43, %class.scoped_refptr.1635* %38) #13
  br label %44

44:                                               ; preds = %36, %42
  store %class.scoped_refptr.1635* null, %class.scoped_refptr.1635** %37, align 8
  %45 = bitcast %"class.WTF::Vector.800"* %15 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %45) #13
  br label %46

46:                                               ; preds = %13, %44
  %47 = bitcast %"class.blink::StyleCachedData"* %11 to i8*
  tail call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %46, %7
  %49 = bitcast %"class.base::RefCounted.793"* %8 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %49) #13
  %50 = bitcast %"class.base::RefCounted.793"* %8 to i8*
  tail call void @free(i8* %50) #13
  br label %51

51:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1969"*, %class.scoped_refptr.1635*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %class.scoped_refptr.1635* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #13
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #13
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair.346"*, %"struct.WTF::KeyValuePair.346"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair.346"* %26, null
  br i1 %27, label %73, label %28, !prof !15

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.346", %"struct.WTF::KeyValuePair.346"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair.346"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.346", %"struct.WTF::KeyValuePair.346"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #13
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #13
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #13
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.346", %"struct.WTF::KeyValuePair.346"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair.346"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #13
  store %"struct.WTF::KeyValuePair.346"* null, %"struct.WTF::KeyValuePair.346"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !15

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #13
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.691", %"class.WTF::Vector.691"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !15

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !2

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.691"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #13
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #13
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #13
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #13
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #13
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #13
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #13
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #13
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #13
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #13
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #13
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #13
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !2

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #13
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.741* %2) #13
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #13
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.770", %"class.base::RefCounted.770"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.770"* %24 to %class.scoped_refptr.741*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.741* %25) #13
  %26 = getelementptr inbounds %"class.base::RefCounted.770", %"class.base::RefCounted.770"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.770"* %26 to %class.scoped_refptr.741*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.741* %27) #13
  %28 = getelementptr inbounds %"class.base::RefCounted.770", %"class.base::RefCounted.770"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.770"* %28 to %class.scoped_refptr.741*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.741* %29) #13
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #13
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #13
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #13
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #13
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.740", %"class.base::RefCounted.740"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.740"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #13
  %55 = getelementptr inbounds %"class.base::RefCounted.740", %"class.base::RefCounted.740"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.740"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #13
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #13
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #13
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #13
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #13
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #13
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.715", %"class.base::RefCounted.715"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.715"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #13
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #13
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.741*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.741, %class.scoped_refptr.741* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #13
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #13
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #13
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #13
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #13
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.760"*, %"class.base::RefCountedData.760"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.760"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.760", %"class.base::RefCountedData.760"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.760", %"class.base::RefCountedData.760"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.761", %"class.base::RefCountedThreadSafe.761"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.761"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !15

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.761", %"class.base::RefCountedThreadSafe.761"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !2

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #13
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.761"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.760"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.541", %"class.base::RefCounted.541"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #13
  %50 = getelementptr inbounds %"class.base::RefCounted.541", %"class.base::RefCounted.541"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.541", %"class.base::RefCounted.541"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.541"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.541"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #13
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #13
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #13
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #13
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.388", %"class.base::RefCounted.388"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.388", %"class.base::RefCounted.388"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.388"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.388", %"class.base::RefCounted.388"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.388"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !15

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.388"* %47 to %"class.WTF::VectorBuffer.390"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.390"* %59, %"class.blink::ShadowData"* %54) #13
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #13
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.699*, %class.scoped_refptr.699** %64, align 8
  %66 = icmp eq %class.scoped_refptr.699* %65, null
  br i1 %66, label %101, label %67, !prof !15

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.699* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !2

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.699, %class.scoped_refptr.699* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.699* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.699, %class.scoped_refptr.699* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #13
  %83 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.544"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.544"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #13
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.699, %class.scoped_refptr.699* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.699* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #13
  store %class.scoped_refptr.699* null, %class.scoped_refptr.699** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #13
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #13
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #13
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #13
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #13
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #13
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.390"*, %"class.blink::ShadowData"*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #13
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #13
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #13
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #13
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.691", %"class.WTF::Vector.691"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !15

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !2

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #13
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.691"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #13
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #13
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.674"* %108, %"class.blink::PaintImages"* null) #13
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.666", %"class.WTF::Vector.666"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !15

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !2

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #13
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.666"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #13
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #13
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #13
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #13
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #13
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.621"*, %"struct.WTF::KeyValuePair.621"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.621"* %166, null
  br i1 %167, label %200, label %168, !prof !15

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.621", %"struct.WTF::KeyValuePair.621"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.621"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #13
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.621"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #13
  store %"struct.WTF::KeyValuePair.621"* null, %"struct.WTF::KeyValuePair.621"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #13
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #13
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #13
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #13
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #13
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #13
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #13
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #13
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.589", %"class.base::RefCounted.589"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.589"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !15

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.589", %"class.base::RefCounted.589"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !2

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #13
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #13
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #13
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #13
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.674"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.674"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.394"*, %"class.blink::Persistent.394"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.394"* %8, null
  br i1 %9, label %50, label %10, !prof !15

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.394"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !2

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.394", %"class.blink::Persistent.394"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.394"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.394", %"class.blink::Persistent.394"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #13
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.394", %"class.blink::Persistent.394"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.394"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  store %"class.blink::Persistent.394"* null, %"class.blink::Persistent.394"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #13
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.633", %"class.WTF::Vector.633"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.636*, %class.scoped_refptr.636** %3, align 8
  %5 = icmp eq %class.scoped_refptr.636* %4, null
  br i1 %5, label %39, label %6, !prof !15

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.636* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.636, %class.scoped_refptr.636* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.636* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.636, %class.scoped_refptr.636* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.637", %"class.base::RefCountedThreadSafe.637"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.637", %"class.base::RefCountedThreadSafe.637"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.637"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.637"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #13
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.636, %class.scoped_refptr.636* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.636* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.633"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #13
  store %class.scoped_refptr.636* null, %class.scoped_refptr.636** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !15

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !2

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #13
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !15

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !2

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #13
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #13
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !15

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !2

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #13
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !15

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #13
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !15

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #13
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.640", %"class.WTF::Vector.640"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !15

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !2

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #13
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.640"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #13
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.373", %"class.WTF::Vector.373"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !15

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !2

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.373"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.520", %"class.WTF::Vector.520"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !15

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #13
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #13
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #13
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.520"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.520", %"class.WTF::Vector.520"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !15

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !2

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.520"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.613"*, %"struct.WTF::KeyValuePair.613"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.613"* %83, null
  br i1 %84, label %117, label %85, !prof !15

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.613", %"struct.WTF::KeyValuePair.613"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.613"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #13
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.613"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #13
  store %"struct.WTF::KeyValuePair.613"* null, %"struct.WTF::KeyValuePair.613"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.608"*, %"struct.WTF::KeyValuePair.608"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.608"* %119, null
  br i1 %120, label %124, label %121, !prof !15

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.608"* nonnull %119, i32 %123) #13
  store %"struct.WTF::KeyValuePair.608"* null, %"struct.WTF::KeyValuePair.608"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.608"*, %"struct.WTF::KeyValuePair.608"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.608"* %126, null
  br i1 %127, label %131, label %128, !prof !15

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.608"* nonnull %126, i32 %130) #13
  store %"struct.WTF::KeyValuePair.608"* null, %"struct.WTF::KeyValuePair.608"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.608"*, %"struct.WTF::KeyValuePair.608"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.608"* %133, null
  br i1 %134, label %138, label %135, !prof !15

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.608"* nonnull %133, i32 %137) #13
  store %"struct.WTF::KeyValuePair.608"* null, %"struct.WTF::KeyValuePair.608"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.608"*, %"struct.WTF::KeyValuePair.608"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.608"* %140, null
  br i1 %141, label %145, label %142, !prof !15

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.608"* nonnull %140, i32 %144) #13
  store %"struct.WTF::KeyValuePair.608"* null, %"struct.WTF::KeyValuePair.608"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.603"*, %"struct.WTF::KeyValuePair.603"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.603"* %147, null
  br i1 %148, label %196, label %149, !prof !15

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.603"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !15

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !2

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #13
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #13
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.603"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #13
  store %"struct.WTF::KeyValuePair.603"* null, %"struct.WTF::KeyValuePair.603"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.603"*, %"struct.WTF::KeyValuePair.603"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.603"* %198, null
  br i1 %199, label %247, label %200, !prof !15

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.603"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !15

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !2

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #13
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #13
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.603"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #13
  store %"struct.WTF::KeyValuePair.603"* null, %"struct.WTF::KeyValuePair.603"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.603"*, %"struct.WTF::KeyValuePair.603"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.603"* %249, null
  br i1 %250, label %298, label %251, !prof !15

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.603"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !15

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !2

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #13
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #13
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.603"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #13
  store %"struct.WTF::KeyValuePair.603"* null, %"struct.WTF::KeyValuePair.603"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.603"*, %"struct.WTF::KeyValuePair.603"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.603"* %300, null
  br i1 %301, label %349, label %302, !prof !15

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.603"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !15

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !2

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #13
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #13
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.603"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #13
  store %"struct.WTF::KeyValuePair.603"* null, %"struct.WTF::KeyValuePair.603"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.603"*, %"struct.WTF::KeyValuePair.603"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.603"* %351, null
  br i1 %352, label %400, label %353, !prof !15

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.603"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !15

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !2

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #13
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #13
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.603"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #13
  store %"struct.WTF::KeyValuePair.603"* null, %"struct.WTF::KeyValuePair.603"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.603"*, %"struct.WTF::KeyValuePair.603"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.603"* %402, null
  br i1 %403, label %451, label %404, !prof !15

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.603"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !15

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !2

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #13
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.603", %"struct.WTF::KeyValuePair.603"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #13
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.603"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #13
  store %"struct.WTF::KeyValuePair.603"* null, %"struct.WTF::KeyValuePair.603"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.608"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.608"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #13
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.608", %"struct.WTF::KeyValuePair.608"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.608", %"struct.WTF::KeyValuePair.608"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.691", %"class.WTF::Vector.691"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !15

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.608", %"struct.WTF::KeyValuePair.608"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !2

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.691"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #13
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #13
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #13
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #13
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #13
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #13
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !14
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #13
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !14
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #13
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #13
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !2

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #13
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #13
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !2

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #13
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #13
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #13
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #13
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #13
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #13
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #13
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #13
  %188 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.544"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.544"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #13
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #13
  %205 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.544"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.544"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #13
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #13
  %222 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.544", %"class.base::RefCounted.544"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.544"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.544"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #13
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.541", %"class.base::RefCounted.541"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #13
  %239 = getelementptr inbounds %"class.base::RefCounted.541", %"class.base::RefCounted.541"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.541", %"class.base::RefCounted.541"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.541"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.541"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #13
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.538", %"class.base::RefCounted.538"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #13
  %256 = getelementptr inbounds %"class.base::RefCounted.538", %"class.base::RefCounted.538"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.538", %"class.base::RefCounted.538"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.538"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.538"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #13
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #13
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #13
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #13
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #13
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #13
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.525"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.525"* %353 to %"struct.std::__1::default_delete.534"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.534"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #13
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !15

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !2

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #13
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #13
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #13
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.525"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.525"* %400 to %"struct.std::__1::default_delete.534"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.534"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #13
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !15

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !2

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #13
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #13
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #13
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.525"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.525"* %447 to %"struct.std::__1::default_delete.534"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.534"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #13
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !15

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !2

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #13
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #13
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #13
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.525"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.525"* %494 to %"struct.std::__1::default_delete.534"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.534"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #13
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !15

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !2

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #13
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #13
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #13
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.534"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.520", %"class.WTF::Vector.520"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !15

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !2

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #13
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #13
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.520"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !15

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !2

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #13
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #13
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #13
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #13
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #13
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.388", %"class.base::RefCounted.388"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.388", %"class.base::RefCounted.388"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !2

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.388"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.388", %"class.base::RefCounted.388"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.388"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !15

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.388"* %76 to %"class.WTF::VectorBuffer.390"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.390"* %88, %"class.blink::ShadowData"* %83) #13
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #13
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #13
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.380", %"class.WTF::Vector.380"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.383"*, %"struct.std::__1::pair.383"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.383"* %103, null
  br i1 %104, label %156, label %105, !prof !15

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.383"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !2

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.383", %"struct.std::__1::pair.383"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.383"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.383", %"struct.std::__1::pair.383"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #13
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.383", %"struct.std::__1::pair.383"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #13
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.383", %"struct.std::__1::pair.383"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.383"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.380"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #13
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #13
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #13
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #13
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.373", %"class.WTF::Vector.373"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !15

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !2

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #13
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.373"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #13
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #13
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #13
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #13
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #13
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #13
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.341", %"class.base::RefCounted.341"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.341"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #13
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #13
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.333", %"class.base::RefCountedThreadSafe.333"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.333"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !15

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.333", %"class.base::RefCountedThreadSafe.333"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !2

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #13
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #13
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #13
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #13
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #13
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #13
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2074", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2074", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #13
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #13
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #13
  %29 = bitcast %"class.WTF::StringTypeAdapter.2074"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2074", %"class.WTF::StringTypeAdapter.2074"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2074", %"class.WTF::StringTypeAdapter.2074"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #13
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.2074"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #13
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2074", %"class.WTF::StringTypeAdapter.2074"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2075"* nonnull %47, i8* %50) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #13
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  call void @llvm.trap() #13
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #13
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #13
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #13
  %90 = bitcast %"class.WTF::StringTypeAdapter.2074"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #13
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2074", %"class.WTF::StringTypeAdapter.2074"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2074", %"class.WTF::StringTypeAdapter.2074"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #13
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.2074"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #13
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2074", %"class.WTF::StringTypeAdapter.2074"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2075"* nonnull %108, i16* %111) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #13
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #13
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #13
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #13
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #7

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #13
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %45, i8* %46) #13
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2075"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2075"*, i16*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.56"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = icmp eq %"class.blink::QualifiedName"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.56"* %0, %"class.blink::QualifiedName"* null)
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::QualifiedName"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777215
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %17) #13
  %24 = load i32, i32* %18, align 4
  %25 = and i32 %23, 16777215
  %26 = and i32 %24, -16777216
  %27 = or i32 %26, %25
  store i32 %27, i32* %18, align 4
  br label %28

28:                                               ; preds = %10, %22
  %29 = phi i32 [ %20, %10 ], [ %25, %22 ]
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %31
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %37
  br i1 %38, label %94, label %39

39:                                               ; preds = %28
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %41 = xor i32 %29, -1
  %42 = lshr i32 %29, 23
  %43 = add nsw i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %39, %65
  %55 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %35, %39 ], [ %73, %65 ]
  %56 = phi %"class.blink::QualifiedName"* [ %32, %39 ], [ %71, %65 ]
  %57 = phi %"class.blink::QualifiedName"* [ null, %39 ], [ %66, %65 ]
  %58 = phi i64 [ %31, %39 ], [ %70, %65 ]
  %59 = phi i64 [ 0, %39 ], [ %68, %65 ]
  %60 = bitcast %"class.blink::QualifiedName"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %55, %40
  br i1 %64, label %136, label %65

65:                                               ; preds = %54, %63
  %66 = phi %"class.blink::QualifiedName"* [ %57, %63 ], [ %56, %54 ]
  %67 = icmp eq i64 %59, 0
  %68 = select i1 %67, i64 %53, i64 %59
  %69 = add i64 %68, %58
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %70
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %73, %37
  br i1 %74, label %75, label %54

75:                                               ; preds = %65
  %76 = icmp eq %"class.blink::QualifiedName"* %66, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %79 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 16777216
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %86) #13
  br label %87

87:                                               ; preds = %77, %80, %85
  %88 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 2147483647
  %91 = and i32 %90, 2147483647
  %92 = and i32 %89, -2147483648
  %93 = or i32 %91, %92
  store i32 %93, i32* %88, align 8
  br label %94

94:                                               ; preds = %28, %75, %87
  %95 = phi %"class.blink::QualifiedName"* [ %66, %87 ], [ %71, %75 ], [ %32, %28 ]
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 16777216
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %105) #13
  br label %106

106:                                              ; preds = %104, %99, %94
  %107 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %97 to i64
  %108 = bitcast %"class.blink::QualifiedName"* %95 to i64*
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %110, null
  br i1 %111, label %124, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 16777216
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %118) #13
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %110) #13
  %123 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %110 to i8*
  tail call void @free(i8* %123) #13
  br label %124

124:                                              ; preds = %106, %112, %117, %122
  %125 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, %127
  %131 = shl i32 %130, 1
  %132 = load i32, i32* %12, align 8
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %124
  %135 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.56"* %0, %"class.blink::QualifiedName"* %95)
  br label %136

136:                                              ; preds = %63, %124, %134
  %137 = phi i8 [ 1, %124 ], [ 1, %134 ], [ 0, %63 ]
  %138 = phi %"class.blink::QualifiedName"* [ %95, %124 ], [ %135, %134 ], [ %56, %63 ]
  %139 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %138, 0
  %140 = insertvalue { %"class.blink::QualifiedName"*, i8 } %139, i8 %137, 1
  ret { %"class.blink::QualifiedName"*, i8 } %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.56"*, %"class.blink::QualifiedName"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"class.blink::QualifiedName"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %31
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %53, %38
  %42 = phi i64 [ 0, %38 ], [ %54, %53 ]
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 %42, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %43, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %43, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 16777216
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %52) #13
  br label %53

53:                                               ; preds = %51, %46, %41
  %54 = add nuw nsw i64 %42, 1
  %55 = icmp eq i64 %54, %33
  br i1 %55, label %56, label %41

56:                                               ; preds = %53, %31
  %57 = call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.56"* %0, %"class.blink::QualifiedName"* %36, i32 %32, %"class.blink::QualifiedName"* %1) #13
  ret %"class.blink::QualifiedName"* %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.56"*, %"class.blink::QualifiedName"*, i32, %"class.blink::QualifiedName"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.56", align 8
  %6 = bitcast %"class.WTF::HashTable.56"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.56"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::QualifiedName"* %1, %"class.blink::QualifiedName"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.blink::QualifiedName"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.56"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.56"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %25 = ptrtoint %"class.blink::QualifiedName"* %24 to i64
  br label %59

26:                                               ; preds = %93
  %27 = bitcast %"class.WTF::HashTable.56"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.56"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %94, %26 ]
  %35 = phi %"class.blink::QualifiedName"* [ null, %16 ], [ %97, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %95, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"class.blink::QualifiedName"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %50, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %50 ]
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 %44
  %46 = bitcast %"class.blink::QualifiedName"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %45) #13
  br label %50

50:                                               ; preds = %49, %43
  %51 = add nuw nsw i64 %44, 1
  %52 = icmp eq i64 %51, %42
  br i1 %52, label %53, label %43

53:                                               ; preds = %50, %39
  %54 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #13
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %55

55:                                               ; preds = %30, %53
  %56 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, -2147483648
  store i32 %58, i32* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"class.blink::QualifiedName"* %35

59:                                               ; preds = %21, %93
  %60 = phi i64 [ %25, %21 ], [ %94, %93 ]
  %61 = phi i32 [ %13, %21 ], [ %95, %93 ]
  %62 = phi %"class.blink::QualifiedName"* [ %24, %21 ], [ %96, %93 ]
  %63 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %97, %93 ]
  %64 = phi i32 [ 0, %21 ], [ %98, %93 ]
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %62, i64 %65
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %70 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, %69
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %72 = or i1 %71, %70
  br i1 %72, label %93, label %73

73:                                               ; preds = %59
  %74 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.56"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %66) #13
  %75 = extractvalue { %"class.blink::QualifiedName"*, i8 } %74, 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %75) #13
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %75, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %76, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %76, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 16777216
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %85) #13
  br label %86

86:                                               ; preds = %73, %79, %84
  %87 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %87, i64 %65
  %89 = icmp eq %"class.blink::QualifiedName"* %88, %3
  %90 = select i1 %89, %"class.blink::QualifiedName"* %75, %"class.blink::QualifiedName"* %63
  %91 = load i32, i32* %12, align 8
  %92 = ptrtoint %"class.blink::QualifiedName"* %87 to i64
  br label %93

93:                                               ; preds = %59, %86
  %94 = phi i64 [ %60, %59 ], [ %92, %86 ]
  %95 = phi i32 [ %61, %59 ], [ %91, %86 ]
  %96 = phi %"class.blink::QualifiedName"* [ %62, %59 ], [ %87, %86 ]
  %97 = phi %"class.blink::QualifiedName"* [ %63, %59 ], [ %90, %86 ]
  %98 = add i32 %64, 1
  %99 = icmp eq i32 %98, %95
  br i1 %99, label %26, label %59
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.56"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #13
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %24
  %26 = ptrtoint %"class.blink::QualifiedName"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"class.blink::QualifiedName"* %52, null
  %54 = ptrtoint %"class.blink::QualifiedName"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"class.blink::QualifiedName"* [ null, %33 ], [ %69, %68 ]
  %58 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %29, %33 ], [ %77, %68 ]
  %59 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %60 = phi %"class.blink::QualifiedName"* [ %25, %33 ], [ %74, %68 ]
  %61 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %62 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %63 = bitcast %"class.blink::QualifiedName"* %60 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, inttoptr (i64 -1 to i8*)
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %34
  br i1 %67, label %79, label %68

68:                                               ; preds = %66, %56
  %69 = phi %"class.blink::QualifiedName"* [ %57, %66 ], [ %60, %56 ]
  %70 = icmp eq i64 %62, 0
  %71 = select i1 %70, i64 %47, i64 %62
  %72 = add i64 %71, %61
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %73
  %75 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  %76 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %66, %50
  %80 = phi i64 [ %55, %50 ], [ %59, %66 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %66 ]
  %82 = inttoptr i64 %80 to %"class.blink::QualifiedName"*
  %83 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %82, 0
  %84 = insertvalue { %"class.blink::QualifiedName"*, i8 } %83, i8 %81, 1
  ret { %"class.blink::QualifiedName"*, i8 } %84
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #7

declare void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1800"*, i8 } @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EES2_RS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.1797"*, %"class.WTF::StringImpl"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1800"*, %"struct.WTF::KeyValuePair.1800"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1800"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1800"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1797"* %0, %"struct.WTF::KeyValuePair.1800"* null)
  %9 = load %"struct.WTF::KeyValuePair.1800"*, %"struct.WTF::KeyValuePair.1800"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1800"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = lshr i32 %18, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %10
  %22 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %16) #13
  br label %23

23:                                               ; preds = %10, %21
  %24 = phi i32 [ %22, %21 ], [ %19, %10 ]
  %25 = and i32 %24, %14
  %26 = zext i32 %25 to i64
  %27 = xor i32 %24, -1
  %28 = lshr i32 %24, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %40

40:                                               ; preds = %51, %23
  %41 = phi i64 [ 0, %23 ], [ %54, %51 ]
  %42 = phi i64 [ %26, %23 ], [ %56, %51 ]
  %43 = phi %"struct.WTF::KeyValuePair.1800"* [ null, %23 ], [ %52, %51 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %11, i64 %42
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %44, i64 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  switch i64 %47, label %48 [
    i64 0, label %57
    i64 -1, label %51
  ]

48:                                               ; preds = %40
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %50 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %46, %"class.WTF::StringImpl"* %49) #13
  br i1 %50, label %85, label %51

51:                                               ; preds = %40, %48
  %52 = phi %"struct.WTF::KeyValuePair.1800"* [ %43, %48 ], [ %44, %40 ]
  %53 = icmp eq i64 %41, 0
  %54 = select i1 %53, i64 %39, i64 %41
  %55 = add i64 %54, %42
  %56 = and i64 %55, %15
  br label %40

57:                                               ; preds = %40
  %58 = icmp eq %"struct.WTF::KeyValuePair.1800"* %43, null
  br i1 %58, label %67, label %59

59:                                               ; preds = %57
  %60 = bitcast %"struct.WTF::KeyValuePair.1800"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = add i32 %62, 2147483647
  %64 = and i32 %63, 2147483647
  %65 = and i32 %62, -2147483648
  %66 = or i32 %64, %65
  store i32 %66, i32* %61, align 8
  br label %67

67:                                               ; preds = %57, %59
  %68 = phi %"struct.WTF::KeyValuePair.1800"* [ %43, %59 ], [ %44, %57 ]
  %69 = bitcast %"class.WTF::StringImpl"** %1 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.1800"* %68 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %68, i64 0, i32 1
  %73 = load i32, i32* %2, align 4
  store i32 %73, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, %76
  %80 = shl i32 %79, 1
  %81 = load i32, i32* %12, align 8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %67
  %84 = tail call %"struct.WTF::KeyValuePair.1800"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1797"* %0, %"struct.WTF::KeyValuePair.1800"* %68)
  br label %85

85:                                               ; preds = %48, %67, %83
  %86 = phi i8 [ 1, %67 ], [ 1, %83 ], [ 0, %48 ]
  %87 = phi %"struct.WTF::KeyValuePair.1800"* [ %68, %67 ], [ %84, %83 ], [ %44, %48 ]
  %88 = insertvalue { %"struct.WTF::KeyValuePair.1800"*, i8 } undef, %"struct.WTF::KeyValuePair.1800"* %87, 0
  %89 = insertvalue { %"struct.WTF::KeyValuePair.1800"*, i8 } %88, i8 %86, 1
  ret { %"struct.WTF::KeyValuePair.1800"*, i8 } %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1800"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1797"*, %"struct.WTF::KeyValuePair.1800"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPNS_10StringImplEN5blink13CSSPropertyIDEEEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1800"*
  %37 = call %"struct.WTF::KeyValuePair.1800"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.1797"* %0, %"struct.WTF::KeyValuePair.1800"* %36, i32 %32, %"struct.WTF::KeyValuePair.1800"* %1) #13
  ret %"struct.WTF::KeyValuePair.1800"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1800"* @_ZN3WTF9HashTableIPNS_10StringImplENS_12KeyValuePairIS2_N5blink13CSSPropertyIDEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.1797"*, %"struct.WTF::KeyValuePair.1800"*, i32, %"struct.WTF::KeyValuePair.1800"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.1800"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.1797"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.1800"*, %"struct.WTF::KeyValuePair.1800"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1800"* %16 to i64
  br label %31

18:                                               ; preds = %96
  %19 = bitcast %"class.WTF::HashTable.1797"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %97, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.1800"* [ null, %10 ], [ %100, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #13
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.1797", %"class.WTF::HashTable.1797"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.1800"* %23

31:                                               ; preds = %13, %96
  %32 = phi i64 [ %17, %13 ], [ %97, %96 ]
  %33 = phi i32 [ %7, %13 ], [ %98, %96 ]
  %34 = phi %"struct.WTF::KeyValuePair.1800"* [ %16, %13 ], [ %99, %96 ]
  %35 = phi %"struct.WTF::KeyValuePair.1800"* [ null, %13 ], [ %100, %96 ]
  %36 = phi i32 [ 0, %13 ], [ %101, %96 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %38, i64 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  switch i64 %41, label %42 [
    i64 -1, label %96
    i64 0, label %96
  ]

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = lshr i32 %44, 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i32 [ %48, %47 ], [ %45, %42 ]
  %51 = and i32 %50, %14
  %52 = zext i32 %51 to i64
  %53 = xor i32 %50, -1
  %54 = lshr i32 %50, 23
  %55 = add i32 %54, %53
  %56 = shl i32 %55, 12
  %57 = xor i32 %56, %55
  %58 = lshr i32 %57, 7
  %59 = xor i32 %58, %57
  %60 = shl i32 %59, 2
  %61 = xor i32 %60, %59
  %62 = lshr i32 %61, 20
  %63 = xor i32 %62, %61
  %64 = or i32 %63, 1
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %80, %49
  %67 = phi %"struct.WTF::KeyValuePair.1800"* [ null, %49 ], [ %81, %80 ]
  %68 = phi i64 [ 0, %49 ], [ %83, %80 ]
  %69 = phi i64 [ %52, %49 ], [ %85, %80 ]
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %1, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %70, i64 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  switch i64 %73, label %77 [
    i64 0, label %74
    i64 -1, label %80
  ]

74:                                               ; preds = %66
  %75 = icmp eq %"struct.WTF::KeyValuePair.1800"* %67, null
  %76 = select i1 %75, %"struct.WTF::KeyValuePair.1800"* %70, %"struct.WTF::KeyValuePair.1800"* %67
  br label %86

77:                                               ; preds = %66
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %79 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"* %78) #13
  br i1 %79, label %86, label %80

80:                                               ; preds = %77, %66
  %81 = phi %"struct.WTF::KeyValuePair.1800"* [ %67, %77 ], [ %70, %66 ]
  %82 = icmp eq i64 %68, 0
  %83 = select i1 %82, i64 %65, i64 %68
  %84 = add i64 %83, %69
  %85 = and i64 %84, %15
  br label %66

86:                                               ; preds = %77, %74
  %87 = phi %"struct.WTF::KeyValuePair.1800"* [ %76, %74 ], [ %70, %77 ]
  %88 = bitcast %"struct.WTF::KeyValuePair.1800"* %87 to i8*
  %89 = bitcast %"struct.WTF::KeyValuePair.1800"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false) #13
  %90 = load %"struct.WTF::KeyValuePair.1800"*, %"struct.WTF::KeyValuePair.1800"** %9, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1800", %"struct.WTF::KeyValuePair.1800"* %90, i64 %37
  %92 = icmp eq %"struct.WTF::KeyValuePair.1800"* %91, %3
  %93 = select i1 %92, %"struct.WTF::KeyValuePair.1800"* %87, %"struct.WTF::KeyValuePair.1800"* %35
  %94 = load i32, i32* %6, align 8
  %95 = ptrtoint %"struct.WTF::KeyValuePair.1800"* %90 to i64
  br label %96

96:                                               ; preds = %31, %31, %86
  %97 = phi i64 [ %32, %31 ], [ %95, %86 ], [ %32, %31 ]
  %98 = phi i32 [ %33, %31 ], [ %94, %86 ], [ %33, %31 ]
  %99 = phi %"struct.WTF::KeyValuePair.1800"* [ %34, %31 ], [ %90, %86 ], [ %34, %31 ]
  %100 = phi %"struct.WTF::KeyValuePair.1800"* [ %35, %31 ], [ %93, %86 ], [ %35, %31 ]
  %101 = add i32 %36, 1
  %102 = icmp eq i32 %101, %98
  br i1 %102, label %18, label %31
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::SVGElement"** dereferenceable(8), %"class.blink::SVGElement"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  %6 = icmp eq %"class.blink::WeakMember"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* null)
  %9 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::WeakMember"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SVGElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %40, align 8
  %42 = icmp eq %"class.blink::SVGElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SVGElement"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SVGElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::WeakMember"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::WeakMember"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::SVGElement"* %59, %43
  br i1 %64, label %149, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::SVGElement"* %59, inttoptr (i64 -1 to %"class.blink::SVGElement"*)
  %67 = select i1 %66, %"class.blink::WeakMember"* %60, %"class.blink::WeakMember"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %73, align 8
  %75 = icmp eq %"class.blink::SVGElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::WeakMember"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::WeakMember"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::WeakMember"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %89 = ptrtoint %"class.blink::SVGElement"* %88 to i64
  %90 = bitcast %"class.blink::WeakMember"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::SVGElement"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #13
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::WeakMember"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #13
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %87)
  br label %149

115:                                              ; preds = %103
  %116 = mul i32 %106, 6
  %117 = icmp ult i32 %116, %111
  %118 = icmp ugt i32 %111, 8
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %149

120:                                              ; preds = %115
  %121 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %122 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %121, i64 0, i32 1
  %123 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %122) #13
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !2

125:                                              ; preds = %120
  %126 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %122, i8* %126) #13
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i8* [ %126, %125 ], [ %123, %120 ]
  %129 = bitcast i8* %128 to %"class.blink::ThreadState"**
  %130 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 6
  %132 = load i8, i8* %131, align 8, !range !14
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 16
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %149, label %138

138:                                              ; preds = %127, %134
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 13
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 8
  %144 = lshr i32 %143, 1
  %145 = zext i32 %144 to i64
  %146 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %145) #13
  %147 = bitcast %"class.blink::HeapHashTableBacking"* %146 to %"class.blink::WeakMember"*
  %148 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %147, i32 %144, %"class.blink::WeakMember"* %87) #13
  br label %149

149:                                              ; preds = %58, %134, %115, %113, %142, %138
  %150 = phi i8 [ 1, %138 ], [ 1, %142 ], [ 1, %113 ], [ 1, %115 ], [ 1, %134 ], [ 0, %58 ]
  %151 = phi %"class.blink::WeakMember"* [ %87, %138 ], [ %148, %142 ], [ %114, %113 ], [ %87, %115 ], [ %87, %134 ], [ %60, %58 ]
  %152 = insertvalue { %"class.blink::WeakMember"*, i8 } undef, %"class.blink::WeakMember"* %151, 0
  %153 = insertvalue { %"class.blink::WeakMember"*, i8 } %152, i8 %150, 1
  ret { %"class.blink::WeakMember"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable"*, %"class.blink::WeakMember"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::WeakMember"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #13
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  %12 = and i32 %11, 2147483647
  %13 = and i32 %10, -2147483648
  %14 = or i32 %12, %13
  store i32 %14, i32* %9, align 8
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 4
  %18 = mul i32 %17, 6
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ult i32 %18, %20
  %22 = icmp ugt i32 %20, 8
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %53

24:                                               ; preds = %8
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #13
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #13
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !14
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 16
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %53, label %42

42:                                               ; preds = %31, %38
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 13
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %42
  %47 = load i32, i32* %19, align 8
  %48 = lshr i32 %47, 1
  %49 = zext i32 %48 to i64
  %50 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %49) #13
  %51 = bitcast %"class.blink::HeapHashTableBacking"* %50 to %"class.blink::WeakMember"*
  %52 = tail call %"class.blink::WeakMember"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::WeakMember"* %51, i32 %48, %"class.blink::WeakMember"* null) #13
  br label %53

53:                                               ; preds = %38, %8, %46, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1854"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1851"*, %"class.blink::QualifiedName"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.1854", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.1854"*, %"struct.WTF::KeyValuePair.1854"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.1854"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.1854"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1851"* %0, %"struct.WTF::KeyValuePair.1854"* null)
  %10 = load %"struct.WTF::KeyValuePair.1854"*, %"struct.WTF::KeyValuePair.1854"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.1854"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %18) #13
  %25 = load i32, i32* %19, align 4
  %26 = and i32 %24, 16777215
  %27 = and i32 %25, -16777216
  %28 = or i32 %27, %26
  store i32 %28, i32* %19, align 4
  br label %29

29:                                               ; preds = %11, %23
  %30 = phi i32 [ %21, %11 ], [ %26, %23 ]
  %31 = and i32 %30, %15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %12, i64 %32
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %38
  br i1 %39, label %109, label %40

40:                                               ; preds = %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %42 = xor i32 %30, -1
  %43 = lshr i32 %30, 23
  %44 = add nsw i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %40, %66
  %56 = phi %"struct.WTF::KeyValuePair.1854"* [ %33, %40 ], [ %72, %66 ]
  %57 = phi %"struct.WTF::KeyValuePair.1854"* [ null, %40 ], [ %67, %66 ]
  %58 = phi i64 [ %32, %40 ], [ %71, %66 ]
  %59 = phi i64 [ 0, %40 ], [ %69, %66 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.1854"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = bitcast i8* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %64
  br i1 %65, label %152, label %66

66:                                               ; preds = %55, %63
  %67 = phi %"struct.WTF::KeyValuePair.1854"* [ %57, %63 ], [ %56, %55 ]
  %68 = icmp eq i64 %59, 0
  %69 = select i1 %68, i64 %54, i64 %59
  %70 = add i64 %69, %58
  %71 = and i64 %70, %16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %12, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %38
  br i1 %75, label %76, label %55

76:                                               ; preds = %66
  %77 = icmp eq %"struct.WTF::KeyValuePair.1854"* %67, null
  br i1 %77, label %109, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1854"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8, !alias.scope !23
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, null
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %4, i64 0, i32 1
  store i32 0, i32* %83, align 8, !alias.scope !23
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  br label %100

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 1
  %87 = load i32, i32* %86, align 4, !noalias !23
  %88 = and i32 %87, 16777216
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %91) #13, !noalias !23
  br label %92

92:                                               ; preds = %90, %85
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %4, i64 0, i32 1
  store i32 0, i32* %93, align 8, !alias.scope !23
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %95 = load i32, i32* %86, align 4
  %96 = and i32 %95, 16777216
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %99) #13
  br label %100

100:                                              ; preds = %82, %92, %98
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %67, i64 0, i32 1
  store i32 0, i32* %101, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %4, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %102) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #13
  %103 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 2147483647
  %106 = and i32 %105, 2147483647
  %107 = and i32 %104, -2147483648
  %108 = or i32 %106, %107
  store i32 %108, i32* %103, align 8
  br label %109

109:                                              ; preds = %29, %76, %100
  %110 = phi %"struct.WTF::KeyValuePair.1854"* [ %67, %100 ], [ %72, %76 ], [ %33, %29 ]
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %112 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %111, null
  br i1 %112, label %120, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 16777216
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %119) #13
  br label %120

120:                                              ; preds = %118, %113, %109
  %121 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %111 to i64
  %122 = bitcast %"struct.WTF::KeyValuePair.1854"* %110 to i64*
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %110, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %123, align 8
  store i64 %121, i64* %122, align 8
  %125 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %124, null
  br i1 %125, label %138, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, 16777216
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %138

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %132) #13
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %124) #13
  %137 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %124 to i8*
  call void @free(i8* %137) #13
  br label %138

138:                                              ; preds = %120, %126, %131, %136
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %110, i64 0, i32 1
  %140 = load i32, i32* %2, align 4
  store i32 %140, i32* %139, align 4
  %141 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %141, align 4
  %144 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, %143
  %147 = shl i32 %146, 1
  %148 = load i32, i32* %13, align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %152, label %150

150:                                              ; preds = %138
  %151 = call %"struct.WTF::KeyValuePair.1854"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1851"* %0, %"struct.WTF::KeyValuePair.1854"* %110)
  br label %152

152:                                              ; preds = %63, %138, %150
  %153 = phi i8 [ 1, %138 ], [ 1, %150 ], [ 0, %63 ]
  %154 = phi %"struct.WTF::KeyValuePair.1854"* [ %110, %138 ], [ %151, %150 ], [ %56, %63 ]
  %155 = insertvalue { %"struct.WTF::KeyValuePair.1854"*, i8 } undef, %"struct.WTF::KeyValuePair.1854"* %154, 0
  %156 = insertvalue { %"struct.WTF::KeyValuePair.1854"*, i8 } %155, i8 %153, 1
  ret { %"struct.WTF::KeyValuePair.1854"*, i8 } %156
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1854"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1851"*, %"struct.WTF::KeyValuePair.1854"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.1854"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE13AllocateTableEj(i32 %32) #13
  %34 = call %"struct.WTF::KeyValuePair.1854"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.1851"* %0, %"struct.WTF::KeyValuePair.1854"* %33, i32 %32, %"struct.WTF::KeyValuePair.1854"* %1) #13
  ret %"struct.WTF::KeyValuePair.1854"* %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1854"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE13AllocateTableEj(i32) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair.1854", align 8
  %3 = zext i32 %0 to i64
  %4 = shl nuw nsw i64 %3, 4
  %5 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %4, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameENS2_20AnimatedPropertyTypeEEEEEPKcv, i64 0, i64 0)) #13
  %6 = bitcast i8* %5 to %"struct.WTF::KeyValuePair.1854"*
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.WTF::KeyValuePair.1854"* %2 to i8*
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !26
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %2, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %2, i64 0, i32 0
  br label %16

15:                                               ; preds = %37, %1
  ret %"struct.WTF::KeyValuePair.1854"* %6

16:                                               ; preds = %37, %8
  %17 = phi i64 [ 0, %8 ], [ %39, %37 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %6, i64 %17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8, !noalias !26
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %19, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8, !alias.scope !26
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  store i32 0, i32* %13, align 8, !alias.scope !26
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  br label %37

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 1
  %25 = load i32, i32* %24, align 4, !noalias !26
  %26 = and i32 %25, 16777216
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #13, !noalias !26
  br label %30

30:                                               ; preds = %28, %23
  store i32 0, i32* %13, align 8, !alias.scope !26
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %19, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %32 = load i32, i32* %24, align 4
  %33 = and i32 %32, 16777216
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #13
  br label %37

37:                                               ; preds = %21, %30, %35
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %6, i64 %17, i32 1
  store i32 0, i32* %38, align 8
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  %39 = add nuw nsw i64 %17, 1
  %40 = icmp eq i64 %39, %3
  br i1 %40, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1854"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.1851"*, %"struct.WTF::KeyValuePair.1854"*, i32, %"struct.WTF::KeyValuePair.1854"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1851", align 8
  %6 = bitcast %"class.WTF::HashTable.1851"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1851"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1854"* %1, %"struct.WTF::KeyValuePair.1854"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1854"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1851"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1851"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair.1854"*, %"struct.WTF::KeyValuePair.1854"** %15, align 8
  %25 = ptrtoint %"struct.WTF::KeyValuePair.1854"* %24 to i64
  br label %60

26:                                               ; preds = %99
  %27 = bitcast %"class.WTF::HashTable.1851"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.1851"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %100, %26 ]
  %35 = phi %"struct.WTF::KeyValuePair.1854"* [ null, %16 ], [ %103, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %101, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"struct.WTF::KeyValuePair.1854"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %51, %41
  %44 = phi i64 [ 0, %41 ], [ %52, %51 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %37, i64 %44
  %46 = bitcast %"struct.WTF::KeyValuePair.1854"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %45, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %50) #13
  br label %51

51:                                               ; preds = %49, %43
  %52 = add nuw nsw i64 %44, 1
  %53 = icmp eq i64 %52, %42
  br i1 %53, label %54, label %43

54:                                               ; preds = %51, %39
  %55 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #13
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %56

56:                                               ; preds = %30, %54
  %57 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, -2147483648
  store i32 %59, i32* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.1854"* %35

60:                                               ; preds = %21, %99
  %61 = phi i64 [ %25, %21 ], [ %100, %99 ]
  %62 = phi i32 [ %13, %21 ], [ %101, %99 ]
  %63 = phi %"struct.WTF::KeyValuePair.1854"* [ %24, %21 ], [ %102, %99 ]
  %64 = phi %"struct.WTF::KeyValuePair.1854"* [ null, %21 ], [ %103, %99 ]
  %65 = phi i32 [ 0, %21 ], [ %104, %99 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %63, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, %70
  %72 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %73 = or i1 %72, %71
  br i1 %73, label %99, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %67, i64 0, i32 0
  %76 = call { %"struct.WTF::KeyValuePair.1854"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.1851"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %75) #13
  %77 = extractvalue { %"struct.WTF::KeyValuePair.1854"*, i8 } %76, 0
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %77, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %78) #13
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %77, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %79, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %79, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 16777216
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %88) #13
  br label %89

89:                                               ; preds = %74, %82, %87
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %77, i64 0, i32 1
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %63, i64 %66, i32 1
  %92 = load i32, i32* %91, align 8
  store i32 %92, i32* %90, align 8
  %93 = load %"struct.WTF::KeyValuePair.1854"*, %"struct.WTF::KeyValuePair.1854"** %15, align 8
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %93, i64 %66
  %95 = icmp eq %"struct.WTF::KeyValuePair.1854"* %94, %3
  %96 = select i1 %95, %"struct.WTF::KeyValuePair.1854"* %77, %"struct.WTF::KeyValuePair.1854"* %64
  %97 = load i32, i32* %12, align 8
  %98 = ptrtoint %"struct.WTF::KeyValuePair.1854"* %93 to i64
  br label %99

99:                                               ; preds = %60, %89
  %100 = phi i64 [ %61, %60 ], [ %98, %89 ]
  %101 = phi i32 [ %62, %60 ], [ %97, %89 ]
  %102 = phi %"struct.WTF::KeyValuePair.1854"* [ %63, %60 ], [ %93, %89 ]
  %103 = phi %"struct.WTF::KeyValuePair.1854"* [ %64, %60 ], [ %96, %89 ]
  %104 = add i32 %65, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %26, label %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1854"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.1851"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1854"*, %"struct.WTF::KeyValuePair.1854"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #13
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %4, i64 %24
  %26 = ptrtoint %"struct.WTF::KeyValuePair.1854"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"struct.WTF::KeyValuePair.1854"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"struct.WTF::KeyValuePair.1854"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair.1854"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair.1854"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"struct.WTF::KeyValuePair.1854"* [ null, %33 ], [ %69, %68 ]
  %58 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %59 = phi %"struct.WTF::KeyValuePair.1854"* [ %25, %33 ], [ %74, %68 ]
  %60 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %61 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %62 = bitcast %"struct.WTF::KeyValuePair.1854"* %59 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i8* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %65, %56
  %69 = phi %"struct.WTF::KeyValuePair.1854"* [ %57, %65 ], [ %59, %56 ]
  %70 = icmp eq i64 %61, 0
  %71 = select i1 %70, i64 %47, i64 %61
  %72 = add i64 %71, %60
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %4, i64 %73
  %75 = ptrtoint %"struct.WTF::KeyValuePair.1854"* %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %65, %50
  %80 = phi i64 [ %55, %50 ], [ %58, %65 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %65 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair.1854"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair.1854"*, i8 } undef, %"struct.WTF::KeyValuePair.1854"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair.1854"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair.1854"*, i8 } %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1854"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_20AnimatedPropertyTypeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS1_30AnimatedPropertyTypeHashTraitsEEESA_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.1851"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1854"*, %"struct.WTF::KeyValuePair.1854"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1854"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1851", %"class.WTF::HashTable.1851"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #13
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.1854"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.1854"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1854", %"struct.WTF::KeyValuePair.1854"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"struct.WTF::KeyValuePair.1854"* [ null, %2 ], [ null, %23 ], [ %50, %49 ], [ null, %59 ]
  ret %"struct.WTF::KeyValuePair.1854"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.27"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::SVGAnimatedPropertyBase"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.27"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %18) #13
  %25 = load i32, i32* %19, align 4
  %26 = and i32 %24, 16777215
  %27 = and i32 %25, -16777216
  %28 = or i32 %27, %26
  store i32 %28, i32* %19, align 4
  br label %29

29:                                               ; preds = %11, %23
  %30 = phi i32 [ %21, %11 ], [ %26, %23 ]
  %31 = and i32 %30, %15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %32
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %38
  br i1 %39, label %112, label %40

40:                                               ; preds = %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %42 = xor i32 %30, -1
  %43 = lshr i32 %30, 23
  %44 = add nsw i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %40, %66
  %56 = phi %"struct.WTF::KeyValuePair"* [ %33, %40 ], [ %72, %66 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ null, %40 ], [ %67, %66 ]
  %58 = phi i64 [ %32, %40 ], [ %71, %66 ]
  %59 = phi i64 [ 0, %40 ], [ %69, %66 ]
  %60 = bitcast %"struct.WTF::KeyValuePair"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = bitcast i8* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %64
  br i1 %65, label %163, label %66

66:                                               ; preds = %55, %63
  %67 = phi %"struct.WTF::KeyValuePair"* [ %57, %63 ], [ %56, %55 ]
  %68 = icmp eq i64 %59, 0
  %69 = select i1 %68, i64 %54, i64 %59
  %70 = add i64 %69, %58
  %71 = and i64 %70, %16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %38
  br i1 %75, label %76, label %55

76:                                               ; preds = %66
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %112, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8, !alias.scope !29
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 1
  %84 = bitcast %"class.blink::Member.29"* %83 to i64*
  store i64 0, i64* %84, align 8, !alias.scope !29
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  br label %102

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 1
  %88 = load i32, i32* %87, align 4, !noalias !29
  %89 = and i32 %88, 16777216
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %92) #13, !noalias !29
  br label %93

93:                                               ; preds = %91, %86
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 1
  %95 = bitcast %"class.blink::Member.29"* %94 to i64*
  store i64 0, i64* %95, align 8, !alias.scope !29
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %97 = load i32, i32* %87, align 4
  %98 = and i32 %97, 16777216
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %101) #13
  br label %102

102:                                              ; preds = %82, %93, %100
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 1
  %104 = bitcast %"class.blink::Member.29"* %103 to i64*
  store i64 0, i64* %104, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_13QualifiedNameENS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSA_IS7_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* nonnull %67) #13
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %105) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #13
  %106 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, 2147483647
  %109 = and i32 %108, 2147483647
  %110 = and i32 %107, -2147483648
  %111 = or i32 %109, %110
  store i32 %111, i32* %106, align 8
  br label %112

112:                                              ; preds = %29, %76, %102
  %113 = phi %"struct.WTF::KeyValuePair"* [ %67, %102 ], [ %72, %76 ], [ %33, %29 ]
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %115 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = and i32 %118, 16777216
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %122) #13
  br label %123

123:                                              ; preds = %121, %116, %112
  %124 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %114 to i64
  %125 = bitcast %"struct.WTF::KeyValuePair"* %113 to i64*
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %126, align 8
  store i64 %124, i64* %125, align 8
  %128 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %127, null
  br i1 %128, label %141, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %131, 16777216
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %141

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %135) #13
  %136 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %127) #13
  %140 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %127 to i8*
  call void @free(i8* %140) #13
  br label %141

141:                                              ; preds = %123, %129, %134, %139
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 0, i32 1
  %143 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %2, align 8
  %144 = ptrtoint %"class.blink::SVGAnimatedPropertyBase"* %143 to i64
  %145 = bitcast %"class.blink::Member.29"* %142 to i64*
  store atomic i64 %144, i64* %145 monotonic, align 8
  %146 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %141
  %149 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %143 to i8*
  %150 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #13
  br label %151

151:                                              ; preds = %141, %148
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_13QualifiedNameENS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSA_IS7_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %113) #13
  %152 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %152, align 4
  %155 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = add i32 %156, %154
  %158 = shl i32 %157, 1
  %159 = load i32, i32* %13, align 8
  %160 = icmp ult i32 %158, %159
  br i1 %160, label %163, label %161

161:                                              ; preds = %151
  %162 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.27"* %0, %"struct.WTF::KeyValuePair"* %113)
  br label %163

163:                                              ; preds = %63, %151, %161
  %164 = phi i8 [ 1, %151 ], [ 1, %161 ], [ 0, %63 ]
  %165 = phi %"struct.WTF::KeyValuePair"* [ %113, %151 ], [ %162, %161 ], [ %56, %63 ]
  %166 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %165, 0
  %167 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %166, i8 %164, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.27"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.27"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #13
  %37 = load i8, i8* %4, align 1, !range !14
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br i1 %38, label %39, label %43

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE13AllocateTableEj(i32 %40) #13
  %42 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.27"* %0, %"struct.WTF::KeyValuePair"* %41, i32 %40, %"struct.WTF::KeyValuePair"* %1) #13
  br label %43

43:                                               ; preds = %34, %39
  %44 = phi %"struct.WTF::KeyValuePair"* [ %42, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.27"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.WTF::KeyValuePair", align 8
  %6 = alloca %"struct.WTF::KeyValuePair", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #13
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !2

12:                                               ; preds = %4
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %13) #13
  br label %14

14:                                               ; preds = %12, %4
  %15 = phi i8* [ %13, %12 ], [ %10, %4 ]
  %16 = bitcast i8* %15 to %"class.blink::ThreadState"**
  %17 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 6
  %19 = load i8, i8* %18, align 8, !range !14
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 16
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %29, label %25

25:                                               ; preds = %14, %21
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 13
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %21, %25
  %30 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #13
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  br label %32

32:                                               ; preds = %25, %29
  %33 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 0
  %34 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %33, align 8
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, null
  br i1 %35, label %159, label %36

36:                                               ; preds = %32
  %37 = zext i32 %1 to i64
  %38 = shl nuw nsw i64 %37, 4
  %39 = bitcast %"struct.WTF::KeyValuePair"* %34 to i8*
  %40 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %39, i64 %38) #13
  br i1 %40, label %41, label %159

41:                                               ; preds = %36
  store i8 1, i8* %3, align 1
  %42 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %33, align 8
  %45 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE13AllocateTableEj(i32 %43)
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %41
  %48 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %48, i64 0, i32 0, i32 0
  %50 = bitcast %"struct.WTF::KeyValuePair"* %6 to i8*
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1
  %53 = bitcast %"class.blink::Member.29"* %52 to i64*
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 0
  %55 = zext i32 %43 to i64
  br label %73

56:                                               ; preds = %128, %41
  %57 = phi %"struct.WTF::KeyValuePair"* [ null, %41 ], [ %80, %128 ]
  store %"struct.WTF::KeyValuePair"* %45, %"struct.WTF::KeyValuePair"** %33, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = bitcast %"struct.WTF::KeyValuePair"* %45 to i8*
  %62 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #13
  br label %63

63:                                               ; preds = %56, %60
  %64 = icmp eq i32 %1, 0
  br i1 %64, label %131, label %65

65:                                               ; preds = %63
  %66 = bitcast %"struct.WTF::KeyValuePair"* %5 to i8*
  %67 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !32
  %68 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %67, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1
  %71 = bitcast %"class.blink::Member.29"* %70 to i64*
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0
  br label %133

73:                                               ; preds = %128, %47
  %74 = phi i64 [ 0, %47 ], [ %129, %128 ]
  %75 = phi %"struct.WTF::KeyValuePair"* [ null, %47 ], [ %80, %128 ]
  %76 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %33, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 %74
  %78 = icmp eq %"struct.WTF::KeyValuePair"* %77, %2
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %74
  %80 = select i1 %78, %"struct.WTF::KeyValuePair"* %79, %"struct.WTF::KeyValuePair"* %75
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %84 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %82, %83
  %85 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %82, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %86 = or i1 %85, %84
  br i1 %86, label %87, label %108

87:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #13
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %83, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8, !alias.scope !35
  %88 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %83, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  store i64 0, i64* %53, align 8, !alias.scope !35
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  br label %105

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 1
  %93 = load i32, i32* %92, align 4, !noalias !35
  %94 = and i32 %93, 16777216
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %97) #13, !noalias !35
  br label %98

98:                                               ; preds = %96, %91
  store i64 0, i64* %53, align 8, !alias.scope !35
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %83, %"class.blink::QualifiedName::QualifiedNameImpl"** %99, align 8
  %100 = load i32, i32* %92, align 4
  %101 = and i32 %100, 16777216
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %104) #13
  br label %105

105:                                              ; preds = %89, %98, %103
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %74, i32 1
  %107 = bitcast %"class.blink::Member.29"* %106 to i64*
  store i64 0, i64* %107, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_13QualifiedNameENS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSA_IS7_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %79) #13
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %54) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #13
  br label %128

108:                                              ; preds = %73
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %109) #13
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %110, %"class.blink::QualifiedName::QualifiedNameImpl"** %111, align 8
  %112 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %110, null
  br i1 %112, label %120, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 16777216
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %119) #13
  br label %120

120:                                              ; preds = %108, %113, %118
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %74, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 %74, i32 1
  %123 = bitcast %"class.blink::Member.29"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.29"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %33, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 %74, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %127) #13
  br label %128

128:                                              ; preds = %105, %120
  %129 = add nuw nsw i64 %74, 1
  %130 = icmp eq i64 %129, %55
  br i1 %130, label %56, label %73

131:                                              ; preds = %154, %63
  %132 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.27"* %0, %"struct.WTF::KeyValuePair"* %44, i32 %1, %"struct.WTF::KeyValuePair"* %57)
  br label %159

133:                                              ; preds = %154, %65
  %134 = phi i64 [ 0, %65 ], [ %157, %154 ]
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %134
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #13
  %136 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8, !noalias !32
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %136, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8, !alias.scope !32
  %137 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  store i64 0, i64* %71, align 8, !alias.scope !32
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %139, align 8
  br label %154

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 1
  %142 = load i32, i32* %141, align 4, !noalias !32
  %143 = and i32 %142, 16777216
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %146) #13, !noalias !32
  br label %147

147:                                              ; preds = %145, %140
  store i64 0, i64* %71, align 8, !alias.scope !32
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %136, %"class.blink::QualifiedName::QualifiedNameImpl"** %148, align 8
  %149 = load i32, i32* %141, align 4
  %150 = and i32 %149, 16777216
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %153) #13
  br label %154

154:                                              ; preds = %138, %147, %152
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %134, i32 1
  %156 = bitcast %"class.blink::Member.29"* %155 to i64*
  store i64 0, i64* %156, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_13QualifiedNameENS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSA_IS7_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %135) #13
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #13
  %157 = add nuw nsw i64 %134, 1
  %158 = icmp eq i64 %157, %37
  br i1 %158, label %131, label %133

159:                                              ; preds = %36, %32, %131
  %160 = phi %"struct.WTF::KeyValuePair"* [ %132, %131 ], [ null, %32 ], [ null, %36 ]
  ret %"struct.WTF::KeyValuePair"* %160
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE13AllocateTableEj(i32) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair", align 8
  %3 = zext i32 %0 to i64
  %4 = tail call %"class.blink::HeapHashTableBacking.2095"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %3) #13
  %5 = bitcast %"class.blink::HeapHashTableBacking.2095"* %4 to %"struct.WTF::KeyValuePair"*
  %6 = icmp eq i32 %0, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.WTF::KeyValuePair"* %2 to i8*
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !38
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1
  %13 = bitcast %"class.blink::Member.29"* %12 to i64*
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0
  br label %16

15:                                               ; preds = %37, %1
  ret %"struct.WTF::KeyValuePair"* %5

16:                                               ; preds = %37, %7
  %17 = phi i64 [ 0, %7 ], [ %40, %37 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !noalias !38
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %19, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8, !alias.scope !38
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  store i64 0, i64* %13, align 8, !alias.scope !38
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  br label %37

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 1
  %25 = load i32, i32* %24, align 4, !noalias !38
  %26 = and i32 %25, 16777216
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #13, !noalias !38
  br label %30

30:                                               ; preds = %28, %23
  store i64 0, i64* %13, align 8, !alias.scope !38
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %19, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %32 = load i32, i32* %24, align 4
  %33 = and i32 %32, 16777216
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #13
  br label %37

37:                                               ; preds = %21, %30, %35
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %17, i32 1
  %39 = bitcast %"class.blink::Member.29"* %38 to i64*
  store i64 0, i64* %39, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_13QualifiedNameENS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSA_IS7_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %18) #13
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  %40 = add nuw nsw i64 %17, 1
  %41 = icmp eq i64 %40, %3
  br i1 %41, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.27"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.27", align 8
  %6 = bitcast %"class.WTF::HashTable.27"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.27"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %27

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 0
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %83

23:                                               ; preds = %122
  %24 = bitcast %"class.WTF::HashTable.27"* %5 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = ptrtoint i8* %25 to i64
  br label %27

27:                                               ; preds = %15, %23
  %28 = phi i64 [ %16, %15 ], [ %26, %23 ]
  %29 = phi i32 [ 0, %15 ], [ %123, %23 ]
  %30 = phi i8* [ %17, %15 ], [ %25, %23 ]
  %31 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %125, %23 ]
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.WTF::HashTable.27"* %5 to i64*
  br label %40

36:                                               ; preds = %27
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %30) #13
  %37 = load i32, i32* %12, align 8
  %38 = bitcast %"class.WTF::HashTable.27"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %34, %36
  %41 = phi i64* [ %35, %34 ], [ %38, %36 ]
  %42 = phi i64 [ %28, %34 ], [ %39, %36 ]
  %43 = phi i32 [ %29, %34 ], [ %37, %36 ]
  %44 = bitcast %"class.WTF::HashTable.27"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  store atomic i64 %42, i64* %44 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %40
  %49 = inttoptr i64 %42 to i8*
  %50 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #13
  br label %51

51:                                               ; preds = %40, %48
  store i32 %2, i32* %12, align 8
  store i64 %45, i64* %41, align 8
  store i32 %43, i32* %8, align 8
  %52 = inttoptr i64 %45 to %"struct.WTF::KeyValuePair"*
  %53 = icmp eq i64 %45, 0
  br i1 %53, label %79, label %54

54:                                               ; preds = %51
  %55 = icmp eq i32 %43, 0
  br i1 %55, label %77, label %56

56:                                               ; preds = %54
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %57, i64 0, i32 0, i32 0
  %59 = zext i32 %43 to i64
  br label %60

60:                                               ; preds = %74, %56
  %61 = phi i64 [ 0, %56 ], [ %75, %74 ]
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %65
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %68 = or i1 %67, %66
  br i1 %68, label %74, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %70) #13
  %71 = bitcast %"struct.WTF::KeyValuePair"* %62 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 %61, i32 1
  %73 = bitcast %"class.blink::Member.29"* %72 to i64*
  store atomic i64 0, i64* %73 monotonic, align 8
  br label %74

74:                                               ; preds = %69, %60
  %75 = add nuw nsw i64 %61, 1
  %76 = icmp eq i64 %75, %59
  br i1 %76, label %77, label %60

77:                                               ; preds = %74, %54
  %78 = inttoptr i64 %45 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %78) #13
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %79

79:                                               ; preds = %51, %77
  %80 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, -2147483648
  store i32 %82, i32* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair"* %31

83:                                               ; preds = %18, %122
  %84 = phi i32 [ %13, %18 ], [ %123, %122 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %22, %18 ], [ %124, %122 ]
  %86 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %125, %122 ]
  %87 = phi i32 [ 0, %18 ], [ %126, %122 ]
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 %88
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %93 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, %92
  %94 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %95 = or i1 %94, %93
  br i1 %95, label %122, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 0
  %98 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.27"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %97) #13
  %99 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %98, 0
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %100) #13
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %101, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %103 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %101, null
  br i1 %103, label %111, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 16777216
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %110) #13
  br label %111

111:                                              ; preds = %96, %104, %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 1
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 %88, i32 1
  %114 = bitcast %"class.blink::Member.29"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.blink::Member.29"* %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %117, i64 %88
  %119 = icmp eq %"struct.WTF::KeyValuePair"* %118, %3
  %120 = select i1 %119, %"struct.WTF::KeyValuePair"* %99, %"struct.WTF::KeyValuePair"* %86
  %121 = load i32, i32* %12, align 8
  br label %122

122:                                              ; preds = %83, %111
  %123 = phi i32 [ %84, %83 ], [ %121, %111 ]
  %124 = phi %"struct.WTF::KeyValuePair"* [ %85, %83 ], [ %117, %111 ]
  %125 = phi %"struct.WTF::KeyValuePair"* [ %86, %83 ], [ %120, %111 ]
  %126 = add i32 %87, 1
  %127 = icmp eq i32 %126, %123
  br i1 %127, label %23, label %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.2095"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.2095"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.2095"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([451 x i8], [451 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13QualifiedNameENS_12KeyValuePairIS4_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #13
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #13
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %43, label %24

24:                                               ; preds = %18
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %39, %24
  %28 = phi i64 [ 0, %24 ], [ %41, %39 ]
  %29 = phi i32 [ 0, %24 ], [ %40, %39 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %28
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %33
  %35 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %36 = or i1 %35, %34
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %38) #13
  br label %39

39:                                               ; preds = %37, %27
  %40 = add i32 %29, 1
  %41 = zext i32 %40 to i64
  %42 = icmp ugt i64 %21, %41
  br i1 %42, label %27, label %43

43:                                               ; preds = %39, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #13
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %20
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %35

34:                                               ; preds = %193, %20
  ret void

35:                                               ; preds = %193, %30
  %36 = phi i64 [ 0, %30 ], [ %194, %193 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %36
  br i1 %28, label %38, label %116

38:                                               ; preds = %35
  %39 = bitcast %"struct.WTF::KeyValuePair"* %37 to i64*
  %40 = load atomic i64, i64* %39 monotonic, align 8
  %41 = inttoptr i64 %40 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %41
  %44 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %45 = or i1 %44, %43
  br i1 %45, label %193, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %36, i32 1
  %48 = bitcast %"class.blink::Member.29"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %193, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = and i64 %49, -131072
  %54 = inttoptr i64 %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 4138
  %56 = load i8, i8* %55, align 2
  %57 = icmp eq i8 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = getelementptr inbounds i8, i8* %54, i64 4160
  br label %98

60:                                               ; preds = %51
  %61 = getelementptr inbounds i8, i8* %54, i64 4096
  %62 = bitcast i8* %61 to %"class.blink::NormalPage"*
  %63 = getelementptr inbounds i8, i8* %54, i64 4400
  %64 = bitcast i8* %63 to i8**
  %65 = bitcast i8* %63 to i64*
  %66 = load i64, i64* %65, align 16
  %67 = sub i64 %49, %66
  %68 = lshr i64 %67, 3
  %69 = lshr i64 %67, 6
  %70 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %62, i64 0, i32 2, i32 0, i32 1, i64 %69
  %71 = load atomic i8, i8* %70 acquire, align 1
  %72 = trunc i64 %68 to i32
  %73 = and i32 %72, 7
  %74 = shl i32 2, %73
  %75 = trunc i32 %74 to i8
  %76 = add i8 %75, -1
  %77 = and i8 %76, %71
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %60, %79
  %80 = phi i64 [ %81, %79 ], [ %69, %60 ]
  %81 = add i64 %80, -1
  %82 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %62, i64 0, i32 2, i32 0, i32 1, i64 %81
  %83 = load atomic i8, i8* %82 acquire, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %79, label %85

85:                                               ; preds = %79, %60
  %86 = phi i64 [ %69, %60 ], [ %81, %79 ]
  %87 = phi i8 [ %77, %60 ], [ %83, %79 ]
  %88 = zext i8 %87 to i32
  %89 = tail call i32 @llvm.ctlz.i32(i32 %88, i1 true) #13, !range !41
  %90 = add nsw i32 %89, -24
  %91 = shl i64 %86, 3
  %92 = or i64 %91, 7
  %93 = sext i32 %90 to i64
  %94 = sub i64 %92, %93
  %95 = shl i64 %94, 3
  %96 = load i8*, i8** %64, align 16
  %97 = getelementptr inbounds i8, i8* %96, i64 %95
  br label %98

98:                                               ; preds = %85, %58
  %99 = phi i8* [ %59, %58 ], [ %97, %85 ]
  %100 = getelementptr inbounds i8, i8* %99, i64 8
  %101 = getelementptr inbounds i8, i8* %99, i64 4
  %102 = bitcast i8* %101 to i16*
  %103 = load atomic i16, i16* %102 acquire, align 2
  %104 = lshr i16 %103, 2
  %105 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %106 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %105, i64 0, i32 0
  %107 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %106, align 8
  %108 = zext i16 %104 to i64
  %109 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %107, i64 %108
  %110 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %109, align 8
  %111 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %110, i64 0, i32 0
  %112 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %111, align 8
  %113 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %114 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %113, i64 5
  %115 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %114, align 8
  tail call void %115(%"class.blink::Visitor"* %0, i8* nonnull %52, i8* %100, void (%"class.blink::Visitor"*, i8*)* %112) #13
  br label %193

116:                                              ; preds = %35
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %117, align 8
  %119 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %120 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %118, %119
  %121 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %118, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %122 = or i1 %121, %120
  br i1 %122, label %193, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %36, i32 1
  %125 = bitcast %"class.blink::Member.29"* %124 to i64*
  %126 = load atomic i64, i64* %125 monotonic, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %193, label %128

128:                                              ; preds = %123
  %129 = inttoptr i64 %126 to i8*
  %130 = and i64 %126, -131072
  %131 = inttoptr i64 %130 to i8*
  %132 = getelementptr inbounds i8, i8* %131, i64 4138
  %133 = load i8, i8* %132, align 2
  %134 = icmp eq i8 %133, 1
  br i1 %134, label %135, label %137

135:                                              ; preds = %128
  %136 = getelementptr inbounds i8, i8* %131, i64 4160
  br label %175

137:                                              ; preds = %128
  %138 = getelementptr inbounds i8, i8* %131, i64 4096
  %139 = bitcast i8* %138 to %"class.blink::NormalPage"*
  %140 = getelementptr inbounds i8, i8* %131, i64 4400
  %141 = bitcast i8* %140 to i8**
  %142 = bitcast i8* %140 to i64*
  %143 = load i64, i64* %142, align 16
  %144 = sub i64 %126, %143
  %145 = lshr i64 %144, 3
  %146 = lshr i64 %144, 6
  %147 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %139, i64 0, i32 2, i32 0, i32 1, i64 %146
  %148 = load atomic i8, i8* %147 acquire, align 1
  %149 = trunc i64 %145 to i32
  %150 = and i32 %149, 7
  %151 = shl i32 2, %150
  %152 = trunc i32 %151 to i8
  %153 = add i8 %152, -1
  %154 = and i8 %153, %148
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %137, %156
  %157 = phi i64 [ %158, %156 ], [ %146, %137 ]
  %158 = add i64 %157, -1
  %159 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %139, i64 0, i32 2, i32 0, i32 1, i64 %158
  %160 = load atomic i8, i8* %159 acquire, align 1
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %156, label %162

162:                                              ; preds = %156, %137
  %163 = phi i64 [ %146, %137 ], [ %158, %156 ]
  %164 = phi i8 [ %154, %137 ], [ %160, %156 ]
  %165 = zext i8 %164 to i32
  %166 = tail call i32 @llvm.ctlz.i32(i32 %165, i1 true) #13, !range !41
  %167 = add nsw i32 %166, -24
  %168 = shl i64 %163, 3
  %169 = or i64 %168, 7
  %170 = sext i32 %167 to i64
  %171 = sub i64 %169, %170
  %172 = shl i64 %171, 3
  %173 = load i8*, i8** %141, align 16
  %174 = getelementptr inbounds i8, i8* %173, i64 %172
  br label %175

175:                                              ; preds = %162, %135
  %176 = phi i8* [ %136, %135 ], [ %174, %162 ]
  %177 = getelementptr inbounds i8, i8* %176, i64 8
  %178 = getelementptr inbounds i8, i8* %176, i64 4
  %179 = bitcast i8* %178 to i16*
  %180 = load atomic i16, i16* %179 acquire, align 2
  %181 = lshr i16 %180, 2
  %182 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %183 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %182, i64 0, i32 0
  %184 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %183, align 8
  %185 = zext i16 %181 to i64
  %186 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %184, i64 %185
  %187 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %186, align 8
  %188 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %187, i64 0, i32 0
  %189 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %188, align 8
  %190 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %191 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %190, i64 5
  %192 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %191, align 8
  tail call void %192(%"class.blink::Visitor"* %0, i8* nonnull %129, i8* %177, void (%"class.blink::Visitor"*, i8*)* %189) #13
  br label %193

193:                                              ; preds = %175, %123, %38, %46, %98, %116
  %194 = add nuw nsw i64 %36, 1
  %195 = icmp eq i64 %194, %23
  br i1 %195, label %34, label %35
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_23SVGAnimatedPropertyBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.27"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.27", %"class.WTF::HashTable.27"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #13
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %24
  %26 = ptrtoint %"struct.WTF::KeyValuePair"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"struct.WTF::KeyValuePair"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"struct.WTF::KeyValuePair"* [ null, %33 ], [ %69, %68 ]
  %58 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %25, %33 ], [ %74, %68 ]
  %60 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %61 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %62 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i8* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %65, %56
  %69 = phi %"struct.WTF::KeyValuePair"* [ %57, %65 ], [ %59, %56 ]
  %70 = icmp eq i64 %61, 0
  %71 = select i1 %70, i64 %47, i64 %61
  %72 = add i64 %71, %60
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %73
  %75 = ptrtoint %"struct.WTF::KeyValuePair"* %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %65, %50
  %80 = phi i64 [ %55, %50 ], [ %58, %65 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %65 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_13QualifiedNameENS_6MemberINS_23SVGAnimatedPropertyBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSA_IS7_EEEEEEvPT_(%"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %98, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !14
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %98, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::Member.29"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = and i64 %27, -131072
  %32 = inttoptr i64 %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 4138
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %32, i64 4160
  br label %75

38:                                               ; preds = %29
  %39 = getelementptr inbounds i8, i8* %32, i64 4400
  %40 = bitcast i8* %39 to %"class.blink::ObjectStartBitmap"*
  %41 = bitcast i8* %39 to i8**
  %42 = bitcast i8* %39 to i64*
  %43 = load i64, i64* %42, align 16
  %44 = sub i64 %27, %43
  %45 = lshr i64 %44, 3
  %46 = lshr i64 %44, 6
  %47 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %40, i64 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = trunc i64 %45 to i32
  %50 = and i32 %49, 7
  %51 = shl i32 2, %50
  %52 = trunc i32 %51 to i8
  %53 = add i8 %52, -1
  %54 = and i8 %53, %48
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %38, %56
  %57 = phi i64 [ %58, %56 ], [ %46, %38 ]
  %58 = add i64 %57, -1
  %59 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %40, i64 0, i32 1, i64 %58
  %60 = load atomic i8, i8* %59 acquire, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %56, label %62

62:                                               ; preds = %56, %38
  %63 = phi i64 [ %46, %38 ], [ %58, %56 ]
  %64 = phi i8 [ %54, %38 ], [ %60, %56 ]
  %65 = zext i8 %64 to i32
  %66 = tail call i32 @llvm.ctlz.i32(i32 %65, i1 true) #13, !range !41
  %67 = add nsw i32 %66, -24
  %68 = shl i64 %63, 3
  %69 = or i64 %68, 7
  %70 = sext i32 %67 to i64
  %71 = sub i64 %69, %70
  %72 = shl i64 %71, 3
  %73 = load i8*, i8** %41, align 16
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  br label %75

75:                                               ; preds = %36, %62
  %76 = phi i8* [ %37, %36 ], [ %74, %62 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = getelementptr inbounds i8, i8* %76, i64 4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 acquire, align 2
  %81 = lshr i16 %80, 2
  %82 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %83 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %82, i64 0, i32 0
  %84 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %83, align 8
  %85 = zext i16 %81 to i64
  %86 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %84, i64 %85
  %87 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %86, align 8
  %88 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %87, i64 0, i32 0
  %89 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %88, align 8
  %90 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %91 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %91, i64 5
  %93 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, align 8
  tail call void %93(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %77, void (%"class.blink::Visitor"*, i8*)* %89) #13
  %94 = load i64, i64* %19, align 8
  br label %95

95:                                               ; preds = %18, %75
  %96 = phi i64 [ %21, %18 ], [ %94, %75 ]
  %97 = add i64 %96, -1
  store i64 %97, i64* %19, align 8
  br label %98

98:                                               ; preds = %1, %11, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink26SVGAttributeHashTranslator7GetHashERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2, align 8
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %100, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::StringImpl"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = bitcast %"class.WTF::StringImpl"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 65535
  %20 = add nuw nsw i32 %19, -1640531527
  %21 = shl i32 %20, 16
  %22 = lshr i64 %17, 5
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 134215680
  %25 = xor i32 %24, %20
  %26 = xor i32 %25, %21
  %27 = lshr i32 %26, 11
  %28 = lshr i64 %17, 32
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 65535
  %31 = add i32 %26, %30
  %32 = add i32 %31, %27
  %33 = shl i32 %32, 16
  %34 = lshr i64 %17, 37
  %35 = trunc i64 %34 to i32
  %36 = and i32 %35, 134215680
  %37 = xor i32 %32, %36
  %38 = xor i32 %37, %33
  %39 = lshr i32 %38, 11
  %40 = trunc i64 %13 to i32
  %41 = and i32 %40, 65535
  %42 = add i32 %39, %38
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 16
  %45 = lshr i64 %13, 5
  %46 = trunc i64 %45 to i32
  %47 = and i32 %46, 134215680
  %48 = xor i32 %43, %47
  %49 = xor i32 %48, %44
  %50 = lshr i32 %49, 11
  %51 = lshr i64 %13, 32
  %52 = trunc i64 %51 to i32
  %53 = and i32 %52, 65535
  %54 = add i32 %49, %53
  %55 = add i32 %54, %50
  %56 = shl i32 %55, 16
  %57 = lshr i64 %13, 37
  %58 = trunc i64 %57 to i32
  %59 = and i32 %58, 134215680
  %60 = xor i32 %55, %59
  %61 = xor i32 %60, %56
  %62 = lshr i32 %61, 11
  %63 = trunc i64 %16 to i32
  %64 = and i32 %63, 65535
  %65 = add i32 %61, %64
  %66 = add i32 %65, %62
  %67 = shl i32 %66, 16
  %68 = lshr i64 %16, 5
  %69 = trunc i64 %68 to i32
  %70 = and i32 %69, 134215680
  %71 = xor i32 %66, %70
  %72 = xor i32 %71, %67
  %73 = lshr i32 %72, 11
  %74 = lshr i64 %16, 32
  %75 = trunc i64 %74 to i32
  %76 = and i32 %75, 65535
  %77 = add i32 %72, %76
  %78 = add i32 %77, %73
  %79 = shl i32 %78, 16
  %80 = lshr i64 %16, 37
  %81 = trunc i64 %80 to i32
  %82 = and i32 %81, 134215680
  %83 = xor i32 %78, %82
  %84 = xor i32 %83, %79
  %85 = lshr i32 %84, 11
  %86 = add i32 %85, %84
  %87 = shl i32 %86, 3
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 5
  %90 = add i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 15
  %94 = add i32 %93, %92
  %95 = shl i32 %94, 10
  %96 = xor i32 %95, %94
  %97 = and i32 %96, 16777215
  %98 = icmp eq i32 %97, 0
  %99 = select i1 %98, i32 8388608, i32 %97
  br label %111

100:                                              ; preds = %1
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, 16777215
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %100
  %106 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %3) #13
  %107 = load i32, i32* %101, align 4
  %108 = and i32 %106, 16777215
  %109 = and i32 %107, -16777216
  %110 = or i32 %109, %108
  store i32 %110, i32* %101, align 4
  br label %111

111:                                              ; preds = %105, %100, %10
  %112 = phi i32 [ %99, %10 ], [ %103, %100 ], [ %108, %105 ]
  ret i32 %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_(%"class.WTF::HashTable.56"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = icmp eq %"class.blink::QualifiedName"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.56", %"class.WTF::HashTable.56"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #13
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %30, %34 ], [ %66, %59 ]
  %51 = phi %"class.blink::QualifiedName"* [ %27, %34 ], [ %64, %59 ]
  %52 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %53 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %54 = bitcast %"class.blink::QualifiedName"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp ne i8* %55, inttoptr (i64 -1 to i8*)
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %50, %35
  %58 = and i1 %57, %56
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %53, 0
  %61 = select i1 %60, i64 %48, i64 %53
  %62 = add i64 %61, %52
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %63
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"class.blink::QualifiedName"* [ null, %2 ], [ null, %23 ], [ %51, %49 ], [ null, %59 ]
  %70 = icmp ne %"class.blink::QualifiedName"* %69, null
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.31"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.40"*, %"class.blink::SVGElement"** dereferenceable(8), %"class.blink::SVGElement"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %4, align 8
  %6 = icmp eq %"class.blink::Member.31"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.40"* %0, %"class.blink::Member.31"* null)
  %9 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.31"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SVGElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %40, align 8
  %42 = icmp eq %"class.blink::SVGElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SVGElement"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SVGElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.31"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.31"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::SVGElement"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::SVGElement"* %59, inttoptr (i64 -1 to %"class.blink::SVGElement"*)
  %67 = select i1 %66, %"class.blink::Member.31"* %60, %"class.blink::Member.31"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %73, align 8
  %75 = icmp eq %"class.blink::SVGElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.31"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.31"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.31"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %89 = ptrtoint %"class.blink::SVGElement"* %88 to i64
  %90 = bitcast %"class.blink::Member.31"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::SVGElement"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #13
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.31"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #13
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.40"* %0, %"class.blink::Member.31"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.31"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.31"*, i8 } undef, %"class.blink::Member.31"* %117, 0
  %119 = insertvalue { %"class.blink::Member.31"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.31"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.40"*, %"class.blink::Member.31"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.40"* %0, i32 %35, %"class.blink::Member.31"* %1, i8* nonnull dereferenceable(1) %4) #13
  %37 = load i8, i8* %4, align 1, !range !14
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.2113"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #13
  %43 = bitcast %"class.blink::HeapHashTableBacking.2113"* %42 to %"class.blink::Member.31"*
  %44 = call %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.40"* %0, %"class.blink::Member.31"* %43, i32 %40, %"class.blink::Member.31"* %1) #13
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.31"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.31"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.40"*, i32, %"class.blink::Member.31"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !14
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %31, align 8
  %33 = icmp eq %"class.blink::Member.31"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.31"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #13
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.2113"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #13
  %45 = bitcast %"class.blink::HeapHashTableBacking.2113"* %44 to %"class.blink::Member.31"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.31"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.31"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.31"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.31"* %61, %"class.blink::Member.31"* %55
  %63 = bitcast %"class.blink::Member.31"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.31"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.31"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.40"* %0 to %"class.blink::HeapHashTableBacking.2113"**
  store %"class.blink::HeapHashTableBacking.2113"* %44, %"class.blink::HeapHashTableBacking.2113"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.2113", %"class.blink::HeapHashTableBacking.2113"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #13
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.31"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.40"* %0, %"class.blink::Member.31"* %42, i32 %1, %"class.blink::Member.31"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.31"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.31"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.31"* %87, %"class.blink::Member.31"* %82
  %89 = bitcast %"class.blink::Member.31"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.31"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.31"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.31"* %99, %"class.blink::Member.31"* %88
  %101 = bitcast %"class.blink::Member.31"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.31"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.31"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.31"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.40"*, %"class.blink::Member.31"*, i32, %"class.blink::Member.31"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.31"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.31"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.31"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #13
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.40"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.31"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #13
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.31"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.31"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #13
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.31"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.31"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.31"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.31"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.31"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %70, align 8
  %72 = icmp eq %"class.blink::SVGElement"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::SVGElement"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.31"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.31"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.31"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.31"* %93, null
  %95 = ptrtoint %"class.blink::Member.31"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::SVGElement"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::SVGElement"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::SVGElement"* %99, inttoptr (i64 -1 to %"class.blink::SVGElement"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.31"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %113, align 8
  %115 = icmp eq %"class.blink::SVGElement"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.31"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.31"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.31"* %118, %"class.blink::Member.31"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.31"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.31"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.2113"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([346 x i8], [346 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_10SVGElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #13
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking.2113"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking.2113"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.31"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #13
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.31"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #13
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #13
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.31"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.40"*, %"class.blink::SVGElement"** dereferenceable(8), %"class.blink::SVGElement"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %4, align 8
  %6 = icmp eq %"class.blink::Member.31"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.40"* %0, %"class.blink::Member.31"* null)
  %9 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.31"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SVGElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %40, align 8
  %42 = icmp eq %"class.blink::SVGElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SVGElement"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SVGElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.31"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.31"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::SVGElement"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::SVGElement"* %59, inttoptr (i64 -1 to %"class.blink::SVGElement"*)
  %67 = select i1 %66, %"class.blink::Member.31"* %60, %"class.blink::Member.31"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %73, align 8
  %75 = icmp eq %"class.blink::SVGElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.31"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.31"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.31"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %89 = ptrtoint %"class.blink::SVGElement"* %88 to i64
  %90 = bitcast %"class.blink::Member.31"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::SVGElement"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #13
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.31"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #13
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.40"* %0, %"class.blink::Member.31"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.31"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.31"*, i8 } undef, %"class.blink::Member.31"* %117, 0
  %119 = insertvalue { %"class.blink::Member.31"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.31"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #13
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #13
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSE_15TracePersistentEPNS_7VisitorEEEE10TrampolineESG_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapHashSet.36"**
  %5 = load %"class.blink::HeapHashSet.36"*, %"class.blink::HeapHashSet.36"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #13
  %7 = icmp eq %"class.blink::HeapHashSet.36"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapHashSet.36"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_10SVGElementEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #13
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10SVGElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1917"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %8, align 8
  %10 = icmp eq %"class.blink::Member.31"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10SVGElementEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1917"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %8, align 8
  %26 = icmp eq %"class.blink::Member.31"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.31"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !14
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10SVGElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1917"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10SVGElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1917"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1917"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1917"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10SVGElementEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.31"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.31"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !15

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1917"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.1917"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.1917"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10SVGElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.20, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10SVGElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #13
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.31"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.31"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10SVGElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.31"* @_ZN3WTF6VectorIN5blink6MemberINS1_10SVGElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1917"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.1917", %"class.WTF::Vector.1917"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.31"*, %"class.blink::Member.31"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %24, i64 %25
  ret %"class.blink::Member.31"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.40"*, %"class.blink::Member.31"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.31"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.40", %"class.WTF::HashTable.40"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #13
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #13
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !14
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking.2113"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10SVGElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #13
  %46 = bitcast %"class.blink::HeapHashTableBacking.2113"* %45 to %"class.blink::Member.31"*
  %47 = tail call %"class.blink::Member.31"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10SVGElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.40"* %0, %"class.blink::Member.31"* %46, i32 %43, %"class.blink::Member.31"* null) #13
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17SVGAnimatedStringEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGAnimatedString"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGAnimatedString"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGAnimatedString"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGAnimatedString"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGAnimatedString"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGAnimatedString"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGAnimatedString"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGAnimatedString"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGAnimatedString"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!5 = distinct !{!5, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!6 = distinct !{!6, !7, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!10 = distinct !{!10, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!11 = distinct !{!11, !12, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!13 = !{!"branch_weights", i32 1, i32 1048575}
!14 = !{i8 0, i8 2}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = distinct !{!19, !17}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS2_30AnimatedPropertyTypeHashTraitsEE10EmptyValueEv: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS2_30AnimatedPropertyTypeHashTraitsEE10EmptyValueEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS2_30AnimatedPropertyTypeHashTraitsEE10EmptyValueEv: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS2_30AnimatedPropertyTypeHashTraitsEE10EmptyValueEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_23SVGAnimatedPropertyBaseEEEEEE10EmptyValueEv: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_23SVGAnimatedPropertyBaseEEEEEE10EmptyValueEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_23SVGAnimatedPropertyBaseEEEEEE10EmptyValueEv: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_23SVGAnimatedPropertyBaseEEEEEE10EmptyValueEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_23SVGAnimatedPropertyBaseEEEEEE10EmptyValueEv: argument 0"}
!37 = distinct !{!37, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_23SVGAnimatedPropertyBaseEEEEEE10EmptyValueEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_23SVGAnimatedPropertyBaseEEEEEE10EmptyValueEv: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_23SVGAnimatedPropertyBaseEEEEEE10EmptyValueEv"}
!41 = !{i32 24, i32 33}
