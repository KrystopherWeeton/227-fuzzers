; ModuleID = '../../net/third_party/quiche/src/spdy/core/hpack/hpack_output_stream.cc'
source_filename = "../../net/third_party/quiche/src/spdy/core/hpack/hpack_output_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.spdy::HpackOutputStream" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN4spdy17HpackOutputStreamC1Ev = hidden unnamed_addr alias void (%"class.spdy::HpackOutputStream"*), void (%"class.spdy::HpackOutputStream"*)* @_ZN4spdy17HpackOutputStreamC2Ev
@_ZN4spdy17HpackOutputStreamD1Ev = hidden unnamed_addr alias void (%"class.spdy::HpackOutputStream"*), void (%"class.spdy::HpackOutputStream"*)* @_ZN4spdy17HpackOutputStreamD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy17HpackOutputStreamC2Ev(%"class.spdy::HpackOutputStream"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy17HpackOutputStreamD2Ev(%"class.spdy::HpackOutputStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #7
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy17HpackOutputStream10AppendBitsEhm(%"class.spdy::HpackOutputStream"*, i8 zeroext, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %2
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %10 = zext i8 %1 to i32
  %11 = trunc i64 %2 to i32
  %12 = sub i32 8, %11
  %13 = shl i32 %10, %12
  %14 = trunc i32 %13 to i8
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %9, i64 1, i8 signext %14) #8
  br label %71

16:                                               ; preds = %3
  %17 = icmp ult i64 %6, 9
  %18 = zext i8 %1 to i32
  %19 = trunc i64 %6 to i32
  br i1 %17, label %20, label %43

20:                                               ; preds = %16
  %21 = sub i32 8, %19
  %22 = shl i32 %18, %21
  %23 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  br label %35

32:                                               ; preds = %20
  %33 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %34 = zext i8 %25 to i64
  br label %35

35:                                               ; preds = %27, %32
  %36 = phi i8* [ %29, %27 ], [ %33, %32 ]
  %37 = phi i64 [ %31, %27 ], [ %34, %32 ]
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = getelementptr inbounds i8, i8* %38, i64 -1
  %40 = load i8, i8* %39, align 1
  %41 = trunc i32 %22 to i8
  %42 = or i8 %40, %41
  store i8 %42, i8* %39, align 1
  br label %71

43:                                               ; preds = %16
  %44 = add i32 %19, -8
  %45 = lshr i32 %18, %44
  %46 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %47 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  br label %59

56:                                               ; preds = %43
  %57 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %58 = zext i8 %49 to i64
  br label %59

59:                                               ; preds = %51, %56
  %60 = phi i8* [ %53, %51 ], [ %57, %56 ]
  %61 = phi i64 [ %55, %51 ], [ %58, %56 ]
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = getelementptr inbounds i8, i8* %62, i64 -1
  %64 = load i8, i8* %63, align 1
  %65 = trunc i32 %45 to i8
  %66 = or i8 %64, %65
  store i8 %66, i8* %63, align 1
  %67 = sub i32 16, %19
  %68 = shl i32 %18, %67
  %69 = trunc i32 %68 to i8
  %70 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %46, i64 1, i8 signext %69) #8
  br label %71

71:                                               ; preds = %35, %59, %8
  %72 = and i64 %6, 7
  store i64 %72, i64* %4, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy17HpackOutputStream12AppendPrefixENS_11HpackPrefixE(%"class.spdy::HpackOutputStream"*, i8, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %2
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %10 = zext i8 %1 to i32
  %11 = trunc i64 %2 to i32
  %12 = sub i32 8, %11
  %13 = shl i32 %10, %12
  %14 = trunc i32 %13 to i8
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %9, i64 1, i8 signext %14) #8
  br label %71

16:                                               ; preds = %3
  %17 = icmp ult i64 %6, 9
  %18 = zext i8 %1 to i32
  %19 = trunc i64 %6 to i32
  br i1 %17, label %20, label %43

20:                                               ; preds = %16
  %21 = sub i32 8, %19
  %22 = shl i32 %18, %21
  %23 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  br label %35

32:                                               ; preds = %20
  %33 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %34 = zext i8 %25 to i64
  br label %35

35:                                               ; preds = %32, %27
  %36 = phi i8* [ %29, %27 ], [ %33, %32 ]
  %37 = phi i64 [ %31, %27 ], [ %34, %32 ]
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = getelementptr inbounds i8, i8* %38, i64 -1
  %40 = load i8, i8* %39, align 1
  %41 = trunc i32 %22 to i8
  %42 = or i8 %40, %41
  store i8 %42, i8* %39, align 1
  br label %71

43:                                               ; preds = %16
  %44 = add i32 %19, -8
  %45 = lshr i32 %18, %44
  %46 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %47 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  br label %59

56:                                               ; preds = %43
  %57 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %58 = zext i8 %49 to i64
  br label %59

59:                                               ; preds = %56, %51
  %60 = phi i8* [ %53, %51 ], [ %57, %56 ]
  %61 = phi i64 [ %55, %51 ], [ %58, %56 ]
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = getelementptr inbounds i8, i8* %62, i64 -1
  %64 = load i8, i8* %63, align 1
  %65 = trunc i32 %45 to i8
  %66 = or i8 %64, %65
  store i8 %66, i8* %63, align 1
  %67 = sub i32 16, %19
  %68 = shl i32 %18, %67
  %69 = trunc i32 %68 to i8
  %70 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %46, i64 1, i8 signext %69) #8
  br label %71

71:                                               ; preds = %8, %35, %59
  %72 = and i64 %6, 7
  store i64 %72, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy17HpackOutputStream11AppendBytesEN4absl11string_viewE(%"class.spdy::HpackOutputStream"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %4, i8* %1, i64 %2) #8
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy17HpackOutputStream12AppendUint32Ej(%"class.spdy::HpackOutputStream"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = sub i32 8, %5
  %7 = shl nsw i32 -1, %6
  %8 = trunc i32 %7 to i8
  %9 = xor i8 %8, -1
  %10 = zext i8 %9 to i32
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %41

12:                                               ; preds = %2
  %13 = trunc i32 %1 to i8
  %14 = icmp eq i64 %4, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %17 = and i32 %1, 255
  %18 = shl i32 %17, %5
  %19 = trunc i32 %18 to i8
  %20 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %16, i64 1, i8 signext %19) #8
  br label %147

21:                                               ; preds = %12
  %22 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %34

31:                                               ; preds = %21
  %32 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %33 = zext i8 %24 to i64
  br label %34

34:                                               ; preds = %31, %26
  %35 = phi i8* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i64 [ %30, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 -1
  %39 = load i8, i8* %38, align 1
  %40 = or i8 %39, %13
  store i8 %40, i8* %38, align 1
  br label %147

41:                                               ; preds = %2
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %45 = shl i32 %10, %5
  %46 = trunc i32 %45 to i8
  %47 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %44, i64 1, i8 signext %46) #8
  br label %68

48:                                               ; preds = %41
  %49 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  br label %61

58:                                               ; preds = %48
  %59 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %60 = zext i8 %51 to i64
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i8* [ %55, %53 ], [ %59, %58 ]
  %63 = phi i64 [ %57, %53 ], [ %60, %58 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = getelementptr inbounds i8, i8* %64, i64 -1
  %66 = load i8, i8* %65, align 1
  %67 = or i8 %66, %9
  store i8 %67, i8* %65, align 1
  br label %68

68:                                               ; preds = %43, %61
  store i64 0, i64* %3, align 8
  %69 = sub i32 %1, %10
  %70 = icmp ugt i32 %69, 127
  br i1 %70, label %71, label %84

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  br label %73

73:                                               ; preds = %71, %73
  %74 = phi i32 [ %69, %71 ], [ %78, %73 ]
  %75 = trunc i32 %74 to i8
  %76 = or i8 %75, -128
  %77 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %72, i64 1, i8 signext %76) #8
  %78 = lshr i32 %74, 7
  %79 = icmp ugt i32 %74, 16383
  br i1 %79, label %73, label %80

80:                                               ; preds = %73
  %81 = load i64, i64* %3, align 8
  %82 = add i64 %81, 8
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %68, %80
  %85 = phi i32 [ %78, %80 ], [ %69, %68 ]
  %86 = trunc i32 %85 to i8
  %87 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %88 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %87, i64 1, i8 signext %86) #8
  br label %144

89:                                               ; preds = %80
  %90 = icmp ult i64 %82, 9
  %91 = and i32 %78, 255
  %92 = trunc i64 %82 to i32
  br i1 %90, label %93, label %116

93:                                               ; preds = %89
  %94 = sub i32 8, %92
  %95 = shl i32 %91, %94
  %96 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %105

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  br label %108

105:                                              ; preds = %93
  %106 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %107 = zext i8 %98 to i64
  br label %108

108:                                              ; preds = %105, %100
  %109 = phi i8* [ %102, %100 ], [ %106, %105 ]
  %110 = phi i64 [ %104, %100 ], [ %107, %105 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 %110
  %112 = getelementptr inbounds i8, i8* %111, i64 -1
  %113 = load i8, i8* %112, align 1
  %114 = trunc i32 %95 to i8
  %115 = or i8 %113, %114
  store i8 %115, i8* %112, align 1
  br label %144

116:                                              ; preds = %89
  %117 = add i32 %92, -8
  %118 = lshr i32 %91, %117
  %119 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %120 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %129

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = load i64, i64* %127, align 8
  br label %132

129:                                              ; preds = %116
  %130 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %131 = zext i8 %122 to i64
  br label %132

132:                                              ; preds = %129, %124
  %133 = phi i8* [ %126, %124 ], [ %130, %129 ]
  %134 = phi i64 [ %128, %124 ], [ %131, %129 ]
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  %136 = getelementptr inbounds i8, i8* %135, i64 -1
  %137 = load i8, i8* %136, align 1
  %138 = trunc i32 %118 to i8
  %139 = or i8 %137, %138
  store i8 %139, i8* %136, align 1
  %140 = sub i32 16, %92
  %141 = shl i32 %91, %140
  %142 = trunc i32 %141 to i8
  %143 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %119, i64 1, i8 signext %142) #8
  br label %144

144:                                              ; preds = %84, %108, %132
  %145 = phi i64 [ 8, %84 ], [ %82, %108 ], [ %82, %132 ]
  %146 = and i64 %145, 7
  br label %147

147:                                              ; preds = %34, %15, %144
  %148 = phi i64 [ %146, %144 ], [ 0, %15 ], [ 0, %34 ]
  store i64 %148, i64* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.std::__1::basic_string"* @_ZN4spdy17HpackOutputStream13MutableStringEv(%"class.spdy::HpackOutputStream"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy17HpackOutputStream10TakeStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.spdy::HpackOutputStream"* nocapture, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.spdy::HpackOutputStream"* %0 to <2 x i64>*
  %4 = load <2 x i64>, <2 x i64>* %3, align 8
  %5 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #8
  %9 = bitcast %"class.std::__1::basic_string"* %1 to <2 x i64>*
  store <2 x i64> %4, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %6, i64* %10, align 8
  %11 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  store i8 0, i8* %18, align 1
  store i64 0, i64* %16, align 8
  br label %20

19:                                               ; preds = %2
  store i8 0, i8* %7, align 1
  store i8 0, i8* %12, align 1
  br label %20

20:                                               ; preds = %15, %19
  %21 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 1
  store i64 0, i64* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4spdy17HpackOutputStream17BoundedTakeStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.spdy::HpackOutputStream"*, i64, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0
  %6 = bitcast %"class.spdy::HpackOutputStream"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %3
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = icmp ugt i64 %16, %1
  br i1 %17, label %18, label %67

18:                                               ; preds = %15
  %19 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  br i1 %9, label %24, label %29

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  br label %32

29:                                               ; preds = %18
  %30 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %31 = zext i8 %8 to i64
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi i8* [ %26, %24 ], [ %30, %29 ]
  %34 = phi i64 [ %28, %24 ], [ %31, %29 ]
  %35 = getelementptr inbounds i8, i8* %33, i64 %1
  %36 = sub i64 %34, %1
  %37 = icmp ugt i64 %36, -17
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #9
  unreachable

40:                                               ; preds = %32
  %41 = icmp ult i64 %36, 23
  br i1 %41, label %47, label %42

42:                                               ; preds = %40
  %43 = add nuw i64 %36, 16
  %44 = and i64 %43, -16
  %45 = tail call i8* @_Znwm(i64 %44) #7
  store i8* %45, i8** %20, align 8
  %46 = or i64 %44, -9223372036854775808
  store i64 %46, i64* %22, align 8
  store i64 %36, i64* %21, align 8
  br label %52

47:                                               ; preds = %40
  %48 = trunc i64 %36 to i8
  %49 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 %48, i8* %50, align 1
  %51 = icmp eq i64 %36, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %47, %42
  %53 = phi i8* [ %45, %42 ], [ %19, %47 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %53, i8* align 1 %35, i64 %36, i1 false) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = phi i8* [ %19, %47 ], [ %53, %52 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 %36
  store i8 0, i8* %56, align 1
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %5, i64 %1, i8 signext 0) #8
  %57 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #7
  br label %64

64:                                               ; preds = %54, %61
  %65 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %66 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %19, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  br label %85

67:                                               ; preds = %15
  %68 = bitcast %"class.spdy::HpackOutputStream"* %0 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8
  %70 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.spdy::HpackOutputStream"* %0 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #8
  %74 = bitcast %"class.std::__1::basic_string"* %2 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %71, i64* %75, align 8
  %76 = load i8, i8* %7, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  store i8 0, i8* %81, align 1
  store i64 0, i64* %79, align 8
  br label %83

82:                                               ; preds = %67
  store i8 0, i8* %72, align 1
  store i8 0, i8* %7, align 1
  br label %83

83:                                               ; preds = %78, %82
  %84 = getelementptr inbounds %"class.spdy::HpackOutputStream", %"class.spdy::HpackOutputStream"* %0, i64 0, i32 1
  store i64 0, i64* %84, align 8
  br label %85

85:                                               ; preds = %83, %64
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4spdy17HpackOutputStream19EstimateMemoryUsageEv(%"class.spdy::HpackOutputStream"* nocapture readnone) local_unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
