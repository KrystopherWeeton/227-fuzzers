; ModuleID = '../../third_party/blink/renderer/core/html/media/media_fragment_uri_parser.cc'
source_filename = "../../third_party/blink/renderer/core/html/media/media_fragment_uri_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::MediaFragmentURIParser" = type { %"class.blink::KURL", i32, double, double, %"class.WTF::Vector" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.5, i32, i8, i8, [2 x i8] }>
%union.anon.5 = type { %"class.WTF::Vector.6" }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8", [16 x i8] }
%"class.WTF::VectorBufferBase.8" = type { i8*, i32, i32 }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13", [16 x i8] }
%"class.WTF::VectorBufferBase.13" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorINSt3__14pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_EELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_EEEEmm = comdat any

@.str = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_EEEEPKcv = private unnamed_addr constant [237 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >]\00", align 1

@_ZN5blink22MediaFragmentURIParserC1ERKNS_4KURLE = hidden unnamed_addr alias void (%"class.blink::MediaFragmentURIParser"*, %"class.blink::KURL"*), void (%"class.blink::MediaFragmentURIParser"*, %"class.blink::KURL"*)* @_ZN5blink22MediaFragmentURIParserC2ERKNS_4KURLE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22MediaFragmentURIParserC2ERKNS_4KURLE(%"class.blink::MediaFragmentURIParser"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %3, %"class.blink::KURL"* dereferenceable(112) %1) #7
  %4 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 2
  %6 = bitcast double* %5 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 4
  %8 = bitcast %"class.WTF::Vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #7
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink22MediaFragmentURIParser9StartTimeEv(%"class.blink::MediaFragmentURIParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %2) #7
  br i1 %3, label %4, label %12

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @_ZN5blink22MediaFragmentURIParser17ParseTimeFragmentEv(%"class.blink::MediaFragmentURIParser"* %0)
  br label %9

9:                                                ; preds = %8, %4
  %10 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 2
  %11 = load double, double* %10, align 8
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi double [ %11, %9 ], [ 0x7FF8000000000000, %1 ]
  ret double %13
}

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22MediaFragmentURIParser17ParseTimeFragmentEv(%"class.blink::MediaFragmentURIParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  %4 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  tail call void @_ZN5blink22MediaFragmentURIParser14ParseFragmentsEv(%"class.blink::MediaFragmentURIParser"* %0)
  %9 = load i32, i32* %5, align 4
  br label %10

10:                                               ; preds = %8, %1
  %11 = phi i32 [ %9, %8 ], [ %6, %1 ]
  %12 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 1
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = zext i32 %11 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 %15
  %17 = icmp eq i32 %11, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %10
  %19 = bitcast double* %2 to i8*
  %20 = bitcast double* %3 to i8*
  %21 = bitcast double* %2 to i64*
  %22 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 2
  %23 = bitcast double* %22 to i64*
  %24 = bitcast double* %3 to i64*
  %25 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 3
  %26 = bitcast double* %25 to i64*
  br label %65

27:                                               ; preds = %103, %10
  %28 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %64, label %31

31:                                               ; preds = %27
  %32 = load i32, i32* %5, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %60, label %34

34:                                               ; preds = %31
  %35 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %36 = zext i32 %32 to i64
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 %36
  br label %38

38:                                               ; preds = %56, %34
  %39 = phi %"struct.std::__1::pair"* [ %57, %56 ], [ %35, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %39, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #8
  br label %48

48:                                               ; preds = %45, %38
  %49 = bitcast %"struct.std::__1::pair"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #8
  br label %56

56:                                               ; preds = %53, %48
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %39, i64 1
  %58 = icmp eq %"struct.std::__1::pair"* %57, %37
  br i1 %58, label %59, label %38

59:                                               ; preds = %56
  store i32 0, i32* %5, align 4
  br label %60

60:                                               ; preds = %59, %31
  %61 = bitcast %"class.WTF::Vector"* %4 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.WTF::Vector"* %4 to i64*
  store atomic i64 0, i64* %63 monotonic, align 8
  store i32 0, i32* %28, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %62) #7
  br label %64

64:                                               ; preds = %27, %60
  ret void

65:                                               ; preds = %18, %103
  %66 = phi %"struct.std::__1::pair"* [ %14, %18 ], [ %104, %103 ]
  %67 = bitcast %"struct.std::__1::pair"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = zext i8 %69 to i64
  %74 = select i1 %70, i64 %72, i64 %73
  %75 = icmp eq i64 %74, 1
  br i1 %75, label %76, label %103

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 0
  %78 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %77, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #7
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %103

80:                                               ; preds = %76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  store double 0x7FF8000000000000, double* %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  store double 0x7FF8000000000000, double* %3, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 1
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %91

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  br label %94

91:                                               ; preds = %80
  %92 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %93 = zext i8 %84 to i64
  br label %94

94:                                               ; preds = %86, %91
  %95 = phi i8* [ %88, %86 ], [ %92, %91 ]
  %96 = phi i64 [ %90, %86 ], [ %93, %91 ]
  %97 = trunc i64 %96 to i32
  %98 = call zeroext i1 @_ZN5blink22MediaFragmentURIParser16ParseNPTFragmentEPKcjRdS3_(%"class.blink::MediaFragmentURIParser"* %0, i8* %95, i32 %97, double* nonnull dereferenceable(8) %2, double* nonnull dereferenceable(8) %3)
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = load i64, i64* %21, align 8
  store i64 %100, i64* %23, align 8
  %101 = load i64, i64* %24, align 8
  store i64 %101, i64* %26, align 8
  store i32 2, i32* %12, align 8
  br label %102

102:                                              ; preds = %99, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  br label %103

103:                                              ; preds = %76, %65, %102
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 1
  %105 = icmp eq %"struct.std::__1::pair"* %104, %16
  br i1 %105, label %27, label %65
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink22MediaFragmentURIParser7EndTimeEv(%"class.blink::MediaFragmentURIParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %2) #7
  br i1 %3, label %4, label %12

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @_ZN5blink22MediaFragmentURIParser17ParseTimeFragmentEv(%"class.blink::MediaFragmentURIParser"* %0)
  br label %9

9:                                                ; preds = %8, %4
  %10 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 3
  %11 = load double, double* %10, align 8
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi double [ %11, %9 ], [ 0x7FF8000000000000, %1 ]
  ret double %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22MediaFragmentURIParser14ParseFragmentsEv(%"class.blink::MediaFragmentURIParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"* %9) #7
  br i1 %10, label %11, label %339

11:                                               ; preds = %1
  %12 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"* %9) #7
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %338, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %324, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.WTF::String"* %3 to i8*
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::String"* %4 to i8*
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %25 = bitcast %"class.WTF::String"* %5 to i8*
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::String"* %6 to i8*
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::String"* %5 to i64*
  %30 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %34 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 4
  %39 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.blink::MediaFragmentURIParser", %"class.blink::MediaFragmentURIParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %38, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::Vector"* %38 to i64*
  br label %43

43:                                               ; preds = %318, %20
  %44 = phi %"class.WTF::StringImpl"* [ %14, %20 ], [ %321, %318 ]
  %45 = phi i32 [ 0, %20 ], [ %319, %318 ]
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %88, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 1
  br i1 %51, label %68, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp ugt i32 %55, %45
  br i1 %56, label %57, label %88

57:                                               ; preds = %53
  %58 = bitcast %"class.WTF::StringImpl"* %52 to i8*
  %59 = zext i32 %45 to i64
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  %61 = sub i32 %55, %45
  %62 = zext i32 %61 to i64
  %63 = call i8* @memchr(i8* %60, i32 38, i64 %62) #9
  %64 = icmp eq i8* %63, null
  %65 = ptrtoint i8* %63 to i64
  %66 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %67 = sub i64 %65, %66
  br i1 %64, label %88, label %84

68:                                               ; preds = %47
  %69 = bitcast %"class.WTF::StringImpl"* %52 to i16*
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp ugt i32 %71, %45
  br i1 %72, label %73, label %88

73:                                               ; preds = %68
  %74 = zext i32 %45 to i64
  br label %75

75:                                               ; preds = %80, %73
  %76 = phi i64 [ %74, %73 ], [ %81, %80 ]
  %77 = getelementptr inbounds i16, i16* %69, i64 %76
  %78 = load i16, i16* %77, align 2
  %79 = icmp eq i16 %78, 38
  br i1 %79, label %84, label %80

80:                                               ; preds = %75
  %81 = add nuw nsw i64 %76, 1
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %71, %82
  br i1 %83, label %88, label %75

84:                                               ; preds = %75, %57
  %85 = phi i64 [ %67, %57 ], [ %76, %75 ]
  %86 = trunc i64 %85 to i32
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %88, label %89

88:                                               ; preds = %80, %57, %68, %53, %43, %84
  br label %89

89:                                               ; preds = %84, %88
  %90 = phi i32 [ %18, %88 ], [ %86, %84 ]
  br i1 %46, label %318, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 1
  br i1 %95, label %114, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ugt i32 %99, %45
  br i1 %100, label %101, label %318

101:                                              ; preds = %97
  %102 = bitcast %"class.WTF::StringImpl"* %96 to i8*
  %103 = zext i32 %45 to i64
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = sub i32 %99, %45
  %106 = zext i32 %105 to i64
  %107 = call i8* @memchr(i8* %104, i32 61, i64 %106) #9
  %108 = icmp eq i8* %107, null
  %109 = ptrtoint i8* %107 to i64
  %110 = ptrtoint %"class.WTF::StringImpl"* %96 to i64
  %111 = sub i64 %109, %110
  %112 = trunc i64 %111 to i32
  %113 = select i1 %108, i32 -1, i32 %112
  br label %132

114:                                              ; preds = %91
  %115 = bitcast %"class.WTF::StringImpl"* %96 to i16*
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp ugt i32 %117, %45
  br i1 %118, label %119, label %318

119:                                              ; preds = %114
  %120 = zext i32 %45 to i64
  br label %121

121:                                              ; preds = %126, %119
  %122 = phi i64 [ %120, %119 ], [ %127, %126 ]
  %123 = getelementptr inbounds i16, i16* %115, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp eq i16 %124, 61
  br i1 %125, label %130, label %126

126:                                              ; preds = %121
  %127 = add nuw nsw i64 %122, 1
  %128 = trunc i64 %127 to i32
  %129 = icmp eq i32 %117, %128
  br i1 %129, label %318, label %121

130:                                              ; preds = %121
  %131 = trunc i64 %122 to i32
  br label %132

132:                                              ; preds = %101, %130
  %133 = phi i32 [ %113, %101 ], [ %131, %130 ]
  %134 = icmp eq i32 %133, -1
  %135 = icmp ult i32 %90, %133
  %136 = or i1 %134, %135
  br i1 %136, label %318, label %137

137:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7
  %138 = sub i32 %133, %45
  %139 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %2, i32 %45, i32 %138) #7
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %24, align 8
  %140 = call %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* nonnull dereferenceable(8) %4, i32 1) #7
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %22, align 8
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #7
  br label %156

156:                                              ; preds = %137, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  %157 = icmp eq i32 %90, %133
  br i1 %157, label %197, label %158

158:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %159 = add nuw i32 %133, 1
  %160 = xor i32 %133, -1
  %161 = add i32 %90, %160
  %162 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %2, i32 %159, i32 %161) #7
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %28, align 8
  %163 = call %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* nonnull dereferenceable(8) %6, i32 1) #7
  %164 = ptrtoint %"class.WTF::StringImpl"* %163 to i64
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %164, i64* %29, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %158
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #7
  br label %180

180:                                              ; preds = %179, %176, %158
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #7
  br label %196

196:                                              ; preds = %180, %192, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %197

197:                                              ; preds = %156, %196
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %213, label %204

204:                                              ; preds = %200
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #7
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.WTF::String"* nonnull %3, i32 1) #7
  %205 = load i8*, i8** %31, align 8
  %206 = load i64, i64* %32, align 8
  %207 = load i64, i64* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #7
  %208 = lshr i64 %207, 56
  %209 = trunc i64 %208 to i8
  %210 = icmp slt i8 %209, 0
  %211 = select i1 %210, i64 %206, i64 %208
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %271, label %213

213:                                              ; preds = %197, %200, %204
  %214 = phi i64 [ %207, %204 ], [ 0, %200 ], [ 0, %197 ]
  %215 = phi i64 [ %206, %204 ], [ 0, %200 ], [ 0, %197 ]
  %216 = phi i8* [ %205, %204 ], [ null, %200 ], [ null, %197 ]
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %232, label %223

223:                                              ; preds = %219
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #7
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.WTF::String"* nonnull %5, i32 1) #7
  %224 = load i8*, i8** %35, align 8
  %225 = load i64, i64* %36, align 8
  %226 = load i64, i64* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #7
  %227 = lshr i64 %226, 56
  %228 = trunc i64 %227 to i8
  %229 = icmp slt i8 %228, 0
  %230 = select i1 %229, i64 %225, i64 %227
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %271, label %232

232:                                              ; preds = %213, %219, %223
  %233 = phi i64 [ %226, %223 ], [ 0, %219 ], [ 0, %213 ]
  %234 = phi i64 [ %225, %223 ], [ 0, %219 ], [ 0, %213 ]
  %235 = phi i8* [ %224, %223 ], [ null, %219 ], [ null, %213 ]
  %236 = load i32, i32* %39, align 4
  %237 = load i32, i32* %40, align 8
  %238 = icmp eq i32 %236, %237
  br i1 %238, label %239, label %259, !prof !2

239:                                              ; preds = %232
  %240 = add i32 %236, 1
  %241 = lshr i32 %236, 2
  %242 = add i32 %240, %241
  %243 = icmp ugt i32 %242, 4
  %244 = select i1 %243, i32 %242, i32 4
  %245 = icmp ugt i32 %244, %240
  %246 = select i1 %245, i32 %244, i32 %240
  %247 = icmp ult i32 %236, %246
  br i1 %247, label %248, label %259, !prof !3

248:                                              ; preds = %239
  %249 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %41, align 8
  %250 = icmp eq %"struct.std::__1::pair"* %249, null
  br i1 %250, label %251, label %258

251:                                              ; preds = %248
  %252 = zext i32 %246 to i64
  %253 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_EEEEmm(i64 %252) #7
  %254 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %253, i8* getelementptr inbounds ([237 x i8], [237 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_EEEEPKcv, i64 0, i64 0)) #7
  %255 = ptrtoint i8* %254 to i64
  store atomic i64 %255, i64* %42 monotonic, align 8
  %256 = udiv i64 %253, 48
  %257 = trunc i64 %256 to i32
  store i32 %257, i32* %40, align 8
  br label %259

258:                                              ; preds = %248
  call void @_ZN3WTF6VectorINSt3__14pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_EELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %38, i32 %246) #7
  br label %259

259:                                              ; preds = %232, %239, %251, %258
  %260 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %41, align 8
  %261 = load i32, i32* %39, align 4
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %260, i64 %262, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %216, i8** %263, align 8
  %264 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %260, i64 %262, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %215, i64* %264, align 8
  %265 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %260, i64 %262, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %214, i64* %265, align 8
  %266 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %260, i64 %262, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %235, i8** %266, align 8
  %267 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %260, i64 %262, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %234, i64* %267, align 8
  %268 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %260, i64 %262, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %233, i64* %268, align 8
  %269 = load i32, i32* %39, align 4
  %270 = add i32 %269, 1
  store i32 %270, i32* %39, align 4
  br label %271

271:                                              ; preds = %204, %223, %259
  %272 = phi i8* [ %216, %223 ], [ null, %259 ], [ %205, %204 ]
  %273 = phi i64 [ %214, %223 ], [ 0, %259 ], [ %207, %204 ]
  %274 = phi i8* [ %224, %223 ], [ null, %259 ], [ null, %204 ]
  %275 = phi i64 [ %226, %223 ], [ 0, %259 ], [ 0, %204 ]
  %276 = lshr i64 %275, 56
  %277 = trunc i64 %276 to i8
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %271
  call void @_ZdlPv(i8* %274) #8
  br label %280

280:                                              ; preds = %271, %279
  %281 = lshr i64 %273, 56
  %282 = trunc i64 %281 to i8
  %283 = icmp slt i8 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %280
  call void @_ZdlPv(i8* %272) #8
  br label %285

285:                                              ; preds = %280, %284
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %301, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #7
  br label %301

301:                                              ; preds = %285, %297, %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #7
  br label %317

317:                                              ; preds = %301, %313, %316
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %318

318:                                              ; preds = %126, %114, %97, %89, %132, %317
  %319 = add i32 %90, 1
  %320 = icmp ult i32 %319, %18
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  br i1 %320, label %43, label %322

322:                                              ; preds = %318
  %323 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %323, label %338, label %324

324:                                              ; preds = %16, %322
  %325 = phi %"class.WTF::StringImpl"* [ %321, %322 ], [ %14, %16 ]
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  br i1 %329, label %332, label %334

332:                                              ; preds = %324
  %333 = add i32 %331, -1
  store i32 %333, i32* %330, align 4
  br label %334

334:                                              ; preds = %332, %324
  %335 = phi i32 [ %333, %332 ], [ %331, %324 ]
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %325) #7
  br label %338

338:                                              ; preds = %11, %322, %334, %337
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  br label %339

339:                                              ; preds = %1, %338
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22MediaFragmentURIParser16ParseNPTFragmentEPKcjRdS3_(%"class.blink::MediaFragmentURIParser"* nocapture readnone, i8* nocapture readonly, i32, double* nocapture dereferenceable(8), double* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  store i32 0, i32* %6, align 4
  %8 = icmp ugt i32 %2, 3
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = load i8, i8* %1, align 1
  %11 = icmp eq i8 %10, 110
  br i1 %11, label %12, label %25

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, i8* %1, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 112
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds i8, i8* %1, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 116
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = getelementptr inbounds i8, i8* %1, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 58
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  store i32 4, i32* %6, align 4
  br label %25

25:                                               ; preds = %24, %20, %16, %12, %9, %5
  %26 = phi i32 [ 4, %24 ], [ 0, %20 ], [ 0, %16 ], [ 0, %12 ], [ 0, %9 ], [ 0, %5 ]
  %27 = icmp eq i32 %26, %2
  br i1 %27, label %58, label %28

28:                                               ; preds = %25
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds i8, i8* %1, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 44
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  store double 0.000000e+00, double* %3, align 8
  br label %38

34:                                               ; preds = %28
  %35 = call zeroext i1 @_ZN5blink22MediaFragmentURIParser12ParseNPTTimeEPKcjRjRd(%"class.blink::MediaFragmentURIParser"* undef, i8* %1, i32 %2, i32* nonnull dereferenceable(4) %6, double* dereferenceable(8) %3)
  br i1 %35, label %36, label %58

36:                                               ; preds = %34
  %37 = load i32, i32* %6, align 4
  br label %38

38:                                               ; preds = %36, %33
  %39 = phi i32 [ %37, %36 ], [ %26, %33 ]
  %40 = icmp eq i32 %39, %2
  br i1 %40, label %58, label %41

41:                                               ; preds = %38
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds i8, i8* %1, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 44
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = add i32 %39, 1
  store i32 %47, i32* %6, align 4
  %48 = icmp eq i32 %47, %2
  br i1 %48, label %58, label %49

49:                                               ; preds = %46
  %50 = call zeroext i1 @_ZN5blink22MediaFragmentURIParser12ParseNPTTimeEPKcjRjRd(%"class.blink::MediaFragmentURIParser"* undef, i8* %1, i32 %2, i32* nonnull dereferenceable(4) %6, double* dereferenceable(8) %4)
  %51 = load i32, i32* %6, align 4
  %52 = icmp eq i32 %51, %2
  %53 = and i1 %50, %52
  br i1 %53, label %54, label %58

54:                                               ; preds = %49
  %55 = load double, double* %3, align 8
  %56 = load double, double* %4, align 8
  %57 = fcmp ult double %55, %56
  br label %58

58:                                               ; preds = %54, %49, %46, %41, %38, %34, %25
  %59 = phi i1 [ false, %25 ], [ false, %34 ], [ true, %38 ], [ false, %41 ], [ false, %46 ], [ false, %49 ], [ %57, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22MediaFragmentURIParser12ParseNPTTimeEPKcjRjRd(%"class.blink::MediaFragmentURIParser"* nocapture readnone, i8* nocapture readonly, i32, i32* nocapture dereferenceable(4), double* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringBuilder", align 8
  %8 = alloca %"class.WTF::StringBuilder", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = load i32, i32* %3, align 4
  %15 = icmp ult i32 %14, %2
  br i1 %15, label %16, label %346

16:                                               ; preds = %5
  %17 = zext i32 %14 to i64
  %18 = getelementptr inbounds i8, i8* %1, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = add i8 %19, -48
  %21 = icmp ult i8 %20, 10
  br i1 %21, label %22, label %346

22:                                               ; preds = %16
  %23 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %24, align 8
  %25 = bitcast %"class.WTF::StringBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %25) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 48, i1 false) #7
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1
  %28 = bitcast %union.anon.5* %27 to i8*
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 2
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 3
  store i8 1, i8* %30, align 4
  %31 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 4
  store i8 0, i8* %31, align 1
  %32 = add i8 %19, -48
  %33 = icmp ult i8 %32, 10
  br i1 %33, label %34, label %48

34:                                               ; preds = %22, %42
  %35 = phi i32 [ %40, %42 ], [ %14, %22 ]
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = add nuw i32 %35, 1
  store i32 %38, i32* %3, align 4
  %39 = load i8, i8* %37, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %8, i8 zeroext %39) #7
  %40 = load i32, i32* %3, align 4
  %41 = icmp ult i32 %40, %2
  br i1 %41, label %42, label %48

42:                                               ; preds = %34
  %43 = zext i32 %40 to i64
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = add i8 %45, -48
  %47 = icmp ult i8 %46, 10
  br i1 %47, label %34, label %48

48:                                               ; preds = %34, %42, %22
  %49 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %8) #7
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %8) #7
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #7
  br label %65

65:                                               ; preds = %48, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %25) #7
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %24, align 8
  %66 = call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* nonnull %9, i8* null) #7
  %67 = load i32, i32* %3, align 4
  %68 = icmp ult i32 %67, %2
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = zext i32 %67 to i64
  %71 = getelementptr inbounds i8, i8* %1, i64 %70
  %72 = load i8, i8* %71, align 1
  switch i8 %72, label %100 [
    i8 44, label %73
    i8 46, label %75
  ]

73:                                               ; preds = %69, %65
  %74 = sitofp i32 %66 to double
  store double %74, double* %4, align 8
  br label %327

75:                                               ; preds = %69
  %76 = icmp eq i32 %67, %2
  br i1 %76, label %327, label %77

77:                                               ; preds = %75
  %78 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #7
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %80 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL15CollectFractionEPKcjRj(i8* %1, i32 %2, i32* dereferenceable(4) %3)
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %79, align 8
  %81 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %10, i8* null) #7
  %82 = sitofp i32 %66 to double
  %83 = fadd double %81, %82
  store double %83, double* %4, align 8
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #7
  br label %99

99:                                               ; preds = %77, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #7
  br label %327

100:                                              ; preds = %69
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %344, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp ult i32 %105, 2
  br i1 %106, label %327, label %107

107:                                              ; preds = %103
  %108 = icmp eq i32 %105, 2
  %109 = add nuw i32 %67, 1
  store i32 %109, i32* %3, align 4
  %110 = load i8, i8* %71, align 1
  %111 = icmp eq i8 %110, 58
  %112 = icmp ult i32 %109, %2
  %113 = and i1 %112, %111
  br i1 %113, label %114, label %327

114:                                              ; preds = %107
  %115 = zext i32 %109 to i64
  %116 = getelementptr inbounds i8, i8* %1, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = add i8 %117, -48
  %119 = icmp ult i8 %118, 10
  br i1 %119, label %120, label %327

120:                                              ; preds = %114
  %121 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #7
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %122, align 8
  %123 = bitcast %"class.WTF::StringBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %123) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -86, i64 48, i1 false) #7
  %124 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %124, align 8
  %125 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 1
  %126 = bitcast %union.anon.5* %125 to i8*
  store i8 0, i8* %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 2
  store i32 0, i32* %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 3
  store i8 1, i8* %128, align 4
  %129 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 4
  store i8 0, i8* %129, align 1
  %130 = add i8 %117, -48
  %131 = icmp ult i8 %130, 10
  br i1 %131, label %132, label %146

132:                                              ; preds = %120, %140
  %133 = phi i32 [ %138, %140 ], [ %109, %120 ]
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %1, i64 %134
  %136 = add nuw i32 %133, 1
  store i32 %136, i32* %3, align 4
  %137 = load i8, i8* %135, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %7, i8 zeroext %137) #7
  %138 = load i32, i32* %3, align 4
  %139 = icmp ult i32 %138, %2
  br i1 %139, label %140, label %146

140:                                              ; preds = %132
  %141 = zext i32 %138 to i64
  %142 = getelementptr inbounds i8, i8* %1, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = add i8 %143, -48
  %145 = icmp ult i8 %144, 10
  br i1 %145, label %132, label %146

146:                                              ; preds = %132, %140, %120
  %147 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %7) #7
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %7) #7
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #7
  br label %163

163:                                              ; preds = %146, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %123) #7
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %122, align 8
  %164 = call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* nonnull %11, i8* null) #7
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %325, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 2
  br i1 %170, label %171, label %308

171:                                              ; preds = %167
  %172 = load i32, i32* %3, align 4
  br i1 %108, label %173, label %180

173:                                              ; preds = %171
  %174 = icmp ult i32 %172, %2
  br i1 %174, label %175, label %268

175:                                              ; preds = %173
  %176 = zext i32 %172 to i64
  %177 = getelementptr inbounds i8, i8* %1, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = icmp eq i8 %178, 58
  br i1 %179, label %180, label %268

180:                                              ; preds = %171, %175
  %181 = icmp ult i32 %172, %2
  br i1 %181, label %182, label %308

182:                                              ; preds = %180
  %183 = add nuw i32 %172, 1
  store i32 %183, i32* %3, align 4
  %184 = zext i32 %172 to i64
  %185 = getelementptr inbounds i8, i8* %1, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = icmp eq i8 %186, 58
  %188 = icmp ult i32 %183, %2
  %189 = and i1 %188, %187
  br i1 %189, label %190, label %308

190:                                              ; preds = %182
  %191 = zext i32 %183 to i64
  %192 = getelementptr inbounds i8, i8* %1, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = add i8 %193, -48
  %195 = icmp ult i8 %194, 10
  br i1 %195, label %196, label %308

196:                                              ; preds = %190
  %197 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #7
  %198 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %198, align 8
  %199 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %199) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 -86, i64 48, i1 false) #7
  %200 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %200, align 8
  %201 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %202 = bitcast %union.anon.5* %201 to i8*
  store i8 0, i8* %202, align 8
  %203 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %203, align 8
  %204 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %204, align 4
  %205 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %205, align 1
  %206 = add i8 %193, -48
  %207 = icmp ult i8 %206, 10
  br i1 %207, label %208, label %222

208:                                              ; preds = %196, %216
  %209 = phi i32 [ %214, %216 ], [ %183, %196 ]
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds i8, i8* %1, i64 %210
  %212 = add nuw i32 %209, 1
  store i32 %212, i32* %3, align 4
  %213 = load i8, i8* %211, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext %213) #7
  %214 = load i32, i32* %3, align 4
  %215 = icmp ult i32 %214, %2
  br i1 %215, label %216, label %222

216:                                              ; preds = %208
  %217 = zext i32 %214 to i64
  %218 = getelementptr inbounds i8, i8* %1, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = add i8 %219, -48
  %221 = icmp ult i8 %220, 10
  br i1 %221, label %208, label %222

222:                                              ; preds = %208, %216, %196
  %223 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #7
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #7
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #7
  br label %239

239:                                              ; preds = %222, %235, %238
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %199) #7
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %198, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %240, label %241, label %242

241:                                              ; preds = %239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #7
  br label %308

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %244, 2
  br i1 %245, label %246, label %251

246:                                              ; preds = %242
  %247 = call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* nonnull %12, i8* null) #7
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %250, label %251

250:                                              ; preds = %246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #7
  br label %268

251:                                              ; preds = %242, %246
  %252 = phi i32 [ %247, %246 ], [ -1431655766, %242 ]
  %253 = phi i1 [ true, %246 ], [ false, %242 ]
  %254 = phi %"class.WTF::StringImpl"* [ %248, %246 ], [ %223, %242 ]
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  br i1 %258, label %261, label %263

261:                                              ; preds = %251
  %262 = add i32 %260, -1
  store i32 %262, i32* %259, align 4
  br label %263

263:                                              ; preds = %261, %251
  %264 = phi i32 [ %262, %261 ], [ %260, %251 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %263
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %254) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #7
  br i1 %253, label %268, label %308

267:                                              ; preds = %263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #7
  br i1 %253, label %268, label %308

268:                                              ; preds = %250, %266, %173, %175, %267
  %269 = phi i32 [ %66, %267 ], [ 0, %175 ], [ 0, %173 ], [ %66, %266 ], [ %66, %250 ]
  %270 = phi i32 [ %164, %267 ], [ %66, %175 ], [ %66, %173 ], [ %164, %266 ], [ %164, %250 ]
  %271 = phi i32 [ %252, %267 ], [ %164, %175 ], [ %164, %173 ], [ %252, %266 ], [ %247, %250 ]
  %272 = load i32, i32* %3, align 4
  %273 = icmp ult i32 %272, %2
  br i1 %273, label %274, label %300

274:                                              ; preds = %268
  %275 = zext i32 %272 to i64
  %276 = getelementptr inbounds i8, i8* %1, i64 %275
  %277 = load i8, i8* %276, align 1
  %278 = icmp eq i8 %277, 46
  br i1 %278, label %279, label %300

279:                                              ; preds = %274
  %280 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #7
  %281 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL15CollectFractionEPKcjRj(i8* %1, i32 %2, i32* dereferenceable(4) %3)
  %282 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %281, %"class.WTF::StringImpl"** %282, align 8
  %283 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %13, i8* null) #7
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %285, label %299, label %286

286:                                              ; preds = %279
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %284) #7
  br label %299

299:                                              ; preds = %279, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #7
  br label %300

300:                                              ; preds = %299, %274, %268
  %301 = phi double [ %283, %299 ], [ 0.000000e+00, %274 ], [ 0.000000e+00, %268 ]
  %302 = mul nsw i32 %269, 3600
  %303 = mul nsw i32 %270, 60
  %304 = add nsw i32 %303, %302
  %305 = add nsw i32 %304, %271
  %306 = sitofp i32 %305 to double
  %307 = fadd double %301, %306
  store double %307, double* %4, align 8
  br label %308

308:                                              ; preds = %266, %241, %300, %267, %182, %180, %190, %167
  %309 = phi i1 [ false, %266 ], [ false, %241 ], [ false, %190 ], [ false, %180 ], [ false, %182 ], [ false, %267 ], [ true, %300 ], [ false, %167 ]
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #7
  br label %325

325:                                              ; preds = %163, %308, %321, %324
  %326 = phi i1 [ %309, %308 ], [ %309, %321 ], [ %309, %324 ], [ false, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #7
  br label %327

327:                                              ; preds = %99, %325, %75, %103, %107, %114, %73
  %328 = phi i1 [ false, %114 ], [ false, %107 ], [ false, %103 ], [ true, %75 ], [ %326, %325 ], [ true, %99 ], [ true, %73 ]
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #7
  br label %344

344:                                              ; preds = %100, %327, %340, %343
  %345 = phi i1 [ %328, %327 ], [ %328, %340 ], [ %328, %343 ], [ false, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7
  br label %346

346:                                              ; preds = %16, %5, %344
  %347 = phi i1 [ %345, %344 ], [ false, %5 ], [ false, %16 ]
  ret i1 %347
}

declare i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blinkL15CollectFractionEPKcjRj(i8* nocapture readonly, i32, i32* nocapture dereferenceable(4)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %8 = bitcast %union.anon.5* %7 to i8*
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %11, align 1
  %12 = load i32, i32* %2, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 46
  br i1 %16, label %17, label %36

17:                                               ; preds = %3
  %18 = add i32 %12, 1
  store i32 %18, i32* %2, align 4
  %19 = load i8, i8* %14, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %4, i8 zeroext %19) #7
  %20 = load i32, i32* %2, align 4
  %21 = icmp ult i32 %20, %1
  br i1 %21, label %22, label %34

22:                                               ; preds = %17, %29
  %23 = phi i32 [ %32, %29 ], [ %20, %17 ]
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = add i8 %26, -48
  %28 = icmp ult i8 %27, 10
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = add nuw i32 %23, 1
  store i32 %30, i32* %2, align 4
  %31 = load i8, i8* %25, align 1
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %4, i8 zeroext %31) #7
  %32 = load i32, i32* %2, align 4
  %33 = icmp ult i32 %32, %1
  br i1 %33, label %22, label %34

34:                                               ; preds = %22, %29, %17
  %35 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #7
  br label %36

36:                                               ; preds = %3, %34
  %37 = phi %"class.WTF::StringImpl"* [ %35, %34 ], [ null, %3 ]
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #7
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #7
  br label %53

53:                                               ; preds = %36, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #7
  ret %"class.WTF::StringImpl"* %37
}

declare double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #7
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.5* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.5* %16 to %"class.WTF::Vector.11"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.11"* %30, i16* nonnull dereferenceable(2) %3) #7
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #7
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.6"* %41, i8* nonnull dereferenceable(1) %4) #7
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.11"*, i16* dereferenceable(2)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.11"* %0, i32 %5) #7
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.11"* %0, i32 %5) #7
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.11"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #7
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8* %15, i8* %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #7
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #7
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #7
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.11"* %0, i32 %27) #7
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.11"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #7
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.12"* %19, i16* nonnull %6) #7
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #7
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #7
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #7
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.12"* %53, i16* %48) #7
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.12"*, i16*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #7
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.6"*, i8* dereferenceable(1)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.6"* %0, i32 %5) #7
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.6"* %0, i32 %5) #7
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #7
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8* %15, i8* %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #7
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #7
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #7
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.6"* %0, i32 %27) #7
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #7
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.7"* %18, i8* nonnull %6) #7
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #7
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #7
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #7
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.7"* %46, i8* %42) #7
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #7
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.7"*, i8*) local_unnamed_addr #4 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #7
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_EELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %36

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %34, label %14

14:                                               ; preds = %4, %30
  %15 = phi %"struct.std::__1::pair"* [ %32, %30 ], [ %6, %4 ]
  %16 = phi %"struct.std::__1::pair"* [ %31, %30 ], [ null, %4 ]
  %17 = bitcast %"struct.std::__1::pair"* %16 to i8*
  %18 = bitcast %"struct.std::__1::pair"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #7
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %22, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #7
  %23 = bitcast %"struct.std::__1::pair"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #8
  br label %30

30:                                               ; preds = %27, %14
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  %33 = icmp eq %"struct.std::__1::pair"* %32, %10
  br i1 %33, label %34, label %14

34:                                               ; preds = %30, %4
  %35 = bitcast %"struct.std::__1::pair"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %35) #7
  br label %81

36:                                               ; preds = %2
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_EEEEmm(i64 %37) #7
  %39 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([237 x i8], [237 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_EEEEPKcv, i64 0, i64 0)) #7
  %40 = udiv i64 %38, 48
  %41 = ptrtoint i8* %39 to i64
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 %46
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %36
  %50 = bitcast %"struct.std::__1::pair"* %43 to i8*
  br label %76

51:                                               ; preds = %36
  %52 = bitcast i8* %39 to %"struct.std::__1::pair"*
  br label %53

53:                                               ; preds = %51, %69
  %54 = phi %"struct.std::__1::pair"* [ %71, %69 ], [ %43, %51 ]
  %55 = phi %"struct.std::__1::pair"* [ %70, %69 ], [ %52, %51 ]
  %56 = bitcast %"struct.std::__1::pair"* %55 to i8*
  %57 = bitcast %"struct.std::__1::pair"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #7
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 1
  %61 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %61, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #7
  %62 = bitcast %"struct.std::__1::pair"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %53
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #8
  br label %69

69:                                               ; preds = %66, %53
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1
  %72 = icmp eq %"struct.std::__1::pair"* %71, %47
  br i1 %72, label %73, label %53

73:                                               ; preds = %69
  %74 = bitcast %"class.WTF::Vector"* %0 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %49, %73
  %77 = phi i8* [ %75, %73 ], [ %50, %49 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #7
  %78 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %41, i64* %78 monotonic, align 8
  %79 = trunc i64 %40 to i32
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %79, i32* %80, align 8
  br label %81

81:                                               ; preds = %76, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES9_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 44695552
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 44695552) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 48
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
