; ModuleID = '../../third_party/blink/renderer/modules/webaudio/audio_worklet_global_scope.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/audio_worklet_global_scope.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.160", i32, [4 x i8], %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.298", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.333", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.340", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.278", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i64 }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::Worklist.235"* }
%"class.blink::Worklist.235" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::Worklist.242"* }
%"class.blink::Worklist.242" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::Worklist.249"* }
%"class.blink::Worklist.249" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.256", %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.271", [4 x i8] }>
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { float }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.281", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.290" }
%"class.WTF::Vector.290" = type { %"class.WTF::VectorBuffer.291" }
%"class.WTF::VectorBuffer.291" = type { %"class.WTF::VectorBufferBase.292" }
%"class.WTF::VectorBufferBase.292" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { %"struct.std::__1::pair.308"*, i32, i32 }
%"struct.std::__1::pair.308" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.321" }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.214"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.221"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.228"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.235"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1093", i64 }
%"class.std::__1::vector.1093" = type { %"class.std::__1::__vector_base.1094" }
%"class.std::__1::__vector_base.1094" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1095" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.339 }
%class.scoped_refptr.339 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.340" = type { %"struct.std::__1::__atomic_base.341" }
%"struct.std::__1::__atomic_base.341" = type { %"struct.std::__1::__cxx_atomic_impl.342" }
%"struct.std::__1::__cxx_atomic_impl.342" = type { %"struct.std::__1::__cxx_atomic_base_impl.343" }
%"struct.std::__1::__cxx_atomic_base_impl.343" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.374", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.374" = type { %"class.base::RefCounted.375" }
%"class.base::RefCounted.375" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.376" }
%"class.blink::PersistentBase.376" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.379" }
%"class.blink::HeapHashMap.379" = type { %"class.WTF::HashMap.382" }
%"class.WTF::HashMap.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"struct.WTF::KeyValuePair.385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.385" = type { %"class.blink::WeakMember.386", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.679" }
%"struct.std::__1::atomic.679" = type { %"struct.std::__1::__atomic_base.680" }
%"struct.std::__1::__atomic_base.680" = type { %"struct.std::__1::__atomic_base.681" }
%"struct.std::__1::__atomic_base.681" = type { %"struct.std::__1::__cxx_atomic_impl.682" }
%"struct.std::__1::__cxx_atomic_impl.682" = type { %"struct.std::__1::__cxx_atomic_base_impl.683" }
%"struct.std::__1::__cxx_atomic_base_impl.683" = type { i32 }
%"class.blink::AudioWorkletGlobalScope" = type { %"class.blink::WorkletGlobalScope.base", i8, [5 x i8], %"class.blink::HeapHashMap.745", %"class.blink::HeapVector.773", %"class.std::__1::unique_ptr.781", i64, float, %"class.util::TokenType.788" }
%"class.blink::WorkletGlobalScope.base" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.24, i8, [7 x i8], %"class.blink::CrossThreadPersistent.456", i32, i32, %"class.blink::Member.465", %"class.blink::WorkerThread"*, %"class.util::TokenType.737", %"class.std::__1::unique_ptr.739", i8, i8 }>
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.344", %"class.blink::Member.350", %"class.blink::HeapHashSet.352", %class.scoped_refptr.359, %"class.blink::Member.361", %"class.blink::Member.363", i32, %"class.WTF::Vector.98", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.446" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.65", i32, i8, [3 x i8], %"class.blink::HeapVector.67", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.86", %"class.blink::Member.92", %"class.blink::Member.94", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.15" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.13" }
%"class.WTF::HashTable.13" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.15" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.16" }
%"class.blink::HeapHashMap.16" = type { %"class.WTF::HashMap.19" }
%"class.WTF::HashMap.19" = type { %"class.WTF::HashTable.20" }
%"class.WTF::HashTable.20" = type <{ %"struct.WTF::KeyValuePair.22"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.22" = type { i8*, %"class.blink::Member.1436" }
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1438" }
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.23, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"class.blink::Member.59", i32, [4 x i8], %"class.WTF::HashSet.61", i32, i32 }
%class.scoped_refptr.23 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.24 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.40", %"class.std::__1::map.49"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.30 }
%union.anon.30 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.49" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.65", i32, i8, [3 x i8], %"class.blink::HeapVector.67", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.86", %"class.blink::Member.92", %"class.blink::Member.94", i8, [7 x i8] }>
%"class.WTF::HashSet.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.67" = type { %"class.WTF::Vector.70" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { %"class.blink::Member.73"*, i32, i32 }
%"class.blink::Member.73" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.79", i32, i32 }
%"class.blink::HeapHashMap.79" = type { %"class.WTF::HashMap.82" }
%"class.WTF::HashMap.82" = type { %"class.WTF::HashTable.83" }
%"class.WTF::HashTable.83" = type <{ %"struct.WTF::KeyValuePair.85"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.85" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.77", i8, [7 x i8], %"class.WTF::Vector.98", %"class.blink::HeapVector.138", i8, [7 x i8], %"class.WTF::HashSet.61", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.138" = type { %"class.WTF::Vector.141" }
%"class.WTF::Vector.141" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"class.blink::Member.144"*, i32, i32 }
%"class.blink::Member.144" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.148" }
%"class.blink::Supplementable.148" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.149" }
%"class.blink::HeapHashMap.149" = type { %"class.WTF::HashMap.152" }
%"class.WTF::HashMap.152" = type { %"class.WTF::HashTable.153" }
%"class.WTF::HashTable.153" = type <{ %"struct.WTF::KeyValuePair.155"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.155" = type { i8*, %"class.blink::Member.1453" }
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::Supplement.1455"* }
%"class.blink::Supplement.1455" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1456" }
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.156" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.792", %"class.blink::Member.794", %"class.blink::Member.796", %class.scoped_refptr.678, %class.scoped_refptr.678, %"class.blink::Member.798", %"class.blink::Member.800", %"class.blink::Member.806", %"class.blink::Member.810", %"class.blink::Member.862", %"class.blink::HeapHashMap.864", %"class.blink::HeapHashSet.871", %"class.blink::HeapHashSet.871", %"class.blink::HeapHashMap.1041", %"class.blink::HeapVector.1048", %"class.blink::Member.1056", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1059", %"class.WTF::Vector.1066", %"class.blink::HeapHashSet.1072", %"class.blink::HeapHashSet.1072", %"class.std::__1::unique_ptr.1078", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1090", i8, i8, %"class.base::WeakPtrFactory.1092" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.678 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.679" }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.804" }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.814", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.816", %"class.WTF::HashSet.821", i8, [3 x i8], i32, %"class.blink::HeapHashMap.825", %"class.std::__1::map.832", %"class.std::__1::map.843", %"class.std::__1::unique_ptr.852", %"class.blink::Member.800", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.859", %"class.mojo::InlinedStructPtr.861", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.816" = type { %"class.WTF::HashTable.817" }
%"class.WTF::HashTable.817" = type <{ %"struct.WTF::KeyValuePair.820"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.820" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.821" = type { %"class.WTF::HashTable.822" }
%"class.WTF::HashTable.822" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.825" = type { %"class.WTF::HashMap.828" }
%"class.WTF::HashMap.828" = type { %"class.WTF::HashTable.829" }
%"class.WTF::HashTable.829" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type opaque
%"class.std::__1::map.832" = type { %"class.std::__1::__tree.833" }
%"class.std::__1::__tree.833" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.834", %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.843" = type { %"class.std::__1::__tree.844" }
%"class.std::__1::__tree.844" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.845", %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.861" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.864" = type { %"class.WTF::HashMap.867" }
%"class.WTF::HashMap.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ %"struct.WTF::KeyValuePair.870"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.870" = type opaque
%"class.blink::HeapHashSet.871" = type { %"class.WTF::HashSet.874" }
%"class.WTF::HashSet.874" = type { %"class.WTF::HashTable.875" }
%"class.WTF::HashTable.875" = type <{ %"class.blink::WeakMember.877"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.881", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.901", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.998", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1016", %"class.blink::ResourceResponse", %class.scoped_refptr.1018, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.881" = type { %"class.absl::optional_internal::optional_data.882" }
%"class.absl::optional_internal::optional_data.882" = type { %"class.absl::optional_internal::optional_data_base.883" }
%"class.absl::optional_internal::optional_data_base.883" = type { %"class.absl::optional_internal::optional_data_dtor_base.884" }
%"class.absl::optional_internal::optional_data_dtor_base.884" = type { i8, %union.anon.885 }
%union.anon.885 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.886", i8, %"class.absl::optional.891", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.886" = type { %"class.absl::optional_internal::optional_data.887" }
%"class.absl::optional_internal::optional_data.887" = type { %"class.absl::optional_internal::optional_data_base.888" }
%"class.absl::optional_internal::optional_data_base.888" = type { %"class.absl::optional_internal::optional_data_dtor_base.889" }
%"class.absl::optional_internal::optional_data_dtor_base.889" = type { i8, [7 x i8], %union.anon.890 }
%union.anon.890 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.891" = type { %"class.absl::optional_internal::optional_data.892" }
%"class.absl::optional_internal::optional_data.892" = type { %"class.absl::optional_internal::optional_data_base.893" }
%"class.absl::optional_internal::optional_data_base.893" = type { %"class.absl::optional_internal::optional_data_dtor_base.894" }
%"class.absl::optional_internal::optional_data_dtor_base.894" = type { i8, %union.anon.895 }
%union.anon.895 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.896", %"class.WTF::Vector.121" }
%"class.WTF::Vector.896" = type { %"class.WTF::VectorBuffer.897" }
%"class.WTF::VectorBuffer.897" = type { %"class.WTF::VectorBufferBase.898" }
%"class.WTF::VectorBufferBase.898" = type { i32*, i32, i32 }
%"class.WTF::Vector.121" = type { %"class.WTF::VectorBuffer.122" }
%"class.WTF::VectorBuffer.122" = type { %"class.WTF::VectorBufferBase.123" }
%"class.WTF::VectorBufferBase.123" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.901" = type { %"class.WTF::VectorBuffer.902" }
%"class.WTF::VectorBuffer.902" = type { %"class.WTF::VectorBufferBase.903" }
%"class.WTF::VectorBufferBase.903" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.994" }
%"class.WTF::HashMap.994" = type { %"class.WTF::HashTable.995" }
%"class.WTF::HashTable.995" = type <{ %"struct.WTF::KeyValuePair.997"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.997" = type <{ %"class.blink::WeakMember.1458", i32, [4 x i8] }>
%"class.blink::WeakMember.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1460", [7 x i8], %"class.blink::Member.1054", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1460" = type { i8 }
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.878" }
%"class.blink::HeapHashSet.998" = type { %"class.WTF::HashSet.1001" }
%"class.WTF::HashSet.1001" = type { %"class.WTF::HashTable.1002" }
%"class.WTF::HashTable.1002" = type <{ %"class.blink::WeakMember.1004"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1004" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1005", %"class.WTF::String", %"class.WTF::HashSet.1006", i8, i8, %class.scoped_refptr.1011, %class.scoped_refptr.1012, %class.scoped_refptr.1014 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.1005" = type { i8 }
%"class.WTF::HashSet.1006" = type { %"class.WTF::HashTable.1007" }
%"class.WTF::HashTable.1007" = type <{ %"struct.std::__1::pair.1010"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1010" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1011 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.1012 = type { %"class.base::RefCountedData.1013"* }
%"class.base::RefCountedData.1013" = type opaque
%class.scoped_refptr.1014 = type { %"class.base::RefCountedData.1015"* }
%"class.base::RefCountedData.1015" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.957" }
%"class.base::time_internal::TimeBase.957" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.24, %class.scoped_refptr.24, %class.scoped_refptr.24, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.909, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.921", %"class.absl::optional.926", %"class.absl::optional.936", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.946", %"class.absl::optional.936", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.936", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.946", %"class.absl::optional.951", i8, %class.scoped_refptr.956 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.904" }
%"class.WTF::HashMap.904" = type { %"class.WTF::HashTable.905" }
%"class.WTF::HashTable.905" = type <{ %"struct.WTF::KeyValuePair.908"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.908" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.909 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.910", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.919, i8, %"class.url::Origin" }
%"class.base::RefCounted.910" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::WebVector" = type { %"class.std::__1::vector.911" }
%"class.std::__1::vector.911" = type { %"class.std::__1::__vector_base.912" }
%"class.std::__1::__vector_base.912" = type { %"class.std::__1::unique_ptr.913"*, %"class.std::__1::unique_ptr.913"*, %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.std::__1::unique_ptr.913"* }
%class.scoped_refptr.919 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.920", [4 x i8] }>
%"class.base::RefCountedThreadSafe.920" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.921" = type { %"class.absl::optional_internal::optional_data.922" }
%"class.absl::optional_internal::optional_data.922" = type { %"class.absl::optional_internal::optional_data_base.923" }
%"class.absl::optional_internal::optional_data_base.923" = type { %"class.absl::optional_internal::optional_data_dtor_base.924" }
%"class.absl::optional_internal::optional_data_dtor_base.924" = type { i8, %union.anon.925 }
%union.anon.925 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.926" = type { %"class.absl::optional_internal::optional_data.927" }
%"class.absl::optional_internal::optional_data.927" = type { %"class.absl::optional_internal::optional_data_base.928" }
%"class.absl::optional_internal::optional_data_base.928" = type { %"class.absl::optional_internal::optional_data_dtor_base.929" }
%"class.absl::optional_internal::optional_data_dtor_base.929" = type { i8, %union.anon.930 }
%union.anon.930 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.931", %"class.WTF::Vector.121", %"class.WTF::String" }
%"class.WTF::Vector.931" = type { %"class.WTF::VectorBuffer.932" }
%"class.WTF::VectorBuffer.932" = type { %"class.WTF::VectorBufferBase.933" }
%"class.WTF::VectorBufferBase.933" = type { %class.scoped_refptr.24*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.941", %"class.absl::optional.941" }
%"class.absl::optional.941" = type { %"class.absl::optional_internal::optional_data.942" }
%"class.absl::optional_internal::optional_data.942" = type { %"class.absl::optional_internal::optional_data_base.943" }
%"class.absl::optional_internal::optional_data_base.943" = type { %"class.absl::optional_internal::optional_data_dtor_base.944" }
%"class.absl::optional_internal::optional_data_dtor_base.944" = type { i8, %union.anon.945 }
%union.anon.945 = type { %"class.base::TimeDelta" }
%"class.absl::optional.936" = type { %"class.absl::optional_internal::optional_data.937" }
%"class.absl::optional_internal::optional_data.937" = type { %"class.absl::optional_internal::optional_data_base.938" }
%"class.absl::optional_internal::optional_data_base.938" = type { %"class.absl::optional_internal::optional_data_dtor_base.939" }
%"class.absl::optional_internal::optional_data_dtor_base.939" = type { i8, %union.anon.940 }
%union.anon.940 = type { %"class.WTF::String" }
%"class.absl::optional.946" = type { %"class.absl::optional_internal::optional_data.947" }
%"class.absl::optional_internal::optional_data.947" = type { %"class.absl::optional_internal::optional_data_base.948" }
%"class.absl::optional_internal::optional_data_base.948" = type { %"class.absl::optional_internal::optional_data_dtor_base.949" }
%"class.absl::optional_internal::optional_data_dtor_base.949" = type { i8, %union.anon.950 }
%union.anon.950 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.951" = type { %"class.absl::optional_internal::optional_data.952" }
%"class.absl::optional_internal::optional_data.952" = type { %"class.absl::optional_internal::optional_data_base.953" }
%"class.absl::optional_internal::optional_data_base.953" = type { %"class.absl::optional_internal::optional_data_dtor_base.954" }
%"class.absl::optional_internal::optional_data_dtor_base.954" = type { i8, %union.anon.955 }
%union.anon.955 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.956 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1445", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1445" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1446" }
%"class.std::__1::vector.1446" = type { %"class.std::__1::__vector_base.1447" }
%"class.std::__1::__vector_base.1447" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { i32* }
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.958", %class.scoped_refptr.973, %class.scoped_refptr.974, %"struct.blink::CacheControlHeader", %"class.absl::optional.941", %"class.absl::optional.975", %"class.absl::optional.975", %"class.absl::optional.975", i64, %"class.blink::KURL", %"class.WTF::Vector.980", %"class.WTF::String", %"class.WTF::Vector.121", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.946", %"class.WTF::Vector.121", %"class.blink::KURL", %"class.absl::optional.985" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.958" = type { %"class.absl::optional_internal::optional_data.959" }
%"class.absl::optional_internal::optional_data.959" = type { %"class.absl::optional_internal::optional_data_base.960" }
%"class.absl::optional_internal::optional_data_base.960" = type { %"class.absl::optional_internal::optional_data_dtor_base.961" }
%"class.absl::optional_internal::optional_data_dtor_base.961" = type { i8, %union.anon.962 }
%union.anon.962 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.121", %"class.WTF::String", i64, i64, %"class.WTF::Vector.963", %"class.WTF::Vector.968" }
%"class.WTF::Vector.963" = type { %"class.WTF::VectorBuffer.964" }
%"class.WTF::VectorBuffer.964" = type { %"class.WTF::VectorBufferBase.965" }
%"class.WTF::VectorBufferBase.965" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.968" = type { %"class.WTF::VectorBuffer.969" }
%"class.WTF::VectorBuffer.969" = type { %"class.WTF::VectorBufferBase.970" }
%"class.WTF::VectorBufferBase.970" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.973 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.974 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.975" = type { %"class.absl::optional_internal::optional_data.976" }
%"class.absl::optional_internal::optional_data.976" = type { %"class.absl::optional_internal::optional_data_base.977" }
%"class.absl::optional_internal::optional_data_base.977" = type { %"class.absl::optional_internal::optional_data_dtor_base.978" }
%"class.absl::optional_internal::optional_data_dtor_base.978" = type { i8, %union.anon.979 }
%union.anon.979 = type { %"class.base::Time" }
%"class.WTF::Vector.980" = type { %"class.WTF::VectorBuffer.981" }
%"class.WTF::VectorBuffer.981" = type { %"class.WTF::VectorBufferBase.982" }
%"class.WTF::VectorBufferBase.982" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.985" = type { %"class.absl::optional_internal::optional_data.986" }
%"class.absl::optional_internal::optional_data.986" = type { %"class.absl::optional_internal::optional_data_base.987" }
%"class.absl::optional_internal::optional_data_base.987" = type { %"class.absl::optional_internal::optional_data_dtor_base.988" }
%"class.absl::optional_internal::optional_data_dtor_base.988" = type { i8, %union.anon.989 }
%union.anon.989 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1018 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1019", i64, %"class.WTF::Vector.1021", %"class.WTF::Vector.1026" }
%"class.WTF::RefCounted.1019" = type { %"class.base::RefCounted.1020" }
%"class.base::RefCounted.1020" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1021" = type { %"class.WTF::VectorBuffer.1022" }
%"class.WTF::VectorBuffer.1022" = type { %"class.WTF::VectorBufferBase.1023" }
%"class.WTF::VectorBufferBase.1023" = type { i8*, i32, i32 }
%"class.WTF::Vector.1026" = type { %"class.WTF::VectorBuffer.1027" }
%"class.WTF::VectorBuffer.1027" = type { %"class.WTF::VectorBufferBase.1028" }
%"class.WTF::VectorBufferBase.1028" = type { %"class.std::__1::unique_ptr.1029"*, i32, i32 }
%"class.std::__1::unique_ptr.1029" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1032" }
%"class.std::__1::__tree.1032" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.blink::HeapHashMap.1041" = type { %"class.WTF::HashMap.1044" }
%"class.WTF::HashMap.1044" = type { %"class.WTF::HashTable.1045" }
%"class.WTF::HashTable.1045" = type <{ %"struct.WTF::KeyValuePair.1047"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1047" = type opaque
%"class.blink::HeapVector.1048" = type { %"class.WTF::Vector.1051" }
%"class.WTF::Vector.1051" = type { %"class.WTF::VectorBuffer.1052" }
%"class.WTF::VectorBuffer.1052" = type { %"class.WTF::VectorBufferBase.1053" }
%"class.WTF::VectorBufferBase.1053" = type { %"class.blink::Member.1054"*, i32, i32 }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.358", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.678, %"class.base::WeakPtrFactory.1058" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1058" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.692 }
%class.scoped_refptr.692 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.693", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.693" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.694" }
%"struct.std::__1::atomic.694" = type { %"struct.std::__1::__atomic_base.695" }
%"struct.std::__1::__atomic_base.695" = type { %"struct.std::__1::__atomic_base.696" }
%"struct.std::__1::__atomic_base.696" = type { %"struct.std::__1::__cxx_atomic_impl.697" }
%"struct.std::__1::__cxx_atomic_impl.697" = type { %"struct.std::__1::__cxx_atomic_base_impl.698" }
%"struct.std::__1::__cxx_atomic_base_impl.698" = type { i8 }
%"class.blink::WeakMember.358" = type { %"class.blink::MemberBase.351" }
%"class.blink::HeapHashMap.1059" = type { %"class.WTF::HashMap.1062" }
%"class.WTF::HashMap.1062" = type { %"class.WTF::HashTable.1063" }
%"class.WTF::HashTable.1063" = type <{ %"struct.WTF::KeyValuePair.1065"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1065" = type opaque
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %class.scoped_refptr.1069*, i32, i32 }
%class.scoped_refptr.1069 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1072" = type { %"class.WTF::HashSet.1075" }
%"class.WTF::HashSet.1075" = type { %"class.WTF::HashTable.1076" }
%"class.WTF::HashTable.1076" = type <{ %"class.blink::Member.1016"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.WTF::HashSet.1081"* }
%"class.WTF::HashSet.1081" = type { %"class.WTF::HashTable.1082" }
%"class.WTF::HashTable.1082" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.855 }
%class.scoped_refptr.855 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1088" }
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1092" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.352" = type { %"class.WTF::HashSet.355" }
%"class.WTF::HashSet.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"class.blink::WeakMember.358"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.359 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.360", [4 x i8] }>
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type { i32 (...)**, %"class.blink::Member.367", %"class.v8::Isolate"*, %"class.blink::Member.369", %class.scoped_refptr.373, %"class.WTF::String", i8, i8, %class.scoped_refptr.435 }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::WorkerOrWorkletGlobalScope"* }
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.373, %"class.blink::Member.388", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.392", %"class.blink::HeapHashMap.401", %"class.std::__1::unique_ptr.411", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.423", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.426" }
%"class.blink::HeapHashMap.392" = type { %"class.WTF::HashMap.395" }
%"class.WTF::HashMap.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"struct.WTF::KeyValuePair.398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.398" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.401" = type { %"class.WTF::HashMap.404" }
%"class.WTF::HashMap.404" = type { %"class.WTF::HashTable.405" }
%"class.WTF::HashTable.405" = type <{ %"struct.WTF::KeyValuePair.407"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.407" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.408" }
%"class.blink::TraceWrapperV8Reference.408" = type { %"class.v8::TracedReference.409" }
%"class.v8::TracedReference.409" = type { %"class.v8::BasicTracedReference.410" }
%"class.v8::BasicTracedReference.410" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.414" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.423" = type { %"class.v8::Persistent.424" }
%"class.v8::Persistent.424" = type { %"class.v8::PersistentBase.425" }
%"class.v8::PersistentBase.425" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.426" = type { %"class.WTF::HashMap.429" }
%"class.WTF::HashMap.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"struct.WTF::KeyValuePair.432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.432" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.433" }
%"class.blink::Persistent.433" = type { %"class.blink::PersistentBase.434" }
%"class.blink::PersistentBase.434" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.373 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.435 = type { %"class.blink::RejectedPromises"* }
%"class.blink::RejectedPromises" = type { %"class.WTF::RefCounted.436", %"class.WTF::Vector.438", %"class.WTF::Vector.438" }
%"class.WTF::RefCounted.436" = type { %"class.base::RefCounted.437" }
%"class.base::RefCounted.437" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.438" = type { %"class.WTF::VectorBuffer.439" }
%"class.WTF::VectorBuffer.439" = type { %"class.WTF::VectorBufferBase.440" }
%"class.WTF::VectorBufferBase.440" = type { %"class.std::__1::unique_ptr.441"*, i32, i32 }
%"class.std::__1::unique_ptr.441" = type opaque
%"class.WTF::Vector.98" = type { %"class.WTF::VectorBuffer.99" }
%"class.WTF::VectorBuffer.99" = type { %"class.WTF::VectorBufferBase.100" }
%"class.WTF::VectorBufferBase.100" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.104", %"class.WTF::HashMap.111", %"class.WTF::HashMap.116", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.121", i32, %"class.mojo::StructPtr.126", %"class.WTF::Vector.121" }
%"class.mojo::StructPtr.104" = type { %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.111" = type { %"class.WTF::HashTable.112" }
%"class.WTF::HashTable.112" = type <{ %"struct.WTF::KeyValuePair.115"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.115" = type opaque
%"class.WTF::HashMap.116" = type { %"class.WTF::HashTable.117" }
%"class.WTF::HashTable.117" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.126" = type { %"class.std::__1::unique_ptr.127" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.121", i8, i8, [6 x i8] }>
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.444", i32, [4 x i8] }>
%"class.std::__1::bitset.444" = type { %"class.std::__1::__bitset.445" }
%"class.std::__1::__bitset.445" = type { [25 x i64] }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.450" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.blink::KURL"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr.24 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::CrossThreadPersistent.456" = type { %"class.blink::PersistentBase.457" }
%"class.blink::PersistentBase.457" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.460", %"class.WTF::Mutex" }
%"class.WTF::HashMap.460" = type { %"class.WTF::HashTable.461" }
%"class.WTF::HashTable.461" = type <{ %"struct.WTF::KeyValuePair.464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.464" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.util::TokenType.737" = type { %"class.base::StrongAlias.738" }
%"class.base::StrongAlias.738" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.blink::HeapHashMap.745" = type { %"class.WTF::HashMap.748" }
%"class.WTF::HashMap.748" = type { %"class.WTF::HashTable.749" }
%"class.WTF::HashTable.749" = type <{ %"struct.WTF::KeyValuePair.751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.751" = type { %"class.WTF::String", %"class.blink::Member.752" }
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::AudioWorkletProcessorDefinition"* }
%"class.blink::AudioWorkletProcessorDefinition" = type { %"class.blink::NameClient", %"class.WTF::String", i8, %"class.blink::Member.756", %"class.blink::Member.760", %"class.blink::HeapVector.762" }
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::V8BlinkAudioWorkletProcessorConstructor"* }
%"class.blink::V8BlinkAudioWorkletProcessorConstructor" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.369", %"class.blink::Member.369" }
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::V8BlinkAudioWorkletProcessCallback"* }
%"class.blink::V8BlinkAudioWorkletProcessCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::HeapVector.762" = type { %"class.WTF::Vector.765" }
%"class.WTF::Vector.765" = type { %"class.WTF::VectorBuffer.766" }
%"class.WTF::VectorBuffer.766" = type { %"class.WTF::VectorBufferBase.767" }
%"class.WTF::VectorBufferBase.767" = type { %"class.blink::Member.768"*, i32, i32 }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::AudioParamDescriptor"* }
%"class.blink::AudioParamDescriptor" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.WTF::String", float, float, float, %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector.773" = type { %"class.WTF::Vector.776" }
%"class.WTF::Vector.776" = type { %"class.WTF::VectorBuffer.777" }
%"class.WTF::VectorBuffer.777" = type { %"class.WTF::VectorBufferBase.778" }
%"class.WTF::VectorBufferBase.778" = type { %"class.blink::Member.779"*, i32, i32 }
%"class.blink::Member.779" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::AudioWorkletProcessor"* }
%"class.blink::AudioWorkletProcessor" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.1159", %"class.blink::Member.1161", %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1163", %"class.blink::TraceWrapperV8Reference.1163", %"class.blink::TraceWrapperV8Reference", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1166", i32, [4 x i8] }>
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::AudioWorkletGlobalScope"* }
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::MessagePort"* }
%"class.blink::MessagePort" = type opaque
%"class.blink::TraceWrapperV8Reference.1163" = type { %"class.v8::TracedReference.1164" }
%"class.v8::TracedReference.1164" = type { %"class.v8::BasicTracedReference.1165" }
%"class.v8::BasicTracedReference.1165" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::HeapVector.1172"*, i32, i32 }
%"class.blink::HeapVector.1172" = type opaque
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.blink::ProcessorCreationParams"* }
%"class.blink::ProcessorCreationParams" = type { %"class.WTF::String", %"class.blink::MessagePortChannel" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.784 }
%class.scoped_refptr.784 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.util::TokenType.788" = type { %"class.base::StrongAlias.789" }
%"class.base::StrongAlias.789" = type { %"class.base::UnguessableToken" }
%"struct.blink::GlobalScopeCreationParams" = type <{ %"class.blink::KURL", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", %"struct.blink::UserAgentMetadata", %class.scoped_refptr.359, %"class.WTF::Vector.98", i32, [4 x i8], %"class.std::__1::unique_ptr.1110", %class.scoped_refptr.24, i8, [3 x i8], i32, %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.344", %"class.absl::optional.1116", %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.1121", i32, [4 x i8], %"class.blink::CrossThreadPersistent.456", %"class.mojo::PendingRemote.1139", %"struct.blink::BeginFrameProviderParams", %"class.std::__1::unique_ptr.25", %"class.base::UnguessableToken", i64, %"class.absl::optional.1140", i8, i8, [6 x i8] }>
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.1103", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.1103" = type { %"class.std::__1::__vector_base.1104" }
%"class.std::__1::__vector_base.1104" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.1105" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.1110" = type { %"class.std::__1::__compressed_pair.1111" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"class.WTF::Vector.121"* }
%"class.absl::optional.1116" = type { %"class.absl::optional_internal::optional_data.1117" }
%"class.absl::optional_internal::optional_data.1117" = type { %"class.absl::optional_internal::optional_data_base.1118" }
%"class.absl::optional_internal::optional_data_base.1118" = type { %"class.absl::optional_internal::optional_data_dtor_base.1119" }
%"class.absl::optional_internal::optional_data_dtor_base.1119" = type { i8, %union.anon.1120 }
%union.anon.1120 = type { i32 }
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1124", %"class.WTF::HashMap.1124", %"class.WTF::HashMap.1124", %"class.WTF::HashMap.1124", %"class.WTF::HashMap.1124", %"class.WTF::HashMap.1124", %"class.WTF::HashMap.1124", %"class.std::__1::unique_ptr.1129" }
%"class.WTF::HashMap.1124" = type { %"class.WTF::HashTable.1125" }
%"class.WTF::HashTable.1125" = type <{ %"struct.WTF::KeyValuePair.1128"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1128" = type { i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.WTF::Vector.1132"* }
%"class.WTF::Vector.1132" = type { %"class.WTF::VectorBuffer.1473" }
%"class.WTF::VectorBuffer.1473" = type { %"class.WTF::VectorBufferBase.1474" }
%"class.WTF::VectorBufferBase.1474" = type { %"struct.std::__1::pair.1475"*, i32, i32 }
%"struct.std::__1::pair.1475" = type { i32, %"class.WTF::String" }
%"class.mojo::PendingRemote.1139" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.blink::BeginFrameProviderParams" = type { %"class.viz::FrameSinkId", %"class.viz::FrameSinkId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.absl::optional.1140" = type { %"class.absl::optional_internal::optional_data.1141" }
%"class.absl::optional_internal::optional_data.1141" = type { %"class.absl::optional_internal::optional_data_base.1142" }
%"class.absl::optional_internal::optional_data_base.1142" = type { %"class.absl::optional_internal::optional_data_dtor_base.1143" }
%"class.absl::optional_internal::optional_data_dtor_base.1143" = type { i8, [7 x i8], %union.anon.1144 }
%union.anon.1144 = type { %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.467, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.678, %"class.std::__1::unique_ptr.684", %"class.WTF::HashMap.715", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent.720", %"class.blink::CrossThreadPersistent.722", %"class.blink::CrossThreadPersistent.724", %class.scoped_refptr.726, %"class.blink::TaskHandle", %"class.WTF::HashSet.728", %"class.WTF::HashSet.732" }
%"class.base::TaskObserver" = type { i32 (...)** }
%class.scoped_refptr.467 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.468" }
%"class.WTF::Deque.468" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.471" }
%"class.WTF::VectorBuffer.471" = type { %"class.WTF::VectorBufferBase.472" }
%"class.WTF::VectorBufferBase.472" = type { %"class.std::__1::unique_ptr.473"*, i32, i32 }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.476" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.479", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.522", %"class.crdtp::detail::PtrMaybe.542", %"class.crdtp::detail::PtrMaybe.552", %"class.crdtp::detail::PtrMaybe.562", %"class.crdtp::detail::PtrMaybe.583", %"class.crdtp::detail::PtrMaybe.593", %"class.crdtp::detail::PtrMaybe.603", %"class.crdtp::detail::PtrMaybe.613", %"class.crdtp::detail::PtrMaybe.642", %"class.crdtp::detail::PtrMaybe.652", %"class.crdtp::detail::PtrMaybe.662" }
%"class.crdtp::ProtocolObject.479" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.485", %"class.crdtp::detail::PtrMaybe.488", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.498", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.509" }
%"class.crdtp::ProtocolObject.485" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.488" = type { %"class.std::__1::unique_ptr.489" }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.492", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.492" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.509" = type { %"class.std::__1::unique_ptr.510" }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.513", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.513" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.522" = type { %"class.std::__1::unique_ptr.523" }
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.526", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.509", %"class.crdtp::detail::PtrMaybe.529" }
%"class.crdtp::ProtocolObject.526" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.529" = type { %"class.std::__1::unique_ptr.530" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.533", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.533" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.542" = type { %"class.std::__1::unique_ptr.543" }
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.546", %"class.std::__1::unique_ptr.510", %"class.crdtp::detail::PtrMaybe.529", %"class.crdtp::detail::PtrMaybe.529", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.546" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.552" = type { %"class.std::__1::unique_ptr.553" }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.556", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.530" }
%"class.crdtp::ProtocolObject.556" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.562" = type { %"class.std::__1::unique_ptr.563" }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.566", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.529", %"class.crdtp::detail::PtrMaybe.569", %"class.crdtp::detail::ValueMaybe.579" }
%"class.crdtp::ProtocolObject.566" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.569" = type { %"class.std::__1::unique_ptr.570" }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.573", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.573" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.579" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.583" = type { %"class.std::__1::unique_ptr.584" }
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.587", %"class.std::__1::unique_ptr.570", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.587" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.593" = type { %"class.std::__1::unique_ptr.594" }
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.597", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.579", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.597" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.603" = type { %"class.std::__1::unique_ptr.604" }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.607", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.607" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.613" = type { %"class.std::__1::unique_ptr.614" }
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.617", %"class.std::__1::unique_ptr.620", i8, %"class.std::__1::unique_ptr.510", %"class.crdtp::detail::PtrMaybe.569", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.629" }
%"class.crdtp::ProtocolObject.617" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.623", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.623" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.629" = type { %"class.std::__1::unique_ptr.630" }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.633", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.633" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.642" = type { %"class.std::__1::unique_ptr.643" }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.646", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.529", %"class.crdtp::detail::PtrMaybe.509", %"class.crdtp::detail::ValueMaybe.579", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.646" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.652" = type { %"class.std::__1::unique_ptr.653" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.656", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.656" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.662" = type { %"class.std::__1::unique_ptr.663" }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.666", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.569" }
%"class.crdtp::ProtocolObject.666" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.699, %class.scoped_refptr.699, %class.scoped_refptr.699, %"class.std::__1::map.700", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.711" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.687", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.687" = type { %"class.WTF::HashTable.688" }
%"class.WTF::HashTable.688" = type <{ %"struct.WTF::KeyValuePair.691"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.691" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.699 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map.700" = type { %"class.std::__1::__tree.701" }
%"class.std::__1::__tree.701" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.702", %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.711" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.715" = type { %"class.WTF::HashTable.716" }
%"class.WTF::HashTable.716" = type <{ %"struct.WTF::KeyValuePair.719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.719" = type opaque
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent.720" = type { %"class.blink::PersistentBase.721" }
%"class.blink::PersistentBase.721" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistent.722" = type { %"class.blink::PersistentBase.723" }
%"class.blink::PersistentBase.723" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistent.724" = type { %"class.blink::PersistentBase.725" }
%"class.blink::PersistentBase.725" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.726 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.WTF::HashSet.728" = type { %"class.WTF::HashTable.729" }
%"class.WTF::HashTable.729" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.732" = type { %"class.WTF::HashTable.733" }
%"class.WTF::HashTable.733" = type <{ %"class.std::__1::unique_ptr.736"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.736" = type opaque
%"class.blink::WorkletGlobalScope" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.24, i8, [7 x i8], %"class.blink::CrossThreadPersistent.456", i32, i32, %"class.blink::Member.465", %"class.blink::WorkerThread"*, %"class.util::TokenType.737", %"class.std::__1::unique_ptr.739", i8, i8, [6 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1148" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1148" = type { %"class.v8::TracedReference.1149" }
%"class.v8::TracedReference.1149" = type { %"class.v8::BasicTracedReference.1150" }
%"class.v8::BasicTracedReference.1150" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend.1156" = type { %"class.WTF::StringAppend.1157", %"class.WTF::String" }
%"class.WTF::StringAppend.1157" = type { %"class.WTF::StringAppend", i8* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1151", i8* }
%"class.WTF::StringAppend.1151" = type { i8*, %"class.WTF::String" }
%"class.blink::CallbackMethodRetriever" = type { %"class.blink::CallbackFunctionBase"*, %"class.v8::Isolate"*, %"class.v8::Local.399", %"class.v8::Local.400" }
%"class.v8::Local.399" = type { %"class.v8::Context"* }
%"class.v8::Local.400" = type { %"class.v8::Object"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.WTF::StringAppend.1155" = type { %"class.WTF::StringAppend.1156", i8* }
%"class.v8::Function" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.WTF::StringTypeAdapter.1508" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.400", %"class.v8::Local.1153", %"class.v8::Local.1154", %"class.v8::Local.1154", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.1153" = type { %"class.v8::Value"* }
%"class.v8::Local.1154" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1176", i64, %"class.WTF::Vector.1180", %"class.WTF::Vector.1185", %"class.WTF::Vector.1191", %"class.WTF::Vector.1208", %class.scoped_refptr.23, %"class.WTF::HashMap.1214", %"class.WTF::Vector.1219", %"class.WTF::Vector.1180", %"class.WTF::Vector.1225", %"class.WTF::HashMap.1231", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1175" }
%"class.base::RefCountedThreadSafe.1175" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { i8* }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187", [8 x i8] }
%"class.WTF::VectorBufferBase.1187" = type { %class.scoped_refptr.1188*, i32, i32 }
%class.scoped_refptr.1188 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1191" = type { %"class.WTF::VectorBuffer.1192" }
%"class.WTF::VectorBuffer.1192" = type { %"class.WTF::VectorBufferBase.1193" }
%"class.WTF::VectorBufferBase.1193" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1194", %"class.std::__1::unique_ptr.1200" }
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1208" = type { %"class.WTF::VectorBuffer.1209" }
%"class.WTF::VectorBuffer.1209" = type { %"class.WTF::VectorBufferBase.1210" }
%"class.WTF::VectorBufferBase.1210" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1211", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1211" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1214" = type { %"class.WTF::HashTable.1215" }
%"class.WTF::HashTable.1215" = type <{ %"struct.WTF::KeyValuePair.1218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1218" = type opaque
%"class.WTF::Vector.1219" = type { %"class.WTF::VectorBuffer.1220" }
%"class.WTF::VectorBuffer.1220" = type { %"class.WTF::VectorBufferBase.1221" }
%"class.WTF::VectorBufferBase.1221" = type { %"class.mojo::ScopedHandleBase.1222"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1222" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1180" = type { %"class.WTF::VectorBuffer.1181" }
%"class.WTF::VectorBuffer.1181" = type { %"class.WTF::VectorBufferBase.1182", [16 x i8] }
%"class.WTF::VectorBufferBase.1182" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1225" = type { %"class.WTF::VectorBuffer.1226" }
%"class.WTF::VectorBuffer.1226" = type { %"class.WTF::VectorBufferBase.1227" }
%"class.WTF::VectorBufferBase.1227" = type { %"class.mojo::PendingRemote.1228"*, i32, i32 }
%"class.mojo::PendingRemote.1228" = type opaque
%"class.WTF::HashMap.1231" = type { %"class.WTF::HashTable.1232" }
%"class.WTF::HashTable.1232" = type <{ %"struct.WTF::KeyValuePair.1235"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1235" = type { i8**, %"class.std::__1::unique_ptr.1467" }
%"class.std::__1::unique_ptr.1467" = type { %"class.std::__1::__compressed_pair.1468" }
%"class.std::__1::__compressed_pair.1468" = type { %"struct.std::__1::__compressed_pair_elem.1469" }
%"struct.std::__1::__compressed_pair_elem.1469" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"struct.blink::SerializedScriptValue::DeserializeOptions" = type { %"class.blink::HeapVector.1496"*, %"class.WTF::Vector.1503"* }
%"class.blink::HeapVector.1496" = type { %"class.WTF::Vector.1499" }
%"class.WTF::Vector.1499" = type { %"class.WTF::VectorBuffer.1500" }
%"class.WTF::VectorBuffer.1500" = type { %"class.WTF::VectorBufferBase.1501" }
%"class.WTF::VectorBufferBase.1501" = type { %"class.blink::Member.1161"*, i32, i32 }
%"class.WTF::Vector.1503" = type opaque
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.399" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.base::AutoReset" = type { %"class.std::__1::unique_ptr.781"*, %"class.std::__1::unique_ptr.781" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.1148", %class.scoped_refptr.1011 }
%"class.v8::Maybe" = type { i8, %"class.blink::ScriptValue" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.1567", %"class.WTF::HashMap.1567", %"class.WTF::HashMap.1572", %"class.std::__1::unique_ptr.1577", %"class.std::__1::unique_ptr.1624", %"class.blink::Persistent.433", i8, i8, i8, %"class.WTF::Vector.1630", %"class.std::__1::unique_ptr.1637", %"class.blink::Persistent.1643", %"class.blink::Persistent.1647", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.1549", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1561", i32, i32 }
%"class.std::__1::unique_ptr.1549" = type { %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.1561" = type { %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.1567" = type { %"class.WTF::HashTable.1568" }
%"class.WTF::HashTable.1568" = type <{ %"struct.WTF::KeyValuePair.1571"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1571" = type opaque
%"class.WTF::HashMap.1572" = type { %"class.WTF::HashTable.1573" }
%"class.WTF::HashTable.1573" = type <{ %"struct.WTF::KeyValuePair.1576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1576" = type opaque
%"class.std::__1::unique_ptr.1577" = type { %"class.std::__1::__compressed_pair.1578" }
%"class.std::__1::__compressed_pair.1578" = type { %"struct.std::__1::__compressed_pair_elem.1579" }
%"struct.std::__1::__compressed_pair_elem.1579" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.1585", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1580", i8* }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1584" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.1585" = type { %"class.v8::PersistentValueMapBase.1586" }
%"class.v8::PersistentValueMapBase.1586" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1587", i8* }
%"class.WTF::HashMap.1587" = type { %"class.WTF::HashTable.1588" }
%"class.WTF::HashTable.1588" = type <{ %"struct.WTF::KeyValuePair.1591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1591" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1592", %"class.WTF::String", %"class.std::__1::unique_ptr.1594" }
%"class.WTF::RefCounted.1592" = type { %"class.base::RefCounted.1593" }
%"class.base::RefCounted.1593" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1594" = type { %"class.std::__1::__compressed_pair.1595" }
%"class.std::__1::__compressed_pair.1595" = type { %"struct.std::__1::__compressed_pair_elem.1596" }
%"struct.std::__1::__compressed_pair_elem.1596" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1597", %"class.std::__1::unique_ptr.1608", %"class.WTF::Vector.1614", i8, i32 }
%"class.std::__1::unique_ptr.1597" = type { %"class.std::__1::__compressed_pair.1598" }
%"class.std::__1::__compressed_pair.1598" = type { %"struct.std::__1::__compressed_pair_elem.1599" }
%"struct.std::__1::__compressed_pair_elem.1599" = type { %"class.WTF::Vector.1600"* }
%"class.WTF::Vector.1600" = type { %"class.WTF::VectorBuffer.1601" }
%"class.WTF::VectorBuffer.1601" = type { %"class.WTF::VectorBufferBase.1602" }
%"class.WTF::VectorBufferBase.1602" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1608" = type { %"class.std::__1::__compressed_pair.1609" }
%"class.std::__1::__compressed_pair.1609" = type { %"struct.std::__1::__compressed_pair_elem.1610" }
%"struct.std::__1::__compressed_pair_elem.1610" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1614" = type { %"class.WTF::VectorBuffer.1615" }
%"class.WTF::VectorBuffer.1615" = type { %"class.WTF::VectorBufferBase.1602", [32 x i8] }
%"class.std::__1::unique_ptr.1624" = type { %"class.std::__1::__compressed_pair.1625" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.1626" }
%"struct.std::__1::__compressed_pair_elem.1626" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.WTF::Vector.1630" = type { %"class.WTF::VectorBuffer.1631" }
%"class.WTF::VectorBuffer.1631" = type { %"class.WTF::VectorBufferBase.1632" }
%"class.WTF::VectorBufferBase.1632" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1633 }
%class.scoped_refptr.1633 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1634", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1634" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1637" = type { %"class.std::__1::__compressed_pair.1638" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1639" }
%"struct.std::__1::__compressed_pair_elem.1639" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.1643" = type { %"class.blink::PersistentBase.1644" }
%"class.blink::PersistentBase.1644" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.1647" = type { %"class.blink::PersistentBase.1648" }
%"class.blink::PersistentBase.1648" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.1651", i64 }
%"class.blink::HeapVector.1651" = type { %"class.WTF::Vector.1654" }
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"struct.std::__1::pair.1657"*, i32, i32 }
%"struct.std::__1::pair.1657" = type { %"class.blink::UntracedMember", %"class.blink::Member.1659" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1658" }
%"class.blink::MemberBase.1658" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TickClock" = type opaque
%"class.WTF::Vector.1239" = type { %"class.WTF::VectorBuffer.1240" }
%"class.WTF::VectorBuffer.1240" = type { %"class.WTF::VectorBufferBase.1241" }
%"class.WTF::VectorBufferBase.1241" = type { %"class.blink::CrossThreadAudioWorkletProcessorInfo"*, i32, i32 }
%"class.blink::CrossThreadAudioWorkletProcessorInfo" = type { %"class.WTF::String", %"class.WTF::Vector.1242" }
%"class.WTF::Vector.1242" = type { %"class.WTF::VectorBuffer.1243" }
%"class.WTF::VectorBuffer.1243" = type { %"class.WTF::VectorBufferBase.1244" }
%"class.WTF::VectorBufferBase.1244" = type { %"class.blink::CrossThreadAudioParamInfo"*, i32, i32 }
%"class.blink::CrossThreadAudioParamInfo" = type { %"class.WTF::String", float, float, float, %"class.WTF::String" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1252", %"class.blink::Member.1254", %"class.blink::Member.1252", %"class.blink::Member.1252", %"class.blink::Member.1256" }
%"class.blink::Member.1254" = type { %"class.blink::MemberBase.1255" }
%"class.blink::MemberBase.1255" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1260", %"class.blink::Member.1262", %"class.blink::Member.1254", %"class.blink::Member.1264", %"class.blink::Member.1264", %"class.blink::Member.1288", %"class.blink::Member.1290", %"class.blink::Member.1292", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1297", %"class.blink::HeapVector.1299" }
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1268" }
%"class.blink::HeapHashMap.1268" = type { %"class.WTF::HashMap.1271" }
%"class.WTF::HashMap.1271" = type { %"class.WTF::HashTable.1272" }
%"class.WTF::HashTable.1272" = type <{ %"struct.WTF::KeyValuePair.1274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1274" = type { %"class.WTF::AtomicString", %"class.blink::Member.1275" }
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1279", i32, %"class.blink::HeapVector.1281" }
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.1281" = type { %"class.WTF::Vector.1284" }
%"class.WTF::Vector.1284" = type { %"class.WTF::VectorBuffer.1285" }
%"class.WTF::VectorBuffer.1285" = type { %"class.WTF::VectorBufferBase.1286" }
%"class.WTF::VectorBufferBase.1286" = type { %"class.blink::Member.1279"*, i32, i32 }
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1294" }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::HeapHashMap.1296"* }
%"class.blink::HeapHashMap.1296" = type opaque
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1299" = type { %"class.WTF::Vector.1302" }
%"class.WTF::Vector.1302" = type { %"class.WTF::VectorBuffer.1303" }
%"class.WTF::VectorBuffer.1303" = type { %"class.WTF::VectorBufferBase.1304" }
%"class.WTF::VectorBufferBase.1304" = type { %"class.blink::Member.1305"*, i32, i32 }
%"class.blink::Member.1305" = type opaque
%"class.blink::Member.1252" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::Node"* }
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1307", i8, [7 x i8] }>
%"class.blink::Member.1307" = type { %"class.blink::MemberBase.1308" }
%"class.blink::MemberBase.1308" = type { %"class.blink::EventListener"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.1310" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1309", %"class.WTF::Vector.121", i8 }>
%"class.blink::WeakMember.1309" = type { %"class.blink::MemberBase.60" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1309" }
%"class.blink::Supplementable.1310" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1311" }
%"class.blink::HeapHashMap.1311" = type { %"class.WTF::HashMap.1314" }
%"class.WTF::HashMap.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"struct.WTF::KeyValuePair.1317"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1317" = type { i8*, %"class.blink::Member.1462" }
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::Supplement.1464"* }
%"class.blink::Supplement.1464" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1465" }
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1320", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1332", %"class.WTF::Vector.1333" }
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1323", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1323" = type { %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.1325" }
%"struct.std::__1::__compressed_pair_elem.1325" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1332" = type { %"class.blink::MemberBase.466" }
%"class.WTF::Vector.1333" = type { %"class.WTF::VectorBuffer.1334" }
%"class.WTF::VectorBuffer.1334" = type { %"class.WTF::VectorBufferBase.1335" }
%"class.WTF::VectorBufferBase.1335" = type { i32*, i32, i32 }
%"class.mojo::StructPtr.1338" = type { %"class.std::__1::unique_ptr.1339" }
%"class.std::__1::unique_ptr.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.blink::mojom::blink::InspectorIssueInfo"* }
%"class.blink::mojom::blink::InspectorIssueInfo" = type { i32, %"class.mojo::StructPtr.1342" }
%"class.mojo::StructPtr.1342" = type { %"class.std::__1::unique_ptr.1343" }
%"class.std::__1::unique_ptr.1343" = type { %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.blink::mojom::blink::InspectorIssueDetails"* }
%"class.blink::mojom::blink::InspectorIssueDetails" = type { %"class.mojo::StructPtr.1346", %"class.mojo::StructPtr.1372", %"class.mojo::StructPtr.1381", %"class.mojo::StructPtr.1388", %"class.mojo::StructPtr.1397", %"class.mojo::StructPtr.1404", %"class.mojo::StructPtr.1411", %"class.mojo::StructPtr.1418" }
%"class.mojo::StructPtr.1346" = type { %"class.std::__1::unique_ptr.1347" }
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* }
%"class.blink::mojom::blink::SameSiteCookieIssueDetails" = type { %"class.mojo::InlinedStructPtr.1350", %"class.WTF::Vector.1352", %"class.WTF::Vector.1357", i32, %"class.absl::optional.1362", %"class.absl::optional.1362", %"class.mojo::InlinedStructPtr.1367" }
%"class.mojo::InlinedStructPtr.1350" = type <{ %"class.blink::mojom::blink::AffectedCookie", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedCookie" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.1352" = type { %"class.WTF::VectorBuffer.1353" }
%"class.WTF::VectorBuffer.1353" = type { %"class.WTF::VectorBufferBase.1354" }
%"class.WTF::VectorBufferBase.1354" = type { i32*, i32, i32 }
%"class.WTF::Vector.1357" = type { %"class.WTF::VectorBuffer.1358" }
%"class.WTF::VectorBuffer.1358" = type { %"class.WTF::VectorBufferBase.1359" }
%"class.WTF::VectorBufferBase.1359" = type { i32*, i32, i32 }
%"class.absl::optional.1362" = type { %"class.absl::optional_internal::optional_data.1363" }
%"class.absl::optional_internal::optional_data.1363" = type { %"class.absl::optional_internal::optional_data_base.1364" }
%"class.absl::optional_internal::optional_data_base.1364" = type { %"class.absl::optional_internal::optional_data_dtor_base.1365" }
%"class.absl::optional_internal::optional_data_dtor_base.1365" = type { i8, %union.anon.1366 }
%union.anon.1366 = type { %"class.blink::KURL" }
%"class.mojo::InlinedStructPtr.1367" = type <{ %"class.blink::mojom::blink::AffectedRequest", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedRequest" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.1372" = type { %"class.std::__1::unique_ptr.1373" }
%"class.std::__1::unique_ptr.1373" = type { %"class.std::__1::__compressed_pair.1374" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.1375" }
%"struct.std::__1::__compressed_pair_elem.1375" = type { %"class.blink::mojom::blink::MixedContentIssueDetails"* }
%"class.blink::mojom::blink::MixedContentIssueDetails" = type { i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.mojo::InlinedStructPtr.1367", %"class.mojo::InlinedStructPtr.1376" }
%"class.mojo::InlinedStructPtr.1376" = type <{ %"class.blink::mojom::blink::AffectedFrame", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedFrame" = type { %"class.WTF::String" }
%"class.mojo::StructPtr.1381" = type { %"class.std::__1::unique_ptr.1382" }
%"class.std::__1::unique_ptr.1382" = type { %"class.std::__1::__compressed_pair.1383" }
%"class.std::__1::__compressed_pair.1383" = type { %"struct.std::__1::__compressed_pair_elem.1384" }
%"struct.std::__1::__compressed_pair_elem.1384" = type { %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* }
%"class.blink::mojom::blink::BlockedByResponseIssueDetails" = type { %"class.mojo::InlinedStructPtr.1367", %"class.mojo::InlinedStructPtr.1376", %"class.mojo::InlinedStructPtr.1376", i32, [4 x i8] }
%"class.mojo::StructPtr.1388" = type { %"class.std::__1::unique_ptr.1389" }
%"class.std::__1::unique_ptr.1389" = type { %"class.std::__1::__compressed_pair.1390" }
%"class.std::__1::__compressed_pair.1390" = type { %"struct.std::__1::__compressed_pair_elem.1391" }
%"struct.std::__1::__compressed_pair_elem.1391" = type { %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* }
%"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails" = type <{ %"class.absl::optional.1362", %"class.WTF::String", i8, [3 x i8], i32, %"class.mojo::InlinedStructPtr.1376", %"class.mojo::InlinedStructPtr.1392", i32, [4 x i8] }>
%"class.mojo::InlinedStructPtr.1392" = type <{ %"class.blink::mojom::blink::AffectedLocation", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedLocation" = type { %"class.WTF::String", %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1397" = type { %"class.std::__1::unique_ptr.1398" }
%"class.std::__1::unique_ptr.1398" = type { %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* }
%"class.blink::mojom::blink::SharedArrayBufferIssueDetails" = type { %"class.mojo::InlinedStructPtr.1392", i8, i32 }
%"class.mojo::StructPtr.1404" = type { %"class.std::__1::unique_ptr.1405" }
%"class.std::__1::unique_ptr.1405" = type { %"class.std::__1::__compressed_pair.1406" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %"class.blink::mojom::blink::TrustedWebActivityIssueDetails"* }
%"class.blink::mojom::blink::TrustedWebActivityIssueDetails" = type { %"class.blink::KURL", i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.1411" = type { %"class.std::__1::unique_ptr.1412" }
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"class.blink::mojom::blink::HeavyAdIssueDetails"* }
%"class.blink::mojom::blink::HeavyAdIssueDetails" = type { i32, i32, %"class.mojo::InlinedStructPtr.1376" }
%"class.mojo::StructPtr.1418" = type { %"class.std::__1::unique_ptr.1419" }
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"class.blink::mojom::blink::LowTextContrastIssue"* }
%"class.blink::mojom::blink::LowTextContrastIssue" = type { i32, %"class.WTF::String", float, float, float, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::AuditsIssue" = type { %"class.std::__1::unique_ptr.473" }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::CoreProbeSink" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type opaque
%"class.blink::MultiToken.1431" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1434" }
%"class.blink::WeakMember.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.1509" = type { %"class.WTF::StringTypeAdapter.1510" }
%"class.WTF::StringTypeAdapter.1510" = type { %"class.WTF::StringView" }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking.1670" = type { i8 }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_20AudioParamDescriptorEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKS9_SA_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN4base9AutoResetINSt3__110unique_ptrIN5blink23ProcessorCreationParamsENS1_14default_deleteIS4_EEEEED2Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink23AudioWorkletGlobalScope18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv = comdat any

$_ZNK5blink23AudioWorkletGlobalScope9IsClosingEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope9navigatorEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope41ShouldRejectCoepUnsafeNoneTopModuleScriptEv = comdat any

$_ZNK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv = comdat any

$_ZNK5blink18WorkletGlobalScope13IsInitializedEv = comdat any

$_ZNK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv = comdat any

$_ZNK5blink18WorkletGlobalScope3UrlEv = comdat any

$_ZNK5blink18WorkletGlobalScope7BaseURLEv = comdat any

$_ZNK5blink18WorkletGlobalScope9UserAgentEv = comdat any

$_ZNK5blink18WorkletGlobalScope13GetHttpsStateEv = comdat any

$_ZNK5blink23AudioWorkletGlobalScope15GetWorkletTokenEv = comdat any

$_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv = comdat any

$_ZN5blink18WorkletGlobalScope16ErrorEventTargetEv = comdat any

$_ZNK5blink23AudioWorkletGlobalScope25IsAudioWorkletGlobalScopeEv = comdat any

$_ZNK5blink23AudioWorkletGlobalScope24GetExecutionContextTokenEv = comdat any

$_ZNK5blink16ExecutionContext8IsWindowEv = comdat any

$_ZThn72_NK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext29IsAnimationWorkletGlobalScopeEv = comdat any

$_ZThn72_NK5blink23AudioWorkletGlobalScope25IsAudioWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv = comdat any

$_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope3UrlEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope7BaseURLEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope9UserAgentEv = comdat any

$_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope13GetHttpsStateEv = comdat any

$_ZThn72_NK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv = comdat any

$_ZThn72_N5blink18WorkletGlobalScope16ErrorEventTargetEv = comdat any

$_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv = comdat any

$_ZNK5blink16ExecutionContext15GetTrustedTypesEv = comdat any

$_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE = comdat any

$_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_ = comdat any

$_ZNK5blink16ExecutionContext11UkmSourceIDEv = comdat any

$_ZThn72_NK5blink23AudioWorkletGlobalScope24GetExecutionContextTokenEv = comdat any

$_ZThn72_NK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv = comdat any

$_ZN5blink16ExecutionContext17ToScriptWrappableEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE26DispatchHasPendingActivityEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_20AudioParamDescriptorEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_20AudioParamDescriptorEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20AudioParamDescriptorEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20AudioParamDescriptorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EC2ES6_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_EC2ES7_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E7WriteToEPDs = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_31AudioWorkletProcessorDefinitionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21AudioWorkletProcessorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21AudioWorkletProcessorEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21AudioWorkletProcessorEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21AudioWorkletProcessorEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_21AudioWorkletProcessorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_ = comdat any

$_ZN5blink36CrossThreadAudioWorkletProcessorInfoD2Ev = comdat any

$_ZN3WTF6VectorIN5blink36CrossThreadAudioWorkletProcessorInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink36CrossThreadAudioWorkletProcessorInfoEEEmm = comdat any

$_ZN5blink36CrossThreadAudioWorkletProcessorInfoC2ERKNS_31AudioWorkletProcessorDefinitionE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25CrossThreadAudioParamInfoEEEmm = comdat any

$_ZN3WTF6VectorIN5blink25CrossThreadAudioParamInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink25CrossThreadAudioParamInfoENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink23AudioWorkletGlobalScopeE = hidden unnamed_addr constant { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] } { [72 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZN5blink23AudioWorkletGlobalScopeD2Ev to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZN5blink23AudioWorkletGlobalScopeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZNK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::AudioWorkletGlobalScope"*)* @_ZNK5blink23AudioWorkletGlobalScope18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::ScriptState"*)* @_ZN5blink26WorkerOrWorkletGlobalScope4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink26WorkerOrWorkletGlobalScope20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"*)* @_ZN5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZN5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE to i8*), i8* bitcast (i1 (%"class.blink::AudioWorkletGlobalScope"*)* @_ZNK5blink23AudioWorkletGlobalScope9IsClosingEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZN5blink23AudioWorkletGlobalScope7DisposeEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZN5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE to i8*), i8* bitcast (%"class.blink::WorkerThread"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope9GetThreadEv to i8*), i8* bitcast (%"class.blink::WorkerNavigator"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope9navigatorEv to i8*), i8* bitcast (i8 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope41ShouldRejectCoepUnsafeNoneTopModuleScriptEv to i8*), i8* bitcast (%"class.blink::ResourceFetcher"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope7FetcherEv to i8*), i8* bitcast (%"class.base::UnguessableToken"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope16GetDevToolsTokenEv to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkletGlobalScope"*, i8)* @_ZN5blink18WorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope28GetOutstandingThrottledLimitEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope13IsInitializedEv to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZN5blink26WorkerOrWorkletGlobalScope43BindContentSecurityPolicyToExecutionContextEv to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZNK5blink26WorkerOrWorkletGlobalScope25GetThrottleOptionOverrideEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope30IsMainThreadWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope28IsThreadedWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope3UrlEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope7BaseURLEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::WorkletGlobalScope"*, %"class.WTF::String"*)* @_ZNK5blink18WorkletGlobalScope11CompleteURLERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope9UserAgentEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope15IsContextThreadEv to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::ConsoleMessage"*, i1)* @_ZN5blink18WorkletGlobalScope21AddConsoleMessageImplEPNS_14ConsoleMessageEb to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.mojo::StructPtr.1338"*)* @_ZN5blink18WorkletGlobalScope17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::AuditsIssue"*)* @_ZN5blink18WorkletGlobalScope17AddInspectorIssueENS_11AuditsIssueE to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::ErrorEvent"*)* @_ZN5blink18WorkletGlobalScope15ExceptionThrownEPNS_10ErrorEventE to i8*), i8* bitcast (%"class.blink::CoreProbeSink"* (%"class.blink::WorkletGlobalScope"*)* @_ZN5blink18WorkletGlobalScope12GetProbeSinkEv to i8*), i8* bitcast (%"class.blink::FrameOrWorkerScheduler"* (%"class.blink::WorkletGlobalScope"*)* @_ZN5blink18WorkletGlobalScope12GetSchedulerEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope29CrossOriginIsolatedCapabilityEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope22DirectSocketCapabilityEv to i8*), i8* bitcast (%"class.ukm::UkmRecorder"* (%"class.blink::WorkletGlobalScope"*)* @_ZN5blink18WorkletGlobalScope11UkmRecorderEv to i8*), i8* bitcast (%"class.blink::LocalFrame"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope8GetFrameEv to i8*), i8* bitcast (i32 (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope13GetHttpsStateEv to i8*), i8* bitcast (%"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope25GetBrowserInterfaceBrokerEv to i8*), i8* bitcast (void (%"class.blink::MultiToken.1431"*, %"class.blink::AudioWorkletGlobalScope"*)* @_ZNK5blink23AudioWorkletGlobalScope15GetWorkletTokenEv to i8*), i8* bitcast (void (%"class.absl::optional.1140"*, %"class.blink::WorkletGlobalScope"*)* @_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv to i8*), i8* bitcast (%"class.blink::EventTarget"* (%"class.blink::WorkletGlobalScope"*)* @_ZN5blink18WorkletGlobalScope16ErrorEventTargetEv to i8*), i8* bitcast (i1 (%"class.blink::AudioWorkletGlobalScope"*)* @_ZNK5blink23AudioWorkletGlobalScope25IsAudioWorkletGlobalScopeEv to i8*), i8* bitcast (void (%"class.blink::MultiToken"*, %"class.blink::AudioWorkletGlobalScope"*)* @_ZNK5blink23AudioWorkletGlobalScope24GetExecutionContextTokenEv to i8*)], [55 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext8IsWindowEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope30IsMainThreadWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext29IsAnimationWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn72_NK5blink23AudioWorkletGlobalScope25IsAudioWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope28IsThreadedWorkletGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope15IsContextThreadEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv to i8*), i8* bitcast (%"class.blink::ContentSecurityPolicy"* (%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*)* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope3UrlEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope7BaseURLEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::WorkletGlobalScope"*, %"class.WTF::String"*)* @_ZThn72_NK5blink18WorkletGlobalScope11CompleteURLERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"*)* @_ZThn72_N5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope9UserAgentEv to i8*), i8* bitcast (void (%"struct.blink::UserAgentMetadata"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv to i8*), i8* bitcast (i32 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope13GetHttpsStateEv to i8*), i8* bitcast (%"class.blink::ResourceFetcher"* (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope7FetcherEv to i8*), i8* bitcast (i1 (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZThn72_N5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE to i8*), i8* bitcast (i32 (%"class.blink::WorkerOrWorkletGlobalScope"*)* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::ErrorEvent"*)* @_ZThn72_N5blink18WorkletGlobalScope15ExceptionThrownEPNS_10ErrorEventE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)* @_ZN5blink16ExecutionContext24RemoveURLFromMemoryCacheERKNS_4KURLE to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.mojo::StructPtr.1338"*)* @_ZThn72_N5blink18WorkletGlobalScope17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::AuditsIssue"*)* @_ZThn72_N5blink18WorkletGlobalScope17AddInspectorIssueENS_11AuditsIssueE to i8*), i8* bitcast (%"class.blink::EventTarget"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_N5blink18WorkletGlobalScope16ErrorEventTargetEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext16OutgoingReferrerEv to i8*), i8* bitcast (%"class.blink::CoreProbeSink"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_N5blink18WorkletGlobalScope12GetProbeSinkEv to i8*), i8* bitcast (%"class.blink::FrameOrWorkerScheduler"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_N5blink18WorkletGlobalScope12GetSchedulerEv to i8*), i8* bitcast (%"class.blink::TrustedTypePolicyFactory"* (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext15GetTrustedTypesEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext19RequireTrustedTypesEv to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContext"*, i32)* @_ZNK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*)* @_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_ to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope29CrossOriginIsolatedCapabilityEv to i8*), i8* bitcast (i1 (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope22DirectSocketCapabilityEv to i8*), i8* bitcast (%"class.ukm::UkmRecorder"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn72_N5blink18WorkletGlobalScope11UkmRecorderEv to i8*), i8* bitcast (i64 (%"class.blink::ExecutionContext"*)* @_ZNK5blink16ExecutionContext11UkmSourceIDEv to i8*), i8* bitcast (void (%"class.blink::MultiToken"*, %"class.blink::AudioWorkletGlobalScope"*)* @_ZThn72_NK5blink23AudioWorkletGlobalScope24GetExecutionContextTokenEv to i8*), i8* bitcast (void (%"class.absl::optional.1140"*, %"class.blink::WorkletGlobalScope"*)* @_ZThn72_NK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv to i8*), i8* bitcast (%"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)* @_ZN5blink16ExecutionContext17ToScriptWrappableEv to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn72_N5blink23AudioWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn72_N5blink23AudioWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, i1)* @_ZN5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb to i8*), i8* bitcast (void (%"class.blink::WorkletGlobalScope"*, %"class.blink::ConsoleMessage"*, i1)* @_ZThn72_N5blink18WorkletGlobalScope21AddConsoleMessageImplEPNS_14ConsoleMessageEb to i8*)], [9 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn104_N5blink23AudioWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn104_N5blink23AudioWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*)* @_ZN5blink24ContextLifecycleNotifier27AddContextLifecycleObserverEPNS_24ContextLifecycleObserverE to i8*), i8* bitcast (void (%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*)* @_ZN5blink24ContextLifecycleNotifier30RemoveContextLifecycleObserverEPNS_24ContextLifecycleObserverE to i8*), i8* bitcast (%"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::WorkletGlobalScope"*)* @_ZThn104_NK5blink18WorkletGlobalScope25GetBrowserInterfaceBrokerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::WorkletGlobalScope"*, i8)* @_ZThn104_N5blink18WorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE to i8*)], [3 x i8*] [i8* inttoptr (i64 -144 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn144_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE to i8*)], [6 x i8*] [i8* inttoptr (i64 -176 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn176_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn176_N5blink23AudioWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn176_N5blink23AudioWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, i1)* @_ZThn104_N5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb to i8*)], [6 x i8*] [i8* inttoptr (i64 -184 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn184_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn184_N5blink23AudioWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn184_N5blink23AudioWorkletGlobalScopeD0Ev to i8*), i8* bitcast (void (%"class.blink::WorkerOrWorkletGlobalScope"*, i32)* @_ZThn184_N5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE to i8*)], [3 x i8*] [i8* inttoptr (i64 -192 to i8*), i8* null, i8* bitcast (i1 (%"class.blink::ExecutionContext"*, i32)* @_ZThn120_NK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE to i8*)], [7 x i8*] [i8* inttoptr (i64 -1792 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*)* @_ZThn1792_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn1792_N5blink23AudioWorkletGlobalScopeD1Ev to i8*), i8* bitcast (void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZThn1792_N5blink23AudioWorkletGlobalScopeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE26DispatchHasPendingActivityEv to i8*)] }, align 8
@.str = private unnamed_addr constant [36 x i8] c"The processor name cannot be empty.\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"An AudioWorkletProcessor with name:\22\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"\22 is already registered.\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"The provided class definition of \22\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"\22 AudioWorkletProcessor is not a constructor.\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"process\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"parameterDescriptors\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"Found a duplicate name \22\00", align 1
@.str.8 = private unnamed_addr constant [60 x i8] c"\22 in parameterDescriptors() from the AudioWorkletProcessor \00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"definition of \22\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"\22.\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CallbackFunctionBase]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink34V8BlinkAudioWorkletProcessCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.13 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink23AudioWorkletGlobalScope18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.16 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.17 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@.str.18 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.19 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.21 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.22 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.24 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.25 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.27 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.28 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_20AudioParamDescriptorEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [181 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::AudioParamDescriptor>, WTF::VectorTraits<blink::Member<blink::AudioParamDescriptor> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.29 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.30 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.32 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.33 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [422 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::AudioWorkletProcessorDefinition> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::AudioWorkletProcessorDefinition> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@_ZN5blink23V8AudioWorkletProcessor18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21AudioWorkletProcessorEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [183 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::AudioWorkletProcessor>, WTF::VectorTraits<blink::Member<blink::AudioWorkletProcessor> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink36CrossThreadAudioWorkletProcessorInfoELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [132 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<blink::CrossThreadAudioWorkletProcessorInfo, 0, WTF::PartitionAllocator>]\00", align 1
@.str.34 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink36CrossThreadAudioWorkletProcessorInfoEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CrossThreadAudioWorkletProcessorInfo]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25CrossThreadAudioParamInfoEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CrossThreadAudioParamInfo]\00", align 1

@_ZN5blink23AudioWorkletGlobalScopeC1ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE = hidden unnamed_addr alias void (%"class.blink::AudioWorkletGlobalScope"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerThread"*), void (%"class.blink::AudioWorkletGlobalScope"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerThread"*)* @_ZN5blink23AudioWorkletGlobalScopeC2ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE
@_ZN5blink23AudioWorkletGlobalScopeD1Ev = hidden unnamed_addr alias void (%"class.blink::AudioWorkletGlobalScope"*), void (%"class.blink::AudioWorkletGlobalScope"*)* @_ZN5blink23AudioWorkletGlobalScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23AudioWorkletGlobalScopeC2ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE(%"class.blink::AudioWorkletGlobalScope"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerThread"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::AudioWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  %5 = getelementptr inbounds %"class.blink::WorkerThread", %"class.blink::WorkerThread"* %2, i64 0, i32 11
  %6 = load %"class.blink::WorkerReportingProxy"*, %"class.blink::WorkerReportingProxy"** %5, align 8
  tail call void @_ZN5blink18WorkletGlobalScopeC2ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERNS_20WorkerReportingProxyEPNS_12WorkerThreadE(%"class.blink::WorkletGlobalScope"* %4, %"struct.blink::GlobalScopeCreationParams"* %1, %"class.blink::WorkerReportingProxy"* %6, %"class.blink::WorkerThread"* %2) #9
  %7 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %12 = bitcast i32 (...)*** %11 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 5, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %12, align 8
  %13 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 6, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 7, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 1
  store i8 0, i8* %15, align 2
  %16 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 3
  %17 = bitcast %"class.blink::HeapHashMap.745"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #9
  %18 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 4
  %19 = bitcast %"class.blink::HeapVector.773"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 36, i1 false)
  %20 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #9
  %21 = extractvalue { i64, i64 } %20, 0
  %22 = extractvalue { i64, i64 } %20, 1
  %23 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 5
  %26 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8
  tail call void @_ZN2v87Isolate31IsolateInForegroundNotificationEv(%"class.v8::Isolate"* %26) #9
  ret void
}

declare void @_ZN5blink18WorkletGlobalScopeC2ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERNS_20WorkerReportingProxyEPNS_12WorkerThreadE(%"class.blink::WorkletGlobalScope"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerReportingProxy"*, %"class.blink::WorkerThread"*) unnamed_addr #1

declare void @_ZN2v87Isolate31IsolateInForegroundNotificationEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %7 = bitcast i32 (...)*** %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 5, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 1, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 6, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }, { [72 x i8*], [55 x i8*], [9 x i8*], [3 x i8*], [6 x i8*], [6 x i8*], [3 x i8*], [7 x i8*] }* @_ZTVN5blink23AudioWorkletGlobalScopeE, i64 0, inrange i32 7, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"class.blink::ProcessorCreationParams"*, %"class.blink::ProcessorCreationParams"** %10, align 8
  store %"class.blink::ProcessorCreationParams"* null, %"class.blink::ProcessorCreationParams"** %10, align 8
  %12 = icmp eq %"class.blink::ProcessorCreationParams"* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::ProcessorCreationParams", %"class.blink::ProcessorCreationParams"* %11, i64 0, i32 1
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %14) #9
  %15 = getelementptr inbounds %"class.blink::ProcessorCreationParams", %"class.blink::ProcessorCreationParams"* %11, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #9
  br label %31

31:                                               ; preds = %30, %27, %13
  %32 = bitcast %"class.blink::ProcessorCreationParams"* %11 to i8*
  tail call void @free(i8* %32) #9
  br label %33

33:                                               ; preds = %1, %31
  %34 = bitcast %"class.blink::AudioWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"* %34) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink18WorkletGlobalScopeD2Ev(%"class.blink::WorkletGlobalScope"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink23AudioWorkletGlobalScopeD1Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink23AudioWorkletGlobalScopeD1Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn176_N5blink23AudioWorkletGlobalScopeD1Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 3
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_N5blink23AudioWorkletGlobalScopeD1Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 2, i32 5
  %3 = bitcast %"class.std::__1::unique_ptr.450"* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn1792_N5blink23AudioWorkletGlobalScopeD1Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 0, i32 1, i32 6, i32 10, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23AudioWorkletGlobalScopeD0Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink23AudioWorkletGlobalScopeD0Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink23AudioWorkletGlobalScopeD0Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn176_N5blink23AudioWorkletGlobalScopeD0Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 3
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_N5blink23AudioWorkletGlobalScopeD0Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 2, i32 5
  %3 = bitcast %"class.std::__1::unique_ptr.450"* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn1792_N5blink23AudioWorkletGlobalScopeD0Ev(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 0, i32 1, i32 6, i32 10, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::AudioWorkletGlobalScope"*
  tail call void @_ZN5blink23AudioWorkletGlobalScopeD2Ev(%"class.blink::AudioWorkletGlobalScope"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23AudioWorkletGlobalScope7DisposeEv(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 1
  store i8 1, i8* %2, align 2
  %3 = bitcast %"class.blink::AudioWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZN5blink18WorkletGlobalScope7DisposeEv(%"class.blink::WorkletGlobalScope"* %3) #9
  ret void
}

declare void @_ZN5blink18WorkletGlobalScope7DisposeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23AudioWorkletGlobalScope17registerProcessorERKN3WTF6StringEPNS_39V8BlinkAudioWorkletProcessorConstructorERNS_14ExceptionStateE(%"class.blink::AudioWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::V8BlinkAudioWorkletProcessorConstructor"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringAppend.1156", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.blink::CallbackMethodRetriever", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.blink::AudioWorkletProcessorDefinition"*, align 8
  %13 = alloca %"class.v8::TryCatch", align 8
  %14 = alloca %"class.blink::HeapVector.762", align 8
  %15 = alloca %"class.blink::HeapVector.762", align 8
  %16 = alloca %"class.WTF::HashSet.1081", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::StringAppend.1155", align 8
  %20 = alloca %"class.WTF::StringAppend.1156", align 8
  %21 = alloca %"class.WTF::StringAppend.1157", align 8
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %4, %25
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0)) #9
  br label %930

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_(%"class.WTF::HashTable.749"* %31, %"class.WTF::String"* dereferenceable(8) %1) #9
  br i1 %32, label %33, label %182

33:                                               ; preds = %30
  %34 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #9
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %113, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %55

45:                                               ; preds = %38
  %46 = zext i32 %44 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %45
  tail call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %45
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %43, align 4
  br label %55

55:                                               ; preds = %53, %38
  %56 = phi i32 [ %54, %53 ], [ %44, %38 ]
  %57 = load atomic i32, i32* %39 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %55
  %61 = zext i32 %56 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #9
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %60
  tail call void @llvm.trap() #9
  unreachable

68:                                               ; preds = %60
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %43, align 4
  br label %70

70:                                               ; preds = %68, %55
  %71 = phi i32 [ %69, %68 ], [ %56, %55 ]
  %72 = load atomic i32, i32* %39 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  %76 = add i32 %71, -1
  store i32 %76, i32* %43, align 4
  br label %77

77:                                               ; preds = %75, %70
  %78 = phi i32 [ %76, %75 ], [ %71, %70 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %81

81:                                               ; preds = %77, %80
  %82 = load atomic i32, i32* %39 monotonic, align 4, !noalias !3
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = load i32, i32* %43, align 4
  br i1 %84, label %86, label %96

86:                                               ; preds = %81
  %87 = zext i32 %85 to i33
  %88 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #9
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %86
  tail call void @llvm.trap() #9, !noalias !3
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %43, align 4, !noalias !3
  br label %96

96:                                               ; preds = %81, %94
  %97 = phi i32 [ %95, %94 ], [ %85, %81 ]
  %98 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([37 x i8]* @.str.1 to i64), i64* %98, align 8, !alias.scope !3
  %99 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %99, align 8, !alias.scope !3
  %100 = load atomic i32, i32* %39 monotonic, align 4, !noalias !3
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %117

103:                                              ; preds = %96
  %104 = zext i32 %97 to i33
  %105 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #9
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !2

110:                                              ; preds = %103
  tail call void @llvm.trap() #9, !noalias !3
  unreachable

111:                                              ; preds = %103
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %43, align 4, !noalias !3
  br label %117

113:                                              ; preds = %33
  %114 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([37 x i8]* @.str.1 to i64), i64* %114, align 8, !alias.scope !3
  %115 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %115, align 8, !alias.scope !3
  %116 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8** %116, align 8, !alias.scope !3
  br label %129

117:                                              ; preds = %111, %96
  %118 = phi i32 [ %112, %111 ], [ %97, %96 ]
  %119 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8** %119, align 8, !alias.scope !3
  %120 = load atomic i32, i32* %39 monotonic, align 4, !noalias !3
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = add i32 %118, -1
  store i32 %124, i32* %43, align 4, !noalias !3
  br label %125

125:                                              ; preds = %123, %117
  %126 = phi i32 [ %124, %123 ], [ %118, %117 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9, !noalias !3
  br label %129

129:                                              ; preds = %113, %125, %128
  %130 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %131, align 8
  %132 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %133 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %132, align 8
  %134 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %133, align 8
  call void %134(%"class.blink::ExceptionState"* %3, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #9
  br label %150

150:                                              ; preds = %129, %146, %149
  %151 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #9
  br label %167

167:                                              ; preds = %150, %163, %166
  br i1 %37, label %181, label %168

168:                                              ; preds = %167
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %181

181:                                              ; preds = %167, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %930

182:                                              ; preds = %30
  %183 = getelementptr inbounds %"class.blink::V8BlinkAudioWorkletProcessorConstructor", %"class.blink::V8BlinkAudioWorkletProcessorConstructor"* %2, i64 0, i32 0
  %184 = getelementptr inbounds %"class.blink::V8BlinkAudioWorkletProcessorConstructor", %"class.blink::V8BlinkAudioWorkletProcessorConstructor"* %2, i64 0, i32 0, i32 1
  %185 = bitcast %"class.blink::TraceWrapperV8Reference"* %184 to %"class.v8::Object"**
  %186 = load %"class.v8::Object"*, %"class.v8::Object"** %185, align 8
  %187 = icmp eq %"class.v8::Object"* %186, null
  br i1 %187, label %197, label %188

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.blink::V8BlinkAudioWorkletProcessorConstructor", %"class.blink::V8BlinkAudioWorkletProcessorConstructor"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %190 = bitcast %"class.blink::ScriptState"** %189 to %"class.v8::internal::Isolate"***
  %191 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %190, align 8
  %192 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %191, align 8
  %193 = bitcast %"class.v8::Object"* %186 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %192, i64 %194) #9
  %196 = bitcast i64* %195 to %"class.v8::Object"*
  br label %197

197:                                              ; preds = %182, %188
  %198 = phi %"class.v8::Object"* [ %196, %188 ], [ null, %182 ]
  %199 = tail call zeroext i1 @_ZNK2v86Object13IsConstructorEv(%"class.v8::Object"* %198) #9
  br i1 %199, label %350, label %200

200:                                              ; preds = %197
  %201 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #9
  %202 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #9
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %280, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %222

212:                                              ; preds = %205
  %213 = zext i32 %211 to i33
  %214 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %213, i33 1) #9
  %215 = extractvalue { i33, i1 } %214, 1
  %216 = extractvalue { i33, i1 } %214, 0
  %217 = icmp slt i33 %216, 0
  %218 = or i1 %215, %217
  br i1 %218, label %219, label %220, !prof !2

219:                                              ; preds = %212
  tail call void @llvm.trap() #9
  unreachable

220:                                              ; preds = %212
  %221 = trunc i33 %216 to i32
  store i32 %221, i32* %210, align 4
  br label %222

222:                                              ; preds = %220, %205
  %223 = phi i32 [ %221, %220 ], [ %211, %205 ]
  %224 = load atomic i32, i32* %206 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %237

227:                                              ; preds = %222
  %228 = zext i32 %223 to i33
  %229 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %228, i33 1) #9
  %230 = extractvalue { i33, i1 } %229, 1
  %231 = extractvalue { i33, i1 } %229, 0
  %232 = icmp slt i33 %231, 0
  %233 = or i1 %230, %232
  br i1 %233, label %234, label %235, !prof !2

234:                                              ; preds = %227
  tail call void @llvm.trap() #9
  unreachable

235:                                              ; preds = %227
  %236 = trunc i33 %231 to i32
  store i32 %236, i32* %210, align 4
  br label %237

237:                                              ; preds = %235, %222
  %238 = phi i32 [ %236, %235 ], [ %223, %222 ]
  %239 = load atomic i32, i32* %206 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = add i32 %238, -1
  store i32 %243, i32* %210, align 4
  br label %244

244:                                              ; preds = %242, %237
  %245 = phi i32 [ %243, %242 ], [ %238, %237 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #9
  br label %248

248:                                              ; preds = %244, %247
  %249 = load atomic i32, i32* %206 monotonic, align 4, !noalias !6
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = load i32, i32* %210, align 4
  br i1 %251, label %253, label %263

253:                                              ; preds = %248
  %254 = zext i32 %252 to i33
  %255 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %254, i33 1) #9
  %256 = extractvalue { i33, i1 } %255, 1
  %257 = extractvalue { i33, i1 } %255, 0
  %258 = icmp slt i33 %257, 0
  %259 = or i1 %256, %258
  br i1 %259, label %260, label %261, !prof !2

260:                                              ; preds = %253
  tail call void @llvm.trap() #9, !noalias !6
  unreachable

261:                                              ; preds = %253
  %262 = trunc i33 %257 to i32
  store i32 %262, i32* %210, align 4, !noalias !6
  br label %263

263:                                              ; preds = %248, %261
  %264 = phi i32 [ %262, %261 ], [ %252, %248 ]
  %265 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([35 x i8]* @.str.3 to i64), i64* %265, align 8, !alias.scope !6
  %266 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %203, %"class.WTF::StringImpl"** %266, align 8, !alias.scope !6
  %267 = load atomic i32, i32* %206 monotonic, align 4, !noalias !6
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %284

270:                                              ; preds = %263
  %271 = zext i32 %264 to i33
  %272 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %271, i33 1) #9
  %273 = extractvalue { i33, i1 } %272, 1
  %274 = extractvalue { i33, i1 } %272, 0
  %275 = icmp slt i33 %274, 0
  %276 = or i1 %273, %275
  br i1 %276, label %277, label %278, !prof !2

277:                                              ; preds = %270
  tail call void @llvm.trap() #9, !noalias !6
  unreachable

278:                                              ; preds = %270
  %279 = trunc i33 %274 to i32
  store i32 %279, i32* %210, align 4, !noalias !6
  br label %284

280:                                              ; preds = %200
  %281 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([35 x i8]* @.str.3 to i64), i64* %281, align 8, !alias.scope !6
  %282 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %282, align 8, !alias.scope !6
  %283 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0), i8** %283, align 8, !alias.scope !6
  br label %296

284:                                              ; preds = %278, %263
  %285 = phi i32 [ %279, %278 ], [ %264, %263 ]
  %286 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0), i8** %286, align 8, !alias.scope !6
  %287 = load atomic i32, i32* %206 monotonic, align 4, !noalias !6
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %284
  %291 = add i32 %285, -1
  store i32 %291, i32* %210, align 4, !noalias !6
  br label %292

292:                                              ; preds = %290, %284
  %293 = phi i32 [ %291, %290 ], [ %285, %284 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #9, !noalias !6
  br label %296

296:                                              ; preds = %280, %292, %295
  %297 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %298 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %297, %"class.WTF::StringImpl"** %298, align 8
  %299 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %300 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %299, align 8
  %301 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %300, i64 3
  %302 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %301, align 8
  call void %302(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %8) #9
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %318, label %305

305:                                              ; preds = %296
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %303) #9
  br label %318

318:                                              ; preds = %296, %314, %317
  %319 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %319, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  br i1 %326, label %329, label %331

329:                                              ; preds = %322
  %330 = add i32 %328, -1
  store i32 %330, i32* %327, align 4
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi i32 [ %330, %329 ], [ %328, %322 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %320) #9
  br label %335

335:                                              ; preds = %318, %331, %334
  br i1 %204, label %349, label %336

336:                                              ; preds = %335
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  br i1 %340, label %343, label %345

343:                                              ; preds = %336
  %344 = add i32 %342, -1
  store i32 %344, i32* %341, align 4
  br label %345

345:                                              ; preds = %343, %336
  %346 = phi i32 [ %344, %343 ], [ %342, %336 ]
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #9
  br label %349

349:                                              ; preds = %335, %345, %348
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #9
  br label %930

350:                                              ; preds = %197
  %351 = bitcast %"class.blink::CallbackMethodRetriever"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %351) #9
  %352 = bitcast %"class.blink::CallbackMethodRetriever"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %352, i8 -86, i64 32, i1 false)
  call void @_ZN5blink23CallbackMethodRetrieverC1EPNS_20CallbackFunctionBaseE(%"class.blink::CallbackMethodRetriever"* nonnull %10, %"class.blink::CallbackFunctionBase"* %183) #9
  %353 = call %"class.v8::Object"* @_ZN5blink23CallbackMethodRetriever18GetPrototypeObjectERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %10, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %354 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %929

357:                                              ; preds = %350
  %358 = getelementptr inbounds %"class.blink::CallbackMethodRetriever", %"class.blink::CallbackMethodRetriever"* %10, i64 0, i32 3, i32 0
  %359 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %359) #9
  %360 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %361 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %360, i64* %361, align 8
  %362 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8** %362, align 8
  %363 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 7, i32* %363, align 8
  %364 = load %"class.v8::Object"*, %"class.v8::Object"** %358, align 8
  %365 = call %"class.v8::Function"* @_ZN5blink23CallbackMethodRetriever18GetFunctionOrThrowEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %10, %"class.v8::Object"* %364, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %359) #9
  %366 = load i32, i32* %354, align 8
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %929

368:                                              ; preds = %357
  %369 = bitcast %"class.v8::Function"* %365 to %"class.v8::Object"*
  %370 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %371 = bitcast i8* %370 to %"class.blink::V8BlinkAudioWorkletProcessCallback"*
  %372 = bitcast i8* %370 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %372, %"class.v8::Object"* %369) #9
  %373 = bitcast i8* %370 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink34V8BlinkAudioWorkletProcessCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %373, align 8
  %374 = getelementptr inbounds i8, i8* %370, i64 -4
  %375 = bitcast i8* %374 to i16*
  %376 = load atomic i16, i16* %375 monotonic, align 2
  %377 = or i16 %376, 1
  store atomic i16 %377, i16* %375 release, align 2
  %378 = bitcast %"class.blink::AudioWorkletProcessorDefinition"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #9
  %379 = call %"class.blink::AudioWorkletProcessorDefinition"* @_ZN5blink31AudioWorkletProcessorDefinition6CreateERKN3WTF6StringEPNS_39V8BlinkAudioWorkletProcessorConstructorEPNS_34V8BlinkAudioWorkletProcessCallbackE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::V8BlinkAudioWorkletProcessorConstructor"* %2, %"class.blink::V8BlinkAudioWorkletProcessCallback"* %371) #9
  store %"class.blink::AudioWorkletProcessorDefinition"* %379, %"class.blink::AudioWorkletProcessorDefinition"** %12, align 8
  %380 = getelementptr inbounds %"class.blink::V8BlinkAudioWorkletProcessorConstructor", %"class.blink::V8BlinkAudioWorkletProcessorConstructor"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %381 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %380, align 8
  %382 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %381, i64 0, i32 0
  %383 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %382, align 8
  %384 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %383) #9
  %385 = bitcast %"class.v8::TryCatch"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %385) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %385, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %13, %"class.v8::Isolate"* %383) #9
  %386 = load %"class.v8::Object"*, %"class.v8::Object"** %185, align 8
  %387 = icmp eq %"class.v8::Object"* %386, null
  br i1 %387, label %396, label %388

388:                                              ; preds = %368
  %389 = bitcast %"class.blink::ScriptState"** %380 to %"class.v8::internal::Isolate"***
  %390 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %389, align 8
  %391 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %390, align 8
  %392 = bitcast %"class.v8::Object"* %386 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %391, i64 %393) #9
  %395 = bitcast i64* %394 to %"class.v8::Object"*
  br label %396

396:                                              ; preds = %368, %388
  %397 = phi %"class.v8::Object"* [ %395, %388 ], [ null, %368 ]
  %398 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %383, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 20) #9
  %399 = icmp eq %"class.v8::String"* %398, null
  br i1 %399, label %400, label %401, !prof !2

400:                                              ; preds = %396
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %401

401:                                              ; preds = %396, %400
  %402 = bitcast %"class.v8::String"* %398 to %"class.v8::Value"*
  %403 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %397, %"class.v8::Context"* %384, %"class.v8::Value"* %402) #9
  %404 = icmp eq %"class.v8::Value"* %403, null
  br i1 %404, label %405, label %411

405:                                              ; preds = %401
  %406 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %13) #9
  %407 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %408 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %407, align 8
  %409 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %408, i64 5
  %410 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %409, align 8
  call void %410(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %406) #9
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %385) #9
  br label %928

411:                                              ; preds = %401
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %385) #9
  %412 = bitcast %"class.v8::Value"* %403 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = and i64 %413, 3
  %415 = icmp eq i64 %414, 1
  br i1 %415, label %416, label %432

416:                                              ; preds = %411
  %417 = add i64 %413, -1
  %418 = inttoptr i64 %417 to i32*
  %419 = load i32, i32* %418, align 4
  %420 = and i64 %413, -4294967296
  %421 = zext i32 %419 to i64
  %422 = or i64 %420, %421
  %423 = add i64 %422, 7
  %424 = inttoptr i64 %423 to i16*
  %425 = load i16, i16* %424, align 2
  %426 = icmp eq i16 %425, 67
  br i1 %426, label %427, label %432

427:                                              ; preds = %416
  %428 = add i64 %413, 23
  %429 = inttoptr i64 %428 to i32*
  %430 = load i32, i32* %429, align 4
  %431 = ashr i32 %430, 1
  switch i32 %431, label %432 [
    i32 5, label %912
    i32 3, label %912
  ]

432:                                              ; preds = %427, %416, %411
  %433 = bitcast %"class.blink::HeapVector.762"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %433) #9
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_20AudioParamDescriptorEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector.762"* nonnull sret %14, %"class.v8::Isolate"* %383, %"class.v8::Value"* nonnull %403, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %434 = load i32, i32* %354, align 8
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %437, label %436

436:                                              ; preds = %432
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %433) #9
  br label %928

437:                                              ; preds = %432
  %438 = bitcast %"class.blink::HeapVector.762"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %438) #9
  %439 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %440 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  %441 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %15, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %438, i8 0, i64 16, i1 false) #9
  %442 = bitcast %"class.WTF::HashSet.1081"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %442) #9
  %443 = getelementptr inbounds %"class.WTF::HashSet.1081", %"class.WTF::HashSet.1081"* %16, i64 0, i32 0, i32 0
  %444 = getelementptr inbounds %"class.WTF::HashSet.1081", %"class.WTF::HashSet.1081"* %16, i64 0, i32 0, i32 1
  %445 = bitcast %"class.WTF::HashSet.1081"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %445, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %442, i8 0, i64 20, i1 false) #9
  %446 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %447 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %446, align 8
  %448 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %449 = load i32, i32* %448, align 4
  %450 = zext i32 %449 to i64
  %451 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %447, i64 %450
  %452 = icmp eq i32 %449, 0
  br i1 %452, label %873, label %453

453:                                              ; preds = %437
  %454 = bitcast %"class.WTF::String"* %17 to i8*
  %455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %456 = getelementptr inbounds %"class.WTF::HashSet.1081", %"class.WTF::HashSet.1081"* %16, i64 0, i32 0
  %457 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %15, i64 0, i32 0
  %458 = bitcast %"class.WTF::String"* %18 to i8*
  %459 = bitcast %"class.WTF::StringAppend.1155"* %19 to i8*
  %460 = bitcast %"class.WTF::StringAppend.1156"* %20 to i8*
  %461 = bitcast %"class.WTF::StringAppend.1157"* %21 to i8*
  %462 = bitcast %"class.WTF::StringAppend.1157"* %21 to i64*
  %463 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %464 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %21, i64 0, i32 0, i32 1
  %465 = bitcast i8** %464 to i64*
  %466 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %21, i64 0, i32 1
  %467 = bitcast %"class.WTF::StringAppend.1156"* %5 to i8*
  %468 = bitcast %"class.WTF::StringAppend.1156"* %20 to i64*
  %469 = bitcast %"class.WTF::StringAppend.1156"* %5 to i64*
  %470 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %471 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %472 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %5, i64 0, i32 0, i32 0, i32 1
  %473 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %20, i64 0, i32 0, i32 0, i32 1
  %474 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %20, i64 0, i32 1, i32 0, i32 0
  %475 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %5, i64 0, i32 1, i32 0, i32 0
  %476 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %477 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %478 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %479 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %480 = bitcast i8** %473 to <2 x i64>*
  %481 = bitcast i8** %472 to <2 x i64>*
  br label %484

482:                                              ; preds = %870
  %483 = icmp eq %"class.blink::Member.768"* %872, %451
  br i1 %483, label %873, label %484

484:                                              ; preds = %453, %482
  %485 = phi %"class.blink::Member.768"* [ %447, %453 ], [ %872, %482 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %454) #9
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %455, align 8
  %486 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %485, i64 0, i32 0, i32 0
  %487 = load %"class.blink::AudioParamDescriptor"*, %"class.blink::AudioParamDescriptor"** %486, align 8
  %488 = getelementptr inbounds %"class.blink::AudioParamDescriptor", %"class.blink::AudioParamDescriptor"* %487, i64 0, i32 8, i32 0, i32 0
  %489 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %488, align 8
  store %"class.WTF::StringImpl"* %489, %"class.WTF::StringImpl"** %455, align 8
  %490 = icmp eq %"class.WTF::StringImpl"* %489, null
  br i1 %490, label %508, label %491

491:                                              ; preds = %484
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %489, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = load atomic i32, i32* %492 monotonic, align 4
  %494 = and i32 %493, 2
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %508

496:                                              ; preds = %491
  %497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %489, i64 0, i32 0
  %498 = load i32, i32* %497, align 4
  %499 = zext i32 %498 to i33
  %500 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %499, i33 1) #9
  %501 = extractvalue { i33, i1 } %500, 1
  %502 = extractvalue { i33, i1 } %500, 0
  %503 = icmp slt i33 %502, 0
  %504 = or i1 %501, %503
  br i1 %504, label %505, label %506, !prof !2

505:                                              ; preds = %496
  call void @llvm.trap() #9
  unreachable

506:                                              ; preds = %496
  %507 = trunc i33 %502 to i32
  store i32 %507, i32* %497, align 4
  br label %508

508:                                              ; preds = %484, %491, %506
  %509 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1082"* nonnull %456, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::String"* nonnull dereferenceable(8) %17) #9
  %510 = extractvalue { %"class.WTF::String"*, i8 } %509, 1
  %511 = and i8 %510, 1
  %512 = icmp eq i8 %511, 0
  br i1 %512, label %513, label %833

513:                                              ; preds = %508
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %458) #9
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %459) #9
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %460) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %461) #9
  %514 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %515 = icmp eq %"class.WTF::StringImpl"* %514, null
  br i1 %515, label %630, label %516

516:                                              ; preds = %513
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %518 = load atomic i32, i32* %517 monotonic, align 4
  %519 = and i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 0
  %522 = load i32, i32* %521, align 4
  br i1 %520, label %523, label %533

523:                                              ; preds = %516
  %524 = zext i32 %522 to i33
  %525 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %524, i33 1) #9
  %526 = extractvalue { i33, i1 } %525, 1
  %527 = extractvalue { i33, i1 } %525, 0
  %528 = icmp slt i33 %527, 0
  %529 = or i1 %526, %528
  br i1 %529, label %530, label %531, !prof !2

530:                                              ; preds = %523
  call void @llvm.trap() #9
  unreachable

531:                                              ; preds = %523
  %532 = trunc i33 %527 to i32
  store i32 %532, i32* %521, align 4
  br label %533

533:                                              ; preds = %531, %516
  %534 = phi i32 [ %532, %531 ], [ %522, %516 ]
  %535 = load atomic i32, i32* %517 monotonic, align 4
  %536 = and i32 %535, 2
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %538, label %548

538:                                              ; preds = %533
  %539 = zext i32 %534 to i33
  %540 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %539, i33 1) #9
  %541 = extractvalue { i33, i1 } %540, 1
  %542 = extractvalue { i33, i1 } %540, 0
  %543 = icmp slt i33 %542, 0
  %544 = or i1 %541, %543
  br i1 %544, label %545, label %546, !prof !2

545:                                              ; preds = %538
  call void @llvm.trap() #9
  unreachable

546:                                              ; preds = %538
  %547 = trunc i33 %542 to i32
  store i32 %547, i32* %521, align 4
  br label %548

548:                                              ; preds = %546, %533
  %549 = phi i32 [ %547, %546 ], [ %534, %533 ]
  %550 = load atomic i32, i32* %517 monotonic, align 4
  %551 = and i32 %550, 2
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %553, label %555

553:                                              ; preds = %548
  %554 = add i32 %549, -1
  store i32 %554, i32* %521, align 4
  br label %555

555:                                              ; preds = %553, %548
  %556 = phi i32 [ %554, %553 ], [ %549, %548 ]
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %559

558:                                              ; preds = %555
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %514) #9
  br label %559

559:                                              ; preds = %555, %558
  %560 = load atomic i32, i32* %517 monotonic, align 4, !noalias !9
  %561 = and i32 %560, 2
  %562 = icmp eq i32 %561, 0
  %563 = load i32, i32* %521, align 4
  br i1 %562, label %564, label %574

564:                                              ; preds = %559
  %565 = zext i32 %563 to i33
  %566 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %565, i33 1) #9
  %567 = extractvalue { i33, i1 } %566, 1
  %568 = extractvalue { i33, i1 } %566, 0
  %569 = icmp slt i33 %568, 0
  %570 = or i1 %567, %569
  br i1 %570, label %571, label %572, !prof !2

571:                                              ; preds = %564
  call void @llvm.trap() #9, !noalias !9
  unreachable

572:                                              ; preds = %564
  %573 = trunc i33 %568 to i32
  store i32 %573, i32* %521, align 4, !noalias !9
  br label %574

574:                                              ; preds = %559, %572
  %575 = phi i32 [ %573, %572 ], [ %563, %559 ]
  %576 = load atomic i32, i32* %517 monotonic, align 4, !noalias !9
  %577 = and i32 %576, 2
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %589

579:                                              ; preds = %574
  %580 = zext i32 %575 to i33
  %581 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %580, i33 1) #9
  %582 = extractvalue { i33, i1 } %581, 1
  %583 = extractvalue { i33, i1 } %581, 0
  %584 = icmp slt i33 %583, 0
  %585 = or i1 %582, %584
  br i1 %585, label %586, label %587, !prof !2

586:                                              ; preds = %579
  call void @llvm.trap() #9, !noalias !9
  unreachable

587:                                              ; preds = %579
  %588 = trunc i33 %583 to i32
  store i32 %588, i32* %521, align 4, !noalias !9
  br label %589

589:                                              ; preds = %587, %574
  %590 = phi i32 [ %588, %587 ], [ %575, %574 ]
  %591 = load atomic i32, i32* %517 monotonic, align 4, !noalias !9
  %592 = and i32 %591, 2
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %596

594:                                              ; preds = %589
  %595 = add i32 %590, -1
  store i32 %595, i32* %521, align 4, !noalias !9
  br label %596

596:                                              ; preds = %594, %589
  %597 = phi i32 [ %595, %594 ], [ %590, %589 ]
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %599, label %600

599:                                              ; preds = %596
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %514) #9, !noalias !9
  br label %600

600:                                              ; preds = %599, %596
  %601 = load atomic i32, i32* %517 monotonic, align 4, !noalias !12
  %602 = and i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = load i32, i32* %521, align 4
  br i1 %603, label %605, label %615

605:                                              ; preds = %600
  %606 = zext i32 %604 to i33
  %607 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %606, i33 1) #9
  %608 = extractvalue { i33, i1 } %607, 1
  %609 = extractvalue { i33, i1 } %607, 0
  %610 = icmp slt i33 %609, 0
  %611 = or i1 %608, %610
  br i1 %611, label %612, label %613, !prof !2

612:                                              ; preds = %605
  call void @llvm.trap() #9, !noalias !12
  unreachable

613:                                              ; preds = %605
  %614 = trunc i33 %609 to i32
  store i32 %614, i32* %521, align 4, !noalias !12
  br label %615

615:                                              ; preds = %600, %613
  %616 = phi i32 [ %614, %613 ], [ %604, %600 ]
  store i64 ptrtoint ([25 x i8]* @.str.7 to i64), i64* %462, align 8, !alias.scope !12
  store %"class.WTF::StringImpl"* %514, %"class.WTF::StringImpl"** %463, align 8, !alias.scope !12
  %617 = load atomic i32, i32* %517 monotonic, align 4, !noalias !12
  %618 = and i32 %617, 2
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %631

620:                                              ; preds = %615
  %621 = zext i32 %616 to i33
  %622 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %621, i33 1) #9
  %623 = extractvalue { i33, i1 } %622, 1
  %624 = extractvalue { i33, i1 } %622, 0
  %625 = icmp slt i33 %624, 0
  %626 = or i1 %623, %625
  br i1 %626, label %627, label %628, !prof !2

627:                                              ; preds = %620
  call void @llvm.trap() #9, !noalias !12
  unreachable

628:                                              ; preds = %620
  %629 = trunc i33 %624 to i32
  store i32 %629, i32* %521, align 4, !noalias !12
  br label %631

630:                                              ; preds = %513
  store i64 ptrtoint ([25 x i8]* @.str.7 to i64), i64* %462, align 8, !alias.scope !12
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %463, align 8, !alias.scope !12
  store i64 ptrtoint ([60 x i8]* @.str.8 to i64), i64* %465, align 8, !alias.scope !12
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i8** %466, align 8, !alias.scope !12
  br label %642

631:                                              ; preds = %628, %615
  %632 = phi i32 [ %629, %628 ], [ %616, %615 ]
  store i64 ptrtoint ([60 x i8]* @.str.8 to i64), i64* %465, align 8, !alias.scope !12
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i8** %466, align 8, !alias.scope !12
  %633 = load atomic i32, i32* %517 monotonic, align 4, !noalias !12
  %634 = and i32 %633, 2
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %636, label %638

636:                                              ; preds = %631
  %637 = add i32 %632, -1
  store i32 %637, i32* %521, align 4, !noalias !12
  br label %638

638:                                              ; preds = %636, %631
  %639 = phi i32 [ %637, %636 ], [ %632, %631 ]
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %641, label %642

641:                                              ; preds = %638
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %514) #9, !noalias !12
  br label %642

642:                                              ; preds = %630, %638, %641
  %643 = phi i1 [ true, %630 ], [ false, %638 ], [ false, %641 ]
  %644 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %645 = icmp eq %"class.WTF::StringImpl"* %644, null
  br i1 %645, label %663, label %646

646:                                              ; preds = %642
  %647 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %644, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %648 = load atomic i32, i32* %647 monotonic, align 4
  %649 = and i32 %648, 2
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %651, label %663

651:                                              ; preds = %646
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %644, i64 0, i32 0
  %653 = load i32, i32* %652, align 4
  %654 = zext i32 %653 to i33
  %655 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %654, i33 1) #9
  %656 = extractvalue { i33, i1 } %655, 1
  %657 = extractvalue { i33, i1 } %655, 0
  %658 = icmp slt i33 %657, 0
  %659 = or i1 %656, %658
  br i1 %659, label %660, label %661, !prof !2

660:                                              ; preds = %651
  call void @llvm.trap() #9
  unreachable

661:                                              ; preds = %651
  %662 = trunc i33 %657 to i32
  store i32 %662, i32* %652, align 4
  br label %663

663:                                              ; preds = %642, %646, %661
  call void @_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.1156"* nonnull sret %20, %"class.WTF::StringAppend.1157"* nonnull dereferenceable(32) %21, %"class.WTF::StringImpl"* %644)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %467)
  %664 = load i64, i64* %468, align 8, !noalias !15
  store i64 %664, i64* %469, align 8, !noalias !15
  %665 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %470, align 8, !noalias !15
  store %"class.WTF::StringImpl"* %665, %"class.WTF::StringImpl"** %471, align 8, !noalias !15
  %666 = icmp eq %"class.WTF::StringImpl"* %665, null
  br i1 %666, label %684, label %667

667:                                              ; preds = %663
  %668 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %665, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %669 = load atomic i32, i32* %668 monotonic, align 4
  %670 = and i32 %669, 2
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %672, label %684

672:                                              ; preds = %667
  %673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %665, i64 0, i32 0
  %674 = load i32, i32* %673, align 4
  %675 = zext i32 %674 to i33
  %676 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %675, i33 1) #9
  %677 = extractvalue { i33, i1 } %676, 1
  %678 = extractvalue { i33, i1 } %676, 0
  %679 = icmp slt i33 %678, 0
  %680 = or i1 %677, %679
  br i1 %680, label %681, label %682, !prof !2

681:                                              ; preds = %672
  call void @llvm.trap() #9
  unreachable

682:                                              ; preds = %672
  %683 = trunc i33 %678 to i32
  store i32 %683, i32* %673, align 4
  br label %684

684:                                              ; preds = %682, %667, %663
  %685 = load <2 x i64>, <2 x i64>* %480, align 8, !noalias !15
  store <2 x i64> %685, <2 x i64>* %481, align 8, !noalias !15
  %686 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8, !noalias !15
  store %"class.WTF::StringImpl"* %686, %"class.WTF::StringImpl"** %475, align 8, !noalias !15
  %687 = icmp eq %"class.WTF::StringImpl"* %686, null
  br i1 %687, label %705, label %688

688:                                              ; preds = %684
  %689 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %686, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %690 = load atomic i32, i32* %689 monotonic, align 4
  %691 = and i32 %690, 2
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %693, label %705

693:                                              ; preds = %688
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %686, i64 0, i32 0
  %695 = load i32, i32* %694, align 4
  %696 = zext i32 %695 to i33
  %697 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %696, i33 1) #9
  %698 = extractvalue { i33, i1 } %697, 1
  %699 = extractvalue { i33, i1 } %697, 0
  %700 = icmp slt i33 %699, 0
  %701 = or i1 %698, %700
  br i1 %701, label %702, label %703, !prof !2

702:                                              ; preds = %693
  call void @llvm.trap() #9
  unreachable

703:                                              ; preds = %693
  %704 = trunc i33 %699 to i32
  store i32 %704, i32* %694, align 4
  br label %705

705:                                              ; preds = %684, %688, %703
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_EC2ES7_S2_(%"class.WTF::StringAppend.1155"* nonnull %19, %"class.WTF::StringAppend.1156"* nonnull byval(%"class.WTF::StringAppend.1156") align 8 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %467)
  %706 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1155"* nonnull %19)
  store %"class.WTF::StringImpl"* %706, %"class.WTF::StringImpl"** %476, align 8
  %707 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %477, align 8
  %708 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %707, align 8
  call void %708(%"class.blink::ExceptionState"* %3, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %18) #9
  %709 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %476, align 8
  %710 = icmp eq %"class.WTF::StringImpl"* %709, null
  br i1 %710, label %724, label %711

711:                                              ; preds = %705
  %712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %713 = load atomic i32, i32* %712 monotonic, align 4
  %714 = and i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 0
  %717 = load i32, i32* %716, align 4
  br i1 %715, label %718, label %720

718:                                              ; preds = %711
  %719 = add i32 %717, -1
  store i32 %719, i32* %716, align 4
  br label %720

720:                                              ; preds = %718, %711
  %721 = phi i32 [ %719, %718 ], [ %717, %711 ]
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %723, label %724

723:                                              ; preds = %720
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %709) #9
  br label %724

724:                                              ; preds = %705, %720, %723
  %725 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  %726 = icmp eq %"class.WTF::StringImpl"* %725, null
  br i1 %726, label %740, label %727

727:                                              ; preds = %724
  %728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %725, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %729 = load atomic i32, i32* %728 monotonic, align 4
  %730 = and i32 %729, 2
  %731 = icmp eq i32 %730, 0
  %732 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %725, i64 0, i32 0
  %733 = load i32, i32* %732, align 4
  br i1 %731, label %734, label %736

734:                                              ; preds = %727
  %735 = add i32 %733, -1
  store i32 %735, i32* %732, align 4
  br label %736

736:                                              ; preds = %734, %727
  %737 = phi i32 [ %735, %734 ], [ %733, %727 ]
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %739, label %740

739:                                              ; preds = %736
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %725) #9
  br label %740

740:                                              ; preds = %739, %736, %724
  %741 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %479, align 8
  %742 = icmp eq %"class.WTF::StringImpl"* %741, null
  br i1 %742, label %756, label %743

743:                                              ; preds = %740
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load atomic i32, i32* %744 monotonic, align 4
  %746 = and i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 0
  %749 = load i32, i32* %748, align 4
  br i1 %747, label %750, label %752

750:                                              ; preds = %743
  %751 = add i32 %749, -1
  store i32 %751, i32* %748, align 4
  br label %752

752:                                              ; preds = %750, %743
  %753 = phi i32 [ %751, %750 ], [ %749, %743 ]
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %756

755:                                              ; preds = %752
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %741) #9
  br label %756

756:                                              ; preds = %740, %752, %755
  %757 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  %758 = icmp eq %"class.WTF::StringImpl"* %757, null
  br i1 %758, label %772, label %759

759:                                              ; preds = %756
  %760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %757, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %761 = load atomic i32, i32* %760 monotonic, align 4
  %762 = and i32 %761, 2
  %763 = icmp eq i32 %762, 0
  %764 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %757, i64 0, i32 0
  %765 = load i32, i32* %764, align 4
  br i1 %763, label %766, label %768

766:                                              ; preds = %759
  %767 = add i32 %765, -1
  store i32 %767, i32* %764, align 4
  br label %768

768:                                              ; preds = %766, %759
  %769 = phi i32 [ %767, %766 ], [ %765, %759 ]
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %771, label %772

771:                                              ; preds = %768
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %757) #9
  br label %772

772:                                              ; preds = %771, %768, %756
  %773 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %470, align 8
  %774 = icmp eq %"class.WTF::StringImpl"* %773, null
  br i1 %774, label %788, label %775

775:                                              ; preds = %772
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %773, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %777 = load atomic i32, i32* %776 monotonic, align 4
  %778 = and i32 %777, 2
  %779 = icmp eq i32 %778, 0
  %780 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %773, i64 0, i32 0
  %781 = load i32, i32* %780, align 4
  br i1 %779, label %782, label %784

782:                                              ; preds = %775
  %783 = add i32 %781, -1
  store i32 %783, i32* %780, align 4
  br label %784

784:                                              ; preds = %782, %775
  %785 = phi i32 [ %783, %782 ], [ %781, %775 ]
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %787, label %788

787:                                              ; preds = %784
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %773) #9
  br label %788

788:                                              ; preds = %772, %784, %787
  %789 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %463, align 8
  %790 = icmp eq %"class.WTF::StringImpl"* %789, null
  br i1 %790, label %804, label %791

791:                                              ; preds = %788
  %792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %793 = load atomic i32, i32* %792 monotonic, align 4
  %794 = and i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %797 = load i32, i32* %796, align 4
  br i1 %795, label %798, label %800

798:                                              ; preds = %791
  %799 = add i32 %797, -1
  store i32 %799, i32* %796, align 4
  br label %800

800:                                              ; preds = %798, %791
  %801 = phi i32 [ %799, %798 ], [ %797, %791 ]
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %803, label %804

803:                                              ; preds = %800
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %789) #9
  br label %804

804:                                              ; preds = %788, %800, %803
  br i1 %643, label %818, label %805

805:                                              ; preds = %804
  %806 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %807 = load atomic i32, i32* %806 monotonic, align 4
  %808 = and i32 %807, 2
  %809 = icmp eq i32 %808, 0
  %810 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 0
  %811 = load i32, i32* %810, align 4
  br i1 %809, label %812, label %814

812:                                              ; preds = %805
  %813 = add i32 %811, -1
  store i32 %813, i32* %810, align 4
  br label %814

814:                                              ; preds = %812, %805
  %815 = phi i32 [ %813, %812 ], [ %811, %805 ]
  %816 = icmp eq i32 %815, 0
  br i1 %816, label %817, label %818

817:                                              ; preds = %814
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %514) #9
  br label %818

818:                                              ; preds = %804, %814, %817
  br i1 %515, label %832, label %819

819:                                              ; preds = %818
  %820 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %821 = load atomic i32, i32* %820 monotonic, align 4
  %822 = and i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %514, i64 0, i32 0
  %825 = load i32, i32* %824, align 4
  br i1 %823, label %826, label %828

826:                                              ; preds = %819
  %827 = add i32 %825, -1
  store i32 %827, i32* %824, align 4
  br label %828

828:                                              ; preds = %826, %819
  %829 = phi i32 [ %827, %826 ], [ %825, %819 ]
  %830 = icmp eq i32 %829, 0
  br i1 %830, label %831, label %832

831:                                              ; preds = %828
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %514) #9
  br label %832

832:                                              ; preds = %818, %828, %831
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %461) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %460) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %459) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %458) #9
  br label %853

833:                                              ; preds = %508
  %834 = load i32, i32* %441, align 4
  %835 = load i32, i32* %440, align 8
  %836 = icmp eq i32 %834, %835
  br i1 %836, label %852, label %837, !prof !2

837:                                              ; preds = %833
  %838 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %439, align 8
  %839 = zext i32 %834 to i64
  %840 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %838, i64 %839
  %841 = bitcast %"class.blink::Member.768"* %485 to i64*
  %842 = load i64, i64* %841, align 8
  %843 = bitcast %"class.blink::Member.768"* %840 to i64*
  store atomic i64 %842, i64* %843 monotonic, align 8
  %844 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %849, label %846

846:                                              ; preds = %837
  %847 = inttoptr i64 %842 to i8*
  %848 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %847) #9
  br label %849

849:                                              ; preds = %846, %837
  %850 = load i32, i32* %441, align 4
  %851 = add i32 %850, 1
  store i32 %851, i32* %441, align 4
  br label %853

852:                                              ; preds = %833
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.765"* nonnull %457, %"class.blink::Member.768"* dereferenceable(8) %485) #9
  br label %853

853:                                              ; preds = %852, %849, %832
  %854 = phi i32 [ 1, %832 ], [ 0, %849 ], [ 0, %852 ]
  %855 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %856 = icmp eq %"class.WTF::StringImpl"* %855, null
  br i1 %856, label %870, label %857

857:                                              ; preds = %853
  %858 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %855, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %859 = load atomic i32, i32* %858 monotonic, align 4
  %860 = and i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %855, i64 0, i32 0
  %863 = load i32, i32* %862, align 4
  br i1 %861, label %864, label %866

864:                                              ; preds = %857
  %865 = add i32 %863, -1
  store i32 %865, i32* %862, align 4
  br label %866

866:                                              ; preds = %864, %857
  %867 = phi i32 [ %865, %864 ], [ %863, %857 ]
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %869, label %870

869:                                              ; preds = %866
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %855) #9
  br label %870

870:                                              ; preds = %853, %866, %869
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %454) #9
  %871 = icmp eq i32 %854, 0
  %872 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %485, i64 1
  br i1 %871, label %482, label %875

873:                                              ; preds = %482, %437
  %874 = load %"class.blink::AudioWorkletProcessorDefinition"*, %"class.blink::AudioWorkletProcessorDefinition"** %12, align 8
  call void @_ZN5blink31AudioWorkletProcessorDefinition24SetAudioParamDescriptorsERKNS_10HeapVectorINS_6MemberINS_20AudioParamDescriptorEEELj0EEE(%"class.blink::AudioWorkletProcessorDefinition"* %874, %"class.blink::HeapVector.762"* nonnull dereferenceable(16) %15) #9
  br label %875

875:                                              ; preds = %870, %873
  %876 = phi i32 [ 0, %873 ], [ 1, %870 ]
  %877 = load %"class.WTF::String"*, %"class.WTF::String"** %443, align 8
  %878 = icmp eq %"class.WTF::String"* %877, null
  br i1 %878, label %910, label %879, !prof !18

879:                                              ; preds = %875
  %880 = load i32, i32* %444, align 8
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %908, label %882

882:                                              ; preds = %879
  %883 = zext i32 %880 to i64
  br label %884

884:                                              ; preds = %905, %882
  %885 = phi i64 [ 0, %882 ], [ %906, %905 ]
  %886 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %877, i64 %885
  %887 = bitcast %"class.WTF::String"* %886 to i8**
  %888 = load i8*, i8** %887, align 8
  %889 = bitcast i8* %888 to %"class.WTF::StringImpl"*
  %890 = ptrtoint i8* %888 to i64
  switch i64 %890, label %891 [
    i64 -1, label %905
    i64 0, label %905
  ]

891:                                              ; preds = %884
  %892 = getelementptr inbounds i8, i8* %888, i64 8
  %893 = bitcast i8* %892 to i32*
  %894 = load atomic i32, i32* %893 monotonic, align 4
  %895 = and i32 %894, 2
  %896 = icmp eq i32 %895, 0
  %897 = bitcast i8* %888 to i32*
  %898 = load i32, i32* %897, align 4
  br i1 %896, label %899, label %901

899:                                              ; preds = %891
  %900 = add i32 %898, -1
  store i32 %900, i32* %897, align 4
  br label %901

901:                                              ; preds = %899, %891
  %902 = phi i32 [ %900, %899 ], [ %898, %891 ]
  %903 = icmp eq i32 %902, 0
  br i1 %903, label %904, label %905

904:                                              ; preds = %901
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %889) #9
  br label %905

905:                                              ; preds = %904, %901, %884, %884
  %906 = add nuw nsw i64 %885, 1
  %907 = icmp eq i64 %906, %883
  br i1 %907, label %908, label %884

908:                                              ; preds = %905, %879
  %909 = bitcast %"class.WTF::String"* %877 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %909) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %443, align 8
  br label %910

910:                                              ; preds = %908, %875
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %442) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %438) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %433) #9
  %911 = icmp eq i32 %876, 0
  br i1 %911, label %912, label %928

912:                                              ; preds = %427, %427, %910
  %913 = call { %"struct.WTF::KeyValuePair.751"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.749"* %31, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::AudioWorkletProcessorDefinition"** nonnull dereferenceable(8) %12) #9
  %914 = extractvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %913, 1
  %915 = and i8 %914, 1
  %916 = icmp eq i8 %915, 0
  br i1 %916, label %917, label %928

917:                                              ; preds = %912
  %918 = extractvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %913, 0
  %919 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %918, i64 0, i32 1
  %920 = load %"class.blink::AudioWorkletProcessorDefinition"*, %"class.blink::AudioWorkletProcessorDefinition"** %12, align 8
  %921 = ptrtoint %"class.blink::AudioWorkletProcessorDefinition"* %920 to i64
  %922 = bitcast %"class.blink::Member.752"* %919 to i64*
  store atomic i64 %921, i64* %922 monotonic, align 8
  %923 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %924 = icmp eq i32 %923, 0
  br i1 %924, label %928, label %925

925:                                              ; preds = %917
  %926 = bitcast %"class.blink::AudioWorkletProcessorDefinition"* %920 to i8*
  %927 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %926) #9
  br label %928

928:                                              ; preds = %925, %917, %912, %436, %405, %910
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #9
  br label %929

929:                                              ; preds = %357, %350, %928
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %351) #9
  br label %930

930:                                              ; preds = %929, %29, %181, %349
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.1508"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #9
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i8* %8) #9
  %9 = bitcast %"class.WTF::StringTypeAdapter.1508"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #9
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %2, i8* %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #9
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #9
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #9
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #9
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #9
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #9
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #9
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink23CallbackMethodRetrieverC1EPNS_20CallbackFunctionBaseE(%"class.blink::CallbackMethodRetriever"*, %"class.blink::CallbackFunctionBase"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink23CallbackMethodRetriever18GetPrototypeObjectERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.blink::AudioWorkletProcessorDefinition"* @_ZN5blink31AudioWorkletProcessorDefinition6CreateERKN3WTF6StringEPNS_39V8BlinkAudioWorkletProcessorConstructorEPNS_34V8BlinkAudioWorkletProcessCallbackE(%"class.WTF::String"* dereferenceable(8), %"class.blink::V8BlinkAudioWorkletProcessorConstructor"*, %"class.blink::V8BlinkAudioWorkletProcessCallback"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_20AudioParamDescriptorEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector.762"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_20AudioParamDescriptorEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector.762"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21, i64 0, i64 0)) #9
  %12 = bitcast %"class.blink::HeapVector.762"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector.762"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.22, i64 0, i64 0)) #9
  %26 = bitcast %"class.blink::HeapVector.762"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_20AudioParamDescriptorEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector.762"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #9
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKS9_SA_(%"class.WTF::StringAppend.1156"* noalias sret, %"class.WTF::StringAppend.1157"* dereferenceable(32), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1157", align 8
  %5 = bitcast %"class.WTF::StringAppend.1157"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1157"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #9
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #9
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %4, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %1, i64 0, i32 0, i32 1
  %32 = bitcast i8** %31 to <2 x i64>*
  %33 = load <2 x i64>, <2 x i64>* %32, align 8
  %34 = bitcast i8** %30 to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EC2ES6_S3_(%"class.WTF::StringAppend.1156"* %0, %"class.WTF::StringAppend.1157"* nonnull byval(%"class.WTF::StringAppend.1157") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EC2ES6_S3_(%"class.WTF::StringAppend.1156"* %0, %"class.WTF::StringAppend.1157"* nonnull byval(%"class.WTF::StringAppend.1157") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1155"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %8 = alloca i8*, align 8
  %9 = alloca i16*, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1508"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %7, i8* %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %17 = bitcast %"class.WTF::StringTypeAdapter.1508"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false) #9
  %19 = load i8*, i8** %18, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %4, i8* %19) #9
  %20 = bitcast %"class.WTF::StringTypeAdapter.1508"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #9
  %22 = load i8*, i8** %21, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i8* %22) #9
  %23 = bitcast %"class.WTF::StringTypeAdapter.1508"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #9
  %25 = load i8*, i8** %24, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %2, i8* %25) #9
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %30 = select i1 %28, %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"* %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  br i1 %34, label %35, label %36

35:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %84

36:                                               ; preds = %1
  %37 = icmp eq %"class.WTF::StringImpl"* %15, null
  %38 = select i1 %37, %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"* %15
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br i1 %42, label %84, label %43

43:                                               ; preds = %36
  %44 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %45 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1155"* %0)
  %46 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %45, i8** nonnull dereferenceable(8) %8) #9
  %47 = load i8*, i8** %8, align 8
  %48 = bitcast %"class.WTF::StringTypeAdapter.1508"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false) #9
  %49 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %6, i8* %49) #9
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E7WriteToEPh(%"class.WTF::StringAppend.1156"* %10, i8* %47) #9
  %50 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1156"* %10) #9
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %47, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1508"* nonnull %6, i8* %52) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #9
  %53 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %53, label %125, label %54

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %71

61:                                               ; preds = %54
  %62 = zext i32 %60 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #9
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %61
  call void @llvm.trap() #9
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %59, align 4
  br label %71

71:                                               ; preds = %54, %69
  %72 = phi i32 [ %70, %69 ], [ %60, %54 ]
  %73 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %74 = load atomic i32, i32* %55 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %79 = add i32 %72, -1
  store i32 %79, i32* %78, align 4
  br label %80

80:                                               ; preds = %77, %71
  %81 = phi i32 [ %79, %77 ], [ %72, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %125

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #9
  br label %125

84:                                               ; preds = %36, %35
  %85 = bitcast i16** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %9, align 8
  %86 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1155"* %0)
  %87 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %86, i16** nonnull dereferenceable(8) %9) #9
  %88 = load i16*, i16** %9, align 8
  %89 = bitcast %"class.WTF::StringTypeAdapter.1508"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false) #9
  %90 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %5, i8* %90) #9
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E7WriteToEPDs(%"class.WTF::StringAppend.1156"* %10, i16* %88) #9
  %91 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1156"* %10) #9
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %88, i64 %92
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1508"* nonnull %5, i16* %93) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #9
  %94 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %94, label %125, label %95

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %112

102:                                              ; preds = %95
  %103 = zext i32 %101 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #9
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %102
  call void @llvm.trap() #9
  unreachable

110:                                              ; preds = %102
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %100, align 4
  br label %112

112:                                              ; preds = %95, %110
  %113 = phi i32 [ %111, %110 ], [ %101, %95 ]
  %114 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %115 = load atomic i32, i32* %96 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %120 = add i32 %113, -1
  store i32 %120, i32* %119, align 4
  br label %121

121:                                              ; preds = %118, %112
  %122 = phi i32 [ %120, %118 ], [ %113, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %125

125:                                              ; preds = %124, %121, %84, %83, %80, %43
  %126 = phi i8* [ %44, %43 ], [ %44, %80 ], [ %44, %83 ], [ %85, %84 ], [ %85, %121 ], [ %85, %124 ]
  %127 = phi i64 [ 0, %43 ], [ %73, %80 ], [ %73, %83 ], [ 0, %84 ], [ %114, %121 ], [ %114, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #9
  %128 = inttoptr i64 %127 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %128
}

declare void @_ZN5blink31AudioWorkletProcessorDefinition24SetAudioParamDescriptorsERKNS_10HeapVectorINS_6MemberINS_20AudioParamDescriptorEEELj0EEE(%"class.blink::AudioWorkletProcessorDefinition"*, %"class.blink::HeapVector.762"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioWorkletProcessor"* @_ZN5blink23AudioWorkletGlobalScope15CreateProcessorERKN3WTF6StringENS_18MessagePortChannelE13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::AudioWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::MessagePortChannel"*, %"class.blink::SerializedScriptValue"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::SerializedScriptValue::DeserializeOptions", align 8
  %6 = alloca %"class.blink::MessagePortChannel", align 8
  %7 = alloca %"class.blink::ScriptState::Scope", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = alloca %"class.base::AutoReset", align 8
  %10 = alloca %"class.blink::ScriptValue", align 8
  %11 = alloca %"class.blink::ScriptValue", align 8
  %12 = alloca %"class.v8::Maybe", align 8
  %13 = alloca %"class.blink::AudioWorkletProcessor"*, align 8
  %14 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = tail call %"struct.WTF::KeyValuePair.751"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.749"* %14, %"class.WTF::String"* dereferenceable(8) %1) #9
  %16 = icmp eq %"struct.WTF::KeyValuePair.751"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %15, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::AudioWorkletProcessorDefinition"*, %"class.blink::AudioWorkletProcessorDefinition"** %18, align 8
  br label %20

20:                                               ; preds = %4, %17
  %21 = phi %"class.blink::AudioWorkletProcessorDefinition"* [ %19, %17 ], [ null, %4 ]
  %22 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 0, i32 0, i32 11, i32 0, i32 0
  %23 = load %"class.blink::WorkerOrWorkletScriptController"*, %"class.blink::WorkerOrWorkletScriptController"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::WorkerOrWorkletScriptController", %"class.blink::WorkerOrWorkletScriptController"* %23, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %24, align 8
  %26 = bitcast %"class.blink::ScriptState::Scope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %7, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %7, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %25, i64 0, i32 0
  %30 = bitcast %"class.blink::ScriptState::Scope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %28, %"class.v8::Isolate"* %31) #9
  %32 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.v8::Context"*, %"class.v8::Context"** %32, align 8
  %34 = icmp eq %"class.v8::Context"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = bitcast %"class.blink::ScriptState"* %25 to %"class.v8::internal::Isolate"**
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %36, align 8
  %38 = bitcast %"class.v8::Context"* %33 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %37, i64 %39) #9
  %41 = bitcast i64* %40 to %"class.v8::Context"*
  br label %42

42:                                               ; preds = %20, %35
  %43 = phi %"class.v8::Context"* [ %41, %35 ], [ null, %20 ]
  store %"class.v8::Context"* %43, %"class.v8::Context"** %27, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %43) #9
  %44 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %45 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %45) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %44) #9
  call void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"* nonnull %8, i1 zeroext true) #9
  %46 = bitcast %"class.base::AutoReset"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.base::AutoReset", %"class.base::AutoReset"* %9, i64 0, i32 0
  %48 = getelementptr inbounds %"class.base::AutoReset", %"class.base::AutoReset"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 5
  %50 = bitcast %"class.blink::MessagePortChannel"* %6 to i8*
  %51 = bitcast %"class.base::AutoReset"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %52 = call noalias i8* @malloc(i64 16) #9
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* nonnull %6, %"class.blink::MessagePortChannel"* dereferenceable(8) %2) #9
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %42
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #9
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  call void @llvm.trap() #9
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %42, %57, %72
  %75 = getelementptr inbounds i8, i8* %52, i64 8
  %76 = bitcast i8* %75 to %"class.blink::MessagePortChannel"*
  call void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"* %76, %"class.blink::MessagePortChannel"* nonnull dereferenceable(8) %6) #9
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  %77 = ptrtoint i8* %52 to i64
  store %"class.std::__1::unique_ptr.781"* %49, %"class.std::__1::unique_ptr.781"** %47, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.781"* %49 to i64*
  %79 = load i64, i64* %78, align 8
  store i64 %77, i64* %78, align 8
  %80 = bitcast %"class.blink::ProcessorCreationParams"** %48 to i64*
  store i64 %79, i64* %80, align 8
  %81 = bitcast %"class.blink::ScriptValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #9
  %82 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %10, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %10, i64 0, i32 1, i32 1, i32 0
  %84 = bitcast %"struct.blink::SerializedScriptValue::DeserializeOptions"* %5 to i8*
  %85 = bitcast %"class.blink::ScriptValue"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #9
  %86 = call %"class.v8::Value"* @_ZN5blink21SerializedScriptValue11DeserializeEPN2v87IsolateERKNS0_18DeserializeOptionsE(%"class.blink::SerializedScriptValue"* %3, %"class.v8::Isolate"* %44, %"struct.blink::SerializedScriptValue::DeserializeOptions"* nonnull dereferenceable(16) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #9
  %87 = load %"class.v8::Context"*, %"class.v8::Context"** %32, align 8
  %88 = icmp eq %"class.v8::Context"* %87, null
  br i1 %88, label %96, label %89

89:                                               ; preds = %74
  %90 = bitcast %"class.blink::ScriptState"* %25 to %"class.v8::internal::Isolate"**
  %91 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %90, align 8
  %92 = bitcast %"class.v8::Context"* %87 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %91, i64 %93) #9
  %95 = bitcast i64* %94 to %"class.v8::Context"*
  br label %96

96:                                               ; preds = %74, %89
  %97 = phi %"class.v8::Context"* [ %95, %89 ], [ null, %74 ]
  %98 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %97) #9
  store %"class.v8::Isolate"* %44, %"class.v8::Isolate"** %82, align 8
  %99 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %10, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %99, %"class.v8::Isolate"* %44, %"class.v8::Value"* %86) #9
  %100 = bitcast %"class.blink::ScriptValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #9
  %101 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %11, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 24, i1 false) #9
  %102 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #9
  %103 = getelementptr inbounds %"class.blink::AudioWorkletProcessorDefinition", %"class.blink::AudioWorkletProcessorDefinition"* %21, i64 0, i32 3, i32 0, i32 0
  %104 = load %"class.blink::V8BlinkAudioWorkletProcessorConstructor"*, %"class.blink::V8BlinkAudioWorkletProcessorConstructor"** %103, align 8
  call void @_ZN5blink39V8BlinkAudioWorkletProcessorConstructor9ConstructERKNS_11ScriptValueE(%"class.v8::Maybe"* nonnull sret %12, %"class.blink::V8BlinkAudioWorkletProcessorConstructor"* %104, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %10) #9
  %105 = load i8, i8* %102, align 8, !range !19
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %117, label %107, !prof !2

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %12, i64 0, i32 1
  %109 = bitcast %"class.blink::ScriptValue"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.blink::ScriptValue"* %11 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %11, i64 0, i32 1
  %113 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %12, i64 0, i32 1, i32 1
  %114 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %112, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %113) #9
  %115 = load i8, i8* %102, align 8, !range !19
  %116 = icmp ne i8 %115, 0
  br label %117

117:                                              ; preds = %96, %107
  %118 = phi i1 [ false, %96 ], [ %116, %107 ]
  %119 = getelementptr inbounds %"class.v8::Maybe", %"class.v8::Maybe"* %12, i64 0, i32 1, i32 1, i32 1, i32 0
  %120 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %119, align 8
  %121 = icmp eq %"class.blink::DOMWrapperWorld"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %120, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #9
  %124 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %120) #9
  %128 = bitcast %"class.blink::DOMWrapperWorld"* %120 to i8*
  call void @free(i8* %128) #9
  br label %129

129:                                              ; preds = %117, %122, %127
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #9
  br i1 %118, label %130, label %186

130:                                              ; preds = %129
  %131 = bitcast %"class.blink::AudioWorkletProcessor"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #9
  store %"class.blink::AudioWorkletProcessor"* inttoptr (i64 -6148914691236517206 to %"class.blink::AudioWorkletProcessor"*), %"class.blink::AudioWorkletProcessor"** %13, align 8
  %132 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %11) #9
  %133 = ptrtoint %"class.v8::Isolate"* %44 to i64
  %134 = add i64 %133, 8
  %135 = inttoptr i64 %134 to %"class.blink::V8PerIsolateData"**
  %136 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %135, align 8
  %137 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %136, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink23V8AudioWorkletProcessor18wrapper_type_info_E, %"class.v8::Value"* %132) #9
  br i1 %137, label %139, label %138

138:                                              ; preds = %130
  store %"class.blink::AudioWorkletProcessor"* null, %"class.blink::AudioWorkletProcessor"** %13, align 8
  br label %184

139:                                              ; preds = %130
  %140 = bitcast %"class.v8::Value"* %132 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, -1
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = and i64 %141, -4294967296
  %146 = zext i32 %144 to i64
  %147 = or i64 %145, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load i16, i16* %149, align 2
  switch i16 %150, label %155 [
    i16 1057, label %151
    i16 1056, label %151
    i16 1040, label %151
  ]

151:                                              ; preds = %139, %139, %139
  %152 = add i64 %141, 19
  %153 = inttoptr i64 %152 to i8**
  %154 = load i8*, i8** %153, align 1
  br label %158

155:                                              ; preds = %139
  %156 = bitcast %"class.v8::Value"* %132 to %"class.v8::Object"*
  %157 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %156, i32 1) #9
  br label %158

158:                                              ; preds = %151, %155
  %159 = phi i8* [ %154, %151 ], [ %157, %155 ]
  %160 = bitcast %"class.blink::AudioWorkletProcessor"** %13 to i8**
  store i8* %159, i8** %160, align 8
  %161 = icmp eq i8* %159, null
  %162 = ptrtoint i8* %159 to i64
  br i1 %161, label %184, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 4, i32 0
  %165 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = icmp eq i32 %166, %168
  br i1 %169, label %183, label %170, !prof !2

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %164, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.blink::Member.779"*, %"class.blink::Member.779"** %171, align 8
  %173 = zext i32 %166 to i64
  %174 = getelementptr inbounds %"class.blink::Member.779", %"class.blink::Member.779"* %172, i64 %173
  %175 = bitcast %"class.blink::Member.779"* %174 to i64*
  store atomic i64 %162, i64* %175 monotonic, align 8
  %176 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %170
  %179 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %159) #9
  br label %180

180:                                              ; preds = %178, %170
  %181 = load i32, i32* %165, align 4
  %182 = add i32 %181, 1
  store i32 %182, i32* %165, align 4
  br label %184

183:                                              ; preds = %163
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21AudioWorkletProcessorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.776"* %164, %"class.blink::AudioWorkletProcessor"** nonnull dereferenceable(8) %13) #9
  br label %184

184:                                              ; preds = %183, %180, %138, %158
  %185 = load %"class.blink::AudioWorkletProcessor"*, %"class.blink::AudioWorkletProcessor"** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #9
  br label %186

186:                                              ; preds = %129, %184
  %187 = phi %"class.blink::AudioWorkletProcessor"* [ %185, %184 ], [ null, %129 ]
  %188 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %101, align 8
  %189 = icmp eq %"class.blink::DOMWrapperWorld"* %188, null
  br i1 %189, label %197, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %188, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %191) #9
  %192 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %188, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %190
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %188) #9
  %196 = bitcast %"class.blink::DOMWrapperWorld"* %188 to i8*
  call void @free(i8* %196) #9
  br label %197

197:                                              ; preds = %186, %190, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #9
  %198 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %83, align 8
  %199 = icmp eq %"class.blink::DOMWrapperWorld"* %198, null
  br i1 %199, label %207, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %198, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %201) #9
  %202 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %198, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %198) #9
  %206 = bitcast %"class.blink::DOMWrapperWorld"* %198 to i8*
  call void @free(i8* %206) #9
  br label %207

207:                                              ; preds = %197, %200, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #9
  call void @_ZN4base9AutoResetINSt3__110unique_ptrIN5blink23ProcessorCreationParamsENS1_14default_deleteIS4_EEEEED2Ev(%"class.base::AutoReset"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %45) #9
  %208 = load %"class.v8::Context"*, %"class.v8::Context"** %27, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %208) #9
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #9
  %209 = icmp eq %"class.blink::SerializedScriptValue"* %3, null
  br i1 %209, label %216, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = atomicrmw sub i32* %211, i32 1 acq_rel
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %216

214:                                              ; preds = %210
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %3) #9
  %215 = bitcast %"class.blink::SerializedScriptValue"* %3 to i8*
  call void @free(i8* %215) #9
  br label %216

216:                                              ; preds = %207, %210, %214
  ret %"class.blink::AudioWorkletProcessor"* %187
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioWorkletProcessorDefinition"* @_ZN5blink23AudioWorkletGlobalScope14FindDefinitionERKN3WTF6StringE(%"class.blink::AudioWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = tail call %"struct.WTF::KeyValuePair.751"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.749"* %3, %"class.WTF::String"* dereferenceable(8) %1) #9
  %5 = icmp eq %"struct.WTF::KeyValuePair.751"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::AudioWorkletProcessorDefinition"*, %"class.blink::AudioWorkletProcessorDefinition"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::AudioWorkletProcessorDefinition"* [ %8, %6 ], [ null, %2 ]
  ret %"class.blink::AudioWorkletProcessorDefinition"* %10
}

declare void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink39V8BlinkAudioWorkletProcessorConstructor9ConstructERKNS_11ScriptValueE(%"class.v8::Maybe"* sret, %"class.blink::V8BlinkAudioWorkletProcessorConstructor"*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9AutoResetINSt3__110unique_ptrIN5blink23ProcessorCreationParamsENS1_14default_deleteIS4_EEEEED2Ev(%"class.base::AutoReset"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::AutoReset", %"class.base::AutoReset"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.781"*, %"class.std::__1::unique_ptr.781"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr.781"* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::AutoReset", %"class.base::AutoReset"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.781", %"class.std::__1::unique_ptr.781"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr.781"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.blink::ProcessorCreationParams"* null, %"class.blink::ProcessorCreationParams"** %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.781", %"class.std::__1::unique_ptr.781"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::ProcessorCreationParams"*, %"class.blink::ProcessorCreationParams"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.781"* %3 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq %"class.blink::ProcessorCreationParams"* %11, null
  br i1 %13, label %34, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::ProcessorCreationParams", %"class.blink::ProcessorCreationParams"* %11, i64 0, i32 1
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %15) #9
  %16 = getelementptr inbounds %"class.blink::ProcessorCreationParams", %"class.blink::ProcessorCreationParams"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = bitcast %"class.blink::ProcessorCreationParams"* %11 to i8*
  tail call void @free(i8* %33) #9
  br label %34

34:                                               ; preds = %32, %5, %1
  %35 = getelementptr inbounds %"class.base::AutoReset", %"class.base::AutoReset"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.blink::ProcessorCreationParams"*, %"class.blink::ProcessorCreationParams"** %35, align 8
  store %"class.blink::ProcessorCreationParams"* null, %"class.blink::ProcessorCreationParams"** %35, align 8
  %37 = icmp eq %"class.blink::ProcessorCreationParams"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ProcessorCreationParams", %"class.blink::ProcessorCreationParams"* %36, i64 0, i32 1
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %39) #9
  %40 = getelementptr inbounds %"class.blink::ProcessorCreationParams", %"class.blink::ProcessorCreationParams"* %36, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #9
  br label %56

56:                                               ; preds = %55, %52, %38
  %57 = bitcast %"class.blink::ProcessorCreationParams"* %36 to i8*
  tail call void @free(i8* %57) #9
  br label %58

58:                                               ; preds = %34, %56
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink23AudioWorkletGlobalScope29NumberOfRegisteredDefinitionsEv(%"class.blink::AudioWorkletGlobalScope"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.1239"* @_ZN5blink23AudioWorkletGlobalScope42WorkletProcessorInfoListForSynchronizationEv(%"class.blink::AudioWorkletGlobalScope"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink36CrossThreadAudioWorkletProcessorInfoELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %3 = bitcast i8* %2 to %"class.WTF::Vector.1239"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #9
  %4 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %8, i64 %11
  br i1 %6, label %32, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"struct.WTF::KeyValuePair.751"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"struct.WTF::KeyValuePair.751"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %16, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair.751"* %20, %12
  br i1 %21, label %32, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"struct.WTF::KeyValuePair.751"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair.751"* %23, %12
  br i1 %24, label %32, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %2, i64 12
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %2, i64 8
  %29 = bitcast i8* %28 to i32*
  %30 = bitcast i8* %2 to %"class.blink::CrossThreadAudioWorkletProcessorInfo"**
  %31 = bitcast i8* %2 to i64*
  br label %33

32:                                               ; preds = %19, %106, %116, %113, %1, %22
  ret %"class.WTF::Vector.1239"* %3

33:                                               ; preds = %25, %116
  %34 = phi %"struct.WTF::KeyValuePair.751"* [ %23, %25 ], [ %110, %116 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %33, %38, %53
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %34, i64 0, i32 1, i32 0, i32 0
  %57 = load %"class.blink::AudioWorkletProcessorDefinition"*, %"class.blink::AudioWorkletProcessorDefinition"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::AudioWorkletProcessorDefinition", %"class.blink::AudioWorkletProcessorDefinition"* %57, i64 0, i32 2
  %59 = load i8, i8* %58, align 8, !range !19
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %92

61:                                               ; preds = %55
  store i8 1, i8* %58, align 8
  %62 = load i32, i32* %27, align 4
  %63 = load i32, i32* %29, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %65, label %85, !prof !2

65:                                               ; preds = %61
  %66 = add i32 %62, 1
  %67 = lshr i32 %62, 2
  %68 = add i32 %66, %67
  %69 = icmp ugt i32 %68, 4
  %70 = select i1 %69, i32 %68, i32 4
  %71 = icmp ugt i32 %70, %66
  %72 = select i1 %71, i32 %70, i32 %66
  %73 = icmp ult i32 %62, %72
  br i1 %73, label %74, label %85, !prof !18

74:                                               ; preds = %65
  %75 = load %"class.blink::CrossThreadAudioWorkletProcessorInfo"*, %"class.blink::CrossThreadAudioWorkletProcessorInfo"** %30, align 8
  %76 = icmp eq %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %75, null
  br i1 %76, label %77, label %84

77:                                               ; preds = %74
  %78 = zext i32 %72 to i64
  %79 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink36CrossThreadAudioWorkletProcessorInfoEEEmm(i64 %78) #9
  %80 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %79, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink36CrossThreadAudioWorkletProcessorInfoEEEPKcv, i64 0, i64 0)) #9
  %81 = ptrtoint i8* %80 to i64
  store atomic i64 %81, i64* %31 monotonic, align 8
  %82 = udiv i64 %79, 24
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %29, align 8
  br label %85

84:                                               ; preds = %74
  tail call void @_ZN3WTF6VectorIN5blink36CrossThreadAudioWorkletProcessorInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1239"* %3, i32 %72) #9
  br label %85

85:                                               ; preds = %61, %65, %77, %84
  %86 = load %"class.blink::CrossThreadAudioWorkletProcessorInfo"*, %"class.blink::CrossThreadAudioWorkletProcessorInfo"** %30, align 8
  %87 = load i32, i32* %27, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %86, i64 %88
  tail call void @_ZN5blink36CrossThreadAudioWorkletProcessorInfoC2ERKNS_31AudioWorkletProcessorDefinitionE(%"class.blink::CrossThreadAudioWorkletProcessorInfo"* %89, %"class.blink::AudioWorkletProcessorDefinition"* dereferenceable(56) %57) #9
  %90 = load i32, i32* %27, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %27, align 4
  br label %92

92:                                               ; preds = %55, %85
  br i1 %37, label %106, label %93

93:                                               ; preds = %92
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %106

106:                                              ; preds = %92, %102, %105
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %34, i64 1
  %108 = icmp eq %"struct.WTF::KeyValuePair.751"* %107, %12
  br i1 %108, label %32, label %109

109:                                              ; preds = %106, %113
  %110 = phi %"struct.WTF::KeyValuePair.751"* [ %114, %113 ], [ %107, %106 ]
  %111 = bitcast %"struct.WTF::KeyValuePair.751"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  switch i64 %112, label %116 [
    i64 -1, label %113
    i64 0, label %113
  ]

113:                                              ; preds = %109, %109
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %110, i64 1
  %115 = icmp eq %"struct.WTF::KeyValuePair.751"* %114, %12
  br i1 %115, label %32, label %109

116:                                              ; preds = %109
  %117 = icmp eq %"struct.WTF::KeyValuePair.751"* %110, %12
  br i1 %117, label %32, label %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ProcessorCreationParams"* @_ZN5blink23AudioWorkletGlobalScope26GetProcessorCreationParamsEv(%"class.blink::AudioWorkletGlobalScope"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ProcessorCreationParams"*, %"class.blink::ProcessorCreationParams"** %2, align 8
  ret %"class.blink::ProcessorCreationParams"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink23AudioWorkletGlobalScope15SetCurrentFrameEm(%"class.blink::AudioWorkletGlobalScope"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 6
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink23AudioWorkletGlobalScope13SetSampleRateEf(%"class.blink::AudioWorkletGlobalScope"* nocapture, float) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 7
  store float %1, float* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK5blink23AudioWorkletGlobalScope11currentTimeEv(%"class.blink::AudioWorkletGlobalScope"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 7
  %3 = load float, float* %2, align 8
  %4 = fcmp ogt float %3, 0.000000e+00
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = fpext float %3 to double
  %7 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 6
  %8 = load i64, i64* %7, align 8
  %9 = uitofp i64 %8 to double
  %10 = fdiv double %9, %6
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi double [ %10, %5 ], [ 0.000000e+00, %1 ]
  ret double %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::HeapHashMap.745"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap.745"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #9
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 4
  %20 = bitcast %"class.blink::HeapVector.773"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  %23 = bitcast %"class.blink::HeapVector.773"* %19 to i8**
  %24 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, i64 11
  %26 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %1, i8** %23) #9
  br i1 %22, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %33

33:                                               ; preds = %18, %27
  %34 = bitcast %"class.blink::AudioWorkletGlobalScope"* %0 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %34, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds i32, i32* %3, i64 502
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast i32* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds i32, i32* %3, i64 508
  %21 = bitcast i32* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast i32* %20 to i8**
  %25 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, i64 11
  %27 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8** %24) #9
  br i1 %23, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast i32* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 251
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast i64* %4 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #9
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %12, %2
  %19 = getelementptr inbounds i64, i64* %3, i64 254
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  %22 = bitcast i64* %19 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #9
  br i1 %21, label %32, label %26

26:                                               ; preds = %18
  %27 = inttoptr i64 %20 to i8*
  %28 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %1, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %32

32:                                               ; preds = %18, %26
  %33 = bitcast i64* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %33, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn144_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 7, i32 0, i32 1
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %3, i64 251
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %3, i64 254
  %21 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %20 to i8**
  %25 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, i64 11
  %27 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8** %24) #9
  br i1 %23, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn176_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 3
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 251
  %5 = bitcast %"class.WTF::String"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 254
  %21 = bitcast %"class.WTF::String"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast %"class.WTF::String"* %20 to i8**
  %25 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, i64 11
  %27 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8** %24) #9
  br i1 %23, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast %"class.WTF::String"* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 2, i32 5
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450"* %3, i64 251
  %5 = bitcast %"class.std::__1::unique_ptr.450"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.450"* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450"* %3, i64 254
  %21 = bitcast %"class.std::__1::unique_ptr.450"* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast %"class.std::__1::unique_ptr.450"* %20 to i8**
  %25 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, i64 11
  %27 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8** %24) #9
  br i1 %23, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast %"class.std::__1::unique_ptr.450"* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn1792_NK5blink23AudioWorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletGlobalScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 -1, i32 0, i32 0, i32 1, i32 6, i32 10, i32 0, i32 3
  %4 = getelementptr inbounds i32, i32* %3, i64 502
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast i32* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %19

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds i32, i32* %3, i64 508
  %21 = bitcast i32* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast i32* %20 to i8**
  %25 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, i64 11
  %27 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8** %24) #9
  br i1 %23, label %34, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %34

34:                                               ; preds = %19, %28
  %35 = bitcast i32* %3 to %"class.blink::WorkletGlobalScope"*
  tail call void @_ZNK5blink18WorkletGlobalScope5TraceEPNS_7VisitorE(%"class.blink::WorkletGlobalScope"* %35, %"class.blink::Visitor"* %1) #9
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink26WorkerOrWorkletGlobalScope18HasPendingActivityEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #9
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink23AudioWorkletGlobalScope18GetWrapperTypeInfoEv(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink23AudioWorkletGlobalScope18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink26WorkerOrWorkletGlobalScope4WrapEPNS_11ScriptStateE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink26WorkerOrWorkletGlobalScope20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink26WorkerOrWorkletGlobalScope13InterfaceNameEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink18WorkletGlobalScope19GetExecutionContextEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.17, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.17, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare void @_ZN5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23AudioWorkletGlobalScope9IsClosingEv(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 2, !range !19
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare void @_ZN5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) unnamed_addr #1

declare %"class.blink::WorkerThread"* @_ZNK5blink18WorkletGlobalScope9GetThreadEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WorkerNavigator"* @_ZNK5blink26WorkerOrWorkletGlobalScope9navigatorEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::WorkerNavigator"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8 @_ZNK5blink26WorkerOrWorkletGlobalScope41ShouldRejectCoepUnsafeNoneTopModuleScriptEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

declare %"class.blink::ResourceFetcher"* @_ZNK5blink26WorkerOrWorkletGlobalScope7FetcherEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink18WorkletGlobalScope16GetDevToolsTokenEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink18WorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkletGlobalScope"*, i8 zeroext) unnamed_addr #1

declare i32 @_ZNK5blink26WorkerOrWorkletGlobalScope28GetOutstandingThrottledLimitEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18WorkletGlobalScope13IsInitializedEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink26WorkerOrWorkletGlobalScope43BindContentSecurityPolicyToExecutionContextEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare i32 @_ZNK5blink26WorkerOrWorkletGlobalScope25GetThrottleOptionOverrideEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope30IsMainThreadWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope28IsThreadedWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink18WorkletGlobalScope3UrlEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 0, i32 2
  ret %"class.blink::KURL"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink18WorkletGlobalScope7BaseURLEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 0, i32 2
  ret %"class.blink::KURL"* %2
}

declare void @_ZNK5blink18WorkletGlobalScope11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::WorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink18WorkletGlobalScope9UserAgentEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #9
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #9
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope15IsContextThreadEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare void @_ZN5blink18WorkletGlobalScope21AddConsoleMessageImplEPNS_14ConsoleMessageEb(%"class.blink::WorkletGlobalScope"*, %"class.blink::ConsoleMessage"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink18WorkletGlobalScope17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE(%"class.blink::WorkletGlobalScope"*, %"class.mojo::StructPtr.1338"*) unnamed_addr #1

declare void @_ZN5blink18WorkletGlobalScope17AddInspectorIssueENS_11AuditsIssueE(%"class.blink::WorkletGlobalScope"*, %"class.blink::AuditsIssue"*) unnamed_addr #1

declare void @_ZN5blink18WorkletGlobalScope15ExceptionThrownEPNS_10ErrorEventE(%"class.blink::WorkletGlobalScope"*, %"class.blink::ErrorEvent"*) unnamed_addr #1

declare %"class.blink::CoreProbeSink"* @_ZN5blink18WorkletGlobalScope12GetProbeSinkEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare %"class.blink::FrameOrWorkerScheduler"* @_ZN5blink18WorkletGlobalScope12GetSchedulerEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope29CrossOriginIsolatedCapabilityEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink18WorkletGlobalScope22DirectSocketCapabilityEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare %"class.ukm::UkmRecorder"* @_ZN5blink18WorkletGlobalScope11UkmRecorderEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink18WorkletGlobalScope8GetFrameEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18WorkletGlobalScope13GetHttpsStateEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare %"class.blink::BrowserInterfaceBrokerProxy"* @_ZNK5blink18WorkletGlobalScope25GetBrowserInterfaceBrokerEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink23AudioWorkletGlobalScope15GetWorkletTokenEv(%"class.blink::MultiToken.1431"* noalias sret, %"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %1, i64 0, i32 8
  %4 = bitcast %"class.blink::MultiToken.1431"* %0 to i8*
  %5 = bitcast %"class.util::TokenType.788"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false) #9
  %6 = getelementptr inbounds %"class.blink::MultiToken.1431", %"class.blink::MultiToken.1431"* %0, i64 0, i32 1
  store i32 1, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv(%"class.absl::optional.1140"* noalias sret, %"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %1, i64 0, i32 12
  %4 = getelementptr inbounds %"class.absl::optional.1140", %"class.absl::optional.1140"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.absl::optional.1140", %"class.absl::optional.1140"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %6 = bitcast %"class.blink::MultiToken"* %5 to i8*
  %7 = bitcast %"class.util::TokenType.737"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false) #9
  %8 = getelementptr inbounds %"class.absl::optional.1140", %"class.absl::optional.1140"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  store i32 0, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTarget"* @_ZN5blink18WorkletGlobalScope16ErrorEventTargetEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventTarget"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23AudioWorkletGlobalScope25IsAudioWorkletGlobalScopeEv(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink23AudioWorkletGlobalScope24GetExecutionContextTokenEv(%"class.blink::MultiToken"* noalias sret, %"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %1, i64 0, i32 8
  %4 = bitcast %"class.blink::MultiToken"* %0 to i8*
  %5 = bitcast %"class.util::TokenType.788"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false) #9
  %6 = getelementptr inbounds %"class.blink::MultiToken", %"class.blink::MultiToken"* %0, i64 0, i32 1
  store i32 5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext8IsWindowEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope28IsWorkerOrWorkletGlobalScopeEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext19IsWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope20IsWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope30IsMainThreadWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext28IsDedicatedWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsSharedWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext26IsServiceWorkerGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext29IsAnimationWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn72_NK5blink23AudioWorkletGlobalScope25IsAudioWorkletGlobalScopeEv(%"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext26IsLayoutWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25IsPaintWorkletGlobalScopeEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope28IsThreadedWorkletGlobalScopeEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope22IsJSExecutionForbiddenEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope15IsContextThreadEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16ExecutionContext25ShouldInstallV8ExtensionsEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.blink::ContentSecurityPolicy"* @_ZN5blink16ExecutionContext32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZThn72_NK5blink18WorkletGlobalScope3UrlEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %2, i64 112, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to %"class.blink::KURL"*
  ret %"class.blink::KURL"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZThn72_NK5blink18WorkletGlobalScope7BaseURLEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %2, i64 112, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to %"class.blink::KURL"*
  ret %"class.blink::KURL"* %4
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_NK5blink18WorkletGlobalScope11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* noalias sret, %"class.blink::WorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink26WorkerOrWorkletGlobalScope11DisableEvalERKN3WTF6StringE(%"class.blink::WorkerOrWorkletGlobalScope"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn72_NK5blink18WorkletGlobalScope9UserAgentEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %2, i64 119, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to %"class.WTF::StringImpl"**
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #9
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #9
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext20GetUserAgentMetadataEv(%"struct.blink::UserAgentMetadata"* noalias sret, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 152, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn72_NK5blink18WorkletGlobalScope13GetHttpsStateEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %2, i64 122
  %4 = bitcast %"class.blink::CrossThreadPersistent.456"* %3 to i32*
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::ResourceFetcher"* @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope7FetcherEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_N5blink26WorkerOrWorkletGlobalScope17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn72_NK5blink26WorkerOrWorkletGlobalScope17GetV8CacheOptionsEv(%"class.blink::WorkerOrWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %0, i64 -1, i32 16, i32 1, i32 0, i32 0, i64 87
  %3 = bitcast i64* %2 to i32*
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink18WorkletGlobalScope15ExceptionThrownEPNS_10ErrorEventE(%"class.blink::WorkletGlobalScope"*, %"class.blink::ErrorEvent"*) unnamed_addr #0 align 2

declare void @_ZN5blink16ExecutionContext24RemoveURLFromMemoryCacheERKNS_4KURLE(%"class.blink::ExecutionContext"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink18WorkletGlobalScope17AddInspectorIssueEN4mojo9StructPtrINS_5mojom5blink18InspectorIssueInfoEEE(%"class.blink::WorkletGlobalScope"*, %"class.mojo::StructPtr.1338"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink18WorkletGlobalScope17AddInspectorIssueENS_11AuditsIssueE(%"class.blink::WorkletGlobalScope"*, %"class.blink::AuditsIssue"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTarget"* @_ZThn72_N5blink18WorkletGlobalScope16ErrorEventTargetEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventTarget"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16ExecutionContext29HasInsecureContextInAncestorsEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink16ExecutionContext16OutgoingReferrerEv(%"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::CoreProbeSink"* @_ZThn72_N5blink18WorkletGlobalScope12GetProbeSinkEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::FrameOrWorkerScheduler"* @_ZThn72_N5blink18WorkletGlobalScope12GetSchedulerEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TrustedTypePolicyFactory"* @_ZNK5blink16ExecutionContext15GetTrustedTypesEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::TrustedTypePolicyFactory"* null
}

declare zeroext i1 @_ZNK5blink16ExecutionContext19RequireTrustedTypesEv(%"class.blink::ExecutionContext"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::ExecutionContext"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext32ReportPermissionsPolicyViolationENS_5mojom24PermissionsPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16ExecutionContext29ReportDocumentPolicyViolationENS_5mojom21DocumentPolicyFeatureENS1_17PolicyDispositionERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope29CrossOriginIsolatedCapabilityEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK5blink18WorkletGlobalScope22DirectSocketCapabilityEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare %"class.ukm::UkmRecorder"* @_ZThn72_N5blink18WorkletGlobalScope11UkmRecorderEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink16ExecutionContext11UkmSourceIDEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_NK5blink23AudioWorkletGlobalScope24GetExecutionContextTokenEv(%"class.blink::MultiToken"* noalias sret, %"class.blink::AudioWorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioWorkletGlobalScope", %"class.blink::AudioWorkletGlobalScope"* %1, i64 -1, i32 3, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds i32, i32* %3, i64 518
  %5 = bitcast %"class.blink::MultiToken"* %0 to i8*
  %6 = bitcast i32* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false) #9
  %7 = getelementptr inbounds %"class.blink::MultiToken", %"class.blink::MultiToken"* %0, i64 0, i32 1
  store i32 5, i32* %7, align 8, !alias.scope !20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_NK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv(%"class.absl::optional.1140"* noalias sret, %"class.blink::WorkletGlobalScope"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %1, i64 -1, i32 7
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistent.456", %"class.blink::CrossThreadPersistent.456"* %3, i64 123, i32 0, i32 1
  %5 = getelementptr inbounds %"class.absl::optional.1140", %"class.absl::optional.1140"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %5, align 8, !alias.scope !23
  %6 = getelementptr inbounds %"class.absl::optional.1140", %"class.absl::optional.1140"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %7 = bitcast %"class.blink::MultiToken"* %6 to i8*
  %8 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false) #9
  %9 = getelementptr inbounds %"class.absl::optional.1140", %"class.absl::optional.1140"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  store i32 0, i32* %9, align 8, !alias.scope !23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptWrappable"* @_ZN5blink16ExecutionContext17ToScriptWrappableEv(%"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScriptWrappable"* null
}

declare void @_ZN5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N5blink18WorkletGlobalScope21AddConsoleMessageImplEPNS_14ConsoleMessageEb(%"class.blink::WorkletGlobalScope"*, %"class.blink::ConsoleMessage"*, i1 zeroext) unnamed_addr #0 align 2

declare void @_ZN5blink24ContextLifecycleNotifier27AddContextLifecycleObserverEPNS_24ContextLifecycleObserverE(%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*) unnamed_addr #1

declare void @_ZN5blink24ContextLifecycleNotifier30RemoveContextLifecycleObserverEPNS_24ContextLifecycleObserverE(%"class.blink::ContextLifecycleNotifier"*, %"class.blink::ContextLifecycleObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::BrowserInterfaceBrokerProxy"* @_ZThn104_NK5blink18WorkletGlobalScope25GetBrowserInterfaceBrokerEv(%"class.blink::WorkletGlobalScope"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare %"class.base::SingleThreadTaskRunner"* @_ZThn104_N5blink18WorkletGlobalScope13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkletGlobalScope"*, i8 zeroext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink16ExecutionContext21AddConsoleMessageImplENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringEb(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn184_N5blink26WorkerOrWorkletGlobalScope8CountUseENS_5mojom10WebFeatureE(%"class.blink::WorkerOrWorkletGlobalScope"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn120_NK5blink16ExecutionContext14FeatureEnabledENS_18OriginTrialFeatureE(%"class.blink::ExecutionContext"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -224
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::WorkletGlobalScope"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)**, %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)*, %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)** %5, i64 10
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)*, %"class.blink::ExecutionContext"* (%"class.blink::WorkletGlobalScope"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::WorkletGlobalScope"* %3) #9
  %9 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %8) #9
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_18WorkletGlobalScopeEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -224
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::WorkerOrWorkletGlobalScope"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)***
  %5 = load i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)**, i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %5, i64 3
  %7 = load i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)*, i1 (%"class.blink::WorkerOrWorkletGlobalScope"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::WorkerOrWorkletGlobalScope"* %3) #9
  ret i1 %8
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v86Object13IsConstructorEv(%"class.v8::Object"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare %"class.v8::Function"* @_ZN5blink23CallbackMethodRetriever18GetFunctionOrThrowEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"*, %"class.v8::Object"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackFunctionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackFunctionBase"*)***
  %4 = load void (%"class.blink::CallbackFunctionBase"*)**, void (%"class.blink::CallbackFunctionBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackFunctionBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"*, %"class.v8::Object"*) unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink21SerializedScriptValue11DeserializeEPN2v87IsolateERKNS0_18DeserializeOptionsE(%"class.blink::SerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.1011, %class.scoped_refptr.1011* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #9
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.1148"* dereferenceable(8) %9) #9
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #9
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #9
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #9
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.1011* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #9
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #9
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #9
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #9
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #9
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #9
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #9
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.1011* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #9
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #9
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.13, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0)) #9
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.13, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0)) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.1148"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #2

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #9

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_(%"class.WTF::HashTable.749"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.751"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #9
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.751"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.751"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #9
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.751"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  %63 = icmp ne %"struct.WTF::KeyValuePair.751"* %62, null
  ret i1 %63
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1508"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1508", %"class.WTF::StringTypeAdapter.1508"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1508"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1151"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1151"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1509", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1508"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1508"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.1508"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1508", %"class.WTF::StringTypeAdapter.1508"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i8* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1510"* nonnull %34, i8* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1151"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1508"* nonnull %5, i8* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1509", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1508"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1508"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.1508"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1508", %"class.WTF::StringTypeAdapter.1508"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i16* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1510"* nonnull %34, i16* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1151"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1508"* nonnull %5, i16* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1151"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1508"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1508", %"class.WTF::StringTypeAdapter.1508"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1151", %"class.WTF::StringAppend.1151"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1508"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %4, i8* %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1151", %"class.WTF::StringAppend.1151"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %45, i8* %46) #9
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1508"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1510"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1508"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1510"*, i16*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_20AudioParamDescriptorEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector.762"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector.762", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::AudioParamDescriptor"*, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 16777216
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i64 0, i64 0)) #9
  %12 = bitcast %"class.blink::HeapVector.762"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %112

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HeapVector.762"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #9
  %18 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %5, i64 0, i32 0
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20AudioParamDescriptorEEEEEmm(i64 %9) #9
  %22 = lshr i64 %21, 3
  %23 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %22) #9
  %24 = ptrtoint %"class.blink::HeapVectorBacking"* %23 to i64
  %25 = bitcast %"class.blink::HeapVector.762"* %5 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = trunc i64 %22 to i32
  store i32 %26, i32* %16, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %23, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #9
  br label %32

32:                                               ; preds = %13, %20, %29
  %33 = phi i32 [ 0, %13 ], [ %26, %20 ], [ %26, %29 ]
  %34 = phi i64 [ 0, %13 ], [ %24, %20 ], [ %24, %29 ]
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %36 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #9
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::HeapVector.762"* %5 to i64*
  br label %90

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %43 = bitcast %"class.blink::AudioParamDescriptor"** %7 to i8*
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %45

45:                                               ; preds = %41, %81
  %46 = phi i32 [ 0, %41 ], [ %82, %81 ]
  %47 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %42, %"class.v8::Context"* %35, i32 %46) #9
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #9
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #9
  %55 = bitcast %"class.blink::HeapVector.762"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %111

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  %57 = call %"class.blink::AudioParamDescriptor"* @_ZN5blink17NativeValueTraitsINS_20AudioParamDescriptorEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %47, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  store %"class.blink::AudioParamDescriptor"* %57, %"class.blink::AudioParamDescriptor"** %7, align 8
  %58 = load i32, i32* %44, align 8
  %59 = icmp eq i32 %58, 0
  %60 = ptrtoint %"class.blink::AudioParamDescriptor"* %57 to i64
  br i1 %59, label %61, label %79

61:                                               ; preds = %56
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %78, label %65, !prof !2

65:                                               ; preds = %61
  %66 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %15, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %66, i64 %67
  %69 = bitcast %"class.blink::Member.768"* %68 to i64*
  store atomic i64 %60, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::AudioParamDescriptor"* %57 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #9
  br label %75

75:                                               ; preds = %72, %65
  %76 = load i32, i32* %17, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %17, align 4
  br label %81

78:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.765"* nonnull %18, %"class.blink::AudioParamDescriptor"** nonnull dereferenceable(8) %7) #9
  br label %81

79:                                               ; preds = %56
  %80 = bitcast %"class.blink::HeapVector.762"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  br label %111

81:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  %82 = add nuw i32 %46, 1
  %83 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %45, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapVector.762"* %5 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i32, i32* %16, align 8
  %89 = load i32, i32* %17, align 4
  br label %90

90:                                               ; preds = %39, %85
  %91 = phi i64* [ %40, %39 ], [ %86, %85 ]
  %92 = phi i32 [ 0, %39 ], [ %89, %85 ]
  %93 = phi i32 [ %33, %39 ], [ %88, %85 ]
  %94 = phi i64 [ %34, %39 ], [ %87, %85 ]
  %95 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.blink::HeapVector.762"* %0 to i64*
  store i64 0, i64* %97, align 8
  %98 = bitcast %"class.blink::HeapVector.762"* %0 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store atomic i64 %94, i64* %98 monotonic, align 8
  store i32 %93, i32* %95, align 8
  store i32 0, i32* %16, align 8
  store i32 %92, i32* %96, align 4
  store i32 0, i32* %17, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %90
  %102 = inttoptr i64 %94 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #9
  br label %104

104:                                              ; preds = %101, %90
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.blink::HeapVector.762"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #9
  br label %111

111:                                              ; preds = %49, %79, %107, %104
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %112

112:                                              ; preds = %111, %11
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_20AudioParamDescriptorEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector.762"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector.762", align 8
  %6 = alloca %"class.blink::AudioParamDescriptor"*, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = bitcast %"class.blink::HeapVector.762"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %13, label %14, label %50

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::AudioParamDescriptor"** %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %14, %48
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %24 = call %"class.blink::AudioParamDescriptor"* @_ZN5blink17NativeValueTraitsINS_20AudioParamDescriptorEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  store %"class.blink::AudioParamDescriptor"* %24, %"class.blink::AudioParamDescriptor"** %6, align 8
  %25 = load i32, i32* %17, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.blink::AudioParamDescriptor"* %24 to i64
  br i1 %26, label %30, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::HeapVector.762"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %77

30:                                               ; preds = %23
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %11, align 8
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %47, label %34, !prof !2

34:                                               ; preds = %30
  %35 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %10, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %35, i64 %36
  %38 = bitcast %"class.blink::Member.768"* %37 to i64*
  store atomic i64 %27, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::AudioParamDescriptor"* %24 to i8*
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #9
  br label %44

44:                                               ; preds = %41, %34
  %45 = load i32, i32* %12, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %12, align 4
  br label %48

47:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.765"* nonnull %18, %"class.blink::AudioParamDescriptor"** nonnull dereferenceable(8) %6) #9
  br label %48

48:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  %49 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %49, label %19, label %50

50:                                               ; preds = %48, %4
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::HeapVector.762"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %77

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.blink::HeapVector.762", %"class.blink::HeapVector.762"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.blink::HeapVector.762"* %5 to i64*
  %60 = bitcast %"class.blink::HeapVector.762"* %0 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.blink::HeapVector.762"* %0 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = load i32, i32* %11, align 8
  store i32 %63, i32* %57, align 8
  store i32 0, i32* %11, align 8
  %64 = load i32, i32* %12, align 4
  store i32 %64, i32* %58, align 4
  store i32 0, i32* %12, align 4
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = inttoptr i64 %61 to i8*
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #9
  br label %70

70:                                               ; preds = %67, %56
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.blink::HeapVector.762"* %5 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #9
  br label %77

77:                                               ; preds = %73, %70, %28, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

declare %"class.blink::AudioParamDescriptor"* @_ZN5blink17NativeValueTraitsINS_20AudioParamDescriptorEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20AudioParamDescriptorEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.25, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.27, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_20AudioParamDescriptorEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.768"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.768"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20AudioParamDescriptorEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20AudioParamDescriptorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioParamDescriptor"*
  %4 = bitcast i8* %1 to void (%"class.blink::AudioParamDescriptor"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AudioParamDescriptor"*, %"class.blink::Visitor"*)**, void (%"class.blink::AudioParamDescriptor"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AudioParamDescriptor"*, %"class.blink::Visitor"*)*, void (%"class.blink::AudioParamDescriptor"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::AudioParamDescriptor"*, %"class.blink::Visitor"*)*, void (%"class.blink::AudioParamDescriptor"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AudioParamDescriptor"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.765"*, %"class.blink::AudioParamDescriptor"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.765"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %16, i64 %18
  %20 = bitcast %"class.blink::AudioParamDescriptor"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.768"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.765"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %8, align 8
  %10 = icmp eq %"class.blink::Member.768"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20AudioParamDescriptorEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.765"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %8, align 8
  %26 = icmp eq %"class.blink::Member.768"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.768"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !19
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.765"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.765"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.765"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.765"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20AudioParamDescriptorEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20AudioParamDescriptorEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.768"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.768"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !18

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.765"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.765"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.765"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1082"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.1082"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #9
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #9
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #9
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %88
  tail call void @llvm.trap() #9
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.1082"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.1082"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.1082"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #9
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.1082"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1082", align 8
  %6 = bitcast %"class.WTF::HashTable.1082"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1082"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1082"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1082"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.1082"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1082"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #9
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1082"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #9
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #9
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1082"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1082", %"class.WTF::HashTable.1082"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #9
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #9
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EC2ES6_S3_(%"class.WTF::StringAppend.1156"*, %"class.WTF::StringAppend.1157"* byval(%"class.WTF::StringAppend.1157") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1157"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1156"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = bitcast i8** %29 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #9
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_EC2ES7_S2_(%"class.WTF::StringAppend.1155"*, %"class.WTF::StringAppend.1156"* byval(%"class.WTF::StringAppend.1156") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1156"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1155"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = bitcast i8** %29 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1155"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1508"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1508", %"class.WTF::StringTypeAdapter.1508"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1155", %"class.WTF::StringAppend.1155"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1508"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1156"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1156"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1156"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1157"* %8) #9
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1157"* %8) #9
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1157"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1508"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1508", %"class.WTF::StringTypeAdapter.1508"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1157", %"class.WTF::StringAppend.1157"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1508"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E7WriteToEPh(%"class.WTF::StringAppend.1156"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1509", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter.1508"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #9
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i8* %29) #9
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %26, i8* %1) #9
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %26) #9
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i8* %32) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1157"* %5) #9
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1510"* nonnull %33, i8* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES2_EES3_E7WriteToEPDs(%"class.WTF::StringAppend.1156"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1508", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1509", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.1509"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter.1508"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1156", %"class.WTF::StringAppend.1156"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #9
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i8* %29) #9
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %26, i16* %1) #9
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %26) #9
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1508"* nonnull %3, i16* %32) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1509", %"class.WTF::StringTypeAdapter.1509"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1157"* %5) #9
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1510"* nonnull %33, i16* %36) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.765"*, %"class.blink::Member.768"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.768"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.768"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.765"* %0, i32 %22) #9
  %23 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member.768"* %1 to i64
  %26 = ptrtoint %"class.blink::Member.768"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.765", %"class.WTF::Vector.765"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_20AudioParamDescriptorEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.765"* %0, i32 %37) #9
  %38 = load %"class.blink::Member.768"*, %"class.blink::Member.768"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member.768"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member.768"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.768", %"class.blink::Member.768"* %41, i64 %44
  %46 = bitcast %"class.blink::Member.768"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.768"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #9
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.751"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.749"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::AudioWorkletProcessorDefinition"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.751"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.749"* %0, %"struct.WTF::KeyValuePair.751"* null)
  %9 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.751"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #9
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.751"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.751"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.751"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #9
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.751"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.751"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.751"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #9
  %72 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.751"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.751"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #9
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %79, i64 0, i32 1
  %120 = load %"class.blink::AudioWorkletProcessorDefinition"*, %"class.blink::AudioWorkletProcessorDefinition"** %2, align 8
  %121 = ptrtoint %"class.blink::AudioWorkletProcessorDefinition"* %120 to i64
  %122 = bitcast %"class.blink::Member.752"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::AudioWorkletProcessorDefinition"* %120 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #9
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #9
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #9
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !19
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31AudioWorkletProcessorDefinitionEE5TraceEPNS_7VisitorEPKv) #9
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.749"* %0, %"struct.WTF::KeyValuePair.751"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair.751"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair.751"*, i8 } undef, %"struct.WTF::KeyValuePair.751"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair.751"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.749"*, %"struct.WTF::KeyValuePair.751"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.749"* %0, i32 %35, %"struct.WTF::KeyValuePair.751"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !19
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.751"*
  %44 = call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.749"* %0, %"struct.WTF::KeyValuePair.751"* %43, i32 %40, %"struct.WTF::KeyValuePair.751"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.751"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.751"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.749"*, i32, %"struct.WTF::KeyValuePair.751"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !19
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.751"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.751"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.751"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.751"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.749"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #9
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.751"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.749"* %0, %"struct.WTF::KeyValuePair.751"* %42, i32 %1, %"struct.WTF::KeyValuePair.751"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.751"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.751"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.751"* %64, %"struct.WTF::KeyValuePair.751"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.751"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.751"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #9
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.751"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.752"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.752"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.751"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.751"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.751"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.749"*, %"struct.WTF::KeyValuePair.751"*, i32, %"struct.WTF::KeyValuePair.751"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.749", align 8
  %6 = bitcast %"class.WTF::HashTable.749"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.749"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.751"* %1, %"struct.WTF::KeyValuePair.751"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.751"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.751"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.749"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.751"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.749"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #9
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.749"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.749"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #9
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.751"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #9
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.751"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.752"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #9
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.751"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.751"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.751"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.751"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.751"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.749"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #9
  %101 = extractvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #9
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.751"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.752"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.752"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.751"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.751"* %101, %"struct.WTF::KeyValuePair.751"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.751"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.751"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.33, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([422 x i8], [422 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #9
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.751"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_31AudioWorkletProcessorDefinitionEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.751"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.751"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.752"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31AudioWorkletProcessorDefinitionEE5TraceEPNS_7VisitorEPKv) #9
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.752"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31AudioWorkletProcessorDefinitionEE5TraceEPNS_7VisitorEPKv) #9
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_31AudioWorkletProcessorDefinitionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioWorkletProcessorDefinition"*
  tail call void @_ZNK5blink31AudioWorkletProcessorDefinition5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletProcessorDefinition"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink31AudioWorkletProcessorDefinition5TraceEPNS_7VisitorE(%"class.blink::AudioWorkletProcessorDefinition"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.751"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.749"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #9
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.751"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.751"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.751"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.751"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.751"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.751"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.751"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.751"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #9
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.751"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.751"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.751"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.751"*, i8 } undef, %"struct.WTF::KeyValuePair.751"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.751"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.751"*, i8 } %77
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #2

declare void @_ZN5blink18MessagePortChannelC1ERKS0_(%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #9
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #9
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.1148"* dereferenceable(8) %3) #9
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #9
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.1011* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.1011, %class.scoped_refptr.1011* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #9
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #9
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #9
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21AudioWorkletProcessorEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.776"*, %"class.blink::AudioWorkletProcessor"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21AudioWorkletProcessorEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.776"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.779"*, %"class.blink::Member.779"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.779", %"class.blink::Member.779"* %16, i64 %18
  %20 = bitcast %"class.blink::AudioWorkletProcessor"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.779"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21AudioWorkletProcessorEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.776"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.779"*, %"class.blink::Member.779"** %8, align 8
  %10 = icmp eq %"class.blink::Member.779"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21AudioWorkletProcessorEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1670"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1670"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.776"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1670", %"class.blink::HeapVectorBacking.1670"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.779"*, %"class.blink::Member.779"** %8, align 8
  %26 = icmp eq %"class.blink::Member.779"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.779"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !19
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21AudioWorkletProcessorEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.776"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21AudioWorkletProcessorEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.776"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.776"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.776"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21AudioWorkletProcessorEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1670"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1670"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.779"*, %"class.blink::Member.779"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1670"* %17, null
  %23 = icmp ne %"class.blink::Member.779"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.779"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !18

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.776"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1670", %"class.blink::HeapVectorBacking.1670"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.776"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.776"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1670", %"class.blink::HeapVectorBacking.1670"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21AudioWorkletProcessorEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.25, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1670"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.27, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1670"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1670"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([183 x i8], [183 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21AudioWorkletProcessorEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.779"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.779", %"class.blink::Member.779"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.779"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21AudioWorkletProcessorEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21AudioWorkletProcessorEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21AudioWorkletProcessorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioWorkletProcessor"*
  %4 = bitcast i8* %1 to void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)**, void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)*, void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)*, void (%"class.blink::AudioWorkletProcessor"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AudioWorkletProcessor"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.751"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_31AudioWorkletProcessorDefinitionEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.749"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.751"*, %"struct.WTF::KeyValuePair.751"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.751"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.749", %"class.WTF::HashTable.749"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #9
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.751"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.751"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #9
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.751", %"struct.WTF::KeyValuePair.751"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.751"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair.751"* %62
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink36CrossThreadAudioWorkletProcessorInfoD2Ev(%"class.blink::CrossThreadAudioWorkletProcessorInfo"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.WTF::Vector.1242", %"class.WTF::Vector.1242"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"** %3, align 8
  %5 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %4, null
  br i1 %5, label %57, label %6, !prof !18

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CrossThreadAudioParamInfo"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %4, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"class.blink::CrossThreadAudioParamInfo"* [ %50, %49 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %15, i64 0, i32 4, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %15, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %15, i64 1
  %51 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::Vector.1242"* %2 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %6
  %56 = phi i8* [ %54, %52 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #9
  store %"class.blink::CrossThreadAudioParamInfo"* null, %"class.blink::CrossThreadAudioParamInfo"** %3, align 8
  br label %57

57:                                               ; preds = %1, %55
  %58 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #9
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink36CrossThreadAudioWorkletProcessorInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1239"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %58

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1239", %"class.WTF::Vector.1239"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CrossThreadAudioWorkletProcessorInfo"*, %"class.blink::CrossThreadAudioWorkletProcessorInfo"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1239", %"class.WTF::Vector.1239"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1239"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1239", %"class.WTF::Vector.1239"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %56, label %14

14:                                               ; preds = %4, %38
  %15 = phi %"class.blink::CrossThreadAudioWorkletProcessorInfo"* [ %54, %38 ], [ %6, %4 ]
  %16 = phi %"class.blink::CrossThreadAudioWorkletProcessorInfo"* [ %53, %38 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #9
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #9
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %14
  %39 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %16, i64 0, i32 1
  %40 = bitcast %"class.WTF::Vector.1242"* %39 to i8*
  %41 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %15, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %16, i64 0, i32 1, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %16, i64 0, i32 1, i32 0, i32 0, i32 2
  %44 = bitcast %"class.WTF::Vector.1242"* %41 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #9
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.WTF::Vector.1242"* %39 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %15, i64 0, i32 1, i32 0, i32 0, i32 1
  %48 = load i32, i32* %42, align 4
  %49 = load i32, i32* %47, align 4
  store i32 %49, i32* %42, align 4
  store i32 %48, i32* %47, align 4
  %50 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %51 = load i32, i32* %43, align 4
  %52 = load i32, i32* %50, align 4
  store i32 %52, i32* %43, align 4
  store i32 %51, i32* %50, align 4
  tail call void @_ZN5blink36CrossThreadAudioWorkletProcessorInfoD2Ev(%"class.blink::CrossThreadAudioWorkletProcessorInfo"* %15) #9
  %53 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %16, i64 1
  %54 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %15, i64 1
  %55 = icmp eq %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %54, %10
  br i1 %55, label %56, label %14

56:                                               ; preds = %38, %4
  %57 = bitcast %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #9
  br label %125

58:                                               ; preds = %2
  %59 = zext i32 %1 to i64
  %60 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink36CrossThreadAudioWorkletProcessorInfoEEEmm(i64 %59) #9
  %61 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %60, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink36CrossThreadAudioWorkletProcessorInfoEEEPKcv, i64 0, i64 0)) #9
  %62 = udiv i64 %60, 24
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.WTF::Vector.1239", %"class.WTF::Vector.1239"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::CrossThreadAudioWorkletProcessorInfo"*, %"class.blink::CrossThreadAudioWorkletProcessorInfo"** %64, align 8
  %66 = getelementptr inbounds %"class.WTF::Vector.1239", %"class.WTF::Vector.1239"* %0, i64 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %65, i64 %68
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %58
  %72 = bitcast %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %65 to i8*
  br label %120

73:                                               ; preds = %58
  %74 = bitcast i8* %61 to %"class.blink::CrossThreadAudioWorkletProcessorInfo"*
  br label %75

75:                                               ; preds = %73, %99
  %76 = phi %"class.blink::CrossThreadAudioWorkletProcessorInfo"* [ %115, %99 ], [ %65, %73 ]
  %77 = phi %"class.blink::CrossThreadAudioWorkletProcessorInfo"* [ %114, %99 ], [ %74, %73 ]
  %78 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %76, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %77, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %80, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %75
  %100 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %77, i64 0, i32 1
  %101 = bitcast %"class.WTF::Vector.1242"* %100 to i8*
  %102 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %76, i64 0, i32 1
  %103 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %77, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %77, i64 0, i32 1, i32 0, i32 0, i32 2
  %105 = bitcast %"class.WTF::Vector.1242"* %102 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #9
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.WTF::Vector.1242"* %100 to i64*
  store atomic i64 0, i64* %105 monotonic, align 8
  store atomic i64 %106, i64* %107 monotonic, align 8
  %108 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %76, i64 0, i32 1, i32 0, i32 0, i32 1
  %109 = load i32, i32* %103, align 4
  %110 = load i32, i32* %108, align 4
  store i32 %110, i32* %103, align 4
  store i32 %109, i32* %108, align 4
  %111 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %76, i64 0, i32 1, i32 0, i32 0, i32 2
  %112 = load i32, i32* %104, align 4
  %113 = load i32, i32* %111, align 4
  store i32 %113, i32* %104, align 4
  store i32 %112, i32* %111, align 4
  tail call void @_ZN5blink36CrossThreadAudioWorkletProcessorInfoD2Ev(%"class.blink::CrossThreadAudioWorkletProcessorInfo"* %76) #9
  %114 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %77, i64 1
  %115 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %76, i64 1
  %116 = icmp eq %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %115, %69
  br i1 %116, label %117, label %75

117:                                              ; preds = %99
  %118 = bitcast %"class.WTF::Vector.1239"* %0 to i8**
  %119 = load i8*, i8** %118, align 8
  br label %120

120:                                              ; preds = %71, %117
  %121 = phi i8* [ %119, %117 ], [ %72, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %121) #9
  %122 = bitcast %"class.WTF::Vector.1239"* %0 to i64*
  store atomic i64 %63, i64* %122 monotonic, align 8
  %123 = trunc i64 %62 to i32
  %124 = getelementptr inbounds %"class.WTF::Vector.1239", %"class.WTF::Vector.1239"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %123, i32* %124, align 8
  br label %125

125:                                              ; preds = %120, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink36CrossThreadAudioWorkletProcessorInfoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.34, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink36CrossThreadAudioWorkletProcessorInfoC2ERKNS_31AudioWorkletProcessorDefinitionE(%"class.blink::CrossThreadAudioWorkletProcessorInfo"*, %"class.blink::AudioWorkletProcessorDefinition"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.121", align 8
  %4 = alloca %"class.WTF::Vector.121", align 8
  %5 = getelementptr inbounds %"class.blink::AudioWorkletProcessorDefinition", %"class.blink::AudioWorkletProcessorDefinition"* %1, i64 0, i32 1
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %5) #9
  %7 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::Vector.1242"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #9
  %10 = bitcast %"class.WTF::Vector.121"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  call void @_ZNK5blink31AudioWorkletProcessorDefinition28GetAudioParamDescriptorNamesEv(%"class.WTF::Vector.121"* nonnull sret %3, %"class.blink::AudioWorkletProcessorDefinition"* %1) #9
  %11 = getelementptr inbounds %"class.WTF::Vector.121", %"class.WTF::Vector.121"* %3, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %2
  %15 = zext i32 %12 to i64
  %16 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25CrossThreadAudioParamInfoEEEmm(i64 %15) #9
  %17 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25CrossThreadAudioParamInfoEEEPKcv, i64 0, i64 0)) #9
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.WTF::Vector.1242"* %8 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = lshr i64 %16, 5
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 %21, i32* %22, align 8
  br label %23

23:                                               ; preds = %2, %14
  %24 = getelementptr inbounds %"class.WTF::Vector.121", %"class.WTF::Vector.121"* %3, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %60, label %27, !prof !18

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = load i32, i32* %11, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !2

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::String"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %54 = icmp eq %"class.WTF::String"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %11, align 4
  %56 = bitcast %"class.WTF::Vector.121"* %3 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %60

60:                                               ; preds = %23, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  %61 = bitcast %"class.WTF::Vector.121"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #9
  call void @_ZNK5blink31AudioWorkletProcessorDefinition28GetAudioParamDescriptorNamesEv(%"class.WTF::Vector.121"* nonnull sret %4, %"class.blink::AudioWorkletProcessorDefinition"* %1) #9
  %62 = getelementptr inbounds %"class.WTF::Vector.121", %"class.WTF::Vector.121"* %4, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::Vector.121", %"class.WTF::Vector.121"* %4, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %71 = getelementptr inbounds %"class.blink::CrossThreadAudioWorkletProcessorInfo", %"class.blink::CrossThreadAudioWorkletProcessorInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.WTF::Vector.1242", %"class.WTF::Vector.1242"* %8, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.WTF::Vector.1242"* %8 to i64*
  br label %113

74:                                               ; preds = %139
  %75 = load %"class.WTF::String"*, %"class.WTF::String"** %62, align 8
  br label %76

76:                                               ; preds = %74, %60
  %77 = phi %"class.WTF::String"* [ %75, %74 ], [ %63, %60 ]
  %78 = icmp eq %"class.WTF::String"* %77, null
  br i1 %78, label %112, label %79, !prof !18

79:                                               ; preds = %76
  %80 = bitcast %"class.WTF::String"* %77 to i8*
  %81 = load i32, i32* %64, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %110, label %83, !prof !2

83:                                               ; preds = %79
  %84 = zext i32 %81 to i64
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 %84
  br label %86

86:                                               ; preds = %104, %83
  %87 = phi %"class.WTF::String"* [ %105, %104 ], [ %77, %83 ]
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #9
  br label %104

104:                                              ; preds = %103, %100, %86
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 1
  %106 = icmp eq %"class.WTF::String"* %105, %85
  br i1 %106, label %107, label %86

107:                                              ; preds = %104
  store i32 0, i32* %64, align 4
  %108 = bitcast %"class.WTF::Vector.121"* %4 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %107, %79
  %111 = phi i8* [ %109, %107 ], [ %80, %79 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %62, align 8
  br label %112

112:                                              ; preds = %76, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #9
  ret void

113:                                              ; preds = %69, %139
  %114 = phi %"class.WTF::String"* [ %63, %69 ], [ %166, %139 ]
  %115 = call %"class.blink::AudioParamDescriptor"* @_ZNK5blink31AudioWorkletProcessorDefinition23GetAudioParamDescriptorERKN3WTF6StringE(%"class.blink::AudioWorkletProcessorDefinition"* %1, %"class.WTF::String"* dereferenceable(8) %114) #9
  %116 = load i32, i32* %70, align 4
  %117 = load i32, i32* %71, align 8
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %119, label %139, !prof !2

119:                                              ; preds = %113
  %120 = add i32 %116, 1
  %121 = lshr i32 %116, 2
  %122 = add i32 %120, %121
  %123 = icmp ugt i32 %122, 4
  %124 = select i1 %123, i32 %122, i32 4
  %125 = icmp ugt i32 %124, %120
  %126 = select i1 %125, i32 %124, i32 %120
  %127 = icmp ult i32 %116, %126
  br i1 %127, label %128, label %139, !prof !18

128:                                              ; preds = %119
  %129 = load %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"** %72, align 8
  %130 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %129, null
  br i1 %130, label %131, label %138

131:                                              ; preds = %128
  %132 = zext i32 %126 to i64
  %133 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25CrossThreadAudioParamInfoEEEmm(i64 %132) #9
  %134 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %133, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25CrossThreadAudioParamInfoEEEPKcv, i64 0, i64 0)) #9
  %135 = ptrtoint i8* %134 to i64
  store atomic i64 %135, i64* %73 monotonic, align 8
  %136 = lshr i64 %133, 5
  %137 = trunc i64 %136 to i32
  store i32 %137, i32* %71, align 8
  br label %139

138:                                              ; preds = %128
  call void @_ZN3WTF6VectorIN5blink25CrossThreadAudioParamInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1242"* %8, i32 %126) #9
  br label %139

139:                                              ; preds = %113, %119, %131, %138
  %140 = load %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"** %72, align 8
  %141 = load i32, i32* %70, align 4
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds %"class.blink::AudioParamDescriptor", %"class.blink::AudioParamDescriptor"* %115, i64 0, i32 4
  %144 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %143) #9
  %145 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %140, i64 %142, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %145, align 8
  %146 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %140, i64 %142, i32 1
  %147 = getelementptr inbounds %"class.blink::AudioParamDescriptor", %"class.blink::AudioParamDescriptor"* %115, i64 0, i32 5
  %148 = bitcast float* %147 to i32*
  %149 = load i32, i32* %148, align 8
  %150 = bitcast float* %146 to i32*
  store i32 %149, i32* %150, align 8
  %151 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %140, i64 %142, i32 2
  %152 = getelementptr inbounds %"class.blink::AudioParamDescriptor", %"class.blink::AudioParamDescriptor"* %115, i64 0, i32 6
  %153 = bitcast float* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = bitcast float* %151 to i32*
  store i32 %154, i32* %155, align 4
  %156 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %140, i64 %142, i32 3
  %157 = getelementptr inbounds %"class.blink::AudioParamDescriptor", %"class.blink::AudioParamDescriptor"* %115, i64 0, i32 7
  %158 = bitcast float* %157 to i32*
  %159 = load i32, i32* %158, align 8
  %160 = bitcast float* %156 to i32*
  store i32 %159, i32* %160, align 8
  %161 = getelementptr inbounds %"class.blink::AudioParamDescriptor", %"class.blink::AudioParamDescriptor"* %115, i64 0, i32 8
  %162 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %161) #9
  %163 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %140, i64 %142, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %163, align 8
  %164 = load i32, i32* %70, align 4
  %165 = add i32 %164, 1
  store i32 %165, i32* %70, align 4
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 1
  %167 = icmp eq %"class.WTF::String"* %166, %67
  br i1 %167, label %74, label %113
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZNK5blink31AudioWorkletProcessorDefinition28GetAudioParamDescriptorNamesEv(%"class.WTF::Vector.121"* sret, %"class.blink::AudioWorkletProcessorDefinition"*) local_unnamed_addr #1

declare %"class.blink::AudioParamDescriptor"* @_ZNK5blink31AudioWorkletProcessorDefinition23GetAudioParamDescriptorERKN3WTF6StringE(%"class.blink::AudioWorkletProcessorDefinition"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25CrossThreadAudioParamInfoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.34, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink25CrossThreadAudioParamInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1242"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1242", %"class.WTF::Vector.1242"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1242", %"class.WTF::Vector.1242"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1242"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1242", %"class.WTF::Vector.1242"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink25CrossThreadAudioParamInfoENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::CrossThreadAudioParamInfo"* %6, %"class.blink::CrossThreadAudioParamInfo"* %10, %"class.blink::CrossThreadAudioParamInfo"* null, i1 zeroext true) #9
  %13 = bitcast %"class.blink::CrossThreadAudioParamInfo"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #9
  br label %32

14:                                               ; preds = %2
  %15 = zext i32 %1 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25CrossThreadAudioParamInfoEEEmm(i64 %15) #9
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25CrossThreadAudioParamInfoEEEPKcv, i64 0, i64 0)) #9
  %18 = lshr i64 %16, 5
  %19 = bitcast i8* %17 to %"class.blink::CrossThreadAudioParamInfo"*
  %20 = ptrtoint i8* %17 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector.1242", %"class.WTF::Vector.1242"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.1242", %"class.WTF::Vector.1242"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %22, i64 %25
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink25CrossThreadAudioParamInfoENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::CrossThreadAudioParamInfo"* %22, %"class.blink::CrossThreadAudioParamInfo"* %26, %"class.blink::CrossThreadAudioParamInfo"* %19, i1 zeroext false) #9
  %27 = bitcast %"class.WTF::Vector.1242"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #9
  %29 = bitcast %"class.WTF::Vector.1242"* %0 to i64*
  store atomic i64 %20, i64* %29 monotonic, align 8
  %30 = trunc i64 %18 to i32
  %31 = getelementptr inbounds %"class.WTF::Vector.1242", %"class.WTF::Vector.1242"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink25CrossThreadAudioParamInfoENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"*, %"class.blink::CrossThreadAudioParamInfo"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %0, %1
  br i1 %5, label %92, label %6

6:                                                ; preds = %4, %88
  %7 = phi %"class.blink::CrossThreadAudioParamInfo"* [ %90, %88 ], [ %0, %4 ]
  %8 = phi %"class.blink::CrossThreadAudioParamInfo"* [ %89, %88 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #9
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #9
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %28, %13, %6
  %31 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %8, i64 0, i32 1
  %32 = bitcast float* %31 to i8*
  %33 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %7, i64 0, i32 1
  %34 = bitcast float* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %34, i64 12, i1 false) #9
  %35 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %7, i64 0, i32 4, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %8, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #9
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %44
  tail call void @llvm.trap() #9
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %30
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %72

72:                                               ; preds = %71, %68, %56
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #9
  br label %88

88:                                               ; preds = %72, %84, %87
  %89 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %8, i64 1
  %90 = getelementptr inbounds %"class.blink::CrossThreadAudioParamInfo", %"class.blink::CrossThreadAudioParamInfo"* %7, i64 1
  %91 = icmp eq %"class.blink::CrossThreadAudioParamInfo"* %90, %1
  br i1 %91, label %92, label %6

92:                                               ; preds = %88, %4
  ret void
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!5 = distinct !{!5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSA_SB_: argument 0"}
!17 = distinct !{!17, !"_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSA_SB_"}
!18 = !{!"branch_weights", i32 2000, i32 1}
!19 = !{i8 0, i8 2}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink23AudioWorkletGlobalScope24GetExecutionContextTokenEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink23AudioWorkletGlobalScope24GetExecutionContextTokenEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink18WorkletGlobalScope30GetParentExecutionContextTokenEv"}
