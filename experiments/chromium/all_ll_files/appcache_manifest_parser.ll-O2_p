; ModuleID = '../../content/browser/appcache/appcache_manifest_parser.cc'
source_filename = "../../content/browser/appcache/appcache_manifest_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::AppCacheManifest" = type { %"class.std::__1::unordered_set", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.std::__1::basic_string", i8, i8, i8, %"class.base::Time" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"*, %"class.std::__1::__compressed_pair.23" }
%"struct.content::AppCacheNamespace" = type { i32, %class.GURL, %class.GURL, %"class.base::Time" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.19" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.content::AppCacheNamespace"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator.17" = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::basic_string.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.31 }
%union.anon.31 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::pair" = type { %"class.base::BasicStringPiece", %"class.base::BasicStringPiece" }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.32 }
%struct.anon.32 = type { %"struct.std::__1::__padding.33", i8 }
%"struct.std::__1::__padding.33" = type { [1 x i8] }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.url::StringPieceReplacements" = type { %"class.url::Replacements" }
%"class.url::Replacements" = type { %"struct.url::URLComponentSource", %"struct.url::Parsed" }
%"struct.url::URLComponentSource" = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN7content17AppCacheNamespaceENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN7content17AppCacheNamespaceENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_21AppCacheNamespaceTypeER4GURLS9_EEEvDpOT_ = comdat any

$_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr = comdat any

@.str = private unnamed_addr constant [4 x i8] c"\EF\BB\BF\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"CACHE MANIFEST\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"CHROMIUM CACHE MANIFEST\00", align 1
@_ZN7content12_GLOBAL__N_124kAppCacheOriginTrialNameE = internal constant [9 x i8] c"AppCache\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"CACHE:\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"FALLBACK:\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"NETWORK:\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"CHROMIUM-INTERCEPT:\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"ORIGIN-TRIAL:\00", align 1
@_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr = linkonce_odr hidden constant i8 0, comdat, align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"appcache.Manifest.ChromeHeader\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"appcache.Manifest.DangerousMode\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"appcache.Manifest.InterceptUsage\00", align 1

@_ZN7content16AppCacheManifestC1Ev = hidden unnamed_addr alias void (%"struct.content::AppCacheManifest"*), void (%"struct.content::AppCacheManifest"*)* @_ZN7content16AppCacheManifestC2Ev
@_ZN7content16AppCacheManifestD1Ev = hidden unnamed_addr alias void (%"struct.content::AppCacheManifest"*), void (%"struct.content::AppCacheManifest"*)* @_ZN7content16AppCacheManifestD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16AppCacheManifestC2Ev(%"struct.content::AppCacheManifest"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 0, i32 0, i32 3
  %3 = bitcast %"class.std::__1::__compressed_pair.11"* %2 to i32*
  %4 = bitcast %"struct.content::AppCacheManifest"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 72, i1 false)
  store i32 -1, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 27, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16AppCacheManifestD2Ev(%"struct.content::AppCacheManifest"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %13 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %12, align 8
  %14 = icmp eq %"struct.content::AppCacheNamespace"* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %10
  %16 = bitcast %"struct.content::AppCacheNamespace"* %13 to i8*
  %17 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %17, align 8
  %19 = icmp eq %"struct.content::AppCacheNamespace"* %18, %13
  br i1 %19, label %27, label %20

20:                                               ; preds = %15, %20
  %21 = phi %"struct.content::AppCacheNamespace"* [ %22, %20 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %21, i64 -1
  tail call void @_ZN7content17AppCacheNamespaceD1Ev(%"struct.content::AppCacheNamespace"* %22) #11
  %23 = icmp eq %"struct.content::AppCacheNamespace"* %22, %13
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::vector"* %11 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi i8* [ %26, %24 ], [ %16, %15 ]
  store %"struct.content::AppCacheNamespace"* %13, %"struct.content::AppCacheNamespace"** %17, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %10, %27
  %30 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 2
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %32 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %31, align 8
  %33 = icmp eq %"struct.content::AppCacheNamespace"* %32, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.content::AppCacheNamespace"* %32 to i8*
  %36 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 2, i32 0, i32 1
  %37 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %36, align 8
  %38 = icmp eq %"struct.content::AppCacheNamespace"* %37, %32
  br i1 %38, label %46, label %39

39:                                               ; preds = %34, %39
  %40 = phi %"struct.content::AppCacheNamespace"* [ %41, %39 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %40, i64 -1
  tail call void @_ZN7content17AppCacheNamespaceD1Ev(%"struct.content::AppCacheNamespace"* %41) #11
  %42 = icmp eq %"struct.content::AppCacheNamespace"* %41, %32
  br i1 %42, label %43, label %39

43:                                               ; preds = %39
  %44 = bitcast %"class.std::__1::vector"* %30 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %34
  %47 = phi i8* [ %45, %43 ], [ %35, %34 ]
  store %"struct.content::AppCacheNamespace"* %32, %"struct.content::AppCacheNamespace"** %36, align 8
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %29, %46
  %49 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %49, i64 0, i32 0, i32 0
  %51 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %50, align 8
  %52 = icmp eq %"struct.content::AppCacheNamespace"* %51, null
  br i1 %52, label %67, label %53

53:                                               ; preds = %48
  %54 = bitcast %"struct.content::AppCacheNamespace"* %51 to i8*
  %55 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 1, i32 0, i32 1
  %56 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %55, align 8
  %57 = icmp eq %"struct.content::AppCacheNamespace"* %56, %51
  br i1 %57, label %65, label %58

58:                                               ; preds = %53, %58
  %59 = phi %"struct.content::AppCacheNamespace"* [ %60, %58 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %59, i64 -1
  tail call void @_ZN7content17AppCacheNamespaceD1Ev(%"struct.content::AppCacheNamespace"* %60) #11
  %61 = icmp eq %"struct.content::AppCacheNamespace"* %60, %51
  br i1 %61, label %62, label %58

62:                                               ; preds = %58
  %63 = bitcast %"class.std::__1::vector"* %49 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %53
  %66 = phi i8* [ %64, %62 ], [ %54, %53 ]
  store %"struct.content::AppCacheNamespace"* %51, %"struct.content::AppCacheNamespace"** %55, align 8
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %48, %65
  %68 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %67, %83
  %72 = phi %"struct.std::__1::__hash_node_base"* [ %74, %83 ], [ %69, %67 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %72, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %72, i64 2
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %71
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i8**
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %80, %71
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8*
  tail call void @_ZdlPv(i8* %84) #12
  %85 = icmp eq %"struct.std::__1::__hash_node_base"* %74, null
  br i1 %85, label %86, label %71

86:                                               ; preds = %83, %67
  %87 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %87, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base"** %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %86
  %91 = bitcast %"struct.std::__1::__hash_node_base"** %88 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %86, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content13ParseManifestERK4GURLRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPKciNS_9ParseModeERNS_16AppCacheManifestE(%class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), i8*, i32, i32, %"struct.content::AppCacheManifest"* dereferenceable(160)) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::allocator.17", align 1
  %8 = alloca %"class.std::__1::allocator.17", align 1
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"class.base::BasicStringPiece"*
  %12 = alloca %"class.base::BasicStringPiece", align 8
  %13 = alloca %"class.base::BasicStringPiece", align 8
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %"class.base::BasicStringPiece"*
  %16 = alloca %"class.std::__1::basic_string.28", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca <2 x i64>, align 16
  %19 = bitcast <2 x i64>* %18 to %"class.base::BasicStringPiece"*
  %20 = alloca %class.GURL, align 8
  %21 = alloca <2 x i64>, align 16
  %22 = bitcast <2 x i64>* %21 to %"class.base::BasicStringPiece"*
  %23 = alloca %"class.base::BasicStringPiece", align 8
  %24 = alloca %"struct.std::__1::pair", align 8
  %25 = alloca %"class.blink::TrialTokenValidator", align 8
  %26 = alloca %"class.url::Origin", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.base::BasicStringPiece", align 8
  %29 = alloca %"struct.std::__1::pair", align 8
  %30 = alloca %class.GURL, align 8
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"struct.content::AppCacheNamespace", align 8
  %34 = alloca %class.GURL, align 8
  %35 = alloca %class.GURL, align 8
  %36 = alloca %class.GURL, align 8
  %37 = alloca %"class.base::BasicStringPiece", align 8
  %38 = alloca %"struct.std::__1::pair", align 8
  %39 = alloca %"class.base::BasicStringPiece", align 8
  %40 = alloca %"struct.std::__1::pair", align 8
  %41 = alloca %class.GURL, align 8
  %42 = alloca %class.GURL, align 8
  %43 = alloca %class.GURL, align 8
  %44 = alloca i32, align 4
  %45 = alloca %class.GURL, align 8
  %46 = alloca %class.GURL, align 8
  %47 = alloca %class.GURL, align 8
  %48 = alloca %"class.base::BasicStringPiece", align 8
  %49 = alloca %"struct.std::__1::pair", align 8
  %50 = alloca %class.GURL, align 8
  %51 = alloca %class.GURL, align 8
  %52 = alloca %class.GURL, align 8
  %53 = alloca i32, align 4
  %54 = icmp eq i32 %4, 1
  %55 = bitcast %"class.std::__1::basic_string.28"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.std::__1::basic_string.28", %"class.std::__1::basic_string.28"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string.28", %"class.std::__1::basic_string.28"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = sext i32 %3 to i64
  %59 = bitcast %"class.std::__1::basic_string.28"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 24, i1 false)
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.28"* nonnull sret %16, i8* %2, i64 %58) #11
  %60 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string.28"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 24, i1 false)
  %66 = load i8, i8* %64, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i16*, i16** %56, align 8
  %69 = bitcast %"class.std::__1::basic_string.28"* %16 to i16*
  %70 = select i1 %67, i16* %68, i16* %69
  %71 = load i64, i64* %57, align 8
  %72 = zext i8 %66 to i64
  %73 = select i1 %67, i64 %71, i64 %72
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %17, i16* %70, i64 %73) #11
  %74 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #11
  %75 = bitcast <2 x i64>* %18 to i8**
  %76 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i8*, i8** %61, align 8
  %82 = select i1 %80, i8* %81, i8* %60
  store i8* %82, i8** %75, align 16
  %83 = load i64, i64* %62, align 8
  %84 = zext i8 %79 to i64
  %85 = select i1 %80, i64 %83, i64 %84
  store i64 %85, i64* %76, align 8
  %86 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %82, i64 %85, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i32 0) #11
  br i1 %86, label %87, label %91

87:                                               ; preds = %6
  %88 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %19, i64 3, i64 -1)
  %89 = extractvalue { i8*, i64 } %88, 0
  %90 = extractvalue { i8*, i64 } %88, 1
  store i8* %89, i8** %75, align 16
  store i64 %90, i64* %76, align 8
  br label %91

91:                                               ; preds = %87, %6
  %92 = phi i64 [ %90, %87 ], [ %85, %6 ]
  %93 = phi i8* [ %89, %87 ], [ %82, %6 ]
  %94 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %93, i64 %92, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14, i32 0) #11
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = load i8*, i8** %75, align 16
  %97 = load i64, i64* %76, align 8
  %98 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %96, i64 %97, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i64 23, i32 0) #11
  br i1 %98, label %99, label %696

99:                                               ; preds = %95, %91
  %100 = phi i64 [ 14, %91 ], [ 23, %95 ]
  %101 = phi i8 [ 0, %91 ], [ 1, %95 ]
  %102 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %19, i64 %100, i64 -1)
  %103 = extractvalue { i8*, i64 } %102, 0
  %104 = extractvalue { i8*, i64 } %102, 1
  store i8* %103, i8** %75, align 16
  store i64 %104, i64* %76, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %19, i64 0) #11
  %108 = load i8, i8* %107, align 1
  switch i8 %108, label %696 [
    i8 32, label %109
    i8 9, label %109
    i8 10, label %109
    i8 13, label %109
  ]

109:                                              ; preds = %106, %106, %106, %106, %99
  %110 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 1
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %696, label %113

113:                                              ; preds = %109
  %114 = call zeroext i1 @_ZN7content8AppCache23CheckValidManifestScopeERK4GURLRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.GURL* dereferenceable(120) %0, %"class.std::__1::basic_string"* dereferenceable(24) %1) #11
  br i1 %114, label %115, label %696

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 4
  store i32 2, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 5
  %118 = icmp eq %"class.std::__1::basic_string"* %117, %1
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %150

121:                                              ; preds = %115
  %122 = bitcast %"class.std::__1::basic_string"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  %126 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %125, label %140, label %130

130:                                              ; preds = %121
  br i1 %129, label %134, label %131

131:                                              ; preds = %130
  %132 = bitcast %"class.std::__1::basic_string"* %117 to i8*
  %133 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 24, i1 false) #11
  br label %150

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %117, i8* %136, i64 %138) #11
  br label %150

140:                                              ; preds = %121
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %146 = zext i8 %128 to i64
  %147 = select i1 %129, i8* %142, i8* %145
  %148 = select i1 %129, i64 %144, i64 %146
  %149 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %117, i8* %147, i64 %148) #11
  br label %150

150:                                              ; preds = %119, %131, %134, %140
  %151 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %120, %119 ], [ %126, %131 ], [ %126, %134 ], [ %126, %140 ]
  %152 = bitcast %class.GURL* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %152) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 120, i1 false)
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %159 = select i1 %155, i8* %157, i8* %158
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = zext i8 %154 to i64
  %163 = select i1 %155, i64 %161, i64 %162
  call void @_ZNK4GURL7ResolveEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull sret %20, %class.GURL* %0, i8* %159, i64 %163) #11
  %164 = getelementptr inbounds <2 x i64>, <2 x i64>* %18, i64 0, i64 0
  %165 = load <2 x i64>, <2 x i64>* %18, align 16
  %166 = bitcast <2 x i64>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166)
  %167 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 1
  store <2 x i64> %165, <2 x i64>* %14, align 16
  %168 = extractelement <2 x i64> %165, i32 1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %178, label %170

170:                                              ; preds = %150, %174
  %171 = phi i64 [ %175, %174 ], [ 0, %150 ]
  %172 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %15, i64 %171) #11
  %173 = load i8, i8* %172, align 1
  switch i8 %173, label %174 [
    i8 13, label %178
    i8 10, label %178
  ]

174:                                              ; preds = %170
  %175 = add nuw i64 %171, 1
  %176 = load i64, i64* %167, align 8
  %177 = icmp ult i64 %175, %176
  br i1 %177, label %170, label %178

178:                                              ; preds = %170, %170, %174, %150
  %179 = phi i64 [ 0, %150 ], [ %175, %174 ], [ %171, %170 ], [ %171, %170 ]
  %180 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %15, i64 %179, i64 -1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166)
  %181 = extractvalue { i8*, i64 } %180, 0
  %182 = extractvalue { i8*, i64 } %180, 1
  store i8* %181, i8** %75, align 16
  store i64 %182, i64* %76, align 8
  %183 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  %184 = bitcast %"class.base::BasicStringPiece"* %13 to i64*
  %185 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  %186 = bitcast <2 x i64>* %21 to i8*
  %187 = bitcast <2 x i64>* %21 to i8**
  %188 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %22, i64 0, i32 1
  %189 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  %190 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  %191 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  %192 = bitcast <2 x i64>* %10 to i8*
  %193 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  %194 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %195 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %196 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 9, i32 0, i32 0
  %197 = bitcast %"class.base::BasicStringPiece"* %23 to i8*
  %198 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 0
  %199 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 1
  %200 = bitcast %"struct.std::__1::pair"* %24 to i8*
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 1
  %202 = bitcast %"class.base::BasicStringPiece"* %201 to i8*
  %203 = bitcast %"class.blink::TrialTokenValidator"* %25 to i8*
  %204 = getelementptr inbounds %"class.blink::TrialTokenValidator", %"class.blink::TrialTokenValidator"* %25, i64 0, i32 0
  %205 = bitcast %"class.url::Origin"* %26 to i8*
  %206 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %207 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 6
  %212 = bitcast %"class.base::BasicStringPiece"* %28 to i8*
  %213 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %28, i64 0, i32 0
  %214 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %28, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::pair"* %29 to i8*
  %216 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 1
  %217 = bitcast %"class.base::BasicStringPiece"* %216 to i8*
  %218 = bitcast %class.GURL* %30 to i8*
  %219 = getelementptr inbounds %class.GURL, %class.GURL* %30, i64 0, i32 1
  %220 = bitcast %class.GURL* %45 to i8*
  %221 = bitcast %class.GURL* %46 to i8*
  %222 = bitcast %class.GURL* %47 to i8*
  %223 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 8
  %224 = bitcast %"class.base::BasicStringPiece"* %48 to i8*
  %225 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %48, i64 0, i32 0
  %226 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %48, i64 0, i32 1
  %227 = bitcast %"struct.std::__1::pair"* %49 to i8*
  %228 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 1
  %229 = bitcast %"class.base::BasicStringPiece"* %228 to i8*
  %230 = bitcast %class.GURL* %50 to i8*
  %231 = getelementptr inbounds %class.GURL, %class.GURL* %50, i64 0, i32 1
  %232 = bitcast %class.GURL* %51 to i8*
  %233 = bitcast %class.GURL* %52 to i8*
  %234 = bitcast i32* %53 to i8*
  %235 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 2, i32 0, i32 1
  %236 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %237 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 2
  %238 = bitcast %"struct.content::AppCacheNamespace"** %235 to i64*
  %239 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 7
  %240 = bitcast %class.GURL* %35 to i8*
  %241 = bitcast %class.GURL* %36 to i8*
  %242 = bitcast %"class.base::BasicStringPiece"* %37 to i8*
  %243 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 0, i32 0
  %244 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 0, i32 1
  %245 = bitcast %"struct.std::__1::pair"* %38 to i8*
  %246 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 1
  %247 = bitcast %"class.base::BasicStringPiece"* %246 to i8*
  %248 = bitcast %"class.base::BasicStringPiece"* %39 to i8*
  %249 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %39, i64 0, i32 0
  %250 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %39, i64 0, i32 1
  %251 = bitcast %"struct.std::__1::pair"* %40 to i8*
  %252 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %40, i64 0, i32 1
  %253 = bitcast %"class.base::BasicStringPiece"* %252 to i8*
  %254 = bitcast %class.GURL* %41 to i8*
  %255 = getelementptr inbounds %class.GURL, %class.GURL* %41, i64 0, i32 1
  %256 = bitcast %class.GURL* %42 to i8*
  %257 = bitcast %class.GURL* %43 to i8*
  %258 = bitcast i32* %44 to i8*
  %259 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 1, i32 0, i32 1
  %260 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %261 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 1
  %262 = bitcast %"struct.content::AppCacheNamespace"** %259 to i64*
  %263 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %264 = getelementptr inbounds %class.GURL, %class.GURL* %30, i64 0, i32 2, i32 0, i32 1
  %265 = getelementptr inbounds %class.GURL, %class.GURL* %30, i64 0, i32 0
  %266 = getelementptr inbounds %class.GURL, %class.GURL* %30, i64 0, i32 2, i32 0, i32 0
  %267 = getelementptr inbounds %"class.std::__1::allocator.17", %"class.std::__1::allocator.17"* %8, i64 0, i32 0
  %268 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %269 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 1
  %270 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %271 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 0
  %272 = getelementptr inbounds %"class.std::__1::allocator.17", %"class.std::__1::allocator.17"* %7, i64 0, i32 0
  %273 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %273, i64 0, i32 1, i32 0
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %276 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %277 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %276, i64 0, i32 1, i32 0
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = bitcast %"struct.content::AppCacheNamespace"* %33 to i8*
  %282 = bitcast %class.GURL* %34 to i8*
  %283 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 3, i32 0, i32 1
  %284 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %285 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 3
  %286 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %33, i64 0, i32 0
  %287 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %33, i64 0, i32 1
  %288 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %33, i64 0, i32 2
  %289 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %33, i64 0, i32 3, i32 0, i32 0
  %290 = bitcast %"struct.content::AppCacheNamespace"** %283 to i64*
  %291 = getelementptr inbounds %"struct.content::AppCacheManifest", %"struct.content::AppCacheManifest"* %5, i64 0, i32 0, i32 0
  br label %292

292:                                              ; preds = %689, %178
  %293 = phi i64 [ %692, %689 ], [ %182, %178 ]
  %294 = phi i8 [ %690, %689 ], [ 0, %178 ]
  %295 = phi i32 [ %691, %689 ], [ 0, %178 ]
  %296 = load i64, i64* %164, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %183)
  store i64 %296, i64* %184, align 8
  store i64 %293, i64* %185, align 8
  %297 = icmp eq i64 %293, 0
  br i1 %297, label %306, label %298

298:                                              ; preds = %292, %302
  %299 = phi i64 [ %303, %302 ], [ 0, %292 ]
  %300 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %13, i64 %299) #11
  %301 = load i8, i8* %300, align 1
  switch i8 %301, label %306 [
    i8 32, label %302
    i8 9, label %302
    i8 10, label %302
    i8 13, label %302
  ]

302:                                              ; preds = %298, %298, %298, %298
  %303 = add nuw i64 %299, 1
  %304 = load i64, i64* %185, align 8
  %305 = icmp ult i64 %303, %304
  br i1 %305, label %298, label %306

306:                                              ; preds = %298, %302, %292
  %307 = phi i64 [ 0, %292 ], [ %303, %302 ], [ %299, %298 ]
  %308 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %13, i64 %307, i64 -1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %183)
  %309 = extractvalue { i8*, i64 } %308, 0
  %310 = extractvalue { i8*, i64 } %308, 1
  store i8* %309, i8** %75, align 16
  store i64 %310, i64* %76, align 8
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %693, label %312

312:                                              ; preds = %306
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %186, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %189)
  store i8* %309, i8** %190, align 8, !noalias !3
  store i64 %310, i64* %191, align 8, !noalias !3
  br label %313

313:                                              ; preds = %312, %317
  %314 = phi i64 [ %318, %317 ], [ 0, %312 ]
  %315 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %12, i64 %314) #11, !noalias !3
  %316 = load i8, i8* %315, align 1, !noalias !3
  switch i8 %316, label %317 [
    i8 13, label %321
    i8 10, label %321
  ]

317:                                              ; preds = %313
  %318 = add nuw i64 %314, 1
  %319 = load i64, i64* %191, align 8, !noalias !3
  %320 = icmp ult i64 %318, %319
  br i1 %320, label %313, label %321

321:                                              ; preds = %313, %313, %317
  %322 = phi i64 [ %314, %313 ], [ %314, %313 ], [ %318, %317 ]
  %323 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %12, i64 0, i64 %322) #11, !noalias !3
  %324 = extractvalue { i8*, i64 } %323, 0
  %325 = extractvalue { i8*, i64 } %323, 1
  %326 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %12, i64 %322, i64 -1) #11, !noalias !3
  %327 = extractvalue { i8*, i64 } %326, 0
  %328 = extractvalue { i8*, i64 } %326, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %189)
  store i8* %324, i8** %187, align 16
  store i64 %325, i64* %188, align 8
  store i8* %327, i8** %75, align 16
  store i64 %328, i64* %76, align 8
  %329 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %22, i64 0) #11
  %330 = load i8, i8* %329, align 1
  %331 = icmp eq i8 %330, 35
  br i1 %331, label %689, label %332

332:                                              ; preds = %321
  %333 = load <2 x i64>, <2 x i64>* %21, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192)
  store <2 x i64> %333, <2 x i64>* %10, align 16
  %334 = extractelement <2 x i64> %333, i32 1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %343, label %336

336:                                              ; preds = %332, %341
  %337 = phi i64 [ %338, %341 ], [ %334, %332 ]
  %338 = add i64 %337, -1
  %339 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %11, i64 %338) #11
  %340 = load i8, i8* %339, align 1
  switch i8 %340, label %343 [
    i8 32, label %341
    i8 9, label %341
    i8 10, label %341
    i8 13, label %341
  ]

341:                                              ; preds = %336, %336, %336, %336
  %342 = icmp eq i64 %338, 0
  br i1 %342, label %343, label %336

343:                                              ; preds = %336, %341, %332
  %344 = phi i64 [ 0, %332 ], [ 0, %341 ], [ %337, %336 ]
  %345 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %11, i64 0, i64 %344) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192)
  %346 = extractvalue { i8*, i64 } %345, 0
  %347 = extractvalue { i8*, i64 } %345, 1
  store i8* %346, i8** %187, align 16
  store i64 %347, i64* %188, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193)
  store i8* %346, i8** %194, align 8
  store i64 %347, i64* %195, align 8
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %350

349:                                              ; preds = %343
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193)
  br label %375

350:                                              ; preds = %343
  %351 = add i64 %347, -1
  %352 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %9, i64 %351) #11
  %353 = load i8, i8* %352, align 1
  %354 = icmp eq i8 %353, 58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193)
  br i1 %354, label %355, label %375

355:                                              ; preds = %350
  %356 = load i8*, i8** %187, align 16
  %357 = load i64, i64* %188, align 8
  switch i64 %357, label %370 [
    i64 6, label %358
    i64 9, label %361
    i64 8, label %364
    i64 19, label %367
    i64 13, label %371
  ]

358:                                              ; preds = %355
  %359 = call i32 @bcmp(i8* %356, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #11
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %689, label %370

361:                                              ; preds = %355
  %362 = call i32 @bcmp(i8* %356, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i64 9) #11
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %689, label %370

364:                                              ; preds = %355
  %365 = call i32 @bcmp(i8* %356, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #11
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %689, label %370

367:                                              ; preds = %355
  %368 = call i32 @bcmp(i8* %356, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i64 19) #11
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %689, label %370

370:                                              ; preds = %367, %364, %361, %358, %355
  br label %689

371:                                              ; preds = %355
  %372 = call i32 @bcmp(i8* %356, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i64 13) #11
  %373 = icmp eq i32 %372, 0
  %374 = select i1 %373, i32 4, i32 5
  br label %689

375:                                              ; preds = %349, %350
  switch i32 %295, label %376 [
    i32 5, label %689
    i32 3, label %378
    i32 4, label %386
  ]

376:                                              ; preds = %375
  %377 = load i64, i64* %188, align 8
  br label %441

378:                                              ; preds = %375
  %379 = load i64, i64* %188, align 8
  %380 = icmp eq i64 %379, 1
  br i1 %380, label %381, label %441

381:                                              ; preds = %378
  %382 = load i8*, i8** %187, align 16
  %383 = load i8, i8* %382, align 1
  %384 = icmp eq i8 %383, 42
  br i1 %384, label %385, label %441

385:                                              ; preds = %381
  store i8 1, i8* %211, align 8
  br label %689

386:                                              ; preds = %375
  %387 = load i64, i64* %196, align 8
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %389, label %689

389:                                              ; preds = %386
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %200) #11
  %390 = load i8*, i8** %187, align 16
  %391 = load i64, i64* %188, align 8
  call fastcc void @_ZN7content12_GLOBAL__N_114SplitLineTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* nonnull sret %24, i8* %390, i64 %391)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %197, i8* nonnull align 8 %200, i64 16, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %186, i8* align 8 %202, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %200) #11
  %392 = call zeroext i1 @_ZN5blink19TrialTokenValidator23IsTrialPossibleOnOriginERK4GURL(%class.GURL* dereferenceable(120) %0) #11
  br i1 %392, label %393, label %440

393:                                              ; preds = %389
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #11
  store i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 (...)*** %204, align 8
  call void @_ZN5blink19TrialTokenValidatorC1Ev(%"class.blink::TrialTokenValidator"* nonnull %25) #11
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %205) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 80, i1 false)
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %26, %class.GURL* dereferenceable(120) %0) #11
  %394 = load i8*, i8** %198, align 8
  %395 = load i64, i64* %199, align 8
  %396 = call i64 @_ZN4base4Time3NowEv() #11
  %397 = call { i32, %"class.blink::TrialToken"* } @_ZNK5blink19TrialTokenValidator13ValidateTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKN3url6OriginENS1_4TimeE(%"class.blink::TrialTokenValidator"* nonnull %25, i8* %394, i64 %395, %"class.url::Origin"* nonnull dereferenceable(80) %26, i64 %396) #11
  %398 = extractvalue { i32, %"class.blink::TrialToken"* } %397, 0
  %399 = extractvalue { i32, %"class.blink::TrialToken"* } %397, 1
  %400 = icmp eq i32 %398, 0
  br i1 %400, label %401, label %435

401:                                              ; preds = %393
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #11
  %402 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %399, i64 0, i32 2
  %403 = bitcast %"class.std::__1::basic_string"* %402 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %404 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %403, i64 0, i32 1, i32 0
  %405 = load i8, i8* %404, align 1, !noalias !6
  %406 = icmp slt i8 %405, 0
  br i1 %406, label %409, label %407

407:                                              ; preds = %401
  %408 = bitcast %"class.std::__1::basic_string"* %402 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %206, i8* align 8 %408, i64 24, i1 false) #11
  br label %414

409:                                              ; preds = %401
  %410 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %402, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = load i8*, i8** %410, align 8, !noalias !6
  %412 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %413 = load i64, i64* %412, align 8, !noalias !6
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %27, i8* %411, i64 %413) #11
  br label %414

414:                                              ; preds = %407, %409
  %415 = load i8, i8* %208, align 1
  %416 = icmp slt i8 %415, 0
  %417 = load i64, i64* %209, align 8
  %418 = zext i8 %415 to i64
  %419 = select i1 %416, i64 %417, i64 %418
  %420 = icmp eq i64 %419, 8
  br i1 %420, label %421, label %425

421:                                              ; preds = %414
  %422 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %27, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN7content12_GLOBAL__N_124kAppCacheOriginTrialNameE, i64 0, i64 0), i64 8) #11
  %423 = icmp eq i32 %422, 0
  %424 = load i8, i8* %208, align 1
  br label %425

425:                                              ; preds = %414, %421
  %426 = phi i8 [ %424, %421 ], [ %415, %414 ]
  %427 = phi i1 [ %423, %421 ], [ false, %414 ]
  %428 = icmp slt i8 %426, 0
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %430) #12
  br label %431

431:                                              ; preds = %425, %429
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #11
  br i1 %427, label %432, label %435

432:                                              ; preds = %431
  %433 = getelementptr inbounds %"class.blink::TrialToken", %"class.blink::TrialToken"* %399, i64 0, i32 3, i32 0, i32 0
  %434 = load i64, i64* %433, align 8
  store i64 %434, i64* %196, align 8
  br label %435

435:                                              ; preds = %431, %432, %393
  %436 = icmp eq %"class.blink::TrialToken"* %399, null
  br i1 %436, label %439, label %437

437:                                              ; preds = %435
  call void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"* nonnull %399) #11
  %438 = bitcast %"class.blink::TrialToken"* %399 to i8*
  call void @_ZdlPv(i8* %438) #12
  br label %439

439:                                              ; preds = %435, %437
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %205) #11
  call void @_ZN5blink19TrialTokenValidatorD1Ev(%"class.blink::TrialTokenValidator"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #11
  br label %440

440:                                              ; preds = %389, %439
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #11
  br label %689

441:                                              ; preds = %376, %378, %381
  %442 = phi i64 [ %377, %376 ], [ %379, %378 ], [ 1, %381 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %212) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %215) #11
  %443 = load i8*, i8** %187, align 16
  call fastcc void @_ZN7content12_GLOBAL__N_114SplitLineTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* nonnull sret %29, i8* %443, i64 %442)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %212, i8* nonnull align 8 %215, i64 16, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %186, i8* align 8 %217, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %215) #11
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %218) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %218, i8 -86, i64 120, i1 false)
  %444 = load i8*, i8** %213, align 8
  %445 = load i64, i64* %214, align 8
  call fastcc void @_ZN7content12_GLOBAL__N_113ParseUrlTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERK4GURL(%class.GURL* nonnull sret %30, i8* %444, i64 %445, %class.GURL* dereferenceable(120) %0)
  %446 = load i8, i8* %219, align 8, !range !2
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %687, label %448

448:                                              ; preds = %441
  %449 = icmp eq i32 %295, 0
  switch i32 %295, label %687 [
    i32 3, label %450
    i32 0, label %450
    i32 1, label %538
    i32 2, label %605
  ]

450:                                              ; preds = %448, %448
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %263) #11
  %451 = load i32, i32* %264, align 4, !noalias !9
  %452 = icmp slt i32 %451, 1
  br i1 %452, label %453, label %454

453:                                              ; preds = %450
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 0, i64 24, i1 false) #11, !alias.scope !9
  br label %458

454:                                              ; preds = %450
  %455 = load i32, i32* %266, align 8, !noalias !9
  %456 = sext i32 %455 to i64
  %457 = sext i32 %451 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %267) #11, !noalias !9
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %265, i64 %456, i64 %457, %"class.std::__1::allocator.17"* nonnull dereferenceable(1) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %267) #11, !noalias !9
  br label %458

458:                                              ; preds = %453, %454
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #11
  %459 = load i32, i32* %269, align 4, !noalias !14
  %460 = icmp slt i32 %459, 1
  br i1 %460, label %461, label %462

461:                                              ; preds = %458
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %268, i8 0, i64 24, i1 false) #11, !alias.scope !14
  br label %468

462:                                              ; preds = %458
  %463 = load i32, i32* %271, align 4, !noalias !14
  %464 = sext i32 %463 to i64
  %465 = sext i32 %459 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %272) #11, !noalias !14
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %32, %"class.std::__1::basic_string"* dereferenceable(24) %270, i64 %464, i64 %465, %"class.std::__1::allocator.17"* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %272) #11, !noalias !14
  %466 = load i8, i8* %277, align 1
  %467 = load i64, i64* %278, align 8
  br label %468

468:                                              ; preds = %461, %462
  %469 = phi i64 [ 0, %461 ], [ %467, %462 ]
  %470 = phi i8 [ 0, %461 ], [ %466, %462 ]
  %471 = load i8, i8* %274, align 1
  %472 = icmp slt i8 %471, 0
  %473 = load i64, i64* %275, align 8
  %474 = zext i8 %471 to i64
  %475 = select i1 %472, i64 %473, i64 %474
  %476 = icmp slt i8 %470, 0
  %477 = zext i8 %470 to i64
  %478 = select i1 %476, i64 %469, i64 %477
  %479 = icmp eq i64 %475, %478
  br i1 %479, label %480, label %508

480:                                              ; preds = %468
  %481 = load i8*, i8** %279, align 8
  %482 = select i1 %472, i8* %481, i8* %263
  %483 = load i8*, i8** %280, align 8
  %484 = select i1 %476, i8* %483, i8* %268
  %485 = icmp eq i64 %475, 0
  br i1 %472, label %492, label %486

486:                                              ; preds = %480
  br i1 %485, label %508, label %487

487:                                              ; preds = %486
  %488 = ptrtoint i8* %481 to i64
  %489 = trunc i64 %488 to i8
  %490 = load i8, i8* %484, align 1
  %491 = icmp eq i8 %490, %489
  br i1 %491, label %496, label %508

492:                                              ; preds = %480
  br i1 %485, label %508, label %493

493:                                              ; preds = %492
  %494 = call i32 @bcmp(i8* %482, i8* %484, i64 %475) #11
  %495 = icmp ne i32 %494, 0
  br label %508

496:                                              ; preds = %487, %503
  %497 = phi i64 [ %500, %503 ], [ %474, %487 ]
  %498 = phi i8* [ %501, %503 ], [ %263, %487 ]
  %499 = phi i8* [ %504, %503 ], [ %484, %487 ]
  %500 = add i64 %497, -1
  %501 = getelementptr inbounds i8, i8* %498, i64 1
  %502 = icmp eq i64 %500, 0
  br i1 %502, label %508, label %503

503:                                              ; preds = %496
  %504 = getelementptr inbounds i8, i8* %499, i64 1
  %505 = load i8, i8* %501, align 1
  %506 = load i8, i8* %504, align 1
  %507 = icmp eq i8 %505, %506
  br i1 %507, label %496, label %508

508:                                              ; preds = %496, %503, %487, %468, %486, %492, %493
  %509 = phi i1 [ true, %468 ], [ %495, %493 ], [ false, %492 ], [ false, %486 ], [ true, %487 ], [ false, %496 ], [ true, %503 ]
  br i1 %476, label %510, label %513

510:                                              ; preds = %508
  %511 = load i8*, i8** %280, align 8
  call void @_ZdlPv(i8* %511) #12
  %512 = load i8, i8* %274, align 1
  br label %513

513:                                              ; preds = %508, %510
  %514 = phi i8 [ %471, %508 ], [ %512, %510 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #11
  %515 = icmp slt i8 %514, 0
  br i1 %515, label %516, label %518

516:                                              ; preds = %513
  %517 = load i8*, i8** %279, align 8
  call void @_ZdlPv(i8* %517) #12
  br label %518

518:                                              ; preds = %513, %516
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #11
  br i1 %509, label %687, label %519

519:                                              ; preds = %518
  br i1 %449, label %520, label %523

520:                                              ; preds = %519
  %521 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %30) #11
  %522 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %291, %"class.std::__1::basic_string"* dereferenceable(24) %521, %"class.std::__1::basic_string"* dereferenceable(24) %521) #11
  br label %687

523:                                              ; preds = %519
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %281) #11
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %282) #11
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %34) #11
  call void @_ZN7content17AppCacheNamespaceC1ENS_21AppCacheNamespaceTypeERK4GURLS4_(%"struct.content::AppCacheNamespace"* nonnull %33, i32 2, %class.GURL* nonnull dereferenceable(120) %30, %class.GURL* nonnull dereferenceable(120) %34) #11
  %524 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %283, align 8
  %525 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %284, align 8
  %526 = icmp ult %"struct.content::AppCacheNamespace"* %524, %525
  br i1 %526, label %527, label %536

527:                                              ; preds = %523
  %528 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %524, i64 0, i32 0
  %529 = load i32, i32* %286, align 8
  store i32 %529, i32* %528, align 8
  %530 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %524, i64 0, i32 1
  call void @_ZN4GURLC1ERKS_(%class.GURL* %530, %class.GURL* dereferenceable(120) %287) #11
  %531 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %524, i64 0, i32 2
  call void @_ZN4GURLC1ERKS_(%class.GURL* %531, %class.GURL* dereferenceable(120) %288) #11
  %532 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %524, i64 0, i32 3, i32 0, i32 0
  %533 = load i64, i64* %289, align 8
  store i64 %533, i64* %532, align 8
  %534 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %524, i64 1
  %535 = ptrtoint %"struct.content::AppCacheNamespace"* %534 to i64
  store i64 %535, i64* %290, align 8
  br label %537

536:                                              ; preds = %523
  call void @_ZNSt3__16vectorIN7content17AppCacheNamespaceENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"* %285, %"struct.content::AppCacheNamespace"* nonnull dereferenceable(256) %33) #11
  br label %537

537:                                              ; preds = %527, %536
  call void @_ZN7content17AppCacheNamespaceD1Ev(%"struct.content::AppCacheNamespace"* nonnull %33) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %282) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %281) #11
  br label %687

538:                                              ; preds = %448
  br i1 %54, label %540, label %539

539:                                              ; preds = %538
  store i8 1, i8* %239, align 1
  br label %687

540:                                              ; preds = %538
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %240) #11
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %35, %class.GURL* nonnull %30) #11
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %241) #11
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %36, %class.GURL* %0) #11
  %541 = call zeroext i1 @_ZneRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %35, %class.GURL* nonnull dereferenceable(120) %36) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %241) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %240) #11
  br i1 %541, label %687, label %542

542:                                              ; preds = %540
  %543 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %30) #11
  %544 = bitcast %"class.std::__1::basic_string"* %543 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %545 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %544, i64 0, i32 1, i32 0
  %546 = load i8, i8* %545, align 1
  %547 = icmp slt i8 %546, 0
  %548 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %543, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %549 = load i8*, i8** %548, align 8
  %550 = bitcast %"class.std::__1::basic_string"* %543 to i8*
  %551 = select i1 %547, i8* %549, i8* %550
  %552 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %543, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %553 = load i64, i64* %552, align 8
  %554 = zext i8 %546 to i64
  %555 = select i1 %547, i64 %553, i64 %554
  %556 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %20) #11
  %557 = bitcast %"class.std::__1::basic_string"* %556 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %558 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %557, i64 0, i32 1, i32 0
  %559 = load i8, i8* %558, align 1
  %560 = icmp slt i8 %559, 0
  %561 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %556, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %562 = load i8*, i8** %561, align 8
  %563 = bitcast %"class.std::__1::basic_string"* %556 to i8*
  %564 = select i1 %560, i8* %562, i8* %563
  %565 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %556, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %566 = load i64, i64* %565, align 8
  %567 = zext i8 %559 to i64
  %568 = select i1 %560, i64 %566, i64 %567
  %569 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %551, i64 %555, i8* %564, i64 %568, i32 0) #11
  br i1 %569, label %570, label %687

570:                                              ; preds = %542
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %242) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %245) #11
  %571 = load i8*, i8** %187, align 16
  %572 = load i64, i64* %188, align 8
  call fastcc void @_ZN7content12_GLOBAL__N_114SplitLineTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* nonnull sret %38, i8* %571, i64 %572)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %242, i8* nonnull align 8 %245, i64 16, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %186, i8* align 8 %247, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %245) #11
  %573 = load i64, i64* %244, align 8
  %574 = icmp eq i64 %573, 6
  br i1 %574, label %575, label %603

575:                                              ; preds = %570
  %576 = load i8*, i8** %243, align 8
  %577 = call i32 @bcmp(i8* %576, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #11
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %603

579:                                              ; preds = %575
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %248) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %248, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %251) #11
  %580 = load i8*, i8** %187, align 16
  %581 = load i64, i64* %188, align 8
  call fastcc void @_ZN7content12_GLOBAL__N_114SplitLineTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* nonnull sret %40, i8* %580, i64 %581)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %248, i8* nonnull align 8 %251, i64 16, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %186, i8* align 8 %253, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %251) #11
  %582 = load i64, i64* %250, align 8
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %601, label %584

584:                                              ; preds = %579
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %254) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 -86, i64 120, i1 false)
  %585 = load i8*, i8** %249, align 8
  call fastcc void @_ZN7content12_GLOBAL__N_113ParseUrlTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERK4GURL(%class.GURL* nonnull sret %41, i8* %585, i64 %582, %class.GURL* dereferenceable(120) %0)
  %586 = load i8, i8* %255, align 8, !range !2
  %587 = icmp eq i8 %586, 0
  br i1 %587, label %599, label %588

588:                                              ; preds = %584
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %256) #11
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %42, %class.GURL* %0) #11
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %257) #11
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %43, %class.GURL* nonnull %41) #11
  %589 = call zeroext i1 @_ZneRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %42, %class.GURL* nonnull dereferenceable(120) %43) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %257) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %256) #11
  br i1 %589, label %599, label %590

590:                                              ; preds = %588
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %258) #11
  store i32 1, i32* %44, align 4
  %591 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %259, align 8
  %592 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %260, align 8
  %593 = icmp ult %"struct.content::AppCacheNamespace"* %591, %592
  br i1 %593, label %594, label %597

594:                                              ; preds = %590
  call void @_ZN7content17AppCacheNamespaceC1ENS_21AppCacheNamespaceTypeERK4GURLS4_(%"struct.content::AppCacheNamespace"* %591, i32 1, %class.GURL* nonnull dereferenceable(120) %30, %class.GURL* nonnull dereferenceable(120) %41) #11
  %595 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %591, i64 1
  %596 = ptrtoint %"struct.content::AppCacheNamespace"* %595 to i64
  store i64 %596, i64* %262, align 8
  br label %598

597:                                              ; preds = %590
  call void @_ZNSt3__16vectorIN7content17AppCacheNamespaceENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_21AppCacheNamespaceTypeER4GURLS9_EEEvDpOT_(%"class.std::__1::vector"* %261, i32* nonnull dereferenceable(4) %44, %class.GURL* nonnull dereferenceable(120) %30, %class.GURL* nonnull dereferenceable(120) %41) #11
  br label %598

598:                                              ; preds = %594, %597
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %258) #11
  br label %599

599:                                              ; preds = %584, %588, %598
  %600 = phi i8 [ %294, %588 ], [ 1, %598 ], [ %294, %584 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %254) #11
  br label %601

601:                                              ; preds = %579, %599
  %602 = phi i8 [ %294, %579 ], [ %600, %599 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %248) #11
  br label %603

603:                                              ; preds = %575, %570, %601
  %604 = phi i8 [ %294, %575 ], [ %602, %601 ], [ %294, %570 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %242) #11
  br label %687

605:                                              ; preds = %448
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %220) #11
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %45, %class.GURL* nonnull %30) #11
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %221) #11
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %46, %class.GURL* %0) #11
  %606 = call zeroext i1 @_ZneRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %45, %class.GURL* nonnull dereferenceable(120) %46) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %221) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %220) #11
  br i1 %606, label %687, label %607

607:                                              ; preds = %605
  br i1 %54, label %637, label %608

608:                                              ; preds = %607
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %222) #11
  call void @_ZNK4GURL18GetWithoutFilenameEv(%class.GURL* nonnull sret %47, %class.GURL* %0) #11
  %609 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %30) #11
  %610 = bitcast %"class.std::__1::basic_string"* %609 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %611 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %610, i64 0, i32 1, i32 0
  %612 = load i8, i8* %611, align 1
  %613 = icmp slt i8 %612, 0
  %614 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %609, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %615 = load i8*, i8** %614, align 8
  %616 = bitcast %"class.std::__1::basic_string"* %609 to i8*
  %617 = select i1 %613, i8* %615, i8* %616
  %618 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %609, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %619 = load i64, i64* %618, align 8
  %620 = zext i8 %612 to i64
  %621 = select i1 %613, i64 %619, i64 %620
  %622 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %47) #11
  %623 = bitcast %"class.std::__1::basic_string"* %622 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %624 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %623, i64 0, i32 1, i32 0
  %625 = load i8, i8* %624, align 1
  %626 = icmp slt i8 %625, 0
  %627 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %622, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %628 = load i8*, i8** %627, align 8
  %629 = bitcast %"class.std::__1::basic_string"* %622 to i8*
  %630 = select i1 %626, i8* %628, i8* %629
  %631 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %622, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %632 = load i64, i64* %631, align 8
  %633 = zext i8 %625 to i64
  %634 = select i1 %626, i64 %632, i64 %633
  %635 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %617, i64 %621, i8* %630, i64 %634, i32 0) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %222) #11
  br i1 %635, label %637, label %636

636:                                              ; preds = %608
  store i8 1, i8* %223, align 2
  br label %687

637:                                              ; preds = %608, %607
  %638 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %30) #11
  %639 = bitcast %"class.std::__1::basic_string"* %638 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %640 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %639, i64 0, i32 1, i32 0
  %641 = load i8, i8* %640, align 1
  %642 = icmp slt i8 %641, 0
  %643 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %638, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %644 = load i8*, i8** %643, align 8
  %645 = bitcast %"class.std::__1::basic_string"* %638 to i8*
  %646 = select i1 %642, i8* %644, i8* %645
  %647 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %638, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %648 = load i64, i64* %647, align 8
  %649 = zext i8 %641 to i64
  %650 = select i1 %642, i64 %648, i64 %649
  %651 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %20) #11
  %652 = bitcast %"class.std::__1::basic_string"* %651 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %653 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %652, i64 0, i32 1, i32 0
  %654 = load i8, i8* %653, align 1
  %655 = icmp slt i8 %654, 0
  %656 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %651, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %657 = load i8*, i8** %656, align 8
  %658 = bitcast %"class.std::__1::basic_string"* %651 to i8*
  %659 = select i1 %655, i8* %657, i8* %658
  %660 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %651, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  %662 = zext i8 %654 to i64
  %663 = select i1 %655, i64 %661, i64 %662
  %664 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %646, i64 %650, i8* %659, i64 %663, i32 0) #11
  br i1 %664, label %665, label %687

665:                                              ; preds = %637
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %227) #11
  %666 = load i8*, i8** %187, align 16
  %667 = load i64, i64* %188, align 8
  call fastcc void @_ZN7content12_GLOBAL__N_114SplitLineTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* nonnull sret %49, i8* %666, i64 %667)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %224, i8* nonnull align 8 %227, i64 16, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %186, i8* align 8 %229, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %227) #11
  %668 = load i64, i64* %226, align 8
  %669 = icmp eq i64 %668, 0
  br i1 %669, label %686, label %670

670:                                              ; preds = %665
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %230) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %230, i8 -86, i64 120, i1 false)
  %671 = load i8*, i8** %225, align 8
  call fastcc void @_ZN7content12_GLOBAL__N_113ParseUrlTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERK4GURL(%class.GURL* nonnull sret %50, i8* %671, i64 %668, %class.GURL* dereferenceable(120) %0)
  %672 = load i8, i8* %231, align 8, !range !2
  %673 = icmp eq i8 %672, 0
  br i1 %673, label %685, label %674

674:                                              ; preds = %670
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %232) #11
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %51, %class.GURL* %0) #11
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %233) #11
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %52, %class.GURL* nonnull %50) #11
  %675 = call zeroext i1 @_ZneRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %51, %class.GURL* nonnull dereferenceable(120) %52) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %233) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %51) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %232) #11
  br i1 %675, label %685, label %676

676:                                              ; preds = %674
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %234) #11
  store i32 0, i32* %53, align 4
  %677 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %235, align 8
  %678 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %236, align 8
  %679 = icmp ult %"struct.content::AppCacheNamespace"* %677, %678
  br i1 %679, label %680, label %683

680:                                              ; preds = %676
  call void @_ZN7content17AppCacheNamespaceC1ENS_21AppCacheNamespaceTypeERK4GURLS4_(%"struct.content::AppCacheNamespace"* %677, i32 0, %class.GURL* nonnull dereferenceable(120) %30, %class.GURL* nonnull dereferenceable(120) %50) #11
  %681 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %677, i64 1
  %682 = ptrtoint %"struct.content::AppCacheNamespace"* %681 to i64
  store i64 %682, i64* %238, align 8
  br label %684

683:                                              ; preds = %676
  call void @_ZNSt3__16vectorIN7content17AppCacheNamespaceENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_21AppCacheNamespaceTypeER4GURLS9_EEEvDpOT_(%"class.std::__1::vector"* %237, i32* nonnull dereferenceable(4) %53, %class.GURL* nonnull dereferenceable(120) %30, %class.GURL* nonnull dereferenceable(120) %50) #11
  br label %684

684:                                              ; preds = %680, %683
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %234) #11
  br label %685

685:                                              ; preds = %670, %674, %684
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %230) #11
  br label %686

686:                                              ; preds = %665, %685
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #11
  br label %687

687:                                              ; preds = %441, %448, %637, %605, %542, %540, %518, %686, %636, %603, %539, %537, %520
  %688 = phi i8 [ %294, %448 ], [ %294, %605 ], [ %294, %686 ], [ %294, %637 ], [ %294, %636 ], [ %294, %540 ], [ %604, %603 ], [ %294, %542 ], [ %294, %539 ], [ %294, %518 ], [ %294, %520 ], [ %294, %537 ], [ %294, %441 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %218) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %212) #11
  br label %689

689:                                              ; preds = %386, %371, %370, %367, %364, %361, %358, %375, %321, %687, %440, %385
  %690 = phi i8 [ %294, %321 ], [ %688, %687 ], [ %294, %386 ], [ %294, %440 ], [ %294, %385 ], [ %294, %375 ], [ %294, %358 ], [ %294, %361 ], [ %294, %364 ], [ %294, %367 ], [ %294, %370 ], [ %294, %371 ]
  %691 = phi i32 [ %295, %321 ], [ %295, %687 ], [ 4, %386 ], [ 4, %440 ], [ 3, %385 ], [ %295, %375 ], [ 0, %358 ], [ 2, %361 ], [ 3, %364 ], [ 1, %367 ], [ 5, %370 ], [ %374, %371 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %186) #11
  %692 = load i64, i64* %76, align 8
  br label %292

693:                                              ; preds = %306
  %694 = icmp ne i8 %101, 0
  call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0), i1 zeroext %694) #11
  call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0), i1 zeroext %54) #11
  %695 = zext i8 %294 to i32
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i32 %695, i32 3) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %152) #11
  br label %696

696:                                              ; preds = %109, %106, %113, %95, %693
  %697 = phi i1 [ true, %693 ], [ false, %95 ], [ false, %109 ], [ false, %113 ], [ false, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #11
  %698 = load i8, i8* %78, align 1
  %699 = icmp slt i8 %698, 0
  br i1 %699, label %700, label %702

700:                                              ; preds = %696
  %701 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %701) #12
  br label %702

702:                                              ; preds = %696, %700
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #11
  %703 = load i8, i8* %64, align 1
  %704 = icmp slt i8 %703, 0
  br i1 %704, label %705, label %708

705:                                              ; preds = %702
  %706 = bitcast %"class.std::__1::basic_string.28"* %16 to i8**
  %707 = load i8*, i8** %706, align 8
  call void @_ZdlPv(i8* %707) #12
  br label %708

708:                                              ; preds = %702, %705
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  ret i1 %697
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.28"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN7content8AppCache23CheckValidManifestScopeERK4GURLRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK4GURL7ResolveEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* sret, %class.GURL*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7content12_GLOBAL__N_114SplitLineTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::pair"* noalias nocapture sret, i8*, i64) unnamed_addr #0 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %3, %12
  %9 = phi i64 [ %13, %12 ], [ 0, %3 ]
  %10 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %9) #11
  %11 = load i8, i8* %10, align 1
  switch i8 %11, label %12 [
    i8 32, label %16
    i8 9, label %16
  ]

12:                                               ; preds = %8
  %13 = add nuw i64 %9, 1
  %14 = load i64, i64* %6, align 8
  %15 = icmp ult i64 %13, %14
  br i1 %15, label %8, label %16

16:                                               ; preds = %12, %8, %8
  %17 = phi i64 [ %13, %12 ], [ %9, %8 ], [ %9, %8 ]
  %18 = load i64, i64* %6, align 8
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %16, %24
  %21 = phi i64 [ %25, %24 ], [ %17, %16 ]
  %22 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %21) #11
  %23 = load i8, i8* %22, align 1
  switch i8 %23, label %28 [
    i8 32, label %24
    i8 9, label %24
  ]

24:                                               ; preds = %20, %20
  %25 = add nuw i64 %21, 1
  %26 = load i64, i64* %6, align 8
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %20, label %28

28:                                               ; preds = %24, %20, %3, %16
  %29 = phi i64 [ %17, %16 ], [ 0, %3 ], [ %17, %20 ], [ %17, %24 ]
  %30 = phi i64 [ %17, %16 ], [ 0, %3 ], [ %25, %24 ], [ %21, %20 ]
  %31 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 0, i64 %29)
  %32 = extractvalue { i8*, i64 } %31, 0
  %33 = extractvalue { i8*, i64 } %31, 1
  %34 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 %30, i64 -1)
  %35 = extractvalue { i8*, i64 } %34, 0
  %36 = extractvalue { i8*, i64 } %34, 1
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0
  store i8* %32, i8** %37, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 1
  store i64 %33, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0
  store i8* %35, i8** %39, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 1
  store i64 %36, i64* %40, align 8
  ret void
}

declare zeroext i1 @_ZN5blink19TrialTokenValidator23IsTrialPossibleOnOriginERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZN5blink19TrialTokenValidatorC1Ev(%"class.blink::TrialTokenValidator"*) unnamed_addr #2

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare { i32, %"class.blink::TrialToken"* } @_ZNK5blink19TrialTokenValidator13ValidateTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKN3url6OriginENS1_4TimeE(%"class.blink::TrialTokenValidator"*, i8*, i64, %"class.url::Origin"* dereferenceable(80), i64) unnamed_addr #2

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink19TrialTokenValidatorD1Ev(%"class.blink::TrialTokenValidator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7content12_GLOBAL__N_113ParseUrlTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERK4GURL(%class.GURL* noalias sret, i8*, i64, %class.GURL* dereferenceable(120)) unnamed_addr #0 {
  %5 = alloca %"class.url::StringPieceReplacements", align 8
  %6 = alloca %class.GURL, align 8
  %7 = bitcast %class.GURL* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 120, i1 false)
  tail call void @_ZNK4GURL7ResolveEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* sret %0, %class.GURL* %3, i8* %1, i64 %2) #11
  %8 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 7, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %15, label %26

15:                                               ; preds = %11
  %16 = bitcast %"class.url::StringPieceReplacements"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %5, i64 0, i32 0, i32 1
  %18 = bitcast %"struct.url::Parsed"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 80, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 64, i1 false) #11
  %19 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %5, i64 0, i32 0, i32 1
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %19) #11
  %20 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %5, i64 0, i32 0, i32 0, i32 7
  store i8* @_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr, i8** %21, align 8
  %22 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %5, i64 0, i32 0, i32 1, i32 7
  %23 = bitcast %"struct.url::Component"* %22 to i64*
  store i64 -4294967296, i64* %23, align 8
  %24 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %24) #11
  call void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* nonnull sret %6, %class.GURL* %0, %"class.url::Replacements"* nonnull dereferenceable(144) %20) #11
  %25 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %0, %class.GURL* nonnull dereferenceable(120) %6) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %24) #11
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %19) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %16) #11
  br label %26

26:                                               ; preds = %4, %15, %11
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

declare void @_ZN7content17AppCacheNamespaceC1ENS_21AppCacheNamespaceTypeERK4GURLS4_(%"struct.content::AppCacheNamespace"*, i32, %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content17AppCacheNamespaceD1Ev(%"struct.content::AppCacheNamespace"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare zeroext i1 @_ZneRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #2

declare void @_ZNK4GURL18GetWithoutFilenameEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content36GetAppCacheOriginTrialNameForTestingEv(%"class.std::__1::basic_string"* noalias sret) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  store i8 8, i8* %3, align 1
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 7307199664803049537, i64* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to i8*
  store i8 0, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10TrialTokenD1Ev(%"class.blink::TrialToken"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* sret, %class.GURL*, %"class.url::Replacements"* dereferenceable(144)) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.17"* dereferenceable(1)) unnamed_addr #2

declare void @_ZN4base19UmaHistogramBooleanEPKcb(i8*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #11, !range !19
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #11
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #12, !noalias !20
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !20
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #11, !noalias !20
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !20
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !20
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #11, !noalias !20
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !20
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %131, align 8, !noalias !20
  %132 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #11, !range !19
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #11
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #11, !range !19
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base"* %174, %"struct.std::__1::__hash_node_base"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #11, !range !19
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %214
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !23

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #11
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7content17AppCacheNamespaceENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.content::AppCacheNamespace"* dereferenceable(256)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.content::AppCacheNamespace"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 8
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 72057594037927935
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.content::AppCacheNamespace"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 8
  %20 = icmp ult i64 %19, 36028797018963967
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 7
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 72057594037927935
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 72057594037927935, %14 ]
  %31 = shl i64 %30, 8
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"struct.content::AppCacheNamespace"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.content::AppCacheNamespace"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %36, i64 %35
  %39 = ptrtoint %"struct.content::AppCacheNamespace"* %38 to i64
  %40 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %43, %class.GURL* dereferenceable(120) %44) #11
  %45 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %36, i64 %9, i32 2
  %46 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %1, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %45, %class.GURL* dereferenceable(120) %46) #11
  %47 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %1, i64 0, i32 3, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %36, i64 %9, i32 3, i32 0, i32 0
  %49 = load i64, i64* %47, align 8
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %37, i64 1
  %51 = ptrtoint %"struct.content::AppCacheNamespace"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %52, align 8
  %54 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %3, align 8
  %55 = icmp eq %"struct.content::AppCacheNamespace"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %34
  %57 = ptrtoint %"struct.content::AppCacheNamespace"* %53 to i64
  br label %77

58:                                               ; preds = %34, %58
  %59 = phi %"struct.content::AppCacheNamespace"* [ %72, %58 ], [ %37, %34 ]
  %60 = phi %"struct.content::AppCacheNamespace"* [ %61, %58 ], [ %54, %34 ]
  %61 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %60, i64 -1, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %65, %class.GURL* dereferenceable(120) %66) #11
  %67 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %59, i64 -1, i32 2
  %68 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %60, i64 -1, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %67, %class.GURL* dereferenceable(120) %68) #11
  %69 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %60, i64 -1, i32 3, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %59, i64 -1, i32 3, i32 0, i32 0
  %71 = load i64, i64* %69, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %59, i64 -1
  %73 = icmp eq %"struct.content::AppCacheNamespace"* %61, %53
  br i1 %73, label %74, label %58

74:                                               ; preds = %58
  %75 = load i64, i64* %6, align 8
  %76 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %3, align 8
  br label %77

77:                                               ; preds = %56, %74
  %78 = phi %"struct.content::AppCacheNamespace"* [ %53, %56 ], [ %76, %74 ]
  %79 = phi %"struct.content::AppCacheNamespace"* [ %37, %56 ], [ %72, %74 ]
  %80 = phi i64 [ %57, %56 ], [ %75, %74 ]
  %81 = ptrtoint %"struct.content::AppCacheNamespace"* %79 to i64
  store i64 %81, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %82 = inttoptr i64 %80 to %"struct.content::AppCacheNamespace"*
  %83 = icmp eq %"struct.content::AppCacheNamespace"* %78, %82
  br i1 %83, label %88, label %84

84:                                               ; preds = %77, %84
  %85 = phi %"struct.content::AppCacheNamespace"* [ %86, %84 ], [ %78, %77 ]
  %86 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %85, i64 -1
  tail call void @_ZN7content17AppCacheNamespaceD1Ev(%"struct.content::AppCacheNamespace"* %86) #11
  %87 = icmp eq %"struct.content::AppCacheNamespace"* %86, %82
  br i1 %87, label %88, label %84

88:                                               ; preds = %84, %77
  %89 = icmp eq i64 %80, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %80 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7content17AppCacheNamespaceENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS1_21AppCacheNamespaceTypeER4GURLS9_EEEvDpOT_(%"class.std::__1::vector"*, i32* dereferenceable(4), %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.content::AppCacheNamespace"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 8
  %12 = add nsw i64 %11, 1
  %13 = icmp ugt i64 %12, 72057594037927935
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #13
  unreachable

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"struct.content::AppCacheNamespace"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %9
  %21 = ashr exact i64 %20, 8
  %22 = icmp ult i64 %21, 36028797018963967
  br i1 %22, label %23, label %31

23:                                               ; preds = %16
  %24 = ashr exact i64 %20, 7
  %25 = icmp ult i64 %24, %12
  %26 = select i1 %25, i64 %12, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = icmp ugt i64 %26, 72057594037927935
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  tail call void @abort() #13
  unreachable

31:                                               ; preds = %16, %28
  %32 = phi i64 [ %26, %28 ], [ 72057594037927935, %16 ]
  %33 = shl i64 %32, 8
  %34 = tail call i8* @_Znwm(i64 %33) #12
  %35 = bitcast i8* %34 to %"struct.content::AppCacheNamespace"*
  br label %36

36:                                               ; preds = %23, %31
  %37 = phi i64 [ %32, %31 ], [ 0, %23 ]
  %38 = phi %"struct.content::AppCacheNamespace"* [ %35, %31 ], [ null, %23 ]
  %39 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %38, i64 %11
  %40 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %38, i64 %37
  %41 = ptrtoint %"struct.content::AppCacheNamespace"* %40 to i64
  %42 = load i32, i32* %1, align 4
  tail call void @_ZN7content17AppCacheNamespaceC1ENS_21AppCacheNamespaceTypeERK4GURLS4_(%"struct.content::AppCacheNamespace"* %39, i32 %42, %class.GURL* dereferenceable(120) %2, %class.GURL* dereferenceable(120) %3) #11
  %43 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %39, i64 1
  %44 = ptrtoint %"struct.content::AppCacheNamespace"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %45, align 8
  %47 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %5, align 8
  %48 = icmp eq %"struct.content::AppCacheNamespace"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %36
  %50 = ptrtoint %"struct.content::AppCacheNamespace"* %46 to i64
  br label %70

51:                                               ; preds = %36, %51
  %52 = phi %"struct.content::AppCacheNamespace"* [ %65, %51 ], [ %39, %36 ]
  %53 = phi %"struct.content::AppCacheNamespace"* [ %54, %51 ], [ %47, %36 ]
  %54 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %52, i64 -1, i32 0
  %56 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %54, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  store i32 %57, i32* %55, align 8
  %58 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %52, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %53, i64 -1, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %58, %class.GURL* dereferenceable(120) %59) #11
  %60 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %52, i64 -1, i32 2
  %61 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %53, i64 -1, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %60, %class.GURL* dereferenceable(120) %61) #11
  %62 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %53, i64 -1, i32 3, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %52, i64 -1, i32 3, i32 0, i32 0
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %52, i64 -1
  %66 = icmp eq %"struct.content::AppCacheNamespace"* %54, %46
  br i1 %66, label %67, label %51

67:                                               ; preds = %51
  %68 = load i64, i64* %8, align 8
  %69 = load %"struct.content::AppCacheNamespace"*, %"struct.content::AppCacheNamespace"** %5, align 8
  br label %70

70:                                               ; preds = %49, %67
  %71 = phi %"struct.content::AppCacheNamespace"* [ %46, %49 ], [ %69, %67 ]
  %72 = phi %"struct.content::AppCacheNamespace"* [ %39, %49 ], [ %65, %67 ]
  %73 = phi i64 [ %50, %49 ], [ %68, %67 ]
  %74 = ptrtoint %"struct.content::AppCacheNamespace"* %72 to i64
  store i64 %74, i64* %8, align 8
  store i64 %44, i64* %6, align 8
  store i64 %41, i64* %18, align 8
  %75 = inttoptr i64 %73 to %"struct.content::AppCacheNamespace"*
  %76 = icmp eq %"struct.content::AppCacheNamespace"* %71, %75
  br i1 %76, label %81, label %77

77:                                               ; preds = %70, %77
  %78 = phi %"struct.content::AppCacheNamespace"* [ %79, %77 ], [ %71, %70 ]
  %79 = getelementptr inbounds %"struct.content::AppCacheNamespace", %"struct.content::AppCacheNamespace"* %78, i64 -1
  tail call void @_ZN7content17AppCacheNamespaceD1Ev(%"struct.content::AppCacheNamespace"* %79) #11
  %80 = icmp eq %"struct.content::AppCacheNamespace"* %79, %75
  br i1 %80, label %81, label %77

81:                                               ; preds = %77, %70
  %82 = icmp eq i64 %73, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %81, %83
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN7content12_GLOBAL__N_114SplitOnNewLineEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!5 = distinct !{!5, !"_ZN7content12_GLOBAL__N_114SplitOnNewLineEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink10TrialToken12feature_nameEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink10TrialToken12feature_nameEv"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!11 = distinct !{!11, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!12 = distinct !{!12, !13, !"_ZNK4GURL6schemeEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4GURL6schemeEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!16 = distinct !{!16, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!17 = distinct !{!17, !18, !"_ZNK4GURL6schemeEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4GURL6schemeEv"}
!19 = !{i64 0, i64 65}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
