; ModuleID = '../../cc/raster/raster_source.cc'
source_filename = "../../cc/raster/raster_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], i64, %class.scoped_refptr, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.1", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.84", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.10", %"class.base::flat_map.24", i8, i8, [6 x i8], %"class.cc::RTree.34", %"class.std::__1::vector.62" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.3" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.5" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.19" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.12", i32, i32 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.14" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.24" = type { %"class.base::internal::flat_tree.25" }
%"class.base::internal::flat_tree.25" = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.std::__1::pair.28"*, %"struct.std::__1::pair.28"*, %"class.std::__1::__compressed_pair.29" }
%"struct.std::__1::pair.28" = type { i32, i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::pair.28"* }
%"class.cc::RTree.34" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.54", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.49", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.41, %"class.gfx::Rect", i32, %class.sk_sp.45, %class.sk_sp.46, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.47 }
%class.sk_sp.41 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.45 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.46 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.35, i32, i32 }
%class.sk_sp.35 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.36" }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.47 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.48", [4 x i8] }>
%"class.base::RefCountedThreadSafe.48" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.std::__1::pair.64"*, %"struct.std::__1::pair.64"*, %"class.std::__1::__compressed_pair.65" }
%"struct.std::__1::pair.64" = type opaque
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::pair.64"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i8* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { i64*, i64*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { i64* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.86" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::RecordingSource" = type { i32 (...)**, %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i8, i32, i32, %class.scoped_refptr, float, %"class.cc::InvalidationRegion" }
%"class.cc::InvalidationRegion" = type { %"class.cc::Region", %"class.std::__1::vector.70" }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::RasterSource::PlaybackSettings" = type { i8, i32, %"class.cc::ImageProvider"* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.91, [384 x i64], %class.sk_sp.92, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.93", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.97" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.91 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.92 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.gfx::Vector2dF" = type { float, float }
%struct.SkRGBA4f = type { float, float, float, float }
%"class.cc::ScopedSubnormalFloatDisabler" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.cc::DrawImage"**, %"class.cc::DrawImage"**, %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.cc::DrawImage"** }
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.110" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }

@_ZTVN2cc12RasterSourceE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::RasterSource"*)* @_ZN2cc12RasterSourceD2Ev to i8*), i8* bitcast (void (%"class.cc::RasterSource"*)* @_ZN2cc12RasterSourceD0Ev to i8*), i8* bitcast (void (%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.cc::ImageProvider"*)* @_ZNK2cc12RasterSource27PlaybackDisplayListToCanvasEP8SkCanvasPNS_13ImageProviderE to i8*)] }, align 8
@.str = private unnamed_addr constant [33 x i8] c"../../cc/raster/raster_source.cc\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"display_list_.get()\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [40 x i8] c"RasterSource::PerformSolidColorAnalysis\00", align 1

@_ZN2cc12RasterSourceC1EPKNS_15RecordingSourceE = hidden unnamed_addr alias void (%"class.cc::RasterSource"*, %"class.cc::RecordingSource"*), void (%"class.cc::RasterSource"*, %"class.cc::RecordingSource"*)* @_ZN2cc12RasterSourceC2EPKNS_15RecordingSourceE
@_ZN2cc12RasterSourceD1Ev = hidden unnamed_addr alias void (%"class.cc::RasterSource"*), void (%"class.cc::RasterSource"*)* @_ZN2cc12RasterSourceD2Ev
@_ZN2cc12RasterSource16PlaybackSettingsC1Ev = hidden unnamed_addr alias void (%"struct.cc::RasterSource::PlaybackSettings"*), void (%"struct.cc::RasterSource::PlaybackSettings"*)* @_ZN2cc12RasterSource16PlaybackSettingsC2Ev
@_ZN2cc12RasterSource16PlaybackSettingsC1ERKS1_ = hidden unnamed_addr alias void (%"struct.cc::RasterSource::PlaybackSettings"*, %"struct.cc::RasterSource::PlaybackSettings"*), void (%"struct.cc::RasterSource::PlaybackSettings"*, %"struct.cc::RasterSource::PlaybackSettings"*)* @_ZN2cc12RasterSource16PlaybackSettingsC2ERKS1_
@_ZN2cc12RasterSource16PlaybackSettingsC1EOS1_ = hidden unnamed_addr alias void (%"struct.cc::RasterSource::PlaybackSettings"*, %"struct.cc::RasterSource::PlaybackSettings"*), void (%"struct.cc::RasterSource::PlaybackSettings"*, %"struct.cc::RasterSource::PlaybackSettings"*)* @_ZN2cc12RasterSource16PlaybackSettingsC2EOS1_
@_ZN2cc12RasterSource16PlaybackSettingsD1Ev = hidden unnamed_addr alias void (%"struct.cc::RasterSource::PlaybackSettings"*), void (%"struct.cc::RasterSource::PlaybackSettings"*)* @_ZN2cc12RasterSource16PlaybackSettingsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12RasterSourceC2EPKNS_15RecordingSourceE(%"class.cc::RasterSource"* nocapture, %"class.cc::RecordingSource"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12RasterSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 3
  store i64 614400, i64* %5, align 8
  %6 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %1, i64 0, i32 8, i32 0
  %7 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 4, i32 0
  store %"class.cc::DisplayItemList"* %7, %"class.cc::DisplayItemList"** %8, align 8
  %9 = icmp eq %"class.cc::DisplayItemList"* %7, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 5
  %15 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %1, i64 0, i32 7
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 6
  %18 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %1, i64 0, i32 4
  %19 = load i8, i8* %18, align 4, !range !2
  store i8 %19, i8* %17, align 4
  %20 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 7
  %21 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %1, i64 0, i32 5
  %22 = load i8, i8* %21, align 1, !range !2
  store i8 %22, i8* %20, align 1
  %23 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 9
  %24 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %1, i64 0, i32 6
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %23, align 8
  %26 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 10
  %27 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %1, i64 0, i32 1
  %28 = bitcast %"class.gfx::Rect"* %26 to i8*
  %29 = bitcast %"class.gfx::Rect"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 8 %29, i64 16, i1 false)
  %30 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 11
  %31 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %1, i64 0, i32 2
  %32 = bitcast %"class.gfx::Size"* %31 to i64*
  %33 = bitcast %"class.gfx::Size"* %30 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 4
  %35 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 12
  %36 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %1, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 13
  %39 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %1, i64 0, i32 9
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = bitcast float* %38 to i32*
  store i32 %41, i32* %42, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12RasterSourceD2Ev(%"class.cc::RasterSource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12RasterSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = icmp eq %"class.cc::DisplayItemList"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %4) #9
  %11 = bitcast %"class.cc::DisplayItemList"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12RasterSourceD0Ev(%"class.cc::RasterSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12RasterSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = icmp eq %"class.cc::DisplayItemList"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %4) #9
  %11 = bitcast %"class.cc::DisplayItemList"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"class.cc::RasterSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc12RasterSource20ClearForOpaqueRasterEP8SkCanvasRKN3gfx15AxisTransform2dERKNS3_4SizeERKNS3_4RectESC_(%"class.cc::RasterSource"* nocapture readonly, %class.SkCanvas*, %"class.gfx::AxisTransform2d"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.gfx::Vector2dF"*
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %15 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 0, i64 16, i1 false) #9
  %16 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 0, i64 16, i1 false) #9
  %17 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = bitcast %"class.gfx::AxisTransform2d"* %2 to i64*
  %19 = load i64, i64* %18, align 4
  store i64 %19, i64* %10, align 8
  %20 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 13
  %21 = load float, float* %20, align 8
  %22 = fdiv float 1.000000e+00, %21
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %11, float %22, float %22) #9
  %23 = getelementptr inbounds %"class.gfx::AxisTransform2d", %"class.gfx::AxisTransform2d"* %2, i64 0, i32 1
  %24 = call zeroext i1 @_ZN2cc34CalculateClearForOpaqueRasterRectsERKN3gfx9Vector2dFES3_RKNS0_4SizeERKNS0_4RectES9_RS7_SA_(%"class.gfx::Vector2dF"* dereferenceable(8) %23, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %11, %"class.gfx::Size"* dereferenceable(8) %3, %"class.gfx::Rect"* dereferenceable(16) %4, %"class.gfx::Rect"* dereferenceable(16) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.gfx::Rect"* nonnull dereferenceable(16) %9) #9
  br i1 %24, label %25, label %58

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 0
  %28 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %29 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* %1) #9
  %30 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  %31 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* nonnull dereferenceable(16) %8) #9
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  %33 = extractvalue { <2 x float>, <2 x float> } %31, 0
  store <2 x float> %33, <2 x float>* %32, align 8
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  %35 = extractvalue { <2 x float>, <2 x float> } %31, 1
  store <2 x float> %35, <2 x float>* %34, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %1, %struct.SkRect* nonnull dereferenceable(16) %28, i32 1, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9
  %36 = load i32, i32* %27, align 4
  %37 = icmp eq i32 %36, 0
  %38 = load i32, i32* %26, align 4
  %39 = icmp eq i32 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %25
  %42 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #9
  %43 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* nonnull dereferenceable(16) %9) #9
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  %45 = extractvalue { <2 x float>, <2 x float> } %43, 0
  store <2 x float> %45, <2 x float>* %44, align 8
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  %47 = extractvalue { <2 x float>, <2 x float> } %43, 1
  store <2 x float> %47, <2 x float>* %46, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %1, %struct.SkRect* nonnull dereferenceable(16) %14, i32 0, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #9
  br label %48

48:                                               ; preds = %25, %41
  %49 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 5
  %50 = load i32, i32* %49, align 8
  %51 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRGBA4f*
  %52 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #9
  %53 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %50) #9
  %54 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %55 = extractvalue { <2 x float>, <2 x float> } %53, 0
  store <2 x float> %55, <2 x float>* %54, align 8
  %56 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %57 = extractvalue { <2 x float>, <2 x float> } %53, 1
  store <2 x float> %57, <2 x float>* %56, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %1, %struct.SkRGBA4f* nonnull dereferenceable(16) %51, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #9
  call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* %1) #9
  br label %58

58:                                               ; preds = %6, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN2cc34CalculateClearForOpaqueRasterRectsERKN3gfx9Vector2dFES3_RKNS0_4SizeERKNS0_4RectES9_RS7_SA_(%"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #3

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8SkCanvas7restoreEv(%class.SkCanvas*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc12RasterSource16PlaybackToCanvasEP8SkCanvasRKN3gfx4SizeERKNS3_4RectES9_RKNS3_15AxisTransform2dERKNS0_16PlaybackSettingsE(%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::AxisTransform2d"* dereferenceable(16), %"struct.cc::RasterSource::PlaybackSettings"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %struct.SkIRect*
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca %"class.cc::ScopedSubnormalFloatDisabler", align 4
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %16 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  %17 = bitcast { i64, i64 }* %10 to i32*
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %20 = bitcast i64* %19 to i32*
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 3
  %22 = tail call { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %3) #9
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %24 = extractvalue { i64, i64 } %22, 0
  store i64 %24, i64* %23, align 8
  %25 = extractvalue { i64, i64 } %22, 1
  store i64 %25, i64* %19, align 8
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %7
  %30 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  br label %44

31:                                               ; preds = %7
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  %35 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #9
  br i1 %34, label %44, label %36

36:                                               ; preds = %31
  %37 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %38 = tail call { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %4) #9
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %40 = extractvalue { i64, i64 } %38, 0
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %42 = extractvalue { i64, i64 } %38, 1
  store i64 %42, i64* %41, align 8
  %43 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %11, %struct.SkIRect* nonnull dereferenceable(16) %11, %struct.SkIRect* nonnull dereferenceable(16) %37) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #9
  br i1 %43, label %46, label %140

44:                                               ; preds = %29, %31
  %45 = phi i8* [ %30, %29 ], [ %35, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  br label %46

46:                                               ; preds = %36, %44
  %47 = bitcast %"class.cc::ScopedSubnormalFloatDisabler"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.cc::ScopedSubnormalFloatDisabler", %"class.cc::ScopedSubnormalFloatDisabler"* %13, i64 0, i32 0
  store i32 -1431655766, i32* %48, align 4
  call void @_ZN2cc28ScopedSubnormalFloatDisablerC1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %13) #9
  %49 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %71

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %60, label %71

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %26, align 4
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp ne i32 %67, %69
  br label %71

71:                                               ; preds = %46, %54, %60, %65
  %72 = phi i1 [ true, %54 ], [ true, %60 ], [ %70, %65 ], [ true, %46 ]
  %73 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 6
  %74 = load i8, i8* %73, align 4, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %71
  call void @_ZNK2cc12RasterSource20ClearForOpaqueRasterEP8SkCanvasRKN3gfx15AxisTransform2dERKNS3_4SizeERKNS3_4RectESC_(%"class.cc::RasterSource"* %0, %class.SkCanvas* %1, %"class.gfx::AxisTransform2d"* dereferenceable(16) %5, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Rect"* dereferenceable(16) %3, %"class.gfx::Rect"* dereferenceable(16) %4)
  br label %86

77:                                               ; preds = %71
  br i1 %72, label %86, label %78

78:                                               ; preds = %77
  %79 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRGBA4f*
  %80 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #9
  %81 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #9
  %82 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %83 = extractvalue { <2 x float>, <2 x float> } %81, 0
  store <2 x float> %83, <2 x float>* %82, align 8
  %84 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %85 = extractvalue { <2 x float>, <2 x float> } %81, 1
  store <2 x float> %85, <2 x float>* %84, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %1, %struct.SkRGBA4f* nonnull dereferenceable(16) %79, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #9
  br label %86

86:                                               ; preds = %77, %78, %76
  %87 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* %1) #9
  %88 = load i32, i32* %49, align 4
  %89 = sub nsw i32 0, %88
  %90 = sitofp i32 %89 to float
  %91 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sub nsw i32 0, %92
  %94 = sitofp i32 %93 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %1, float %90, float %94) #9
  %95 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #9
  %96 = load i32, i32* %17, align 8
  %97 = sitofp i32 %96 to float
  %98 = insertelement <2 x float> undef, float %97, i32 0
  %99 = load i32, i32* %18, align 4
  %100 = sitofp i32 %99 to float
  %101 = insertelement <2 x float> %98, float %100, i32 1
  %102 = load i32, i32* %20, align 8
  %103 = sitofp i32 %102 to float
  %104 = insertelement <2 x float> undef, float %103, i32 0
  %105 = load i32, i32* %21, align 4
  %106 = sitofp i32 %105 to float
  %107 = insertelement <2 x float> %104, float %106, i32 1
  %108 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  store <2 x float> %101, <2 x float>* %108, align 8
  %109 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  store <2 x float> %107, <2 x float>* %109, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %1, %struct.SkRect* nonnull dereferenceable(16) %15, i32 1, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #9
  %110 = getelementptr inbounds %"class.gfx::AxisTransform2d", %"class.gfx::AxisTransform2d"* %5, i64 0, i32 1, i32 0
  %111 = load float, float* %110, align 4
  %112 = getelementptr inbounds %"class.gfx::AxisTransform2d", %"class.gfx::AxisTransform2d"* %5, i64 0, i32 1, i32 1
  %113 = load float, float* %112, align 4
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %1, float %111, float %113) #9
  %114 = getelementptr inbounds %"class.gfx::AxisTransform2d", %"class.gfx::AxisTransform2d"* %5, i64 0, i32 0, i32 0
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 13
  %117 = load float, float* %116, align 8
  %118 = fdiv float %115, %117
  %119 = getelementptr inbounds %"class.gfx::AxisTransform2d", %"class.gfx::AxisTransform2d"* %5, i64 0, i32 0, i32 1
  %120 = load float, float* %119, align 4
  %121 = fdiv float %120, %117
  call void @_ZN8SkCanvas5scaleEff(%class.SkCanvas* %1, float %118, float %121) #9
  br i1 %72, label %122, label %133

122:                                              ; preds = %86
  %123 = load i8, i8* %73, align 4, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %133, label %125

125:                                              ; preds = %122
  %126 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRGBA4f*
  %127 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #9
  %128 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #9
  %129 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %130 = extractvalue { <2 x float>, <2 x float> } %128, 0
  store <2 x float> %130, <2 x float>* %129, align 8
  %131 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %132 = extractvalue { <2 x float>, <2 x float> } %128, 1
  store <2 x float> %132, <2 x float>* %131, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %1, %struct.SkRGBA4f* nonnull dereferenceable(16) %126, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #9
  br label %133

133:                                              ; preds = %122, %125, %86
  %134 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %6, i64 0, i32 2
  %135 = load %"class.cc::ImageProvider"*, %"class.cc::ImageProvider"** %134, align 8
  %136 = bitcast %"class.cc::RasterSource"* %0 to void (%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.cc::ImageProvider"*)***
  %137 = load void (%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.cc::ImageProvider"*)**, void (%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.cc::ImageProvider"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.cc::ImageProvider"*)*, void (%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.cc::ImageProvider"*)** %137, i64 2
  %139 = load void (%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.cc::ImageProvider"*)*, void (%"class.cc::RasterSource"*, %class.SkCanvas*, %"class.cc::ImageProvider"*)** %138, align 8
  call void %139(%"class.cc::RasterSource"* %0, %class.SkCanvas* %1, %"class.cc::ImageProvider"* %135) #9
  call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* %1) #9
  call void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #9
  br label %140

140:                                              ; preds = %36, %133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  ret void
}

declare { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN2cc28ScopedSubnormalFloatDisablerC1Ev(%"class.cc::ScopedSubnormalFloatDisabler"*) unnamed_addr #3

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #3

declare void @_ZN8SkCanvas5scaleEff(%class.SkCanvas*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc12RasterSource27PlaybackDisplayListToCanvasEP8SkCanvasPNS_13ImageProviderE(%"class.cc::RasterSource"* nocapture readonly, %class.SkCanvas*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 4, i32 0
  %6 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %5, align 8
  %7 = icmp eq %"class.cc::DisplayItemList"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 124, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #9
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %11

11:                                               ; preds = %3, %8
  %12 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 12
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 1
  %15 = select i1 %14, i32 %13, i32 1
  br label %17

16:                                               ; preds = %17
  ret void

17:                                               ; preds = %11, %17
  %18 = phi i32 [ 0, %11 ], [ %20, %17 ]
  %19 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %5, align 8
  call void @_ZNK2cc15DisplayItemList6RasterEP8SkCanvasPNS_13ImageProviderE(%"class.cc::DisplayItemList"* %19, %class.SkCanvas* %1, %"class.cc::ImageProvider"* %2) #9
  %20 = add nuw nsw i32 %18, 1
  %21 = icmp ult i32 %20, %15
  br i1 %21, label %17, label %16
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZNK2cc15DisplayItemList6RasterEP8SkCanvasPNS_13ImageProviderE(%"class.cc::DisplayItemList"*, %class.SkCanvas*, %"class.cc::ImageProvider"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc12RasterSource25PerformSolidColorAnalysisEN3gfx4RectEPj(%"class.cc::RasterSource"* nocapture readonly, i64, i64, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %2, i64* %10, align 8
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14, !prof !3

14:                                               ; preds = %4
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %16 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %20

20:                                               ; preds = %4, %14
  %21 = phi i64 [ -6148914691236517206, %4 ], [ %19, %14 ]
  %22 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), %14 ]
  %23 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %14 ]
  %24 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 11
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 1
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %29 = bitcast %"class.gfx::Size"* %25 to i64*
  %30 = bitcast %"class.gfx::Size"* %28 to i64*
  %31 = load i64, i64* %29, align 4
  store i64 %31, i64* %30, align 4
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  %32 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 13
  %33 = load float, float* %32, align 8
  %34 = fcmp oeq float %33, 1.000000e+00
  br i1 %34, label %35, label %41

35:                                               ; preds = %20
  %36 = load i64, i64* %9, align 8
  %37 = trunc i64 %36 to i32
  %38 = lshr i64 %36, 32
  %39 = trunc i64 %38 to i32
  %40 = load i64, i64* %10, align 8
  br label %100

41:                                               ; preds = %20
  %42 = bitcast { i64, i64 }* %6 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = sitofp i32 %43 to float
  %45 = fmul float %33, %44
  %46 = call float @llvm.round.f32(float %45) #9
  %47 = fptosi float %46 to i32
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = sitofp i32 %49 to float
  %51 = fmul float %33, %50
  %52 = call float @llvm.round.f32(float %51) #9
  %53 = fptosi float %52 to i32
  %54 = bitcast i64* %10 to i32*
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %41
  %58 = add nsw i32 %55, %43
  %59 = sitofp i32 %58 to float
  %60 = fmul float %33, %59
  %61 = call float @llvm.round.f32(float %60) #9
  %62 = fptosi float %61 to i32
  br label %63

63:                                               ; preds = %57, %41
  %64 = phi i32 [ %62, %57 ], [ %47, %41 ]
  %65 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = add nsw i32 %66, %49
  %70 = sitofp i32 %69 to float
  %71 = fmul float %33, %70
  %72 = call float @llvm.round.f32(float %71) #9
  %73 = fptosi float %72 to i32
  br label %74

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %73, %68 ], [ %53, %63 ]
  %76 = sub nsw i32 %64, %47
  %77 = sub nsw i32 %75, %53
  %78 = icmp sgt i32 %47, 0
  %79 = icmp sgt i32 %76, 0
  %80 = and i1 %78, %79
  %81 = sub nuw nsw i32 2147483647, %47
  %82 = icmp ult i32 %81, %76
  %83 = and i1 %82, %80
  %84 = select i1 %83, i32 %81, i32 %76
  %85 = icmp sgt i32 %53, 0
  %86 = icmp sgt i32 %77, 0
  %87 = and i1 %85, %86
  %88 = sub nuw nsw i32 2147483647, %53
  %89 = icmp ult i32 %88, %77
  %90 = and i1 %89, %87
  %91 = select i1 %90, i32 %88, i32 %77
  %92 = icmp sgt i32 %84, 0
  %93 = select i1 %92, i32 %84, i32 0
  %94 = zext i32 %93 to i64
  %95 = icmp sgt i32 %91, 0
  %96 = select i1 %95, i32 %91, i32 0
  %97 = zext i32 %96 to i64
  %98 = shl nuw nsw i64 %97, 32
  %99 = or i64 %98, %94
  br label %100

100:                                              ; preds = %35, %74
  %101 = phi i32 [ %39, %35 ], [ %53, %74 ]
  %102 = phi i32 [ %37, %35 ], [ %47, %74 ]
  %103 = phi i64 [ %40, %35 ], [ %99, %74 ]
  %104 = zext i32 %101 to i64
  %105 = shl nuw i64 %104, 32
  %106 = zext i32 %102 to i64
  %107 = or i64 %105, %106
  store i64 %107, i64* %9, align 8
  store i64 %103, i64* %10, align 8
  %108 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 4, i32 0
  %109 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %108, align 8
  %110 = call zeroext i1 @_ZN2cc15DisplayItemList21GetColorIfSolidInRectERKN3gfx4RectEPji(%"class.cc::DisplayItemList"* %109, %"class.gfx::Rect"* nonnull dereferenceable(16) %7, i32* %3, i32 1) #9
  %111 = icmp eq i8* %23, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %100
  %113 = load i8, i8* %23, align 1
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %22, i64 %21) #9
  br label %116

116:                                              ; preds = %100, %112, %115
  ret i1 %110
}

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZN2cc15DisplayItemList21GetColorIfSolidInRectERKN3gfx4RectEPji(%"class.cc::DisplayItemList"*, %"class.gfx::Rect"* dereferenceable(16), i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc12RasterSource26GetDiscardableImagesInRectERKN3gfx4RectEPNSt3__16vectorIPKNS_9DrawImageENS5_9allocatorIS9_EEEE(%"class.cc::RasterSource"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.103"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 4, i32 0
  %5 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 3
  tail call void @_ZNK2cc19DiscardableImageMap26GetDiscardableImagesInRectERKN3gfx4RectEPNSt3__16vectorIPKNS_9DrawImageENS5_9allocatorIS9_EEEE(%"class.cc::DiscardableImageMap"* %6, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.std::__1::vector.103"* %2) #9
  ret void
}

declare void @_ZNK2cc19DiscardableImageMap26GetDiscardableImagesInRectERKN3gfx4RectEPNSt3__16vectorIPKNS_9DrawImageENS5_9allocatorIS9_EEEE(%"class.cc::DiscardableImageMap"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.103"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12RasterSource19TakeDecodingModeMapEv(%"class.base::flat_map.24"* noalias sret, %"class.cc::RasterSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %1, i64 0, i32 4, i32 0
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 3
  tail call void @_ZN2cc19DiscardableImageMap19TakeDecodingModeMapEv(%"class.base::flat_map.24"* sret %0, %"class.cc::DiscardableImageMap"* %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc12RasterSource14IntersectsRectERKN3gfx4RectERKNS_24PictureLayerTilingClientE(%"class.cc::RasterSource"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.cc::PictureLayerTilingClient"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 11
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 11, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.cc::PictureLayerTilingClient"* %2 to i1 (%"class.cc::PictureLayerTilingClient"*)***
  %16 = load i1 (%"class.cc::PictureLayerTilingClient"*)**, i1 (%"class.cc::PictureLayerTilingClient"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %16, i64 7
  %18 = load i1 (%"class.cc::PictureLayerTilingClient"*)*, i1 (%"class.cc::PictureLayerTilingClient"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.cc::PictureLayerTilingClient"* %2) #9
  br i1 %19, label %32, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  %22 = bitcast %"class.gfx::Rect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %22, i64 16, i1 false)
  %23 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1
  %27 = bitcast %"class.gfx::Size"* %6 to i64*
  %28 = bitcast %"class.gfx::Size"* %26 to i64*
  %29 = load i64, i64* %27, align 4
  store i64 %29, i64* %28, align 4
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  %30 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 10
  %31 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %30, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  br label %32

32:                                               ; preds = %3, %14, %10, %20
  %33 = phi i1 [ %31, %20 ], [ false, %10 ], [ true, %14 ], [ false, %3 ]
  ret i1 %33
}

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc12RasterSource7GetSizeEv(%"class.cc::RasterSource"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 11
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc12RasterSource14GetContentSizeERKN3gfx9Vector2dFE(%"class.cc::RasterSource"* nocapture readonly, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Size"*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 11
  %7 = bitcast %"class.gfx::Size"* %6 to i64*
  %8 = load i64, i64* %7, align 4
  store i64 %8, i64* %3, align 8
  %9 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = call i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEff(%"class.gfx::Size"* nonnull dereferenceable(8) %4, float %10, float %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i64 %13
}

declare i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEff(%"class.gfx::Size"* dereferenceable(8), float, float) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc12RasterSource12IsSolidColorEv(%"class.cc::RasterSource"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc12RasterSource13GetSolidColorEv(%"class.cc::RasterSource"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc12RasterSource13HasRecordingsEv(%"class.cc::RasterSource"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %2, align 8
  %4 = icmp ne %"class.cc::DisplayItemList"* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2cc12RasterSource16RecordedViewportEv(%"class.cc::RasterSource"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 10
  %3 = bitcast %"class.gfx::Rect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 10, i32 1
  %6 = bitcast %"class.gfx::Size"* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = insertvalue { i64, i64 } undef, i64 %4, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc12RasterSource11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::RasterSource"* nocapture readonly, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = icmp eq %"class.cc::DisplayItemList"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.cc::DisplayItemList"* %4 to i8*
  tail call void @_ZN3viz11TracedValue11AppendIDRefEPKvPN4base11trace_event11TracedValueE(i8* nonnull %7, %"class.base::trace_event::TracedValue"* %1) #9
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN3viz11TracedValue11AppendIDRefEPKvPN4base11trace_event11TracedValueE(i8*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12RasterSource15DidBeginTracingEv(%"class.cc::RasterSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %2, align 8
  %4 = icmp eq %"class.cc::DisplayItemList"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZNK2cc15DisplayItemList17EmitTraceSnapshotEv(%"class.cc::DisplayItemList"* nonnull %3) #9
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZNK2cc15DisplayItemList17EmitTraceSnapshotEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc12RasterSource16PlaybackSettingsC2Ev(%"struct.cc::RasterSource::PlaybackSettings"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %0, i64 0, i32 0
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %0, i64 0, i32 2
  store %"class.cc::ImageProvider"* null, %"class.cc::ImageProvider"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12RasterSource16PlaybackSettingsC2ERKS1_(%"struct.cc::RasterSource::PlaybackSettings"* nocapture, %"struct.cc::RasterSource::PlaybackSettings"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12RasterSource16PlaybackSettingsC2EOS1_(%"struct.cc::RasterSource::PlaybackSettings"* nocapture, %"struct.cc::RasterSource::PlaybackSettings"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.cc::RasterSource::PlaybackSettings", %"struct.cc::RasterSource::PlaybackSettings"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc12RasterSource16PlaybackSettingsD2Ev(%"struct.cc::RasterSource::PlaybackSettings"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

declare void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"*, float, float) local_unnamed_addr #3

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #8

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN2cc19DiscardableImageMap19TakeDecodingModeMapEv(%"class.base::flat_map.24"* sret, %"class.cc::DiscardableImageMap"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
