; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_node.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" = type { i8*, i64 }
%"class.blink::CEReactionsScope" = type <{ %"class.blink::CEReactionsScope"*, i8, [7 x i8] }>
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"* }
%"class.base::span.182" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.185", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.187" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.185" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.191", %"class.blink::Member.193", %"class.blink::Member.185", %"class.blink::Member.195", %"class.blink::Member.195", %"class.blink::Member.243", %"class.blink::Member.245", %"class.blink::Member.247", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.252", %"class.blink::HeapVector.254" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.270", %"class.WTF::Vector.270", i8, i32, %"class.blink::Member.281", %"class.blink::Member.283", %"class.blink::Member.285", %"class.blink::Member.287", %"class.blink::Member.289", %"class.blink::Member.291", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.299", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.305", %"class.blink::Member.307", %"class.blink::Member.260", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.310", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.216", %"class.blink::Member.326", %"class.blink::Member.216", %"class.blink::Member.216", %"class.blink::Member.216", %"class.blink::UserActionElementSet", %"class.blink::Member.335", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.342", i16, i8, %"class.blink::Member.349", %"class.blink::Member.351", %"class.blink::Member.353", %"class.blink::Member.355", %"class.blink::TextLinkColors", %"class.blink::Member.357", i8, [7 x i8], %"class.blink::HeapHashMap.359", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.216", %"class.WTF::Vector.366", %"class.blink::Member.371", %"class.blink::Member.373", i8, %"class.blink::Member.216", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.375", %"class.blink::HeapVector.377", %"class.std::__1::unique_ptr.385", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.391", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.404", %"class.WTF::Vector.406", i8, i8, %"class.std::__1::unique_ptr.411", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.417", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.425", i8, i32, %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.433", %"class.WTF::HashMap.435", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::Member.446", %"class.blink::Member.193", %"class.blink::Member.193", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.448", i8, i32, %"class.blink::Member.455", %"class.blink::Member.457", i32, %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.463", %"class.std::__1::unique_ptr.465", i64, %"class.std::__1::unique_ptr.471", i32, i32, %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.483", %"class.WTF::Vector.485", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.490", %"class.blink::Member.497", %"class.std::__1::unique_ptr.499", %"class.blink::Member.505", i8, i8, %"class.WTF::String", %"class.blink::Member.507", i8, [7 x i8], %"class.blink::HeapHashMap.509", %"class.blink::HeapObserverSet", %"class.blink::Member.523", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.525", i32, i8, i8, %"class.blink::WeakMember.527", %"class.blink::Member.528" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.263" }
%"class.blink::HeapHashMap.263" = type { %"class.WTF::HashMap.266" }
%"class.WTF::HashMap.266" = type { %"class.WTF::HashTable.267" }
%"class.WTF::HashTable.267" = type <{ %"struct.WTF::KeyValuePair.269"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.269" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.273 }
%class.scoped_refptr.273 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.274" }
%"struct.std::__1::atomic.274" = type { %"struct.std::__1::__atomic_base.275" }
%"struct.std::__1::__atomic_base.275" = type { %"struct.std::__1::__atomic_base.276" }
%"struct.std::__1::__atomic_base.276" = type { %"struct.std::__1::__cxx_atomic_impl.277" }
%"struct.std::__1::__cxx_atomic_impl.277" = type { %"struct.std::__1::__cxx_atomic_base_impl.278" }
%"struct.std::__1::__cxx_atomic_base_impl.278" = type { i32 }
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.541", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.586", i32, i8, [3 x i8], %"class.blink::HeapVector.588", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.596", %"class.blink::Member.598", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.607", %"class.blink::Member.613", %"class.blink::Member.615", i8, [7 x i8] }>
%"class.blink::Supplementable.541" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.542" }
%"class.blink::HeapHashMap.542" = type { %"class.WTF::HashMap.545" }
%"class.WTF::HashMap.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"struct.WTF::KeyValuePair.548"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.548" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.557" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.549" }
%"class.blink::HeapObserverSet.549" = type { i32, [4 x i8], %"class.blink::HeapHashSet.550" }
%"class.blink::HeapHashSet.550" = type { %"class.WTF::HashSet.553" }
%"class.WTF::HashSet.553" = type { %"class.WTF::HashTable.554" }
%"class.WTF::HashTable.554" = type <{ %"class.blink::WeakMember.556"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.556" = type opaque
%"class.blink::Supplementable.557" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.558" }
%"class.blink::HeapHashMap.558" = type { %"class.WTF::HashMap.561" }
%"class.WTF::HashMap.561" = type { %"class.WTF::HashTable.562" }
%"class.WTF::HashTable.562" = type <{ %"struct.WTF::KeyValuePair.564"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.564" = type { i8*, %"class.blink::Member.565" }
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.567" }
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.569, %"class.std::__1::unique_ptr.570", %"class.std::__1::unique_ptr.570", %"class.std::__1::unique_ptr.576", %"class.std::__1::unique_ptr.576", %"class.blink::Member.283", i32, [4 x i8], %"class.WTF::HashSet.582", i32, i32 }
%class.scoped_refptr.569 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.582" = type { %"class.WTF::HashTable.583" }
%"class.WTF::HashTable.583" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.588" = type { %"class.WTF::Vector.591" }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.blink::Member.594"*, i32, i32 }
%"class.blink::Member.594" = type opaque
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.600", i32, i32 }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type opaque
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.293" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::KURL"* }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.309 }
%class.scoped_refptr.309 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.310" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312" }
%"class.WTF::VectorBufferBase.312" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.313 }
%class.scoped_refptr.313 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.328" }
%"class.blink::HeapHashMap.328" = type { %"class.WTF::HashMap.331" }
%"class.WTF::HashMap.331" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"struct.WTF::KeyValuePair.334"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.334" = type opaque
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"class.blink::WeakMember.341"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.341" = type opaque
%"class.blink::HeapHashSet.342" = type { %"class.WTF::HashSet.345" }
%"class.WTF::HashSet.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.359" = type { %"class.WTF::HashMap.362" }
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.365" = type opaque
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.368" }
%"class.WTF::VectorBufferBase.368" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.221" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.218 }
%class.scoped_refptr.218 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.219", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.219" = type { %"class.base::RefCounted.220" }
%"class.base::RefCounted.220" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.221" = type { %"class.blink::MemberBase.222" }
%"class.blink::MemberBase.222" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.225", %"class.blink::Member.227", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.225" = type { %"class.WTF::SingleThreadedBitField.226" }
%"class.WTF::SingleThreadedBitField.226" = type { i32 }
%"class.blink::Member.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.229 }
%class.scoped_refptr.229 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.230", %"class.WTF::AtomicString", %"class.WTF::Vector.232" }
%"class.WTF::RefCounted.230" = type { %"class.base::RefCounted.231" }
%"class.base::RefCounted.231" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.232" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234", [32 x i8] }
%"class.WTF::VectorBufferBase.234" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.377" = type { %"class.WTF::Vector.380" }
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.blink::Member.383"*, i32, i32 }
%"class.blink::Member.383" = type opaque
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.391" = type { %"class.WTF::HashSet.394" }
%"class.WTF::HashSet.394" = type { %"class.WTF::HashTable.395" }
%"class.WTF::HashTable.395" = type <{ %"class.blink::WeakMember.397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.397" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.398", i32, [4 x i8] }>
%"class.WTF::Vector.398" = type { %"class.WTF::VectorBuffer.399" }
%"class.WTF::VectorBuffer.399" = type { %"class.WTF::VectorBufferBase.400" }
%"class.WTF::VectorBufferBase.400" = type { %"struct.std::__1::pair.401"*, i32, i32 }
%"struct.std::__1::pair.401" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.406" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.239" }
%"class.WTF::Vector.239" = type { %"class.WTF::VectorBuffer.240" }
%"class.WTF::VectorBuffer.240" = type { %"class.WTF::VectorBufferBase.241" }
%"class.WTF::VectorBufferBase.241" = type { %"class.blink::Member.216"*, i32, i32 }
%"class.blink::HeapVector.417" = type { %"class.WTF::Vector.420" }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"class.blink::Member.423"*, i32, i32 }
%"class.blink::Member.423" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.193" }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"struct.WTF::KeyValuePair.439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.439" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.325", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.316, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.316 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.317" }>
%"class.base::RefCountedThreadSafe.317" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.318 }
%class.scoped_refptr.318 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.319", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.319" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.320" }
%"struct.std::__1::atomic.320" = type { %"struct.std::__1::__atomic_base.321" }
%"struct.std::__1::__atomic_base.321" = type { %"struct.std::__1::__atomic_base.322" }
%"struct.std::__1::__atomic_base.322" = type { %"struct.std::__1::__cxx_atomic_impl.323" }
%"struct.std::__1::__cxx_atomic_impl.323" = type { %"struct.std::__1::__cxx_atomic_base_impl.324" }
%"struct.std::__1::__cxx_atomic_base_impl.324" = type { i8 }
%"class.blink::WeakMember.325" = type { %"class.blink::MemberBase.194" }
%"class.blink::HeapHashSet.448" = type { %"class.WTF::HashSet.451" }
%"class.WTF::HashSet.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"class.blink::Member.454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.454" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487" }
%"class.WTF::VectorBufferBase.487" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.490" = type { %"class.WTF::HashMap.493" }
%"class.WTF::HashMap.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.206 }
%class.scoped_refptr.206 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.207" }
%"struct.std::__1::atomic.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__cxx_atomic_impl.210" }
%"struct.std::__1::__cxx_atomic_impl.210" = type { %"struct.std::__1::__cxx_atomic_base_impl.211" }
%"struct.std::__1::__cxx_atomic_base_impl.211" = type { i32 }
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.509" = type { %"class.WTF::HashMap.512" }
%"class.WTF::HashMap.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.516" }
%"class.blink::HeapHashSet.516" = type { %"class.WTF::HashSet.519" }
%"class.WTF::HashSet.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"class.blink::WeakMember.522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.193", %"class.blink::HeapHashSet.532", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.539", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.532" = type { %"class.WTF::HashSet.535" }
%"class.WTF::HashSet.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"class.blink::Member.538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.538" = type opaque
%"class.blink::HeapTaskRunnerTimer.539" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.540", { i64, i64 } }
%"class.blink::WeakMember.540" = type { %"class.blink::MemberBase.526" }
%"class.blink::WeakMember.527" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::Node"* }
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.199" }
%"class.blink::HeapHashMap.199" = type { %"class.WTF::HashMap.202" }
%"class.WTF::HashMap.202" = type { %"class.WTF::HashTable.203" }
%"class.WTF::HashTable.203" = type <{ %"struct.WTF::KeyValuePair.205"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.205" = type { %"class.WTF::AtomicString", %"class.blink::Member.212" }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.216", i32, %"class.blink::HeapVector" }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.249" }
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::HeapHashMap.251"* }
%"class.blink::HeapHashMap.251" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.254" = type { %"class.WTF::Vector.257" }
%"class.WTF::Vector.257" = type { %"class.WTF::VectorBuffer.258" }
%"class.WTF::VectorBuffer.258" = type { %"class.WTF::VectorBufferBase.259" }
%"class.WTF::VectorBufferBase.259" = type { %"class.blink::Member.260"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase.184" }
%"class.blink::Member.187" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TickClock" = type opaque
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.636", %"class.WTF::HashMap.636", %"class.WTF::HashMap.641", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.693", %"class.blink::Persistent.704", i8, i8, i8, %"class.WTF::Vector.270", %"class.std::__1::unique_ptr.706", %"class.blink::Persistent.712", %"class.blink::Persistent.716", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.618", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.624", %"class.std::__1::unique_ptr.630", i32, i32 }
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ %"struct.WTF::KeyValuePair.640"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.640" = type opaque
%"class.WTF::HashMap.641" = type { %"class.WTF::HashTable.642" }
%"class.WTF::HashTable.642" = type <{ %"struct.WTF::KeyValuePair.645"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.645" = type opaque
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.654", %class.scoped_refptr.206 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.649", i8* }
%"class.WTF::HashMap.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ %"struct.WTF::KeyValuePair.653"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.653" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.654" = type { %"class.v8::PersistentValueMapBase.655" }
%"class.v8::PersistentValueMapBase.655" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.656", i8* }
%"class.WTF::HashMap.656" = type { %"class.WTF::HashTable.657" }
%"class.WTF::HashTable.657" = type <{ %"struct.WTF::KeyValuePair.660"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.660" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.661", %"class.WTF::String", %"class.std::__1::unique_ptr.663" }
%"class.WTF::RefCounted.661" = type { %"class.base::RefCounted.662" }
%"class.base::RefCounted.662" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.666", %"class.std::__1::unique_ptr.677", %"class.WTF::Vector.683", i8, i32 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.WTF::Vector.669"* }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.683" = type { %"class.WTF::VectorBuffer.684" }
%"class.WTF::VectorBuffer.684" = type { %"class.WTF::VectorBufferBase.671", [32 x i8] }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.696" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.696" = type { %"class.WTF::HashTable.697" }
%"class.WTF::HashTable.697" = type <{ %"struct.WTF::KeyValuePair.700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.700" = type opaque
%"class.blink::Persistent.704" = type { %"class.blink::PersistentBase.705" }
%"class.blink::PersistentBase.705" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.733", %class.scoped_refptr.736, %"class.blink::Member.737", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.733" = type { %"class.v8::Persistent.734" }
%"class.v8::Persistent.734" = type { %"class.v8::PersistentBase.735" }
%"class.v8::PersistentBase.735" = type { %"class.v8::Context"* }
%class.scoped_refptr.736 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.704" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.712" = type { %"class.blink::PersistentBase.713" }
%"class.blink::PersistentBase.713" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.716" = type { %"class.blink::PersistentBase.717" }
%"class.blink::PersistentBase.717" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.720", i64 }
%"class.blink::HeapVector.720" = type { %"class.WTF::Vector.723" }
%"class.WTF::Vector.723" = type { %"class.WTF::VectorBuffer.724" }
%"class.WTF::VectorBuffer.724" = type { %"class.WTF::VectorBufferBase.725" }
%"class.WTF::VectorBufferBase.725" = type { %"struct.std::__1::pair.726"*, i32, i32 }
%"struct.std::__1::pair.726" = type { %"class.blink::UntracedMember", %"class.blink::Member.728" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.v8::Value" = type { i8 }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.748" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.748" = type { %"class.v8::TracedReference.749" }
%"class.v8::TracedReference.749" = type { %"class.v8::BasicTracedReference.750" }
%"class.v8::BasicTracedReference.750" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.751", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.751" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.752" }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { i8* }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8UnionStringOrTrustedScript" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.blink::Member.761" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::TrustedScript"* }
%"class.blink::TrustedScript" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.v8::Boolean" = type { i8 }
%"class.blink::GetRootNodeOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::V8ScrollStateCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.783", %"class.blink::Member.783" }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::ScriptState"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.743 }
%union.anon.743 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink17NativeValueTraitsINS_21V8ScrollStateCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [5 x i8] c"Node\00", align 1
@_ZN5blink13V8EventTarget18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink6V8Node18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink6V8Node24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* @_ZN5blink13V8EventTarget18wrapper_type_info_E, i8 4 }, align 8
@_ZN5blink4Node18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink6V8Node18wrapper_type_info_E, align 8
@_ZZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [22 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28NodeTypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28NodeNameAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node27BaseURIAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node31IsConnectedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45OwnerDocumentAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node49OwnerDocumentAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node42ParentNodeAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node46ParentNodeAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45ParentElementAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node49ParentElementAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node42ChildNodesAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node46ChildNodesAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node42FirstChildAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node46FirstChildAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node41LastChildAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45LastChildAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node47PreviousSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node51PreviousSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node43NextSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node47NextSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node29NodeValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node29NodeValueAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 4 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node31TextContentAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node31TextContentAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 4 }], align 16
@.str.1 = private unnamed_addr constant [9 x i8] c"nodeType\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"nodeName\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"baseURI\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"isConnected\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"ownerDocument\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"parentNode\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"parentElement\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"childNodes\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"firstChild\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"lastChild\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"previousSibling\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"nextSibling\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"nodeValue\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"textContent\00", align 1
@_ZZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E19kConstantValueTable = internal constant [18 x %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"] [%"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i32 0, i32 0), i64 1 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i32 0, i32 0), i64 2 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), i64 3 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i32 0, i32 0), i64 4 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i32 0, i32 0), i64 5 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i64 6 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i32 0, i32 0), i64 7 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i64 8 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i64 9 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i32 0, i32 0), i64 10 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i32 0, i32 0), i64 11 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i32 0, i32 0), i64 12 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i64 1 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28, i32 0, i32 0), i64 2 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i32 0, i32 0), i64 4 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i32 0, i32 0), i64 8 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31, i32 0, i32 0), i64 16 }, %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig" { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i64 32 }], align 16
@.str.15 = private unnamed_addr constant [13 x i8] c"ELEMENT_NODE\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"ATTRIBUTE_NODE\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"TEXT_NODE\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"CDATA_SECTION_NODE\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"ENTITY_REFERENCE_NODE\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"ENTITY_NODE\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"PROCESSING_INSTRUCTION_NODE\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"COMMENT_NODE\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"DOCUMENT_NODE\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"DOCUMENT_TYPE_NODE\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"DOCUMENT_FRAGMENT_NODE\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"NOTATION_NODE\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"DOCUMENT_POSITION_DISCONNECTED\00", align 1
@.str.28 = private unnamed_addr constant [28 x i8] c"DOCUMENT_POSITION_PRECEDING\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"DOCUMENT_POSITION_FOLLOWING\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"DOCUMENT_POSITION_CONTAINS\00", align 1
@.str.31 = private unnamed_addr constant [31 x i8] c"DOCUMENT_POSITION_CONTAINED_BY\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\00", align 1
@_ZZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [18 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node40AppendChildOperationCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 40, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node44AppendChildOperationCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 72, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node26CloneNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node40CompareDocumentPositionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node25ContainsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 2 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28GetRootNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node30HasChildNodesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 2 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node41InsertBeforeOperationCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 40, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45InsertBeforeOperationCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 72, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node35IsDefaultNamespaceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28IsEqualNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node27IsSameNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node35LookupNamespaceURIOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node29LookupPrefixOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node26NormalizeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28RemoveChildOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node41ReplaceChildOperationCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 40, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45ReplaceChildOperationCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 72, i8 0 }], align 16
@.str.33 = private unnamed_addr constant [12 x i8] c"appendChild\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"cloneNode\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"compareDocumentPosition\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"contains\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"getRootNode\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"hasChildNodes\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"insertBefore\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"isDefaultNamespace\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"isEqualNode\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"isSameNode\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"lookupNamespaceURI\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"lookupPrefix\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"normalize\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"removeChild\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"replaceChild\00", align 1
@_ZZN5blink6V8Node35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node31SetApplyScrollOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node36SetDistributeScrollOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }], align 16
@.str.48 = private unnamed_addr constant [15 x i8] c"setApplyScroll\00", align 1
@.str.49 = private unnamed_addr constant [20 x i8] c"setDistributeScroll\00", align 1
@_ZZN5blink8bindings19v8_context_snapshot19GetRefTableOfV8NodeEvE15kReferenceTable = internal constant [43 x i64] [i64 ptrtoint (%"struct.blink::WrapperTypeInfo"* @_ZN5blink6V8Node18wrapper_type_info_E to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28NodeTypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28NodeNameAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node27BaseURIAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node31IsConnectedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45OwnerDocumentAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node49OwnerDocumentAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node42ParentNodeAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node46ParentNodeAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45ParentElementAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node49ParentElementAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node42ChildNodesAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node46ChildNodesAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node42FirstChildAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node46FirstChildAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node41LastChildAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45LastChildAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node47PreviousSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node51PreviousSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node43NextSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node47NextSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node29NodeValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node29NodeValueAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node31TextContentAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node31TextContentAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node40AppendChildOperationCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node44AppendChildOperationCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node26CloneNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node40CompareDocumentPositionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node25ContainsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28GetRootNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node30HasChildNodesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node41InsertBeforeOperationCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45InsertBeforeOperationCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node35IsDefaultNamespaceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28IsEqualNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node27IsSameNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node35LookupNamespaceURIOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node29LookupPrefixOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node26NormalizeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node28RemoveChildOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node41ReplaceChildOperationCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 ptrtoint (void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node45ReplaceChildOperationCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64)], align 16
@_ZZN5blink8bindings19v8_context_snapshot20InstallPropsOfV8NodeEN2v85LocalINS2_7ContextEEERKNS_15DOMWrapperWorldENS3_INS2_6ObjectEEESA_SA_NS3_INS2_8TemplateEEEE15kOperationTable = internal constant [2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node31SetApplyScrollOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_17v8_node36SetDistributeScrollOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }], align 16
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@.str.50 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.52 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink16CEReactionsScope13top_of_stack_E = external local_unnamed_addr global %"class.blink::CEReactionsScope"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.54 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.55 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase32is_scroll_customization_enabled_E = external local_unnamed_addr global i8, align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CallbackFunctionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink21V8ScrollStateCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZN5blink22V8NativeScrollBehavior13string_table_E = external constant [3 x i8*], align 16
@.str.57 = private unnamed_addr constant [22 x i8] c"disable-native-scroll\00", align 1
@.str.58 = private unnamed_addr constant [29 x i8] c"perform-before-native-scroll\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"perform-after-native-scroll\00", align 1
@.str.60 = private unnamed_addr constant [21 x i8] c"NativeScrollBehavior\00", align 1
@_ZN5blink22V8NativeScrollBehavior13string_table_E.const = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i32 0, i32 0)], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6V8Node24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.181", align 8
  %6 = alloca %"class.base::span.182", align 8
  %7 = alloca %"class.base::span.182", align 8
  %8 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %8) #9
  %10 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %8) #9
  %11 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8EventTarget18wrapper_type_info_E, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #9
  %12 = bitcast %"class.v8::Template"* %11 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %9, %"class.v8::ObjectTemplate"* %10, %"class.v8::FunctionTemplate"* %8, %"class.v8::FunctionTemplate"* %12) #9
  %13 = bitcast %"class.v8::ObjectTemplate"* %9 to %"class.v8::Template"*
  %14 = bitcast %"class.v8::ObjectTemplate"* %10 to %"class.v8::Template"*
  %15 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  %16 = bitcast %"class.base::span.181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  %17 = bitcast %"class.base::span.182"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #9
  %19 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 22, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([22 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %20, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %13, %"class.v8::Template"* %14, %"class.v8::Template"* %2, %"class.v8::Signature"* %18, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #9
  %21 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 0, i32 0
  store i64 18, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"* getelementptr inbounds ([18 x %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"], [18 x %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"]* @_ZZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E19kConstantValueTable, i64 0, i64 0), %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"** %22, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller16InstallConstantsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_19ConstantValueConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %13, %"class.v8::Template"* %14, %"class.v8::Template"* %2, %"class.v8::Signature"* %18, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %5) #9
  %23 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %6, i64 0, i32 0, i32 0
  store i64 18, i64* %23, align 8
  %24 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([18 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %24, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %13, %"class.v8::Template"* %14, %"class.v8::Template"* %2, %"class.v8::Signature"* %18, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  %25 = bitcast %"class.base::span.182"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25)
  %26 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase32is_scroll_customization_enabled_E, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %3
  %29 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #9
  %30 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 0, i32 0
  store i64 2, i64* %30, align 8
  %31 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink6V8Node35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %31, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %13, %"class.v8::Template"* %14, %"class.v8::Template"* %2, %"class.v8::Signature"* %29, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %7) #9
  br label %32

32:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.181", align 8
  %8 = alloca %"class.base::span.182", align 8
  %9 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %10 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %9) #9
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 22, i64* %11, align 8
  %12 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([22 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %12, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %10, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #9
  %13 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 0, i32 0
  store i64 18, i64* %13, align 8
  %14 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"* getelementptr inbounds ([18 x %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"], [18 x %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"]* @_ZZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E19kConstantValueTable, i64 0, i64 0), %"struct.blink::bindings::IDLMemberInstaller::ConstantValueConfig"** %14, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller16InstallConstantsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_19ConstantValueConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %10, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %7) #9
  %15 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %8, i64 0, i32 0, i32 0
  store i64 18, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %8, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([18 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink6V8Node30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %16, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %10, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink6V8Node35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span.182", align 8
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase32is_scroll_customization_enabled_E, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %11 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %10) #9
  %12 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %6, i64 0, i32 0, i32 0
  store i64 2, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink6V8Node35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %11, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %6) #9
  br label %14

14:                                               ; preds = %5, %9
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node28NodeTypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = bitcast i8* %23 to i32 (%"class.blink::Node"*)***
  %26 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %26, i64 30
  %28 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %27, align 8
  %29 = tail call i32 %28(%"class.blink::Node"* %24) #9
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = shl i32 %29, 1
  %34 = and i32 %33, 131070
  %35 = zext i32 %34 to i64
  store i64 %35, i64* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node28NodeNameAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.absl::optional", align 8
  %3 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #9
  %4 = bitcast %"class.absl::optional"* %2 to i64*
  store i64 -6148914691236517206, i64* %4, align 8
  store i8 0, i8* %3, align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false) #9
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %28, label %9, !prof !3

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 1
  %13 = bitcast i64* %12 to %"class.v8::Isolate"**
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %14) #9
  %16 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %15, i64 0, i32 3
  %17 = bitcast %"class.base::TickClock"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %15, %"class.blink::RuntimeCallStats"** %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %23 = bitcast i64* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #9
  %24 = bitcast %"class.base::TickClock"** %22 to i64*
  store i64 %18, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %15, i64 0, i32 2, i64 32
  %26 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %15, i64 0, i32 0
  %27 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %26, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %20, %"class.blink::RuntimeCallCounter"* %25, %"class.blink::RuntimeCallTimer"* %27) #9
  store %"class.blink::RuntimeCallTimer"* %20, %"class.blink::RuntimeCallTimer"** %26, align 8
  store i8 1, i8* %3, align 8
  br label %28

28:                                               ; preds = %1, %9
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 -1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i64 %32, -4294967296
  %37 = zext i32 %35 to i64
  %38 = or i64 %36, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load i16, i16* %40, align 2
  switch i16 %41, label %46 [
    i16 1057, label %42
    i16 1056, label %42
    i16 1040, label %42
  ]

42:                                               ; preds = %28, %28, %28
  %43 = add i64 %32, 19
  %44 = inttoptr i64 %43 to i8**
  %45 = load i8*, i8** %44, align 1
  br label %49

46:                                               ; preds = %28
  %47 = bitcast i64* %31 to %"class.v8::Object"*
  %48 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %47, i32 1) #9
  br label %49

49:                                               ; preds = %42, %46
  %50 = phi i8* [ %45, %42 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::Node"*
  %52 = bitcast i8* %50 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %53 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %53, i64 27
  %55 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %54, align 8
  %56 = call %"class.WTF::StringImpl"* %55(%"class.blink::Node"* %51) #9
  %57 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 1
  %60 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %60, label %80, label %61

61:                                               ; preds = %49
  %62 = load i64, i64* %59, align 8
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to %"class.blink::V8PerIsolateData"**
  %65 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %67 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %66, align 8
  %68 = getelementptr inbounds i64, i64* %58, i64 3
  %69 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %67, i64 0, i32 3, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, %56
  br i1 %71, label %72, label %79

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %67, i64 0, i32 1, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %86, label %76

76:                                               ; preds = %72
  %77 = inttoptr i64 %74 to i64*
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %68, align 8
  br label %86

79:                                               ; preds = %61
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %67, i64* %68, %"class.WTF::StringImpl"* nonnull %56) #9
  br label %86

80:                                               ; preds = %49
  %81 = getelementptr inbounds i64, i64* %58, i64 3
  %82 = load i64, i64* %59, align 8
  %83 = add i64 %82, 200
  %84 = inttoptr i64 %83 to i64*
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %81, align 8
  br label %99

86:                                               ; preds = %72, %76, %79
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #9
  br label %99

99:                                               ; preds = %80, %95, %98
  %100 = load i8, i8* %3, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %104 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %103, align 8
  %105 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %106 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %105) #9
  %107 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %104, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %106, %"class.blink::RuntimeCallTimer"** %107, align 8
  store i8 0, i8* %3, align 8
  br label %108

108:                                              ; preds = %99, %102
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node27BaseURIAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink4Node7baseURIEv(%"class.blink::Node"* %24) #9
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %25, i64 0, i32 4, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %27, i64 3
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 200
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %33, align 8
  br label %57

38:                                               ; preds = %22
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 8
  %41 = inttoptr i64 %40 to %"class.blink::V8PerIsolateData"**
  %42 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %42, i64 0, i32 5, i32 0, i32 0, i32 0
  %44 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %43, align 8
  %45 = getelementptr inbounds i64, i64* %27, i64 3
  %46 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %44, i64 0, i32 3, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, %30
  br i1 %48, label %49, label %56

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %44, i64 0, i32 1, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = inttoptr i64 %51 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %45, align 8
  br label %57

56:                                               ; preds = %38
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %44, i64* %45, %"class.WTF::StringImpl"* nonnull %30) #9
  br label %57

57:                                               ; preds = %32, %49, %53, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node31IsConnectedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 1307) #9
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #9
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 16
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 256
  %45 = icmp eq i32 %44, 0
  %46 = load i64*, i64** %2, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 3
  %48 = getelementptr inbounds i64, i64* %46, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = select i1 %45, i64 192, i64 184
  %51 = add i64 %50, %49
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node45OwnerDocumentAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = tail call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %24) #9
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::Document"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !4

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %63

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %39, null
  %41 = getelementptr inbounds i64, i64* %29, i64 2
  %42 = select i1 %40, i64* %41, i64* %39, !prof !4
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %30, align 8
  %44 = load i64*, i64** %38, align 8
  %45 = icmp eq i64* %44, null
  br i1 %45, label %46, label %63

46:                                               ; preds = %37
  %47 = load i64*, i64** %2, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = bitcast i64* %48 to %"class.v8::Object"*
  %50 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %49) #9
  %51 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %50) #9
  %52 = bitcast %"class.blink::Document"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %53, i64 7
  %55 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %54, align 8
  %56 = tail call %"class.v8::Value"* %55(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %51) #9
  %57 = icmp eq %"class.v8::Value"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %46
  %59 = load i64*, i64** %28, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 3
  %61 = bitcast %"class.v8::Value"* %56 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %60, align 8
  br label %63

63:                                               ; preds = %31, %37, %46, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node49OwnerDocumentAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = tail call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %24) #9
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::Document"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !4

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::Document"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node42ParentNodeAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %24) #9
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::ContainerNode"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !4

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %63

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %39, null
  %41 = getelementptr inbounds i64, i64* %29, i64 2
  %42 = select i1 %40, i64* %41, i64* %39, !prof !4
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %30, align 8
  %44 = load i64*, i64** %38, align 8
  %45 = icmp eq i64* %44, null
  br i1 %45, label %46, label %63

46:                                               ; preds = %37
  %47 = load i64*, i64** %2, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = bitcast i64* %48 to %"class.v8::Object"*
  %50 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %49) #9
  %51 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %50) #9
  %52 = bitcast %"class.blink::ContainerNode"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %53, i64 7
  %55 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %54, align 8
  %56 = tail call %"class.v8::Value"* %55(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %51) #9
  %57 = icmp eq %"class.v8::Value"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %46
  %59 = load i64*, i64** %28, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 3
  %61 = bitcast %"class.v8::Value"* %56 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %60, align 8
  br label %63

63:                                               ; preds = %31, %37, %46, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node46ParentNodeAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %24) #9
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::ContainerNode"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !4

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::ContainerNode"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node45ParentElementAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %24) #9
  %26 = icmp eq %"class.blink::ContainerNode"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %27, %22
  %33 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 3
  %36 = getelementptr inbounds i64, i64* %34, i64 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 176
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %35, align 8
  br label %71

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  %45 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = icmp eq i64* %46, null
  %48 = getelementptr inbounds i64, i64* %43, i64 2
  %49 = select i1 %47, i64* %48, i64* %46, !prof !4
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %44, align 8
  %51 = load i64*, i64** %45, align 8
  %52 = icmp eq i64* %51, null
  br i1 %52, label %53, label %71

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 0, i32 0
  %55 = load i64*, i64** %2, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 -1
  %57 = bitcast i64* %56 to %"class.v8::Object"*
  %58 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %57) #9
  %59 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %58) #9
  %60 = bitcast %"class.blink::ContainerNode"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %61, i64 7
  %63 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %62, align 8
  %64 = tail call %"class.v8::Value"* %63(%"class.blink::ScriptWrappable"* nonnull %54, %"class.blink::ScriptState"* %59) #9
  %65 = icmp eq %"class.v8::Value"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %53
  %67 = load i64*, i64** %42, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 3
  %69 = bitcast %"class.v8::Value"* %64 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %68, align 8
  br label %71

71:                                               ; preds = %32, %41, %53, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node49ParentElementAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %24) #9
  %26 = icmp eq %"class.blink::ContainerNode"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %27, %22
  %33 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 3
  %36 = getelementptr inbounds i64, i64* %34, i64 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 176
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %35, align 8
  br label %68

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 3
  %46 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %47 = load i64*, i64** %2, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = bitcast i64* %48 to %"class.v8::Object"*
  %50 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %45, %"class.blink::ScriptWrappable"* nonnull %42, %"class.v8::Object"* %49, %"class.blink::ScriptWrappable"* %46) #9
  br i1 %50, label %68, label %51

51:                                               ; preds = %41
  %52 = load i64*, i64** %2, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 -1
  %54 = bitcast i64* %53 to %"class.v8::Object"*
  %55 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %54) #9
  %56 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %55) #9
  %57 = bitcast %"class.blink::ContainerNode"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %58 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %58, i64 7
  %60 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %59, align 8
  %61 = tail call %"class.v8::Value"* %60(%"class.blink::ScriptWrappable"* nonnull %42, %"class.blink::ScriptState"* %56) #9
  %62 = icmp eq %"class.v8::Value"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %51
  %64 = load i64*, i64** %43, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 3
  %66 = bitcast %"class.v8::Value"* %61 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %32, %41, %51, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node42ChildNodesAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = tail call %"class.blink::NodeList"* @_ZN5blink4Node10childNodesEv(%"class.blink::Node"* %24) #9
  %26 = getelementptr inbounds %"class.blink::NodeList", %"class.blink::NodeList"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::NodeList"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !4

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %63

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.blink::NodeList", %"class.blink::NodeList"* %25, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %39, null
  %41 = getelementptr inbounds i64, i64* %29, i64 2
  %42 = select i1 %40, i64* %41, i64* %39, !prof !4
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %30, align 8
  %44 = load i64*, i64** %38, align 8
  %45 = icmp eq i64* %44, null
  br i1 %45, label %46, label %63

46:                                               ; preds = %37
  %47 = load i64*, i64** %2, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = bitcast i64* %48 to %"class.v8::Object"*
  %50 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %49) #9
  %51 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %50) #9
  %52 = bitcast %"class.blink::NodeList"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %53, i64 7
  %55 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %54, align 8
  %56 = tail call %"class.v8::Value"* %55(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %51) #9
  %57 = icmp eq %"class.v8::Value"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %46
  %59 = load i64*, i64** %28, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 3
  %61 = bitcast %"class.v8::Value"* %56 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %60, align 8
  br label %63

63:                                               ; preds = %31, %37, %46, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node46ChildNodesAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = tail call %"class.blink::NodeList"* @_ZN5blink4Node10childNodesEv(%"class.blink::Node"* %24) #9
  %26 = getelementptr inbounds %"class.blink::NodeList", %"class.blink::NodeList"* %25, i64 0, i32 0
  %27 = icmp eq %"class.blink::NodeList"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !4

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #9
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #9
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #9
  %49 = bitcast %"class.blink::NodeList"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #9
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node42FirstChildAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i8* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %22, %25
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 3
  br label %45

35:                                               ; preds = %25
  %36 = getelementptr inbounds i8, i8* %23, i64 64
  %37 = bitcast i8* %36 to %"class.blink::Node"**
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = bitcast %"class.blink::Node"* %38 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 0, i32 0
  %41 = icmp eq %"class.blink::Node"* %38, null
  %42 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  br i1 %41, label %45, label %53, !prof !4

45:                                               ; preds = %31, %35
  %46 = phi i64* [ %34, %31 ], [ %44, %35 ]
  %47 = phi i64* [ %33, %31 ], [ %43, %35 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %46, align 8
  br label %78

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %55, null
  %57 = getelementptr inbounds i64, i64* %43, i64 2
  %58 = select i1 %56, i64* %57, i64* %55, !prof !4
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %44, align 8
  %60 = load i64*, i64** %54, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %62, label %78

62:                                               ; preds = %53
  %63 = load i64*, i64** %2, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 -1
  %65 = bitcast i64* %64 to %"class.v8::Object"*
  %66 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %65) #9
  %67 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %66) #9
  %68 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %39, align 8
  %69 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %68, i64 7
  %70 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %69, align 8
  %71 = tail call %"class.v8::Value"* %70(%"class.blink::ScriptWrappable"* nonnull %40, %"class.blink::ScriptState"* %67) #9
  %72 = icmp eq %"class.v8::Value"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %62
  %74 = load i64*, i64** %42, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 3
  %76 = bitcast %"class.v8::Value"* %71 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %75, align 8
  br label %78

78:                                               ; preds = %45, %53, %62, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node46FirstChildAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i8* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %22, %25
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 3
  br label %45

35:                                               ; preds = %25
  %36 = getelementptr inbounds i8, i8* %23, i64 64
  %37 = bitcast i8* %36 to %"class.blink::Node"**
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = bitcast %"class.blink::Node"* %38 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 0, i32 0
  %41 = icmp eq %"class.blink::Node"* %38, null
  %42 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  br i1 %41, label %45, label %53, !prof !4

45:                                               ; preds = %31, %35
  %46 = phi i64* [ %34, %31 ], [ %44, %35 ]
  %47 = phi i64* [ %33, %31 ], [ %43, %35 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %46, align 8
  br label %75

53:                                               ; preds = %35
  %54 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %55 = load i64*, i64** %2, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 -1
  %57 = bitcast i64* %56 to %"class.v8::Object"*
  %58 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %44, %"class.blink::ScriptWrappable"* nonnull %40, %"class.v8::Object"* %57, %"class.blink::ScriptWrappable"* nonnull %54) #9
  br i1 %58, label %75, label %59

59:                                               ; preds = %53
  %60 = load i64*, i64** %2, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 -1
  %62 = bitcast i64* %61 to %"class.v8::Object"*
  %63 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %62) #9
  %64 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %63) #9
  %65 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %39, align 8
  %66 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %65, i64 7
  %67 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %66, align 8
  %68 = tail call %"class.v8::Value"* %67(%"class.blink::ScriptWrappable"* nonnull %40, %"class.blink::ScriptState"* %64) #9
  %69 = icmp eq %"class.v8::Value"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %59
  %71 = load i64*, i64** %42, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 3
  %73 = bitcast %"class.v8::Value"* %68 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %72, align 8
  br label %75

75:                                               ; preds = %45, %53, %59, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node41LastChildAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i8* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %22, %25
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 3
  br label %45

35:                                               ; preds = %25
  %36 = getelementptr inbounds i8, i8* %23, i64 72
  %37 = bitcast i8* %36 to %"class.blink::Node"**
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = bitcast %"class.blink::Node"* %38 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 0, i32 0
  %41 = icmp eq %"class.blink::Node"* %38, null
  %42 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  br i1 %41, label %45, label %53, !prof !4

45:                                               ; preds = %31, %35
  %46 = phi i64* [ %34, %31 ], [ %44, %35 ]
  %47 = phi i64* [ %33, %31 ], [ %43, %35 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %46, align 8
  br label %78

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %55, null
  %57 = getelementptr inbounds i64, i64* %43, i64 2
  %58 = select i1 %56, i64* %57, i64* %55, !prof !4
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %44, align 8
  %60 = load i64*, i64** %54, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %62, label %78

62:                                               ; preds = %53
  %63 = load i64*, i64** %2, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 -1
  %65 = bitcast i64* %64 to %"class.v8::Object"*
  %66 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %65) #9
  %67 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %66) #9
  %68 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %39, align 8
  %69 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %68, i64 7
  %70 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %69, align 8
  %71 = tail call %"class.v8::Value"* %70(%"class.blink::ScriptWrappable"* nonnull %40, %"class.blink::ScriptState"* %67) #9
  %72 = icmp eq %"class.v8::Value"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %62
  %74 = load i64*, i64** %42, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 3
  %76 = bitcast %"class.v8::Value"* %71 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %75, align 8
  br label %78

78:                                               ; preds = %45, %53, %62, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node45LastChildAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i8* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %22, %25
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 3
  br label %45

35:                                               ; preds = %25
  %36 = getelementptr inbounds i8, i8* %23, i64 72
  %37 = bitcast i8* %36 to %"class.blink::Node"**
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = bitcast %"class.blink::Node"* %38 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 0, i32 0
  %41 = icmp eq %"class.blink::Node"* %38, null
  %42 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  br i1 %41, label %45, label %53, !prof !4

45:                                               ; preds = %31, %35
  %46 = phi i64* [ %34, %31 ], [ %44, %35 ]
  %47 = phi i64* [ %33, %31 ], [ %43, %35 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %46, align 8
  br label %75

53:                                               ; preds = %35
  %54 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %55 = load i64*, i64** %2, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 -1
  %57 = bitcast i64* %56 to %"class.v8::Object"*
  %58 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %44, %"class.blink::ScriptWrappable"* nonnull %40, %"class.v8::Object"* %57, %"class.blink::ScriptWrappable"* nonnull %54) #9
  br i1 %58, label %75, label %59

59:                                               ; preds = %53
  %60 = load i64*, i64** %2, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 -1
  %62 = bitcast i64* %61 to %"class.v8::Object"*
  %63 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %62) #9
  %64 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %63) #9
  %65 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %39, align 8
  %66 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %65, i64 7
  %67 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %66, align 8
  %68 = tail call %"class.v8::Value"* %67(%"class.blink::ScriptWrappable"* nonnull %40, %"class.blink::ScriptState"* %64) #9
  %69 = icmp eq %"class.v8::Value"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %59
  %71 = load i64*, i64** %42, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 3
  %73 = bitcast %"class.v8::Value"* %68 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %72, align 8
  br label %75

75:                                               ; preds = %45, %53, %59, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node47PreviousSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 40
  %25 = bitcast i8* %24 to %"class.blink::Node"**
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 0, i32 0
  %28 = icmp eq %"class.blink::Node"* %26, null
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  br i1 %28, label %32, label %38, !prof !4

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %30, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  br label %64

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %40, null
  %42 = getelementptr inbounds i64, i64* %30, i64 2
  %43 = select i1 %41, i64* %42, i64* %40, !prof !4
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %31, align 8
  %45 = load i64*, i64** %39, align 8
  %46 = icmp eq i64* %45, null
  br i1 %46, label %47, label %64

47:                                               ; preds = %38
  %48 = load i64*, i64** %2, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 -1
  %50 = bitcast i64* %49 to %"class.v8::Object"*
  %51 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %50) #9
  %52 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %51) #9
  %53 = bitcast %"class.blink::Node"* %26 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %54 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %54, i64 7
  %56 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %55, align 8
  %57 = tail call %"class.v8::Value"* %56(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %52) #9
  %58 = icmp eq %"class.v8::Value"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %47
  %60 = load i64*, i64** %29, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  %62 = bitcast %"class.v8::Value"* %57 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %61, align 8
  br label %64

64:                                               ; preds = %32, %38, %47, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node51PreviousSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 40
  %25 = bitcast i8* %24 to %"class.blink::Node"**
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 0, i32 0
  %28 = icmp eq %"class.blink::Node"* %26, null
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  br i1 %28, label %32, label %38, !prof !4

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %30, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  br label %61

38:                                               ; preds = %22
  %39 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %40 = load i64*, i64** %2, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 -1
  %42 = bitcast i64* %41 to %"class.v8::Object"*
  %43 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %31, %"class.blink::ScriptWrappable"* nonnull %27, %"class.v8::Object"* %42, %"class.blink::ScriptWrappable"* %39) #9
  br i1 %43, label %61, label %44

44:                                               ; preds = %38
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = bitcast i64* %46 to %"class.v8::Object"*
  %48 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %47) #9
  %49 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %48) #9
  %50 = bitcast %"class.blink::Node"* %26 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %51 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, i64 7
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %52, align 8
  %54 = tail call %"class.v8::Value"* %53(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %49) #9
  %55 = icmp eq %"class.v8::Value"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %44
  %57 = load i64*, i64** %29, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 3
  %59 = bitcast %"class.v8::Value"* %54 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %32, %38, %44, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node43NextSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 48
  %25 = bitcast i8* %24 to %"class.blink::Node"**
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 0, i32 0
  %28 = icmp eq %"class.blink::Node"* %26, null
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  br i1 %28, label %32, label %38, !prof !4

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %30, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  br label %64

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %40, null
  %42 = getelementptr inbounds i64, i64* %30, i64 2
  %43 = select i1 %41, i64* %42, i64* %40, !prof !4
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %31, align 8
  %45 = load i64*, i64** %39, align 8
  %46 = icmp eq i64* %45, null
  br i1 %46, label %47, label %64

47:                                               ; preds = %38
  %48 = load i64*, i64** %2, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 -1
  %50 = bitcast i64* %49 to %"class.v8::Object"*
  %51 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %50) #9
  %52 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %51) #9
  %53 = bitcast %"class.blink::Node"* %26 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %54 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %54, i64 7
  %56 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %55, align 8
  %57 = tail call %"class.v8::Value"* %56(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %52) #9
  %58 = icmp eq %"class.v8::Value"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %47
  %60 = load i64*, i64** %29, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  %62 = bitcast %"class.v8::Value"* %57 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %61, align 8
  br label %64

64:                                               ; preds = %32, %38, %47, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node47NextSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 48
  %25 = bitcast i8* %24 to %"class.blink::Node"**
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 0, i32 0
  %28 = icmp eq %"class.blink::Node"* %26, null
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  br i1 %28, label %32, label %38, !prof !4

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %30, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  br label %61

38:                                               ; preds = %22
  %39 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %40 = load i64*, i64** %2, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 -1
  %42 = bitcast i64* %41 to %"class.v8::Object"*
  %43 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %31, %"class.blink::ScriptWrappable"* nonnull %27, %"class.v8::Object"* %42, %"class.blink::ScriptWrappable"* %39) #9
  br i1 %43, label %61, label %44

44:                                               ; preds = %38
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = bitcast i64* %46 to %"class.v8::Object"*
  %48 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %47) #9
  %49 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %48) #9
  %50 = bitcast %"class.blink::Node"* %26 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %51 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, i64 7
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %52, align 8
  %54 = tail call %"class.v8::Value"* %53(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %49) #9
  %55 = icmp eq %"class.v8::Value"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %44
  %57 = load i64*, i64** %29, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 3
  %59 = bitcast %"class.v8::Value"* %54 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %32, %38, %44, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node29NodeValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  %25 = bitcast i8* %23 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %26 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %26, i64 28
  %28 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %27, align 8
  %29 = tail call %"class.WTF::StringImpl"* %28(%"class.blink::Node"* %24) #9
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %22
  %35 = load i64, i64* %32, align 8
  %36 = add i64 %35, 8
  %37 = inttoptr i64 %36 to %"class.blink::V8PerIsolateData"**
  %38 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %38, i64 0, i32 5, i32 0, i32 0, i32 0
  %40 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %39, align 8
  %41 = getelementptr inbounds i64, i64* %31, i64 3
  %42 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %40, i64 0, i32 3, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, %29
  br i1 %44, label %45, label %52

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %40, i64 0, i32 1, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = inttoptr i64 %47 to i64*
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %41, align 8
  br label %59

52:                                               ; preds = %34
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %40, i64* %41, %"class.WTF::StringImpl"* nonnull %29) #9
  br label %59

53:                                               ; preds = %22
  %54 = getelementptr inbounds i64, i64* %31, i64 3
  %55 = load i64, i64* %32, align 8
  %56 = add i64 %55, 176
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %54, align 8
  br label %72

59:                                               ; preds = %45, %49, %52
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %72

72:                                               ; preds = %53, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node29NodeValueAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CEReactionsScope", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %17 = bitcast i8** %16 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)>, <2 x i8*>* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %11, %"class.v8::Isolate"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %22 = bitcast %"class.WTF::StringImpl"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #9
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %26, label %46, !prof !4

26:                                               ; preds = %1
  %27 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %24) #9
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #9
  br label %45

45:                                               ; preds = %26, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %174

46:                                               ; preds = %1
  %47 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %4, i64 0, i32 1
  %49 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  %50 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %51 = bitcast %"class.blink::CEReactionsScope"* %4 to i64*
  store i64 %50, i64* %51, align 8
  store i8 0, i8* %48, align 8
  store %"class.blink::CEReactionsScope"* %4, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %52 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 -1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = and i64 %55, -4294967296
  %60 = zext i32 %58 to i64
  %61 = or i64 %59, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load i16, i16* %63, align 2
  switch i16 %64, label %70 [
    i16 1057, label %65
    i16 1056, label %65
    i16 1040, label %65
  ]

65:                                               ; preds = %46, %46, %46
  %66 = add i64 %55, 19
  %67 = inttoptr i64 %66 to i8**
  %68 = load i8*, i8** %67, align 1
  %69 = bitcast i8* %68 to %"class.blink::Node"*
  br label %82

70:                                               ; preds = %46
  %71 = bitcast i64* %54 to %"class.v8::Object"*
  %72 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %71, i32 1) #9
  %73 = load i32, i32* %23, align 8
  %74 = bitcast i8* %72 to %"class.blink::Node"*
  %75 = icmp sgt i32 %73, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %70
  %77 = load i64*, i64** %7, align 8
  %78 = getelementptr inbounds i64, i64* %77, i64 1
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 160
  %81 = inttoptr i64 %80 to %"class.v8::Value"*
  br label %87

82:                                               ; preds = %65, %70
  %83 = phi %"class.blink::Node"* [ %69, %65 ], [ %74, %70 ]
  %84 = phi i8* [ %68, %65 ], [ %72, %70 ]
  %85 = bitcast i64** %52 to %"class.v8::Value"**
  %86 = load %"class.v8::Value"*, %"class.v8::Value"** %85, align 8
  br label %87

87:                                               ; preds = %76, %82
  %88 = phi %"class.blink::Node"* [ %74, %76 ], [ %83, %82 ]
  %89 = phi i8* [ %72, %76 ], [ %84, %82 ]
  %90 = phi %"class.v8::Value"* [ %81, %76 ], [ %86, %82 ]
  %91 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %91) #9
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %11, %"class.v8::Value"* %90, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %92 = load i32, i32* %20, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %145

94:                                               ; preds = %87
  %95 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #9
  %96 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %97 = load %"class.v8::String"*, %"class.v8::String"** %96, align 8
  %98 = icmp eq %"class.v8::String"* %97, null
  br i1 %98, label %101, label %99, !prof !4

99:                                               ; preds = %94
  %100 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %97, i32 0) #9
  br label %122

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %122, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %122

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i33
  %114 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %113, i33 1) #9
  %115 = extractvalue { i33, i1 } %114, 1
  %116 = extractvalue { i33, i1 } %114, 0
  %117 = icmp slt i33 %116, 0
  %118 = or i1 %115, %117
  br i1 %118, label %119, label %120, !prof !4

119:                                              ; preds = %110
  call void @llvm.trap() #9
  unreachable

120:                                              ; preds = %110
  %121 = trunc i33 %116 to i32
  store i32 %121, i32* %111, align 4
  br label %122

122:                                              ; preds = %99, %101, %105, %120
  %123 = phi %"class.WTF::StringImpl"* [ %100, %99 ], [ null, %101 ], [ %103, %105 ], [ %103, %120 ]
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %124, align 8
  %125 = bitcast i8* %89 to void (%"class.blink::Node"*, %"class.WTF::String"*)***
  %126 = load void (%"class.blink::Node"*, %"class.WTF::String"*)**, void (%"class.blink::Node"*, %"class.WTF::String"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %126, i64 29
  %128 = load void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %127, align 8
  call void %128(%"class.blink::Node"* %88, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %122
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #9
  br label %144

144:                                              ; preds = %122, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #9
  br label %145

145:                                              ; preds = %87, %144
  %146 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  store i8* null, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %150, label %149

149:                                              ; preds = %145
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %147) #9
  br label %150

150:                                              ; preds = %149, %145
  %151 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #9
  br label %167

167:                                              ; preds = %150, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %91) #9
  %168 = load i8, i8* %48, align 8, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %4) #9
  br label %171

171:                                              ; preds = %167, %170
  %172 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %173 = load i64, i64* %172, align 8
  store i64 %173, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9
  br label %174

174:                                              ; preds = %171, %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %175 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %176 = load i64*, i64** %175, align 8
  %177 = icmp eq i64* %176, null
  br i1 %177, label %187, label %178

178:                                              ; preds = %174
  %179 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %180 = bitcast %"class.v8::Isolate"* %179 to %"class.v8::internal::Isolate"*
  %181 = load i64, i64* %176, align 8
  %182 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %180, i64 %181) #9
  %183 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %179) #9
  br i1 %183, label %187, label %184

184:                                              ; preds = %178
  %185 = bitcast i64* %182 to %"class.v8::Value"*
  %186 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %179, %"class.v8::Value"* %185) #9
  br label %187

187:                                              ; preds = %184, %178, %174
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #9
  br label %203

203:                                              ; preds = %187, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node31TextContentAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = bitcast i64* %4 to %"class.v8::Object"*
  %6 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %5) #9
  %7 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %6)
  %8 = load i64, i64* %4, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %24

22:                                               ; preds = %1
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %5, i32 1) #9
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi i8* [ %21, %18 ], [ %23, %22 ]
  %26 = bitcast i8* %25 to %"class.blink::Node"*
  %27 = tail call %"class.blink::V8UnionStringOrTrustedScript"* @_ZNK5blink4Node21textContentForBindingEv(%"class.blink::Node"* %26) #9
  %28 = icmp eq %"class.blink::V8UnionStringOrTrustedScript"* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::ScriptState"* %7 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 176
  %33 = inttoptr i64 %32 to %"class.v8::Value"*
  br label %36

34:                                               ; preds = %24
  %35 = tail call %"class.v8::Value"* @_ZNK5blink28V8UnionStringOrTrustedScript9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionStringOrTrustedScript"* nonnull %27, %"class.blink::ScriptState"* %7) #9
  br label %36

36:                                               ; preds = %29, %34
  %37 = phi %"class.v8::Value"* [ %33, %29 ], [ %35, %34 ]
  %38 = icmp eq %"class.v8::Value"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 3
  %43 = bitcast %"class.v8::Value"* %37 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %42, align 8
  br label %45

45:                                               ; preds = %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node31TextContentAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CEReactionsScope", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %44, !prof !4

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %127

44:                                               ; preds = %1
  %45 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %4, i64 0, i32 1
  %47 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  %48 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %49 = bitcast %"class.blink::CEReactionsScope"* %4 to i64*
  store i64 %48, i64* %49, align 8
  store i8 0, i8* %46, align 8
  store %"class.blink::CEReactionsScope"* %4, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 -1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i64 %53, -4294967296
  %58 = zext i32 %56 to i64
  %59 = or i64 %57, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load i16, i16* %61, align 2
  switch i16 %62, label %68 [
    i16 1057, label %63
    i16 1056, label %63
    i16 1040, label %63
  ]

63:                                               ; preds = %44, %44, %44
  %64 = add i64 %53, 19
  %65 = inttoptr i64 %64 to i8**
  %66 = load i8*, i8** %65, align 1
  %67 = bitcast i8* %66 to %"class.blink::Node"*
  br label %80

68:                                               ; preds = %44
  %69 = bitcast i64* %52 to %"class.v8::Object"*
  %70 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %69, i32 1) #9
  %71 = load i32, i32* %21, align 8
  %72 = bitcast i8* %70 to %"class.blink::Node"*
  %73 = icmp sgt i32 %71, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %5, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 1
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 160
  %79 = inttoptr i64 %78 to %"class.v8::Value"*
  br label %85

80:                                               ; preds = %63, %68
  %81 = phi %"class.blink::Node"* [ %67, %63 ], [ %72, %68 ]
  %82 = phi i8* [ %66, %63 ], [ %70, %68 ]
  %83 = bitcast i64** %50 to %"class.v8::Value"**
  %84 = load %"class.v8::Value"*, %"class.v8::Value"** %83, align 8
  br label %85

85:                                               ; preds = %74, %80
  %86 = phi %"class.blink::Node"* [ %72, %74 ], [ %81, %80 ]
  %87 = phi i8* [ %70, %74 ], [ %82, %80 ]
  %88 = phi %"class.v8::Value"* [ %79, %74 ], [ %84, %80 ]
  %89 = bitcast %"class.v8::Value"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, 3
  %92 = icmp eq i64 %91, 1
  br i1 %92, label %93, label %109

93:                                               ; preds = %85
  %94 = add i64 %90, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %90, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  %103 = icmp eq i16 %102, 67
  br i1 %103, label %104, label %109

104:                                              ; preds = %93
  %105 = add i64 %90, 23
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = ashr i32 %107, 1
  switch i32 %108, label %109 [
    i32 5, label %111
    i32 3, label %111
  ]

109:                                              ; preds = %104, %93, %85
  %110 = call %"class.blink::V8UnionStringOrTrustedScript"* @_ZN5blink28V8UnionStringOrTrustedScript6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %88, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %111

111:                                              ; preds = %104, %104, %109
  %112 = phi %"class.blink::V8UnionStringOrTrustedScript"* [ %110, %109 ], [ null, %104 ], [ null, %104 ]
  %113 = load i32, i32* %18, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %111
  %116 = bitcast i8* %87 to void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)***
  %117 = load void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)** %117, i64 33
  %119 = load void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)** %118, align 8
  call void %119(%"class.blink::Node"* %86, %"class.blink::V8UnionStringOrTrustedScript"* %112, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %120

120:                                              ; preds = %111, %115
  %121 = load i8, i8* %46, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %4) #9
  br label %124

124:                                              ; preds = %120, %123
  %125 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %126 = load i64, i64* %125, align 8
  store i64 %126, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  br label %127

127:                                              ; preds = %124, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %128 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %129 = load i64*, i64** %128, align 8
  %130 = icmp eq i64* %129, null
  br i1 %130, label %140, label %131

131:                                              ; preds = %127
  %132 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %133 = bitcast %"class.v8::Isolate"* %132 to %"class.v8::internal::Isolate"*
  %134 = load i64, i64* %129, align 8
  %135 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %133, i64 %134) #9
  %136 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %132) #9
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = bitcast i64* %135 to %"class.v8::Value"*
  %139 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %132, %"class.v8::Value"* %138) #9
  br label %140

140:                                              ; preds = %137, %131, %127
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #9
  br label %156

156:                                              ; preds = %140, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller16InstallConstantsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_19ConstantValueConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node40AppendChildOperationCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.absl::optional", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::CEReactionsScope", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #9
  %7 = bitcast %"class.absl::optional"* %2 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #9
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %31, label %12, !prof !3

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds i64, i64* %14, i64 1
  %16 = bitcast i64* %15 to %"class.v8::Isolate"**
  %17 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %18 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %17) #9
  %19 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %18, i64 0, i32 3
  %20 = bitcast %"class.base::TickClock"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %18, %"class.blink::RuntimeCallStats"** %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %26 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  %27 = bitcast %"class.base::TickClock"** %25 to i64*
  store i64 %21, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %18, i64 0, i32 2, i64 25
  %29 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %18, i64 0, i32 0
  %30 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %29, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %23, %"class.blink::RuntimeCallCounter"* %28, %"class.blink::RuntimeCallTimer"* %30) #9
  store %"class.blink::RuntimeCallTimer"* %23, %"class.blink::RuntimeCallTimer"** %29, align 8
  store i8 1, i8* %6, align 8
  br label %31

31:                                               ; preds = %1, %12
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 1
  %35 = bitcast i64* %34 to %"class.v8::Isolate"**
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  %37 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 56, i1 false)
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %40, align 2
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %42 = bitcast i8** %41 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0)>, <2 x i8*>* %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %36, %"class.v8::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %47 = bitcast %"class.WTF::StringImpl"** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #9
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %49, 1
  br i1 %50, label %51, label %71, !prof !4

51:                                               ; preds = %31
  %52 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %49) #9
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #9
  br label %70

70:                                               ; preds = %51, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %193

71:                                               ; preds = %31
  %72 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %5, i64 0, i32 1
  %74 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 16, i1 false)
  %75 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %76 = bitcast %"class.blink::CEReactionsScope"* %5 to i64*
  store i64 %75, i64* %76, align 8
  store i8 0, i8* %73, align 8
  store %"class.blink::CEReactionsScope"* %5, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %77 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds i64, i64* %78, i64 -1
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i64 %80, -4294967296
  %85 = zext i32 %83 to i64
  %86 = or i64 %84, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load i16, i16* %88, align 2
  switch i16 %89, label %94 [
    i16 1057, label %90
    i16 1056, label %90
    i16 1040, label %90
  ]

90:                                               ; preds = %71, %71, %71
  %91 = add i64 %80, 19
  %92 = inttoptr i64 %91 to %"class.blink::Node"**
  %93 = load %"class.blink::Node"*, %"class.blink::Node"** %92, align 1
  br label %106

94:                                               ; preds = %71
  %95 = bitcast i64* %79 to %"class.v8::Object"*
  %96 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %95, i32 1) #9
  %97 = load i32, i32* %48, align 8
  %98 = bitcast i8* %96 to %"class.blink::Node"*
  %99 = icmp sgt i32 %97, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %94
  %101 = load i64*, i64** %32, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 1
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %110

106:                                              ; preds = %90, %94
  %107 = phi %"class.blink::Node"* [ %93, %90 ], [ %98, %94 ]
  %108 = bitcast i64** %77 to %"class.v8::Value"**
  %109 = load %"class.v8::Value"*, %"class.v8::Value"** %108, align 8
  br label %110

110:                                              ; preds = %100, %106
  %111 = phi %"class.blink::Node"* [ %98, %100 ], [ %107, %106 ]
  %112 = phi %"class.v8::Value"* [ %105, %100 ], [ %109, %106 ]
  %113 = ptrtoint %"class.v8::Isolate"* %36 to i64
  %114 = add i64 %113, 8
  %115 = inttoptr i64 %114 to %"class.blink::V8PerIsolateData"**
  %116 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %115, align 8
  %117 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %116, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %112) #9
  br i1 %117, label %118, label %140

118:                                              ; preds = %110
  %119 = bitcast %"class.v8::Value"* %112 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, -1
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = and i64 %120, -4294967296
  %125 = zext i32 %123 to i64
  %126 = or i64 %124, %125
  %127 = add i64 %126, 7
  %128 = inttoptr i64 %127 to i16*
  %129 = load i16, i16* %128, align 2
  switch i16 %129, label %134 [
    i16 1057, label %130
    i16 1056, label %130
    i16 1040, label %130
  ]

130:                                              ; preds = %118, %118, %118
  %131 = add i64 %120, 19
  %132 = inttoptr i64 %131 to i8**
  %133 = load i8*, i8** %132, align 1
  br label %137

134:                                              ; preds = %118
  %135 = bitcast %"class.v8::Value"* %112 to %"class.v8::Object"*
  %136 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %135, i32 1) #9
  br label %137

137:                                              ; preds = %134, %130
  %138 = phi i8* [ %133, %130 ], [ %136, %134 ]
  %139 = bitcast i8* %138 to %"class.blink::Node"*
  br label %141

140:                                              ; preds = %110
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  br label %141

141:                                              ; preds = %137, %140
  %142 = phi %"class.blink::Node"* [ %139, %137 ], [ null, %140 ]
  %143 = load i32, i32* %45, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %186

145:                                              ; preds = %141
  %146 = call %"class.blink::Node"* @_ZN5blink4Node11appendChildEPS0_RNS_14ExceptionStateE(%"class.blink::Node"* %111, %"class.blink::Node"* %142, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  %147 = load i32, i32* %45, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %186

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %146, i64 0, i32 0, i32 0
  %151 = icmp eq %"class.blink::Node"* %146, null
  %152 = load i64*, i64** %32, align 8
  %153 = getelementptr inbounds i64, i64* %152, i64 3
  br i1 %151, label %154, label %160, !prof !4

154:                                              ; preds = %149
  %155 = getelementptr inbounds i64, i64* %152, i64 1
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 176
  %158 = inttoptr i64 %157 to i64*
  %159 = load i64, i64* %158, align 8
  store i64 %159, i64* %153, align 8
  br label %186

160:                                              ; preds = %149
  %161 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %146, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %162 = load i64*, i64** %161, align 8
  %163 = icmp eq i64* %162, null
  %164 = getelementptr inbounds i64, i64* %152, i64 2
  %165 = select i1 %163, i64* %164, i64* %162, !prof !4
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %153, align 8
  %167 = load i64*, i64** %161, align 8
  %168 = icmp eq i64* %167, null
  br i1 %168, label %169, label %186

169:                                              ; preds = %160
  %170 = load i64*, i64** %77, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 -1
  %172 = bitcast i64* %171 to %"class.v8::Object"*
  %173 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %172) #9
  %174 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %173) #9
  %175 = bitcast %"class.blink::Node"* %146 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %176 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %175, align 8
  %177 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %176, i64 7
  %178 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %177, align 8
  %179 = call %"class.v8::Value"* %178(%"class.blink::ScriptWrappable"* nonnull %150, %"class.blink::ScriptState"* %174) #9
  %180 = icmp eq %"class.v8::Value"* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %169
  %182 = load i64*, i64** %32, align 8
  %183 = getelementptr inbounds i64, i64* %182, i64 3
  %184 = bitcast %"class.v8::Value"* %179 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %183, align 8
  br label %186

186:                                              ; preds = %145, %141, %181, %169, %160, %154
  %187 = load i8, i8* %73, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %190, label %189

189:                                              ; preds = %186
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %5) #9
  br label %190

190:                                              ; preds = %186, %189
  %191 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #9
  br label %193

193:                                              ; preds = %190, %70
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %194 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %195 = load i64*, i64** %194, align 8
  %196 = icmp eq i64* %195, null
  br i1 %196, label %206, label %197

197:                                              ; preds = %193
  %198 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %44, align 8
  %199 = bitcast %"class.v8::Isolate"* %198 to %"class.v8::internal::Isolate"*
  %200 = load i64, i64* %195, align 8
  %201 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %199, i64 %200) #9
  %202 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %198) #9
  br i1 %202, label %206, label %203

203:                                              ; preds = %197
  %204 = bitcast i64* %201 to %"class.v8::Value"*
  %205 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %198, %"class.v8::Value"* %204) #9
  br label %206

206:                                              ; preds = %203, %197, %193
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #9
  br label %222

222:                                              ; preds = %206, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %37) #9
  %223 = load i8, i8* %6, align 8, !range !2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %231, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %227 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %226, align 8
  %228 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %229 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %228) #9
  %230 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %227, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %229, %"class.blink::RuntimeCallTimer"** %230, align 8
  store i8 0, i8* %6, align 8
  br label %231

231:                                              ; preds = %222, %225
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node44AppendChildOperationCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.absl::optional", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::CEReactionsScope", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #9
  %7 = bitcast %"class.absl::optional"* %2 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #9
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %31, label %12, !prof !3

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds i64, i64* %14, i64 1
  %16 = bitcast i64* %15 to %"class.v8::Isolate"**
  %17 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %18 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %17) #9
  %19 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %18, i64 0, i32 3
  %20 = bitcast %"class.base::TickClock"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %18, %"class.blink::RuntimeCallStats"** %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %26 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  %27 = bitcast %"class.base::TickClock"** %25 to i64*
  store i64 %21, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %18, i64 0, i32 2, i64 25
  %29 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %18, i64 0, i32 0
  %30 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %29, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %23, %"class.blink::RuntimeCallCounter"* %28, %"class.blink::RuntimeCallTimer"* %30) #9
  store %"class.blink::RuntimeCallTimer"* %23, %"class.blink::RuntimeCallTimer"** %29, align 8
  store i8 1, i8* %6, align 8
  br label %31

31:                                               ; preds = %1, %12
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 1
  %35 = bitcast i64* %34 to %"class.v8::Isolate"**
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  %37 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 56, i1 false)
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %40, align 2
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %42 = bitcast i8** %41 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0)>, <2 x i8*>* %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %36, %"class.v8::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %47 = bitcast %"class.WTF::StringImpl"** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #9
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %49, 1
  br i1 %50, label %51, label %71, !prof !4

51:                                               ; preds = %31
  %52 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %49) #9
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #9
  br label %70

70:                                               ; preds = %51, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %193

71:                                               ; preds = %31
  %72 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %5, i64 0, i32 1
  %74 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 16, i1 false)
  %75 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %76 = bitcast %"class.blink::CEReactionsScope"* %5 to i64*
  store i64 %75, i64* %76, align 8
  store i8 0, i8* %73, align 8
  store %"class.blink::CEReactionsScope"* %5, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %77 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds i64, i64* %78, i64 -1
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i64 %80, -4294967296
  %85 = zext i32 %83 to i64
  %86 = or i64 %84, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load i16, i16* %88, align 2
  switch i16 %89, label %95 [
    i16 1057, label %90
    i16 1056, label %90
    i16 1040, label %90
  ]

90:                                               ; preds = %71, %71, %71
  %91 = add i64 %80, 19
  %92 = inttoptr i64 %91 to i8**
  %93 = load i8*, i8** %92, align 1
  %94 = bitcast i8* %93 to %"class.blink::Node"*
  br label %107

95:                                               ; preds = %71
  %96 = bitcast i64* %79 to %"class.v8::Object"*
  %97 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %96, i32 1) #9
  %98 = load i32, i32* %48, align 8
  %99 = bitcast i8* %97 to %"class.blink::Node"*
  %100 = icmp sgt i32 %98, 0
  br i1 %100, label %107, label %101

101:                                              ; preds = %95
  %102 = load i64*, i64** %32, align 8
  %103 = getelementptr inbounds i64, i64* %102, i64 1
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 160
  %106 = inttoptr i64 %105 to %"class.v8::Value"*
  br label %112

107:                                              ; preds = %90, %95
  %108 = phi %"class.blink::Node"* [ %94, %90 ], [ %99, %95 ]
  %109 = phi i8* [ %93, %90 ], [ %97, %95 ]
  %110 = bitcast i64** %77 to %"class.v8::Value"**
  %111 = load %"class.v8::Value"*, %"class.v8::Value"** %110, align 8
  br label %112

112:                                              ; preds = %101, %107
  %113 = phi %"class.blink::Node"* [ %99, %101 ], [ %108, %107 ]
  %114 = phi i8* [ %97, %101 ], [ %109, %107 ]
  %115 = phi %"class.v8::Value"* [ %106, %101 ], [ %111, %107 ]
  %116 = ptrtoint %"class.v8::Isolate"* %36 to i64
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %117 to %"class.blink::V8PerIsolateData"**
  %119 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %118, align 8
  %120 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %119, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %115) #9
  br i1 %120, label %121, label %143

121:                                              ; preds = %112
  %122 = bitcast %"class.v8::Value"* %115 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, -1
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i64 %123, -4294967296
  %128 = zext i32 %126 to i64
  %129 = or i64 %127, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load i16, i16* %131, align 2
  switch i16 %132, label %137 [
    i16 1057, label %133
    i16 1056, label %133
    i16 1040, label %133
  ]

133:                                              ; preds = %121, %121, %121
  %134 = add i64 %123, 19
  %135 = inttoptr i64 %134 to i8**
  %136 = load i8*, i8** %135, align 1
  br label %140

137:                                              ; preds = %121
  %138 = bitcast %"class.v8::Value"* %115 to %"class.v8::Object"*
  %139 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %138, i32 1) #9
  br label %140

140:                                              ; preds = %137, %133
  %141 = phi i8* [ %136, %133 ], [ %139, %137 ]
  %142 = bitcast i8* %141 to %"class.blink::Node"*
  br label %144

143:                                              ; preds = %112
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  br label %144

144:                                              ; preds = %140, %143
  %145 = phi %"class.blink::Node"* [ %142, %140 ], [ null, %143 ]
  %146 = load i32, i32* %45, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %186

148:                                              ; preds = %144
  %149 = call %"class.blink::Node"* @_ZN5blink4Node11appendChildEPS0_RNS_14ExceptionStateE(%"class.blink::Node"* %113, %"class.blink::Node"* %145, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  %150 = load i32, i32* %45, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %186

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 0, i32 0, i32 0
  %154 = icmp eq %"class.blink::Node"* %149, null
  %155 = load i64*, i64** %32, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 3
  br i1 %154, label %157, label %163, !prof !4

157:                                              ; preds = %152
  %158 = getelementptr inbounds i64, i64* %155, i64 1
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 176
  %161 = inttoptr i64 %160 to i64*
  %162 = load i64, i64* %161, align 8
  store i64 %162, i64* %156, align 8
  br label %186

163:                                              ; preds = %152
  %164 = bitcast i8* %114 to %"class.blink::ScriptWrappable"*
  %165 = load i64*, i64** %77, align 8
  %166 = getelementptr inbounds i64, i64* %165, i64 -1
  %167 = bitcast i64* %166 to %"class.v8::Object"*
  %168 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %156, %"class.blink::ScriptWrappable"* nonnull %153, %"class.v8::Object"* %167, %"class.blink::ScriptWrappable"* %164) #9
  br i1 %168, label %186, label %169

169:                                              ; preds = %163
  %170 = load i64*, i64** %77, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 -1
  %172 = bitcast i64* %171 to %"class.v8::Object"*
  %173 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %172) #9
  %174 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %173) #9
  %175 = bitcast %"class.blink::Node"* %149 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %176 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %175, align 8
  %177 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %176, i64 7
  %178 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %177, align 8
  %179 = call %"class.v8::Value"* %178(%"class.blink::ScriptWrappable"* nonnull %153, %"class.blink::ScriptState"* %174) #9
  %180 = icmp eq %"class.v8::Value"* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %169
  %182 = load i64*, i64** %32, align 8
  %183 = getelementptr inbounds i64, i64* %182, i64 3
  %184 = bitcast %"class.v8::Value"* %179 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %183, align 8
  br label %186

186:                                              ; preds = %148, %144, %181, %169, %163, %157
  %187 = load i8, i8* %73, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %190, label %189

189:                                              ; preds = %186
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %5) #9
  br label %190

190:                                              ; preds = %186, %189
  %191 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #9
  br label %193

193:                                              ; preds = %190, %70
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %194 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %195 = load i64*, i64** %194, align 8
  %196 = icmp eq i64* %195, null
  br i1 %196, label %206, label %197

197:                                              ; preds = %193
  %198 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %44, align 8
  %199 = bitcast %"class.v8::Isolate"* %198 to %"class.v8::internal::Isolate"*
  %200 = load i64, i64* %195, align 8
  %201 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %199, i64 %200) #9
  %202 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %198) #9
  br i1 %202, label %206, label %203

203:                                              ; preds = %197
  %204 = bitcast i64* %201 to %"class.v8::Value"*
  %205 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %198, %"class.v8::Value"* %204) #9
  br label %206

206:                                              ; preds = %203, %197, %193
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #9
  br label %222

222:                                              ; preds = %206, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %37) #9
  %223 = load i8, i8* %6, align 8, !range !2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %231, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %227 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %226, align 8
  %228 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %229 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %228) #9
  %230 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %227, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %229, %"class.blink::RuntimeCallTimer"** %230, align 8
  store i8 0, i8* %6, align 8
  br label %231

231:                                              ; preds = %222, %225
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node26CloneNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %1, %1, %1
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %1
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #9
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = bitcast i8* %46 to %"class.blink::Node"*
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %45
  %52 = load i64*, i64** %4, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 160
  %56 = inttoptr i64 %55 to %"class.v8::Value"*
  br label %60

57:                                               ; preds = %45
  %58 = bitcast i64** %25 to %"class.v8::Value"**
  %59 = load %"class.v8::Value"*, %"class.v8::Value"** %58, align 8
  br label %60

60:                                               ; preds = %51, %57
  %61 = phi %"class.v8::Value"* [ %56, %51 ], [ %59, %57 ]
  %62 = bitcast %"class.v8::Value"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 3
  %65 = icmp eq i64 %64, 1
  br i1 %65, label %66, label %83

66:                                               ; preds = %60
  %67 = add i64 %63, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = and i64 %63, -4294967296
  %71 = zext i32 %69 to i64
  %72 = or i64 %70, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load i16, i16* %74, align 2
  %76 = icmp eq i16 %75, 67
  br i1 %76, label %77, label %83

77:                                               ; preds = %66
  %78 = add i64 %63, 23
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, -2
  %82 = icmp eq i32 %81, 10
  br i1 %82, label %105, label %83

83:                                               ; preds = %66, %60, %77
  br i1 %50, label %90, label %84

84:                                               ; preds = %83
  %85 = load i64*, i64** %4, align 8
  %86 = getelementptr inbounds i64, i64* %85, i64 1
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, 160
  %89 = inttoptr i64 %88 to %"class.v8::Value"*
  br label %93

90:                                               ; preds = %83
  %91 = bitcast i64** %25 to %"class.v8::Value"**
  %92 = load %"class.v8::Value"*, %"class.v8::Value"** %91, align 8
  br label %93

93:                                               ; preds = %84, %90
  %94 = phi %"class.v8::Value"* [ %89, %84 ], [ %92, %90 ]
  %95 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %94) #9
  br i1 %95, label %96, label %99, !prof !3

96:                                               ; preds = %93
  %97 = bitcast %"class.v8::Value"* %94 to %"class.v8::Boolean"*
  %98 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %97) #9
  br label %101

99:                                               ; preds = %93
  %100 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %94, %"class.v8::Isolate"* %8) #9
  br label %101

101:                                              ; preds = %96, %99
  %102 = phi i1 [ %98, %96 ], [ %100, %99 ]
  %103 = load i32, i32* %17, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %144

105:                                              ; preds = %101, %77
  %106 = phi i1 [ %102, %101 ], [ false, %77 ]
  %107 = call %"class.blink::Node"* @_ZNK5blink4Node9cloneNodeEbRNS_14ExceptionStateE(%"class.blink::Node"* %47, i1 zeroext %106, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %144

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 0, i32 0
  %112 = icmp eq %"class.blink::Node"* %107, null
  %113 = load i64*, i64** %4, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 3
  br i1 %112, label %115, label %121, !prof !4

115:                                              ; preds = %110
  %116 = getelementptr inbounds i64, i64* %113, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 176
  %119 = inttoptr i64 %118 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %114, align 8
  br label %144

121:                                              ; preds = %110
  %122 = bitcast i8* %46 to %"class.blink::ScriptWrappable"*
  %123 = load i64*, i64** %25, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 -1
  %125 = bitcast i64* %124 to %"class.v8::Object"*
  %126 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %114, %"class.blink::ScriptWrappable"* nonnull %111, %"class.v8::Object"* %125, %"class.blink::ScriptWrappable"* %122) #9
  br i1 %126, label %144, label %127

127:                                              ; preds = %121
  %128 = load i64*, i64** %25, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 -1
  %130 = bitcast i64* %129 to %"class.v8::Object"*
  %131 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %130) #9
  %132 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %131) #9
  %133 = bitcast %"class.blink::Node"* %107 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %134 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %133, align 8
  %135 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %134, i64 7
  %136 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %135, align 8
  %137 = call %"class.v8::Value"* %136(%"class.blink::ScriptWrappable"* nonnull %111, %"class.blink::ScriptState"* %132) #9
  %138 = icmp eq %"class.v8::Value"* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %127
  %140 = load i64*, i64** %4, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 3
  %142 = bitcast %"class.v8::Value"* %137 to i64*
  %143 = load i64, i64* %142, align 8
  store i64 %143, i64* %141, align 8
  br label %144

144:                                              ; preds = %105, %101, %139, %127, %121, %115
  %145 = load i8, i8* %21, align 8, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #9
  br label %148

148:                                              ; preds = %144, %147
  %149 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %151 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %152 = load i64*, i64** %151, align 8
  %153 = icmp eq i64* %152, null
  br i1 %153, label %163, label %154

154:                                              ; preds = %148
  %155 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %156 = bitcast %"class.v8::Isolate"* %155 to %"class.v8::internal::Isolate"*
  %157 = load i64, i64* %152, align 8
  %158 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %156, i64 %157) #9
  %159 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %155) #9
  br i1 %159, label %163, label %160

160:                                              ; preds = %154
  %161 = bitcast i64* %158 to %"class.v8::Value"*
  %162 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %155, %"class.v8::Value"* %161) #9
  br label %163

163:                                              ; preds = %160, %154, %148
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #9
  br label %179

179:                                              ; preds = %163, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node40CompareDocumentPositionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %117

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::Node"**
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::Node"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::Node"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::Node"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %79) #9
  br i1 %84, label %85, label %107

85:                                               ; preds = %77
  %86 = bitcast %"class.v8::Value"* %79 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %87, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %85, %85, %85
  %98 = add i64 %87, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %85
  %102 = bitcast %"class.v8::Value"* %79 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::Node"*
  br label %110

107:                                              ; preds = %77
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %108 = load i32, i32* %17, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %117

110:                                              ; preds = %104, %107
  %111 = phi %"class.blink::Node"* [ %106, %104 ], [ null, %107 ]
  %112 = call zeroext i16 @_ZNK5blink4Node23compareDocumentPositionEPKS0_NS0_20ShadowTreesTreatmentE(%"class.blink::Node"* %78, %"class.blink::Node"* %111, i32 0) #9
  %113 = zext i16 %112 to i64
  %114 = load i64*, i64** %4, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 3
  %116 = shl nuw nsw i64 %113, 1
  store i64 %116, i64* %115, align 8
  br label %117

117:                                              ; preds = %107, %110, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %118 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = icmp eq i64* %119, null
  br i1 %120, label %130, label %121

121:                                              ; preds = %117
  %122 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %123 = bitcast %"class.v8::Isolate"* %122 to %"class.v8::internal::Isolate"*
  %124 = load i64, i64* %119, align 8
  %125 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %123, i64 %124) #9
  %126 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %122) #9
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = bitcast i64* %125 to %"class.v8::Value"*
  %129 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %122, %"class.v8::Value"* %128) #9
  br label %130

130:                                              ; preds = %127, %121, %117
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #9
  br label %146

146:                                              ; preds = %130, %142, %145
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node25ContainsOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %140

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::Node"**
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::Node"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::Node"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::Node"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %79) #9
  %85 = bitcast %"class.v8::Value"* %79 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %77
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %79 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::Node"*
  br label %129

107:                                              ; preds = %77
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %140

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::Node"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %78, %"class.blink::Node"* %130) #9
  %132 = load i64*, i64** %4, align 8
  %133 = getelementptr inbounds i64, i64* %132, i64 3
  %134 = getelementptr inbounds i64, i64* %132, i64 1
  %135 = load i64, i64* %134, align 8
  %136 = select i1 %131, i64 184, i64 192
  %137 = add i64 %135, %136
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %133, align 8
  br label %140

140:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %141 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = icmp eq i64* %142, null
  br i1 %143, label %153, label %144

144:                                              ; preds = %140
  %145 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %146 = bitcast %"class.v8::Isolate"* %145 to %"class.v8::internal::Isolate"*
  %147 = load i64, i64* %142, align 8
  %148 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %146, i64 %147) #9
  %149 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %145) #9
  br i1 %149, label %153, label %150

150:                                              ; preds = %144
  %151 = bitcast i64* %148 to %"class.v8::Value"*
  %152 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %145, %"class.v8::Value"* %151) #9
  br label %153

153:                                              ; preds = %150, %144, %140
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #9
  br label %169

169:                                              ; preds = %153, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node28GetRootNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #9
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #9
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 1467) #9
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #9
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::Node"*
  %43 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %40
  %47 = load i64*, i64** %3, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 160
  %51 = inttoptr i64 %50 to %"class.v8::Value"*
  br label %55

52:                                               ; preds = %40
  %53 = bitcast i64** %20 to %"class.v8::Value"**
  %54 = load %"class.v8::Value"*, %"class.v8::Value"** %53, align 8
  br label %55

55:                                               ; preds = %46, %52
  %56 = phi %"class.v8::Value"* [ %51, %46 ], [ %54, %52 ]
  %57 = bitcast %"class.v8::Value"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 3
  %60 = icmp eq i64 %59, 1
  br i1 %60, label %61, label %85

61:                                               ; preds = %55
  %62 = add i64 %58, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i64 %58, -4294967296
  %66 = zext i32 %64 to i64
  %67 = or i64 %65, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = icmp eq i16 %70, 67
  br i1 %71, label %72, label %85

72:                                               ; preds = %61
  %73 = add i64 %58, 23
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, -2
  %77 = icmp eq i32 %76, 10
  br i1 %77, label %78, label %85

78:                                               ; preds = %72
  %79 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 16) #9
  %80 = bitcast i8* %79 to %"class.blink::GetRootNodeOptions"*
  tail call void @_ZN5blink18GetRootNodeOptionsC1Ev(%"class.blink::GetRootNodeOptions"* %80) #9
  %81 = getelementptr inbounds i8, i8* %79, i64 -4
  %82 = bitcast i8* %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = or i16 %83, 1
  store atomic i16 %84, i16* %82 release, align 2
  br label %140

85:                                               ; preds = %61, %55, %72
  %86 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %86) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 56, i1 false)
  %87 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %88, align 8
  %89 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %89, align 2
  %90 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %91 = bitcast i8** %90 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0)>, <2 x i8*>* %91, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %92, align 8
  %93 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %93, align 8
  %94 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %96 = bitcast %"class.WTF::StringImpl"** %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #9
  br i1 %45, label %103, label %97

97:                                               ; preds = %85
  %98 = load i64*, i64** %3, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 160
  %102 = inttoptr i64 %101 to %"class.v8::Value"*
  br label %106

103:                                              ; preds = %85
  %104 = bitcast i64** %20 to %"class.v8::Value"**
  %105 = load %"class.v8::Value"*, %"class.v8::Value"** %104, align 8
  br label %106

106:                                              ; preds = %97, %103
  %107 = phi %"class.v8::Value"* [ %102, %97 ], [ %105, %103 ]
  %108 = call %"class.blink::GetRootNodeOptions"* @_ZN5blink17NativeValueTraitsINS_18GetRootNodeOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %7, %"class.v8::Value"* %107, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %109 = load i32, i32* %94, align 8
  %110 = icmp eq i32 %109, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %111 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %112, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %106
  %115 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8
  %116 = bitcast %"class.v8::Isolate"* %115 to %"class.v8::internal::Isolate"*
  %117 = load i64, i64* %112, align 8
  %118 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %116, i64 %117) #9
  %119 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %115) #9
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = bitcast i64* %118 to %"class.v8::Value"*
  %122 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %115, %"class.v8::Value"* %121) #9
  br label %123

123:                                              ; preds = %120, %114, %106
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %139

139:                                              ; preds = %123, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %86) #9
  br i1 %110, label %140, label %176

140:                                              ; preds = %139, %78
  %141 = phi %"class.blink::GetRootNodeOptions"* [ %80, %78 ], [ %108, %139 ]
  %142 = call %"class.blink::Node"* @_ZNK5blink4Node11getRootNodeEPKNS_18GetRootNodeOptionsE(%"class.blink::Node"* %42, %"class.blink::GetRootNodeOptions"* %141) #9
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %142, i64 0, i32 0, i32 0
  %144 = icmp eq %"class.blink::Node"* %142, null
  %145 = load i64*, i64** %3, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 3
  br i1 %144, label %147, label %153, !prof !4

147:                                              ; preds = %140
  %148 = getelementptr inbounds i64, i64* %145, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 176
  %151 = inttoptr i64 %150 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %146, align 8
  br label %176

153:                                              ; preds = %140
  %154 = bitcast i8* %41 to %"class.blink::ScriptWrappable"*
  %155 = load i64*, i64** %20, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 -1
  %157 = bitcast i64* %156 to %"class.v8::Object"*
  %158 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %146, %"class.blink::ScriptWrappable"* nonnull %143, %"class.v8::Object"* %157, %"class.blink::ScriptWrappable"* %154) #9
  br i1 %158, label %176, label %159

159:                                              ; preds = %153
  %160 = load i64*, i64** %20, align 8
  %161 = getelementptr inbounds i64, i64* %160, i64 -1
  %162 = bitcast i64* %161 to %"class.v8::Object"*
  %163 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %162) #9
  %164 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %163) #9
  %165 = bitcast %"class.blink::Node"* %142 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %166 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %165, align 8
  %167 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %166, i64 7
  %168 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %167, align 8
  %169 = call %"class.v8::Value"* %168(%"class.blink::ScriptWrappable"* nonnull %143, %"class.blink::ScriptState"* %164) #9
  %170 = icmp eq %"class.v8::Value"* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %159
  %172 = load i64*, i64** %3, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 3
  %174 = bitcast %"class.v8::Value"* %169 to i64*
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %173, align 8
  br label %176

176:                                              ; preds = %171, %159, %153, %147, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node30HasChildNodesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #9
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = icmp eq i8* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds i8, i8* %23, i64 64
  %33 = bitcast i8* %32 to %"class.blink::Node"**
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  %36 = select i1 %35, i64 192, i64 184
  br label %37

37:                                               ; preds = %25, %22, %31
  %38 = phi i64 [ %36, %31 ], [ 192, %22 ], [ 192, %25 ]
  %39 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 1
  %42 = getelementptr inbounds i64, i64* %40, i64 3
  %43 = load i64, i64* %41, align 8
  %44 = add i64 %43, %38
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %42, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node41InsertBeforeOperationCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CEReactionsScope", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !4

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %229

44:                                               ; preds = %1
  %45 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %4, i64 0, i32 1
  %47 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  %48 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %49 = bitcast %"class.blink::CEReactionsScope"* %4 to i64*
  store i64 %48, i64* %49, align 8
  store i8 0, i8* %46, align 8
  store %"class.blink::CEReactionsScope"* %4, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 -1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i64 %53, -4294967296
  %58 = zext i32 %56 to i64
  %59 = or i64 %57, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load i16, i16* %61, align 2
  switch i16 %62, label %67 [
    i16 1057, label %63
    i16 1056, label %63
    i16 1040, label %63
  ]

63:                                               ; preds = %44, %44, %44
  %64 = add i64 %53, 19
  %65 = inttoptr i64 %64 to %"class.blink::Node"**
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 1
  br label %79

67:                                               ; preds = %44
  %68 = bitcast i64* %52 to %"class.v8::Object"*
  %69 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %68, i32 1) #9
  %70 = load i32, i32* %21, align 8
  %71 = bitcast i8* %69 to %"class.blink::Node"*
  %72 = icmp sgt i32 %70, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %67
  %74 = load i64*, i64** %5, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 160
  %78 = inttoptr i64 %77 to %"class.v8::Value"*
  br label %83

79:                                               ; preds = %63, %67
  %80 = phi %"class.blink::Node"* [ %66, %63 ], [ %71, %67 ]
  %81 = bitcast i64** %50 to %"class.v8::Value"**
  %82 = load %"class.v8::Value"*, %"class.v8::Value"** %81, align 8
  br label %83

83:                                               ; preds = %73, %79
  %84 = phi %"class.blink::Node"* [ %71, %73 ], [ %80, %79 ]
  %85 = phi %"class.v8::Value"* [ %78, %73 ], [ %82, %79 ]
  %86 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %87 = add i64 %86, 8
  %88 = inttoptr i64 %87 to %"class.blink::V8PerIsolateData"**
  %89 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %88, align 8
  %90 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %89, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %85) #9
  br i1 %90, label %91, label %113

91:                                               ; preds = %83
  %92 = bitcast %"class.v8::Value"* %85 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %107 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %91, %91, %91
  %104 = add i64 %93, 19
  %105 = inttoptr i64 %104 to i8**
  %106 = load i8*, i8** %105, align 1
  br label %110

107:                                              ; preds = %91
  %108 = bitcast %"class.v8::Value"* %85 to %"class.v8::Object"*
  %109 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %108, i32 1) #9
  br label %110

110:                                              ; preds = %107, %103
  %111 = phi i8* [ %106, %103 ], [ %109, %107 ]
  %112 = bitcast i8* %111 to %"class.blink::Node"*
  br label %114

113:                                              ; preds = %83
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %110, %113
  %115 = phi %"class.blink::Node"* [ %112, %110 ], [ null, %113 ]
  %116 = load i32, i32* %18, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %222

118:                                              ; preds = %114
  %119 = load i32, i32* %21, align 8
  %120 = icmp sgt i32 %119, 1
  br i1 %120, label %127, label %121

121:                                              ; preds = %118
  %122 = load i64*, i64** %5, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 160
  %126 = inttoptr i64 %125 to %"class.v8::Value"*
  br label %131

127:                                              ; preds = %118
  %128 = load i64*, i64** %50, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 1
  %130 = bitcast i64* %129 to %"class.v8::Value"*
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi %"class.v8::Value"* [ %126, %121 ], [ %130, %127 ]
  %133 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %88, align 8
  %134 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %133, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %132) #9
  %135 = bitcast %"class.v8::Value"* %132 to i64*
  %136 = load i64, i64* %135, align 8
  br i1 %134, label %137, label %157

137:                                              ; preds = %131
  %138 = add i64 %136, -1
  %139 = inttoptr i64 %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = and i64 %136, -4294967296
  %142 = zext i32 %140 to i64
  %143 = or i64 %141, %142
  %144 = add i64 %143, 7
  %145 = inttoptr i64 %144 to i16*
  %146 = load i16, i16* %145, align 2
  switch i16 %146, label %151 [
    i16 1057, label %147
    i16 1056, label %147
    i16 1040, label %147
  ]

147:                                              ; preds = %137, %137, %137
  %148 = add i64 %136, 19
  %149 = inttoptr i64 %148 to i8**
  %150 = load i8*, i8** %149, align 1
  br label %154

151:                                              ; preds = %137
  %152 = bitcast %"class.v8::Value"* %132 to %"class.v8::Object"*
  %153 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %152, i32 1) #9
  br label %154

154:                                              ; preds = %151, %147
  %155 = phi i8* [ %150, %147 ], [ %153, %151 ]
  %156 = bitcast i8* %155 to %"class.blink::Node"*
  br label %177

157:                                              ; preds = %131
  %158 = and i64 %136, 3
  %159 = icmp eq i64 %158, 1
  br i1 %159, label %160, label %176

160:                                              ; preds = %157
  %161 = add i64 %136, -1
  %162 = inttoptr i64 %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = and i64 %136, -4294967296
  %165 = zext i32 %163 to i64
  %166 = or i64 %164, %165
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i16*
  %169 = load i16, i16* %168, align 2
  %170 = icmp eq i16 %169, 67
  br i1 %170, label %171, label %176

171:                                              ; preds = %160
  %172 = add i64 %136, 23
  %173 = inttoptr i64 %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = ashr i32 %174, 1
  switch i32 %175, label %176 [
    i32 5, label %177
    i32 3, label %177
  ]

176:                                              ; preds = %171, %160, %157
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %177

177:                                              ; preds = %154, %171, %171, %176
  %178 = phi %"class.blink::Node"* [ %156, %154 ], [ null, %176 ], [ null, %171 ], [ null, %171 ]
  %179 = load i32, i32* %18, align 8
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %222

181:                                              ; preds = %177
  %182 = call %"class.blink::Node"* @_ZN5blink4Node12insertBeforeEPS0_S1_RNS_14ExceptionStateE(%"class.blink::Node"* %84, %"class.blink::Node"* %115, %"class.blink::Node"* %178, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %183 = load i32, i32* %18, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %222

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %182, i64 0, i32 0, i32 0
  %187 = icmp eq %"class.blink::Node"* %182, null
  %188 = load i64*, i64** %5, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 3
  br i1 %187, label %190, label %196, !prof !4

190:                                              ; preds = %185
  %191 = getelementptr inbounds i64, i64* %188, i64 1
  %192 = load i64, i64* %191, align 8
  %193 = add i64 %192, 176
  %194 = inttoptr i64 %193 to i64*
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %189, align 8
  br label %222

196:                                              ; preds = %185
  %197 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %182, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %198 = load i64*, i64** %197, align 8
  %199 = icmp eq i64* %198, null
  %200 = getelementptr inbounds i64, i64* %188, i64 2
  %201 = select i1 %199, i64* %200, i64* %198, !prof !4
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %189, align 8
  %203 = load i64*, i64** %197, align 8
  %204 = icmp eq i64* %203, null
  br i1 %204, label %205, label %222

205:                                              ; preds = %196
  %206 = load i64*, i64** %50, align 8
  %207 = getelementptr inbounds i64, i64* %206, i64 -1
  %208 = bitcast i64* %207 to %"class.v8::Object"*
  %209 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %208) #9
  %210 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %209) #9
  %211 = bitcast %"class.blink::Node"* %182 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %212 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %211, align 8
  %213 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %212, i64 7
  %214 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %213, align 8
  %215 = call %"class.v8::Value"* %214(%"class.blink::ScriptWrappable"* nonnull %186, %"class.blink::ScriptState"* %210) #9
  %216 = icmp eq %"class.v8::Value"* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %205
  %218 = load i64*, i64** %5, align 8
  %219 = getelementptr inbounds i64, i64* %218, i64 3
  %220 = bitcast %"class.v8::Value"* %215 to i64*
  %221 = load i64, i64* %220, align 8
  store i64 %221, i64* %219, align 8
  br label %222

222:                                              ; preds = %181, %177, %114, %217, %205, %196, %190
  %223 = load i8, i8* %46, align 8, !range !2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %226, label %225

225:                                              ; preds = %222
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %4) #9
  br label %226

226:                                              ; preds = %222, %225
  %227 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %228 = load i64, i64* %227, align 8
  store i64 %228, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  br label %229

229:                                              ; preds = %226, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %230 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %231 = load i64*, i64** %230, align 8
  %232 = icmp eq i64* %231, null
  br i1 %232, label %242, label %233

233:                                              ; preds = %229
  %234 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %235 = bitcast %"class.v8::Isolate"* %234 to %"class.v8::internal::Isolate"*
  %236 = load i64, i64* %231, align 8
  %237 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %235, i64 %236) #9
  %238 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %234) #9
  br i1 %238, label %242, label %239

239:                                              ; preds = %233
  %240 = bitcast i64* %237 to %"class.v8::Value"*
  %241 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %234, %"class.v8::Value"* %240) #9
  br label %242

242:                                              ; preds = %239, %233, %229
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #9
  br label %258

258:                                              ; preds = %242, %254, %257
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node45InsertBeforeOperationCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CEReactionsScope", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !4

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %229

44:                                               ; preds = %1
  %45 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %4, i64 0, i32 1
  %47 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  %48 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %49 = bitcast %"class.blink::CEReactionsScope"* %4 to i64*
  store i64 %48, i64* %49, align 8
  store i8 0, i8* %46, align 8
  store %"class.blink::CEReactionsScope"* %4, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 -1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i64 %53, -4294967296
  %58 = zext i32 %56 to i64
  %59 = or i64 %57, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load i16, i16* %61, align 2
  switch i16 %62, label %68 [
    i16 1057, label %63
    i16 1056, label %63
    i16 1040, label %63
  ]

63:                                               ; preds = %44, %44, %44
  %64 = add i64 %53, 19
  %65 = inttoptr i64 %64 to i8**
  %66 = load i8*, i8** %65, align 1
  %67 = bitcast i8* %66 to %"class.blink::Node"*
  br label %80

68:                                               ; preds = %44
  %69 = bitcast i64* %52 to %"class.v8::Object"*
  %70 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %69, i32 1) #9
  %71 = load i32, i32* %21, align 8
  %72 = bitcast i8* %70 to %"class.blink::Node"*
  %73 = icmp sgt i32 %71, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %5, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 1
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 160
  %79 = inttoptr i64 %78 to %"class.v8::Value"*
  br label %85

80:                                               ; preds = %63, %68
  %81 = phi %"class.blink::Node"* [ %67, %63 ], [ %72, %68 ]
  %82 = phi i8* [ %66, %63 ], [ %70, %68 ]
  %83 = bitcast i64** %50 to %"class.v8::Value"**
  %84 = load %"class.v8::Value"*, %"class.v8::Value"** %83, align 8
  br label %85

85:                                               ; preds = %74, %80
  %86 = phi %"class.blink::Node"* [ %72, %74 ], [ %81, %80 ]
  %87 = phi i8* [ %70, %74 ], [ %82, %80 ]
  %88 = phi %"class.v8::Value"* [ %79, %74 ], [ %84, %80 ]
  %89 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %90 = add i64 %89, 8
  %91 = inttoptr i64 %90 to %"class.blink::V8PerIsolateData"**
  %92 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %91, align 8
  %93 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %92, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %88) #9
  br i1 %93, label %94, label %116

94:                                               ; preds = %85
  %95 = bitcast %"class.v8::Value"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = and i64 %96, -4294967296
  %101 = zext i32 %99 to i64
  %102 = or i64 %100, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load i16, i16* %104, align 2
  switch i16 %105, label %110 [
    i16 1057, label %106
    i16 1056, label %106
    i16 1040, label %106
  ]

106:                                              ; preds = %94, %94, %94
  %107 = add i64 %96, 19
  %108 = inttoptr i64 %107 to i8**
  %109 = load i8*, i8** %108, align 1
  br label %113

110:                                              ; preds = %94
  %111 = bitcast %"class.v8::Value"* %88 to %"class.v8::Object"*
  %112 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %111, i32 1) #9
  br label %113

113:                                              ; preds = %110, %106
  %114 = phi i8* [ %109, %106 ], [ %112, %110 ]
  %115 = bitcast i8* %114 to %"class.blink::Node"*
  br label %117

116:                                              ; preds = %85
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %117

117:                                              ; preds = %113, %116
  %118 = phi %"class.blink::Node"* [ %115, %113 ], [ null, %116 ]
  %119 = load i32, i32* %18, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %222

121:                                              ; preds = %117
  %122 = load i32, i32* %21, align 8
  %123 = icmp sgt i32 %122, 1
  br i1 %123, label %130, label %124

124:                                              ; preds = %121
  %125 = load i64*, i64** %5, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 160
  %129 = inttoptr i64 %128 to %"class.v8::Value"*
  br label %134

130:                                              ; preds = %121
  %131 = load i64*, i64** %50, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 1
  %133 = bitcast i64* %132 to %"class.v8::Value"*
  br label %134

134:                                              ; preds = %124, %130
  %135 = phi %"class.v8::Value"* [ %129, %124 ], [ %133, %130 ]
  %136 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %91, align 8
  %137 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %136, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %135) #9
  %138 = bitcast %"class.v8::Value"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  br i1 %137, label %140, label %160

140:                                              ; preds = %134
  %141 = add i64 %139, -1
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = and i64 %139, -4294967296
  %145 = zext i32 %143 to i64
  %146 = or i64 %144, %145
  %147 = add i64 %146, 7
  %148 = inttoptr i64 %147 to i16*
  %149 = load i16, i16* %148, align 2
  switch i16 %149, label %154 [
    i16 1057, label %150
    i16 1056, label %150
    i16 1040, label %150
  ]

150:                                              ; preds = %140, %140, %140
  %151 = add i64 %139, 19
  %152 = inttoptr i64 %151 to i8**
  %153 = load i8*, i8** %152, align 1
  br label %157

154:                                              ; preds = %140
  %155 = bitcast %"class.v8::Value"* %135 to %"class.v8::Object"*
  %156 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %155, i32 1) #9
  br label %157

157:                                              ; preds = %154, %150
  %158 = phi i8* [ %153, %150 ], [ %156, %154 ]
  %159 = bitcast i8* %158 to %"class.blink::Node"*
  br label %180

160:                                              ; preds = %134
  %161 = and i64 %139, 3
  %162 = icmp eq i64 %161, 1
  br i1 %162, label %163, label %179

163:                                              ; preds = %160
  %164 = add i64 %139, -1
  %165 = inttoptr i64 %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = and i64 %139, -4294967296
  %168 = zext i32 %166 to i64
  %169 = or i64 %167, %168
  %170 = add i64 %169, 7
  %171 = inttoptr i64 %170 to i16*
  %172 = load i16, i16* %171, align 2
  %173 = icmp eq i16 %172, 67
  br i1 %173, label %174, label %179

174:                                              ; preds = %163
  %175 = add i64 %139, 23
  %176 = inttoptr i64 %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = ashr i32 %177, 1
  switch i32 %178, label %179 [
    i32 5, label %180
    i32 3, label %180
  ]

179:                                              ; preds = %174, %163, %160
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %180

180:                                              ; preds = %157, %174, %174, %179
  %181 = phi %"class.blink::Node"* [ %159, %157 ], [ null, %179 ], [ null, %174 ], [ null, %174 ]
  %182 = load i32, i32* %18, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %222

184:                                              ; preds = %180
  %185 = call %"class.blink::Node"* @_ZN5blink4Node12insertBeforeEPS0_S1_RNS_14ExceptionStateE(%"class.blink::Node"* %86, %"class.blink::Node"* %118, %"class.blink::Node"* %181, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %186 = load i32, i32* %18, align 8
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %222

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %185, i64 0, i32 0, i32 0
  %190 = icmp eq %"class.blink::Node"* %185, null
  %191 = load i64*, i64** %5, align 8
  %192 = getelementptr inbounds i64, i64* %191, i64 3
  br i1 %190, label %193, label %199, !prof !4

193:                                              ; preds = %188
  %194 = getelementptr inbounds i64, i64* %191, i64 1
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %195, 176
  %197 = inttoptr i64 %196 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %192, align 8
  br label %222

199:                                              ; preds = %188
  %200 = bitcast i8* %87 to %"class.blink::ScriptWrappable"*
  %201 = load i64*, i64** %50, align 8
  %202 = getelementptr inbounds i64, i64* %201, i64 -1
  %203 = bitcast i64* %202 to %"class.v8::Object"*
  %204 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %192, %"class.blink::ScriptWrappable"* nonnull %189, %"class.v8::Object"* %203, %"class.blink::ScriptWrappable"* %200) #9
  br i1 %204, label %222, label %205

205:                                              ; preds = %199
  %206 = load i64*, i64** %50, align 8
  %207 = getelementptr inbounds i64, i64* %206, i64 -1
  %208 = bitcast i64* %207 to %"class.v8::Object"*
  %209 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %208) #9
  %210 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %209) #9
  %211 = bitcast %"class.blink::Node"* %185 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %212 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %211, align 8
  %213 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %212, i64 7
  %214 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %213, align 8
  %215 = call %"class.v8::Value"* %214(%"class.blink::ScriptWrappable"* nonnull %189, %"class.blink::ScriptState"* %210) #9
  %216 = icmp eq %"class.v8::Value"* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %205
  %218 = load i64*, i64** %5, align 8
  %219 = getelementptr inbounds i64, i64* %218, i64 3
  %220 = bitcast %"class.v8::Value"* %215 to i64*
  %221 = load i64, i64* %220, align 8
  store i64 %221, i64* %219, align 8
  br label %222

222:                                              ; preds = %184, %180, %117, %217, %205, %199, %193
  %223 = load i8, i8* %46, align 8, !range !2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %226, label %225

225:                                              ; preds = %222
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %4) #9
  br label %226

226:                                              ; preds = %222, %225
  %227 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %228 = load i64, i64* %227, align 8
  store i64 %228, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  br label %229

229:                                              ; preds = %226, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %230 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %231 = load i64*, i64** %230, align 8
  %232 = icmp eq i64* %231, null
  br i1 %232, label %242, label %233

233:                                              ; preds = %229
  %234 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %235 = bitcast %"class.v8::Isolate"* %234 to %"class.v8::internal::Isolate"*
  %236 = load i64, i64* %231, align 8
  %237 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %235, i64 %236) #9
  %238 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %234) #9
  br i1 %238, label %242, label %239

239:                                              ; preds = %233
  %240 = bitcast i64* %237 to %"class.v8::Value"*
  %241 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %234, %"class.v8::Value"* %240) #9
  br label %242

242:                                              ; preds = %239, %233, %229
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #9
  br label %258

258:                                              ; preds = %242, %254, %257
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node35IsDefaultNamespaceOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %45, !prof !4

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %173

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %64 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::Node"**
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 1
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #9
  br label %77

64:                                               ; preds = %45
  %65 = bitcast i64* %48 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #9
  %67 = load i32, i32* %22, align 8
  %68 = bitcast i8* %66 to %"class.blink::Node"*
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %69) #9
  %70 = icmp sgt i32 %67, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %64
  %72 = load i64*, i64** %6, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %82

77:                                               ; preds = %59, %64
  %78 = phi i8* [ %63, %59 ], [ %69, %64 ]
  %79 = phi %"class.blink::Node"* [ %62, %59 ], [ %68, %64 ]
  %80 = bitcast i64** %46 to %"class.v8::Value"**
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %80, align 8
  br label %82

82:                                               ; preds = %71, %77
  %83 = phi i8* [ %69, %71 ], [ %78, %77 ]
  %84 = phi %"class.blink::Node"* [ %68, %71 ], [ %79, %77 ]
  %85 = phi %"class.v8::Value"* [ %76, %71 ], [ %81, %77 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %85, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %86 = load i32, i32* %19, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %150

88:                                               ; preds = %82
  %89 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #9
  %90 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %91 = load %"class.v8::String"*, %"class.v8::String"** %90, align 8
  %92 = icmp eq %"class.v8::String"* %91, null
  br i1 %92, label %95, label %93, !prof !4

93:                                               ; preds = %88
  %94 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %91, i32 0) #9
  br label %122

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %122, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 acquire, align 4
  %102 = and i32 %101, 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %99
  %105 = load atomic i32, i32* %100 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %122

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #9
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !4

117:                                              ; preds = %108
  call void @llvm.trap() #9
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %122

120:                                              ; preds = %99
  %121 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %97) #9
  br label %122

122:                                              ; preds = %93, %95, %104, %118, %120
  %123 = phi %"class.WTF::StringImpl"* [ %94, %93 ], [ %121, %120 ], [ %97, %104 ], [ %97, %118 ], [ null, %95 ]
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %124, align 8
  %125 = call zeroext i1 @_ZNK5blink4Node18isDefaultNamespaceERKN3WTF12AtomicStringE(%"class.blink::Node"* %84, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #9
  br label %141

141:                                              ; preds = %122, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #9
  %142 = load i64*, i64** %6, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 3
  %144 = getelementptr inbounds i64, i64* %142, i64 1
  %145 = load i64, i64* %144, align 8
  %146 = select i1 %125, i64 184, i64 192
  %147 = add i64 %145, %146
  %148 = inttoptr i64 %147 to i64*
  %149 = load i64, i64* %148, align 8
  store i64 %149, i64* %143, align 8
  br label %150

150:                                              ; preds = %82, %141
  %151 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  store i8* null, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %150
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %152) #9
  br label %155

155:                                              ; preds = %154, %150
  %156 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #9
  br label %172

172:                                              ; preds = %155, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %83) #9
  br label %173

173:                                              ; preds = %172, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %174 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %175, null
  br i1 %176, label %186, label %177

177:                                              ; preds = %173
  %178 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %179 = bitcast %"class.v8::Isolate"* %178 to %"class.v8::internal::Isolate"*
  %180 = load i64, i64* %175, align 8
  %181 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %179, i64 %180) #9
  %182 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %178) #9
  br i1 %182, label %186, label %183

183:                                              ; preds = %177
  %184 = bitcast i64* %181 to %"class.v8::Value"*
  %185 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %178, %"class.v8::Value"* %184) #9
  br label %186

186:                                              ; preds = %183, %177, %173
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #9
  br label %202

202:                                              ; preds = %186, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node28IsEqualNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %140

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::Node"**
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::Node"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::Node"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::Node"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %79) #9
  %85 = bitcast %"class.v8::Value"* %79 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %77
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %79 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::Node"*
  br label %129

107:                                              ; preds = %77
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %140

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::Node"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = call zeroext i1 @_ZNK5blink4Node11isEqualNodeEPS0_(%"class.blink::Node"* %78, %"class.blink::Node"* %130) #9
  %132 = load i64*, i64** %4, align 8
  %133 = getelementptr inbounds i64, i64* %132, i64 3
  %134 = getelementptr inbounds i64, i64* %132, i64 1
  %135 = load i64, i64* %134, align 8
  %136 = select i1 %131, i64 184, i64 192
  %137 = add i64 %135, %136
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %133, align 8
  br label %140

140:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %141 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = icmp eq i64* %142, null
  br i1 %143, label %153, label %144

144:                                              ; preds = %140
  %145 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %146 = bitcast %"class.v8::Isolate"* %145 to %"class.v8::internal::Isolate"*
  %147 = load i64, i64* %142, align 8
  %148 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %146, i64 %147) #9
  %149 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %145) #9
  br i1 %149, label %153, label %150

150:                                              ; preds = %144
  %151 = bitcast i64* %148 to %"class.v8::Value"*
  %152 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %145, %"class.v8::Value"* %151) #9
  br label %153

153:                                              ; preds = %150, %144, %140
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #9
  br label %169

169:                                              ; preds = %153, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node27IsSameNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %140

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::Node"**
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #9
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::Node"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::Node"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::Node"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to %"class.blink::V8PerIsolateData"**
  %83 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %83, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %79) #9
  %85 = bitcast %"class.v8::Value"* %79 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %107

87:                                               ; preds = %77
  %88 = add i64 %86, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i64 %86, -4294967296
  %92 = zext i32 %90 to i64
  %93 = or i64 %91, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load i16, i16* %95, align 2
  switch i16 %96, label %101 [
    i16 1057, label %97
    i16 1056, label %97
    i16 1040, label %97
  ]

97:                                               ; preds = %87, %87, %87
  %98 = add i64 %86, 19
  %99 = inttoptr i64 %98 to i8**
  %100 = load i8*, i8** %99, align 1
  br label %104

101:                                              ; preds = %87
  %102 = bitcast %"class.v8::Value"* %79 to %"class.v8::Object"*
  %103 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %102, i32 1) #9
  br label %104

104:                                              ; preds = %101, %97
  %105 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %106 = bitcast i8* %105 to %"class.blink::Node"*
  br label %129

107:                                              ; preds = %77
  %108 = and i64 %86, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %126

110:                                              ; preds = %107
  %111 = add i64 %86, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %86, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = add i64 %86, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = ashr i32 %124, 1
  switch i32 %125, label %126 [
    i32 5, label %129
    i32 3, label %129
  ]

126:                                              ; preds = %107, %110, %121
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %127 = load i32, i32* %17, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %140

129:                                              ; preds = %121, %121, %104, %126
  %130 = phi %"class.blink::Node"* [ null, %126 ], [ null, %121 ], [ null, %121 ], [ %106, %104 ]
  %131 = icmp eq %"class.blink::Node"* %130, %78
  %132 = load i64*, i64** %4, align 8
  %133 = getelementptr inbounds i64, i64* %132, i64 3
  %134 = getelementptr inbounds i64, i64* %132, i64 1
  %135 = load i64, i64* %134, align 8
  %136 = select i1 %131, i64 184, i64 192
  %137 = add i64 %135, %136
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %133, align 8
  br label %140

140:                                              ; preds = %126, %129, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %141 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = icmp eq i64* %142, null
  br i1 %143, label %153, label %144

144:                                              ; preds = %140
  %145 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %146 = bitcast %"class.v8::Isolate"* %145 to %"class.v8::internal::Isolate"*
  %147 = load i64, i64* %142, align 8
  %148 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %146, i64 %147) #9
  %149 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %145) #9
  br i1 %149, label %153, label %150

150:                                              ; preds = %144
  %151 = bitcast i64* %148 to %"class.v8::Value"*
  %152 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %145, %"class.v8::Value"* %151) #9
  br label %153

153:                                              ; preds = %150, %144, %140
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #9
  br label %169

169:                                              ; preds = %153, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node35LookupNamespaceURIOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %45, !prof !4

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %190

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %64 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::Node"**
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 1
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #9
  br label %77

64:                                               ; preds = %45
  %65 = bitcast i64* %48 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #9
  %67 = load i32, i32* %22, align 8
  %68 = bitcast i8* %66 to %"class.blink::Node"*
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %69) #9
  %70 = icmp sgt i32 %67, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %64
  %72 = load i64*, i64** %6, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %82

77:                                               ; preds = %59, %64
  %78 = phi i8* [ %63, %59 ], [ %69, %64 ]
  %79 = phi %"class.blink::Node"* [ %62, %59 ], [ %68, %64 ]
  %80 = bitcast i64** %46 to %"class.v8::Value"**
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %80, align 8
  br label %82

82:                                               ; preds = %71, %77
  %83 = phi i8* [ %69, %71 ], [ %78, %77 ]
  %84 = phi %"class.blink::Node"* [ %68, %71 ], [ %79, %77 ]
  %85 = phi %"class.v8::Value"* [ %76, %71 ], [ %81, %77 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %85, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %86 = load i32, i32* %19, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %167

88:                                               ; preds = %82
  %89 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #9
  %90 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %91 = load %"class.v8::String"*, %"class.v8::String"** %90, align 8
  %92 = icmp eq %"class.v8::String"* %91, null
  br i1 %92, label %95, label %93, !prof !4

93:                                               ; preds = %88
  %94 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %91, i32 0) #9
  br label %116

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %116, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #9
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !4

113:                                              ; preds = %104
  call void @llvm.trap() #9
  unreachable

114:                                              ; preds = %104
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %105, align 4
  br label %116

116:                                              ; preds = %93, %95, %99, %114
  %117 = phi %"class.WTF::StringImpl"* [ %94, %93 ], [ null, %95 ], [ %97, %99 ], [ %97, %114 ]
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node18lookupNamespaceURIERKN3WTF6StringE(%"class.blink::Node"* %84, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #9
  br label %135

135:                                              ; preds = %116, %131, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #9
  %136 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %119, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %139, label %147

139:                                              ; preds = %135
  %140 = load i64*, i64** %6, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 3
  %142 = getelementptr inbounds i64, i64* %140, i64 1
  %143 = load i64, i64* %142, align 8
  %144 = add i64 %143, 176
  %145 = inttoptr i64 %144 to i64*
  %146 = load i64, i64* %145, align 8
  store i64 %146, i64* %141, align 8
  br label %167

147:                                              ; preds = %135
  %148 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %149 = add i64 %148, 8
  %150 = inttoptr i64 %149 to %"class.blink::V8PerIsolateData"**
  %151 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %151, i64 0, i32 5, i32 0, i32 0, i32 0
  %153 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %152, align 8
  %154 = load i64*, i64** %6, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 3
  %156 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %153, i64 0, i32 3, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, %137
  br i1 %158, label %159, label %166

159:                                              ; preds = %147
  %160 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %153, i64 0, i32 1, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %159
  %164 = inttoptr i64 %161 to i64*
  %165 = load i64, i64* %164, align 8
  store i64 %165, i64* %155, align 8
  br label %167

166:                                              ; preds = %147
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %153, i64* %155, %"class.WTF::StringImpl"* nonnull %137) #9
  br label %167

167:                                              ; preds = %82, %166, %163, %159, %139
  %168 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  store i8* null, i8** %168, align 8
  %170 = icmp eq i8* %169, null
  br i1 %170, label %172, label %171

171:                                              ; preds = %167
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %169) #9
  br label %172

172:                                              ; preds = %171, %167
  %173 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #9
  br label %189

189:                                              ; preds = %172, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %83) #9
  br label %190

190:                                              ; preds = %189, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %191 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %192 = load i64*, i64** %191, align 8
  %193 = icmp eq i64* %192, null
  br i1 %193, label %203, label %194

194:                                              ; preds = %190
  %195 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %196 = bitcast %"class.v8::Isolate"* %195 to %"class.v8::internal::Isolate"*
  %197 = load i64, i64* %192, align 8
  %198 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %196, i64 %197) #9
  %199 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %195) #9
  br i1 %199, label %203, label %200

200:                                              ; preds = %194
  %201 = bitcast i64* %198 to %"class.v8::Value"*
  %202 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %195, %"class.v8::Value"* %201) #9
  br label %203

203:                                              ; preds = %200, %194, %190
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #9
  br label %219

219:                                              ; preds = %203, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node29LookupPrefixOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %45, !prof !4

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %196

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %64 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::Node"**
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 1
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #9
  br label %77

64:                                               ; preds = %45
  %65 = bitcast i64* %48 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #9
  %67 = load i32, i32* %22, align 8
  %68 = bitcast i8* %66 to %"class.blink::Node"*
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %69) #9
  %70 = icmp sgt i32 %67, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %64
  %72 = load i64*, i64** %6, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %82

77:                                               ; preds = %59, %64
  %78 = phi i8* [ %63, %59 ], [ %69, %64 ]
  %79 = phi %"class.blink::Node"* [ %62, %59 ], [ %68, %64 ]
  %80 = bitcast i64** %46 to %"class.v8::Value"**
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %80, align 8
  br label %82

82:                                               ; preds = %71, %77
  %83 = phi i8* [ %69, %71 ], [ %78, %77 ]
  %84 = phi %"class.blink::Node"* [ %68, %71 ], [ %79, %77 ]
  %85 = phi %"class.v8::Value"* [ %76, %71 ], [ %81, %77 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %85, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %86 = load i32, i32* %19, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %173

88:                                               ; preds = %82
  %89 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #9
  %90 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %91 = load %"class.v8::String"*, %"class.v8::String"** %90, align 8
  %92 = icmp eq %"class.v8::String"* %91, null
  br i1 %92, label %95, label %93, !prof !4

93:                                               ; preds = %88
  %94 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %91, i32 0) #9
  br label %122

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %122, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 acquire, align 4
  %102 = and i32 %101, 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %99
  %105 = load atomic i32, i32* %100 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %122

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #9
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !4

117:                                              ; preds = %108
  call void @llvm.trap() #9
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %122

120:                                              ; preds = %99
  %121 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %97) #9
  br label %122

122:                                              ; preds = %93, %95, %104, %118, %120
  %123 = phi %"class.WTF::StringImpl"* [ %94, %93 ], [ %121, %120 ], [ %97, %104 ], [ %97, %118 ], [ null, %95 ]
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %124, align 8
  %125 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node12lookupPrefixERKN3WTF12AtomicStringE(%"class.blink::Node"* %84, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #9
  br label %141

141:                                              ; preds = %122, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #9
  %142 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %145, label %153

145:                                              ; preds = %141
  %146 = load i64*, i64** %6, align 8
  %147 = getelementptr inbounds i64, i64* %146, i64 3
  %148 = getelementptr inbounds i64, i64* %146, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 176
  %151 = inttoptr i64 %150 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %147, align 8
  br label %173

153:                                              ; preds = %141
  %154 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %155 = add i64 %154, 8
  %156 = inttoptr i64 %155 to %"class.blink::V8PerIsolateData"**
  %157 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %157, i64 0, i32 5, i32 0, i32 0, i32 0
  %159 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %158, align 8
  %160 = load i64*, i64** %6, align 8
  %161 = getelementptr inbounds i64, i64* %160, i64 3
  %162 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %159, i64 0, i32 3, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, %143
  br i1 %164, label %165, label %172

165:                                              ; preds = %153
  %166 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %159, i64 0, i32 1, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %173, label %169

169:                                              ; preds = %165
  %170 = inttoptr i64 %167 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %161, align 8
  br label %173

172:                                              ; preds = %153
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %159, i64* %161, %"class.WTF::StringImpl"* nonnull %143) #9
  br label %173

173:                                              ; preds = %82, %172, %169, %165, %145
  %174 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  store i8* null, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %178, label %177

177:                                              ; preds = %173
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %175) #9
  br label %178

178:                                              ; preds = %177, %173
  %179 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #9
  br label %195

195:                                              ; preds = %178, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %83) #9
  br label %196

196:                                              ; preds = %195, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %197 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %198 = load i64*, i64** %197, align 8
  %199 = icmp eq i64* %198, null
  br i1 %199, label %209, label %200

200:                                              ; preds = %196
  %201 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %202 = bitcast %"class.v8::Isolate"* %201 to %"class.v8::internal::Isolate"*
  %203 = load i64, i64* %198, align 8
  %204 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %202, i64 %203) #9
  %205 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %201) #9
  br i1 %205, label %209, label %206

206:                                              ; preds = %200
  %207 = bitcast i64* %204 to %"class.v8::Value"*
  %208 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %201, %"class.v8::Value"* %207) #9
  br label %209

209:                                              ; preds = %206, %200, %196
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %225, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %221

219:                                              ; preds = %212
  %220 = add i32 %218, -1
  store i32 %220, i32* %217, align 4
  br label %221

221:                                              ; preds = %219, %212
  %222 = phi i32 [ %220, %219 ], [ %218, %212 ]
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #9
  br label %225

225:                                              ; preds = %209, %221, %224
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node26NormalizeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::CEReactionsScope", align 8
  %3 = bitcast %"class.blink::CEReactionsScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %2, i64 0, i32 1
  %5 = bitcast %"class.blink::CEReactionsScope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %7 = bitcast %"class.blink::CEReactionsScope"* %2 to i64*
  store i64 %6, i64* %7, align 8
  store i8 0, i8* %4, align 8
  store %"class.blink::CEReactionsScope"* %2, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 -1
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i64 %11, -4294967296
  %16 = zext i32 %14 to i64
  %17 = or i64 %15, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load i16, i16* %19, align 2
  switch i16 %20, label %25 [
    i16 1057, label %21
    i16 1056, label %21
    i16 1040, label %21
  ]

21:                                               ; preds = %1, %1, %1
  %22 = add i64 %11, 19
  %23 = inttoptr i64 %22 to i8**
  %24 = load i8*, i8** %23, align 1
  br label %28

25:                                               ; preds = %1
  %26 = bitcast i64* %10 to %"class.v8::Object"*
  %27 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %26, i32 1) #9
  br label %28

28:                                               ; preds = %21, %25
  %29 = phi i8* [ %24, %21 ], [ %27, %25 ]
  %30 = bitcast i8* %29 to %"class.blink::Node"*
  call void @_ZN5blink4Node9normalizeEv(%"class.blink::Node"* %30) #9
  %31 = load i8, i8* %4, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %2) #9
  br label %34

34:                                               ; preds = %28, %33
  %35 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node28RemoveChildOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.absl::optional", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::CEReactionsScope", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #9
  %7 = bitcast %"class.absl::optional"* %2 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #9
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %31, label %12, !prof !3

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds i64, i64* %14, i64 1
  %16 = bitcast i64* %15 to %"class.v8::Isolate"**
  %17 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %18 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %17) #9
  %19 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %18, i64 0, i32 3
  %20 = bitcast %"class.base::TickClock"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %18, %"class.blink::RuntimeCallStats"** %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %26 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  %27 = bitcast %"class.base::TickClock"** %25 to i64*
  store i64 %21, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %18, i64 0, i32 2, i64 26
  %29 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %18, i64 0, i32 0
  %30 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %29, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %23, %"class.blink::RuntimeCallCounter"* %28, %"class.blink::RuntimeCallTimer"* %30) #9
  store %"class.blink::RuntimeCallTimer"* %23, %"class.blink::RuntimeCallTimer"** %29, align 8
  store i8 1, i8* %6, align 8
  br label %31

31:                                               ; preds = %1, %12
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 1
  %35 = bitcast i64* %34 to %"class.v8::Isolate"**
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  %37 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 56, i1 false)
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %40, align 2
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %42 = bitcast i8** %41 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)>, <2 x i8*>* %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %36, %"class.v8::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %47 = bitcast %"class.WTF::StringImpl"** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #9
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %49, 1
  br i1 %50, label %51, label %71, !prof !4

51:                                               ; preds = %31
  %52 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %49) #9
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #9
  br label %70

70:                                               ; preds = %51, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %193

71:                                               ; preds = %31
  %72 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %5, i64 0, i32 1
  %74 = bitcast %"class.blink::CEReactionsScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 16, i1 false)
  %75 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %76 = bitcast %"class.blink::CEReactionsScope"* %5 to i64*
  store i64 %75, i64* %76, align 8
  store i8 0, i8* %73, align 8
  store %"class.blink::CEReactionsScope"* %5, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %77 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds i64, i64* %78, i64 -1
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i64 %80, -4294967296
  %85 = zext i32 %83 to i64
  %86 = or i64 %84, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load i16, i16* %88, align 2
  switch i16 %89, label %95 [
    i16 1057, label %90
    i16 1056, label %90
    i16 1040, label %90
  ]

90:                                               ; preds = %71, %71, %71
  %91 = add i64 %80, 19
  %92 = inttoptr i64 %91 to i8**
  %93 = load i8*, i8** %92, align 1
  %94 = bitcast i8* %93 to %"class.blink::Node"*
  br label %107

95:                                               ; preds = %71
  %96 = bitcast i64* %79 to %"class.v8::Object"*
  %97 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %96, i32 1) #9
  %98 = load i32, i32* %48, align 8
  %99 = bitcast i8* %97 to %"class.blink::Node"*
  %100 = icmp sgt i32 %98, 0
  br i1 %100, label %107, label %101

101:                                              ; preds = %95
  %102 = load i64*, i64** %32, align 8
  %103 = getelementptr inbounds i64, i64* %102, i64 1
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 160
  %106 = inttoptr i64 %105 to %"class.v8::Value"*
  br label %112

107:                                              ; preds = %90, %95
  %108 = phi %"class.blink::Node"* [ %94, %90 ], [ %99, %95 ]
  %109 = phi i8* [ %93, %90 ], [ %97, %95 ]
  %110 = bitcast i64** %77 to %"class.v8::Value"**
  %111 = load %"class.v8::Value"*, %"class.v8::Value"** %110, align 8
  br label %112

112:                                              ; preds = %101, %107
  %113 = phi %"class.blink::Node"* [ %99, %101 ], [ %108, %107 ]
  %114 = phi i8* [ %97, %101 ], [ %109, %107 ]
  %115 = phi %"class.v8::Value"* [ %106, %101 ], [ %111, %107 ]
  %116 = ptrtoint %"class.v8::Isolate"* %36 to i64
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %117 to %"class.blink::V8PerIsolateData"**
  %119 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %118, align 8
  %120 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %119, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %115) #9
  br i1 %120, label %121, label %143

121:                                              ; preds = %112
  %122 = bitcast %"class.v8::Value"* %115 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, -1
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i64 %123, -4294967296
  %128 = zext i32 %126 to i64
  %129 = or i64 %127, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load i16, i16* %131, align 2
  switch i16 %132, label %137 [
    i16 1057, label %133
    i16 1056, label %133
    i16 1040, label %133
  ]

133:                                              ; preds = %121, %121, %121
  %134 = add i64 %123, 19
  %135 = inttoptr i64 %134 to i8**
  %136 = load i8*, i8** %135, align 1
  br label %140

137:                                              ; preds = %121
  %138 = bitcast %"class.v8::Value"* %115 to %"class.v8::Object"*
  %139 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %138, i32 1) #9
  br label %140

140:                                              ; preds = %137, %133
  %141 = phi i8* [ %136, %133 ], [ %139, %137 ]
  %142 = bitcast i8* %141 to %"class.blink::Node"*
  br label %144

143:                                              ; preds = %112
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  br label %144

144:                                              ; preds = %140, %143
  %145 = phi %"class.blink::Node"* [ %142, %140 ], [ null, %143 ]
  %146 = load i32, i32* %45, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %186

148:                                              ; preds = %144
  %149 = call %"class.blink::Node"* @_ZN5blink4Node11removeChildEPS0_RNS_14ExceptionStateE(%"class.blink::Node"* %113, %"class.blink::Node"* %145, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  %150 = load i32, i32* %45, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %186

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 0, i32 0, i32 0
  %154 = icmp eq %"class.blink::Node"* %149, null
  %155 = load i64*, i64** %32, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 3
  br i1 %154, label %157, label %163, !prof !4

157:                                              ; preds = %152
  %158 = getelementptr inbounds i64, i64* %155, i64 1
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 176
  %161 = inttoptr i64 %160 to i64*
  %162 = load i64, i64* %161, align 8
  store i64 %162, i64* %156, align 8
  br label %186

163:                                              ; preds = %152
  %164 = bitcast i8* %114 to %"class.blink::ScriptWrappable"*
  %165 = load i64*, i64** %77, align 8
  %166 = getelementptr inbounds i64, i64* %165, i64 -1
  %167 = bitcast i64* %166 to %"class.v8::Object"*
  %168 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %156, %"class.blink::ScriptWrappable"* nonnull %153, %"class.v8::Object"* %167, %"class.blink::ScriptWrappable"* %164) #9
  br i1 %168, label %186, label %169

169:                                              ; preds = %163
  %170 = load i64*, i64** %77, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 -1
  %172 = bitcast i64* %171 to %"class.v8::Object"*
  %173 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %172) #9
  %174 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %173) #9
  %175 = bitcast %"class.blink::Node"* %149 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %176 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %175, align 8
  %177 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %176, i64 7
  %178 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %177, align 8
  %179 = call %"class.v8::Value"* %178(%"class.blink::ScriptWrappable"* nonnull %153, %"class.blink::ScriptState"* %174) #9
  %180 = icmp eq %"class.v8::Value"* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %169
  %182 = load i64*, i64** %32, align 8
  %183 = getelementptr inbounds i64, i64* %182, i64 3
  %184 = bitcast %"class.v8::Value"* %179 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %183, align 8
  br label %186

186:                                              ; preds = %148, %144, %181, %169, %163, %157
  %187 = load i8, i8* %73, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %190, label %189

189:                                              ; preds = %186
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %5) #9
  br label %190

190:                                              ; preds = %186, %189
  %191 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #9
  br label %193

193:                                              ; preds = %190, %70
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %194 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %195 = load i64*, i64** %194, align 8
  %196 = icmp eq i64* %195, null
  br i1 %196, label %206, label %197

197:                                              ; preds = %193
  %198 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %44, align 8
  %199 = bitcast %"class.v8::Isolate"* %198 to %"class.v8::internal::Isolate"*
  %200 = load i64, i64* %195, align 8
  %201 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %199, i64 %200) #9
  %202 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %198) #9
  br i1 %202, label %206, label %203

203:                                              ; preds = %197
  %204 = bitcast i64* %201 to %"class.v8::Value"*
  %205 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %198, %"class.v8::Value"* %204) #9
  br label %206

206:                                              ; preds = %203, %197, %193
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #9
  br label %222

222:                                              ; preds = %206, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %37) #9
  %223 = load i8, i8* %6, align 8, !range !2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %231, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %227 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %226, align 8
  %228 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %229 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %228) #9
  %230 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %227, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %229, %"class.blink::RuntimeCallTimer"** %230, align 8
  store i8 0, i8* %6, align 8
  br label %231

231:                                              ; preds = %222, %225
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node41ReplaceChildOperationCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CEReactionsScope", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !4

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %210

44:                                               ; preds = %1
  %45 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %4, i64 0, i32 1
  %47 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  %48 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %49 = bitcast %"class.blink::CEReactionsScope"* %4 to i64*
  store i64 %48, i64* %49, align 8
  store i8 0, i8* %46, align 8
  store %"class.blink::CEReactionsScope"* %4, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 -1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i64 %53, -4294967296
  %58 = zext i32 %56 to i64
  %59 = or i64 %57, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load i16, i16* %61, align 2
  switch i16 %62, label %67 [
    i16 1057, label %63
    i16 1056, label %63
    i16 1040, label %63
  ]

63:                                               ; preds = %44, %44, %44
  %64 = add i64 %53, 19
  %65 = inttoptr i64 %64 to %"class.blink::Node"**
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 1
  br label %79

67:                                               ; preds = %44
  %68 = bitcast i64* %52 to %"class.v8::Object"*
  %69 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %68, i32 1) #9
  %70 = load i32, i32* %21, align 8
  %71 = bitcast i8* %69 to %"class.blink::Node"*
  %72 = icmp sgt i32 %70, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %67
  %74 = load i64*, i64** %5, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 160
  %78 = inttoptr i64 %77 to %"class.v8::Value"*
  br label %83

79:                                               ; preds = %63, %67
  %80 = phi %"class.blink::Node"* [ %66, %63 ], [ %71, %67 ]
  %81 = bitcast i64** %50 to %"class.v8::Value"**
  %82 = load %"class.v8::Value"*, %"class.v8::Value"** %81, align 8
  br label %83

83:                                               ; preds = %73, %79
  %84 = phi %"class.blink::Node"* [ %71, %73 ], [ %80, %79 ]
  %85 = phi %"class.v8::Value"* [ %78, %73 ], [ %82, %79 ]
  %86 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %87 = add i64 %86, 8
  %88 = inttoptr i64 %87 to %"class.blink::V8PerIsolateData"**
  %89 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %88, align 8
  %90 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %89, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %85) #9
  br i1 %90, label %91, label %113

91:                                               ; preds = %83
  %92 = bitcast %"class.v8::Value"* %85 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i64 %93, -4294967296
  %98 = zext i32 %96 to i64
  %99 = or i64 %97, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load i16, i16* %101, align 2
  switch i16 %102, label %107 [
    i16 1057, label %103
    i16 1056, label %103
    i16 1040, label %103
  ]

103:                                              ; preds = %91, %91, %91
  %104 = add i64 %93, 19
  %105 = inttoptr i64 %104 to i8**
  %106 = load i8*, i8** %105, align 1
  br label %110

107:                                              ; preds = %91
  %108 = bitcast %"class.v8::Value"* %85 to %"class.v8::Object"*
  %109 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %108, i32 1) #9
  br label %110

110:                                              ; preds = %107, %103
  %111 = phi i8* [ %106, %103 ], [ %109, %107 ]
  %112 = bitcast i8* %111 to %"class.blink::Node"*
  br label %114

113:                                              ; preds = %83
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %114

114:                                              ; preds = %110, %113
  %115 = phi %"class.blink::Node"* [ %112, %110 ], [ null, %113 ]
  %116 = load i32, i32* %18, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %203

118:                                              ; preds = %114
  %119 = load i32, i32* %21, align 8
  %120 = icmp sgt i32 %119, 1
  br i1 %120, label %127, label %121

121:                                              ; preds = %118
  %122 = load i64*, i64** %5, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 160
  %126 = inttoptr i64 %125 to %"class.v8::Value"*
  br label %131

127:                                              ; preds = %118
  %128 = load i64*, i64** %50, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 1
  %130 = bitcast i64* %129 to %"class.v8::Value"*
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi %"class.v8::Value"* [ %126, %121 ], [ %130, %127 ]
  %133 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %88, align 8
  %134 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %133, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %132) #9
  br i1 %134, label %135, label %157

135:                                              ; preds = %131
  %136 = bitcast %"class.v8::Value"* %132 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, -1
  %139 = inttoptr i64 %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = and i64 %137, -4294967296
  %142 = zext i32 %140 to i64
  %143 = or i64 %141, %142
  %144 = add i64 %143, 7
  %145 = inttoptr i64 %144 to i16*
  %146 = load i16, i16* %145, align 2
  switch i16 %146, label %151 [
    i16 1057, label %147
    i16 1056, label %147
    i16 1040, label %147
  ]

147:                                              ; preds = %135, %135, %135
  %148 = add i64 %137, 19
  %149 = inttoptr i64 %148 to i8**
  %150 = load i8*, i8** %149, align 1
  br label %154

151:                                              ; preds = %135
  %152 = bitcast %"class.v8::Value"* %132 to %"class.v8::Object"*
  %153 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %152, i32 1) #9
  br label %154

154:                                              ; preds = %151, %147
  %155 = phi i8* [ %150, %147 ], [ %153, %151 ]
  %156 = bitcast i8* %155 to %"class.blink::Node"*
  br label %158

157:                                              ; preds = %131
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %158

158:                                              ; preds = %154, %157
  %159 = phi %"class.blink::Node"* [ %156, %154 ], [ null, %157 ]
  %160 = load i32, i32* %18, align 8
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %203

162:                                              ; preds = %158
  %163 = call %"class.blink::Node"* @_ZN5blink4Node12replaceChildEPS0_S1_RNS_14ExceptionStateE(%"class.blink::Node"* %84, %"class.blink::Node"* %115, %"class.blink::Node"* %159, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %164 = load i32, i32* %18, align 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %203

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %163, i64 0, i32 0, i32 0
  %168 = icmp eq %"class.blink::Node"* %163, null
  %169 = load i64*, i64** %5, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 3
  br i1 %168, label %171, label %177, !prof !4

171:                                              ; preds = %166
  %172 = getelementptr inbounds i64, i64* %169, i64 1
  %173 = load i64, i64* %172, align 8
  %174 = add i64 %173, 176
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %170, align 8
  br label %203

177:                                              ; preds = %166
  %178 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %163, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %179 = load i64*, i64** %178, align 8
  %180 = icmp eq i64* %179, null
  %181 = getelementptr inbounds i64, i64* %169, i64 2
  %182 = select i1 %180, i64* %181, i64* %179, !prof !4
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %170, align 8
  %184 = load i64*, i64** %178, align 8
  %185 = icmp eq i64* %184, null
  br i1 %185, label %186, label %203

186:                                              ; preds = %177
  %187 = load i64*, i64** %50, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 -1
  %189 = bitcast i64* %188 to %"class.v8::Object"*
  %190 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %189) #9
  %191 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %190) #9
  %192 = bitcast %"class.blink::Node"* %163 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %193 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %192, align 8
  %194 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %193, i64 7
  %195 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %194, align 8
  %196 = call %"class.v8::Value"* %195(%"class.blink::ScriptWrappable"* nonnull %167, %"class.blink::ScriptState"* %191) #9
  %197 = icmp eq %"class.v8::Value"* %196, null
  br i1 %197, label %203, label %198

198:                                              ; preds = %186
  %199 = load i64*, i64** %5, align 8
  %200 = getelementptr inbounds i64, i64* %199, i64 3
  %201 = bitcast %"class.v8::Value"* %196 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  br label %203

203:                                              ; preds = %162, %158, %114, %198, %186, %177, %171
  %204 = load i8, i8* %46, align 8, !range !2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %207, label %206

206:                                              ; preds = %203
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %4) #9
  br label %207

207:                                              ; preds = %203, %206
  %208 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  br label %210

210:                                              ; preds = %207, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %211 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %212 = load i64*, i64** %211, align 8
  %213 = icmp eq i64* %212, null
  br i1 %213, label %223, label %214

214:                                              ; preds = %210
  %215 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %216 = bitcast %"class.v8::Isolate"* %215 to %"class.v8::internal::Isolate"*
  %217 = load i64, i64* %212, align 8
  %218 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %216, i64 %217) #9
  %219 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %215) #9
  br i1 %219, label %223, label %220

220:                                              ; preds = %214
  %221 = bitcast i64* %218 to %"class.v8::Value"*
  %222 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %215, %"class.v8::Value"* %221) #9
  br label %223

223:                                              ; preds = %220, %214, %210
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #9
  br label %239

239:                                              ; preds = %223, %235, %238
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node45ReplaceChildOperationCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CEReactionsScope", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %44, !prof !4

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #9
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %210

44:                                               ; preds = %1
  %45 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %4, i64 0, i32 1
  %47 = bitcast %"class.blink::CEReactionsScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  %48 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %49 = bitcast %"class.blink::CEReactionsScope"* %4 to i64*
  store i64 %48, i64* %49, align 8
  store i8 0, i8* %46, align 8
  store %"class.blink::CEReactionsScope"* %4, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 -1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i64 %53, -4294967296
  %58 = zext i32 %56 to i64
  %59 = or i64 %57, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load i16, i16* %61, align 2
  switch i16 %62, label %68 [
    i16 1057, label %63
    i16 1056, label %63
    i16 1040, label %63
  ]

63:                                               ; preds = %44, %44, %44
  %64 = add i64 %53, 19
  %65 = inttoptr i64 %64 to i8**
  %66 = load i8*, i8** %65, align 1
  %67 = bitcast i8* %66 to %"class.blink::Node"*
  br label %80

68:                                               ; preds = %44
  %69 = bitcast i64* %52 to %"class.v8::Object"*
  %70 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %69, i32 1) #9
  %71 = load i32, i32* %21, align 8
  %72 = bitcast i8* %70 to %"class.blink::Node"*
  %73 = icmp sgt i32 %71, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %5, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 1
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 160
  %79 = inttoptr i64 %78 to %"class.v8::Value"*
  br label %85

80:                                               ; preds = %63, %68
  %81 = phi %"class.blink::Node"* [ %67, %63 ], [ %72, %68 ]
  %82 = phi i8* [ %66, %63 ], [ %70, %68 ]
  %83 = bitcast i64** %50 to %"class.v8::Value"**
  %84 = load %"class.v8::Value"*, %"class.v8::Value"** %83, align 8
  br label %85

85:                                               ; preds = %74, %80
  %86 = phi %"class.blink::Node"* [ %72, %74 ], [ %81, %80 ]
  %87 = phi i8* [ %70, %74 ], [ %82, %80 ]
  %88 = phi %"class.v8::Value"* [ %79, %74 ], [ %84, %80 ]
  %89 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %90 = add i64 %89, 8
  %91 = inttoptr i64 %90 to %"class.blink::V8PerIsolateData"**
  %92 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %91, align 8
  %93 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %92, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %88) #9
  br i1 %93, label %94, label %116

94:                                               ; preds = %85
  %95 = bitcast %"class.v8::Value"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = and i64 %96, -4294967296
  %101 = zext i32 %99 to i64
  %102 = or i64 %100, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load i16, i16* %104, align 2
  switch i16 %105, label %110 [
    i16 1057, label %106
    i16 1056, label %106
    i16 1040, label %106
  ]

106:                                              ; preds = %94, %94, %94
  %107 = add i64 %96, 19
  %108 = inttoptr i64 %107 to i8**
  %109 = load i8*, i8** %108, align 1
  br label %113

110:                                              ; preds = %94
  %111 = bitcast %"class.v8::Value"* %88 to %"class.v8::Object"*
  %112 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %111, i32 1) #9
  br label %113

113:                                              ; preds = %110, %106
  %114 = phi i8* [ %109, %106 ], [ %112, %110 ]
  %115 = bitcast i8* %114 to %"class.blink::Node"*
  br label %117

116:                                              ; preds = %85
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %117

117:                                              ; preds = %113, %116
  %118 = phi %"class.blink::Node"* [ %115, %113 ], [ null, %116 ]
  %119 = load i32, i32* %18, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %203

121:                                              ; preds = %117
  %122 = load i32, i32* %21, align 8
  %123 = icmp sgt i32 %122, 1
  br i1 %123, label %130, label %124

124:                                              ; preds = %121
  %125 = load i64*, i64** %5, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 1
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 160
  %129 = inttoptr i64 %128 to %"class.v8::Value"*
  br label %134

130:                                              ; preds = %121
  %131 = load i64*, i64** %50, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 1
  %133 = bitcast i64* %132 to %"class.v8::Value"*
  br label %134

134:                                              ; preds = %124, %130
  %135 = phi %"class.v8::Value"* [ %129, %124 ], [ %133, %130 ]
  %136 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %91, align 8
  %137 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %136, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %135) #9
  br i1 %137, label %138, label %160

138:                                              ; preds = %134
  %139 = bitcast %"class.v8::Value"* %135 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, -1
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = and i64 %140, -4294967296
  %145 = zext i32 %143 to i64
  %146 = or i64 %144, %145
  %147 = add i64 %146, 7
  %148 = inttoptr i64 %147 to i16*
  %149 = load i16, i16* %148, align 2
  switch i16 %149, label %154 [
    i16 1057, label %150
    i16 1056, label %150
    i16 1040, label %150
  ]

150:                                              ; preds = %138, %138, %138
  %151 = add i64 %140, 19
  %152 = inttoptr i64 %151 to i8**
  %153 = load i8*, i8** %152, align 1
  br label %157

154:                                              ; preds = %138
  %155 = bitcast %"class.v8::Value"* %135 to %"class.v8::Object"*
  %156 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %155, i32 1) #9
  br label %157

157:                                              ; preds = %154, %150
  %158 = phi i8* [ %153, %150 ], [ %156, %154 ]
  %159 = bitcast i8* %158 to %"class.blink::Node"*
  br label %161

160:                                              ; preds = %134
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  br label %161

161:                                              ; preds = %157, %160
  %162 = phi %"class.blink::Node"* [ %159, %157 ], [ null, %160 ]
  %163 = load i32, i32* %18, align 8
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %203

165:                                              ; preds = %161
  %166 = call %"class.blink::Node"* @_ZN5blink4Node12replaceChildEPS0_S1_RNS_14ExceptionStateE(%"class.blink::Node"* %86, %"class.blink::Node"* %118, %"class.blink::Node"* %162, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #9
  %167 = load i32, i32* %18, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %203

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %166, i64 0, i32 0, i32 0
  %171 = icmp eq %"class.blink::Node"* %166, null
  %172 = load i64*, i64** %5, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 3
  br i1 %171, label %174, label %180, !prof !4

174:                                              ; preds = %169
  %175 = getelementptr inbounds i64, i64* %172, i64 1
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 176
  %178 = inttoptr i64 %177 to i64*
  %179 = load i64, i64* %178, align 8
  store i64 %179, i64* %173, align 8
  br label %203

180:                                              ; preds = %169
  %181 = bitcast i8* %87 to %"class.blink::ScriptWrappable"*
  %182 = load i64*, i64** %50, align 8
  %183 = getelementptr inbounds i64, i64* %182, i64 -1
  %184 = bitcast i64* %183 to %"class.v8::Object"*
  %185 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %173, %"class.blink::ScriptWrappable"* nonnull %170, %"class.v8::Object"* %184, %"class.blink::ScriptWrappable"* %181) #9
  br i1 %185, label %203, label %186

186:                                              ; preds = %180
  %187 = load i64*, i64** %50, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 -1
  %189 = bitcast i64* %188 to %"class.v8::Object"*
  %190 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %189) #9
  %191 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %190) #9
  %192 = bitcast %"class.blink::Node"* %166 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %193 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %192, align 8
  %194 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %193, i64 7
  %195 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %194, align 8
  %196 = call %"class.v8::Value"* %195(%"class.blink::ScriptWrappable"* nonnull %170, %"class.blink::ScriptState"* %191) #9
  %197 = icmp eq %"class.v8::Value"* %196, null
  br i1 %197, label %203, label %198

198:                                              ; preds = %186
  %199 = load i64*, i64** %5, align 8
  %200 = getelementptr inbounds i64, i64* %199, i64 3
  %201 = bitcast %"class.v8::Value"* %196 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  br label %203

203:                                              ; preds = %165, %161, %117, %198, %186, %180, %174
  %204 = load i8, i8* %46, align 8, !range !2
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %207, label %206

206:                                              ; preds = %203
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %4) #9
  br label %207

207:                                              ; preds = %203, %206
  %208 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  br label %210

210:                                              ; preds = %207, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %211 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %212 = load i64*, i64** %211, align 8
  %213 = icmp eq i64* %212, null
  br i1 %213, label %223, label %214

214:                                              ; preds = %210
  %215 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %216 = bitcast %"class.v8::Isolate"* %215 to %"class.v8::internal::Isolate"*
  %217 = load i64, i64* %212, align 8
  %218 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %216, i64 %217) #9
  %219 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %215) #9
  br i1 %219, label %223, label %220

220:                                              ; preds = %214
  %221 = bitcast i64* %218 to %"class.v8::Value"*
  %222 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %215, %"class.v8::Value"* %221) #9
  br label %223

223:                                              ; preds = %220, %214, %210
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #9
  br label %239

239:                                              ; preds = %223, %235, %238
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #9
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.182"* byval(%"class.base::span.182") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node31SetApplyScrollOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %45, !prof !4

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %139

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::Node"**
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 1
  br label %75

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = bitcast i8* %65 to %"class.blink::Node"*
  %68 = icmp sgt i32 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = load i64*, i64** %6, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  br label %79

75:                                               ; preds = %59, %63
  %76 = phi %"class.blink::Node"* [ %62, %59 ], [ %67, %63 ]
  %77 = bitcast i64** %46 to %"class.v8::Value"**
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  br label %79

79:                                               ; preds = %69, %75
  %80 = phi %"class.blink::Node"* [ %67, %69 ], [ %76, %75 ]
  %81 = phi %"class.v8::Value"* [ %74, %69 ], [ %78, %75 ]
  %82 = call %"class.blink::V8ScrollStateCallback"* @_ZN5blink17NativeValueTraitsINS_21V8ScrollStateCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, i32 0, %"class.v8::Value"* %81, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3)
  %83 = load i32, i32* %19, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %139

85:                                               ; preds = %79
  %86 = load i32, i32* %22, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %85
  %89 = load i64*, i64** %6, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %85
  %95 = load i64*, i64** %46, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %99, i64 3, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZN5blink22V8NativeScrollBehavior13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.60, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  %101 = extractvalue { i8, i64 } %100, 0
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %98
  %104 = extractvalue { i8, i64 } %100, 1
  %105 = getelementptr inbounds [3 x i8*], [3 x i8*]* @_ZN5blink22V8NativeScrollBehavior13string_table_E.const, i64 0, i64 %104
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %98, %103
  %108 = phi i8* [ %106, %103 ], [ null, %98 ]
  %109 = load i32, i32* %19, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %139

111:                                              ; preds = %107
  %112 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #9
  %113 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113)
  %114 = icmp eq i8* %108, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = call i64 @strlen(i8* nonnull %108) #10
  br label %117

117:                                              ; preds = %111, %115
  %118 = phi i64 [ %116, %115 ], [ 0, %111 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %108, i64 %118) #9
  %119 = bitcast %"class.WTF::String"* %2 to i64*
  %120 = load i64, i64* %119, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113)
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %122 = bitcast %"class.WTF::String"* %5 to i64*
  store i64 %120, i64* %122, align 8
  call void @_ZN5blink4Node14setApplyScrollEPNS_21V8ScrollStateCallbackERKN3WTF6StringE(%"class.blink::Node"* %80, %"class.blink::V8ScrollStateCallback"* %82, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #9
  br label %138

138:                                              ; preds = %117, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #9
  br label %139

139:                                              ; preds = %107, %79, %138, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %140 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = icmp eq i64* %141, null
  br i1 %142, label %152, label %143

143:                                              ; preds = %139
  %144 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %145 = bitcast %"class.v8::Isolate"* %144 to %"class.v8::internal::Isolate"*
  %146 = load i64, i64* %141, align 8
  %147 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %145, i64 %146) #9
  %148 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %144) #9
  br i1 %148, label %152, label %149

149:                                              ; preds = %143
  %150 = bitcast i64* %147 to %"class.v8::Value"*
  %151 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %144, %"class.v8::Value"* %150) #9
  br label %152

152:                                              ; preds = %149, %143, %139
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #9
  br label %168

168:                                              ; preds = %152, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_17v8_node36SetDistributeScrollOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %45, !prof !4

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %23) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %139

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::Node"**
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 1
  br label %75

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #9
  %66 = load i32, i32* %22, align 8
  %67 = bitcast i8* %65 to %"class.blink::Node"*
  %68 = icmp sgt i32 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = load i64*, i64** %6, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  br label %79

75:                                               ; preds = %59, %63
  %76 = phi %"class.blink::Node"* [ %62, %59 ], [ %67, %63 ]
  %77 = bitcast i64** %46 to %"class.v8::Value"**
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  br label %79

79:                                               ; preds = %69, %75
  %80 = phi %"class.blink::Node"* [ %67, %69 ], [ %76, %75 ]
  %81 = phi %"class.v8::Value"* [ %74, %69 ], [ %78, %75 ]
  %82 = call %"class.blink::V8ScrollStateCallback"* @_ZN5blink17NativeValueTraitsINS_21V8ScrollStateCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, i32 0, %"class.v8::Value"* %81, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3)
  %83 = load i32, i32* %19, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %139

85:                                               ; preds = %79
  %86 = load i32, i32* %22, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %85
  %89 = load i64*, i64** %6, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %85
  %95 = load i64*, i64** %46, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %99, i64 3, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZN5blink22V8NativeScrollBehavior13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.60, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #9
  %101 = extractvalue { i8, i64 } %100, 0
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %98
  %104 = extractvalue { i8, i64 } %100, 1
  %105 = getelementptr inbounds [3 x i8*], [3 x i8*]* @_ZN5blink22V8NativeScrollBehavior13string_table_E.const, i64 0, i64 %104
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %98, %103
  %108 = phi i8* [ %106, %103 ], [ null, %98 ]
  %109 = load i32, i32* %19, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %139

111:                                              ; preds = %107
  %112 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #9
  %113 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113)
  %114 = icmp eq i8* %108, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = call i64 @strlen(i8* nonnull %108) #10
  br label %117

117:                                              ; preds = %111, %115
  %118 = phi i64 [ %116, %115 ], [ 0, %111 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %108, i64 %118) #9
  %119 = bitcast %"class.WTF::String"* %2 to i64*
  %120 = load i64, i64* %119, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113)
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %122 = bitcast %"class.WTF::String"* %5 to i64*
  store i64 %120, i64* %122, align 8
  call void @_ZN5blink4Node19setDistributeScrollEPNS_21V8ScrollStateCallbackERKN3WTF6StringE(%"class.blink::Node"* %80, %"class.blink::V8ScrollStateCallback"* %82, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #9
  br label %138

138:                                              ; preds = %117, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #9
  br label %139

139:                                              ; preds = %107, %79, %138, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %140 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = icmp eq i64* %141, null
  br i1 %142, label %152, label %143

143:                                              ; preds = %139
  %144 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %145 = bitcast %"class.v8::Isolate"* %144 to %"class.v8::internal::Isolate"*
  %146 = load i64, i64* %141, align 8
  %147 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %145, i64 %146) #9
  %148 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %144) #9
  br i1 %148, label %152, label %149

149:                                              ; preds = %143
  %150 = bitcast i64* %147 to %"class.v8::Value"*
  %151 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %144, %"class.v8::Value"* %150) #9
  br label %152

152:                                              ; preds = %149, %143, %139
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #9
  br label %168

168:                                              ; preds = %152, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i64* } @_ZN5blink8bindings19v8_context_snapshot19GetRefTableOfV8NodeEv() local_unnamed_addr #3 {
  ret { i64, i64* } { i64 43, i64* getelementptr inbounds ([43 x i64], [43 x i64]* @_ZZN5blink8bindings19v8_context_snapshot19GetRefTableOfV8NodeEvE15kReferenceTable, i64 0, i64 0) }
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings19v8_context_snapshot20InstallPropsOfV8NodeEN2v85LocalINS2_7ContextEEERKNS_15DOMWrapperWorldENS3_INS2_6ObjectEEESA_SA_NS3_INS2_8TemplateEEE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*) local_unnamed_addr #0 {
  %7 = alloca %"class.base::span.182", align 8
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase32is_scroll_customization_enabled_E, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #9
  %12 = bitcast %"class.v8::Template"* %5 to %"class.v8::FunctionTemplate"*
  %13 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %11, %"class.v8::FunctionTemplate"* %12) #9
  %14 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 0, i32 0
  store i64 2, i64* %14, align 8
  %15 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink8bindings19v8_context_snapshot20InstallPropsOfV8NodeEN2v85LocalINS2_7ContextEEERKNS_15DOMWrapperWorldENS3_INS2_6ObjectEEESA_SA_NS3_INS2_8TemplateEEEE15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %15, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %11, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Object"* %2, %"class.v8::Object"* %3, %"class.v8::Object"* %4, %"class.v8::Signature"* %13, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %7) #9
  br label %16

16:                                               ; preds = %6, %10
  ret void
}

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_6ObjectEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Signature"*, %"class.base::span.182"* byval(%"class.base::span.182") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings19v8_context_snapshot20InstallPropsOfV8NodeEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 {
  %6 = alloca %"class.base::span.182", align 8
  %7 = bitcast %"class.base::span.182"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase32is_scroll_customization_enabled_E, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %12 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %11) #9
  %13 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %6, i64 0, i32 0, i32 0
  store i64 2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink6V8Node35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %14, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %12, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %6) #9
  br label %15

15:                                               ; preds = %5, %10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  ret void
}

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink4Node7baseURIEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.50, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0)) #9
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.50, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.52, i64 0, i64 0)) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !4
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #9
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #9
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !4
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #9
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !4

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::NodeList"* @_ZN5blink4Node10childNodesEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.752"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %76

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #9
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #9
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #9
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.752"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %76

36:                                               ; preds = %26
  %37 = load i64, i64* %6, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %58

40:                                               ; preds = %36
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i64 %37, -4294967296
  %45 = zext i32 %43 to i64
  %46 = or i64 %44, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 67
  br i1 %50, label %51, label %58

51:                                               ; preds = %40
  %52 = add i64 %37, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = ashr i32 %54, 1
  switch i32 %55, label %58 [
    i32 5, label %56
    i32 3, label %56
  ]

56:                                               ; preds = %51, %51
  %57 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 152, i1 false)
  br label %76

58:                                               ; preds = %51, %40, %36
  %59 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %60 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %61 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %60) #9
  %62 = icmp eq %"class.v8::String"* %61, null
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %65 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %66 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %66, i64 5
  %68 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %67, align 8
  call void %68(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %64) #9
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 152, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %61, %"class.v8::String"** %71, align 8
  %72 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %72, align 8
  %73 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %74 = bitcast %"class.std::__1::unique_ptr.752"* %73 to i64*
  store i64 0, i64* %74, align 8
  br label %75

75:                                               ; preds = %70, %63
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #9
  br label %76

76:                                               ; preds = %75, %56, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.blink::V8UnionStringOrTrustedScript"* @_ZNK5blink4Node21textContentForBindingEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink28V8UnionStringOrTrustedScript9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.blink::V8UnionStringOrTrustedScript"* @_ZN5blink28V8UnionStringOrTrustedScript6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node11appendChildEPS0_RNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink4Node9cloneNodeEbRNS_14ExceptionStateE(%"class.blink::Node"*, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare zeroext i16 @_ZNK5blink4Node23compareDocumentPositionEPKS0_NS0_20ShadowTreesTreatmentE(%"class.blink::Node"*, %"class.blink::Node"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink4Node11getRootNodeEPKNS_18GetRootNodeOptionsE(%"class.blink::Node"*, %"class.blink::GetRootNodeOptions"*) local_unnamed_addr #2

declare void @_ZN5blink18GetRootNodeOptionsC1Ev(%"class.blink::GetRootNodeOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.207"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.207"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.54, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.207"*) local_unnamed_addr #2

declare %"class.blink::GetRootNodeOptions"* @_ZN5blink17NativeValueTraitsINS_18GetRootNodeOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node12insertBeforeEPS0_S1_RNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node18isDefaultNamespaceERKN3WTF12AtomicStringE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node11isEqualNodeEPS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node18lookupNamespaceURIERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node12lookupPrefixERKN3WTF12AtomicStringE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4Node9normalizeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node11removeChildEPS0_RNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node12replaceChildEPS0_S1_RNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::V8ScrollStateCallback"* @_ZN5blink17NativeValueTraitsINS_21V8ScrollStateCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %17

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %10 = bitcast i8* %9 to %"class.blink::V8ScrollStateCallback"*
  %11 = bitcast i8* %9 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %11, %"class.v8::Object"* %8) #9
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21V8ScrollStateCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  br label %41

17:                                               ; preds = %4
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0)) #9
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %22 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %22, i64 3
  %24 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %23, align 8
  call void %24(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #9
  br label %40

40:                                               ; preds = %17, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %41

41:                                               ; preds = %40, %7
  %42 = phi %"class.blink::V8ScrollStateCallback"* [ %10, %7 ], [ null, %40 ]
  ret %"class.blink::V8ScrollStateCallback"* %42
}

declare void @_ZN5blink4Node14setApplyScrollEPNS_21V8ScrollStateCallbackERKN3WTF6StringE(%"class.blink::Node"*, %"class.blink::V8ScrollStateCallback"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.207"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.207"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackFunctionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackFunctionBase"*)***
  %4 = load void (%"class.blink::CallbackFunctionBase"*)**, void (%"class.blink::CallbackFunctionBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackFunctionBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"*, %"class.v8::Object"*) unnamed_addr #2

declare { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i64, i8**, i8*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN5blink4Node19setDistributeScrollEPNS_21V8ScrollStateCallbackERKN3WTF6StringE(%"class.blink::Node"*, %"class.blink::V8ScrollStateCallback"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
