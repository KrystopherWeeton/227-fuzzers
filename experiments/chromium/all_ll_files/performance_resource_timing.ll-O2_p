; ModuleID = '../../third_party/blink/renderer/core/timing/performance_resource_timing.cc'
source_filename = "../../third_party/blink/renderer/core/timing/performance_resource_timing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.110", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.110" = type { %"class.base::RefCounted.111" }
%"class.base::RefCounted.111" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.114" }
%"class.blink::HeapHashMap.114" = type { %"class.WTF::HashMap.117" }
%"class.WTF::HashMap.117" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type { %"class.blink::WeakMember.121", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.123", i32, [4 x i8], %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.259", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.275", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.300", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.239", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.159" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__cxx_atomic_impl.162" }
%"struct.std::__1::__cxx_atomic_impl.162" = type { %"struct.std::__1::__cxx_atomic_base_impl.163" }
%"struct.std::__1::__cxx_atomic_base_impl.163" = type { i64 }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::Worklist.170"* }
%"class.blink::Worklist.170" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.159" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::Worklist.177"* }
%"class.blink::Worklist.177" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.159" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::Worklist.184"* }
%"class.blink::Worklist.184" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.159" }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::Worklist.191"* }
%"class.blink::Worklist.191" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.159" }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::Worklist.198"* }
%"class.blink::Worklist.198" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.159" }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::Worklist.205"* }
%"class.blink::Worklist.205" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.159" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::Worklist.212"* }
%"class.blink::Worklist.212" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.159" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.219", %"class.std::__1::__compressed_pair.226", %"class.std::__1::__compressed_pair.231", %"class.std::__1::__compressed_pair.233", [4 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221", %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { i64 }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { float }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.242", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.251" }
%"class.WTF::Vector.251" = type { %"class.WTF::VectorBuffer.252" }
%"class.WTF::VectorBuffer.252" = type { %"class.WTF::VectorBufferBase.253" }
%"class.WTF::VectorBufferBase.253" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.267" }
%"class.WTF::VectorBuffer.267" = type { %"class.WTF::VectorBufferBase.268" }
%"class.WTF::VectorBufferBase.268" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.281" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.170"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.177"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.184"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.191"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.198"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.308" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.299 }
%class.scoped_refptr.299 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.300" = type { %"struct.std::__1::__atomic_base.301" }
%"struct.std::__1::__atomic_base.301" = type { %"struct.std::__1::__cxx_atomic_impl.302" }
%"struct.std::__1::__cxx_atomic_impl.302" = type { %"struct.std::__1::__cxx_atomic_base_impl.303" }
%"struct.std::__1::__cxx_atomic_base_impl.303" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.97" }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::PerformanceResourceTiming" = type { %"class.blink::PerformanceEntry.base", %"class.blink::mojom::blink::WorkerTimingContainer", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.base::TimeTicks", i8, %class.scoped_refptr.1, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32, i32, i64, i64, i8, i8, i8, i8, i8, %"class.blink::HeapVector", %"class.blink::HeapVector.4", %"class.blink::HeapMojoReceiver" }
%"class.blink::PerformanceEntry.base" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32 }>
%"class.blink::mojom::blink::WorkerTimingContainer" = type { i32 (...)** }
%class.scoped_refptr.1 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type { %"class.WTF::RefCounted", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::PerformanceServerTiming"* }
%"class.blink::PerformanceServerTiming" = type { %"class.blink::ScriptWrappable", %"class.WTF::String", double, %"class.WTF::String" }
%"class.blink::HeapVector.4" = type { %"class.WTF::Vector.7" }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9" }
%"class.WTF::VectorBufferBase.9" = type { %"class.blink::Member.10"*, i32, i32 }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::PerformanceEntry"* }
%"class.blink::PerformanceEntry" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32, [4 x i8] }>
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.13" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.439", %"class.mojo::Receiver" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.437" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::PerformanceResourceTiming"* }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::WorkerTimingContainerStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.441, %"class.std::__1::unique_ptr.554", %"class.base::WeakPtrFactory.603" }
%class.scoped_refptr.441 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.104, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.520", %"class.absl::optional.525", %"class.absl::optional.482", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.545", i8, [7 x i8], %class.scoped_refptr.104, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.442" }>
%"class.base::RefCountedThreadSafe.442" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.97" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.389 }
%union.anon.389 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.443", %"class.std::__1::unique_ptr.449", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.455 }
%class.scoped_refptr.455 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.456", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.456" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.457" }
%"struct.std::__1::atomic.457" = type { %"struct.std::__1::__atomic_base.458" }
%"struct.std::__1::__atomic_base.458" = type { %"struct.std::__1::__atomic_base.459" }
%"struct.std::__1::__atomic_base.459" = type { %"struct.std::__1::__cxx_atomic_impl.460" }
%"struct.std::__1::__cxx_atomic_impl.460" = type { %"struct.std::__1::__cxx_atomic_base_impl.461" }
%"struct.std::__1::__cxx_atomic_base_impl.461" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.104, %"class.std::__1::unique_ptr.462", %"class.absl::optional.472", %"struct.std::__1::atomic.300", i8, i8, i8, i8, i32, i32, %"class.absl::optional.482", %"class.std::__1::unique_ptr.487", i8, i64, %class.scoped_refptr.517, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.519" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.102 }
%class.scoped_refptr.102 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.103", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.103" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.104, i8, %"class.mojo::ScopedHandleBase.465", %class.scoped_refptr.466, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.467", i8*, %"class.base::WeakPtrFactory.468" }
%"class.mojo::ScopedHandleBase.465" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.466 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.467" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.468" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.472" = type { %"class.absl::optional_internal::optional_data.473" }
%"class.absl::optional_internal::optional_data.473" = type { %"class.absl::optional_internal::optional_data_base.474" }
%"class.absl::optional_internal::optional_data_base.474" = type { %"class.absl::optional_internal::optional_data_dtor_base.475" }
%"class.absl::optional_internal::optional_data_dtor_base.475" = type { i8, %union.anon.476 }
%union.anon.476 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.477", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.477" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.490", i8, i64, %class.scoped_refptr.491, %class.scoped_refptr.513 }
%"class.base::RepeatingCallback.490" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.491 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.492", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.502", i8, [7 x i8] }>
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.493 }
%class.scoped_refptr.493 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.494", %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.std::__1::map.502" = type { %"class.std::__1::__tree.503" }
%"class.std::__1::__tree.503" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.504", %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%class.scoped_refptr.513 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.517 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.96 }
%class.scoped_refptr.96 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.104, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.519" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.520" = type { %"class.absl::optional_internal::optional_data.521" }
%"class.absl::optional_internal::optional_data.521" = type { %"class.absl::optional_internal::optional_data_base.522" }
%"class.absl::optional_internal::optional_data_base.522" = type { %"class.absl::optional_internal::optional_data_dtor_base.523" }
%"class.absl::optional_internal::optional_data_dtor_base.523" = type { i8, %union.anon.524 }
%union.anon.524 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.525" = type { %"class.absl::optional_internal::optional_data.526" }
%"class.absl::optional_internal::optional_data.526" = type { %"class.absl::optional_internal::optional_data_base.527" }
%"class.absl::optional_internal::optional_data_base.527" = type { %"class.absl::optional_internal::optional_data_dtor_base.528" }
%"class.absl::optional_internal::optional_data_dtor_base.528" = type { i8, [7 x i8], %union.anon.529 }
%union.anon.529 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.482" = type { %"class.absl::optional_internal::optional_data.483" }
%"class.absl::optional_internal::optional_data.483" = type { %"class.absl::optional_internal::optional_data_base.484" }
%"class.absl::optional_internal::optional_data_base.484" = type { %"class.absl::optional_internal::optional_data_dtor_base.485" }
%"class.absl::optional_internal::optional_data_dtor_base.485" = type { i8, %union.anon.486 }
%union.anon.486 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.530 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.530 = type { %"class.std::__1::map.533" }
%"class.std::__1::map.533" = type { %"class.std::__1::__tree.534" }
%"class.std::__1::__tree.534" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.535", %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.544"*, i64 }
%"class.std::__1::unique_ptr.544" = type opaque
%"class.std::__1::map.545" = type { %"class.std::__1::__tree.546" }
%"class.std::__1::__tree.546" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.547", %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%class.scoped_refptr.104 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.105" }>
%"class.base::RefCountedThreadSafe.105" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.557", %"class.absl::optional.558", %"class.absl::optional.563", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.570", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.578", %"class.std::__1::map.589", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.598", i8, %class.scoped_refptr.104, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.599" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.557" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.558" = type { %"class.absl::optional_internal::optional_data.559" }
%"class.absl::optional_internal::optional_data.559" = type { %"class.absl::optional_internal::optional_data_base.560" }
%"class.absl::optional_internal::optional_data_base.560" = type { %"class.absl::optional_internal::optional_data_dtor_base.561" }
%"class.absl::optional_internal::optional_data_dtor_base.561" = type { i8, %union.anon.562 }
%union.anon.562 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.563" = type { %"class.absl::optional_internal::optional_data.564" }
%"class.absl::optional_internal::optional_data.564" = type { %"class.absl::optional_internal::optional_data_base.565" }
%"class.absl::optional_internal::optional_data_base.565" = type { %"class.absl::optional_internal::optional_data_dtor_base.566" }
%"class.absl::optional_internal::optional_data_dtor_base.566" = type { i8, %union.anon.567 }
%union.anon.567 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.104, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.568" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.568" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.569 }
%class.scoped_refptr.569 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.573", %class.scoped_refptr.574 }
%"class.base::RepeatingCallback.573" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.574 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.442", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.578" = type { %"class.std::__1::__tree.579" }
%"class.std::__1::__tree.579" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.std::__1::map.589" = type { %"class.std::__1::__tree.590" }
%"class.std::__1::__tree.590" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.591", %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"class.base::OnceCallback.598" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.599" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.603" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::WorkerTimingContainerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::WorkerTimingContainer"* }
%"class.blink::mojom::blink::ResourceTimingInfo" = type { %"class.WTF::String", %"class.base::TimeTicks", %"class.WTF::String", %"class.WTF::String", %"class.mojo::StructPtr", %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32, i32, i64, i64, i8, i8, i8, i8, i8, %"class.WTF::Vector.24" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.network::mojom::blink::LoadTimingInfo"* }
%"class.network::mojom::blink::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.16", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.15" }
%"class.base::time_internal::TimeBase.15" = type { i64 }
%"class.mojo::StructPtr.16" = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.network::mojom::blink::LoadTimingInfoConnectTiming"* }
%"class.network::mojom::blink::LoadTimingInfoConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::blink::ServerTimingInfo", i32, [4 x i8] }>
%"class.blink::mojom::blink::ServerTimingInfo" = type { %"class.WTF::String", double, %"class.WTF::String" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.65", i32, i8, [3 x i8], %"class.blink::HeapVector.67", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.86", %"class.blink::Member.92", %"class.blink::Member.94", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.35" }
%"class.blink::Supplementable.35" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.36" }
%"class.blink::HeapHashMap.36" = type { %"class.WTF::HashMap.39" }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.42"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.42" = type { i8*, %"class.blink::Member.425" }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.427" }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.43, %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"class.blink::Member.59", i32, [4 x i8], %"class.WTF::HashSet.61", i32, i32 }
%class.scoped_refptr.43 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.44", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.46 }
%"class.WTF::RefCounted.44" = type { %"class.base::RefCounted.45" }
%"class.base::RefCounted.45" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.46 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.67" = type { %"class.WTF::Vector.70" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { %"class.blink::Member.73"*, i32, i32 }
%"class.blink::Member.73" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.79", i32, i32 }
%"class.blink::HeapHashMap.79" = type { %"class.WTF::HashMap.82" }
%"class.WTF::HashMap.82" = type { %"class.WTF::HashTable.83" }
%"class.WTF::HashTable.83" = type <{ %"struct.WTF::KeyValuePair.85"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.85" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.105", [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::V8ObjectBuilder" = type { %"class.blink::ScriptState"*, %"class.v8::Local" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.109, %"class.blink::Member.304", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.109 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.306" }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Array" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.mojo::StructPtr.314" = type { %"class.std::__1::unique_ptr.315" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* }
%"class.blink::mojom::blink::PerformanceMarkOrMeasure" = type { %"class.WTF::String", i32, double, double, %"class.absl::optional.318" }
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, %union.anon.322 }
%union.anon.322 = type { %"class.mojo_base::BigBuffer" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.323", i64, %"class.absl::optional.329" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { i8* }
%"class.absl::optional.329" = type { %"class.absl::optional_internal::optional_data.330" }
%"class.absl::optional_internal::optional_data.330" = type { %"class.absl::optional_internal::optional_data_base.331" }
%"class.absl::optional_internal::optional_data_base.331" = type { %"class.absl::optional_internal::optional_data_dtor_base.332" }
%"class.absl::optional_internal::optional_data_dtor_base.332" = type { i8, %union.anon.333 }
%union.anon.333 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.334", %"class.std::__1::unique_ptr.335" }
%"class.mojo::ScopedHandleBase.334" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NonThrowableExceptionState" = type <{ %"class.blink::ExceptionState", i8*, i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.346" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.346" = type { %"class.v8::TracedReference.347" }
%"class.v8::TracedReference.347" = type { %"class.v8::BasicTracedReference.348" }
%"class.v8::BasicTracedReference.348" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.351", i64, %"class.WTF::Vector.354", %"class.WTF::Vector.359", %"class.WTF::Vector.365", %"class.WTF::Vector.383", %class.scoped_refptr.43, %"class.WTF::HashMap.395", %"class.WTF::Vector.400", %"class.WTF::Vector.354", %"class.WTF::Vector.406", %"class.WTF::HashMap.411", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.350" }
%"class.base::RefCountedThreadSafe.350" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"class.WTF::Vector.359" = type { %"class.WTF::VectorBuffer.360" }
%"class.WTF::VectorBuffer.360" = type { %"class.WTF::VectorBufferBase.361", [8 x i8] }
%"class.WTF::VectorBufferBase.361" = type { %class.scoped_refptr.362*, i32, i32 }
%class.scoped_refptr.362 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.375" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.368 }
%class.scoped_refptr.368 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.383" = type { %"class.WTF::VectorBuffer.384" }
%"class.WTF::VectorBuffer.384" = type { %"class.WTF::VectorBufferBase.385" }
%"class.WTF::VectorBufferBase.385" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.386", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.386" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"struct.WTF::KeyValuePair.399"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.399" = type opaque
%"class.WTF::Vector.400" = type { %"class.WTF::VectorBuffer.401" }
%"class.WTF::VectorBuffer.401" = type { %"class.WTF::VectorBufferBase.402" }
%"class.WTF::VectorBufferBase.402" = type { %"class.mojo::ScopedHandleBase.403"*, i32, i32 }
%"class.mojo::ScopedHandleBase.403" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.354" = type { %"class.WTF::VectorBuffer.355" }
%"class.WTF::VectorBuffer.355" = type { %"class.WTF::VectorBufferBase.356", [16 x i8] }
%"class.WTF::VectorBufferBase.356" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.406" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.411" = type { %"class.WTF::HashTable.412" }
%"class.WTF::HashTable.412" = type <{ %"struct.WTF::KeyValuePair.415"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.415" = type { i8**, %"class.std::__1::unique_ptr.429" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::PerformanceMark" = type { %"class.blink::PerformanceEntry.base", %class.scoped_refptr.349, %"class.blink::HeapHashMap.416", %"class.base::TimeTicks" }
%class.scoped_refptr.349 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::HeapHashMap.416" = type { %"class.WTF::HashMap.419" }
%"class.WTF::HashMap.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"struct.WTF::KeyValuePair.422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.422" = type opaque
%"class.blink::PerformanceMeasure" = type { %"class.blink::PerformanceEntry.base", %class.scoped_refptr.349, %"class.blink::HeapHashMap.416" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.631", %"class.mojo::internal::Buffer", %"class.std::__1::vector.632", %"class.std::__1::vector.639", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.631" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.mojo::ScopedHandleBase.403"*, %"class.mojo::ScopedHandleBase.403"*, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.mojo::ScopedHandleBase.403"* }
%"class.std::__1::vector.639" = type { %"class.std::__1::__vector_base.640" }
%"class.std::__1::__vector_base.640" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::MessageReceiverWithStatus" = type { %"class.mojo::MessageReceiver" }
%"class.absl::optional.659" = type { %"class.absl::optional_internal::optional_data.660" }
%"class.absl::optional_internal::optional_data.660" = type { %"class.absl::optional_internal::optional_data_base.661" }
%"class.absl::optional_internal::optional_data_base.661" = type { %"class.absl::optional_internal::optional_data_dtor_base.662" }
%"class.absl::optional_internal::optional_data_dtor_base.662" = type { i8, %union.anon.663 }
%union.anon.663 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink25PerformanceResourceTiming18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv = comdat any

$_ZNK5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_25PerformanceResourceTimingEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev = comdat any

$_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev = comdat any

$_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv = comdat any

$_ZN4mojo15MessageReceiverD2Ev = comdat any

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_ = comdat any

$_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7Wrapper18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEED0Ev = comdat any

$_ZN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEE6AcceptEPNS3_7MessageE = comdat any

$_ZN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE = comdat any

$_ZN4mojo8internal12BindingStateIN5blink5mojom5blink21WorkerTimingContainerENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_16PerformanceEntryEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23PerformanceServerTimingEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23PerformanceServerTimingEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperE = comdat any

$_ZTVN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink25PerformanceResourceTimingE = hidden unnamed_addr constant { [30 x i8*], [5 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::PerformanceResourceTiming"*)* @_ZN5blink25PerformanceResourceTimingD2Ev to i8*), i8* bitcast (void (%"class.blink::PerformanceResourceTiming"*)* @_ZN5blink25PerformanceResourceTimingD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::Visitor"*)* @_ZNK5blink25PerformanceResourceTiming5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming9entryTypeEv to i8*), i8* bitcast (i32 (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming13EntryTypeEnumEv to i8*), i8* bitcast (double (%"class.blink::PerformanceEntry"*)* @_ZNK5blink16PerformanceEntry8durationEv to i8*), i8* bitcast (void (%"class.mojo::StructPtr.314"*, %"class.blink::PerformanceEntry"*)* @_ZN5blink16PerformanceEntry30ToMojoPerformanceMarkOrMeasureEv to i8*), i8* bitcast (void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::V8ObjectBuilder"*)* @_ZNK5blink25PerformanceResourceTiming14BuildJSONValueERNS_15V8ObjectBuilderE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming13initiatorTypeEv to i8*), i8* bitcast (double (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming13redirectStartEv to i8*), i8* bitcast (double (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming11redirectEndEv to i8*), i8* bitcast (double (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming10fetchStartEv to i8*), i8* bitcast (double (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming11responseEndEv to i8*), i8* bitcast (void (%"class.blink::PerformanceResourceTiming"*, %"class.mojo::StructPtr.314"*)* @_ZN5blink25PerformanceResourceTiming19AddPerformanceEntryEN4mojo9StructPtrINS_5mojom5blink24PerformanceMarkOrMeasureEEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming22AlpnNegotiatedProtocolEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming14ConnectionInfoEv to i8*), i8* bitcast (%"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming21GetResourceLoadTimingEv to i8*), i8* bitcast (i1 (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming18AllowTimingDetailsEv to i8*), i8* bitcast (i1 (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming18DidReuseConnectionEv to i8*), i8* bitcast (i64 (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming15GetTransferSizeEv to i8*), i8* bitcast (i64 (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming18GetEncodedBodySizeEv to i8*), i8* bitcast (i64 (%"class.blink::PerformanceResourceTiming"*)* @_ZNK5blink25PerformanceResourceTiming18GetDecodedBodySizeEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%"class.blink::PerformanceResourceTiming"*)* @_ZThn48_N5blink25PerformanceResourceTimingD1Ev to i8*), i8* bitcast (void (%"class.blink::PerformanceResourceTiming"*)* @_ZThn48_N5blink25PerformanceResourceTimingD0Ev to i8*), i8* bitcast (void (%"class.blink::PerformanceResourceTiming"*, %"class.mojo::StructPtr.314"*)* @_ZThn48_N5blink25PerformanceResourceTiming19AddPerformanceEntryEN4mojo9StructPtrINS_5mojom5blink24PerformanceMarkOrMeasureEEE to i8*)] }, align 8
@_ZN5blink26fetch_initiator_type_names6kOtherE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names9kResourceE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"initiatorType\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"nextHopProtocol\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"workerStart\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"redirectStart\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"redirectEnd\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"fetchStart\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"domainLookupStart\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"domainLookupEnd\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"connectStart\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"connectEnd\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"secureConnectionStart\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"requestStart\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"responseStart\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"responseEnd\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"transferSize\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"encodedBodySize\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"decodedBodySize\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"serverTiming\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"workerTiming\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink25PerformanceResourceTiming18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16HeapMojoReceiverINS1_5mojom5blink21WorkerTimingContainerENS1_25PerformanceResourceTimingELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv = private unnamed_addr constant [208 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper]\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*)* @_ZNK5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev to i8*), i8* bitcast (void (%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ContextLifecycleObserver"*)* @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv to i8*)] }, comdat, align 8
@.str.23 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.24 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.25 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@_ZTVN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::WorkerTimingContainerStub"*)* @_ZN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEED0Ev to i8*), i8* bitcast (i1 (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::WorkerTimingContainerStub"*, %"class.mojo::Message"*)* @_ZN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEE6AcceptEPNS3_7MessageE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::WorkerTimingContainerStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*)* @_ZN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE to i8*)] }, comdat, align 8
@_ZN5blink5mojom5blink21WorkerTimingContainer5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink37WorkerTimingContainerRequestValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.26 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.28 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.29 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.31 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.33 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.35 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16PerformanceEntryEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [173 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::PerformanceEntry>, WTF::VectorTraits<blink::Member<blink::PerformanceEntry> > >]\00", align 1

@_ZN5blink25PerformanceResourceTimingC1ERKNS_5mojom5blink18ResourceTimingInfoEN4base9TimeTicksEbRKN3WTF12AtomicStringEN4mojo15PendingReceiverINS2_21WorkerTimingContainerEEEPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::mojom::blink::ResourceTimingInfo"*, i64, i1, %"class.WTF::AtomicString"*, %"class.mojo::PendingReceiver"*, %"class.blink::ExecutionContext"*), void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::mojom::blink::ResourceTimingInfo"*, i64, i1, %"class.WTF::AtomicString"*, %"class.mojo::PendingReceiver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink25PerformanceResourceTimingC2ERKNS_5mojom5blink18ResourceTimingInfoEN4base9TimeTicksEbRKN3WTF12AtomicStringEN4mojo15PendingReceiverINS2_21WorkerTimingContainerEEEPNS_16ExecutionContextE
@_ZN5blink25PerformanceResourceTimingC1ERKN3WTF12AtomicStringEN4base9TimeTicksEbbNS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEEPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::PerformanceResourceTiming"*, %"class.WTF::AtomicString"*, i64, i1, i1, %"class.blink::HeapVector"*, %"class.blink::ExecutionContext"*), void (%"class.blink::PerformanceResourceTiming"*, %"class.WTF::AtomicString"*, i64, i1, i1, %"class.blink::HeapVector"*, %"class.blink::ExecutionContext"*)* @_ZN5blink25PerformanceResourceTimingC2ERKN3WTF12AtomicStringEN4base9TimeTicksEbbNS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEEPNS_16ExecutionContextE
@_ZN5blink25PerformanceResourceTimingD1Ev = hidden unnamed_addr alias void (%"class.blink::PerformanceResourceTiming"*), void (%"class.blink::PerformanceResourceTiming"*)* @_ZN5blink25PerformanceResourceTimingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25PerformanceResourceTimingC2ERKNS_5mojom5blink18ResourceTimingInfoEN4base9TimeTicksEbRKN3WTF12AtomicStringEN4mojo15PendingReceiverINS2_21WorkerTimingContainerEEEPNS_16ExecutionContextE(%"class.blink::PerformanceResourceTiming"*, %"class.blink::mojom::blink::ResourceTimingInfo"* dereferenceable(112), i64, i1 zeroext, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.mojo::PendingReceiver"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::PendingReceiver", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.mojo::PendingReceiver", align 8
  %11 = zext i1 %3 to i8
  %12 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::PerformanceEntry"*
  %13 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %40, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 acquire, align 4
  %20 = and i32 %19, 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %17
  %23 = load atomic i32, i32* %18 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %40

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #11
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #11
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %40

38:                                               ; preds = %17
  %39 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %15) #11
  br label %40

40:                                               ; preds = %7, %22, %36, %38
  %41 = phi %"class.WTF::StringImpl"* [ %39, %38 ], [ %15, %22 ], [ %15, %36 ], [ null, %7 ]
  %42 = ptrtoint %"class.WTF::StringImpl"* %41 to i64
  %43 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 16
  %47 = load i8, i8* %46, align 4, !range !3
  %48 = icmp ne i8 %47, 0
  %49 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %2, i64 %45, i1 zeroext %48, i1 zeroext %3) #11
  %50 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 6, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = load i8, i8* %46, align 4, !range !3
  %53 = icmp ne i8 %52, 0
  %54 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %2, i64 %51, i1 zeroext %53, i1 zeroext %3) #11
  call void @_ZN5blink16PerformanceEntryC2ERKN3WTF12AtomicStringEdd(%"class.blink::PerformanceEntry"* %12, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, double %49, double %54) #11
  %55 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %40
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #11
  br label %71

71:                                               ; preds = %40, %67, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  %72 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 1
  %73 = getelementptr inbounds %"class.blink::mojom::blink::WorkerTimingContainer", %"class.blink::mojom::blink::WorkerTimingContainer"* %72, i64 0, i32 0
  %74 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*] }, { [30 x i8*], [5 x i8*] }* @_ZTVN5blink25PerformanceResourceTimingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*] }, { [30 x i8*], [5 x i8*] }* @_ZTVN5blink25PerformanceResourceTimingE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %75 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %83, align 8
  br label %90

84:                                               ; preds = %78, %71
  %85 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names6kOtherE, align 8
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %88, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %89, label %108, label %90

90:                                               ; preds = %82, %84
  %91 = phi %"class.WTF::StringImpl"* [ %76, %82 ], [ %87, %84 ]
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #11
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %96
  call void @llvm.trap() #11
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %84, %90, %106
  %109 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 3
  %110 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %152, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #11
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %118
  call void @llvm.trap() #11
  unreachable

128:                                              ; preds = %118
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %119, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = load atomic i32, i32* %114 acquire, align 4
  %132 = and i32 %131, 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %130
  %135 = load atomic i32, i32* %114 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %154

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #11
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !2

147:                                              ; preds = %138
  call void @llvm.trap() #11
  unreachable

148:                                              ; preds = %138
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %139, align 4
  br label %154

150:                                              ; preds = %130
  %151 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %111) #11
  br label %154

152:                                              ; preds = %108
  %153 = bitcast %"class.WTF::AtomicString"* %109 to i64*
  store i64 0, i64* %153, align 8
  br label %169

154:                                              ; preds = %134, %148, %150
  %155 = phi %"class.WTF::StringImpl"* [ %111, %148 ], [ %111, %134 ], [ %151, %150 ]
  %156 = ptrtoint %"class.WTF::StringImpl"* %155 to i64
  %157 = bitcast %"class.WTF::AtomicString"* %109 to i64*
  store i64 %156, i64* %157, align 8
  %158 = load atomic i32, i32* %114 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %154
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %154
  %166 = phi i32 [ %164, %163 ], [ %162, %154 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #11
  br label %169

169:                                              ; preds = %152, %165, %168
  %170 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 4
  %171 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 3, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %213, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %191

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #11
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !2

188:                                              ; preds = %179
  call void @llvm.trap() #11
  unreachable

189:                                              ; preds = %179
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %180, align 4
  br label %191

191:                                              ; preds = %174, %189
  %192 = load atomic i32, i32* %175 acquire, align 4
  %193 = and i32 %192, 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %211, label %195

195:                                              ; preds = %191
  %196 = load atomic i32, i32* %175 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %215

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #11
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  call void @llvm.trap() #11
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %215

211:                                              ; preds = %191
  %212 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %172) #11
  br label %215

213:                                              ; preds = %169
  %214 = bitcast %"class.WTF::AtomicString"* %170 to i64*
  store i64 0, i64* %214, align 8
  br label %230

215:                                              ; preds = %195, %209, %211
  %216 = phi %"class.WTF::StringImpl"* [ %172, %209 ], [ %172, %195 ], [ %212, %211 ]
  %217 = ptrtoint %"class.WTF::StringImpl"* %216 to i64
  %218 = bitcast %"class.WTF::AtomicString"* %170 to i64*
  store i64 %217, i64* %218, align 8
  %219 = load atomic i32, i32* %175 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %215
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %215
  %227 = phi i32 [ %225, %224 ], [ %223, %215 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #11
  br label %230

230:                                              ; preds = %213, %226, %229
  %231 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %2, i64* %231, align 8
  %232 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  store i8 %11, i8* %232, align 8
  %233 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %234 = load %"class.network::mojom::blink::LoadTimingInfo"*, %"class.network::mojom::blink::LoadTimingInfo"** %233, align 8
  %235 = call %"class.blink::ResourceLoadTiming"* @_ZN5blink18ResourceLoadTiming8FromMojoEPKN7network5mojom5blink14LoadTimingInfoE(%"class.network::mojom::blink::LoadTimingInfo"* %234) #11
  %236 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 7, i32 0
  store %"class.blink::ResourceLoadTiming"* %235, %"class.blink::ResourceLoadTiming"** %236, align 8
  %237 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 5, i32 0, i32 0
  %238 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 8, i32 0, i32 0
  %239 = load i64, i64* %237, align 8
  store i64 %239, i64* %238, align 8
  %240 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 9, i32 0, i32 0
  %241 = load i64, i64* %50, align 8
  store i64 %241, i64* %240, align 8
  %242 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 10
  %243 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 7
  %244 = load i32, i32* %243, align 8
  store i32 %244, i32* %242, align 8
  %245 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 11
  %246 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 8
  %247 = load i32, i32* %246, align 4
  store i32 %247, i32* %245, align 4
  %248 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 12
  %249 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 9
  %250 = load i32, i32* %249, align 8
  store i32 %250, i32* %248, align 8
  %251 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 13
  %252 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 10
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %251, align 8
  %254 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 14
  %255 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 11
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %254, align 8
  %257 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 15
  %258 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 12
  %259 = load i8, i8* %258, align 8, !range !3
  store i8 %259, i8* %257, align 8
  %260 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 16
  %261 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 14
  %262 = load i8, i8* %261, align 2, !range !3
  store i8 %262, i8* %260, align 1
  %263 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 17
  %264 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 15
  %265 = load i8, i8* %264, align 1, !range !3
  store i8 %265, i8* %263, align 2
  %266 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %267 = load i8, i8* %46, align 4, !range !3
  store i8 %267, i8* %266, align 1
  %268 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 19
  %269 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 13
  %270 = load i8, i8* %269, align 1, !range !3
  store i8 %270, i8* %268, align 4
  %271 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 20
  %272 = getelementptr inbounds %"class.blink::mojom::blink::ResourceTimingInfo", %"class.blink::mojom::blink::ResourceTimingInfo"* %1, i64 0, i32 17
  call void @_ZN5blink23PerformanceServerTiming22FromParsedServerTimingERKN3WTF6VectorIN4mojo16InlinedStructPtrINS_5mojom5blink16ServerTimingInfoEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HeapVector"* sret %271, %"class.WTF::Vector.24"* dereferenceable(16) %272) #11
  %273 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21
  %274 = bitcast %"class.blink::HeapVector.4"* %273 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #11
  %275 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 22
  %276 = icmp eq %"class.blink::ExecutionContext"* %6, null
  %277 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %6, i64 0, i32 1
  %278 = getelementptr inbounds %"class.blink::MojoBindingContext", %"class.blink::MojoBindingContext"* %277, i64 0, i32 0
  %279 = select i1 %276, %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"* %278
  %280 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64 80) #11
  %281 = bitcast i8* %280 to %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*
  %282 = bitcast i8* %280 to %"class.blink::ContextLifecycleObserver"*
  %283 = bitcast i8* %280 to i32 (...)***
  %284 = getelementptr inbounds i8, i8* %280, i64 8
  %285 = bitcast i8* %284 to %"class.blink::ContextLifecycleNotifier"**
  store %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"** %285, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %283, align 8
  %286 = getelementptr inbounds i8, i8* %280, i64 16
  %287 = bitcast i8* %286 to %"class.blink::ThreadState::PrefinalizerRegistration"*
  call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_(%"class.blink::ThreadState::PrefinalizerRegistration"* %287, %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %281) #11
  %288 = getelementptr inbounds i8, i8* %280, i64 24
  %289 = bitcast i8* %288 to %"class.blink::PerformanceResourceTiming"**
  store %"class.blink::PerformanceResourceTiming"* %0, %"class.blink::PerformanceResourceTiming"** %289, align 8
  %290 = icmp eq %"class.blink::PerformanceResourceTiming"* %0, null
  %291 = getelementptr inbounds i8, i8* %280, i64 32
  %292 = bitcast i8* %291 to %"class.mojo::internal::BindingStateBase"*
  call void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"* %292) #11
  %293 = getelementptr inbounds i8, i8* %280, i64 64
  %294 = bitcast i8* %293 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %294, align 8
  %295 = ptrtoint %"class.blink::mojom::blink::WorkerTimingContainer"* %72 to i64
  %296 = select i1 %290, i64 0, i64 %295
  %297 = getelementptr inbounds i8, i8* %280, i64 72
  %298 = bitcast i8* %297 to i64*
  store i64 %296, i64* %298, align 8
  call void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"* %282, %"class.blink::ContextLifecycleNotifier"* %279) #11
  %299 = getelementptr inbounds i8, i8* %280, i64 -4
  %300 = bitcast i8* %299 to i16*
  %301 = load atomic i16, i16* %300 monotonic, align 2
  %302 = or i16 %301, 1
  store atomic i16 %302, i16* %300 release, align 2
  %303 = bitcast %"class.blink::HeapMojoReceiver"* %275 to i8**
  store i8* %280, i8** %303, align 8
  %304 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %10, i64 0, i32 0
  %305 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %304, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %305) #11
  %306 = bitcast %"class.blink::MojoBindingContext"* %277 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %307 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %306, align 8
  %308 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %307, i64 6
  %309 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %308, align 8
  %310 = call %"class.base::SingleThreadTaskRunner"* %309(%"class.blink::MojoBindingContext"* %277, i8 zeroext 22) #11
  %311 = bitcast %"class.mojo::PendingReceiver"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %311)
  %312 = getelementptr inbounds %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoReceiver"* %275, i64 0, i32 0, i32 0, i32 0
  %313 = load %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %312, align 8
  %314 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %313, i64 0, i32 3
  %315 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %315, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %304) #11
  %316 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load i32, i32* %316, align 8
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %322, label %319

319:                                              ; preds = %230
  %320 = bitcast %"class.base::SingleThreadTaskRunner"* %310 to %"class.base::SequencedTaskRunner"*
  %321 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %314, i64 0, i32 0
  call void @_ZN4mojo8internal12BindingStateIN5blink5mojom5blink21WorkerTimingContainerENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"* %321, %"struct.mojo::internal::PendingReceiverState"* nonnull %315, %"class.base::SequencedTaskRunner"* %320) #11
  br label %333

322:                                              ; preds = %230
  %323 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %314, i64 0, i32 0, i32 0
  call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %323) #11
  %324 = icmp eq %"class.base::SingleThreadTaskRunner"* %310, null
  br i1 %324, label %333, label %325

325:                                              ; preds = %322
  %326 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %310, i64 0, i32 0, i32 0, i32 1
  %327 = getelementptr inbounds %"class.base::RefCountedThreadSafe.105", %"class.base::RefCountedThreadSafe.105"* %326, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = atomicrmw sub i32* %327, i32 1 acq_rel
  %329 = icmp eq i32 %328, 1
  br i1 %329, label %330, label %333

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.base::RefCountedThreadSafe.105", %"class.base::RefCountedThreadSafe.105"* %326, i64 -2
  %332 = bitcast %"class.base::RefCountedThreadSafe.105"* %331 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %332) #11
  br label %333

333:                                              ; preds = %330, %325, %322, %319
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %315) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %311)
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %304) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64, i64, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink16PerformanceEntryC2ERKN3WTF12AtomicStringEdd(%"class.blink::PerformanceEntry"*, %"class.WTF::AtomicString"* dereferenceable(8), double, double) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::ResourceLoadTiming"* @_ZN5blink18ResourceLoadTiming8FromMojoEPKN7network5mojom5blink14LoadTimingInfoE(%"class.network::mojom::blink::LoadTimingInfo"*) local_unnamed_addr #2

declare void @_ZN5blink23PerformanceServerTiming22FromParsedServerTimingERKN3WTF6VectorIN4mojo16InlinedStructPtrINS_5mojom5blink16ServerTimingInfoEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HeapVector"* sret, %"class.WTF::Vector.24"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25PerformanceResourceTimingC2ERKN3WTF12AtomicStringEN4base9TimeTicksEbbNS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEEPNS_16ExecutionContextE(%"class.blink::PerformanceResourceTiming"*, %"class.WTF::AtomicString"* dereferenceable(8), i64, i1 zeroext, i1 zeroext, %"class.blink::HeapVector"* nocapture, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::PendingReceiver", align 8
  %9 = alloca %"class.mojo::PendingReceiver", align 8
  %10 = zext i1 %3 to i8
  %11 = zext i1 %4 to i8
  %12 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::PerformanceEntry"*
  tail call void @_ZN5blink16PerformanceEntryC2ERKN3WTF12AtomicStringEdd(%"class.blink::PerformanceEntry"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %1, double 0.000000e+00, double 0.000000e+00) #11
  %13 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::mojom::blink::WorkerTimingContainer", %"class.blink::mojom::blink::WorkerTimingContainer"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*] }, { [30 x i8*], [5 x i8*] }* @_ZTVN5blink25PerformanceResourceTimingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*] }, { [30 x i8*], [5 x i8*] }* @_ZTVN5blink25PerformanceResourceTimingE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = bitcast %"class.WTF::StringImpl"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  store i64 %2, i64* %17, align 8
  %19 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  store i8 %10, i8* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 7, i32 0
  %21 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 10
  %22 = bitcast %"class.blink::ResourceLoadTiming"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false)
  store i32 12, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 11
  store i32 3, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 12
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 13
  %26 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 19
  %27 = bitcast i64* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 20, i1 false)
  store i8 %11, i8* %26, align 4
  %28 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 20
  %29 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %32 = bitcast %"class.blink::HeapVector"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #11
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.blink::HeapVector"* %28 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %29, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %29, align 4
  store i32 %36, i32* %35, align 4
  %38 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %30, align 4
  %40 = load i32, i32* %38, align 4
  store i32 %40, i32* %30, align 4
  store i32 %39, i32* %38, align 4
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %7
  %44 = bitcast %"class.blink::HeapVector"* %28 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #11
  br label %47

47:                                               ; preds = %43, %7
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #11
  br label %54

54:                                               ; preds = %47, %50
  %55 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21
  %56 = bitcast %"class.blink::HeapVector.4"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #11
  %57 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 22
  %58 = icmp eq %"class.blink::ExecutionContext"* %6, null
  %59 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %6, i64 0, i32 1
  %60 = getelementptr inbounds %"class.blink::MojoBindingContext", %"class.blink::MojoBindingContext"* %59, i64 0, i32 0
  %61 = select i1 %58, %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"* %60
  %62 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64 80) #11
  %63 = bitcast i8* %62 to %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*
  %64 = bitcast i8* %62 to %"class.blink::ContextLifecycleObserver"*
  %65 = bitcast i8* %62 to i32 (...)***
  %66 = getelementptr inbounds i8, i8* %62, i64 8
  %67 = bitcast i8* %66 to %"class.blink::ContextLifecycleNotifier"**
  store %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"** %67, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %68 = getelementptr inbounds i8, i8* %62, i64 16
  %69 = bitcast i8* %68 to %"class.blink::ThreadState::PrefinalizerRegistration"*
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_(%"class.blink::ThreadState::PrefinalizerRegistration"* %69, %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %63) #11
  %70 = getelementptr inbounds i8, i8* %62, i64 24
  %71 = bitcast i8* %70 to %"class.blink::PerformanceResourceTiming"**
  store %"class.blink::PerformanceResourceTiming"* %0, %"class.blink::PerformanceResourceTiming"** %71, align 8
  %72 = icmp eq %"class.blink::PerformanceResourceTiming"* %0, null
  %73 = getelementptr inbounds i8, i8* %62, i64 32
  %74 = bitcast i8* %73 to %"class.mojo::internal::BindingStateBase"*
  tail call void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"* %74) #11
  %75 = getelementptr inbounds i8, i8* %62, i64 64
  %76 = bitcast i8* %75 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = ptrtoint %"class.blink::mojom::blink::WorkerTimingContainer"* %13 to i64
  %78 = select i1 %72, i64 0, i64 %77
  %79 = getelementptr inbounds i8, i8* %62, i64 72
  %80 = bitcast i8* %79 to i64*
  store i64 %78, i64* %80, align 8
  tail call void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"* %64, %"class.blink::ContextLifecycleNotifier"* %61) #11
  %81 = getelementptr inbounds i8, i8* %62, i64 -4
  %82 = bitcast i8* %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = or i16 %83, 1
  store atomic i16 %84, i16* %82 release, align 2
  %85 = bitcast %"class.blink::HeapMojoReceiver"* %57 to i8**
  store i8* %62, i8** %85, align 8
  %86 = bitcast %"class.mojo::PendingReceiver"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 24, i1 false) #11, !alias.scope !4
  %87 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %9, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %87) #11
  %88 = bitcast %"class.blink::MojoBindingContext"* %59 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %89 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %88, align 8
  %90 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %89, i64 6
  %91 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %90, align 8
  %92 = call %"class.base::SingleThreadTaskRunner"* %91(%"class.blink::MojoBindingContext"* %59, i8 zeroext 22) #11
  %93 = bitcast %"class.mojo::PendingReceiver"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93)
  %94 = getelementptr inbounds %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoReceiver"* %57, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %95, i64 0, i32 3
  %97 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %97, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %87) #11
  %98 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %54
  %102 = bitcast %"class.base::SingleThreadTaskRunner"* %92 to %"class.base::SequencedTaskRunner"*
  %103 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %96, i64 0, i32 0
  call void @_ZN4mojo8internal12BindingStateIN5blink5mojom5blink21WorkerTimingContainerENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"* %103, %"struct.mojo::internal::PendingReceiverState"* nonnull %97, %"class.base::SequencedTaskRunner"* %102) #11
  br label %115

104:                                              ; preds = %54
  %105 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %96, i64 0, i32 0, i32 0
  call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %105) #11
  %106 = icmp eq %"class.base::SingleThreadTaskRunner"* %92, null
  br i1 %106, label %115, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %92, i64 0, i32 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.base::RefCountedThreadSafe.105", %"class.base::RefCountedThreadSafe.105"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw sub i32* %109, i32 1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.base::RefCountedThreadSafe.105", %"class.base::RefCountedThreadSafe.105"* %108, i64 -2
  %114 = bitcast %"class.base::RefCountedThreadSafe.105"* %113 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %114) #11
  br label %115

115:                                              ; preds = %112, %107, %104, %101
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %97) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93)
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %87) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25PerformanceResourceTimingD2Ev(%"class.blink::PerformanceResourceTiming"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*] }, { [30 x i8*], [5 x i8*] }* @_ZTVN5blink25PerformanceResourceTimingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [5 x i8*] }, { [30 x i8*], [5 x i8*] }* @_ZTVN5blink25PerformanceResourceTimingE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 7, i32 0
  %5 = load %"class.blink::ResourceLoadTiming"*, %"class.blink::ResourceLoadTiming"** %4, align 8
  %6 = icmp eq %"class.blink::ResourceLoadTiming"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #11
  %9 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ResourceLoadTiming"* %5 to i8*
  tail call void @free(i8* %13) #11
  br label %14

14:                                               ; preds = %1, %7, %12
  %15 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #11
  br label %31

31:                                               ; preds = %14, %27, %30
  %32 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %31, %44, %47
  %49 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #11
  br label %65

65:                                               ; preds = %48, %61, %64
  %66 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::PerformanceEntry"*
  tail call void @_ZN5blink16PerformanceEntryD2Ev(%"class.blink::PerformanceEntry"* %66) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink16PerformanceEntryD2Ev(%"class.blink::PerformanceEntry"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N5blink25PerformanceResourceTimingD1Ev(%"class.blink::PerformanceResourceTiming"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 -1, i32 15
  %3 = bitcast i8* %2 to %"class.blink::PerformanceResourceTiming"*
  tail call void @_ZN5blink25PerformanceResourceTimingD2Ev(%"class.blink::PerformanceResourceTiming"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25PerformanceResourceTimingD0Ev(%"class.blink::PerformanceResourceTiming"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink25PerformanceResourceTimingD2Ev(%"class.blink::PerformanceResourceTiming"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N5blink25PerformanceResourceTimingD0Ev(%"class.blink::PerformanceResourceTiming"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 -1, i32 15
  %3 = bitcast i8* %2 to %"class.blink::PerformanceResourceTiming"*
  tail call void @_ZN5blink25PerformanceResourceTimingD2Ev(%"class.blink::PerformanceResourceTiming"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink25PerformanceResourceTiming9entryTypeEv(%"class.blink::PerformanceResourceTiming"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names9kResourceE, align 8
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #11
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %1, %6, %21
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink25PerformanceResourceTiming13EntryTypeEnumEv(%"class.blink::PerformanceResourceTiming"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ResourceLoadTiming"* @_ZNK5blink25PerformanceResourceTiming21GetResourceLoadTimingEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 7, i32 0
  %3 = load %"class.blink::ResourceLoadTiming"*, %"class.blink::ResourceLoadTiming"** %2, align 8
  ret %"class.blink::ResourceLoadTiming"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink25PerformanceResourceTiming18AllowTimingDetailsEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 16
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink25PerformanceResourceTiming18DidReuseConnectionEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN5blink25PerformanceResourceTiming15GetTransferSizeEmNS_5mojom10CacheStateE(i64, i32) local_unnamed_addr #4 align 2 {
  switch i32 %1, label %6 [
    i32 0, label %4
    i32 2, label %3
  ]

3:                                                ; preds = %2
  br label %6

4:                                                ; preds = %2
  %5 = add i64 %0, 300
  br label %6

6:                                                ; preds = %2, %4, %3
  %7 = phi i64 [ %5, %4 ], [ 300, %3 ], [ 0, %2 ]
  ret i64 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink25PerformanceResourceTiming15GetTransferSizeEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %9 [
    i32 0, label %5
    i32 2, label %4
  ]

4:                                                ; preds = %1
  br label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 13
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 300
  br label %9

9:                                                ; preds = %1, %4, %5
  %10 = phi i64 [ %8, %5 ], [ 300, %4 ], [ 0, %1 ]
  ret i64 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink25PerformanceResourceTiming18GetEncodedBodySizeEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 13
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink25PerformanceResourceTiming18GetDecodedBodySizeEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 14
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink25PerformanceResourceTiming13initiatorTypeEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #11
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink25PerformanceResourceTiming22AlpnNegotiatedProtocolEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #11
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink25PerformanceResourceTiming14ConnectionInfoEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #11
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink25PerformanceResourceTiming18GetNextHopProtocolERKN3WTF12AtomicStringES4_(%"class.blink::PerformanceResourceTiming"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %14, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %25

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

25:                                               ; preds = %17, %13
  %26 = phi i64 [ %24, %17 ], [ %15, %13 ]
  %27 = phi i32 [ %20, %17 ], [ 0, %13 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  %29 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %26, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 7, i32* %32, align 8
  %33 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %34 = select i1 %33, %"class.WTF::AtomicString"* %2, %"class.WTF::AtomicString"* %1
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %25
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %61

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #11
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %44
  call void @llvm.trap() #11
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %61

56:                                               ; preds = %25
  %57 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %58, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %60 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %59, i64* %60, align 8
  br label %70

61:                                               ; preds = %39, %54
  %62 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %68 = bitcast i8** %67 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %68, align 8
  %69 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %70

70:                                               ; preds = %61, %56
  %71 = phi i64 [ %69, %61 ], [ %59, %56 ]
  %72 = phi i8* [ %62, %61 ], [ %57, %56 ]
  %73 = phi i32 [ %65, %61 ], [ 0, %56 ]
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %73, i32* %74, align 8
  %75 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11
  %76 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %71, i64* %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 7, i32* %78, align 8
  %79 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  br i1 %79, label %91, label %80

80:                                               ; preds = %70
  %81 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %82 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %82, i64 23
  %84 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %83, align 8
  %85 = call zeroext i1 %84(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %85, label %126, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 10
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, -10
  %90 = icmp ult i32 %89, 4
  br i1 %90, label %91, label %126

91:                                               ; preds = %86, %70
  %92 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0) #11
  %93 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  br i1 %38, label %125, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %109

109:                                              ; preds = %105, %108
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11
  br label %125

125:                                              ; preds = %91, %109, %121, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  br label %126

126:                                              ; preds = %80, %86, %125
  %127 = phi i64 [ %95, %125 ], [ %37, %80 ], [ %37, %86 ]
  %128 = inttoptr i64 %127 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %128
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink25PerformanceResourceTiming15nextHopProtocolEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)***
  %6 = load %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)** %6, i64 20
  %8 = load %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)** %7, align 8
  %9 = tail call %"class.WTF::StringImpl"* %8(%"class.blink::PerformanceResourceTiming"* %0) #11
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)*** %5, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)** %12, i64 21
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)** %13, align 8
  %15 = tail call %"class.WTF::StringImpl"* %14(%"class.blink::PerformanceResourceTiming"* %0) #11
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  %17 = call %"class.WTF::StringImpl"* @_ZNK5blink25PerformanceResourceTiming18GetNextHopProtocolERKN3WTF12AtomicStringES4_(%"class.blink::PerformanceResourceTiming"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3)
  %18 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #11
  br label %32

32:                                               ; preds = %1, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %33 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %47

47:                                               ; preds = %32, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret %"class.WTF::StringImpl"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming11workerStartEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %3, i64 22
  %5 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call %"class.blink::ResourceLoadTiming"* %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  %7 = icmp eq %"class.blink::ResourceLoadTiming"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %6, i64 0, i32 8, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %14 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %14, i64 23
  %16 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 10
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -10
  %22 = icmp ult i32 %21, 4
  br i1 %22, label %34, label %23

23:                                               ; preds = %12, %18
  %24 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* %9, align 8
  %27 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %28 = load i8, i8* %27, align 1, !range !3
  %29 = icmp ne i8 %28, 0
  %30 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp ne i8 %31, 0
  %33 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %25, i64 %26, i1 zeroext %29, i1 zeroext %32) #11
  br label %34

34:                                               ; preds = %1, %8, %18, %23
  %35 = phi double [ %33, %23 ], [ 0.000000e+00, %18 ], [ 0.000000e+00, %8 ], [ 0.000000e+00, %1 ]
  ret double %35
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming11WorkerReadyEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %3, i64 22
  %5 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call %"class.blink::ResourceLoadTiming"* %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  %7 = icmp eq %"class.blink::ResourceLoadTiming"* %6, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %6, i64 0, i32 9, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %16 = load i8, i8* %15, align 1, !range !3
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = icmp ne i8 %19, 0
  %21 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %14, i64 %10, i1 zeroext %17, i1 zeroext %20) #11
  br label %22

22:                                               ; preds = %1, %8, %12
  %23 = phi double [ %21, %12 ], [ 0.000000e+00, %8 ], [ 0.000000e+00, %1 ]
  ret double %23
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming13redirectStartEv(%"class.blink::PerformanceResourceTiming"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 17
  %7 = load i8, i8* %6, align 2, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %34, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %11 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %11, i64 22
  %13 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %12, align 8
  %14 = tail call %"class.blink::ResourceLoadTiming"* %13(%"class.blink::PerformanceResourceTiming"* %0) #11
  %15 = icmp eq %"class.blink::ResourceLoadTiming"* %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %14, i64 0, i32 9, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %24 = load i8, i8* %23, align 1, !range !3
  %25 = icmp ne i8 %24, 0
  %26 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp ne i8 %27, 0
  %29 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %22, i64 %18, i1 zeroext %25, i1 zeroext %28) #11
  %30 = fcmp oeq double %29, 0.000000e+00
  br i1 %30, label %31, label %34

31:                                               ; preds = %9, %16, %20
  %32 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::PerformanceEntry"*
  %33 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %32) #11
  br label %34

34:                                               ; preds = %1, %5, %20, %31
  %35 = phi double [ %33, %31 ], [ %29, %20 ], [ 0.000000e+00, %5 ], [ 0.000000e+00, %1 ]
  ret double %35
}

declare double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming11redirectEndEv(%"class.blink::PerformanceResourceTiming"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 17
  %7 = load i8, i8* %6, align 2, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %13 = load i8, i8* %12, align 1, !range !3
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = icmp ne i8 %16, 0
  %18 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %11, i64 %3, i1 zeroext %14, i1 zeroext %17) #11
  br label %19

19:                                               ; preds = %1, %5, %9
  %20 = phi double [ %18, %9 ], [ 0.000000e+00, %5 ], [ 0.000000e+00, %1 ]
  ret double %20
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming10fetchStartEv(%"class.blink::PerformanceResourceTiming"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %3, i64 22
  %5 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call %"class.blink::ResourceLoadTiming"* %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  %7 = icmp eq %"class.blink::ResourceLoadTiming"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::PerformanceEntry"*
  %10 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %9) #11
  br label %51

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 8, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %6, i64 0, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp ne i8 %21, 0
  %23 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %24 = load i8, i8* %23, align 8, !range !3
  %25 = icmp ne i8 %24, 0
  %26 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %17, i64 %19, i1 zeroext %22, i1 zeroext %25) #11
  br label %51

27:                                               ; preds = %11
  %28 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %29 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %28, i64 22
  %30 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %29, align 8
  %31 = tail call %"class.blink::ResourceLoadTiming"* %30(%"class.blink::PerformanceResourceTiming"* %0) #11
  %32 = icmp eq %"class.blink::ResourceLoadTiming"* %31, null
  br i1 %32, label %48, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %31, i64 0, i32 9, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %41 = load i8, i8* %40, align 1, !range !3
  %42 = icmp ne i8 %41, 0
  %43 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %44 = load i8, i8* %43, align 8, !range !3
  %45 = icmp ne i8 %44, 0
  %46 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %39, i64 %35, i1 zeroext %42, i1 zeroext %45) #11
  %47 = fcmp oeq double %46, 0.000000e+00
  br i1 %47, label %48, label %51

48:                                               ; preds = %27, %33, %37
  %49 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::PerformanceEntry"*
  %50 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %49) #11
  br label %51

51:                                               ; preds = %37, %48, %15, %8
  %52 = phi double [ %50, %48 ], [ %46, %37 ], [ %26, %15 ], [ %10, %8 ]
  ret double %52
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming17domainLookupStartEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %34

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %9 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %9, i64 22
  %11 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %10, align 8
  %12 = tail call %"class.blink::ResourceLoadTiming"* %11(%"class.blink::PerformanceResourceTiming"* %0) #11
  %13 = icmp eq %"class.blink::ResourceLoadTiming"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %12, i64 0, i32 4, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %7, %14
  %19 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to double (%"class.blink::PerformanceResourceTiming"*)***
  %20 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %19, align 8
  %21 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %20, i64 17
  %22 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %21, align 8
  %23 = tail call double %22(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %34

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %28 = load i8, i8* %27, align 1, !range !3
  %29 = icmp ne i8 %28, 0
  %30 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp ne i8 %31, 0
  %33 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %26, i64 %16, i1 zeroext %29, i1 zeroext %32) #11
  br label %34

34:                                               ; preds = %18, %24, %1
  %35 = phi double [ 0.000000e+00, %1 ], [ %23, %18 ], [ %33, %24 ]
  ret double %35
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming15domainLookupEndEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %59

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %9 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %9, i64 22
  %11 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %10, align 8
  %12 = tail call %"class.blink::ResourceLoadTiming"* %11(%"class.blink::PerformanceResourceTiming"* %0) #11
  %13 = icmp eq %"class.blink::ResourceLoadTiming"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %12, i64 0, i32 5, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %49

18:                                               ; preds = %7, %14
  %19 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %19, i64 23
  %21 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %22, label %23, label %59

23:                                               ; preds = %18
  %24 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %25 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %24, i64 22
  %26 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %25, align 8
  %27 = tail call %"class.blink::ResourceLoadTiming"* %26(%"class.blink::PerformanceResourceTiming"* %0) #11
  %28 = icmp eq %"class.blink::ResourceLoadTiming"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %27, i64 0, i32 4, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %29, %23
  %34 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to double (%"class.blink::PerformanceResourceTiming"*)***
  %35 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %34, align 8
  %36 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %35, i64 17
  %37 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %36, align 8
  %38 = tail call double %37(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %59

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %43 = load i8, i8* %42, align 1, !range !3
  %44 = icmp ne i8 %43, 0
  %45 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %46 = load i8, i8* %45, align 8, !range !3
  %47 = icmp ne i8 %46, 0
  %48 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %41, i64 %31, i1 zeroext %44, i1 zeroext %47) #11
  br label %59

49:                                               ; preds = %14
  %50 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %53 = load i8, i8* %52, align 1, !range !3
  %54 = icmp ne i8 %53, 0
  %55 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %56 = load i8, i8* %55, align 8, !range !3
  %57 = icmp ne i8 %56, 0
  %58 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %51, i64 %16, i1 zeroext %54, i1 zeroext %57) #11
  br label %59

59:                                               ; preds = %39, %33, %18, %49, %1
  %60 = phi double [ 0.000000e+00, %1 ], [ %58, %49 ], [ 0.000000e+00, %18 ], [ %38, %33 ], [ %48, %39 ]
  ret double %60
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming12connectStartEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %40

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %9 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %9, i64 22
  %11 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %10, align 8
  %12 = tail call %"class.blink::ResourceLoadTiming"* %11(%"class.blink::PerformanceResourceTiming"* %0) #11
  %13 = icmp eq %"class.blink::ResourceLoadTiming"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %12, i64 0, i32 6, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %19, i64 24
  %21 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %22, label %23, label %25

23:                                               ; preds = %7, %14, %18
  %24 = tail call double @_ZNK5blink25PerformanceResourceTiming15domainLookupEndEv(%"class.blink::PerformanceResourceTiming"* %0)
  br label %40

25:                                               ; preds = %18
  %26 = load i64, i64* %15, align 8
  %27 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %12, i64 0, i32 5, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  %30 = select i1 %29, i64 %26, i64 %28
  %31 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %34 = load i8, i8* %33, align 1, !range !3
  %35 = icmp ne i8 %34, 0
  %36 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %37 = load i8, i8* %36, align 8, !range !3
  %38 = icmp ne i8 %37, 0
  %39 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %32, i64 %30, i1 zeroext %35, i1 zeroext %38) #11
  br label %40

40:                                               ; preds = %23, %25, %1
  %41 = phi double [ 0.000000e+00, %1 ], [ %24, %23 ], [ %39, %25 ]
  ret double %41
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming10connectEndEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %71

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %9 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %9, i64 22
  %11 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %10, align 8
  %12 = tail call %"class.blink::ResourceLoadTiming"* %11(%"class.blink::PerformanceResourceTiming"* %0) #11
  %13 = icmp eq %"class.blink::ResourceLoadTiming"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %12, i64 0, i32 7, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %19, i64 24
  %21 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %22, label %23, label %60

23:                                               ; preds = %7, %14, %18
  %24 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %24, i64 23
  %26 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %27, label %28, label %71

28:                                               ; preds = %23
  %29 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %30 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %29, i64 22
  %31 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %30, align 8
  %32 = tail call %"class.blink::ResourceLoadTiming"* %31(%"class.blink::PerformanceResourceTiming"* %0) #11
  %33 = icmp eq %"class.blink::ResourceLoadTiming"* %32, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %32, i64 0, i32 6, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %39, i64 24
  %41 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %42, label %43, label %45

43:                                               ; preds = %38, %34, %28
  %44 = tail call double @_ZNK5blink25PerformanceResourceTiming15domainLookupEndEv(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %71

45:                                               ; preds = %38
  %46 = load i64, i64* %35, align 8
  %47 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %32, i64 0, i32 5, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  %50 = select i1 %49, i64 %46, i64 %48
  %51 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %54 = load i8, i8* %53, align 1, !range !3
  %55 = icmp ne i8 %54, 0
  %56 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %57 = load i8, i8* %56, align 8, !range !3
  %58 = icmp ne i8 %57, 0
  %59 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %52, i64 %50, i1 zeroext %55, i1 zeroext %58) #11
  br label %71

60:                                               ; preds = %18
  %61 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = load i64, i64* %15, align 8
  %64 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %65 = load i8, i8* %64, align 1, !range !3
  %66 = icmp ne i8 %65, 0
  %67 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %68 = load i8, i8* %67, align 8, !range !3
  %69 = icmp ne i8 %68, 0
  %70 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %62, i64 %63, i1 zeroext %66, i1 zeroext %69) #11
  br label %71

71:                                               ; preds = %45, %43, %23, %60, %1
  %72 = phi double [ 0.000000e+00, %1 ], [ %70, %60 ], [ 0.000000e+00, %23 ], [ %44, %43 ], [ %59, %45 ]
  ret double %72
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming21secureConnectionStartEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %49

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 19
  %9 = load i8, i8* %8, align 4, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %49, label %11

11:                                               ; preds = %7
  %12 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %12, i64 24
  %14 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to double (%"class.blink::PerformanceResourceTiming"*)***
  %18 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %17, align 8
  %19 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %18, i64 17
  %20 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %19, align 8
  %21 = tail call double %20(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %49

22:                                               ; preds = %11
  %23 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %24 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %24, i64 22
  %26 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %25, align 8
  %27 = tail call %"class.blink::ResourceLoadTiming"* %26(%"class.blink::PerformanceResourceTiming"* %0) #11
  %28 = icmp eq %"class.blink::ResourceLoadTiming"* %27, null
  br i1 %28, label %43, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %27, i64 0, i32 16, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %37 = load i8, i8* %36, align 1, !range !3
  %38 = icmp ne i8 %37, 0
  %39 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %40 = load i8, i8* %39, align 8, !range !3
  %41 = icmp ne i8 %40, 0
  %42 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %35, i64 %31, i1 zeroext %38, i1 zeroext %41) #11
  br label %49

43:                                               ; preds = %22, %29
  %44 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to double (%"class.blink::PerformanceResourceTiming"*)***
  %45 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %44, align 8
  %46 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %45, i64 17
  %47 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %46, align 8
  %48 = tail call double %47(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %49

49:                                               ; preds = %33, %43, %1, %7, %16
  %50 = phi double [ %21, %16 ], [ 0.000000e+00, %7 ], [ 0.000000e+00, %1 ], [ %42, %33 ], [ %48, %43 ]
  ret double %50
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming12requestStartEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %28

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %9 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %9, i64 22
  %11 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %10, align 8
  %12 = tail call %"class.blink::ResourceLoadTiming"* %11(%"class.blink::PerformanceResourceTiming"* %0) #11
  %13 = icmp eq %"class.blink::ResourceLoadTiming"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = tail call double @_ZNK5blink25PerformanceResourceTiming10connectEndEv(%"class.blink::PerformanceResourceTiming"* %0)
  br label %28

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %12, i64 0, i32 12, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %22 = load i8, i8* %21, align 1, !range !3
  %23 = icmp ne i8 %22, 0
  %24 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %25 = load i8, i8* %24, align 8, !range !3
  %26 = icmp ne i8 %25, 0
  %27 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %18, i64 %20, i1 zeroext %23, i1 zeroext %26) #11
  br label %28

28:                                               ; preds = %14, %16, %1
  %29 = phi double [ 0.000000e+00, %1 ], [ %27, %16 ], [ %15, %14 ]
  ret double %29
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming13responseStartEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %83

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %9 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %9, i64 22
  %11 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %10, align 8
  %12 = tail call %"class.blink::ResourceLoadTiming"* %11(%"class.blink::PerformanceResourceTiming"* %0) #11
  %13 = icmp eq %"class.blink::ResourceLoadTiming"* %12, null
  br i1 %13, label %14, label %39

14:                                               ; preds = %7
  %15 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %15, i64 23
  %17 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %18, label %19, label %83

19:                                               ; preds = %14
  %20 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %21 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %20, i64 22
  %22 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %21, align 8
  %23 = tail call %"class.blink::ResourceLoadTiming"* %22(%"class.blink::PerformanceResourceTiming"* %0) #11
  %24 = icmp eq %"class.blink::ResourceLoadTiming"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = tail call double @_ZNK5blink25PerformanceResourceTiming10connectEndEv(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %83

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %23, i64 0, i32 12, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %33 = load i8, i8* %32, align 1, !range !3
  %34 = icmp ne i8 %33, 0
  %35 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp ne i8 %36, 0
  %38 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %29, i64 %31, i1 zeroext %34, i1 zeroext %37) #11
  br label %83

39:                                               ; preds = %7
  %40 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %12, i64 0, i32 14, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %72

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %12, i64 0, i32 15, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %72

47:                                               ; preds = %43
  %48 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %48, i64 23
  %50 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %51, label %52, label %83

52:                                               ; preds = %47
  %53 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %54 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %53, i64 22
  %55 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %54, align 8
  %56 = tail call %"class.blink::ResourceLoadTiming"* %55(%"class.blink::PerformanceResourceTiming"* %0) #11
  %57 = icmp eq %"class.blink::ResourceLoadTiming"* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = tail call double @_ZNK5blink25PerformanceResourceTiming10connectEndEv(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %83

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %56, i64 0, i32 12, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %66 = load i8, i8* %65, align 1, !range !3
  %67 = icmp ne i8 %66, 0
  %68 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %69 = load i8, i8* %68, align 8, !range !3
  %70 = icmp ne i8 %69, 0
  %71 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %62, i64 %64, i1 zeroext %67, i1 zeroext %70) #11
  br label %83

72:                                               ; preds = %39, %43
  %73 = phi i64 [ %45, %43 ], [ %41, %39 ]
  %74 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %77 = load i8, i8* %76, align 1, !range !3
  %78 = icmp ne i8 %77, 0
  %79 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %80 = load i8, i8* %79, align 8, !range !3
  %81 = icmp ne i8 %80, 0
  %82 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %75, i64 %73, i1 zeroext %78, i1 zeroext %81) #11
  br label %83

83:                                               ; preds = %72, %47, %58, %60, %27, %25, %14, %1
  %84 = phi double [ 0.000000e+00, %1 ], [ 0.000000e+00, %14 ], [ %38, %27 ], [ %26, %25 ], [ %82, %72 ], [ 0.000000e+00, %47 ], [ %71, %60 ], [ %59, %58 ]
  ret double %84
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink25PerformanceResourceTiming11responseEndEv(%"class.blink::PerformanceResourceTiming"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call double @_ZNK5blink25PerformanceResourceTiming13responseStartEv(%"class.blink::PerformanceResourceTiming"* %0)
  br label %17

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %11 = load i8, i8* %10, align 1, !range !3
  %12 = icmp ne i8 %11, 0
  %13 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp ne i8 %14, 0
  %16 = tail call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %9, i64 %3, i1 zeroext %12, i1 zeroext %15) #11
  br label %17

17:                                               ; preds = %7, %5
  %18 = phi double [ %6, %5 ], [ %16, %7 ]
  ret double %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink25PerformanceResourceTiming12transferSizeEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i64 (%"class.blink::PerformanceResourceTiming"*)***
  %9 = load i64 (%"class.blink::PerformanceResourceTiming"*)**, i64 (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %9, i64 25
  %11 = load i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %10, align 8
  %12 = tail call i64 %11(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ %12, %7 ], [ 0, %1 ]
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink25PerformanceResourceTiming15encodedBodySizeEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i64 (%"class.blink::PerformanceResourceTiming"*)***
  %9 = load i64 (%"class.blink::PerformanceResourceTiming"*)**, i64 (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %9, i64 26
  %11 = load i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %10, align 8
  %12 = tail call i64 %11(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ %12, %7 ], [ 0, %1 ]
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink25PerformanceResourceTiming15decodedBodySizeEv(%"class.blink::PerformanceResourceTiming"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %3 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %3, i64 23
  %5 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i64 (%"class.blink::PerformanceResourceTiming"*)***
  %9 = load i64 (%"class.blink::PerformanceResourceTiming"*)**, i64 (%"class.blink::PerformanceResourceTiming"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %9, i64 27
  %11 = load i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %10, align 8
  %12 = tail call i64 %11(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ %12, %7 ], [ 0, %1 ]
  ret i64 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink25PerformanceResourceTiming12serverTimingEv(%"class.blink::PerformanceResourceTiming"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 20
  ret %"class.blink::HeapVector"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector.4"* @_ZNK5blink25PerformanceResourceTiming12workerTimingEv(%"class.blink::PerformanceResourceTiming"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21
  ret %"class.blink::HeapVector.4"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25PerformanceResourceTiming14BuildJSONValueERNS_15V8ObjectBuilderE(%"class.blink::PerformanceResourceTiming"*, %"class.blink::V8ObjectBuilder"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::PerformanceEntry"*
  tail call void @_ZNK5blink16PerformanceEntry14BuildJSONValueERNS_15V8ObjectBuilderE(%"class.blink::PerformanceEntry"* %24, %"class.blink::V8ObjectBuilder"* dereferenceable(16) %1) #11
  %25 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 13, i32* %29, align 8
  %30 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %31 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)***
  %32 = load %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)** %32, i64 14
  %34 = load %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.WTF::StringImpl"* (%"class.blink::PerformanceResourceTiming"*)** %33, align 8
  %35 = tail call %"class.WTF::StringImpl"* %34(%"class.blink::PerformanceResourceTiming"* %0) #11
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %43

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %41, align 8
  %42 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddStringERKN3WTF10StringViewES4_(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  br label %64

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %46, i32* %50, align 8
  %51 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddStringERKN3WTF10StringViewES4_(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %43
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %43
  %61 = phi i32 [ %59, %58 ], [ %57, %43 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #11
  br label %64

64:                                               ; preds = %37, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  %65 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %67 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 15, i32* %69, align 8
  %70 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #11
  %71 = call %"class.WTF::StringImpl"* @_ZNK5blink25PerformanceResourceTiming15nextHopProtocolEv(%"class.blink::PerformanceResourceTiming"* %0)
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %73, label %79

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %74, align 8
  %75 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %76 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %77, align 8
  %78 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddStringERKN3WTF10StringViewES4_(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #11
  br label %100

79:                                               ; preds = %64
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 1
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %85 = bitcast i8** %84 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %82, i32* %86, align 8
  %87 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddStringERKN3WTF10StringViewES4_(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #11
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %79
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %79
  %97 = phi i32 [ %95, %94 ], [ %93, %79 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #11
  br label %100

100:                                              ; preds = %73, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  %101 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #11
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %103 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8** %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 11, i32* %105, align 8
  %106 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)***
  %107 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %106, align 8
  %108 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %107, i64 22
  %109 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %108, align 8
  %110 = call %"class.blink::ResourceLoadTiming"* %109(%"class.blink::PerformanceResourceTiming"* %0) #11
  %111 = icmp eq %"class.blink::ResourceLoadTiming"* %110, null
  br i1 %111, label %138, label %112

112:                                              ; preds = %100
  %113 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %110, i64 0, i32 8, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %138, label %116

116:                                              ; preds = %112
  %117 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %118 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %117, align 8
  %119 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %118, i64 23
  %120 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %119, align 8
  %121 = call zeroext i1 %120(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 10
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, -10
  %126 = icmp ult i32 %125, 4
  br i1 %126, label %138, label %127

127:                                              ; preds = %122, %116
  %128 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = load i64, i64* %113, align 8
  %131 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %132 = load i8, i8* %131, align 1, !range !3
  %133 = icmp ne i8 %132, 0
  %134 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %135 = load i8, i8* %134, align 8, !range !3
  %136 = icmp ne i8 %135, 0
  %137 = call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %129, i64 %130, i1 zeroext %133, i1 zeroext %136) #11
  br label %138

138:                                              ; preds = %100, %112, %122, %127
  %139 = phi double [ %137, %127 ], [ 0.000000e+00, %122 ], [ 0.000000e+00, %112 ], [ 0.000000e+00, %100 ]
  %140 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, double %139) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #11
  %141 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #11
  %142 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %143 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8** %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 13, i32* %145, align 8
  %146 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to double (%"class.blink::PerformanceResourceTiming"*)***
  %147 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %146, align 8
  %148 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %147, i64 15
  %149 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %148, align 8
  %150 = call double %149(%"class.blink::PerformanceResourceTiming"* %0) #11
  %151 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, double %150) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #11
  %152 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #11
  %153 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %154 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 11, i32* %156, align 8
  %157 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %146, align 8
  %158 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %157, i64 16
  %159 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %158, align 8
  %160 = call double %159(%"class.blink::PerformanceResourceTiming"* %0) #11
  %161 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, double %160) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #11
  %162 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #11
  %163 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %164 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8** %165, align 8
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 10, i32* %166, align 8
  %167 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %146, align 8
  %168 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %167, i64 17
  %169 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %168, align 8
  %170 = call double %169(%"class.blink::PerformanceResourceTiming"* %0) #11
  %171 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %10, double %170) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #11
  %172 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #11
  %173 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %174 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8** %175, align 8
  %176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 17, i32* %176, align 8
  %177 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i1 (%"class.blink::PerformanceResourceTiming"*)***
  %178 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %177, align 8
  %179 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %178, i64 23
  %180 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %179, align 8
  %181 = call zeroext i1 %180(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %181, label %182, label %207

182:                                              ; preds = %138
  %183 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %106, align 8
  %184 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %183, i64 22
  %185 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %184, align 8
  %186 = call %"class.blink::ResourceLoadTiming"* %185(%"class.blink::PerformanceResourceTiming"* %0) #11
  %187 = icmp eq %"class.blink::ResourceLoadTiming"* %186, null
  br i1 %187, label %192, label %188

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %186, i64 0, i32 4, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %197

192:                                              ; preds = %188, %182
  %193 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %146, align 8
  %194 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %193, i64 17
  %195 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %194, align 8
  %196 = call double %195(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %207

197:                                              ; preds = %188
  %198 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %201 = load i8, i8* %200, align 1, !range !3
  %202 = icmp ne i8 %201, 0
  %203 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %204 = load i8, i8* %203, align 8, !range !3
  %205 = icmp ne i8 %204, 0
  %206 = call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %199, i64 %190, i1 zeroext %202, i1 zeroext %205) #11
  br label %207

207:                                              ; preds = %138, %192, %197
  %208 = phi double [ 0.000000e+00, %138 ], [ %196, %192 ], [ %206, %197 ]
  %209 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, double %208) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #11
  %210 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #11
  %211 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %212 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i8** %213, align 8
  %214 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 15, i32* %214, align 8
  %215 = call double @_ZNK5blink25PerformanceResourceTiming15domainLookupEndEv(%"class.blink::PerformanceResourceTiming"* %0)
  %216 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %12, double %215) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %210) #11
  %217 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #11
  %218 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %219 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8** %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 12, i32* %221, align 8
  %222 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %177, align 8
  %223 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %222, i64 23
  %224 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %223, align 8
  %225 = call zeroext i1 %224(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %225, label %226, label %258

226:                                              ; preds = %207
  %227 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %106, align 8
  %228 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %227, i64 22
  %229 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %228, align 8
  %230 = call %"class.blink::ResourceLoadTiming"* %229(%"class.blink::PerformanceResourceTiming"* %0) #11
  %231 = icmp eq %"class.blink::ResourceLoadTiming"* %230, null
  br i1 %231, label %241, label %232

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %230, i64 0, i32 6, i32 0, i32 0
  %234 = load i64, i64* %233, align 8
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %241, label %236

236:                                              ; preds = %232
  %237 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %177, align 8
  %238 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %237, i64 24
  %239 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %238, align 8
  %240 = call zeroext i1 %239(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %240, label %241, label %243

241:                                              ; preds = %236, %232, %226
  %242 = call double @_ZNK5blink25PerformanceResourceTiming15domainLookupEndEv(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %258

243:                                              ; preds = %236
  %244 = load i64, i64* %233, align 8
  %245 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %230, i64 0, i32 5, i32 0, i32 0
  %246 = load i64, i64* %245, align 8
  %247 = icmp eq i64 %246, 0
  %248 = select i1 %247, i64 %244, i64 %246
  %249 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %250 = load i64, i64* %249, align 8
  %251 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %252 = load i8, i8* %251, align 1, !range !3
  %253 = icmp ne i8 %252, 0
  %254 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %255 = load i8, i8* %254, align 8, !range !3
  %256 = icmp ne i8 %255, 0
  %257 = call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %250, i64 %248, i1 zeroext %253, i1 zeroext %256) #11
  br label %258

258:                                              ; preds = %207, %241, %243
  %259 = phi double [ 0.000000e+00, %207 ], [ %242, %241 ], [ %257, %243 ]
  %260 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %13, double %259) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #11
  %261 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %261) #11
  %262 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %263 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8** %264, align 8
  %265 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 10, i32* %265, align 8
  %266 = call double @_ZNK5blink25PerformanceResourceTiming10connectEndEv(%"class.blink::PerformanceResourceTiming"* %0)
  %267 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %14, double %266) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %261) #11
  %268 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #11
  %269 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %270 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %269, i64* %270, align 8
  %271 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0), i8** %271, align 8
  %272 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 21, i32* %272, align 8
  %273 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %177, align 8
  %274 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %273, i64 23
  %275 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %274, align 8
  %276 = call zeroext i1 %275(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %276, label %277, label %316

277:                                              ; preds = %258
  %278 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 19
  %279 = load i8, i8* %278, align 4, !range !3
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %316, label %281

281:                                              ; preds = %277
  %282 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %177, align 8
  %283 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %282, i64 24
  %284 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %283, align 8
  %285 = call zeroext i1 %284(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %285, label %286, label %291

286:                                              ; preds = %281
  %287 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %146, align 8
  %288 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %287, i64 17
  %289 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %288, align 8
  %290 = call double %289(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %316

291:                                              ; preds = %281
  %292 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %106, align 8
  %293 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %292, i64 22
  %294 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %293, align 8
  %295 = call %"class.blink::ResourceLoadTiming"* %294(%"class.blink::PerformanceResourceTiming"* %0) #11
  %296 = icmp eq %"class.blink::ResourceLoadTiming"* %295, null
  br i1 %296, label %311, label %297

297:                                              ; preds = %291
  %298 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %295, i64 0, i32 16, i32 0, i32 0
  %299 = load i64, i64* %298, align 8
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %311, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %303 = load i64, i64* %302, align 8
  %304 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %305 = load i8, i8* %304, align 1, !range !3
  %306 = icmp ne i8 %305, 0
  %307 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %308 = load i8, i8* %307, align 8, !range !3
  %309 = icmp ne i8 %308, 0
  %310 = call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %303, i64 %299, i1 zeroext %306, i1 zeroext %309) #11
  br label %316

311:                                              ; preds = %297, %291
  %312 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %146, align 8
  %313 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %312, i64 17
  %314 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %313, align 8
  %315 = call double %314(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %316

316:                                              ; preds = %258, %277, %286, %301, %311
  %317 = phi double [ %290, %286 ], [ 0.000000e+00, %277 ], [ 0.000000e+00, %258 ], [ %310, %301 ], [ %315, %311 ]
  %318 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %15, double %317) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #11
  %319 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #11
  %320 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %321 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %320, i64* %321, align 8
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8** %322, align 8
  %323 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 12, i32* %323, align 8
  %324 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %177, align 8
  %325 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %324, i64 23
  %326 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %325, align 8
  %327 = call zeroext i1 %326(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %327, label %328, label %348

328:                                              ; preds = %316
  %329 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)**, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*** %106, align 8
  %330 = getelementptr inbounds %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %329, i64 22
  %331 = load %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)*, %"class.blink::ResourceLoadTiming"* (%"class.blink::PerformanceResourceTiming"*)** %330, align 8
  %332 = call %"class.blink::ResourceLoadTiming"* %331(%"class.blink::PerformanceResourceTiming"* %0) #11
  %333 = icmp eq %"class.blink::ResourceLoadTiming"* %332, null
  br i1 %333, label %334, label %336

334:                                              ; preds = %328
  %335 = call double @_ZNK5blink25PerformanceResourceTiming10connectEndEv(%"class.blink::PerformanceResourceTiming"* %0) #11
  br label %348

336:                                              ; preds = %328
  %337 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 5, i32 0, i32 0
  %338 = load i64, i64* %337, align 8
  %339 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %332, i64 0, i32 12, i32 0, i32 0
  %340 = load i64, i64* %339, align 8
  %341 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 18
  %342 = load i8, i8* %341, align 1, !range !3
  %343 = icmp ne i8 %342, 0
  %344 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 6
  %345 = load i8, i8* %344, align 8, !range !3
  %346 = icmp ne i8 %345, 0
  %347 = call double @_ZN5blink11Performance34MonotonicTimeToDOMHighResTimeStampEN4base9TimeTicksES2_bb(i64 %338, i64 %340, i1 zeroext %343, i1 zeroext %346) #11
  br label %348

348:                                              ; preds = %316, %334, %336
  %349 = phi double [ 0.000000e+00, %316 ], [ %347, %336 ], [ %335, %334 ]
  %350 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %16, double %349) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #11
  %351 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %351) #11
  %352 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %353 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %352, i64* %353, align 8
  %354 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8** %354, align 8
  %355 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 13, i32* %355, align 8
  %356 = call double @_ZNK5blink25PerformanceResourceTiming13responseStartEv(%"class.blink::PerformanceResourceTiming"* %0)
  %357 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %17, double %356) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %351) #11
  %358 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %358) #11
  %359 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %360 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %359, i64* %360, align 8
  %361 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i8** %361, align 8
  %362 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 11, i32* %362, align 8
  %363 = load double (%"class.blink::PerformanceResourceTiming"*)**, double (%"class.blink::PerformanceResourceTiming"*)*** %146, align 8
  %364 = getelementptr inbounds double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %363, i64 18
  %365 = load double (%"class.blink::PerformanceResourceTiming"*)*, double (%"class.blink::PerformanceResourceTiming"*)** %364, align 8
  %366 = call double %365(%"class.blink::PerformanceResourceTiming"* %0) #11
  %367 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %18, double %366) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %358) #11
  %368 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #11
  %369 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %370 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %369, i64* %370, align 8
  %371 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8** %371, align 8
  %372 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 12, i32* %372, align 8
  %373 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %177, align 8
  %374 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %373, i64 23
  %375 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %374, align 8
  %376 = call zeroext i1 %375(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %376, label %377, label %384

377:                                              ; preds = %348
  %378 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i64 (%"class.blink::PerformanceResourceTiming"*)***
  %379 = load i64 (%"class.blink::PerformanceResourceTiming"*)**, i64 (%"class.blink::PerformanceResourceTiming"*)*** %378, align 8
  %380 = getelementptr inbounds i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %379, i64 25
  %381 = load i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %380, align 8
  %382 = call i64 %381(%"class.blink::PerformanceResourceTiming"* %0) #11
  %383 = uitofp i64 %382 to double
  br label %384

384:                                              ; preds = %348, %377
  %385 = phi double [ %383, %377 ], [ 0.000000e+00, %348 ]
  %386 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %19, double %385) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #11
  %387 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %387) #11
  %388 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %389 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %388, i64* %389, align 8
  %390 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0), i8** %390, align 8
  %391 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 15, i32* %391, align 8
  %392 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %177, align 8
  %393 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %392, i64 23
  %394 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %393, align 8
  %395 = call zeroext i1 %394(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %395, label %396, label %403

396:                                              ; preds = %384
  %397 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i64 (%"class.blink::PerformanceResourceTiming"*)***
  %398 = load i64 (%"class.blink::PerformanceResourceTiming"*)**, i64 (%"class.blink::PerformanceResourceTiming"*)*** %397, align 8
  %399 = getelementptr inbounds i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %398, i64 26
  %400 = load i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %399, align 8
  %401 = call i64 %400(%"class.blink::PerformanceResourceTiming"* %0) #11
  %402 = uitofp i64 %401 to double
  br label %403

403:                                              ; preds = %384, %396
  %404 = phi double [ %402, %396 ], [ 0.000000e+00, %384 ]
  %405 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %20, double %404) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %387) #11
  %406 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %406) #11
  %407 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %408 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %407, i64* %408, align 8
  %409 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8** %409, align 8
  %410 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 15, i32* %410, align 8
  %411 = load i1 (%"class.blink::PerformanceResourceTiming"*)**, i1 (%"class.blink::PerformanceResourceTiming"*)*** %177, align 8
  %412 = getelementptr inbounds i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %411, i64 23
  %413 = load i1 (%"class.blink::PerformanceResourceTiming"*)*, i1 (%"class.blink::PerformanceResourceTiming"*)** %412, align 8
  %414 = call zeroext i1 %413(%"class.blink::PerformanceResourceTiming"* %0) #11
  br i1 %414, label %415, label %422

415:                                              ; preds = %403
  %416 = bitcast %"class.blink::PerformanceResourceTiming"* %0 to i64 (%"class.blink::PerformanceResourceTiming"*)***
  %417 = load i64 (%"class.blink::PerformanceResourceTiming"*)**, i64 (%"class.blink::PerformanceResourceTiming"*)*** %416, align 8
  %418 = getelementptr inbounds i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %417, i64 27
  %419 = load i64 (%"class.blink::PerformanceResourceTiming"*)*, i64 (%"class.blink::PerformanceResourceTiming"*)** %418, align 8
  %420 = call i64 %419(%"class.blink::PerformanceResourceTiming"* %0) #11
  %421 = uitofp i64 %420 to double
  br label %422

422:                                              ; preds = %403, %415
  %423 = phi double [ %421, %415 ], [ 0.000000e+00, %403 ]
  %424 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %21, double %423) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %406) #11
  %425 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %1, i64 0, i32 0
  %426 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %425, align 8
  %427 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %427) #11
  %428 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %429 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %428, i64* %429, align 8
  %430 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8** %430, align 8
  %431 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 12, i32* %431, align 8
  %432 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 20
  %433 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %426, i64 0, i32 1, i32 0, i32 0, i32 0
  %434 = load %"class.v8::Context"*, %"class.v8::Context"** %433, align 8
  %435 = icmp eq %"class.v8::Context"* %434, null
  br i1 %435, label %443, label %436

436:                                              ; preds = %422
  %437 = bitcast %"class.blink::ScriptState"* %426 to %"class.v8::internal::Isolate"**
  %438 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %437, align 8
  %439 = bitcast %"class.v8::Context"* %434 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %438, i64 %440) #11
  %442 = bitcast i64* %441 to %"class.v8::Context"*
  br label %443

443:                                              ; preds = %422, %436
  %444 = phi %"class.v8::Context"* [ %442, %436 ], [ null, %422 ]
  %445 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %444) #11
  %446 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %426, i64 0, i32 0
  %447 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %446, align 8
  %448 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16) %432, %"class.v8::Object"* %445, %"class.v8::Isolate"* %447) #11
  %449 = bitcast %"class.v8::Array"* %448 to %"class.v8::Value"*
  %450 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %446, align 8
  %451 = call %"class.v8::Value"* @_ZN5blink14FreezeV8ObjectEN2v85LocalINS0_5ValueEEEPNS0_7IsolateE(%"class.v8::Value"* %449, %"class.v8::Isolate"* %450) #11
  %452 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %425, align 8
  %453 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %452, i64 0, i32 1, i32 0, i32 0, i32 0
  %454 = load %"class.v8::Context"*, %"class.v8::Context"** %453, align 8
  %455 = icmp eq %"class.v8::Context"* %454, null
  br i1 %455, label %463, label %456

456:                                              ; preds = %443
  %457 = bitcast %"class.blink::ScriptState"* %452 to %"class.v8::internal::Isolate"**
  %458 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %457, align 8
  %459 = bitcast %"class.v8::Context"* %454 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %458, i64 %460) #11
  %462 = bitcast i64* %461 to %"class.v8::Context"*
  br label %463

463:                                              ; preds = %443, %456
  %464 = phi %"class.v8::Context"* [ %462, %456 ], [ null, %443 ]
  %465 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %464) #11
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %22, %"class.v8::Value"* %451) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %427) #11
  %466 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %466) #11
  %467 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %468 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %467, i64* %468, align 8
  %469 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8** %469, align 8
  %470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 12, i32* %470, align 8
  %471 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21
  %472 = load %"class.v8::Context"*, %"class.v8::Context"** %433, align 8
  %473 = icmp eq %"class.v8::Context"* %472, null
  br i1 %473, label %481, label %474

474:                                              ; preds = %463
  %475 = bitcast %"class.blink::ScriptState"* %426 to %"class.v8::internal::Isolate"**
  %476 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %475, align 8
  %477 = bitcast %"class.v8::Context"* %472 to i64*
  %478 = load i64, i64* %477, align 8
  %479 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %476, i64 %478) #11
  %480 = bitcast i64* %479 to %"class.v8::Context"*
  br label %481

481:                                              ; preds = %463, %474
  %482 = phi %"class.v8::Context"* [ %480, %474 ], [ null, %463 ]
  %483 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %482) #11
  %484 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %446, align 8
  %485 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_16PerformanceEntryEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector.4"* dereferenceable(16) %471, %"class.v8::Object"* %483, %"class.v8::Isolate"* %484) #11
  %486 = bitcast %"class.v8::Array"* %485 to %"class.v8::Value"*
  %487 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %446, align 8
  %488 = call %"class.v8::Value"* @_ZN5blink14FreezeV8ObjectEN2v85LocalINS0_5ValueEEEPNS0_7IsolateE(%"class.v8::Value"* %486, %"class.v8::Isolate"* %487) #11
  %489 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %425, align 8
  %490 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %489, i64 0, i32 1, i32 0, i32 0, i32 0
  %491 = load %"class.v8::Context"*, %"class.v8::Context"** %490, align 8
  %492 = icmp eq %"class.v8::Context"* %491, null
  br i1 %492, label %500, label %493

493:                                              ; preds = %481
  %494 = bitcast %"class.blink::ScriptState"* %489 to %"class.v8::internal::Isolate"**
  %495 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %494, align 8
  %496 = bitcast %"class.v8::Context"* %491 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %495, i64 %497) #11
  %499 = bitcast i64* %498 to %"class.v8::Context"*
  br label %500

500:                                              ; preds = %481, %493
  %501 = phi %"class.v8::Context"* [ %499, %493 ], [ null, %481 ]
  %502 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %501) #11
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %23, %"class.v8::Value"* %488) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %466) #11
  ret void
}

declare void @_ZNK5blink16PerformanceEntry14BuildJSONValueERNS_15V8ObjectBuilderE(%"class.blink::PerformanceEntry"*, %"class.blink::V8ObjectBuilder"* dereferenceable(16)) unnamed_addr #2

declare dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddStringERKN3WTF10StringViewES4_(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), double) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN5blink14FreezeV8ObjectEN2v85LocalINS0_5ValueEEEPNS0_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25PerformanceResourceTiming19AddPerformanceEntryEN4mojo9StructPtrINS_5mojom5blink24PerformanceMarkOrMeasureEEE(%"class.blink::PerformanceResourceTiming"*, %"class.mojo::StructPtr.314"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::NonThrowableExceptionState", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = bitcast %"class.blink::NonThrowableExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 88, i1 false)
  call void @_ZN5blink26NonThrowableExceptionStateC1Ev(%"class.blink::NonThrowableExceptionState"* nonnull %5) #11
  %8 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.mojo::StructPtr.314", %"class.mojo::StructPtr.314"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::mojom::blink::PerformanceMarkOrMeasure"*, %"class.blink::mojom::blink::PerformanceMarkOrMeasure"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::PerformanceMarkOrMeasure", %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 acquire, align 4
  %18 = and i32 %17, 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %15
  %21 = load atomic i32, i32* %16 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #11
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %24
  call void @llvm.trap() #11
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %38

36:                                               ; preds = %15
  %37 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %13) #11
  br label %38

38:                                               ; preds = %2, %20, %34, %36
  %39 = phi %"class.WTF::StringImpl"* [ %37, %36 ], [ %13, %20 ], [ %13, %34 ], [ null, %2 ]
  %40 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %41 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  store i64 %40, i64* %41, align 8
  %42 = call %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9NullValueEv() #11
  %43 = ptrtoint %"class.blink::SerializedScriptValue"* %42 to i64
  %44 = load %"class.blink::mojom::blink::PerformanceMarkOrMeasure"*, %"class.blink::mojom::blink::PerformanceMarkOrMeasure"** %10, align 8
  %45 = getelementptr inbounds %"class.blink::mojom::blink::PerformanceMarkOrMeasure", %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* %44, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !3
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %68, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.blink::mojom::blink::PerformanceMarkOrMeasure", %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* %44, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = call i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %49) #11
  %51 = load %"class.blink::mojom::blink::PerformanceMarkOrMeasure"*, %"class.blink::mojom::blink::PerformanceMarkOrMeasure"** %10, align 8
  %52 = getelementptr inbounds %"class.blink::mojom::blink::PerformanceMarkOrMeasure", %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* %51, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 8, !range !3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %56, !prof !2

55:                                               ; preds = %48
  call void @llvm.trap() #11
  unreachable

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.blink::mojom::blink::PerformanceMarkOrMeasure", %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* %51, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %57) #11
  %59 = call %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateEPKcm(i8* %50, i64 %58) #11
  %60 = ptrtoint %"class.blink::SerializedScriptValue"* %59 to i64
  %61 = icmp eq %"class.blink::SerializedScriptValue"* %42, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw sub i32* %63, i32 1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %42) #11
  %67 = bitcast %"class.blink::SerializedScriptValue"* %42 to i8*
  call void @free(i8* %67) #11
  br label %68

68:                                               ; preds = %38, %66, %62, %56
  %69 = phi i64 [ %43, %38 ], [ %60, %56 ], [ %60, %62 ], [ %60, %66 ]
  %70 = load %"class.blink::mojom::blink::PerformanceMarkOrMeasure"*, %"class.blink::mojom::blink::PerformanceMarkOrMeasure"** %10, align 8
  %71 = getelementptr inbounds %"class.blink::mojom::blink::PerformanceMarkOrMeasure", %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* %70, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %73 [
    i32 0, label %75
    i32 1, label %125
  ]

73:                                               ; preds = %68
  %74 = inttoptr i64 %69 to %"class.blink::SerializedScriptValue"*
  br label %179

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21, i32 0
  %77 = getelementptr inbounds %"class.blink::mojom::blink::PerformanceMarkOrMeasure", %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* %70, i64 0, i32 2
  %78 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #11
  %79 = bitcast i8* %78 to %"class.blink::PerformanceMark"*
  %80 = load double, double* %77, align 8
  %81 = inttoptr i64 %69 to %"class.blink::SerializedScriptValue"*
  %82 = icmp eq i64 %69, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 1 monotonic
  %86 = icmp sgt i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0)) #11
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #11
  br label %90

90:                                               ; preds = %75, %83, %87
  %91 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %5, i64 0, i32 0
  call void @_ZN5blink15PerformanceMarkC1ERKN3WTF12AtomicStringEdN4base9TimeTicksE13scoped_refptrINS_21SerializedScriptValueEERNS_14ExceptionStateE(%"class.blink::PerformanceMark"* %79, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, double %80, i64 0, %"class.blink::SerializedScriptValue"* %81, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %91) #11
  %92 = getelementptr inbounds i8, i8* %78, i64 -4
  %93 = bitcast i8* %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = or i16 %94, 1
  store atomic i16 %95, i16* %93 release, align 2
  %96 = ptrtoint i8* %78 to i64
  %97 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %102, label %111, !prof !2

102:                                              ; preds = %90
  %103 = add i32 %98, 1
  %104 = lshr i32 %98, 2
  %105 = add i32 %103, %104
  %106 = icmp ugt i32 %105, 4
  %107 = select i1 %106, i32 %105, i32 4
  %108 = icmp ugt i32 %107, %103
  %109 = select i1 %108, i32 %107, i32 %103
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.7"* %76, i32 %109) #11
  %110 = load i32, i32* %97, align 4
  br label %111

111:                                              ; preds = %102, %90
  %112 = phi i32 [ %110, %102 ], [ %98, %90 ]
  %113 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %76, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.blink::Member.10"*, %"class.blink::Member.10"** %113, align 8
  %115 = zext i32 %112 to i64
  %116 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %114, i64 %115
  %117 = bitcast %"class.blink::Member.10"* %116 to i64*
  store atomic i64 %96, i64* %117 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %111
  %121 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #11
  br label %122

122:                                              ; preds = %111, %120
  %123 = load i32, i32* %97, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %97, align 4
  br label %179

125:                                              ; preds = %68
  %126 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21, i32 0
  %127 = getelementptr inbounds %"class.blink::mojom::blink::PerformanceMarkOrMeasure", %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* %70, i64 0, i32 2
  %128 = load double, double* %127, align 8
  %129 = getelementptr inbounds %"class.blink::mojom::blink::PerformanceMarkOrMeasure", %"class.blink::mojom::blink::PerformanceMarkOrMeasure"* %70, i64 0, i32 3
  %130 = load double, double* %129, align 8
  %131 = fadd double %128, %130
  %132 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #11
  %133 = bitcast i8* %132 to %"class.blink::PerformanceMeasure"*
  %134 = load double, double* %127, align 8
  %135 = inttoptr i64 %69 to %"class.blink::SerializedScriptValue"*
  %136 = icmp eq i64 %69, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %125
  %138 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw add i32* %138, i32 1 monotonic
  %140 = icmp sgt i32 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0)) #11
  %143 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #11
  br label %144

144:                                              ; preds = %125, %137, %141
  %145 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %5, i64 0, i32 0
  call void @_ZN5blink18PerformanceMeasureC1EPNS_11ScriptStateERKN3WTF12AtomicStringEdd13scoped_refptrINS_21SerializedScriptValueEERNS_14ExceptionStateE(%"class.blink::PerformanceMeasure"* %133, %"class.blink::ScriptState"* nonnull inttoptr (i64 -6148914691236517206 to %"class.blink::ScriptState"*), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, double %134, double %131, %"class.blink::SerializedScriptValue"* %135, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %145) #11
  %146 = getelementptr inbounds i8, i8* %132, i64 -4
  %147 = bitcast i8* %146 to i16*
  %148 = load atomic i16, i16* %147 monotonic, align 2
  %149 = or i16 %148, 1
  store atomic i16 %149, i16* %147 release, align 2
  %150 = ptrtoint i8* %132 to i64
  %151 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = icmp eq i32 %152, %154
  br i1 %155, label %156, label %165, !prof !2

156:                                              ; preds = %144
  %157 = add i32 %152, 1
  %158 = lshr i32 %152, 2
  %159 = add i32 %157, %158
  %160 = icmp ugt i32 %159, 4
  %161 = select i1 %160, i32 %159, i32 4
  %162 = icmp ugt i32 %161, %157
  %163 = select i1 %162, i32 %161, i32 %157
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.7"* %126, i32 %163) #11
  %164 = load i32, i32* %151, align 4
  br label %165

165:                                              ; preds = %156, %144
  %166 = phi i32 [ %164, %156 ], [ %152, %144 ]
  %167 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %126, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.blink::Member.10"*, %"class.blink::Member.10"** %167, align 8
  %169 = zext i32 %166 to i64
  %170 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %168, i64 %169
  %171 = bitcast %"class.blink::Member.10"* %170 to i64*
  store atomic i64 %150, i64* %171 monotonic, align 8
  %172 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %165
  %175 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %132) #11
  br label %176

176:                                              ; preds = %165, %174
  %177 = load i32, i32* %151, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %151, align 4
  br label %179

179:                                              ; preds = %73, %176, %122
  %180 = phi %"class.blink::SerializedScriptValue"* [ %74, %73 ], [ %135, %176 ], [ %81, %122 ]
  %181 = icmp eq i64 %69, 0
  br i1 %181, label %188, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw sub i32* %183, i32 1 acq_rel
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %180) #11
  %187 = inttoptr i64 %69 to i8*
  call void @free(i8* %187) #11
  br label %188

188:                                              ; preds = %179, %182, %186
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #11
  br label %204

204:                                              ; preds = %188, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  %205 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %205, align 8
  %206 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %5, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %207 = load i64*, i64** %206, align 8
  %208 = icmp eq i64* %207, null
  br i1 %208, label %219, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %5, i64 0, i32 0, i32 3
  %211 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %210, align 8
  %212 = bitcast %"class.v8::Isolate"* %211 to %"class.v8::internal::Isolate"*
  %213 = load i64, i64* %207, align 8
  %214 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %212, i64 %213) #11
  %215 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %211) #11
  br i1 %215, label %219, label %216

216:                                              ; preds = %209
  %217 = bitcast i64* %214 to %"class.v8::Value"*
  %218 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %211, %"class.v8::Value"* %217) #11
  br label %219

219:                                              ; preds = %216, %209, %204
  %220 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #11
  br label %236

236:                                              ; preds = %219, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink26NonThrowableExceptionStateC1Ev(%"class.blink::NonThrowableExceptionState"*) unnamed_addr #2

declare %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9NullValueEv() local_unnamed_addr #2

declare %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateEPKcm(i8*, i64) local_unnamed_addr #2

declare i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #2

declare i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N5blink25PerformanceResourceTiming19AddPerformanceEntryEN4mojo9StructPtrINS_5mojom5blink24PerformanceMarkOrMeasureEEE(%"class.blink::PerformanceResourceTiming"*, %"class.mojo::StructPtr.314"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 -1, i32 15
  %4 = bitcast i8* %3 to %"class.blink::PerformanceResourceTiming"*
  tail call void @_ZN5blink25PerformanceResourceTiming19AddPerformanceEntryEN4mojo9StructPtrINS_5mojom5blink24PerformanceMarkOrMeasureEEE(%"class.blink::PerformanceResourceTiming"* %4, %"class.mojo::StructPtr.314"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25PerformanceResourceTiming5TraceEPNS_7VisitorE(%"class.blink::PerformanceResourceTiming"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 20
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23PerformanceServerTimingEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 21
  %20 = bitcast %"class.blink::HeapVector.4"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  %23 = bitcast %"class.blink::HeapVector.4"* %19 to i8**
  %24 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, i64 11
  %26 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %1, i8** %23) #11
  br i1 %22, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %33

33:                                               ; preds = %18, %27
  %34 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 22
  %35 = bitcast %"class.blink::HeapMojoReceiver"* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = inttoptr i64 %36 to i8*
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv) #11
  br label %44

44:                                               ; preds = %33, %38
  %45 = getelementptr inbounds %"class.blink::PerformanceResourceTiming", %"class.blink::PerformanceResourceTiming"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %45, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink25PerformanceResourceTiming18GetWrapperTypeInfoEv(%"class.blink::PerformanceResourceTiming"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink25PerformanceResourceTiming18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare double @_ZNK5blink16PerformanceEntry8durationEv(%"class.blink::PerformanceEntry"*) unnamed_addr #2

declare void @_ZN5blink16PerformanceEntry30ToMojoPerformanceMarkOrMeasureEv(%"class.mojo::StructPtr.314"* sret, %"class.blink::PerformanceEntry"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([208 x i8], [208 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16HeapMojoReceiverINS1_5mojom5blink21WorkerTimingContainerENS1_25PerformanceResourceTimingELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25PerformanceResourceTimingEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %14, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 32
  %4 = bitcast i8* %3 to %"class.mojo::internal::BindingStateBase"*
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %4) #11
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %4) #11
  %5 = bitcast i8* %0 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE(%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.439"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25PerformanceResourceTimingEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %14, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25PerformanceResourceTimingEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PerformanceResourceTiming"*
  %4 = bitcast i8* %1 to void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::Visitor"*)**, void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::Visitor"*)*, void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::Visitor"*)*, void (%"class.blink::PerformanceResourceTiming"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PerformanceResourceTiming"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev(%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %3) #11
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %3) #11
  %4 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %4) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev(%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %3) #11
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %3) #11
  %4 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv(%"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %2) #11
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15MessageReceiverD2Ev(%"class.mojo::MessageReceiver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::HeapMojoReceiver<blink::mojom::blink::WorkerTimingContainer, blink::PerformanceResourceTiming, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #11
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !2

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #11
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #11
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7Wrapper18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

declare void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::ContextLifecycleNotifier"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16HeapMojoReceiverINS_5mojom5blink21WorkerTimingContainerENS_25PerformanceResourceTimingELNS_19HeapMojoWrapperModeE0EE7Wrapper18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %1, i64 -2
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 1
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %1, i64 32
  %24 = bitcast i8* %23 to %"class.mojo::internal::BindingStateBase"*
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %24) #11
  br label %25

25:                                               ; preds = %16, %11, %2, %22
  %26 = phi i1 [ true, %22 ], [ false, %16 ], [ false, %2 ], [ false, %11 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #11
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair"* %28, null
  %30 = icmp ne %"struct.std::__1::pair"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !7

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #11
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !7

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #11
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair"* %60, null
  %62 = icmp ne %"struct.std::__1::pair"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !7

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #11
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.25, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEED0Ev(%"class.blink::mojom::blink::WorkerTimingContainerStub"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::mojom::blink::WorkerTimingContainerStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

declare zeroext i1 @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv(%"class.mojo::MessageReceiver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEE6AcceptEPNS3_7MessageE(%"class.blink::mojom::blink::WorkerTimingContainerStub"*, %"class.mojo::Message"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::WorkerTimingContainerStub", %"class.blink::mojom::blink::WorkerTimingContainerStub"* %0, i64 0, i32 1
  %4 = load %"class.blink::mojom::blink::WorkerTimingContainer"*, %"class.blink::mojom::blink::WorkerTimingContainer"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::blink::WorkerTimingContainer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink5mojom5blink33WorkerTimingContainerStubDispatch6AcceptEPNS1_21WorkerTimingContainerEPN4mojo7MessageE(%"class.blink::mojom::blink::WorkerTimingContainer"* nonnull %4, %"class.mojo::Message"* %1) #11
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ %7, %6 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink25WorkerTimingContainerStubIN4mojo19RawPtrImplRefTraitsINS1_21WorkerTimingContainerEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE(%"class.blink::mojom::blink::WorkerTimingContainerStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::mojom::blink::WorkerTimingContainerStub", %"class.blink::mojom::blink::WorkerTimingContainerStub"* %0, i64 0, i32 1
  %5 = load %"class.blink::mojom::blink::WorkerTimingContainer"*, %"class.blink::mojom::blink::WorkerTimingContainer"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::blink::WorkerTimingContainer"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN5blink5mojom5blink33WorkerTimingContainerStubDispatch19AcceptWithResponderEPNS1_21WorkerTimingContainerEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::WorkerTimingContainer"* nonnull %5, %"class.mojo::Message"* %1, %"class.mojo::MessageReceiverWithStatus"* %2) #11
  br label %16

9:                                                ; preds = %3
  %10 = icmp eq %"class.mojo::MessageReceiverWithStatus"* %2, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.mojo::MessageReceiverWithStatus"* %2 to void (%"class.mojo::MessageReceiverWithStatus"*)***
  %13 = load void (%"class.mojo::MessageReceiverWithStatus"*)**, void (%"class.mojo::MessageReceiverWithStatus"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %13, i64 1
  %15 = load void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %14, align 8
  tail call void %15(%"class.mojo::MessageReceiverWithStatus"* nonnull %2) #11
  br label %16

16:                                               ; preds = %7, %9, %11
  %17 = phi i1 [ %8, %7 ], [ false, %9 ], [ false, %11 ]
  ret i1 %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare zeroext i1 @_ZN5blink5mojom5blink33WorkerTimingContainerStubDispatch6AcceptEPNS1_21WorkerTimingContainerEPN4mojo7MessageE(%"class.blink::mojom::blink::WorkerTimingContainer"*, %"class.mojo::Message"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink5mojom5blink33WorkerTimingContainerStubDispatch19AcceptWithResponderEPNS1_21WorkerTimingContainerEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::WorkerTimingContainer"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal12BindingStateIN5blink5mojom5blink21WorkerTimingContainerENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 0
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = tail call i8* @_Znwm(i64 8) #12
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink37WorkerTimingContainerRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %12 = bitcast i8* %9 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink21WorkerTimingContainer5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %12, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %11, i32 0) #11
  %13 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.105", %"class.base::RefCountedThreadSafe.105"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.105", %"class.base::RefCountedThreadSafe.105"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe.105"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #11
  br label %25

20:                                               ; preds = %3
  %21 = tail call i8* @_Znwm(i64 8) #12
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink37WorkerTimingContainerRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %24 = bitcast i8* %21 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink21WorkerTimingContainer5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %24, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %23, i32 0) #11
  br label %25

25:                                               ; preds = %20, %6, %17
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*, i8*, %"class.mojo::MessageReceiver"*, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiverWithResponderStatus"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN4mojo8internal20PendingReceiverStateC1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_23PerformanceServerTimingEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #8 comdat {
  %4 = alloca %"class.absl::optional.659", align 8
  %5 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #11
  %6 = bitcast %"class.absl::optional.659"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.663* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #11
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !7

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #11
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #11
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #11
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #11
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #11
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !7

30:                                               ; preds = %25
  call void @llvm.trap() #11
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #11
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #11
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #11
  %35 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member"*, %"class.blink::Member"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %83, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = add i64 %43, 160
  br label %46

46:                                               ; preds = %41, %79
  %47 = phi i32 [ 0, %41 ], [ %80, %79 ]
  %48 = phi %"class.blink::Member"* [ %36, %41 ], [ %81, %79 ]
  %49 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::PerformanceServerTiming"*, %"class.blink::PerformanceServerTiming"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::PerformanceServerTiming", %"class.blink::PerformanceServerTiming"* %50, i64 0, i32 0
  %52 = icmp eq %"class.blink::PerformanceServerTiming"* %50, null
  br i1 %52, label %69, label %53, !prof !2

53:                                               ; preds = %46
  %54 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %51, %"class.v8::Isolate"* %2) #11
  %55 = ptrtoint %"class.v8::Object"* %54 to i64
  %56 = icmp eq %"class.v8::Object"* %54, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %42) #11
  %59 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %58) #11
  %60 = bitcast %"class.blink::PerformanceServerTiming"* %50 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %61, i64 7
  %63 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %62, align 8
  %64 = call %"class.v8::Value"* %63(%"class.blink::ScriptWrappable"* nonnull %51, %"class.blink::ScriptState"* %59) #11
  %65 = icmp eq %"class.v8::Value"* %64, null
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %57
  call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %67

67:                                               ; preds = %66, %57
  %68 = ptrtoint %"class.v8::Value"* %64 to i64
  br label %69

69:                                               ; preds = %46, %53, %67
  %70 = phi i64 [ %68, %67 ], [ %55, %53 ], [ %44, %46 ]
  %71 = icmp eq i64 %70, 0
  %72 = select i1 %71, i64 %45, i64 %70
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  %74 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %47, %"class.v8::Value"* %73) #11
  %75 = trunc i16 %74 to i8
  %76 = icmp eq i8 %75, 0
  %77 = icmp ult i16 %74, 256
  %78 = or i1 %77, %76
  br i1 %78, label %83, label %79, !prof !8

79:                                               ; preds = %69
  %80 = add i32 %47, 1
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %48, i64 1
  %82 = icmp eq %"class.blink::Member"* %81, %39
  br i1 %82, label %83, label %46

83:                                               ; preds = %79, %69, %31
  %84 = phi i64 [ %33, %31 ], [ 0, %69 ], [ %33, %79 ]
  %85 = load i8, i8* %5, align 8, !range !3
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %89 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %88, align 8
  %90 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %91 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %90) #11
  %92 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %89, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %91, %"class.blink::RuntimeCallTimer"** %92, align 8
  store i8 0, i8* %5, align 8
  br label %93

93:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #11
  %94 = inttoptr i64 %84 to %"class.v8::Array"*
  ret %"class.v8::Array"* %94
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #11
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #11
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #11
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #11
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.117", %"class.WTF::HashMap.117"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.120"*, %"struct.WTF::KeyValuePair.120"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.118"* %47, %"class.blink::ScriptWrappable"* %0) #11
  %49 = extractvalue { %"struct.WTF::KeyValuePair.120"*, %"struct.WTF::KeyValuePair.120"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.117", %"class.WTF::HashMap.117"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.120"*, %"struct.WTF::KeyValuePair.120"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.120", %"struct.WTF::KeyValuePair.120"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.120"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.120", %"struct.WTF::KeyValuePair.120"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #11
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.26, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.26, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28, i64 0, i64 0)) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.120"*, %"struct.WTF::KeyValuePair.120"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.118"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.120"*, %"struct.WTF::KeyValuePair.120"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.120"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.118", %"class.WTF::HashTable.118"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.120", %"struct.WTF::KeyValuePair.120"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.120", %"struct.WTF::KeyValuePair.120"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.120", %"struct.WTF::KeyValuePair.120"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.120", %"struct.WTF::KeyValuePair.120"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.120", %"struct.WTF::KeyValuePair.120"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.120"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.120"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.120", %"struct.WTF::KeyValuePair.120"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.120", %"struct.WTF::KeyValuePair.120"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.120"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.120"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.120"*, %"struct.WTF::KeyValuePair.120"* } undef, %"struct.WTF::KeyValuePair.120"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.120"*, %"struct.WTF::KeyValuePair.120"* } %78, %"struct.WTF::KeyValuePair.120"* %77, 1
  ret { %"struct.WTF::KeyValuePair.120"*, %"struct.WTF::KeyValuePair.120"* } %79
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_16PerformanceEntryEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector.4"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #8 comdat {
  %4 = alloca %"class.absl::optional.659", align 8
  %5 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #11
  %6 = bitcast %"class.absl::optional.659"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.663* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #11
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !7

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #11
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #11
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #11
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #11
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #11
  %27 = getelementptr inbounds %"class.blink::HeapVector.4", %"class.blink::HeapVector.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !7

30:                                               ; preds = %25
  call void @llvm.trap() #11
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #11
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #11
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #11
  %35 = getelementptr inbounds %"class.blink::HeapVector.4", %"class.blink::HeapVector.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.10"*, %"class.blink::Member.10"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %83, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = add i64 %43, 160
  br label %46

46:                                               ; preds = %41, %79
  %47 = phi i32 [ 0, %41 ], [ %80, %79 ]
  %48 = phi %"class.blink::Member.10"* [ %36, %41 ], [ %81, %79 ]
  %49 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::PerformanceEntry", %"class.blink::PerformanceEntry"* %50, i64 0, i32 0
  %52 = icmp eq %"class.blink::PerformanceEntry"* %50, null
  br i1 %52, label %69, label %53, !prof !2

53:                                               ; preds = %46
  %54 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %51, %"class.v8::Isolate"* %2) #11
  %55 = ptrtoint %"class.v8::Object"* %54 to i64
  %56 = icmp eq %"class.v8::Object"* %54, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %42) #11
  %59 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %58) #11
  %60 = bitcast %"class.blink::PerformanceEntry"* %50 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %61, i64 7
  %63 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %62, align 8
  %64 = call %"class.v8::Value"* %63(%"class.blink::ScriptWrappable"* nonnull %51, %"class.blink::ScriptState"* %59) #11
  %65 = icmp eq %"class.v8::Value"* %64, null
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %57
  call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %67

67:                                               ; preds = %66, %57
  %68 = ptrtoint %"class.v8::Value"* %64 to i64
  br label %69

69:                                               ; preds = %46, %53, %67
  %70 = phi i64 [ %68, %67 ], [ %55, %53 ], [ %44, %46 ]
  %71 = icmp eq i64 %70, 0
  %72 = select i1 %71, i64 %45, i64 %70
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  %74 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %47, %"class.v8::Value"* %73) #11
  %75 = trunc i16 %74 to i8
  %76 = icmp eq i8 %75, 0
  %77 = icmp ult i16 %74, 256
  %78 = or i1 %77, %76
  br i1 %78, label %83, label %79, !prof !8

79:                                               ; preds = %69
  %80 = add i32 %47, 1
  %81 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %48, i64 1
  %82 = icmp eq %"class.blink::Member.10"* %81, %39
  br i1 %82, label %83, label %46

83:                                               ; preds = %79, %69, %31
  %84 = phi i64 [ %33, %31 ], [ 0, %69 ], [ %33, %79 ]
  %85 = load i8, i8* %5, align 8, !range !3
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %89 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %88, align 8
  %90 = getelementptr inbounds %"class.absl::optional.659", %"class.absl::optional.659"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %91 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %90) #11
  %92 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %89, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %91, %"class.blink::RuntimeCallTimer"** %92, align 8
  store i8 0, i8* %5, align 8
  br label %93

93:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #11
  %94 = inttoptr i64 %84 to %"class.v8::Array"*
  ret %"class.v8::Array"* %94
}

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #3

declare void @_ZN5blink15PerformanceMarkC1ERKN3WTF12AtomicStringEdN4base9TimeTicksE13scoped_refptrINS_21SerializedScriptValueEERNS_14ExceptionStateE(%"class.blink::PerformanceMark"*, %"class.WTF::AtomicString"* dereferenceable(8), double, i64, %"class.blink::SerializedScriptValue"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.7"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.10"*, %"class.blink::Member.10"** %8, align 8
  %10 = icmp eq %"class.blink::Member.10"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.10"*, %"class.blink::Member.10"** %8, align 8
  %26 = icmp eq %"class.blink::Member.10"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.10"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.31, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.7"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.7"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.7"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.10"*, %"class.blink::Member.10"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.10"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.10"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !7

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.7"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.7"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.33, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.35, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16PerformanceEntryEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.10"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.10"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink18PerformanceMeasureC1EPNS_11ScriptStateERKN3WTF12AtomicStringEdd13scoped_refptrINS_21SerializedScriptValueEERNS_14ExceptionStateE(%"class.blink::PerformanceMeasure"*, %"class.blink::ScriptState"*, %"class.WTF::AtomicString"* dereferenceable(8), double, double, %"class.blink::SerializedScriptValue"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23PerformanceServerTimingEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23PerformanceServerTimingEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23PerformanceServerTimingEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4mojo12NullReceivercvNS_15PendingReceiverIT_EEIN5blink5mojom5blink21WorkerTimingContainerEEEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4mojo12NullReceivercvNS_15PendingReceiverIT_EEIN5blink5mojom5blink21WorkerTimingContainerEEEv"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!"branch_weights", i32 2002, i32 2000}
