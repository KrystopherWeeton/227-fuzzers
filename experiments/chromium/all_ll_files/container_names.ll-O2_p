; ModuleID = '../../media/base/container_names.cc'
source_filename = "../../media/base/container_names.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::BitReader" = type { %"class.media::BitReaderCore::ByteStreamProvider", i32, i8*, i32, %"class.media::BitReaderCore" }
%"class.media::BitReaderCore::ByteStreamProvider" = type { i32 (...)** }
%"class.media::BitReaderCore" = type { %"class.media::BitReaderCore::ByteStreamProvider"*, i32, i32, i64, i32, i64 }

@_ZN5media15container_namesL13kAsfSignatureE = internal constant [16 x i8] c"0&\B2u\8Ef\CF\11\A6\D9\00\AA\00b\CEl", align 16
@_ZN5media15container_namesL13kAmrSignatureE = internal constant [6 x i8] c"#!AMR\00", align 1
@_ZN5media15container_namesL13kAssSignatureE = internal constant [14 x i8] c"[Script Info]\00", align 1
@_ZN5media15container_namesL16kAssBomSignatureE = internal constant [17 x i8] c"\EF\BB\BF[Script Info]\00", align 16
@_ZN5media15container_namesL13kWtvSignatureE = internal constant [16 x i8] c"\B7\D8\00 7I\DA\11\A6N\00\07\E9^\AD\8D", align 16
@_ZZN5media15container_namesL12GetElementIdEPNS_9BitReaderEE6prefix = internal unnamed_addr constant [4 x i32] [i32 128, i32 16384, i32 2097152, i32 268435456], align 16
@_ZN5media15container_namesL13kHlsSignatureE = internal constant [8 x i8] c"#EXTM3U\00", align 1
@_ZN5media15container_namesL5kHls1E = internal constant [19 x i8] c"#EXT-X-STREAM-INF:\00", align 16
@_ZN5media15container_namesL5kHls2E = internal constant [23 x i8] c"#EXT-X-TARGETDURATION:\00", align 16
@_ZN5media15container_namesL5kHls3E = internal constant [23 x i8] c"#EXT-X-MEDIA-SEQUENCE:\00", align 16
@_ZN5media15container_namesL16kSampleRateTableE = internal unnamed_addr constant [4 x [4 x i32]] [[4 x i32] [i32 11025, i32 12000, i32 8000, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 22050, i32 24000, i32 16000, i32 0], [4 x i32] [i32 44100, i32 48000, i32 32000, i32 0]], align 16
@_ZN5media15container_namesL17kBitRateTableV1L1E = internal unnamed_addr constant [16 x i32] [i32 0, i32 32, i32 64, i32 96, i32 128, i32 160, i32 192, i32 224, i32 256, i32 288, i32 320, i32 352, i32 384, i32 416, i32 448, i32 0], align 16
@_ZN5media15container_namesL17kBitRateTableV1L2E = internal unnamed_addr constant [16 x i32] [i32 0, i32 32, i32 48, i32 56, i32 64, i32 80, i32 96, i32 112, i32 128, i32 160, i32 192, i32 224, i32 256, i32 320, i32 384, i32 0], align 16
@_ZN5media15container_namesL17kBitRateTableV1L3E = internal unnamed_addr constant [16 x i32] [i32 0, i32 32, i32 40, i32 48, i32 56, i32 64, i32 80, i32 96, i32 112, i32 128, i32 160, i32 192, i32 224, i32 256, i32 320, i32 0], align 16
@_ZN5media15container_namesL17kBitRateTableV2L1E = internal unnamed_addr constant [16 x i32] [i32 0, i32 32, i32 48, i32 56, i32 64, i32 80, i32 96, i32 112, i32 128, i32 144, i32 160, i32 176, i32 192, i32 224, i32 256, i32 0], align 16
@_ZN5media15container_namesL18kBitRateTableV2L23E = internal unnamed_addr constant [16 x i32] [i32 0, i32 8, i32 16, i32 24, i32 32, i32 40, i32 48, i32 56, i32 64, i32 80, i32 96, i32 112, i32 128, i32 144, i32 160, i32 0], align 16
@.str = private unnamed_addr constant [4 x i8] c"\EF\BB\BF\00", align 1
@_ZN5media15container_namesL18kAc3FrameSizeTableE = internal unnamed_addr constant [38 x [3 x i32]] [[3 x i32] [i32 128, i32 138, i32 192], [3 x i32] [i32 128, i32 140, i32 192], [3 x i32] [i32 160, i32 174, i32 240], [3 x i32] [i32 160, i32 176, i32 240], [3 x i32] [i32 192, i32 208, i32 288], [3 x i32] [i32 192, i32 210, i32 288], [3 x i32] [i32 224, i32 242, i32 336], [3 x i32] [i32 224, i32 244, i32 336], [3 x i32] [i32 256, i32 278, i32 384], [3 x i32] [i32 256, i32 280, i32 384], [3 x i32] [i32 320, i32 348, i32 480], [3 x i32] [i32 320, i32 350, i32 480], [3 x i32] [i32 384, i32 416, i32 576], [3 x i32] [i32 384, i32 418, i32 576], [3 x i32] [i32 448, i32 486, i32 672], [3 x i32] [i32 448, i32 488, i32 672], [3 x i32] [i32 512, i32 556, i32 768], [3 x i32] [i32 512, i32 558, i32 768], [3 x i32] [i32 640, i32 696, i32 960], [3 x i32] [i32 640, i32 698, i32 960], [3 x i32] [i32 768, i32 834, i32 1152], [3 x i32] [i32 768, i32 836, i32 1152], [3 x i32] [i32 896, i32 974, i32 1344], [3 x i32] [i32 896, i32 976, i32 1344], [3 x i32] [i32 1024, i32 1114, i32 1536], [3 x i32] [i32 1024, i32 1116, i32 1536], [3 x i32] [i32 1280, i32 1392, i32 1920], [3 x i32] [i32 1280, i32 1394, i32 1920], [3 x i32] [i32 1536, i32 1670, i32 2304], [3 x i32] [i32 1536, i32 1672, i32 2304], [3 x i32] [i32 1792, i32 1950, i32 2688], [3 x i32] [i32 1792, i32 1952, i32 2688], [3 x i32] [i32 2048, i32 2228, i32 3072], [3 x i32] [i32 2048, i32 2230, i32 3072], [3 x i32] [i32 2304, i32 2506, i32 3456], [3 x i32] [i32 2304, i32 2508, i32 3456], [3 x i32] [i32 2560, i32 2768, i32 3840], [3 x i32] [i32 2560, i32 2770, i32 3840]], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media15container_names18DetermineContainerEPKhi(i8*, i32) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.media::BitReader", align 8
  %18 = alloca %"class.media::BitReader", align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca %"class.media::BitReader", align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"class.media::BitReader", align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  %36 = alloca i64, align 8
  %37 = alloca i64, align 8
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = alloca %"class.media::BitReader", align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64, align 8
  %45 = alloca %"class.media::BitReader", align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i64, align 8
  %51 = alloca i64, align 8
  %52 = alloca i64, align 8
  %53 = alloca i64, align 8
  %54 = alloca i64, align 8
  %55 = alloca i64, align 8
  %56 = alloca i64, align 8
  %57 = alloca [6 x i32], align 16
  %58 = alloca %"class.media::BitReader", align 8
  %59 = alloca i64, align 8
  %60 = alloca i64, align 8
  %61 = alloca i64, align 8
  %62 = alloca i64, align 8
  %63 = alloca %"class.media::BitReader", align 8
  %64 = alloca i64, align 8
  %65 = alloca i64, align 8
  %66 = alloca i64, align 8
  %67 = alloca i64, align 8
  %68 = alloca i64, align 8
  %69 = alloca i64, align 8
  %70 = alloca i64, align 8
  %71 = alloca i64, align 8
  %72 = alloca i64, align 8
  %73 = alloca i64, align 8
  %74 = alloca i64, align 8
  %75 = alloca %"class.media::BitReader", align 8
  %76 = alloca i64, align 8
  %77 = alloca i64, align 8
  %78 = alloca i64, align 8
  %79 = alloca i64, align 8
  %80 = alloca %"class.media::BitReader", align 8
  %81 = alloca i64, align 8
  %82 = alloca i64, align 8
  %83 = alloca i64, align 8
  %84 = alloca i64, align 8
  %85 = alloca i64, align 8
  %86 = alloca i64, align 8
  %87 = alloca i64, align 8
  %88 = alloca i64, align 8
  %89 = alloca i64, align 8
  %90 = alloca %"class.media::BitReader", align 8
  %91 = alloca i64, align 8
  %92 = alloca i64, align 8
  %93 = alloca i64, align 8
  %94 = alloca i64, align 8
  %95 = alloca i64, align 8
  %96 = alloca i64, align 8
  %97 = alloca i64, align 8
  %98 = alloca %"class.media::BitReader", align 8
  %99 = alloca i64, align 8
  %100 = alloca i64, align 8
  %101 = alloca %"class.media::BitReader", align 8
  %102 = alloca i64, align 8
  %103 = alloca i64, align 8
  %104 = alloca i64, align 8
  %105 = alloca i64, align 8
  %106 = alloca i64, align 8
  %107 = alloca i64, align 8
  %108 = alloca %"class.media::BitReader", align 8
  %109 = icmp sgt i32 %1, 8
  br i1 %109, label %110, label %1639

110:                                              ; preds = %2
  %111 = sext i32 %1 to i64
  br label %112

112:                                              ; preds = %205, %110
  %113 = phi i32 [ %209, %205 ], [ 0, %110 ]
  %114 = phi i32 [ %158, %205 ], [ 0, %110 ]
  %115 = add nsw i32 %113, 8
  %116 = icmp slt i32 %115, %1
  br i1 %116, label %117, label %210

117:                                              ; preds = %112
  %118 = sext i32 %113 to i64
  %119 = getelementptr inbounds i8, i8* %0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw i32 %121, 24
  %123 = getelementptr inbounds i8, i8* %119, i64 1
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = shl nuw nsw i32 %125, 16
  %127 = or i32 %126, %122
  %128 = getelementptr inbounds i8, i8* %119, i64 2
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = shl nuw nsw i32 %130, 8
  %132 = or i32 %127, %131
  %133 = getelementptr inbounds i8, i8* %119, i64 3
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = or i32 %132, %135
  %137 = getelementptr inbounds i8, i8* %119, i64 4
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl nuw i32 %139, 24
  %141 = getelementptr inbounds i8, i8* %137, i64 1
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = shl nuw nsw i32 %143, 16
  %145 = or i32 %144, %140
  %146 = getelementptr inbounds i8, i8* %137, i64 2
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = shl nuw nsw i32 %148, 8
  %150 = or i32 %145, %149
  %151 = getelementptr inbounds i8, i8* %137, i64 3
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = or i32 %150, %153
  switch i32 %154, label %157 [
    i32 1718909296, label %155
    i32 1885628782, label %155
    i32 1651273571, label %155
    i32 1836019574, label %155
    i32 1836019558, label %155
    i32 1835430497, label %155
    i32 1835295092, label %155
    i32 1718773093, label %155
    i32 1936419184, label %155
    i32 1835365473, label %155
    i32 1835361135, label %155
    i32 1937013104, label %155
    i32 1936286840, label %155
    i32 1936943480, label %155
    i32 1886545524, label %155
    i32 1970628964, label %155
    i32 1701671783, label %155
  ]

155:                                              ; preds = %117, %117, %117, %117, %117, %117, %117, %117, %117, %117, %117, %117, %117, %117, %117, %117, %117
  %156 = add nsw i32 %114, 1
  br label %157

157:                                              ; preds = %155, %117
  %158 = phi i32 [ %114, %117 ], [ %156, %155 ]
  %159 = icmp eq i32 %136, 1
  br i1 %159, label %160, label %202

160:                                              ; preds = %157
  %161 = add nsw i32 %113, 16
  %162 = icmp sgt i32 %161, %1
  br i1 %162, label %210, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds i8, i8* %119, i64 8
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = shl nuw i32 %166, 24
  %168 = getelementptr inbounds i8, i8* %164, i64 1
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = shl nuw nsw i32 %170, 16
  %172 = or i32 %171, %167
  %173 = getelementptr inbounds i8, i8* %164, i64 2
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 8
  %177 = or i32 %172, %176
  %178 = getelementptr inbounds i8, i8* %164, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = or i32 %177, %180
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %210

183:                                              ; preds = %163
  %184 = getelementptr inbounds i8, i8* %119, i64 12
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = shl nuw i32 %186, 24
  %188 = getelementptr inbounds i8, i8* %184, i64 1
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = shl nuw nsw i32 %190, 16
  %192 = or i32 %191, %187
  %193 = getelementptr inbounds i8, i8* %184, i64 2
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = shl nuw nsw i32 %195, 8
  %197 = or i32 %192, %196
  %198 = getelementptr inbounds i8, i8* %184, i64 3
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = or i32 %197, %200
  br label %202

202:                                              ; preds = %183, %157
  %203 = phi i32 [ %201, %183 ], [ %136, %157 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %210, label %205

205:                                              ; preds = %202
  %206 = zext i32 %203 to i64
  %207 = icmp ugt i64 %206, %111
  %208 = select i1 %207, i32 0, i32 %203
  %209 = add i32 %208, %113
  br i1 %207, label %210, label %112

210:                                              ; preds = %112, %160, %163, %202, %205
  %211 = phi i32 [ %158, %205 ], [ %114, %112 ], [ %158, %160 ], [ %158, %163 ], [ %158, %202 ]
  %212 = icmp sgt i32 %211, 1
  br i1 %212, label %2584, label %213

213:                                              ; preds = %210
  %214 = icmp slt i32 %1, 12
  br i1 %214, label %1639, label %215

215:                                              ; preds = %213
  %216 = load i8, i8* %0, align 1
  %217 = zext i8 %216 to i32
  %218 = shl nuw i32 %217, 24
  %219 = getelementptr inbounds i8, i8* %0, i64 1
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = shl nuw nsw i32 %221, 16
  %223 = or i32 %222, %218
  %224 = getelementptr inbounds i8, i8* %0, i64 2
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = shl nuw nsw i32 %226, 8
  %228 = or i32 %223, %227
  %229 = getelementptr inbounds i8, i8* %0, i64 3
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = or i32 %228, %231
  switch i32 %232, label %812 [
    i32 440786851, label %233
    i32 807842421, label %308
    i32 589381965, label %313
    i32 591747156, label %316
    i32 777145670, label %344
    i32 779248125, label %2584
    i32 1112099682, label %352
    i32 1112099684, label %352
    i32 1112099686, label %352
    i32 1112099687, label %352
    i32 1112099688, label %352
    i32 1112099689, label %352
    i32 1667327590, label %476
    i32 1145395265, label %527
    i32 1146377032, label %549
    i32 1688404224, label %569
    i32 1688404480, label %569
    i32 1688404736, label %569
    i32 1688404992, label %569
    i32 107364, label %569
    i32 172900, label %569
    i32 238436, label %569
    i32 1716281667, label %609
    i32 1179407872, label %610
    i32 1179407873, label %610
    i32 1179407874, label %610
    i32 1179407875, label %610
    i32 1179407876, label %610
    i32 1179603533, label %629
    i32 1296122656, label %648
    i32 1330524704, label %649
    i32 1332176723, label %669
    i32 1380333108, label %673
    i32 1380533830, label %695
    i32 1532191602, label %715
    i32 -272908453, label %720
    i32 2147385345, label %725
    i32 -25230976, label %725
    i32 536864768, label %725
    i32 -14745368, label %725
    i32 -1210580960, label %807
  ]

233:                                              ; preds = %215
  %234 = icmp sgt i32 %1, 12
  br i1 %234, label %235, label %814

235:                                              ; preds = %233
  %236 = bitcast %"class.media::BitReader"* %101 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %236) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %236, i8 -86, i64 72, i1 false) #7
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %101, i8* %0, i32 %1) #7
  %237 = call fastcc i32 @_ZN5media15container_namesL12GetElementIdEPNS_9BitReaderE(%"class.media::BitReader"* nonnull %101) #7
  %238 = icmp eq i32 %237, 440786851
  br i1 %238, label %239, label %301

239:                                              ; preds = %235
  %240 = call fastcc i64 @_ZN5media15container_namesL7GetVintEPNS_9BitReaderE(%"class.media::BitReader"* nonnull %101) #7
  %241 = call i1 @llvm.is.constant.i64(i64 %240) #7
  %242 = icmp ult i64 %240, 2147483648
  %243 = trunc i64 %240 to i32
  %244 = select i1 %242, i32 %243, i32 2147483647
  %245 = icmp ult i64 %240, 2147483647
  %246 = select i1 %245, i64 %240, i64 2147483647
  %247 = trunc i64 %246 to i32
  %248 = select i1 %241, i32 %247, i32 %244
  %249 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %101, i64 0, i32 1
  %250 = load i32, i32* %249, align 8
  %251 = shl nsw i32 %250, 3
  %252 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %101, i64 0, i32 4
  %253 = call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %252) #7
  %254 = sub nsw i32 %251, %253
  %255 = sdiv i32 %254, 8
  %256 = icmp slt i32 %255, %248
  br i1 %256, label %301, label %257

257:                                              ; preds = %239, %298
  %258 = load i32, i32* %249, align 8
  %259 = shl nsw i32 %258, 3
  %260 = call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %252) #7
  %261 = icmp sgt i32 %259, %260
  br i1 %261, label %262, label %301

262:                                              ; preds = %257
  %263 = call fastcc i32 @_ZN5media15container_namesL12GetElementIdEPNS_9BitReaderE(%"class.media::BitReader"* nonnull %101) #7
  %264 = call fastcc i64 @_ZN5media15container_namesL7GetVintEPNS_9BitReaderE(%"class.media::BitReader"* nonnull %101) #7
  %265 = call i1 @llvm.is.constant.i64(i64 %264) #7
  %266 = icmp ult i64 %264, 2147483648
  %267 = trunc i64 %264 to i32
  %268 = select i1 %266, i32 %267, i32 2147483647
  %269 = icmp ult i64 %264, 2147483647
  %270 = select i1 %269, i64 %264, i64 2147483647
  %271 = trunc i64 %270 to i32
  %272 = select i1 %265, i32 %271, i32 %268
  switch i32 %263, label %301 [
    i32 17030, label %273
    i32 17143, label %273
    i32 17138, label %273
    i32 17139, label %273
    i32 17031, label %273
    i32 17029, label %273
    i32 236, label %273
    i32 191, label %273
    i32 17026, label %280
  ]

273:                                              ; preds = %262, %262, %262, %262, %262, %262, %262, %262
  %274 = load i32, i32* %249, align 8
  %275 = shl nsw i32 %274, 3
  %276 = call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %252) #7
  %277 = sub nsw i32 %275, %276
  %278 = sdiv i32 %277, 8
  %279 = icmp slt i32 %278, %272
  br i1 %279, label %301, label %298

280:                                              ; preds = %262
  %281 = load i32, i32* %249, align 8
  %282 = shl nsw i32 %281, 3
  %283 = call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %252) #7
  %284 = sub nsw i32 %282, %283
  %285 = icmp sgt i32 %284, 31
  br i1 %285, label %286, label %301

286:                                              ; preds = %280
  %287 = bitcast i64* %99 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #7
  store i64 0, i64* %99, align 8
  %288 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %252, i32 32, i64* nonnull %99) #7
  %289 = load i64, i64* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #7
  %290 = select i1 %288, i64 %289, i64 0
  switch i64 %290, label %301 [
    i64 2003133037, label %291
    i64 1835103346, label %292
  ]

291:                                              ; preds = %286
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %101) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %236) #7
  br label %2584

292:                                              ; preds = %286
  %293 = load i32, i32* %249, align 8
  %294 = shl nsw i32 %293, 3
  %295 = call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %252) #7
  %296 = sub nsw i32 %294, %295
  %297 = icmp sgt i32 %296, 31
  br i1 %297, label %302, label %301

298:                                              ; preds = %273
  %299 = shl nsw i32 %272, 3
  %300 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %252, i32 %299) #7
  br i1 %300, label %257, label %301

301:                                              ; preds = %298, %273, %262, %257, %292, %286, %280, %239, %235
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %101) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %236) #7
  br label %812

302:                                              ; preds = %292
  %303 = bitcast i64* %100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %303) #7
  store i64 0, i64* %100, align 8
  %304 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %252, i32 32, i64* nonnull %100) #7
  %305 = load i64, i64* %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %303) #7
  %306 = icmp eq i64 %305, 1869835105
  %307 = and i1 %304, %306
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %101) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %236) #7
  br i1 %307, label %2584, label %812

308:                                              ; preds = %215
  %309 = icmp ugt i32 %1, 15
  br i1 %309, label %310, label %814

310:                                              ; preds = %308
  %311 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN5media15container_namesL13kAsfSignatureE, i64 0, i64 0), i64 16) #7
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %2584, label %814

313:                                              ; preds = %215
  %314 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5media15container_namesL13kAmrSignatureE, i64 0, i64 0), i64 5) #7
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %2584, label %814

316:                                              ; preds = %215
  %317 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN5media15container_namesL13kHlsSignatureE, i64 0, i64 0), i64 7) #7
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %814

319:                                              ; preds = %316
  %320 = zext i32 %1 to i64
  br label %321

321:                                              ; preds = %341, %319
  %322 = phi i64 [ 7, %319 ], [ %342, %341 ]
  %323 = getelementptr inbounds i8, i8* %0, i64 %322
  %324 = load i8, i8* %323, align 1
  %325 = icmp eq i8 %324, 35
  br i1 %325, label %326, label %341

326:                                              ; preds = %321
  %327 = trunc i64 %322 to i32
  %328 = sub nsw i32 %1, %327
  %329 = icmp ult i32 %328, 18
  br i1 %329, label %341, label %330

330:                                              ; preds = %326
  %331 = tail call i32 @bcmp(i8* %323, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZN5media15container_namesL5kHls1E, i64 0, i64 0), i64 18) #7
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %2584, label %333

333:                                              ; preds = %330
  %334 = icmp ult i32 %328, 22
  br i1 %334, label %341, label %335

335:                                              ; preds = %333
  %336 = tail call i32 @bcmp(i8* %323, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZN5media15container_namesL5kHls2E, i64 0, i64 0), i64 22) #7
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %2584, label %338

338:                                              ; preds = %335
  %339 = tail call i32 @bcmp(i8* %323, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZN5media15container_namesL5kHls3E, i64 0, i64 0), i64 22) #7
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %2584, label %341

341:                                              ; preds = %338, %333, %326, %321
  %342 = add nuw nsw i64 %322, 1
  %343 = icmp eq i64 %342, %320
  br i1 %343, label %812, label %321

344:                                              ; preds = %215
  %345 = getelementptr inbounds i8, i8* %0, i64 4
  %346 = load i8, i8* %345, align 1
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %348, label %814

348:                                              ; preds = %344
  %349 = getelementptr inbounds i8, i8* %0, i64 5
  %350 = load i8, i8* %349, align 1
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %2584, label %814

352:                                              ; preds = %215, %215, %215, %215, %215, %215
  %353 = icmp sgt i32 %1, 43
  br i1 %353, label %354, label %812

354:                                              ; preds = %352
  %355 = getelementptr inbounds i8, i8* %0, i64 8
  %356 = getelementptr inbounds i8, i8* %0, i64 11
  %357 = load i8, i8* %356, align 1
  %358 = zext i8 %357 to i32
  %359 = shl nuw i32 %358, 24
  %360 = getelementptr inbounds i8, i8* %0, i64 10
  %361 = load i8, i8* %360, align 1
  %362 = zext i8 %361 to i32
  %363 = shl nuw nsw i32 %362, 16
  %364 = or i32 %363, %359
  %365 = getelementptr inbounds i8, i8* %0, i64 9
  %366 = load i8, i8* %365, align 1
  %367 = zext i8 %366 to i32
  %368 = shl nuw nsw i32 %367, 8
  %369 = or i32 %364, %368
  %370 = load i8, i8* %355, align 1
  %371 = zext i8 %370 to i32
  %372 = or i32 %369, %371
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %812, label %374

374:                                              ; preds = %354
  %375 = getelementptr inbounds i8, i8* %0, i64 20
  %376 = getelementptr inbounds i8, i8* %0, i64 23
  %377 = load i8, i8* %376, align 1
  %378 = zext i8 %377 to i32
  %379 = shl nuw i32 %378, 24
  %380 = getelementptr inbounds i8, i8* %0, i64 22
  %381 = load i8, i8* %380, align 1
  %382 = zext i8 %381 to i32
  %383 = shl nuw nsw i32 %382, 16
  %384 = or i32 %383, %379
  %385 = getelementptr inbounds i8, i8* %0, i64 21
  %386 = load i8, i8* %385, align 1
  %387 = zext i8 %386 to i32
  %388 = shl nuw nsw i32 %387, 8
  %389 = or i32 %384, %388
  %390 = load i8, i8* %375, align 1
  %391 = zext i8 %390 to i32
  %392 = or i32 %389, %391
  %393 = add i32 %392, -1
  %394 = icmp ult i32 %393, 32767
  br i1 %394, label %395, label %812

395:                                              ; preds = %374
  %396 = getelementptr inbounds i8, i8* %0, i64 24
  %397 = getelementptr inbounds i8, i8* %0, i64 27
  %398 = load i8, i8* %397, align 1
  %399 = zext i8 %398 to i32
  %400 = shl nuw i32 %399, 24
  %401 = getelementptr inbounds i8, i8* %0, i64 26
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i32
  %404 = shl nuw nsw i32 %403, 16
  %405 = or i32 %404, %400
  %406 = getelementptr inbounds i8, i8* %0, i64 25
  %407 = load i8, i8* %406, align 1
  %408 = zext i8 %407 to i32
  %409 = shl nuw nsw i32 %408, 8
  %410 = or i32 %405, %409
  %411 = load i8, i8* %396, align 1
  %412 = zext i8 %411 to i32
  %413 = or i32 %410, %412
  %414 = add i32 %413, -1
  %415 = icmp ult i32 %414, 32767
  br i1 %415, label %416, label %812

416:                                              ; preds = %395
  %417 = getelementptr inbounds i8, i8* %0, i64 28
  %418 = getelementptr inbounds i8, i8* %0, i64 31
  %419 = load i8, i8* %418, align 1
  %420 = zext i8 %419 to i32
  %421 = shl nuw i32 %420, 24
  %422 = getelementptr inbounds i8, i8* %0, i64 30
  %423 = load i8, i8* %422, align 1
  %424 = zext i8 %423 to i32
  %425 = shl nuw nsw i32 %424, 16
  %426 = or i32 %425, %421
  %427 = getelementptr inbounds i8, i8* %0, i64 29
  %428 = load i8, i8* %427, align 1
  %429 = zext i8 %428 to i32
  %430 = shl nuw nsw i32 %429, 8
  %431 = or i32 %426, %430
  %432 = load i8, i8* %417, align 1
  %433 = zext i8 %432 to i32
  %434 = or i32 %431, %433
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %812, label %436

436:                                              ; preds = %416
  %437 = getelementptr inbounds i8, i8* %0, i64 32
  %438 = getelementptr inbounds i8, i8* %0, i64 35
  %439 = load i8, i8* %438, align 1
  %440 = zext i8 %439 to i32
  %441 = shl nuw i32 %440, 24
  %442 = getelementptr inbounds i8, i8* %0, i64 34
  %443 = load i8, i8* %442, align 1
  %444 = zext i8 %443 to i32
  %445 = shl nuw nsw i32 %444, 16
  %446 = or i32 %445, %441
  %447 = getelementptr inbounds i8, i8* %0, i64 33
  %448 = load i8, i8* %447, align 1
  %449 = zext i8 %448 to i32
  %450 = shl nuw nsw i32 %449, 8
  %451 = or i32 %446, %450
  %452 = load i8, i8* %437, align 1
  %453 = zext i8 %452 to i32
  %454 = or i32 %451, %453
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %812, label %456

456:                                              ; preds = %436
  %457 = getelementptr inbounds i8, i8* %0, i64 40
  %458 = getelementptr inbounds i8, i8* %0, i64 43
  %459 = load i8, i8* %458, align 1
  %460 = zext i8 %459 to i32
  %461 = shl nuw i32 %460, 24
  %462 = getelementptr inbounds i8, i8* %0, i64 42
  %463 = load i8, i8* %462, align 1
  %464 = zext i8 %463 to i32
  %465 = shl nuw nsw i32 %464, 16
  %466 = or i32 %465, %461
  %467 = getelementptr inbounds i8, i8* %0, i64 41
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i32
  %470 = shl nuw nsw i32 %469, 8
  %471 = or i32 %466, %470
  %472 = load i8, i8* %457, align 1
  %473 = zext i8 %472 to i32
  %474 = or i32 %471, %473
  %475 = icmp ult i32 %474, 257
  br i1 %475, label %2584, label %812

476:                                              ; preds = %215
  %477 = icmp sgt i32 %1, 51
  br i1 %477, label %478, label %814

478:                                              ; preds = %476
  %479 = bitcast %"class.media::BitReader"* %98 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %479) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %479, i8 -86, i64 72, i1 false) #7
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %98, i8* %0, i32 %1) #7
  %480 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %98, i64 0, i32 4
  %481 = bitcast i64* %97 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %481) #7
  store i64 0, i64* %97, align 8
  %482 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %480, i32 32, i64* nonnull %97) #7
  %483 = load i64, i64* %97, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %481) #7
  %484 = icmp eq i64 %483, 1667327590
  %485 = and i1 %482, %484
  br i1 %485, label %486, label %519

486:                                              ; preds = %478
  %487 = bitcast i64* %96 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %487) #7
  store i64 0, i64* %96, align 8
  %488 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %480, i32 16, i64* nonnull %96) #7
  %489 = load i64, i64* %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %487) #7
  %490 = icmp eq i64 %489, 1
  %491 = and i1 %488, %490
  br i1 %491, label %492, label %519

492:                                              ; preds = %486
  %493 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %480, i32 16) #7
  %494 = bitcast i64* %95 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %494) #7
  store i64 0, i64* %95, align 8
  %495 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %480, i32 32, i64* nonnull %95) #7
  %496 = load i64, i64* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %494) #7
  %497 = icmp eq i64 %496, 1684370275
  %498 = and i1 %495, %497
  br i1 %498, label %499, label %519

499:                                              ; preds = %492
  %500 = bitcast i64* %94 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %500) #7
  store i64 0, i64* %94, align 8
  %501 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %480, i32 64, i64* nonnull %94) #7
  %502 = load i64, i64* %94, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %500) #7
  %503 = icmp eq i64 %502, 32
  %504 = and i1 %501, %503
  br i1 %504, label %505, label %519

505:                                              ; preds = %499
  %506 = bitcast i64* %93 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %506) #7
  store i64 0, i64* %93, align 8
  %507 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %480, i32 64, i64* nonnull %93) #7
  %508 = load i64, i64* %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %506) #7
  %509 = icmp eq i64 %508, 0
  %510 = xor i1 %507, true
  %511 = or i1 %509, %510
  br i1 %511, label %519, label %512

512:                                              ; preds = %505
  %513 = bitcast i64* %92 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %513) #7
  store i64 0, i64* %92, align 8
  %514 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %480, i32 32, i64* nonnull %92) #7
  %515 = load i64, i64* %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %513) #7
  %516 = icmp eq i64 %515, 0
  %517 = xor i1 %514, true
  %518 = or i1 %516, %517
  br i1 %518, label %519, label %520

519:                                              ; preds = %512, %505, %499, %492, %486, %478
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %98) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %479) #7
  br label %814

520:                                              ; preds = %512
  %521 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %480, i32 64) #7
  %522 = bitcast i64* %91 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %522) #7
  store i64 0, i64* %91, align 8
  %523 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %480, i32 32, i64* nonnull %91) #7
  %524 = load i64, i64* %91, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %522) #7
  %525 = icmp ne i64 %524, 0
  %526 = and i1 %523, %525
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %98) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %479) #7
  br i1 %526, label %2584, label %814

527:                                              ; preds = %215
  %528 = icmp sgt i32 %1, 15
  br i1 %528, label %529, label %814

529:                                              ; preds = %527
  %530 = getelementptr inbounds i8, i8* %0, i64 11
  %531 = load i8, i8* %530, align 1
  %532 = zext i8 %531 to i32
  %533 = shl nuw nsw i32 %532, 8
  %534 = getelementptr inbounds i8, i8* %0, i64 12
  %535 = load i8, i8* %534, align 1
  %536 = zext i8 %535 to i32
  %537 = or i32 %533, %536
  %538 = icmp ult i32 %537, 2049
  br i1 %538, label %539, label %814

539:                                              ; preds = %529
  %540 = getelementptr inbounds i8, i8* %0, i64 13
  %541 = load i8, i8* %540, align 1
  %542 = zext i8 %541 to i32
  %543 = shl nuw nsw i32 %542, 8
  %544 = getelementptr inbounds i8, i8* %0, i64 14
  %545 = load i8, i8* %544, align 1
  %546 = zext i8 %545 to i32
  %547 = or i32 %543, %546
  %548 = icmp ult i32 %547, 2049
  br i1 %548, label %2584, label %814

549:                                              ; preds = %215
  %550 = getelementptr inbounds i8, i8* %0, i64 4
  %551 = load i8, i8* %550, align 1
  %552 = zext i8 %551 to i32
  %553 = shl nuw i32 %552, 24
  %554 = getelementptr inbounds i8, i8* %0, i64 5
  %555 = load i8, i8* %554, align 1
  %556 = zext i8 %555 to i32
  %557 = shl nuw nsw i32 %556, 16
  %558 = or i32 %557, %553
  %559 = getelementptr inbounds i8, i8* %0, i64 6
  %560 = load i8, i8* %559, align 1
  %561 = zext i8 %560 to i32
  %562 = shl nuw nsw i32 %561, 8
  %563 = or i32 %558, %562
  %564 = getelementptr inbounds i8, i8* %0, i64 7
  %565 = load i8, i8* %564, align 1
  %566 = zext i8 %565 to i32
  %567 = or i32 %563, %566
  %568 = icmp eq i32 %567, 1145586770
  br i1 %568, label %2584, label %814

569:                                              ; preds = %215, %215, %215, %215, %215, %215, %215
  %570 = getelementptr inbounds i8, i8* %0, i64 4
  %571 = load i8, i8* %570, align 1
  %572 = zext i8 %571 to i32
  %573 = shl nuw i32 %572, 24
  %574 = getelementptr inbounds i8, i8* %0, i64 5
  %575 = load i8, i8* %574, align 1
  %576 = zext i8 %575 to i32
  %577 = shl nuw nsw i32 %576, 16
  %578 = or i32 %577, %573
  %579 = getelementptr inbounds i8, i8* %0, i64 6
  %580 = load i8, i8* %579, align 1
  %581 = zext i8 %580 to i32
  %582 = shl nuw nsw i32 %581, 8
  %583 = or i32 %578, %582
  %584 = getelementptr inbounds i8, i8* %0, i64 7
  %585 = load i8, i8* %584, align 1
  %586 = zext i8 %585 to i32
  %587 = or i32 %583, %586
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %812, label %589

589:                                              ; preds = %569
  %590 = getelementptr inbounds i8, i8* %0, i64 8
  %591 = load i8, i8* %590, align 1
  %592 = zext i8 %591 to i32
  %593 = shl nuw i32 %592, 24
  %594 = getelementptr inbounds i8, i8* %0, i64 9
  %595 = load i8, i8* %594, align 1
  %596 = zext i8 %595 to i32
  %597 = shl nuw nsw i32 %596, 16
  %598 = or i32 %597, %593
  %599 = getelementptr inbounds i8, i8* %0, i64 10
  %600 = load i8, i8* %599, align 1
  %601 = zext i8 %600 to i32
  %602 = shl nuw nsw i32 %601, 8
  %603 = or i32 %598, %602
  %604 = getelementptr inbounds i8, i8* %0, i64 11
  %605 = load i8, i8* %604, align 1
  %606 = zext i8 %605 to i32
  %607 = or i32 %603, %606
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %812, label %2584

609:                                              ; preds = %215
  br label %2584

610:                                              ; preds = %215, %215, %215, %215, %215
  %611 = getelementptr inbounds i8, i8* %0, i64 5
  %612 = load i8, i8* %611, align 1
  %613 = icmp eq i8 %612, 0
  br i1 %613, label %614, label %812

614:                                              ; preds = %610
  %615 = getelementptr inbounds i8, i8* %0, i64 6
  %616 = load i8, i8* %615, align 1
  %617 = zext i8 %616 to i32
  %618 = shl nuw nsw i32 %617, 16
  %619 = getelementptr inbounds i8, i8* %0, i64 7
  %620 = load i8, i8* %619, align 1
  %621 = zext i8 %620 to i32
  %622 = shl nuw nsw i32 %621, 8
  %623 = or i32 %622, %618
  %624 = getelementptr inbounds i8, i8* %0, i64 8
  %625 = load i8, i8* %624, align 1
  %626 = zext i8 %625 to i32
  %627 = or i32 %623, %626
  %628 = icmp ugt i32 %627, 8
  br i1 %628, label %2584, label %812

629:                                              ; preds = %215
  %630 = getelementptr inbounds i8, i8* %0, i64 8
  %631 = load i8, i8* %630, align 1
  %632 = zext i8 %631 to i32
  %633 = shl nuw i32 %632, 24
  %634 = getelementptr inbounds i8, i8* %0, i64 9
  %635 = load i8, i8* %634, align 1
  %636 = zext i8 %635 to i32
  %637 = shl nuw nsw i32 %636, 16
  %638 = or i32 %637, %633
  %639 = getelementptr inbounds i8, i8* %0, i64 10
  %640 = load i8, i8* %639, align 1
  %641 = zext i8 %640 to i32
  %642 = shl nuw nsw i32 %641, 8
  %643 = or i32 %638, %642
  %644 = getelementptr inbounds i8, i8* %0, i64 11
  %645 = load i8, i8* %644, align 1
  %646 = zext i8 %645 to i32
  %647 = or i32 %643, %646
  switch i32 %647, label %814 [
    i32 1095321158, label %2584
    i32 1095321155, label %2584
  ]

648:                                              ; preds = %215
  br label %2584

649:                                              ; preds = %215
  %650 = getelementptr inbounds i8, i8* %0, i64 8
  %651 = load i8, i8* %650, align 1
  %652 = zext i8 %651 to i32
  %653 = shl nuw i32 %652, 24
  %654 = getelementptr inbounds i8, i8* %0, i64 9
  %655 = load i8, i8* %654, align 1
  %656 = zext i8 %655 to i32
  %657 = shl nuw nsw i32 %656, 16
  %658 = or i32 %657, %653
  %659 = getelementptr inbounds i8, i8* %0, i64 10
  %660 = load i8, i8* %659, align 1
  %661 = zext i8 %660 to i32
  %662 = shl nuw nsw i32 %661, 8
  %663 = or i32 %658, %662
  %664 = getelementptr inbounds i8, i8* %0, i64 11
  %665 = load i8, i8* %664, align 1
  %666 = zext i8 %665 to i32
  %667 = or i32 %663, %666
  %668 = icmp eq i32 %667, 1330524774
  br i1 %668, label %2584, label %814

669:                                              ; preds = %215
  %670 = getelementptr inbounds i8, i8* %0, i64 5
  %671 = load i8, i8* %670, align 1
  %672 = icmp ult i8 %671, 8
  br i1 %672, label %2584, label %814

673:                                              ; preds = %215
  %674 = icmp sgt i32 %1, 16
  br i1 %674, label %675, label %814

675:                                              ; preds = %673
  %676 = getelementptr inbounds i8, i8* %0, i64 12
  %677 = load i8, i8* %676, align 1
  %678 = zext i8 %677 to i32
  %679 = shl nuw i32 %678, 24
  %680 = getelementptr inbounds i8, i8* %0, i64 13
  %681 = load i8, i8* %680, align 1
  %682 = zext i8 %681 to i32
  %683 = shl nuw nsw i32 %682, 16
  %684 = or i32 %683, %679
  %685 = getelementptr inbounds i8, i8* %0, i64 14
  %686 = load i8, i8* %685, align 1
  %687 = zext i8 %686 to i32
  %688 = shl nuw nsw i32 %687, 8
  %689 = or i32 %684, %688
  %690 = getelementptr inbounds i8, i8* %0, i64 15
  %691 = load i8, i8* %690, align 1
  %692 = zext i8 %691 to i32
  %693 = or i32 %689, %692
  %694 = icmp eq i32 %693, 1685272116
  br i1 %694, label %2584, label %814

695:                                              ; preds = %215
  %696 = getelementptr inbounds i8, i8* %0, i64 8
  %697 = load i8, i8* %696, align 1
  %698 = zext i8 %697 to i32
  %699 = shl nuw i32 %698, 24
  %700 = getelementptr inbounds i8, i8* %0, i64 9
  %701 = load i8, i8* %700, align 1
  %702 = zext i8 %701 to i32
  %703 = shl nuw nsw i32 %702, 16
  %704 = or i32 %703, %699
  %705 = getelementptr inbounds i8, i8* %0, i64 10
  %706 = load i8, i8* %705, align 1
  %707 = zext i8 %706 to i32
  %708 = shl nuw nsw i32 %707, 8
  %709 = or i32 %704, %708
  %710 = getelementptr inbounds i8, i8* %0, i64 11
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  %713 = or i32 %709, %712
  switch i32 %713, label %814 [
    i32 1096173856, label %2584
    i32 1096173912, label %2584
    i32 1096173849, label %2584
    i32 1095587360, label %2584
    i32 1463899717, label %714
  ]

714:                                              ; preds = %695
  br label %2584

715:                                              ; preds = %215
  %716 = icmp ult i32 %1, 13
  br i1 %716, label %814, label %717

717:                                              ; preds = %715
  %718 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN5media15container_namesL13kAssSignatureE, i64 0, i64 0), i64 13) #7
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %2584, label %814

720:                                              ; preds = %215
  %721 = icmp ult i32 %1, 16
  br i1 %721, label %814, label %722

722:                                              ; preds = %720
  %723 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN5media15container_namesL16kAssBomSignatureE, i64 0, i64 0), i64 16) #7
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %2584, label %814

725:                                              ; preds = %215, %215, %215, %215
  %726 = bitcast %"class.media::BitReader"* %90 to i8*
  %727 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %90, i64 0, i32 4
  %728 = bitcast i64* %89 to i8*
  %729 = bitcast i64* %88 to i8*
  %730 = bitcast i64* %87 to i8*
  %731 = bitcast i64* %86 to i8*
  %732 = bitcast i64* %85 to i8*
  %733 = bitcast i64* %83 to i8*
  %734 = bitcast i64* %82 to i8*
  %735 = bitcast i64* %81 to i8*
  %736 = bitcast i64* %84 to i8*
  br label %737

737:                                              ; preds = %801, %725
  %738 = phi i32 [ %803, %801 ], [ 0, %725 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %726) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %726, i8 -86, i64 72, i1 false) #7
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds i8, i8* %0, i64 %739
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %90, i8* %740, i32 11) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %728) #7
  store i64 0, i64* %89, align 8
  %741 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %727, i32 32, i64* nonnull %89) #7
  %742 = load i64, i64* %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %728) #7
  %743 = icmp eq i64 %742, 2147385345
  %744 = and i1 %741, %743
  br i1 %744, label %745, label %806

745:                                              ; preds = %737
  %746 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %727, i32 6) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %729) #7
  store i64 0, i64* %88, align 8
  %747 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %727, i32 1, i64* nonnull %88) #7
  %748 = load i64, i64* %88, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %729) #7
  %749 = icmp eq i64 %748, 0
  %750 = xor i1 %747, true
  %751 = or i1 %749, %750
  br i1 %751, label %752, label %806

752:                                              ; preds = %745
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %730) #7
  store i64 0, i64* %87, align 8
  %753 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %727, i32 7, i64* nonnull %87) #7
  %754 = load i64, i64* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %730) #7
  %755 = icmp ugt i64 %754, 4
  %756 = and i1 %753, %755
  br i1 %756, label %757, label %806

757:                                              ; preds = %752
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %731) #7
  store i64 0, i64* %86, align 8
  %758 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %727, i32 14, i64* nonnull %86) #7
  %759 = load i64, i64* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %731) #7
  %760 = trunc i64 %759 to i32
  %761 = select i1 %758, i32 %760, i32 0
  %762 = icmp sgt i32 %761, 94
  br i1 %762, label %763, label %806

763:                                              ; preds = %757
  %764 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %727, i32 6) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %732) #7
  store i64 0, i64* %85, align 8
  %765 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %727, i32 4, i64* nonnull %85) #7
  %766 = load i64, i64* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %732) #7
  %767 = select i1 %765, i64 %766, i64 0
  %768 = icmp ult i64 %767, 16
  br i1 %768, label %769, label %806

769:                                              ; preds = %763
  %770 = lshr i64 50737, %767
  %771 = and i64 %770, 1
  %772 = icmp eq i64 %771, 0
  br i1 %772, label %773, label %806

773:                                              ; preds = %769
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %733) #7
  store i64 0, i64* %83, align 8
  %774 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %727, i32 5, i64* nonnull %83) #7
  %775 = load i64, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %733) #7
  %776 = icmp ult i64 %775, 26
  %777 = xor i1 %774, true
  %778 = or i1 %776, %777
  br i1 %778, label %779, label %806

779:                                              ; preds = %773
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %734) #7
  store i64 0, i64* %82, align 8
  %780 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %727, i32 1, i64* nonnull %82) #7
  %781 = load i64, i64* %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %734) #7
  %782 = icmp eq i64 %781, 0
  %783 = xor i1 %780, true
  %784 = or i1 %782, %783
  br i1 %784, label %785, label %806

785:                                              ; preds = %779
  %786 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %727, i32 4) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %735) #7
  store i64 0, i64* %81, align 8
  %787 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %727, i32 3, i64* nonnull %81) #7
  %788 = load i64, i64* %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %735) #7
  %789 = select i1 %787, i64 %788, i64 0
  %790 = icmp ult i64 %789, 8
  br i1 %790, label %791, label %806

791:                                              ; preds = %785
  %792 = lshr i64 186, %789
  %793 = and i64 %792, 1
  %794 = icmp eq i64 %793, 0
  br i1 %794, label %795, label %806

795:                                              ; preds = %791
  %796 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %727, i32 2) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %736) #7
  store i64 0, i64* %84, align 8
  %797 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %727, i32 2, i64* nonnull %84) #7
  %798 = load i64, i64* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %736) #7
  %799 = icmp eq i64 %798, 3
  %800 = and i1 %797, %799
  br i1 %800, label %806, label %801

801:                                              ; preds = %795
  %802 = add i32 %738, 1
  %803 = add i32 %802, %761
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %90) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %726) #7
  %804 = add nsw i32 %803, 11
  %805 = icmp slt i32 %804, %1
  br i1 %805, label %737, label %2584

806:                                              ; preds = %791, %769, %795, %785, %779, %773, %763, %757, %752, %745, %737
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %90) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %726) #7
  br label %812

807:                                              ; preds = %215
  %808 = icmp ugt i32 %1, 15
  br i1 %808, label %809, label %814

809:                                              ; preds = %807
  %810 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN5media15container_namesL13kWtvSignatureE, i64 0, i64 0), i64 16) #7
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %2584, label %814

812:                                              ; preds = %341, %806, %614, %610, %589, %569, %456, %436, %416, %395, %374, %354, %352, %302, %301, %215
  switch i32 %228, label %814 [
    i32 1129796352, label %2584
    i32 1180128000, label %2584
    i32 1229206272, label %813
  ]

813:                                              ; preds = %812
  br label %2584

814:                                              ; preds = %812, %809, %807, %722, %720, %717, %715, %695, %675, %673, %669, %649, %629, %549, %539, %529, %527, %520, %519, %476, %348, %344, %316, %313, %310, %308, %233
  %815 = load i8, i8* %0, align 1
  %816 = zext i8 %815 to i16
  %817 = shl nuw i16 %816, 8
  %818 = load i8, i8* %219, align 1
  %819 = zext i8 %818 to i16
  %820 = or i16 %817, %819
  switch i16 %820, label %873 [
    i16 2935, label %821
    i16 -16, label %825
    i16 -15, label %825
    i16 -8, label %825
    i16 -7, label %825
  ]

821:                                              ; preds = %814
  %822 = call fastcc zeroext i1 @_ZN5media15container_namesL8CheckAc3EPKhi(i8* %0, i32 %1) #7
  br i1 %822, label %2584, label %823

823:                                              ; preds = %821
  %824 = call fastcc zeroext i1 @_ZN5media15container_namesL9CheckEac3EPKhi(i8* %0, i32 %1) #7
  br i1 %824, label %2584, label %873

825:                                              ; preds = %814, %814, %814, %814
  %826 = icmp sgt i32 %1, 6
  br i1 %826, label %827, label %873

827:                                              ; preds = %825
  %828 = bitcast %"class.media::BitReader"* %80 to i8*
  %829 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %80, i64 0, i32 4
  %830 = bitcast i64* %79 to i8*
  %831 = bitcast i64* %78 to i8*
  %832 = bitcast i64* %77 to i8*
  %833 = bitcast i64* %76 to i8*
  br label %834

834:                                              ; preds = %869, %827
  %835 = phi i32 [ %870, %869 ], [ 0, %827 ]
  %836 = add nsw i32 %835, 6
  %837 = icmp slt i32 %836, %1
  br i1 %837, label %838, label %2584

838:                                              ; preds = %834
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %828) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %828, i8 -86, i64 72, i1 false) #7
  %839 = sext i32 %835 to i64
  %840 = getelementptr inbounds i8, i8* %0, i64 %839
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %80, i8* %840, i32 6) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %830) #7
  store i64 0, i64* %79, align 8
  %841 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %829, i32 12, i64* nonnull %79) #7
  %842 = load i64, i64* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %830) #7
  %843 = icmp eq i64 %842, 4095
  %844 = and i1 %841, %843
  br i1 %844, label %845, label %869

845:                                              ; preds = %838
  %846 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %829, i32 1) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %831) #7
  store i64 0, i64* %78, align 8
  %847 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %829, i32 2, i64* nonnull %78) #7
  %848 = load i64, i64* %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %831) #7
  %849 = icmp eq i64 %848, 0
  %850 = xor i1 %847, true
  %851 = or i1 %849, %850
  br i1 %851, label %852, label %869

852:                                              ; preds = %845
  %853 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %829, i32 3) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %832) #7
  store i64 0, i64* %77, align 8
  %854 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %829, i32 4, i64* nonnull %77) #7
  %855 = load i64, i64* %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %832) #7
  %856 = icmp eq i64 %855, 15
  %857 = and i1 %854, %856
  br i1 %857, label %869, label %858

858:                                              ; preds = %852
  %859 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %829, i32 8) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %833) #7
  store i64 0, i64* %76, align 8
  %860 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %829, i32 13, i64* nonnull %76) #7
  %861 = load i64, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %833) #7
  %862 = trunc i64 %861 to i32
  %863 = select i1 %860, i32 %862, i32 0
  %864 = icmp sgt i32 %863, 0
  %865 = select i1 %864, i32 %863, i32 0
  %866 = add nsw i32 %865, %835
  %867 = xor i1 %864, true
  %868 = zext i1 %867 to i32
  br label %869

869:                                              ; preds = %858, %852, %845, %838
  %870 = phi i32 [ %835, %838 ], [ %835, %845 ], [ %835, %852 ], [ %866, %858 ]
  %871 = phi i32 [ 1, %838 ], [ 1, %845 ], [ 1, %852 ], [ %868, %858 ]
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %80) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %828) #7
  %872 = icmp eq i32 %871, 0
  br i1 %872, label %834, label %873

873:                                              ; preds = %869, %825, %823, %814
  %874 = icmp sgt i32 %1, 0
  br i1 %874, label %875, label %889

875:                                              ; preds = %873
  %876 = zext i32 %1 to i64
  br label %877

877:                                              ; preds = %883, %875
  %878 = phi i64 [ 0, %875 ], [ %884, %883 ]
  %879 = phi i32 [ 0, %875 ], [ %885, %883 ]
  %880 = getelementptr inbounds i8, i8* %0, i64 %878
  %881 = load i8, i8* %880, align 1
  %882 = icmp eq i8 %881, 0
  br i1 %882, label %883, label %887

883:                                              ; preds = %877
  %884 = add nuw nsw i64 %878, 1
  %885 = add nuw nsw i32 %879, 1
  %886 = icmp eq i64 %884, %876
  br i1 %886, label %889, label %877

887:                                              ; preds = %877
  %888 = trunc i64 %878 to i32
  br label %889

889:                                              ; preds = %883, %887, %873
  %890 = phi i32 [ 0, %873 ], [ %888, %887 ], [ %885, %883 ]
  %891 = add nsw i32 %890, 3
  %892 = icmp slt i32 %891, %1
  br i1 %892, label %893, label %999

893:                                              ; preds = %889
  %894 = bitcast %"class.media::BitReader"* %108 to i8*
  %895 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %108, i64 0, i32 4
  %896 = bitcast i64* %107 to i8*
  %897 = bitcast i64* %106 to i8*
  %898 = bitcast i64* %105 to i8*
  %899 = bitcast i64* %104 to i8*
  %900 = bitcast i64* %103 to i8*
  %901 = bitcast i64* %102 to i8*
  br label %902

902:                                              ; preds = %992, %893
  %903 = phi i32 [ %890, %893 ], [ %994, %992 ]
  %904 = phi i32 [ 0, %893 ], [ %993, %992 ]
  %905 = sext i32 %903 to i64
  %906 = getelementptr inbounds i8, i8* %0, i64 %905
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %894) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %894, i8 -86, i64 72, i1 false) #7
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %108, i8* %906, i32 4) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %896) #7
  store i64 0, i64* %107, align 8
  %907 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %895, i32 11, i64* nonnull %107) #7
  %908 = load i64, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %896) #7
  %909 = icmp eq i64 %908, 2047
  %910 = and i1 %907, %909
  br i1 %910, label %911, label %983

911:                                              ; preds = %902
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %897) #7
  store i64 0, i64* %106, align 8
  %912 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %895, i32 2, i64* nonnull %106) #7
  %913 = load i64, i64* %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %897) #7
  %914 = select i1 %912, i64 %913, i64 0
  %915 = trunc i64 %914 to i32
  %916 = icmp eq i32 %915, 1
  br i1 %916, label %983, label %917

917:                                              ; preds = %911
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %898) #7
  store i64 0, i64* %105, align 8
  %918 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %895, i32 2, i64* nonnull %105) #7
  %919 = load i64, i64* %105, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %898) #7
  %920 = trunc i64 %919 to i32
  %921 = icmp eq i32 %920, 0
  %922 = xor i1 %918, true
  %923 = or i1 %921, %922
  br i1 %923, label %983, label %924

924:                                              ; preds = %917
  %925 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %895, i32 1) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %899) #7
  store i64 0, i64* %104, align 8
  %926 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %895, i32 4, i64* nonnull %104) #7
  %927 = load i64, i64* %104, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %899) #7
  %928 = select i1 %926, i64 %927, i64 0
  %929 = trunc i64 %928 to i32
  %930 = icmp eq i32 %929, 15
  br i1 %930, label %983, label %931

931:                                              ; preds = %924
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %900) #7
  store i64 0, i64* %103, align 8
  %932 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %895, i32 2, i64* nonnull %103) #7
  %933 = load i64, i64* %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %900) #7
  %934 = select i1 %932, i64 %933, i64 0
  %935 = trunc i64 %934 to i32
  %936 = icmp eq i32 %935, 3
  br i1 %936, label %983, label %937

937:                                              ; preds = %931
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %901) #7
  store i64 0, i64* %102, align 8
  %938 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %895, i32 1, i64* nonnull %102) #7
  %939 = load i64, i64* %102, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %901) #7
  %940 = trunc i64 %939 to i32
  %941 = select i1 %938, i32 %940, i32 0
  %942 = shl i64 %914, 32
  %943 = ashr exact i64 %942, 32
  %944 = shl i64 %934, 32
  %945 = ashr exact i64 %944, 32
  %946 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @_ZN5media15container_namesL16kSampleRateTableE, i64 0, i64 %943, i64 %945
  %947 = load i32, i32* %946, align 4
  %948 = icmp eq i32 %915, 3
  %949 = icmp eq i32 %920, 3
  br i1 %948, label %950, label %963

950:                                              ; preds = %937
  br i1 %949, label %951, label %955

951:                                              ; preds = %950
  %952 = shl i64 %928, 32
  %953 = ashr exact i64 %952, 32
  %954 = getelementptr inbounds [16 x i32], [16 x i32]* @_ZN5media15container_namesL17kBitRateTableV1L1E, i64 0, i64 %953
  br label %970

955:                                              ; preds = %950
  %956 = icmp eq i32 %920, 2
  %957 = shl i64 %928, 32
  %958 = ashr exact i64 %957, 32
  br i1 %956, label %959, label %961

959:                                              ; preds = %955
  %960 = getelementptr inbounds [16 x i32], [16 x i32]* @_ZN5media15container_namesL17kBitRateTableV1L2E, i64 0, i64 %958
  br label %977

961:                                              ; preds = %955
  %962 = getelementptr inbounds [16 x i32], [16 x i32]* @_ZN5media15container_namesL17kBitRateTableV1L3E, i64 0, i64 %958
  br label %977

963:                                              ; preds = %937
  %964 = shl i64 %928, 32
  %965 = ashr exact i64 %964, 32
  br i1 %949, label %966, label %968

966:                                              ; preds = %963
  %967 = getelementptr inbounds [16 x i32], [16 x i32]* @_ZN5media15container_namesL17kBitRateTableV2L1E, i64 0, i64 %965
  br label %970

968:                                              ; preds = %963
  %969 = getelementptr inbounds [16 x i32], [16 x i32]* @_ZN5media15container_namesL18kBitRateTableV2L23E, i64 0, i64 %965
  br label %977

970:                                              ; preds = %966, %951
  %971 = phi i32* [ %954, %951 ], [ %967, %966 ]
  %972 = load i32, i32* %971, align 4
  %973 = mul nsw i32 %972, 12000
  %974 = sdiv i32 %973, %947
  %975 = add nsw i32 %974, %941
  %976 = shl nsw i32 %975, 2
  br label %984

977:                                              ; preds = %968, %961, %959
  %978 = phi i32* [ %969, %968 ], [ %962, %961 ], [ %960, %959 ]
  %979 = load i32, i32* %978, align 4
  %980 = mul nsw i32 %979, 144000
  %981 = sdiv i32 %980, %947
  %982 = add nsw i32 %981, %941
  br label %984

983:                                              ; preds = %931, %924, %917, %911, %902
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %108) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %894) #7
  br label %999

984:                                              ; preds = %977, %970
  %985 = phi i32 [ %979, %977 ], [ %972, %970 ]
  %986 = phi i32 [ %982, %977 ], [ %976, %970 ]
  %987 = icmp sgt i32 %985, 0
  %988 = icmp sgt i32 %947, 0
  %989 = and i1 %988, %987
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %108) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %894) #7
  br i1 %989, label %990, label %999

990:                                              ; preds = %984
  %991 = icmp eq i32 %904, 10
  br i1 %991, label %2584, label %992

992:                                              ; preds = %990
  %993 = add nuw nsw i32 %904, 1
  %994 = add nsw i32 %986, %903
  %995 = add nsw i32 %994, 3
  %996 = icmp slt i32 %995, %1
  br i1 %996, label %902, label %997

997:                                              ; preds = %992
  %998 = icmp ugt i32 %904, 1
  br i1 %998, label %2584, label %999

999:                                              ; preds = %984, %997, %983, %889
  %1000 = icmp sgt i32 %1, 14
  br i1 %1000, label %1001, label %1315

1001:                                             ; preds = %999
  %1002 = bitcast %"class.media::BitReader"* %75 to i8*
  %1003 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %75, i64 0, i32 4
  %1004 = bitcast i64* %74 to i8*
  %1005 = bitcast i64* %73 to i8*
  %1006 = bitcast i64* %72 to i8*
  %1007 = bitcast i64* %71 to i8*
  %1008 = bitcast i64* %70 to i8*
  %1009 = bitcast i64* %69 to i8*
  %1010 = bitcast i64* %68 to i8*
  %1011 = bitcast i64* %65 to i8*
  %1012 = bitcast i64* %64 to i8*
  %1013 = bitcast i64* %67 to i8*
  %1014 = bitcast i64* %66 to i8*
  br label %1015

1015:                                             ; preds = %1001, %1132
  %1016 = phi i32 [ 0, %1001 ], [ %1091, %1132 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1002) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1002, i8 -86, i64 72, i1 false) #7
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds i8, i8* %0, i64 %1017
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %75, i8* %1018, i32 14) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1004) #7
  store i64 0, i64* %74, align 8
  %1019 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 24, i64* nonnull %74) #7
  %1020 = load i64, i64* %74, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1004) #7
  %1021 = icmp eq i64 %1020, 1
  %1022 = and i1 %1019, %1021
  br i1 %1022, label %1023, label %1136

1023:                                             ; preds = %1015
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1005) #7
  store i64 0, i64* %73, align 8
  %1024 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 8, i64* nonnull %73) #7
  %1025 = load i64, i64* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1005) #7
  %1026 = icmp eq i64 %1025, 186
  %1027 = and i1 %1024, %1026
  br i1 %1027, label %1028, label %1136

1028:                                             ; preds = %1023
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1006) #7
  store i64 0, i64* %72, align 8
  %1029 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 2, i64* nonnull %72) #7
  %1030 = load i64, i64* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1006) #7
  %1031 = trunc i64 %1030 to i32
  %1032 = icmp eq i32 %1031, 0
  %1033 = xor i1 %1029, true
  %1034 = or i1 %1032, %1033
  br i1 %1034, label %1035, label %1040

1035:                                             ; preds = %1028
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1007) #7
  store i64 0, i64* %71, align 8
  %1036 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 2, i64* nonnull %71) #7
  %1037 = load i64, i64* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1007) #7
  %1038 = icmp eq i64 %1037, 2
  %1039 = and i1 %1036, %1038
  br i1 %1039, label %1042, label %1136

1040:                                             ; preds = %1028
  %1041 = icmp eq i32 %1031, 1
  br i1 %1041, label %1042, label %1136

1042:                                             ; preds = %1040, %1035
  %1043 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1003, i32 3) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1008) #7
  store i64 0, i64* %70, align 8
  %1044 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 1, i64* nonnull %70) #7
  %1045 = load i64, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1008) #7
  %1046 = icmp eq i64 %1045, 1
  %1047 = and i1 %1044, %1046
  br i1 %1047, label %1048, label %1136

1048:                                             ; preds = %1042
  %1049 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1003, i32 15) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1009) #7
  store i64 0, i64* %69, align 8
  %1050 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 1, i64* nonnull %69) #7
  %1051 = load i64, i64* %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1009) #7
  %1052 = icmp eq i64 %1051, 1
  %1053 = and i1 %1050, %1052
  br i1 %1053, label %1054, label %1136

1054:                                             ; preds = %1048
  %1055 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1003, i32 15) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1010) #7
  store i64 0, i64* %68, align 8
  %1056 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 1, i64* nonnull %68) #7
  %1057 = load i64, i64* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1010) #7
  %1058 = icmp eq i64 %1057, 1
  %1059 = and i1 %1056, %1058
  br i1 %1059, label %1060, label %1136

1060:                                             ; preds = %1054
  br i1 %1034, label %1061, label %1074

1061:                                             ; preds = %1060
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1013) #7
  store i64 0, i64* %67, align 8
  %1062 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 1, i64* nonnull %67) #7
  %1063 = load i64, i64* %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1013) #7
  %1064 = icmp eq i64 %1063, 1
  %1065 = and i1 %1062, %1064
  br i1 %1065, label %1066, label %1136

1066:                                             ; preds = %1061
  %1067 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1003, i32 22) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1014) #7
  store i64 0, i64* %66, align 8
  %1068 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 1, i64* nonnull %66) #7
  %1069 = load i64, i64* %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1014) #7
  %1070 = icmp eq i64 %1069, 1
  %1071 = and i1 %1068, %1070
  br i1 %1071, label %1072, label %1136

1072:                                             ; preds = %1066
  %1073 = add nsw i32 %1016, 12
  br label %1088

1074:                                             ; preds = %1060
  %1075 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1003, i32 22) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1011) #7
  store i64 0, i64* %65, align 8
  %1076 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 2, i64* nonnull %65) #7
  %1077 = load i64, i64* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1011) #7
  %1078 = icmp eq i64 %1077, 3
  %1079 = and i1 %1076, %1078
  br i1 %1079, label %1080, label %1136

1080:                                             ; preds = %1074
  %1081 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1003, i32 5) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1012) #7
  store i64 0, i64* %64, align 8
  %1082 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1003, i32 3, i64* nonnull %64) #7
  %1083 = load i64, i64* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1012) #7
  %1084 = trunc i64 %1083 to i32
  %1085 = add i32 %1084, 14
  %1086 = select i1 %1082, i32 %1085, i32 14
  %1087 = add nsw i32 %1086, %1016
  br label %1088

1088:                                             ; preds = %1080, %1072
  %1089 = phi i32 [ %1087, %1080 ], [ %1073, %1072 ]
  br label %1090

1090:                                             ; preds = %1088, %1121
  %1091 = phi i32 [ %1131, %1121 ], [ %1089, %1088 ]
  %1092 = add nsw i32 %1091, 6
  %1093 = icmp slt i32 %1092, %1
  br i1 %1093, label %1094, label %1132

1094:                                             ; preds = %1090
  %1095 = sext i32 %1091 to i64
  %1096 = getelementptr inbounds i8, i8* %0, i64 %1095
  %1097 = load i8, i8* %1096, align 1
  %1098 = zext i8 %1097 to i32
  %1099 = shl nuw nsw i32 %1098, 16
  %1100 = getelementptr inbounds i8, i8* %1096, i64 1
  %1101 = load i8, i8* %1100, align 1
  %1102 = zext i8 %1101 to i32
  %1103 = shl nuw nsw i32 %1102, 8
  %1104 = or i32 %1103, %1099
  %1105 = getelementptr inbounds i8, i8* %1096, i64 2
  %1106 = load i8, i8* %1105, align 1
  %1107 = zext i8 %1106 to i32
  %1108 = or i32 %1104, %1107
  %1109 = icmp eq i32 %1108, 1
  br i1 %1109, label %1110, label %1132

1110:                                             ; preds = %1094
  %1111 = add nsw i32 %1091, 3
  %1112 = sext i32 %1111 to i64
  %1113 = getelementptr inbounds i8, i8* %0, i64 %1112
  %1114 = load i8, i8* %1113, align 1
  br i1 %1034, label %1115, label %1119

1115:                                             ; preds = %1110
  %1116 = icmp ne i8 %1114, -68
  %1117 = icmp ult i8 %1114, -16
  %1118 = and i1 %1116, %1117
  br i1 %1118, label %1120, label %1136

1119:                                             ; preds = %1110
  switch i8 %1114, label %1121 [
    i8 -2, label %1136
    i8 -3, label %1136
    i8 -4, label %1136
    i8 -70, label %1132
    i8 -71, label %1135
  ]

1120:                                             ; preds = %1115
  switch i8 %1114, label %1121 [
    i8 -70, label %1132
    i8 -71, label %1135
  ]

1121:                                             ; preds = %1120, %1119
  %1122 = getelementptr inbounds i8, i8* %1096, i64 4
  %1123 = load i8, i8* %1122, align 1
  %1124 = zext i8 %1123 to i32
  %1125 = shl nuw nsw i32 %1124, 8
  %1126 = getelementptr inbounds i8, i8* %1122, i64 1
  %1127 = load i8, i8* %1126, align 1
  %1128 = zext i8 %1127 to i32
  %1129 = or i32 %1125, %1128
  %1130 = icmp eq i32 %1129, 0
  %1131 = add nsw i32 %1129, %1092
  br i1 %1130, label %1136, label %1090

1132:                                             ; preds = %1120, %1119, %1094, %1090
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %75) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1002) #7
  %1133 = add nsw i32 %1091, 14
  %1134 = icmp slt i32 %1133, %1
  br i1 %1134, label %1015, label %2584

1135:                                             ; preds = %1119, %1120
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %75) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1002) #7
  br label %2584

1136:                                             ; preds = %1074, %1066, %1061, %1054, %1048, %1042, %1040, %1035, %1023, %1015, %1115, %1119, %1119, %1119, %1121
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %75) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1002) #7
  %1137 = icmp sgt i32 %1, 249
  br i1 %1137, label %1138, label %1222

1138:                                             ; preds = %1136, %1138
  %1139 = phi i64 [ %1145, %1138 ], [ 0, %1136 ]
  %1140 = getelementptr inbounds i8, i8* %0, i64 %1139
  %1141 = load i8, i8* %1140, align 1
  %1142 = icmp ne i8 %1141, 71
  %1143 = icmp ult i64 %1139, 20
  %1144 = and i1 %1143, %1142
  %1145 = add nuw nsw i64 %1139, 1
  br i1 %1144, label %1138, label %1146

1146:                                             ; preds = %1138
  %1147 = trunc i64 %1139 to i32
  %1148 = bitcast %"class.media::BitReader"* %63 to i8*
  %1149 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %63, i64 0, i32 4
  %1150 = bitcast i64* %62 to i8*
  %1151 = bitcast i64* %61 to i8*
  %1152 = bitcast i64* %60 to i8*
  %1153 = bitcast i64* %59 to i8*
  %1154 = add nsw i32 %1147, 6
  %1155 = icmp slt i32 %1154, %1
  br i1 %1155, label %1156, label %2584

1156:                                             ; preds = %1146, %1217
  %1157 = phi i32 [ %1219, %1217 ], [ %1147, %1146 ]
  %1158 = phi i32 [ %1218, %1217 ], [ -1, %1146 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1148) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1148, i8 -86, i64 72, i1 false) #7
  %1159 = sext i32 %1157 to i64
  %1160 = getelementptr inbounds i8, i8* %0, i64 %1159
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %63, i8* %1160, i32 6) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1150) #7
  store i64 0, i64* %62, align 8
  %1161 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1149, i32 8, i64* nonnull %62) #7
  %1162 = load i64, i64* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1150) #7
  %1163 = icmp eq i64 %1162, 71
  %1164 = and i1 %1161, %1163
  br i1 %1164, label %1165, label %1216

1165:                                             ; preds = %1156
  %1166 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1149, i32 3) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1151) #7
  store i64 0, i64* %61, align 8
  %1167 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1149, i32 13, i64* nonnull %61) #7
  %1168 = load i64, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1151) #7
  %1169 = trunc i64 %1168 to i32
  %1170 = add i32 %1169, -3
  %1171 = icmp ugt i32 %1170, 12
  %1172 = xor i1 %1167, true
  %1173 = or i1 %1171, %1172
  br i1 %1173, label %1174, label %1216

1174:                                             ; preds = %1165
  %1175 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1149, i32 2) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1152) #7
  store i64 0, i64* %60, align 8
  %1176 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1149, i32 2, i64* nonnull %60) #7
  %1177 = load i64, i64* %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1152) #7
  %1178 = trunc i64 %1177 to i32
  %1179 = icmp eq i32 %1178, 0
  %1180 = xor i1 %1176, true
  %1181 = or i1 %1179, %1180
  br i1 %1181, label %1216, label %1182

1182:                                             ; preds = %1174
  %1183 = icmp sgt i32 %1178, 1
  br i1 %1183, label %1184, label %1195

1184:                                             ; preds = %1182
  %1185 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1149, i32 4) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1153) #7
  store i64 0, i64* %59, align 8
  %1186 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1149, i32 8, i64* nonnull %59) #7
  %1187 = load i64, i64* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1153) #7
  %1188 = trunc i64 %1187 to i32
  %1189 = select i1 %1186, i32 %1188, i32 0
  %1190 = icmp eq i32 %1178, 2
  br i1 %1190, label %1191, label %1193

1191:                                             ; preds = %1184
  %1192 = icmp eq i32 %1189, 183
  br i1 %1192, label %1195, label %1216

1193:                                             ; preds = %1184
  %1194 = icmp slt i32 %1189, 183
  br i1 %1194, label %1195, label %1216

1195:                                             ; preds = %1193, %1191, %1182
  %1196 = icmp slt i32 %1158, 0
  br i1 %1196, label %1197, label %1217

1197:                                             ; preds = %1195
  %1198 = add nsw i32 %1157, 188
  %1199 = sext i32 %1198 to i64
  %1200 = getelementptr inbounds i8, i8* %0, i64 %1199
  %1201 = load i8, i8* %1200, align 1
  %1202 = icmp eq i8 %1201, 71
  br i1 %1202, label %1217, label %1203

1203:                                             ; preds = %1197
  %1204 = add nsw i32 %1157, 192
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds i8, i8* %0, i64 %1205
  %1207 = load i8, i8* %1206, align 1
  %1208 = icmp eq i8 %1207, 71
  br i1 %1208, label %1217, label %1209

1209:                                             ; preds = %1203
  %1210 = add nsw i32 %1157, 204
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds i8, i8* %0, i64 %1211
  %1213 = load i8, i8* %1212, align 1
  %1214 = icmp eq i8 %1213, 71
  %1215 = select i1 %1214, i32 204, i32 208
  br label %1217

1216:                                             ; preds = %1193, %1191, %1174, %1165, %1156
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %63) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1148) #7
  br label %1222

1217:                                             ; preds = %1209, %1203, %1197, %1195
  %1218 = phi i32 [ %1158, %1195 ], [ 188, %1197 ], [ 192, %1203 ], [ %1215, %1209 ]
  %1219 = add nsw i32 %1218, %1157
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %63) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1148) #7
  %1220 = add nsw i32 %1219, 6
  %1221 = icmp slt i32 %1220, %1
  br i1 %1221, label %1156, label %2584

1222:                                             ; preds = %1136, %1216
  %1223 = icmp sgt i32 %1, 15
  br i1 %1223, label %1224, label %1315

1224:                                             ; preds = %1222, %1307
  %1225 = phi i32 [ %1310, %1307 ], [ 0, %1222 ]
  %1226 = phi i32 [ %1309, %1307 ], [ -1, %1222 ]
  %1227 = phi i32 [ %1308, %1307 ], [ 0, %1222 ]
  %1228 = sext i32 %1227 to i64
  %1229 = getelementptr inbounds i8, i8* %0, i64 %1228
  %1230 = load i8, i8* %1229, align 1
  %1231 = icmp eq i8 %1230, -1
  br i1 %1231, label %1232, label %1315

1232:                                             ; preds = %1224
  %1233 = add nsw i32 %1227, 1
  %1234 = sext i32 %1233 to i64
  %1235 = getelementptr inbounds i8, i8* %0, i64 %1234
  %1236 = load i8, i8* %1235, align 1
  %1237 = icmp ugt i8 %1236, -65
  %1238 = icmp eq i8 %1236, 1
  %1239 = or i1 %1237, %1238
  br i1 %1239, label %1240, label %1315

1240:                                             ; preds = %1232
  switch i8 %1236, label %1243 [
    i8 -1, label %1307
    i8 -39, label %2584
    i8 -40, label %1241
    i8 1, label %1241
  ]

1241:                                             ; preds = %1240, %1240
  %1242 = add nsw i32 %1227, 2
  br label %1303

1243:                                             ; preds = %1240
  %1244 = and i8 %1236, -8
  %1245 = icmp eq i8 %1244, -48
  br i1 %1245, label %1246, label %1256

1246:                                             ; preds = %1243
  %1247 = and i8 %1236, 7
  %1248 = zext i8 %1247 to i32
  %1249 = icmp sgt i32 %1226, -1
  br i1 %1249, label %1250, label %1254

1250:                                             ; preds = %1246
  %1251 = add nuw nsw i32 %1226, 1
  %1252 = srem i32 %1251, 8
  %1253 = icmp eq i32 %1252, %1248
  br i1 %1253, label %1254, label %1315

1254:                                             ; preds = %1250, %1246
  %1255 = add nsw i32 %1227, 2
  br label %1303

1256:                                             ; preds = %1243
  %1257 = getelementptr inbounds i8, i8* %1229, i64 2
  %1258 = load i8, i8* %1257, align 1
  %1259 = zext i8 %1258 to i32
  %1260 = shl nuw nsw i32 %1259, 8
  %1261 = getelementptr inbounds i8, i8* %1257, i64 1
  %1262 = load i8, i8* %1261, align 1
  %1263 = zext i8 %1262 to i32
  %1264 = or i32 %1260, %1263
  %1265 = add nuw nsw i32 %1264, 2
  %1266 = icmp eq i8 %1236, -38
  br i1 %1266, label %1267, label %1299

1267:                                             ; preds = %1256
  %1268 = add nsw i32 %1227, 4
  %1269 = sext i32 %1268 to i64
  %1270 = getelementptr inbounds i8, i8* %0, i64 %1269
  %1271 = load i8, i8* %1270, align 1
  %1272 = zext i8 %1271 to i32
  %1273 = shl nuw nsw i32 %1272, 1
  %1274 = add nuw nsw i32 %1273, 6
  %1275 = icmp eq i32 %1264, %1274
  br i1 %1275, label %1276, label %1315

1276:                                             ; preds = %1267
  %1277 = add nsw i32 %1265, %1227
  %1278 = add nsw i32 %1277, 2
  %1279 = icmp slt i32 %1278, %1
  br i1 %1279, label %1280, label %1303

1280:                                             ; preds = %1276
  %1281 = add i32 %1227, 2
  %1282 = add i32 %1281, %1264
  %1283 = sext i32 %1282 to i64
  br label %1284

1284:                                             ; preds = %1295, %1280
  %1285 = phi i64 [ %1283, %1280 ], [ %1290, %1295 ]
  %1286 = phi i32 [ %1277, %1280 ], [ %1296, %1295 ]
  %1287 = getelementptr inbounds i8, i8* %0, i64 %1285
  %1288 = load i8, i8* %1287, align 1
  %1289 = icmp eq i8 %1288, -1
  %1290 = add nsw i64 %1285, 1
  br i1 %1289, label %1291, label %1295

1291:                                             ; preds = %1284
  %1292 = getelementptr inbounds i8, i8* %0, i64 %1290
  %1293 = load i8, i8* %1292, align 1
  %1294 = icmp eq i8 %1293, 0
  br i1 %1294, label %1295, label %1301

1295:                                             ; preds = %1291, %1284
  %1296 = add nsw i32 %1286, 1
  %1297 = add nsw i64 %1285, 3
  %1298 = icmp slt i64 %1297, %111
  br i1 %1298, label %1284, label %1303

1299:                                             ; preds = %1256
  %1300 = add nsw i32 %1265, %1227
  br label %1303

1301:                                             ; preds = %1291
  %1302 = trunc i64 %1285 to i32
  br label %1303

1303:                                             ; preds = %1295, %1301, %1299, %1276, %1254, %1241
  %1304 = phi i32 [ %1242, %1241 ], [ %1255, %1254 ], [ %1300, %1299 ], [ %1277, %1276 ], [ %1302, %1301 ], [ %1296, %1295 ]
  %1305 = phi i32 [ %1226, %1241 ], [ %1248, %1254 ], [ %1226, %1299 ], [ %1226, %1276 ], [ %1226, %1301 ], [ %1226, %1295 ]
  %1306 = add nsw i32 %1225, 1
  br label %1307

1307:                                             ; preds = %1303, %1240
  %1308 = phi i32 [ %1304, %1303 ], [ %1233, %1240 ]
  %1309 = phi i32 [ %1305, %1303 ], [ %1226, %1240 ]
  %1310 = phi i32 [ %1306, %1303 ], [ %1225, %1240 ]
  %1311 = add nsw i32 %1308, 5
  %1312 = icmp slt i32 %1311, %1
  br i1 %1312, label %1224, label %1313

1313:                                             ; preds = %1307
  %1314 = icmp sgt i32 %1310, 1
  br i1 %1314, label %2584, label %1315

1315:                                             ; preds = %1224, %1267, %1250, %1232, %999, %1222, %1313
  %1316 = bitcast [6 x i32]* %57 to i8*
  %1317 = icmp sgt i32 %1, 11
  br i1 %1317, label %1318, label %1639

1318:                                             ; preds = %1315
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1316) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1316, i8 0, i64 24, i1 false) #7
  %1319 = bitcast %"class.media::BitReader"* %58 to i8*
  %1320 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %58, i64 0, i32 4
  %1321 = bitcast i64* %56 to i8*
  %1322 = bitcast i64* %55 to i8*
  %1323 = bitcast i64* %54 to i8*
  %1324 = bitcast i64* %53 to i8*
  %1325 = bitcast i64* %52 to i8*
  %1326 = bitcast i64* %51 to i8*
  %1327 = bitcast i64* %50 to i8*
  %1328 = bitcast i64* %49 to i8*
  %1329 = bitcast i64* %48 to i8*
  %1330 = bitcast i64* %47 to i8*
  %1331 = bitcast i64* %46 to i8*
  br label %1333

1332:                                             ; preds = %1410
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1316) #7
  br label %2584

1333:                                             ; preds = %1318, %1410
  %1334 = phi i64 [ 0, %1318 ], [ %1412, %1410 ]
  %1335 = phi i32 [ -1, %1318 ], [ %1411, %1410 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1319) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1319, i8 -86, i64 72, i1 false) #7
  %1336 = getelementptr inbounds i8, i8* %0, i64 %1334
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %58, i8* %1336, i32 11) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1321) #7
  store i64 0, i64* %56, align 8
  %1337 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 3, i64* nonnull %56) #7
  %1338 = load i64, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1321) #7
  %1339 = select i1 %1337, i64 %1338, i64 0
  %1340 = trunc i64 %1339 to i32
  %1341 = icmp slt i32 %1340, 5
  br i1 %1341, label %1342, label %1416

1342:                                             ; preds = %1333
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1322) #7
  store i64 0, i64* %55, align 8
  %1343 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 1, i64* nonnull %55) #7
  %1344 = load i64, i64* %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1322) #7
  %1345 = icmp eq i64 %1344, 1
  %1346 = and i1 %1343, %1345
  br i1 %1346, label %1347, label %1416

1347:                                             ; preds = %1342
  %1348 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1320, i32 4) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1323) #7
  store i64 0, i64* %54, align 8
  %1349 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 4, i64* nonnull %54) #7
  %1350 = load i64, i64* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1323) #7
  %1351 = trunc i64 %1350 to i32
  %1352 = select i1 %1349, i32 %1351, i32 0
  %1353 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1320, i32 1) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1324) #7
  store i64 0, i64* %53, align 8
  %1354 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 3, i64* nonnull %53) #7
  %1355 = load i64, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1324) #7
  %1356 = icmp eq i64 %1355, 7
  %1357 = and i1 %1354, %1356
  br i1 %1357, label %1358, label %1416

1358:                                             ; preds = %1347
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1325) #7
  store i64 0, i64* %52, align 8
  %1359 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 8, i64* nonnull %52) #7
  %1360 = load i64, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1325) #7
  %1361 = trunc i64 %1360 to i32
  %1362 = select i1 %1359, i32 %1361, i32 0
  %1363 = icmp eq i32 %1340, 0
  br i1 %1363, label %1364, label %1401

1364:                                             ; preds = %1358
  %1365 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1320, i32 1) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1326) #7
  store i64 0, i64* %51, align 8
  %1366 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 1, i64* nonnull %51) #7
  %1367 = load i64, i64* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1326) #7
  %1368 = icmp eq i64 %1367, 0
  %1369 = xor i1 %1366, true
  %1370 = or i1 %1368, %1369
  br i1 %1370, label %1371, label %1416

1371:                                             ; preds = %1364
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1327) #7
  store i64 0, i64* %50, align 8
  %1372 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 11, i64* nonnull %50) #7
  %1373 = load i64, i64* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1327) #7
  %1374 = icmp eq i64 %1373, 2047
  %1375 = and i1 %1372, %1374
  br i1 %1375, label %1376, label %1416

1376:                                             ; preds = %1371
  %1377 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1320, i32 4) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1328) #7
  store i64 0, i64* %49, align 8
  %1378 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 4, i64* nonnull %49) #7
  %1379 = load i64, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1328) #7
  %1380 = icmp eq i64 %1379, 15
  %1381 = and i1 %1378, %1380
  br i1 %1381, label %1382, label %1416

1382:                                             ; preds = %1376
  %1383 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1320, i32 4) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1329) #7
  store i64 0, i64* %48, align 8
  %1384 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 4, i64* nonnull %48) #7
  %1385 = load i64, i64* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1329) #7
  %1386 = icmp eq i64 %1385, 15
  %1387 = and i1 %1384, %1386
  br i1 %1387, label %1388, label %1416

1388:                                             ; preds = %1382
  %1389 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1320, i32 4) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1330) #7
  store i64 0, i64* %47, align 8
  %1390 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 4, i64* nonnull %47) #7
  %1391 = load i64, i64* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1330) #7
  %1392 = icmp eq i64 %1391, 15
  %1393 = and i1 %1390, %1392
  br i1 %1393, label %1394, label %1416

1394:                                             ; preds = %1388
  %1395 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1320, i32 3) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1331) #7
  store i64 0, i64* %46, align 8
  %1396 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1320, i32 24, i64* nonnull %46) #7
  %1397 = load i64, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1331) #7
  %1398 = icmp eq i64 %1397, 16777215
  %1399 = and i1 %1396, %1398
  br i1 %1399, label %1400, label %1416

1400:                                             ; preds = %1394
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1316, i8 -1, i64 24, i1 false) #7
  br label %1410

1401:                                             ; preds = %1358
  %1402 = icmp eq i32 %1335, %1352
  br i1 %1402, label %1403, label %1416

1403:                                             ; preds = %1401
  %1404 = shl i64 %1339, 32
  %1405 = ashr exact i64 %1404, 32
  %1406 = getelementptr inbounds [6 x i32], [6 x i32]* %57, i64 0, i64 %1405
  %1407 = load i32, i32* %1406, align 4
  %1408 = icmp slt i32 %1407, %1362
  br i1 %1408, label %1409, label %1416

1409:                                             ; preds = %1403
  store i32 %1362, i32* %1406, align 4
  br label %1410

1410:                                             ; preds = %1409, %1400
  %1411 = phi i32 [ %1335, %1409 ], [ %1352, %1400 ]
  %1412 = add nuw i64 %1334, 80
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %58) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1319) #7
  %1413 = trunc i64 %1412 to i32
  %1414 = or i32 %1413, 11
  %1415 = icmp slt i32 %1414, %1
  br i1 %1415, label %1333, label %1332

1416:                                             ; preds = %1403, %1401, %1394, %1388, %1382, %1376, %1371, %1364, %1347, %1342, %1333
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %58) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1319) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1316) #7
  %1417 = icmp sgt i32 %1, 16
  br i1 %1417, label %1418, label %1639

1418:                                             ; preds = %1416
  %1419 = bitcast %"class.media::BitReader"* %45 to i8*
  %1420 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %45, i64 0, i32 4
  %1421 = bitcast i64* %43 to i8*
  %1422 = bitcast i64* %42 to i8*
  %1423 = bitcast i64* %41 to i8*
  %1424 = bitcast i64* %44 to i8*
  br label %1425

1425:                                             ; preds = %1521, %1418
  %1426 = phi i32 [ %1522, %1521 ], [ 0, %1418 ]
  %1427 = phi i1 [ %1523, %1521 ], [ undef, %1418 ]
  %1428 = phi i8 [ %1524, %1521 ], [ 0, %1418 ]
  %1429 = add nsw i32 %1426, 4
  %1430 = icmp slt i32 %1429, %1
  br i1 %1430, label %1431, label %1469

1431:                                             ; preds = %1425
  %1432 = sext i32 %1426 to i64
  %1433 = getelementptr inbounds i8, i8* %0, i64 %1432
  %1434 = load i8, i8* %1433, align 1
  %1435 = zext i8 %1434 to i32
  %1436 = shl nuw nsw i32 %1435, 16
  %1437 = getelementptr inbounds i8, i8* %1433, i64 1
  %1438 = load i8, i8* %1437, align 1
  %1439 = zext i8 %1438 to i32
  %1440 = shl nuw nsw i32 %1439, 8
  %1441 = or i32 %1440, %1436
  %1442 = getelementptr inbounds i8, i8* %1433, i64 2
  %1443 = load i8, i8* %1442, align 1
  %1444 = and i8 %1443, -16
  %1445 = zext i8 %1444 to i32
  %1446 = or i32 %1441, %1445
  %1447 = icmp eq i32 %1446, 256
  br i1 %1447, label %1476, label %1464

1448:                                             ; preds = %1464
  %1449 = getelementptr inbounds i8, i8* %0, i64 %1466
  %1450 = load i8, i8* %1449, align 1
  %1451 = zext i8 %1450 to i32
  %1452 = shl nuw nsw i32 %1451, 16
  %1453 = getelementptr inbounds i8, i8* %1449, i64 1
  %1454 = load i8, i8* %1453, align 1
  %1455 = zext i8 %1454 to i32
  %1456 = shl nuw nsw i32 %1455, 8
  %1457 = or i32 %1456, %1452
  %1458 = getelementptr inbounds i8, i8* %1449, i64 2
  %1459 = load i8, i8* %1458, align 1
  %1460 = and i8 %1459, -16
  %1461 = zext i8 %1460 to i32
  %1462 = or i32 %1457, %1461
  %1463 = icmp eq i32 %1462, 256
  br i1 %1463, label %1472, label %1464

1464:                                             ; preds = %1431, %1448
  %1465 = phi i64 [ %1466, %1448 ], [ %1432, %1431 ]
  %1466 = add nsw i64 %1465, 1
  %1467 = add nsw i64 %1465, 5
  %1468 = icmp slt i64 %1467, %111
  br i1 %1468, label %1448, label %1469

1469:                                             ; preds = %1425, %1464
  %1470 = and i8 %1428, 1
  %1471 = icmp eq i8 %1470, 0
  br i1 %1471, label %1528, label %2584

1472:                                             ; preds = %1448
  %1473 = trunc i64 %1466 to i32
  %1474 = shl i64 %1466, 32
  %1475 = ashr exact i64 %1474, 32
  br label %1476

1476:                                             ; preds = %1472, %1431
  %1477 = phi i64 [ %1475, %1472 ], [ %1432, %1431 ]
  %1478 = phi i32 [ %1473, %1472 ], [ %1426, %1431 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1419) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1419, i8 -86, i64 72, i1 false) #7
  %1479 = getelementptr inbounds i8, i8* %0, i64 %1477
  %1480 = sub nsw i32 %1, %1478
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %45, i8* %1479, i32 %1480) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1421) #7
  store i64 0, i64* %43, align 8
  %1481 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1420, i32 20, i64* nonnull %43) #7
  %1482 = load i64, i64* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1421) #7
  %1483 = icmp eq i64 %1482, 16
  %1484 = and i1 %1481, %1483
  br i1 %1484, label %1485, label %1521

1485:                                             ; preds = %1476
  %1486 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1420, i32 11) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1422) #7
  store i64 0, i64* %42, align 8
  %1487 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1420, i32 1, i64* nonnull %42) #7
  %1488 = load i64, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1422) #7
  %1489 = trunc i64 %1488 to i32
  %1490 = icmp eq i32 %1489, 1
  %1491 = and i1 %1487, %1490
  br i1 %1491, label %1492, label %1506

1492:                                             ; preds = %1485, %1499
  %1493 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1420, i32 8) #7
  br i1 %1493, label %1497, label %1494

1494:                                             ; preds = %1492
  %1495 = and i8 %1428, 1
  %1496 = icmp ne i8 %1495, 0
  br label %1521

1497:                                             ; preds = %1492
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1423) #7
  store i64 0, i64* %41, align 8
  %1498 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1420, i32 1, i64* nonnull %41) #7
  br i1 %1498, label %1499, label %1503

1499:                                             ; preds = %1497
  %1500 = load i64, i64* %41, align 8
  %1501 = trunc i64 %1500 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1423) #7
  %1502 = icmp eq i32 %1501, 1
  br i1 %1502, label %1492, label %1506

1503:                                             ; preds = %1497
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1423) #7
  %1504 = and i8 %1428, 1
  %1505 = icmp ne i8 %1504, 0
  br label %1521

1506:                                             ; preds = %1499, %1485
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1424) #7
  store i64 0, i64* %44, align 8
  %1507 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1420, i32 16, i64* nonnull %44) #7
  br i1 %1507, label %1511, label %1508

1508:                                             ; preds = %1506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1424) #7
  %1509 = and i8 %1428, 1
  %1510 = icmp ne i8 %1509, 0
  br label %1521

1511:                                             ; preds = %1506
  %1512 = load i64, i64* %44, align 8
  %1513 = trunc i64 %1512 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1424) #7
  %1514 = icmp eq i32 %1513, 1
  %1515 = add nsw i32 %1478, 4
  %1516 = select i1 %1514, i32 %1515, i32 %1478
  %1517 = and i1 %1427, %1514
  %1518 = select i1 %1514, i8 1, i8 %1428
  %1519 = xor i1 %1514, true
  %1520 = zext i1 %1519 to i32
  br label %1521

1521:                                             ; preds = %1511, %1508, %1503, %1494, %1476
  %1522 = phi i32 [ %1478, %1476 ], [ %1478, %1503 ], [ %1478, %1494 ], [ %1478, %1508 ], [ %1516, %1511 ]
  %1523 = phi i1 [ false, %1476 ], [ %1505, %1503 ], [ %1496, %1494 ], [ %1510, %1508 ], [ %1517, %1511 ]
  %1524 = phi i8 [ %1428, %1476 ], [ %1428, %1503 ], [ %1428, %1494 ], [ %1428, %1508 ], [ %1518, %1511 ]
  %1525 = phi i32 [ 1, %1476 ], [ 1, %1503 ], [ 1, %1494 ], [ 1, %1508 ], [ %1520, %1511 ]
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %45) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1419) #7
  %1526 = icmp eq i32 %1525, 0
  br i1 %1526, label %1425, label %1527

1527:                                             ; preds = %1521
  br i1 %1523, label %2584, label %1528

1528:                                             ; preds = %1469, %1527
  %1529 = bitcast %"class.media::BitReader"* %40 to i8*
  %1530 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %40, i64 0, i32 4
  %1531 = bitcast i64* %38 to i8*
  %1532 = bitcast i64* %37 to i8*
  %1533 = bitcast i64* %36 to i8*
  %1534 = bitcast i64* %35 to i8*
  %1535 = bitcast i64* %34 to i8*
  %1536 = bitcast i64* %33 to i8*
  %1537 = bitcast i64* %32 to i8*
  %1538 = bitcast i64* %39 to i8*
  br label %1539

1539:                                             ; preds = %1528, %1632
  %1540 = phi i8 [ 1, %1632 ], [ 0, %1528 ]
  %1541 = phi i32 [ %1633, %1632 ], [ 0, %1528 ]
  %1542 = sext i32 %1541 to i64
  %1543 = getelementptr inbounds i8, i8* %0, i64 %1542
  %1544 = load i8, i8* %1543, align 1
  %1545 = zext i8 %1544 to i32
  %1546 = shl nuw nsw i32 %1545, 16
  %1547 = getelementptr inbounds i8, i8* %1543, i64 1
  %1548 = load i8, i8* %1547, align 1
  %1549 = zext i8 %1548 to i32
  %1550 = shl nuw nsw i32 %1549, 8
  %1551 = or i32 %1550, %1546
  %1552 = getelementptr inbounds i8, i8* %1543, i64 2
  %1553 = load i8, i8* %1552, align 1
  %1554 = and i8 %1553, -4
  %1555 = zext i8 %1554 to i32
  %1556 = or i32 %1551, %1555
  %1557 = icmp eq i32 %1556, 128
  br i1 %1557, label %1583, label %1574

1558:                                             ; preds = %1574
  %1559 = getelementptr inbounds i8, i8* %0, i64 %1576
  %1560 = load i8, i8* %1559, align 1
  %1561 = zext i8 %1560 to i32
  %1562 = shl nuw nsw i32 %1561, 16
  %1563 = getelementptr inbounds i8, i8* %1559, i64 1
  %1564 = load i8, i8* %1563, align 1
  %1565 = zext i8 %1564 to i32
  %1566 = shl nuw nsw i32 %1565, 8
  %1567 = or i32 %1566, %1562
  %1568 = getelementptr inbounds i8, i8* %1559, i64 2
  %1569 = load i8, i8* %1568, align 1
  %1570 = and i8 %1569, -4
  %1571 = zext i8 %1570 to i32
  %1572 = or i32 %1567, %1571
  %1573 = icmp eq i32 %1572, 128
  br i1 %1573, label %1579, label %1574

1574:                                             ; preds = %1539, %1558
  %1575 = phi i64 [ %1576, %1558 ], [ %1542, %1539 ]
  %1576 = add nsw i64 %1575, 1
  %1577 = add nsw i64 %1575, 10
  %1578 = icmp slt i64 %1577, %111
  br i1 %1578, label %1558, label %1637

1579:                                             ; preds = %1558
  %1580 = trunc i64 %1576 to i32
  %1581 = shl i64 %1576, 32
  %1582 = ashr exact i64 %1581, 32
  br label %1583

1583:                                             ; preds = %1579, %1539
  %1584 = phi i64 [ %1582, %1579 ], [ %1542, %1539 ]
  %1585 = phi i32 [ %1580, %1579 ], [ %1541, %1539 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1529) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1529, i8 -86, i64 72, i1 false) #7
  %1586 = getelementptr inbounds i8, i8* %0, i64 %1584
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %40, i8* %1586, i32 9) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1531) #7
  store i64 0, i64* %38, align 8
  %1587 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1530, i32 22, i64* nonnull %38) #7
  %1588 = load i64, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1531) #7
  %1589 = icmp eq i64 %1588, 32
  %1590 = and i1 %1587, %1589
  br i1 %1590, label %1591, label %1636

1591:                                             ; preds = %1583
  %1592 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1530, i32 8) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1532) #7
  store i64 0, i64* %37, align 8
  %1593 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1530, i32 2, i64* nonnull %37) #7
  %1594 = load i64, i64* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1532) #7
  %1595 = icmp eq i64 %1594, 2
  %1596 = and i1 %1593, %1595
  br i1 %1596, label %1597, label %1636

1597:                                             ; preds = %1591
  %1598 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1530, i32 3) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1533) #7
  store i64 0, i64* %36, align 8
  %1599 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1530, i32 3, i64* nonnull %36) #7
  %1600 = load i64, i64* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1533) #7
  %1601 = trunc i64 %1600 to i32
  %1602 = select i1 %1599, i32 %1601, i32 0
  switch i32 %1602, label %1632 [
    i32 6, label %1636
    i32 0, label %1636
    i32 7, label %1603
  ]

1603:                                             ; preds = %1597
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1534) #7
  store i64 0, i64* %35, align 8
  %1604 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1530, i32 3, i64* nonnull %35) #7
  %1605 = load i64, i64* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1534) #7
  %1606 = trunc i64 %1605 to i32
  %1607 = select i1 %1604, i32 %1606, i32 0
  switch i32 %1607, label %1636 [
    i32 1, label %1608
    i32 0, label %1619
  ]

1608:                                             ; preds = %1603
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1535) #7
  store i64 0, i64* %34, align 8
  %1609 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1530, i32 3, i64* nonnull %34) #7
  %1610 = load i64, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1535) #7
  %1611 = trunc i64 %1610 to i32
  %1612 = select i1 %1609, i32 %1611, i32 0
  switch i32 %1612, label %1613 [
    i32 7, label %1636
    i32 0, label %1636
  ]

1613:                                             ; preds = %1608
  %1614 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1530, i32 11) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1536) #7
  store i64 0, i64* %33, align 8
  %1615 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1530, i32 4, i64* nonnull %33) #7
  %1616 = load i64, i64* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1536) #7
  %1617 = icmp eq i64 %1616, 8
  %1618 = and i1 %1615, %1617
  br i1 %1618, label %1619, label %1636

1619:                                             ; preds = %1613, %1603
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1537) #7
  store i64 0, i64* %32, align 8
  %1620 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1530, i32 3, i64* nonnull %32) #7
  %1621 = load i64, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1537) #7
  %1622 = trunc i64 %1621 to i32
  %1623 = or i32 %1622, 1
  %1624 = icmp eq i32 %1623, 7
  %1625 = and i1 %1620, %1624
  br i1 %1625, label %1636, label %1626

1626:                                             ; preds = %1619
  %1627 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1530, i32 3) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1538) #7
  store i64 0, i64* %39, align 8
  %1628 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1530, i32 3, i64* nonnull %39) #7
  %1629 = load i64, i64* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1538) #7
  %1630 = icmp eq i64 %1629, 1
  %1631 = and i1 %1628, %1630
  br i1 %1631, label %1632, label %1636

1632:                                             ; preds = %1626, %1597
  %1633 = add nsw i32 %1585, 9
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %40) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1529) #7
  %1634 = add nsw i32 %1585, 18
  %1635 = icmp slt i32 %1634, %1
  br i1 %1635, label %1539, label %2584

1636:                                             ; preds = %1626, %1619, %1613, %1608, %1608, %1603, %1597, %1597, %1591, %1583
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %40) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1529) #7
  br label %1639

1637:                                             ; preds = %1574
  %1638 = icmp eq i8 %1540, 0
  br i1 %1638, label %1639, label %2584

1639:                                             ; preds = %1637, %1416, %213, %2, %1315, %1636
  %1640 = icmp sgt i32 %1, 4
  br i1 %1640, label %1641, label %2583

1641:                                             ; preds = %1639
  %1642 = sext i32 %1 to i64
  %1643 = bitcast %"class.media::BitReader"* %31 to i8*
  %1644 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %31, i64 0, i32 4
  %1645 = bitcast i64* %29 to i8*
  %1646 = bitcast i64* %28 to i8*
  %1647 = bitcast i64* %27 to i8*
  %1648 = bitcast i64* %30 to i8*
  br label %1649

1649:                                             ; preds = %1641, %1720
  %1650 = phi i32 [ 0, %1641 ], [ %1721, %1720 ]
  %1651 = phi i32 [ 0, %1641 ], [ %1722, %1720 ]
  %1652 = sext i32 %1651 to i64
  %1653 = getelementptr inbounds i8, i8* %0, i64 %1652
  %1654 = load i8, i8* %1653, align 1
  %1655 = zext i8 %1654 to i32
  %1656 = shl nuw nsw i32 %1655, 16
  %1657 = getelementptr inbounds i8, i8* %1653, i64 1
  %1658 = load i8, i8* %1657, align 1
  %1659 = zext i8 %1658 to i32
  %1660 = shl nuw nsw i32 %1659, 8
  %1661 = or i32 %1660, %1656
  %1662 = getelementptr inbounds i8, i8* %1653, i64 2
  %1663 = load i8, i8* %1662, align 1
  %1664 = zext i8 %1663 to i32
  %1665 = or i32 %1661, %1664
  %1666 = icmp eq i32 %1665, 1
  br i1 %1666, label %1691, label %1682

1667:                                             ; preds = %1682
  %1668 = getelementptr inbounds i8, i8* %0, i64 %1684
  %1669 = load i8, i8* %1668, align 1
  %1670 = zext i8 %1669 to i32
  %1671 = shl nuw nsw i32 %1670, 16
  %1672 = getelementptr inbounds i8, i8* %1668, i64 1
  %1673 = load i8, i8* %1672, align 1
  %1674 = zext i8 %1673 to i32
  %1675 = shl nuw nsw i32 %1674, 8
  %1676 = or i32 %1675, %1671
  %1677 = getelementptr inbounds i8, i8* %1668, i64 2
  %1678 = load i8, i8* %1677, align 1
  %1679 = zext i8 %1678 to i32
  %1680 = or i32 %1676, %1679
  %1681 = icmp eq i32 %1680, 1
  br i1 %1681, label %1687, label %1682

1682:                                             ; preds = %1649, %1667
  %1683 = phi i64 [ %1684, %1667 ], [ %1652, %1649 ]
  %1684 = add nsw i64 %1683, 1
  %1685 = add nsw i64 %1683, 5
  %1686 = icmp slt i64 %1685, %1642
  br i1 %1686, label %1667, label %1726

1687:                                             ; preds = %1667
  %1688 = trunc i64 %1684 to i32
  %1689 = shl i64 %1684, 32
  %1690 = ashr exact i64 %1689, 32
  br label %1691

1691:                                             ; preds = %1687, %1649
  %1692 = phi i64 [ %1690, %1687 ], [ %1652, %1649 ]
  %1693 = phi i32 [ %1688, %1687 ], [ %1651, %1649 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1643) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1643, i8 -86, i64 72, i1 false) #7
  %1694 = getelementptr inbounds i8, i8* %0, i64 %1692
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %31, i8* %1694, i32 4) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1645) #7
  store i64 0, i64* %29, align 8
  %1695 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1644, i32 24, i64* nonnull %29) #7
  %1696 = load i64, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1645) #7
  %1697 = icmp eq i64 %1696, 1
  %1698 = and i1 %1695, %1697
  br i1 %1698, label %1699, label %1725

1699:                                             ; preds = %1691
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1646) #7
  store i64 0, i64* %28, align 8
  %1700 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1644, i32 1, i64* nonnull %28) #7
  %1701 = load i64, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1646) #7
  %1702 = icmp eq i64 %1701, 0
  %1703 = xor i1 %1700, true
  %1704 = or i1 %1702, %1703
  br i1 %1704, label %1705, label %1725

1705:                                             ; preds = %1699
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1647) #7
  store i64 0, i64* %27, align 8
  %1706 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1644, i32 2, i64* nonnull %27) #7
  %1707 = load i64, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1647) #7
  %1708 = trunc i64 %1707 to i32
  %1709 = select i1 %1706, i32 %1708, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1648) #7
  store i64 0, i64* %30, align 8
  %1710 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1644, i32 5, i64* nonnull %30) #7
  %1711 = load i64, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1648) #7
  %1712 = trunc i64 %1711 to i32
  %1713 = select i1 %1710, i32 %1712, i32 0
  switch i32 %1713, label %1720 [
    i32 5, label %1714
    i32 6, label %1716
    i32 9, label %1716
    i32 10, label %1716
    i32 11, label %1716
    i32 12, label %1716
    i32 7, label %1718
    i32 8, label %1718
  ]

1714:                                             ; preds = %1705
  %1715 = icmp eq i32 %1709, 0
  br i1 %1715, label %1725, label %1720

1716:                                             ; preds = %1705, %1705, %1705, %1705, %1705
  %1717 = icmp eq i32 %1709, 0
  br i1 %1717, label %1720, label %1725

1718:                                             ; preds = %1705, %1705
  %1719 = add nsw i32 %1650, 1
  br label %1720

1720:                                             ; preds = %1718, %1716, %1714, %1705
  %1721 = phi i32 [ %1650, %1705 ], [ %1719, %1718 ], [ %1650, %1716 ], [ %1650, %1714 ]
  %1722 = add nsw i32 %1693, 4
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1643) #7
  %1723 = add nsw i32 %1693, 8
  %1724 = icmp slt i32 %1723, %1
  br i1 %1724, label %1649, label %1726

1725:                                             ; preds = %1716, %1714, %1699, %1691
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1643) #7
  br label %1729

1726:                                             ; preds = %1720, %1682
  %1727 = phi i32 [ %1650, %1682 ], [ %1721, %1720 ]
  %1728 = icmp sgt i32 %1727, 0
  br i1 %1728, label %2584, label %1729

1729:                                             ; preds = %1726, %1725
  %1730 = bitcast %"class.media::BitReader"* %26 to i8*
  %1731 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %26, i64 0, i32 4
  %1732 = bitcast i64* %24 to i8*
  %1733 = bitcast i64* %23 to i8*
  %1734 = bitcast i64* %21 to i8*
  %1735 = bitcast i64* %20 to i8*
  %1736 = bitcast i64* %19 to i8*
  %1737 = bitcast i64* %25 to i8*
  %1738 = bitcast i64* %22 to i8*
  %1739 = icmp sgt i32 %1, 6
  br i1 %1739, label %1740, label %2542

1740:                                             ; preds = %1729, %1869
  %1741 = phi i32 [ %1873, %1869 ], [ 0, %1729 ]
  %1742 = phi i32 [ %1872, %1869 ], [ 0, %1729 ]
  %1743 = phi i32 [ %1871, %1869 ], [ 0, %1729 ]
  %1744 = phi i32 [ %1870, %1869 ], [ 0, %1729 ]
  %1745 = phi i32 [ %1874, %1869 ], [ 0, %1729 ]
  %1746 = sext i32 %1745 to i64
  %1747 = getelementptr inbounds i8, i8* %0, i64 %1746
  %1748 = load i8, i8* %1747, align 1
  %1749 = zext i8 %1748 to i32
  %1750 = shl nuw nsw i32 %1749, 16
  %1751 = getelementptr inbounds i8, i8* %1747, i64 1
  %1752 = load i8, i8* %1751, align 1
  %1753 = zext i8 %1752 to i32
  %1754 = shl nuw nsw i32 %1753, 8
  %1755 = or i32 %1754, %1750
  %1756 = getelementptr inbounds i8, i8* %1747, i64 2
  %1757 = load i8, i8* %1756, align 1
  %1758 = zext i8 %1757 to i32
  %1759 = or i32 %1755, %1758
  %1760 = icmp eq i32 %1759, 1
  br i1 %1760, label %1785, label %1776

1761:                                             ; preds = %1776
  %1762 = getelementptr inbounds i8, i8* %0, i64 %1778
  %1763 = load i8, i8* %1762, align 1
  %1764 = zext i8 %1763 to i32
  %1765 = shl nuw nsw i32 %1764, 16
  %1766 = getelementptr inbounds i8, i8* %1762, i64 1
  %1767 = load i8, i8* %1766, align 1
  %1768 = zext i8 %1767 to i32
  %1769 = shl nuw nsw i32 %1768, 8
  %1770 = or i32 %1769, %1765
  %1771 = getelementptr inbounds i8, i8* %1762, i64 2
  %1772 = load i8, i8* %1771, align 1
  %1773 = zext i8 %1772 to i32
  %1774 = or i32 %1770, %1773
  %1775 = icmp eq i32 %1774, 1
  br i1 %1775, label %1781, label %1776

1776:                                             ; preds = %1740, %1761
  %1777 = phi i64 [ %1778, %1761 ], [ %1746, %1740 ]
  %1778 = add nsw i64 %1777, 1
  %1779 = add nsw i64 %1777, 7
  %1780 = icmp slt i64 %1779, %1642
  br i1 %1780, label %1761, label %1878

1781:                                             ; preds = %1761
  %1782 = trunc i64 %1778 to i32
  %1783 = shl i64 %1778, 32
  %1784 = ashr exact i64 %1783, 32
  br label %1785

1785:                                             ; preds = %1781, %1740
  %1786 = phi i64 [ %1784, %1781 ], [ %1746, %1740 ]
  %1787 = phi i32 [ %1782, %1781 ], [ %1745, %1740 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1730) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1730, i8 -86, i64 72, i1 false) #7
  %1788 = getelementptr inbounds i8, i8* %0, i64 %1786
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %26, i8* %1788, i32 6) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1732) #7
  store i64 0, i64* %24, align 8
  %1789 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1731, i32 24, i64* nonnull %24) #7
  %1790 = load i64, i64* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1732) #7
  %1791 = icmp eq i64 %1790, 1
  %1792 = and i1 %1789, %1791
  br i1 %1792, label %1793, label %1877

1793:                                             ; preds = %1785
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1733) #7
  store i64 0, i64* %23, align 8
  %1794 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1731, i32 8, i64* nonnull %23) #7
  %1795 = load i64, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1733) #7
  %1796 = trunc i64 %1795 to i32
  %1797 = select i1 %1794, i32 %1796, i32 0
  %1798 = add i32 %1797, -48
  %1799 = icmp ugt i32 %1798, 127
  %1800 = add i32 %1797, -183
  %1801 = icmp ugt i32 %1800, 2
  %1802 = and i1 %1799, %1801
  br i1 %1802, label %1803, label %1877

1803:                                             ; preds = %1793
  switch i32 %1797, label %1869 [
    i32 176, label %1804
    i32 177, label %1837
    i32 181, label %1840
    i32 182, label %1866
  ]

1804:                                             ; preds = %1803
  %1805 = add nsw i32 %1741, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1738) #7
  store i64 0, i64* %22, align 8
  %1806 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1731, i32 8, i64* nonnull %22) #7
  %1807 = load i64, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1738) #7
  %1808 = trunc i64 %1807 to i32
  %1809 = select i1 %1806, i32 %1808, i32 0
  %1810 = icmp sgt i32 %1809, 0
  %1811 = add i32 %1809, -4
  %1812 = icmp ugt i32 %1811, 12
  %1813 = add i32 %1809, -19
  %1814 = icmp ugt i32 %1813, 13
  %1815 = add i32 %1809, -35
  %1816 = icmp ugt i32 %1815, 14
  %1817 = add i32 %1809, -53
  %1818 = icmp ugt i32 %1817, 12
  %1819 = insertelement <8 x i32> undef, i32 %1809, i32 0
  %1820 = shufflevector <8 x i32> %1819, <8 x i32> undef, <8 x i32> zeroinitializer
  %1821 = add <8 x i32> %1820, <i32 -195, i32 -181, i32 -164, i32 -149, i32 -131, i32 -115, i32 -101, i32 -67>
  %1822 = icmp ugt <8 x i32> %1821, <i32 13, i32 11, i32 12, i32 11, i32 13, i32 13, i32 11, i32 29>
  %1823 = shufflevector <8 x i1> %1822, <8 x i1> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %1824 = and <8 x i1> %1822, %1823
  %1825 = shufflevector <8 x i1> %1824, <8 x i1> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1826 = and <8 x i1> %1824, %1825
  %1827 = shufflevector <8 x i1> %1826, <8 x i1> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1828 = and <8 x i1> %1826, %1827
  %1829 = extractelement <8 x i1> %1828, i32 0
  %1830 = and i1 %1829, %1818
  %1831 = and i1 %1830, %1816
  %1832 = and i1 %1831, %1814
  %1833 = and i1 %1832, %1810
  %1834 = and i1 %1833, %1812
  %1835 = icmp slt i32 %1809, 228
  %1836 = and i1 %1835, %1834
  br i1 %1836, label %1869, label %1877

1837:                                             ; preds = %1803
  %1838 = add nsw i32 %1744, 1
  %1839 = icmp eq i32 %1838, %1741
  br i1 %1839, label %1869, label %1877

1840:                                             ; preds = %1803
  %1841 = add nsw i32 %1743, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1734) #7
  store i64 0, i64* %21, align 8
  %1842 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1731, i32 1, i64* nonnull %21) #7
  %1843 = load i64, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1734) #7
  %1844 = icmp eq i64 %1843, 1
  %1845 = and i1 %1842, %1844
  br i1 %1845, label %1846, label %1859

1846:                                             ; preds = %1840
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1735) #7
  store i64 0, i64* %20, align 8
  %1847 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1731, i32 4, i64* nonnull %20) #7
  %1848 = load i64, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1735) #7
  %1849 = trunc i64 %1848 to i32
  %1850 = add i32 %1849, -1
  %1851 = icmp ult i32 %1850, 2
  %1852 = and i1 %1847, %1851
  br i1 %1852, label %1853, label %1877

1853:                                             ; preds = %1846
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1736) #7
  store i64 0, i64* %19, align 8
  %1854 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1731, i32 3, i64* nonnull %19) #7
  %1855 = load i64, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1736) #7
  %1856 = icmp eq i64 %1855, 0
  %1857 = xor i1 %1854, true
  %1858 = or i1 %1856, %1857
  br i1 %1858, label %1877, label %1859

1859:                                             ; preds = %1853, %1840
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1737) #7
  store i64 0, i64* %25, align 8
  %1860 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1731, i32 4, i64* nonnull %25) #7
  %1861 = load i64, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1737) #7
  %1862 = trunc i64 %1861 to i32
  %1863 = add i32 %1862, -1
  %1864 = icmp ult i32 %1863, 5
  %1865 = and i1 %1860, %1864
  br i1 %1865, label %1869, label %1877

1866:                                             ; preds = %1803
  %1867 = add nsw i32 %1742, 1
  %1868 = icmp slt i32 %1742, %1743
  br i1 %1868, label %1869, label %1877

1869:                                             ; preds = %1866, %1859, %1837, %1804, %1803
  %1870 = phi i32 [ %1744, %1803 ], [ %1744, %1866 ], [ %1744, %1859 ], [ %1741, %1837 ], [ %1744, %1804 ]
  %1871 = phi i32 [ %1743, %1803 ], [ %1743, %1866 ], [ %1841, %1859 ], [ %1743, %1837 ], [ %1743, %1804 ]
  %1872 = phi i32 [ %1742, %1803 ], [ %1867, %1866 ], [ %1742, %1859 ], [ %1742, %1837 ], [ %1742, %1804 ]
  %1873 = phi i32 [ %1741, %1803 ], [ %1741, %1866 ], [ %1741, %1859 ], [ %1741, %1837 ], [ %1805, %1804 ]
  %1874 = add nsw i32 %1787, 6
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1730) #7
  %1875 = add nsw i32 %1787, 12
  %1876 = icmp slt i32 %1875, %1
  br i1 %1876, label %1740, label %1878

1877:                                             ; preds = %1866, %1859, %1853, %1846, %1837, %1804, %1793, %1785
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1730) #7
  br label %1884

1878:                                             ; preds = %1869, %1776
  %1879 = phi i32 [ %1743, %1776 ], [ %1871, %1869 ]
  %1880 = phi i32 [ %1741, %1776 ], [ %1873, %1869 ]
  %1881 = icmp sgt i32 %1880, 0
  %1882 = icmp sgt i32 %1879, 0
  %1883 = and i1 %1882, %1881
  br i1 %1883, label %2584, label %1884

1884:                                             ; preds = %1877, %1878
  %1885 = icmp sgt i32 %1, 23
  br i1 %1885, label %1886, label %2101

1886:                                             ; preds = %1884
  %1887 = load i8, i8* %0, align 1
  %1888 = icmp eq i8 %1887, -59
  br i1 %1888, label %1889, label %1994

1889:                                             ; preds = %1886
  %1890 = getelementptr inbounds i8, i8* %0, i64 4
  %1891 = load i8, i8* %1890, align 1
  %1892 = zext i8 %1891 to i32
  %1893 = shl nuw i32 %1892, 24
  %1894 = getelementptr inbounds i8, i8* %0, i64 5
  %1895 = load i8, i8* %1894, align 1
  %1896 = zext i8 %1895 to i32
  %1897 = shl nuw nsw i32 %1896, 16
  %1898 = or i32 %1897, %1893
  %1899 = getelementptr inbounds i8, i8* %0, i64 6
  %1900 = load i8, i8* %1899, align 1
  %1901 = zext i8 %1900 to i32
  %1902 = shl nuw nsw i32 %1901, 8
  %1903 = or i32 %1898, %1902
  %1904 = getelementptr inbounds i8, i8* %0, i64 7
  %1905 = load i8, i8* %1904, align 1
  %1906 = zext i8 %1905 to i32
  %1907 = or i32 %1903, %1906
  %1908 = icmp eq i32 %1907, 4
  br i1 %1908, label %1909, label %1994

1909:                                             ; preds = %1889
  %1910 = getelementptr inbounds i8, i8* %0, i64 20
  %1911 = load i8, i8* %1910, align 1
  %1912 = zext i8 %1911 to i32
  %1913 = shl nuw i32 %1912, 24
  %1914 = getelementptr inbounds i8, i8* %0, i64 21
  %1915 = load i8, i8* %1914, align 1
  %1916 = zext i8 %1915 to i32
  %1917 = shl nuw nsw i32 %1916, 16
  %1918 = or i32 %1917, %1913
  %1919 = getelementptr inbounds i8, i8* %0, i64 22
  %1920 = load i8, i8* %1919, align 1
  %1921 = zext i8 %1920 to i32
  %1922 = shl nuw nsw i32 %1921, 8
  %1923 = or i32 %1918, %1922
  %1924 = getelementptr inbounds i8, i8* %0, i64 23
  %1925 = load i8, i8* %1924, align 1
  %1926 = zext i8 %1925 to i32
  %1927 = or i32 %1923, %1926
  %1928 = icmp eq i32 %1927, 12
  br i1 %1928, label %1929, label %1994

1929:                                             ; preds = %1909
  %1930 = bitcast %"class.media::BitReader"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1930) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1930, i8 -86, i64 72, i1 false) #7
  %1931 = getelementptr inbounds i8, i8* %0, i64 8
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %17, i8* %1931, i32 12) #7
  %1932 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %17, i64 0, i32 4
  %1933 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1933) #7
  store i64 0, i64* %14, align 8
  %1934 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1932, i32 4, i64* nonnull %14) #7
  %1935 = load i64, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1933) #7
  %1936 = trunc i64 %1935 to i32
  %1937 = select i1 %1934, i32 %1936, i32 0
  %1938 = and i32 %1937, -5
  %1939 = icmp eq i32 %1938, 0
  br i1 %1939, label %1940, label %1970

1940:                                             ; preds = %1929
  %1941 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1932, i32 9) #7
  %1942 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1942) #7
  store i64 0, i64* %13, align 8
  %1943 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1932, i32 1, i64* nonnull %13) #7
  %1944 = load i64, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1942) #7
  %1945 = icmp eq i64 %1944, 0
  %1946 = xor i1 %1943, true
  %1947 = or i1 %1945, %1946
  br i1 %1947, label %1948, label %1986

1948:                                             ; preds = %1940
  %1949 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1932, i32 1) #7
  %1950 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1950) #7
  store i64 0, i64* %12, align 8
  %1951 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1932, i32 1, i64* nonnull %12) #7
  %1952 = load i64, i64* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1950) #7
  %1953 = icmp eq i64 %1952, 1
  %1954 = and i1 %1951, %1953
  br i1 %1954, label %1955, label %1986

1955:                                             ; preds = %1948
  %1956 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1932, i32 5) #7
  %1957 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1957) #7
  store i64 0, i64* %11, align 8
  %1958 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1932, i32 1, i64* nonnull %11) #7
  %1959 = load i64, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1957) #7
  %1960 = icmp eq i64 %1959, 0
  %1961 = xor i1 %1958, true
  %1962 = or i1 %1960, %1961
  br i1 %1962, label %1963, label %1986

1963:                                             ; preds = %1955
  %1964 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %1932, i32 9) #7
  %1965 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1965) #7
  store i64 0, i64* %10, align 8
  %1966 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1932, i32 1, i64* nonnull %10) #7
  %1967 = load i64, i64* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1965) #7
  %1968 = icmp eq i64 %1967, 1
  %1969 = and i1 %1966, %1968
  br i1 %1969, label %1979, label %1986

1970:                                             ; preds = %1929
  %1971 = icmp eq i32 %1937, 12
  br i1 %1971, label %1972, label %1986

1972:                                             ; preds = %1970
  %1973 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1973) #7
  store i64 0, i64* %9, align 8
  %1974 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1932, i32 28, i64* nonnull %9) #7
  %1975 = load i64, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1973) #7
  %1976 = icmp eq i64 %1975, 0
  %1977 = xor i1 %1974, true
  %1978 = or i1 %1976, %1977
  br i1 %1978, label %1979, label %1986

1979:                                             ; preds = %1972, %1963
  %1980 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1980) #7
  store i64 0, i64* %8, align 8
  %1981 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1932, i32 32, i64* nonnull %8) #7
  %1982 = load i64, i64* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1980) #7
  %1983 = icmp ult i64 %1982, 8193
  %1984 = xor i1 %1981, true
  %1985 = or i1 %1983, %1984
  br i1 %1985, label %1987, label %1986

1986:                                             ; preds = %1940, %1948, %1955, %1963, %1970, %1972, %1979
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1930) #7
  br label %2103

1987:                                             ; preds = %1979
  %1988 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1988) #7
  store i64 0, i64* %7, align 8
  %1989 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1932, i32 32, i64* nonnull %7) #7
  %1990 = load i64, i64* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1988) #7
  %1991 = icmp ult i64 %1990, 8193
  %1992 = xor i1 %1989, true
  %1993 = or i1 %1991, %1992
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1930) #7
  br i1 %1993, label %2584, label %2103

1994:                                             ; preds = %1909, %1889, %1886
  %1995 = bitcast %"class.media::BitReader"* %18 to i8*
  %1996 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %18, i64 0, i32 4
  %1997 = bitcast i64* %5 to i8*
  %1998 = bitcast i64* %4 to i8*
  %1999 = bitcast i64* %3 to i8*
  %2000 = bitcast i64* %15 to i8*
  %2001 = bitcast i64* %16 to i8*
  %2002 = bitcast i64* %6 to i8*
  br label %2003

2003:                                             ; preds = %2091, %1994
  %2004 = phi i8 [ %1887, %1994 ], [ %2094, %2091 ]
  %2005 = phi i32 [ 0, %1994 ], [ %2087, %2091 ]
  %2006 = phi i32 [ 0, %1994 ], [ %2086, %2091 ]
  %2007 = phi i32 [ 0, %1994 ], [ %2088, %2091 ]
  %2008 = sext i32 %2007 to i64
  %2009 = getelementptr inbounds i8, i8* %0, i64 %2008
  %2010 = zext i8 %2004 to i32
  %2011 = shl nuw nsw i32 %2010, 16
  %2012 = getelementptr inbounds i8, i8* %2009, i64 1
  %2013 = load i8, i8* %2012, align 1
  %2014 = zext i8 %2013 to i32
  %2015 = shl nuw nsw i32 %2014, 8
  %2016 = or i32 %2015, %2011
  %2017 = getelementptr inbounds i8, i8* %2009, i64 2
  %2018 = load i8, i8* %2017, align 1
  %2019 = zext i8 %2018 to i32
  %2020 = or i32 %2016, %2019
  %2021 = icmp eq i32 %2020, 1
  br i1 %2021, label %2046, label %2037

2022:                                             ; preds = %2037
  %2023 = getelementptr inbounds i8, i8* %0, i64 %2039
  %2024 = load i8, i8* %2023, align 1
  %2025 = zext i8 %2024 to i32
  %2026 = shl nuw nsw i32 %2025, 16
  %2027 = getelementptr inbounds i8, i8* %2023, i64 1
  %2028 = load i8, i8* %2027, align 1
  %2029 = zext i8 %2028 to i32
  %2030 = shl nuw nsw i32 %2029, 8
  %2031 = or i32 %2030, %2026
  %2032 = getelementptr inbounds i8, i8* %2023, i64 2
  %2033 = load i8, i8* %2032, align 1
  %2034 = zext i8 %2033 to i32
  %2035 = or i32 %2031, %2034
  %2036 = icmp eq i32 %2035, 1
  br i1 %2036, label %2042, label %2037

2037:                                             ; preds = %2003, %2022
  %2038 = phi i64 [ %2039, %2022 ], [ %2008, %2003 ]
  %2039 = add nsw i64 %2038, 1
  %2040 = add nsw i64 %2038, 6
  %2041 = icmp slt i64 %2040, %1642
  br i1 %2041, label %2022, label %2095

2042:                                             ; preds = %2022
  %2043 = trunc i64 %2039 to i32
  %2044 = shl i64 %2039, 32
  %2045 = ashr exact i64 %2044, 32
  br label %2046

2046:                                             ; preds = %2042, %2003
  %2047 = phi i64 [ %2045, %2042 ], [ %2008, %2003 ]
  %2048 = phi i32 [ %2043, %2042 ], [ %2007, %2003 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1995) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1995, i8 -86, i64 72, i1 false) #7
  %2049 = getelementptr inbounds i8, i8* %0, i64 %2047
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %18, i8* %2049, i32 5) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1997) #7
  store i64 0, i64* %5, align 8
  %2050 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1996, i32 24, i64* nonnull %5) #7
  %2051 = load i64, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1997) #7
  %2052 = icmp eq i64 %2051, 1
  %2053 = and i1 %2050, %2052
  br i1 %2053, label %2054, label %2084

2054:                                             ; preds = %2046
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1998) #7
  store i64 0, i64* %4, align 8
  %2055 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1996, i32 8, i64* nonnull %4) #7
  %2056 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1998) #7
  %2057 = select i1 %2055, i64 %2056, i64 0
  switch i64 %2057, label %2085 [
    i64 15, label %2058
    i64 14, label %2080
    i64 13, label %2082
  ]

2058:                                             ; preds = %2054
  %2059 = add nsw i32 %2006, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1999) #7
  store i64 0, i64* %3, align 8
  %2060 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1996, i32 2, i64* nonnull %3) #7
  %2061 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1999) #7
  %2062 = select i1 %2060, i64 %2061, i64 0
  switch i64 %2062, label %2085 [
    i64 0, label %2063
    i64 1, label %2063
    i64 2, label %2084
    i64 3, label %2069
  ]

2063:                                             ; preds = %2058, %2058
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2002) #7
  store i64 0, i64* %6, align 8
  %2064 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1996, i32 2, i64* nonnull %6) #7
  %2065 = load i64, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2002) #7
  %2066 = icmp eq i64 %2065, 0
  %2067 = xor i1 %2064, true
  %2068 = or i1 %2066, %2067
  br i1 %2068, label %2085, label %2084

2069:                                             ; preds = %2058
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2000) #7
  store i64 0, i64* %15, align 8
  %2070 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1996, i32 3, i64* nonnull %15) #7
  %2071 = load i64, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2000) #7
  %2072 = icmp ult i64 %2071, 5
  %2073 = xor i1 %2070, true
  %2074 = or i1 %2072, %2073
  br i1 %2074, label %2075, label %2084

2075:                                             ; preds = %2069
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2001) #7
  store i64 0, i64* %16, align 8
  %2076 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %1996, i32 2, i64* nonnull %16) #7
  %2077 = load i64, i64* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2001) #7
  %2078 = icmp eq i64 %2077, 1
  %2079 = and i1 %2076, %2078
  br i1 %2079, label %2085, label %2084

2080:                                             ; preds = %2054
  %2081 = icmp sgt i32 %2006, 0
  br i1 %2081, label %2085, label %2084

2082:                                             ; preds = %2054
  %2083 = add nsw i32 %2005, 1
  br label %2085

2084:                                             ; preds = %2080, %2075, %2069, %2063, %2058, %2046
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1995) #7
  br label %2101

2085:                                             ; preds = %2082, %2080, %2075, %2063, %2058, %2054
  %2086 = phi i32 [ %2006, %2054 ], [ %2006, %2082 ], [ %2006, %2080 ], [ %2059, %2058 ], [ %2059, %2075 ], [ %2059, %2063 ]
  %2087 = phi i32 [ %2005, %2054 ], [ %2083, %2082 ], [ %2005, %2080 ], [ %2005, %2058 ], [ %2005, %2075 ], [ %2005, %2063 ]
  %2088 = add nsw i32 %2048, 5
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1995) #7
  %2089 = add nsw i32 %2048, 10
  %2090 = icmp slt i32 %2089, %1
  br i1 %2090, label %2091, label %2095

2091:                                             ; preds = %2085
  %2092 = sext i32 %2088 to i64
  %2093 = getelementptr inbounds i8, i8* %0, i64 %2092
  %2094 = load i8, i8* %2093, align 1
  br label %2003

2095:                                             ; preds = %2085, %2037
  %2096 = phi i32 [ %2006, %2037 ], [ %2086, %2085 ]
  %2097 = phi i32 [ %2005, %2037 ], [ %2087, %2085 ]
  %2098 = icmp sgt i32 %2096, 0
  %2099 = icmp sgt i32 %2097, 0
  %2100 = and i1 %2098, %2099
  br i1 %2100, label %2584, label %2101

2101:                                             ; preds = %2084, %1884, %2095
  %2102 = icmp sgt i32 %1, 20
  br i1 %2102, label %2103, label %2542

2103:                                             ; preds = %1987, %1986, %2101
  %2104 = call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #7
  %2105 = icmp eq i32 %2104, 0
  %2106 = select i1 %2105, i32 3, i32 0
  %2107 = icmp slt i32 %2106, %1
  br i1 %2107, label %2108, label %2530

2108:                                             ; preds = %2103
  %2109 = tail call i16** @__ctype_b_loc() #4
  %2110 = load i16*, i16** %2109, align 8
  %2111 = zext i32 %2106 to i64
  br label %2112

2112:                                             ; preds = %2123, %2108
  %2113 = phi i64 [ %2124, %2123 ], [ %2111, %2108 ]
  %2114 = getelementptr inbounds i8, i8* %0, i64 %2113
  %2115 = load i8, i8* %2114, align 1
  %2116 = zext i8 %2115 to i64
  %2117 = getelementptr inbounds i16, i16* %2110, i64 %2116
  %2118 = load i16, i16* %2117, align 2
  %2119 = and i16 %2118, 8192
  %2120 = icmp eq i16 %2119, 0
  br i1 %2120, label %2121, label %2123

2121:                                             ; preds = %2112
  %2122 = and i64 %2113, 4294967295
  br label %2127

2123:                                             ; preds = %2112
  %2124 = add nuw nsw i64 %2113, 1
  %2125 = trunc i64 %2124 to i32
  %2126 = icmp slt i32 %2125, %1
  br i1 %2126, label %2112, label %2530

2127:                                             ; preds = %2137, %2121
  %2128 = phi i64 [ %2122, %2121 ], [ %2139, %2137 ]
  %2129 = phi i32 [ 0, %2121 ], [ %2138, %2137 ]
  %2130 = icmp eq i32 %2129, 100
  br i1 %2130, label %2144, label %2131

2131:                                             ; preds = %2127
  %2132 = getelementptr inbounds i8, i8* %0, i64 %2128
  %2133 = load i8, i8* %2132, align 1
  %2134 = zext i8 %2133 to i32
  %2135 = add nsw i32 %2134, -48
  %2136 = icmp ult i32 %2135, 10
  br i1 %2136, label %2137, label %2142

2137:                                             ; preds = %2131
  %2138 = add nuw nsw i32 %2129, 1
  %2139 = add nuw nsw i64 %2128, 1
  %2140 = trunc i64 %2139 to i32
  %2141 = icmp slt i32 %2140, %1
  br i1 %2141, label %2127, label %2144

2142:                                             ; preds = %2131
  %2143 = icmp eq i32 %2129, 0
  br i1 %2143, label %2530, label %2144

2144:                                             ; preds = %2127, %2137, %2142
  %2145 = phi i64 [ %2128, %2142 ], [ %2128, %2127 ], [ %2139, %2137 ]
  %2146 = trunc i64 %2145 to i32
  %2147 = icmp slt i32 %2146, %1
  br i1 %2147, label %2148, label %2530

2148:                                             ; preds = %2144
  %2149 = add nsw i32 %2146, 1
  %2150 = shl i64 %2145, 32
  %2151 = ashr exact i64 %2150, 32
  %2152 = getelementptr inbounds i8, i8* %0, i64 %2151
  %2153 = load i8, i8* %2152, align 1
  switch i8 %2153, label %2530 [
    i8 10, label %2154
    i8 13, label %2154
  ]

2154:                                             ; preds = %2148, %2148
  %2155 = icmp slt i32 %2149, %1
  br i1 %2155, label %2156, label %2168

2156:                                             ; preds = %2154
  %2157 = sext i32 %2149 to i64
  br label %2158

2158:                                             ; preds = %2163, %2156
  %2159 = phi i64 [ %2157, %2156 ], [ %2160, %2163 ]
  %2160 = add nsw i64 %2159, 1
  %2161 = getelementptr inbounds i8, i8* %0, i64 %2159
  %2162 = load i8, i8* %2161, align 1
  switch i8 %2162, label %2166 [
    i8 10, label %2163
    i8 13, label %2163
  ]

2163:                                             ; preds = %2158, %2158
  %2164 = trunc i64 %2160 to i32
  %2165 = icmp eq i32 %2164, %1
  br i1 %2165, label %2171, label %2158

2166:                                             ; preds = %2158
  %2167 = trunc i64 %2160 to i32
  br label %2168

2168:                                             ; preds = %2166, %2154
  %2169 = phi i32 [ %2149, %2154 ], [ %2167, %2166 ]
  %2170 = icmp sgt i32 %2169, %1
  br i1 %2170, label %2530, label %2171

2171:                                             ; preds = %2163, %2168
  %2172 = phi i32 [ %2169, %2168 ], [ %1, %2163 ]
  %2173 = add i32 %2172, -1
  %2174 = sext i32 %2173 to i64
  br label %2175

2175:                                             ; preds = %2187, %2171
  %2176 = phi i64 [ %2188, %2187 ], [ %2174, %2171 ]
  %2177 = getelementptr inbounds i8, i8* %0, i64 %2176
  %2178 = load i8, i8* %2177, align 1
  %2179 = zext i8 %2178 to i64
  %2180 = getelementptr inbounds i16, i16* %2110, i64 %2179
  %2181 = load i16, i16* %2180, align 2
  %2182 = and i16 %2181, 8192
  %2183 = icmp eq i16 %2182, 0
  br i1 %2183, label %2184, label %2187

2184:                                             ; preds = %2175
  %2185 = shl i64 %2176, 32
  %2186 = ashr exact i64 %2185, 32
  br label %2190

2187:                                             ; preds = %2175
  %2188 = add nsw i64 %2176, 1
  %2189 = icmp slt i64 %2188, %1642
  br i1 %2189, label %2175, label %2530

2190:                                             ; preds = %2200, %2184
  %2191 = phi i64 [ %2186, %2184 ], [ %2202, %2200 ]
  %2192 = phi i32 [ 0, %2184 ], [ %2201, %2200 ]
  %2193 = icmp eq i32 %2192, 100
  br i1 %2193, label %2206, label %2194

2194:                                             ; preds = %2190
  %2195 = getelementptr inbounds i8, i8* %0, i64 %2191
  %2196 = load i8, i8* %2195, align 1
  %2197 = zext i8 %2196 to i32
  %2198 = add nsw i32 %2197, -48
  %2199 = icmp ult i32 %2198, 10
  br i1 %2199, label %2200, label %2204

2200:                                             ; preds = %2194
  %2201 = add nuw nsw i32 %2192, 1
  %2202 = add nsw i64 %2191, 1
  %2203 = icmp slt i64 %2202, %1642
  br i1 %2203, label %2190, label %2206

2204:                                             ; preds = %2194
  %2205 = icmp eq i32 %2192, 0
  br i1 %2205, label %2530, label %2206

2206:                                             ; preds = %2200, %2190, %2204
  %2207 = phi i64 [ %2191, %2204 ], [ %2202, %2200 ], [ %2191, %2190 ]
  %2208 = trunc i64 %2207 to i32
  %2209 = icmp slt i32 %2208, %1
  br i1 %2209, label %2210, label %2530

2210:                                             ; preds = %2206
  %2211 = add nsw i32 %2208, 1
  %2212 = shl i64 %2207, 32
  %2213 = ashr exact i64 %2212, 32
  %2214 = getelementptr inbounds i8, i8* %0, i64 %2213
  %2215 = load i8, i8* %2214, align 1
  %2216 = icmp eq i8 %2215, 58
  %2217 = icmp slt i32 %2211, %1
  %2218 = and i1 %2217, %2216
  br i1 %2218, label %2219, label %2530

2219:                                             ; preds = %2210
  %2220 = add nsw i64 %2213, 1
  br label %2221

2221:                                             ; preds = %2238, %2219
  %2222 = phi i64 [ %2239, %2238 ], [ %2220, %2219 ]
  %2223 = getelementptr inbounds i8, i8* %0, i64 %2222
  %2224 = load i8, i8* %2223, align 1
  %2225 = zext i8 %2224 to i64
  %2226 = getelementptr inbounds i16, i16* %2110, i64 %2225
  %2227 = load i16, i16* %2226, align 2
  %2228 = and i16 %2227, 8192
  %2229 = icmp eq i16 %2228, 0
  br i1 %2229, label %2230, label %2238

2230:                                             ; preds = %2221
  %2231 = shl i64 %2222, 32
  %2232 = ashr exact i64 %2231, 32
  %2233 = getelementptr inbounds i8, i8* %0, i64 %2232
  %2234 = load i8, i8* %2233, align 1
  %2235 = zext i8 %2234 to i32
  %2236 = add nsw i32 %2235, -48
  %2237 = icmp ult i32 %2236, 10
  br i1 %2237, label %2242, label %2245

2238:                                             ; preds = %2221
  %2239 = add i64 %2222, 1
  %2240 = trunc i64 %2239 to i32
  %2241 = icmp eq i32 %2240, %1
  br i1 %2241, label %2530, label %2221

2242:                                             ; preds = %2230
  %2243 = add nsw i64 %2232, 1
  %2244 = icmp slt i64 %2243, %1642
  br i1 %2244, label %2627, label %2248

2245:                                             ; preds = %2627, %2230
  %2246 = phi i64 [ %2232, %2230 ], [ %2243, %2627 ]
  %2247 = phi i1 [ true, %2230 ], [ false, %2627 ]
  br i1 %2247, label %2530, label %2248

2248:                                             ; preds = %2633, %2242, %2245
  %2249 = phi i64 [ %2246, %2245 ], [ %2243, %2242 ], [ %2634, %2633 ]
  %2250 = trunc i64 %2249 to i32
  %2251 = icmp slt i32 %2250, %1
  br i1 %2251, label %2252, label %2530

2252:                                             ; preds = %2248
  %2253 = add nsw i32 %2250, 1
  %2254 = shl i64 %2249, 32
  %2255 = ashr exact i64 %2254, 32
  %2256 = getelementptr inbounds i8, i8* %0, i64 %2255
  %2257 = load i8, i8* %2256, align 1
  %2258 = icmp eq i8 %2257, 58
  %2259 = icmp slt i32 %2253, %1
  %2260 = and i1 %2259, %2258
  br i1 %2260, label %2261, label %2530

2261:                                             ; preds = %2252
  %2262 = add nsw i64 %2255, 1
  br label %2263

2263:                                             ; preds = %2280, %2261
  %2264 = phi i64 [ %2281, %2280 ], [ %2262, %2261 ]
  %2265 = getelementptr inbounds i8, i8* %0, i64 %2264
  %2266 = load i8, i8* %2265, align 1
  %2267 = zext i8 %2266 to i64
  %2268 = getelementptr inbounds i16, i16* %2110, i64 %2267
  %2269 = load i16, i16* %2268, align 2
  %2270 = and i16 %2269, 8192
  %2271 = icmp eq i16 %2270, 0
  br i1 %2271, label %2272, label %2280

2272:                                             ; preds = %2263
  %2273 = shl i64 %2264, 32
  %2274 = ashr exact i64 %2273, 32
  %2275 = getelementptr inbounds i8, i8* %0, i64 %2274
  %2276 = load i8, i8* %2275, align 1
  %2277 = zext i8 %2276 to i32
  %2278 = add nsw i32 %2277, -48
  %2279 = icmp ult i32 %2278, 10
  br i1 %2279, label %2284, label %2287

2280:                                             ; preds = %2263
  %2281 = add i64 %2264, 1
  %2282 = trunc i64 %2281 to i32
  %2283 = icmp eq i32 %2282, %1
  br i1 %2283, label %2530, label %2263

2284:                                             ; preds = %2272
  %2285 = add nsw i64 %2274, 1
  %2286 = icmp slt i64 %2285, %1642
  br i1 %2286, label %2619, label %2290

2287:                                             ; preds = %2619, %2272
  %2288 = phi i64 [ %2274, %2272 ], [ %2285, %2619 ]
  %2289 = phi i1 [ true, %2272 ], [ false, %2619 ]
  br i1 %2289, label %2530, label %2290

2290:                                             ; preds = %2625, %2284, %2287
  %2291 = phi i64 [ %2288, %2287 ], [ %2285, %2284 ], [ %2626, %2625 ]
  %2292 = trunc i64 %2291 to i32
  %2293 = icmp slt i32 %2292, %1
  br i1 %2293, label %2294, label %2530

2294:                                             ; preds = %2290
  %2295 = add nsw i32 %2292, 1
  %2296 = shl i64 %2291, 32
  %2297 = ashr exact i64 %2296, 32
  %2298 = getelementptr inbounds i8, i8* %0, i64 %2297
  %2299 = load i8, i8* %2298, align 1
  switch i8 %2299, label %2530 [
    i8 44, label %2300
    i8 46, label %2300
  ]

2300:                                             ; preds = %2294, %2294
  %2301 = icmp slt i32 %2295, %1
  br i1 %2301, label %2302, label %2530

2302:                                             ; preds = %2300
  %2303 = sext i32 %2295 to i64
  br label %2304

2304:                                             ; preds = %2321, %2302
  %2305 = phi i64 [ %2322, %2321 ], [ %2303, %2302 ]
  %2306 = getelementptr inbounds i8, i8* %0, i64 %2305
  %2307 = load i8, i8* %2306, align 1
  %2308 = zext i8 %2307 to i64
  %2309 = getelementptr inbounds i16, i16* %2110, i64 %2308
  %2310 = load i16, i16* %2309, align 2
  %2311 = and i16 %2310, 8192
  %2312 = icmp eq i16 %2311, 0
  br i1 %2312, label %2313, label %2321

2313:                                             ; preds = %2304
  %2314 = shl i64 %2305, 32
  %2315 = ashr exact i64 %2314, 32
  %2316 = getelementptr inbounds i8, i8* %0, i64 %2315
  %2317 = load i8, i8* %2316, align 1
  %2318 = zext i8 %2317 to i32
  %2319 = add nsw i32 %2318, -48
  %2320 = icmp ult i32 %2319, 10
  br i1 %2320, label %2325, label %2328

2321:                                             ; preds = %2304
  %2322 = add nsw i64 %2305, 1
  %2323 = trunc i64 %2322 to i32
  %2324 = icmp eq i32 %2323, %1
  br i1 %2324, label %2530, label %2304

2325:                                             ; preds = %2313
  %2326 = add nsw i64 %2315, 1
  %2327 = icmp slt i64 %2326, %1642
  br i1 %2327, label %2602, label %2331

2328:                                             ; preds = %2611, %2602, %2313
  %2329 = phi i64 [ %2315, %2313 ], [ %2326, %2602 ], [ %2609, %2611 ]
  %2330 = phi i1 [ true, %2313 ], [ false, %2602 ], [ false, %2611 ]
  br i1 %2330, label %2530, label %2331

2331:                                             ; preds = %2617, %2325, %2608, %2328
  %2332 = phi i64 [ %2329, %2328 ], [ %2326, %2325 ], [ %2609, %2608 ], [ %2618, %2617 ]
  %2333 = trunc i64 %2332 to i32
  %2334 = icmp slt i32 %2333, %1
  br i1 %2334, label %2335, label %2530

2335:                                             ; preds = %2331
  %2336 = add nsw i32 %2333, 1
  %2337 = shl i64 %2332, 32
  %2338 = ashr exact i64 %2337, 32
  %2339 = getelementptr inbounds i8, i8* %0, i64 %2338
  %2340 = load i8, i8* %2339, align 1
  %2341 = icmp eq i8 %2340, 32
  %2342 = icmp slt i32 %2336, %1
  %2343 = and i1 %2342, %2341
  br i1 %2343, label %2344, label %2530

2344:                                             ; preds = %2335
  %2345 = add nsw i32 %2333, 2
  %2346 = sext i32 %2336 to i64
  %2347 = getelementptr inbounds i8, i8* %0, i64 %2346
  %2348 = load i8, i8* %2347, align 1
  %2349 = icmp eq i8 %2348, 45
  %2350 = icmp slt i32 %2345, %1
  %2351 = and i1 %2350, %2349
  br i1 %2351, label %2352, label %2530

2352:                                             ; preds = %2344
  %2353 = add nsw i32 %2333, 3
  %2354 = sext i32 %2345 to i64
  %2355 = getelementptr inbounds i8, i8* %0, i64 %2354
  %2356 = load i8, i8* %2355, align 1
  %2357 = icmp eq i8 %2356, 45
  %2358 = icmp slt i32 %2353, %1
  %2359 = and i1 %2358, %2357
  br i1 %2359, label %2360, label %2530

2360:                                             ; preds = %2352
  %2361 = add nsw i32 %2333, 4
  %2362 = sext i32 %2353 to i64
  %2363 = getelementptr inbounds i8, i8* %0, i64 %2362
  %2364 = load i8, i8* %2363, align 1
  %2365 = icmp eq i8 %2364, 62
  %2366 = icmp slt i32 %2361, %1
  %2367 = and i1 %2366, %2365
  br i1 %2367, label %2368, label %2530

2368:                                             ; preds = %2360
  %2369 = add nsw i32 %2333, 5
  %2370 = sext i32 %2361 to i64
  %2371 = getelementptr inbounds i8, i8* %0, i64 %2370
  %2372 = load i8, i8* %2371, align 1
  %2373 = icmp eq i8 %2372, 32
  %2374 = icmp slt i32 %2369, %1
  %2375 = and i1 %2374, %2373
  br i1 %2375, label %2376, label %2530

2376:                                             ; preds = %2368
  %2377 = sext i32 %2369 to i64
  br label %2378

2378:                                             ; preds = %2390, %2376
  %2379 = phi i64 [ %2391, %2390 ], [ %2377, %2376 ]
  %2380 = getelementptr inbounds i8, i8* %0, i64 %2379
  %2381 = load i8, i8* %2380, align 1
  %2382 = zext i8 %2381 to i64
  %2383 = getelementptr inbounds i16, i16* %2110, i64 %2382
  %2384 = load i16, i16* %2383, align 2
  %2385 = and i16 %2384, 8192
  %2386 = icmp eq i16 %2385, 0
  br i1 %2386, label %2387, label %2390

2387:                                             ; preds = %2378
  %2388 = shl i64 %2379, 32
  %2389 = ashr exact i64 %2388, 32
  br label %2394

2390:                                             ; preds = %2378
  %2391 = add nsw i64 %2379, 1
  %2392 = trunc i64 %2391 to i32
  %2393 = icmp eq i32 %2392, %1
  br i1 %2393, label %2530, label %2378

2394:                                             ; preds = %2404, %2387
  %2395 = phi i64 [ %2389, %2387 ], [ %2406, %2404 ]
  %2396 = phi i32 [ 0, %2387 ], [ %2405, %2404 ]
  %2397 = icmp eq i32 %2396, 100
  br i1 %2397, label %2410, label %2398

2398:                                             ; preds = %2394
  %2399 = getelementptr inbounds i8, i8* %0, i64 %2395
  %2400 = load i8, i8* %2399, align 1
  %2401 = zext i8 %2400 to i32
  %2402 = add nsw i32 %2401, -48
  %2403 = icmp ult i32 %2402, 10
  br i1 %2403, label %2404, label %2408

2404:                                             ; preds = %2398
  %2405 = add nuw nsw i32 %2396, 1
  %2406 = add nsw i64 %2395, 1
  %2407 = icmp slt i64 %2406, %1642
  br i1 %2407, label %2394, label %2410

2408:                                             ; preds = %2398
  %2409 = icmp eq i32 %2396, 0
  br i1 %2409, label %2530, label %2410

2410:                                             ; preds = %2404, %2394, %2408
  %2411 = phi i64 [ %2395, %2408 ], [ %2406, %2404 ], [ %2395, %2394 ]
  %2412 = trunc i64 %2411 to i32
  %2413 = icmp slt i32 %2412, %1
  br i1 %2413, label %2414, label %2530

2414:                                             ; preds = %2410
  %2415 = add nsw i32 %2412, 1
  %2416 = shl i64 %2411, 32
  %2417 = ashr exact i64 %2416, 32
  %2418 = getelementptr inbounds i8, i8* %0, i64 %2417
  %2419 = load i8, i8* %2418, align 1
  %2420 = icmp eq i8 %2419, 58
  %2421 = icmp slt i32 %2415, %1
  %2422 = and i1 %2421, %2420
  br i1 %2422, label %2423, label %2530

2423:                                             ; preds = %2414
  %2424 = add nsw i64 %2417, 1
  br label %2425

2425:                                             ; preds = %2442, %2423
  %2426 = phi i64 [ %2443, %2442 ], [ %2424, %2423 ]
  %2427 = getelementptr inbounds i8, i8* %0, i64 %2426
  %2428 = load i8, i8* %2427, align 1
  %2429 = zext i8 %2428 to i64
  %2430 = getelementptr inbounds i16, i16* %2110, i64 %2429
  %2431 = load i16, i16* %2430, align 2
  %2432 = and i16 %2431, 8192
  %2433 = icmp eq i16 %2432, 0
  br i1 %2433, label %2434, label %2442

2434:                                             ; preds = %2425
  %2435 = shl i64 %2426, 32
  %2436 = ashr exact i64 %2435, 32
  %2437 = getelementptr inbounds i8, i8* %0, i64 %2436
  %2438 = load i8, i8* %2437, align 1
  %2439 = zext i8 %2438 to i32
  %2440 = add nsw i32 %2439, -48
  %2441 = icmp ult i32 %2440, 10
  br i1 %2441, label %2446, label %2449

2442:                                             ; preds = %2425
  %2443 = add i64 %2426, 1
  %2444 = trunc i64 %2443 to i32
  %2445 = icmp eq i32 %2444, %1
  br i1 %2445, label %2530, label %2425

2446:                                             ; preds = %2434
  %2447 = add nsw i64 %2436, 1
  %2448 = icmp slt i64 %2447, %1642
  br i1 %2448, label %2594, label %2452

2449:                                             ; preds = %2594, %2434
  %2450 = phi i64 [ %2436, %2434 ], [ %2447, %2594 ]
  %2451 = phi i1 [ true, %2434 ], [ false, %2594 ]
  br i1 %2451, label %2530, label %2452

2452:                                             ; preds = %2600, %2446, %2449
  %2453 = phi i64 [ %2450, %2449 ], [ %2447, %2446 ], [ %2601, %2600 ]
  %2454 = trunc i64 %2453 to i32
  %2455 = icmp slt i32 %2454, %1
  br i1 %2455, label %2456, label %2530

2456:                                             ; preds = %2452
  %2457 = add nsw i32 %2454, 1
  %2458 = shl i64 %2453, 32
  %2459 = ashr exact i64 %2458, 32
  %2460 = getelementptr inbounds i8, i8* %0, i64 %2459
  %2461 = load i8, i8* %2460, align 1
  %2462 = icmp eq i8 %2461, 58
  %2463 = icmp slt i32 %2457, %1
  %2464 = and i1 %2463, %2462
  br i1 %2464, label %2465, label %2530

2465:                                             ; preds = %2456
  %2466 = add nsw i64 %2459, 1
  br label %2467

2467:                                             ; preds = %2484, %2465
  %2468 = phi i64 [ %2485, %2484 ], [ %2466, %2465 ]
  %2469 = getelementptr inbounds i8, i8* %0, i64 %2468
  %2470 = load i8, i8* %2469, align 1
  %2471 = zext i8 %2470 to i64
  %2472 = getelementptr inbounds i16, i16* %2110, i64 %2471
  %2473 = load i16, i16* %2472, align 2
  %2474 = and i16 %2473, 8192
  %2475 = icmp eq i16 %2474, 0
  br i1 %2475, label %2476, label %2484

2476:                                             ; preds = %2467
  %2477 = shl i64 %2468, 32
  %2478 = ashr exact i64 %2477, 32
  %2479 = getelementptr inbounds i8, i8* %0, i64 %2478
  %2480 = load i8, i8* %2479, align 1
  %2481 = zext i8 %2480 to i32
  %2482 = add nsw i32 %2481, -48
  %2483 = icmp ult i32 %2482, 10
  br i1 %2483, label %2488, label %2491

2484:                                             ; preds = %2467
  %2485 = add i64 %2468, 1
  %2486 = trunc i64 %2485 to i32
  %2487 = icmp eq i32 %2486, %1
  br i1 %2487, label %2530, label %2467

2488:                                             ; preds = %2476
  %2489 = add nsw i64 %2478, 1
  %2490 = icmp slt i64 %2489, %1642
  br i1 %2490, label %2586, label %2494

2491:                                             ; preds = %2586, %2476
  %2492 = phi i64 [ %2478, %2476 ], [ %2489, %2586 ]
  %2493 = phi i1 [ true, %2476 ], [ false, %2586 ]
  br i1 %2493, label %2530, label %2494

2494:                                             ; preds = %2592, %2488, %2491
  %2495 = phi i64 [ %2492, %2491 ], [ %2489, %2488 ], [ %2593, %2592 ]
  %2496 = trunc i64 %2495 to i32
  %2497 = icmp slt i32 %2496, %1
  br i1 %2497, label %2498, label %2530

2498:                                             ; preds = %2494
  %2499 = add nsw i32 %2496, 1
  %2500 = shl i64 %2495, 32
  %2501 = ashr exact i64 %2500, 32
  %2502 = getelementptr inbounds i8, i8* %0, i64 %2501
  %2503 = load i8, i8* %2502, align 1
  switch i8 %2503, label %2530 [
    i8 44, label %2504
    i8 46, label %2504
  ]

2504:                                             ; preds = %2498, %2498
  %2505 = icmp slt i32 %2499, %1
  br i1 %2505, label %2506, label %2530

2506:                                             ; preds = %2504
  %2507 = sext i32 %2499 to i64
  br label %2508

2508:                                             ; preds = %2525, %2506
  %2509 = phi i64 [ %2526, %2525 ], [ %2507, %2506 ]
  %2510 = getelementptr inbounds i8, i8* %0, i64 %2509
  %2511 = load i8, i8* %2510, align 1
  %2512 = zext i8 %2511 to i64
  %2513 = getelementptr inbounds i16, i16* %2110, i64 %2512
  %2514 = load i16, i16* %2513, align 2
  %2515 = and i16 %2514, 8192
  %2516 = icmp eq i16 %2515, 0
  br i1 %2516, label %2517, label %2525

2517:                                             ; preds = %2508
  %2518 = shl i64 %2509, 32
  %2519 = ashr exact i64 %2518, 32
  %2520 = getelementptr inbounds i8, i8* %0, i64 %2519
  %2521 = load i8, i8* %2520, align 1
  %2522 = zext i8 %2521 to i32
  %2523 = add nsw i32 %2522, -48
  %2524 = icmp ult i32 %2523, 10
  br i1 %2524, label %2529, label %2530

2525:                                             ; preds = %2508
  %2526 = add nsw i64 %2509, 1
  %2527 = trunc i64 %2526 to i32
  %2528 = icmp eq i32 %2527, %1
  br i1 %2528, label %2530, label %2508

2529:                                             ; preds = %2517
  ret i32 32

2530:                                             ; preds = %2517, %2123, %2187, %2238, %2280, %2321, %2390, %2442, %2484, %2525, %2142, %2204, %2245, %2287, %2328, %2408, %2449, %2491, %2103, %2144, %2168, %2206, %2210, %2248, %2252, %2290, %2300, %2331, %2335, %2344, %2352, %2360, %2368, %2410, %2414, %2452, %2456, %2494, %2504, %2148, %2294, %2498
  %2531 = icmp sgt i32 %1, 1023
  br i1 %2531, label %2535, label %2542

2532:                                             ; preds = %2535
  %2533 = trunc i64 %2541 to i32
  %2534 = icmp slt i32 %2533, %1
  br i1 %2534, label %2535, label %2584

2535:                                             ; preds = %2530, %2532
  %2536 = phi i64 [ %2541, %2532 ], [ 0, %2530 ]
  %2537 = getelementptr inbounds i8, i8* %0, i64 %2536
  %2538 = load i8, i8* %2537, align 1
  %2539 = and i8 %2538, -16
  %2540 = icmp eq i8 %2539, -48
  %2541 = add nuw i64 %2536, 33
  br i1 %2540, label %2532, label %2542

2542:                                             ; preds = %2535, %1729, %2101, %2530
  %2543 = icmp sgt i32 %1, 5
  br i1 %2543, label %2544, label %2583

2544:                                             ; preds = %2542
  %2545 = getelementptr inbounds i8, i8* %0, i64 1
  %2546 = load i8, i8* %2545, align 1
  %2547 = zext i8 %2546 to i32
  %2548 = shl nuw nsw i32 %2547, 16
  %2549 = getelementptr inbounds i8, i8* %0, i64 2
  %2550 = load i8, i8* %2549, align 1
  %2551 = zext i8 %2550 to i32
  %2552 = shl nuw nsw i32 %2551, 8
  %2553 = or i32 %2552, %2548
  %2554 = icmp eq i32 %2553, 751360
  br i1 %2554, label %2575, label %2555

2555:                                             ; preds = %2544
  %2556 = sext i32 %1 to i64
  %2557 = add nsw i64 %2556, -5
  br label %2569

2558:                                             ; preds = %2569
  %2559 = getelementptr inbounds i8, i8* %0, i64 %2571
  %2560 = load i8, i8* %2559, align 1
  %2561 = zext i8 %2560 to i32
  %2562 = shl nuw nsw i32 %2561, 16
  %2563 = getelementptr inbounds i8, i8* %2559, i64 1
  %2564 = load i8, i8* %2563, align 1
  %2565 = zext i8 %2564 to i32
  %2566 = shl nuw nsw i32 %2565, 8
  %2567 = or i32 %2566, %2562
  %2568 = icmp eq i32 %2567, 751360
  br i1 %2568, label %2573, label %2569

2569:                                             ; preds = %2555, %2558
  %2570 = phi i64 [ %2571, %2558 ], [ 1, %2555 ]
  %2571 = add nuw nsw i64 %2570, 1
  %2572 = icmp eq i64 %2570, %2557
  br i1 %2572, label %2583, label %2558

2573:                                             ; preds = %2558
  %2574 = trunc i64 %2571 to i32
  br label %2575

2575:                                             ; preds = %2573, %2544
  %2576 = phi i32 [ 1, %2544 ], [ %2574, %2573 ]
  %2577 = sext i32 %2576 to i64
  %2578 = getelementptr inbounds i8, i8* %0, i64 %2577
  %2579 = sub nsw i32 %1, %2576
  %2580 = call fastcc zeroext i1 @_ZN5media15container_namesL8CheckAc3EPKhi(i8* %2578, i32 %2579)
  br i1 %2580, label %2584, label %2581

2581:                                             ; preds = %2575
  %2582 = call fastcc zeroext i1 @_ZN5media15container_namesL9CheckEac3EPKhi(i8* %2578, i32 %2579)
  br i1 %2582, label %2584, label %2583

2583:                                             ; preds = %2569, %1639, %2542, %2581
  br label %2584

2584:                                             ; preds = %801, %330, %335, %338, %834, %990, %1132, %1217, %1240, %1632, %2532, %1146, %1637, %1469, %997, %291, %823, %821, %812, %812, %813, %809, %722, %717, %695, %695, %695, %695, %675, %669, %649, %629, %629, %614, %589, %549, %539, %520, %456, %215, %348, %313, %310, %302, %609, %648, %714, %2583, %2575, %2581, %1987, %1332, %1135, %1313, %1527, %1726, %1878, %2095, %210
  %2585 = phi i32 [ 25, %210 ], [ 27, %1135 ], [ 24, %1313 ], [ 19, %1527 ], [ 20, %1637 ], [ 21, %1726 ], [ 29, %1878 ], [ 34, %2095 ], [ 13, %1332 ], [ 19, %1469 ], [ 34, %1987 ], [ 0, %2583 ], [ 2, %2575 ], [ 15, %2581 ], [ 36, %291 ], [ 15, %823 ], [ 2, %821 ], [ 33, %812 ], [ 33, %812 ], [ 26, %813 ], [ 37, %809 ], [ 7, %722 ], [ 7, %717 ], [ 8, %695 ], [ 8, %695 ], [ 8, %695 ], [ 8, %695 ], [ 35, %675 ], [ 30, %669 ], [ 8, %649 ], [ 3, %629 ], [ 3, %629 ], [ 17, %614 ], [ 23, %589 ], [ 12, %549 ], [ 14, %539 ], [ 10, %520 ], [ 9, %456 ], [ 31, %215 ], [ 31, %348 ], [ 4, %313 ], [ 6, %310 ], [ 36, %302 ], [ 16, %609 ], [ 5, %648 ], [ 35, %714 ], [ 26, %997 ], [ 28, %1146 ], [ 18, %2532 ], [ 20, %1632 ], [ 24, %1240 ], [ 28, %1217 ], [ 27, %1132 ], [ 26, %990 ], [ 1, %834 ], [ 22, %338 ], [ 22, %335 ], [ 22, %330 ], [ 11, %801 ]
  ret i32 %2585

2586:                                             ; preds = %2488
  %2587 = getelementptr inbounds i8, i8* %0, i64 %2489
  %2588 = load i8, i8* %2587, align 1
  %2589 = zext i8 %2588 to i32
  %2590 = add nsw i32 %2589, -48
  %2591 = icmp ult i32 %2590, 10
  br i1 %2591, label %2592, label %2491

2592:                                             ; preds = %2586
  %2593 = add nsw i64 %2478, 2
  br label %2494

2594:                                             ; preds = %2446
  %2595 = getelementptr inbounds i8, i8* %0, i64 %2447
  %2596 = load i8, i8* %2595, align 1
  %2597 = zext i8 %2596 to i32
  %2598 = add nsw i32 %2597, -48
  %2599 = icmp ult i32 %2598, 10
  br i1 %2599, label %2600, label %2449

2600:                                             ; preds = %2594
  %2601 = add nsw i64 %2436, 2
  br label %2452

2602:                                             ; preds = %2325
  %2603 = getelementptr inbounds i8, i8* %0, i64 %2326
  %2604 = load i8, i8* %2603, align 1
  %2605 = zext i8 %2604 to i32
  %2606 = add nsw i32 %2605, -48
  %2607 = icmp ult i32 %2606, 10
  br i1 %2607, label %2608, label %2328

2608:                                             ; preds = %2602
  %2609 = add nsw i64 %2315, 2
  %2610 = icmp slt i64 %2609, %1642
  br i1 %2610, label %2611, label %2331

2611:                                             ; preds = %2608
  %2612 = getelementptr inbounds i8, i8* %0, i64 %2609
  %2613 = load i8, i8* %2612, align 1
  %2614 = zext i8 %2613 to i32
  %2615 = add nsw i32 %2614, -48
  %2616 = icmp ult i32 %2615, 10
  br i1 %2616, label %2617, label %2328

2617:                                             ; preds = %2611
  %2618 = add nsw i64 %2315, 3
  br label %2331

2619:                                             ; preds = %2284
  %2620 = getelementptr inbounds i8, i8* %0, i64 %2285
  %2621 = load i8, i8* %2620, align 1
  %2622 = zext i8 %2621 to i32
  %2623 = add nsw i32 %2622, -48
  %2624 = icmp ult i32 %2623, 10
  br i1 %2624, label %2625, label %2287

2625:                                             ; preds = %2619
  %2626 = add nsw i64 %2274, 2
  br label %2290

2627:                                             ; preds = %2242
  %2628 = getelementptr inbounds i8, i8* %0, i64 %2243
  %2629 = load i8, i8* %2628, align 1
  %2630 = zext i8 %2629 to i32
  %2631 = add nsw i32 %2630, -48
  %2632 = icmp ult i32 %2631, 10
  br i1 %2632, label %2633, label %2245

2633:                                             ; preds = %2627
  %2634 = add nsw i64 %2232, 2
  br label %2248
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5media15container_namesL8CheckAc3EPKhi(i8*, i32) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.media::BitReader", align 8
  %8 = icmp sgt i32 %1, 6
  br i1 %8, label %9, label %54

9:                                                ; preds = %2
  %10 = bitcast %"class.media::BitReader"* %7 to i8*
  %11 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %7, i64 0, i32 4
  %12 = bitcast i64* %6 to i8*
  %13 = bitcast i64* %5 to i8*
  %14 = bitcast i64* %4 to i8*
  %15 = bitcast i64* %3 to i8*
  br label %16

16:                                               ; preds = %9, %44
  %17 = phi i32 [ 0, %9 ], [ %51, %44 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 72, i1 false)
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %0, i64 %18
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %7, i8* %19, i32 6) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %6, align 8
  %20 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %11, i32 16, i64* nonnull %6) #7
  %21 = load i64, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %22 = icmp eq i64 %21, 2935
  %23 = and i1 %20, %22
  br i1 %23, label %24, label %43

24:                                               ; preds = %16
  %25 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %11, i32 16) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  store i64 0, i64* %5, align 8
  %26 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %11, i32 2, i64* nonnull %5) #7
  %27 = load i64, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  %28 = select i1 %26, i64 %27, i64 0
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i32 %29, 3
  br i1 %30, label %43, label %31

31:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  store i64 0, i64* %4, align 8
  %32 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %11, i32 6, i64* nonnull %4) #7
  %33 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %34 = select i1 %32, i64 %33, i64 0
  %35 = trunc i64 %34 to i32
  %36 = icmp slt i32 %35, 38
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  store i64 0, i64* %3, align 8
  %38 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %11, i32 5, i64* nonnull %3) #7
  %39 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  %40 = icmp ult i64 %39, 10
  %41 = xor i1 %38, true
  %42 = or i1 %40, %41
  br i1 %42, label %44, label %43

43:                                               ; preds = %16, %24, %31, %37
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #7
  br label %54

44:                                               ; preds = %37
  %45 = shl i64 %34, 32
  %46 = ashr exact i64 %45, 32
  %47 = shl i64 %28, 32
  %48 = ashr exact i64 %47, 32
  %49 = getelementptr inbounds [38 x [3 x i32]], [38 x [3 x i32]]* @_ZN5media15container_namesL18kAc3FrameSizeTableE, i64 0, i64 %46, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, %17
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #7
  %52 = add nsw i32 %51, 6
  %53 = icmp slt i32 %52, %1
  br i1 %53, label %16, label %54

54:                                               ; preds = %44, %43, %2
  %55 = phi i1 [ false, %2 ], [ false, %43 ], [ true, %44 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5media15container_namesL9CheckEac3EPKhi(i8*, i32) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.media::BitReader", align 8
  %8 = icmp sgt i32 %1, 6
  br i1 %8, label %9, label %57

9:                                                ; preds = %2
  %10 = bitcast %"class.media::BitReader"* %7 to i8*
  %11 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %7, i64 0, i32 4
  %12 = bitcast i64* %6 to i8*
  %13 = bitcast i64* %5 to i8*
  %14 = bitcast i64* %4 to i8*
  %15 = bitcast i64* %3 to i8*
  br label %16

16:                                               ; preds = %9, %53
  %17 = phi i32 [ %54, %53 ], [ 0, %9 ]
  %18 = add nsw i32 %17, 6
  %19 = icmp slt i32 %18, %1
  br i1 %19, label %20, label %57

20:                                               ; preds = %16
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 72, i1 false)
  %21 = sext i32 %17 to i64
  %22 = getelementptr inbounds i8, i8* %0, i64 %21
  call void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"* nonnull %7, i8* %22, i32 6) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %6, align 8
  %23 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %11, i32 16, i64* nonnull %6) #7
  %24 = load i64, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %25 = icmp eq i64 %24, 2935
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %53

27:                                               ; preds = %20
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  store i64 0, i64* %5, align 8
  %28 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %11, i32 2, i64* nonnull %5) #7
  %29 = load i64, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  %30 = icmp eq i64 %29, 3
  %31 = and i1 %28, %30
  br i1 %31, label %53, label %32

32:                                               ; preds = %27
  %33 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %11, i32 3) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  store i64 0, i64* %4, align 8
  %34 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %11, i32 11, i64* nonnull %4) #7
  %35 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %36 = trunc i64 %35 to i32
  %37 = shl i32 %36, 1
  %38 = add i32 %37, 2
  %39 = select i1 %34, i32 %38, i32 2
  %40 = icmp sgt i32 %39, 6
  br i1 %40, label %41, label %53

41:                                               ; preds = %32
  %42 = call zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"* %11, i32 8) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  store i64 0, i64* %3, align 8
  %43 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %11, i32 5, i64* nonnull %3) #7
  %44 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  %45 = trunc i64 %44 to i32
  %46 = add i32 %45, -11
  %47 = icmp ult i32 %46, 6
  %48 = and i1 %43, %47
  %49 = select i1 %48, i32 %39, i32 0
  %50 = add nsw i32 %49, %17
  %51 = xor i1 %48, true
  %52 = zext i1 %51 to i32
  br label %53

53:                                               ; preds = %41, %32, %27, %20
  %54 = phi i32 [ %17, %20 ], [ %17, %27 ], [ %17, %32 ], [ %50, %41 ]
  %55 = phi i32 [ 1, %20 ], [ 1, %27 ], [ 1, %32 ], [ %52, %41 ]
  call void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #7
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %16, label %57

57:                                               ; preds = %53, %16, %2
  %58 = phi i1 [ false, %2 ], [ true, %16 ], [ false, %53 ]
  ret i1 %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5media9BitReaderC1EPKhi(%"class.media::BitReader"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5media15container_namesL12GetElementIdEPNS_9BitReaderE(%"class.media::BitReader"*) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = shl nsw i32 %3, 3
  %5 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 4
  %6 = tail call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %5) #7
  %7 = sub nsw i32 %4, %6
  %8 = icmp sgt i32 %7, 7
  br i1 %8, label %9, label %29

9:                                                ; preds = %1
  %10 = tail call fastcc i64 @_ZN5media15container_namesL8ReadBitsEPNS_9BitReaderEi(%"class.media::BitReader"* %0, i32 1)
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %20

12:                                               ; preds = %34, %31, %20, %9
  %13 = phi i64 [ 0, %9 ], [ 1, %20 ], [ 2, %31 ], [ 3, %34 ]
  %14 = phi i32 [ 7, %9 ], [ 14, %20 ], [ 21, %31 ], [ 28, %34 ]
  %15 = load i32, i32* %2, align 8
  %16 = shl nsw i32 %15, 3
  %17 = tail call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %5) #7
  %18 = sub nsw i32 %16, %17
  %19 = icmp slt i32 %18, %14
  br i1 %19, label %29, label %23

20:                                               ; preds = %9
  %21 = tail call fastcc i64 @_ZN5media15container_namesL8ReadBitsEPNS_9BitReaderEi(%"class.media::BitReader"* %0, i32 1)
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %12, label %31

23:                                               ; preds = %12
  %24 = tail call fastcc i64 @_ZN5media15container_namesL8ReadBitsEPNS_9BitReaderEi(%"class.media::BitReader"* %0, i32 %14)
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZZN5media15container_namesL12GetElementIdEPNS_9BitReaderEE6prefix, i64 0, i64 %13
  %26 = load i32, i32* %25, align 4
  %27 = trunc i64 %24 to i32
  %28 = or i32 %26, %27
  br label %29

29:                                               ; preds = %34, %12, %1, %23
  %30 = phi i32 [ %28, %23 ], [ -1, %1 ], [ -1, %12 ], [ -1, %34 ]
  ret i32 %30

31:                                               ; preds = %20
  %32 = tail call fastcc i64 @_ZN5media15container_namesL8ReadBitsEPNS_9BitReaderEi(%"class.media::BitReader"* %0, i32 1)
  %33 = icmp eq i64 %32, 1
  br i1 %33, label %12, label %34

34:                                               ; preds = %31
  %35 = tail call fastcc i64 @_ZN5media15container_namesL8ReadBitsEPNS_9BitReaderEi(%"class.media::BitReader"* %0, i32 1)
  %36 = icmp eq i64 %35, 1
  br i1 %36, label %12, label %29
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN5media15container_namesL7GetVintEPNS_9BitReaderE(%"class.media::BitReader"*) unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = shl nsw i32 %5, 3
  %7 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 4
  %8 = tail call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %7) #7
  %9 = sub nsw i32 %6, %8
  %10 = icmp sgt i32 %9, 7
  br i1 %10, label %11, label %34

11:                                               ; preds = %1
  %12 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %3, align 8
  %13 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 1, i64* nonnull %3) #7
  %14 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %15 = icmp eq i64 %14, 1
  %16 = and i1 %13, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %3, align 8
  %18 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 1, i64* nonnull %3) #7
  %19 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %20 = icmp eq i64 %19, 1
  %21 = and i1 %18, %20
  br i1 %21, label %22, label %44

22:                                               ; preds = %69, %64, %59, %54, %49, %44, %17, %11
  %23 = phi i32 [ 7, %11 ], [ 14, %17 ], [ 21, %44 ], [ 28, %49 ], [ 35, %54 ], [ 42, %59 ], [ 49, %64 ], [ 56, %69 ]
  %24 = load i32, i32* %4, align 8
  %25 = shl nsw i32 %24, 3
  %26 = call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %7) #7
  %27 = sub nsw i32 %25, %26
  %28 = icmp slt i32 %27, %23
  br i1 %28, label %34, label %29

29:                                               ; preds = %22
  %30 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7
  store i64 0, i64* %2, align 8
  %31 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 %23, i64* nonnull %2) #7
  %32 = load i64, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  %33 = select i1 %31, i64 %32, i64 0
  br label %42

34:                                               ; preds = %69, %22, %1
  %35 = load i32, i32* %4, align 8
  %36 = shl nsw i32 %35, 3
  %37 = call i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* %7) #7
  %38 = sub nsw i32 %36, %37
  %39 = sdiv i32 %38, 8
  %40 = add nsw i32 %39, 2
  %41 = sext i32 %40 to i64
  br label %42

42:                                               ; preds = %29, %34
  %43 = phi i64 [ %41, %34 ], [ %33, %29 ]
  ret i64 %43

44:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %3, align 8
  %45 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 1, i64* nonnull %3) #7
  %46 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %47 = icmp eq i64 %46, 1
  %48 = and i1 %45, %47
  br i1 %48, label %22, label %49

49:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %3, align 8
  %50 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 1, i64* nonnull %3) #7
  %51 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %52 = icmp eq i64 %51, 1
  %53 = and i1 %50, %52
  br i1 %53, label %22, label %54

54:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %3, align 8
  %55 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 1, i64* nonnull %3) #7
  %56 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %57 = icmp eq i64 %56, 1
  %58 = and i1 %55, %57
  br i1 %58, label %22, label %59

59:                                               ; preds = %54
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %3, align 8
  %60 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 1, i64* nonnull %3) #7
  %61 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %62 = icmp eq i64 %61, 1
  %63 = and i1 %60, %62
  br i1 %63, label %22, label %64

64:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %3, align 8
  %65 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 1, i64* nonnull %3) #7
  %66 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %67 = icmp eq i64 %66, 1
  %68 = and i1 %65, %67
  br i1 %68, label %22, label %69

69:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i64 0, i64* %3, align 8
  %70 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %7, i32 1, i64* nonnull %3) #7
  %71 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %72 = icmp eq i64 %71, 1
  %73 = and i1 %70, %72
  br i1 %73, label %22, label %34
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN5media15container_namesL8ReadBitsEPNS_9BitReaderEi(%"class.media::BitReader"*, i32) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.media::BitReader", %"class.media::BitReader"* %0, i64 0, i32 4
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  store i64 0, i64* %3, align 8
  %6 = call zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* %4, i32 %1, i64* nonnull %3) #7
  %7 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %8 = select i1 %6, i64 %7, i64 0
  ret i64 %8
}

; Function Attrs: nounwind
declare void @_ZN5media9BitReaderD1Ev(%"class.media::BitReader"*) unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #4

declare i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"*, i32, i64*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
