; ModuleID = '../../components/favicon/core/large_icon_worker.cc'
source_filename = "../../components/favicon/core/large_icon_worker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.base::NoDestructor" = type { [24 x i8] }
%"struct.std::nothrow_t" = type { i8 }
%"class.favicon::LargeIconWorker" = type { %"class.base::RefCountedThreadSafe", i32, i32, %"class.base::OnceCallback", %"class.base::OnceCallback.2", %class.scoped_refptr.3, %"class.base::CancelableTaskTracker"*, %"struct.favicon_base::FaviconRawBitmapResult", %class.SkBitmap, %class.GURL, %"class.std::__1::unique_ptr.31" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.2" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.3 = type { %"class.base::TaskRunner"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.4", [4 x i8] }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.favicon_base::FaviconRawBitmapResult" = type <{ i8, [7 x i8], %class.scoped_refptr.18, %"class.gfx::Size", %class.GURL, i32, i8, [3 x i8] }>
%class.scoped_refptr.18 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.19", [4 x i8] }>
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::Size" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.30 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.29, i32, i32 }
%class.sk_sp.29 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.30 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.22 }
%union.anon.22 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.GURL* }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.favicon_base::FallbackIconStyle"* }
%"struct.favicon_base::FallbackIconStyle" = type { i32, i8, i32 }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.11", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.12" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.37" = type { %"class.base::internal::CallbackBase" }
%"class.gfx::Image" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.favicon_base::LargeIconResult" = type { %"struct.favicon_base::FaviconRawBitmapResult", %"class.std::__1::unique_ptr.31" }
%"struct.favicon_base::LargeIconImageResult" = type { %"class.gfx::Image", %class.GURL, %"class.std::__1::unique_ptr.31" }
%"class.favicon::LargeFaviconProvider" = type { i32 (...)** }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.39" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { i32*, i32*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i32* }
%"struct.std::__1::less.52" = type { i8 }
%"class.base::OnceCallback.53" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::flat_tree"*, %"class.base::internal::flat_tree"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.base::internal::flat_tree"* }
%"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare" = type { i8 }

$_ZN4base14MakeRefCountedIN7favicon15LargeIconWorkerEJRiS3_NS_12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS4_IFvRKNS5_20LargeIconImageResultEEEERPNS_21CancelableTaskTrackerEEEE13scoped_refptrIT_EDpOT0_ = comdat any

$_ZN4base8internal9flat_treeIN12favicon_base8IconTypeENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEEC2ESt16initializer_listIS3_ERKS7_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS4_P8SkBitmapP4GURLPNS3_17FallbackIconStyleEEJS4_iiS7_S9_SB_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS3_P8SkBitmapP4GURLPNS2_17FallbackIconStyleEEJS3_iiS6_S8_SA_SC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7favicon15LargeIconWorkerEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN7favicon15LargeIconWorkerEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJ13scoped_refptrIS4_EEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 0, i8 -127, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str = private unnamed_addr constant [21 x i8] c"OnIconLookupComplete\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"../../components/favicon/core/large_icon_worker.cc\00", align 1
@_ZZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types = internal global i64 0, align 8
@.ref.tmp.2 = private constant [1 x i32] [i32 4], align 4
@.ref.tmp.3 = private constant [1 x i32] [i32 1], align 4
@.ref.tmp.4 = private constant [1 x i32] [i32 2], align 4
@.ref.tmp.5 = private constant [1 x i32] [i32 3], align 4
@.str.6 = private unnamed_addr constant [39 x i8] c"Favicons.LargeIconService.FallbackSize\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN7favicon15LargeIconWorkerC1EiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS2_IFvRKNS3_20LargeIconImageResultEEEEPNS1_21CancelableTaskTrackerE = hidden unnamed_addr alias void (%"class.favicon::LargeIconWorker"*, i32, i32, %"class.base::OnceCallback"*, %"class.base::OnceCallback.2"*, %"class.base::CancelableTaskTracker"*), void (%"class.favicon::LargeIconWorker"*, i32, i32, %"class.base::OnceCallback"*, %"class.base::OnceCallback.2"*, %"class.base::CancelableTaskTracker"*)* @_ZN7favicon15LargeIconWorkerC2EiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS2_IFvRKNS3_20LargeIconImageResultEEEEPNS1_21CancelableTaskTrackerE
@_ZN7favicon15LargeIconWorkerD1Ev = hidden unnamed_addr alias void (%"class.favicon::LargeIconWorker"*), void (%"class.favicon::LargeIconWorker"*)* @_ZN7favicon15LargeIconWorkerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7favicon15LargeIconWorkerC2EiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS2_IFvRKNS3_20LargeIconImageResultEEEEPNS1_21CancelableTaskTrackerE(%"class.favicon::LargeIconWorker"*, i32, i32, %"class.base::OnceCallback"* nocapture, %"class.base::OnceCallback.2"* nocapture, %"class.base::CancelableTaskTracker"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %10 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback.2"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback.2"* %15 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = tail call %"class.base::TaskRunner"* @_ZN4base10ThreadPool16CreateTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #9
  %21 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 5, i32 0
  store %"class.base::TaskRunner"* %20, %"class.base::TaskRunner"** %21, align 8
  %22 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 6
  store %"class.base::CancelableTaskTracker"* %5, %"class.base::CancelableTaskTracker"** %22, align 8
  %23 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 7
  tail call void @_ZN12favicon_base22FaviconRawBitmapResultC1Ev(%"struct.favicon_base::FaviconRawBitmapResult"* %23) #9
  %24 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 8
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %24) #9
  %25 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 9
  tail call void @_ZN4GURLC1Ev(%class.GURL* %25) #9
  %26 = tail call i8* @_Znwm(i64 12) #10
  %27 = bitcast i8* %26 to %"struct.favicon_base::FallbackIconStyle"*
  tail call void @_ZN12favicon_base17FallbackIconStyleC1Ev(%"struct.favicon_base::FallbackIconStyle"* nonnull %27) #9
  %28 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %29 = bitcast %"struct.favicon_base::FallbackIconStyle"** %28 to i8**
  store i8* %26, i8** %29, align 8
  ret void
}

declare %"class.base::TaskRunner"* @_ZN4base10ThreadPool16CreateTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare void @_ZN12favicon_base22FaviconRawBitmapResultC1Ev(%"struct.favicon_base::FaviconRawBitmapResult"*) unnamed_addr #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7favicon15LargeIconWorkerD2Ev(%"class.favicon::LargeIconWorker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"struct.favicon_base::FallbackIconStyle"*, %"struct.favicon_base::FallbackIconStyle"** %2, align 8
  store %"struct.favicon_base::FallbackIconStyle"* null, %"struct.favicon_base::FallbackIconStyle"** %2, align 8
  %4 = icmp eq %"struct.favicon_base::FallbackIconStyle"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN12favicon_base17FallbackIconStyleD1Ev(%"struct.favicon_base::FallbackIconStyle"* nonnull %3) #9
  %6 = bitcast %"struct.favicon_base::FallbackIconStyle"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 9
  tail call void @_ZN4GURLD1Ev(%class.GURL* %8) #9
  %9 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 8
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %9) #9
  %10 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 7
  tail call void @_ZN12favicon_base22FaviconRawBitmapResultD1Ev(%"struct.favicon_base::FaviconRawBitmapResult"* %10) #9
  %11 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 5, i32 0
  %12 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %11, align 8
  %13 = icmp eq %"class.base::TaskRunner"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %12, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.4", %"class.base::RefCountedThreadSafe.4"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.4", %"class.base::RefCountedThreadSafe.4"* %15, i64 -2
  %21 = bitcast %"class.base::RefCountedThreadSafe.4"* %20 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %21) #9
  br label %22

22:                                               ; preds = %7, %14, %19
  %23 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %23) #9
  %24 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %24) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12favicon_base22FaviconRawBitmapResultD1Ev(%"struct.favicon_base::FaviconRawBitmapResult"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7favicon15LargeIconWorker20OnIconLookupCompleteERKN12favicon_base22FaviconRawBitmapResultE(%"class.favicon::LargeIconWorker"*, %"struct.favicon_base::FaviconRawBitmapResult"* dereferenceable(152)) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.37", align 8
  %5 = alloca %"class.base::OnceCallback.37", align 8
  %6 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 6
  %7 = load %"class.base::CancelableTaskTracker"*, %"class.base::CancelableTaskTracker"** %6, align 8
  %8 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 5, i32 0
  %9 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %8, align 8
  %10 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 130) #9
  %11 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %13, align 8
  %15 = icmp eq %"class.base::internal::BindStateBase"* %14, null
  %16 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 7
  %17 = ptrtoint %"struct.favicon_base::FaviconRawBitmapResult"* %16 to i64
  %18 = select i1 %15, i64 0, i64 %17
  %19 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %19, align 8
  %21 = icmp ne %"class.base::internal::BindStateBase"* %20, null
  %22 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 8
  %23 = ptrtoint %class.SkBitmap* %22 to i64
  %24 = select i1 %21, i64 %23, i64 0
  %25 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 9
  %26 = ptrtoint %class.GURL* %25 to i64
  %27 = select i1 %21, i64 %26, i64 0
  %28 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %29 = bitcast %"struct.favicon_base::FallbackIconStyle"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = call i8* @_Znwm(i64 232) #10, !noalias !2
  %32 = bitcast i8* %31 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %32, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS4_P8SkBitmapP4GURLPNS3_17FallbackIconStyleEEJS4_iiS7_S9_SB_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS3_P8SkBitmapP4GURLPNS2_17FallbackIconStyleEEJS3_iiS6_S8_SA_SC_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %33 = getelementptr inbounds i8, i8* %31, i64 32
  %34 = bitcast i8* %33 to i64*
  store i64 ptrtoint (void (%"struct.favicon_base::FaviconRawBitmapResult"*, i32, i32, %"struct.favicon_base::FaviconRawBitmapResult"*, %class.SkBitmap*, %class.GURL*, %"struct.favicon_base::FallbackIconStyle"*)* @_ZN7favicon12_GLOBAL__N_129ProcessIconOnBackgroundThreadERKN12favicon_base22FaviconRawBitmapResultEiiPS2_P8SkBitmapP4GURLPNS1_17FallbackIconStyleE to i64), i64* %34, align 8, !noalias !2
  %35 = getelementptr inbounds i8, i8* %31, i64 40
  %36 = bitcast i8* %35 to %"struct.favicon_base::FaviconRawBitmapResult"*
  call void @_ZN12favicon_base22FaviconRawBitmapResultC1ERKS0_(%"struct.favicon_base::FaviconRawBitmapResult"* %36, %"struct.favicon_base::FaviconRawBitmapResult"* dereferenceable(152) %1) #9, !noalias !2
  %37 = getelementptr inbounds i8, i8* %31, i64 192
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %11, align 4, !noalias !2
  store i32 %39, i32* %38, align 4, !noalias !2
  %40 = getelementptr inbounds i8, i8* %31, i64 196
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %12, align 4, !noalias !2
  store i32 %42, i32* %41, align 4, !noalias !2
  %43 = getelementptr inbounds i8, i8* %31, i64 200
  %44 = bitcast i8* %43 to i64*
  store i64 %18, i64* %44, align 8, !noalias !2
  %45 = getelementptr inbounds i8, i8* %31, i64 208
  %46 = bitcast i8* %45 to i64*
  store i64 %24, i64* %46, align 8, !noalias !2
  %47 = getelementptr inbounds i8, i8* %31, i64 216
  %48 = bitcast i8* %47 to i64*
  store i64 %27, i64* %48, align 8, !noalias !2
  %49 = getelementptr inbounds i8, i8* %31, i64 224
  %50 = bitcast i8* %49 to i64*
  store i64 %30, i64* %50, align 8, !noalias !2
  %51 = bitcast %"class.base::OnceCallback.37"* %4 to i8**
  store i8* %31, i8** %51, align 8, !alias.scope !2
  %52 = call i8* @_Znwm(i64 56) #10, !noalias !7
  %53 = bitcast i8* %52 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %53, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7favicon15LargeIconWorkerEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7favicon15LargeIconWorkerEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !7
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.favicon::LargeIconWorker"*)* @_ZN7favicon15LargeIconWorker24OnIconProcessingCompleteEv to i64), i64 0>, <2 x i64>* %55, align 8, !noalias !7
  %56 = getelementptr inbounds i8, i8* %52, i64 48
  %57 = bitcast i8* %56 to %"class.favicon::LargeIconWorker"**
  store %"class.favicon::LargeIconWorker"* %0, %"class.favicon::LargeIconWorker"** %57, align 8, !noalias !7
  %58 = icmp eq %"class.favicon::LargeIconWorker"* %0, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %2
  %60 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 1 monotonic, !noalias !7
  br label %62

62:                                               ; preds = %2, %59
  %63 = bitcast %"class.base::OnceCallback.37"* %5 to i8**
  store i8* %52, i8** %63, align 8, !alias.scope !7
  %64 = call i64 @_ZN4base21CancelableTaskTracker16PostTaskAndReplyEPNS_10TaskRunnerERKNS_8LocationENS_12OnceCallbackIFvvEEES8_(%"class.base::CancelableTaskTracker"* %7, %"class.base::TaskRunner"* %9, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.37"* nonnull %4, %"class.base::OnceCallback.37"* nonnull %5) #9
  %65 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #9
  %66 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  ret void
}

declare i64 @_ZN4base21CancelableTaskTracker16PostTaskAndReplyEPNS_10TaskRunnerERKNS_8LocationENS_12OnceCallbackIFvvEEES8_(%"class.base::CancelableTaskTracker"*, %"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.37"*, %"class.base::OnceCallback.37"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7favicon12_GLOBAL__N_129ProcessIconOnBackgroundThreadERKN12favicon_base22FaviconRawBitmapResultEiiPS2_P8SkBitmapP4GURLPNS1_17FallbackIconStyleE(%"struct.favicon_base::FaviconRawBitmapResult"* dereferenceable(152), i32, i32, %"struct.favicon_base::FaviconRawBitmapResult"*, %class.SkBitmap*, %class.GURL*, %"struct.favicon_base::FallbackIconStyle"*) #0 {
  %8 = alloca %"class.gfx::Image", align 8
  %9 = alloca %class.SkBitmap, align 8
  %10 = alloca %class.SkBitmap, align 8
  %11 = alloca %"class.gfx::Image", align 8
  %12 = alloca %"class.gfx::Image", align 8
  %13 = alloca %class.SkBitmap, align 8
  %14 = alloca %"struct.favicon_base::FallbackIconStyle", align 4
  %15 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 2, i32 0
  %16 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %17 = icmp eq %"class.base::RefCountedMemory"* %16, null
  br i1 %17, label %138, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.base::RefCountedMemory"* %16 to i64 (%"class.base::RefCountedMemory"*)***
  %20 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %20, i64 1
  %22 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %21, align 8
  %23 = tail call i64 %22(%"class.base::RefCountedMemory"* nonnull %16) #9
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %138, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 3, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 3, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  %31 = icmp sge i32 %27, %1
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %138

33:                                               ; preds = %25
  %34 = bitcast %"class.gfx::Image"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.gfx::Image", %"class.gfx::Image"* %11, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageStorage"*), %"class.gfx::internal::ImageStorage"** %35, align 8
  call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* nonnull %11) #9
  %36 = bitcast %"class.gfx::Image"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %37 = bitcast %"class.gfx::Image"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9, !noalias !12
  %38 = getelementptr inbounds %"class.gfx::Image", %"class.gfx::Image"* %8, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageStorage"*), %"class.gfx::internal::ImageStorage"** %38, align 8, !noalias !12
  %39 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8, !noalias !12
  %40 = bitcast %"class.base::RefCountedMemory"* %39 to i8* (%"class.base::RefCountedMemory"*)***
  %41 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %40, align 8, !noalias !12
  %42 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %41, align 8, !noalias !12
  %43 = call i8* %42(%"class.base::RefCountedMemory"* %39) #9, !noalias !12
  %44 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8, !noalias !12
  %45 = bitcast %"class.base::RefCountedMemory"* %44 to i64 (%"class.base::RefCountedMemory"*)***
  %46 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %45, align 8, !noalias !12
  %47 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %46, i64 1
  %48 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %47, align 8, !noalias !12
  %49 = call i64 %48(%"class.base::RefCountedMemory"* %44) #9, !noalias !12
  call void @_ZN3gfx5Image20CreateFrom1xPNGBytesEPKhm(%"class.gfx::Image"* nonnull sret %8, i8* %43, i64 %49) #9, !noalias !12
  %50 = icmp eq i32 %2, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %33
  %52 = load i32, i32* %26, align 4, !noalias !12
  %53 = icmp eq i32 %52, %2
  br i1 %53, label %54, label %55

54:                                               ; preds = %51, %33
  call void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"* nonnull %12, %"class.gfx::Image"* nonnull dereferenceable(8) %8) #9
  br label %58

55:                                               ; preds = %51
  %56 = bitcast %class.SkBitmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %56) #9, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 56, i1 false) #9, !noalias !12
  %57 = bitcast %class.SkBitmap* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %57) #9, !noalias !12
  call void @_ZNK3gfx5Image8AsBitmapEv(%class.SkBitmap* nonnull sret %10, %"class.gfx::Image"* nonnull %8) #9
  call void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* nonnull sret %9, %class.SkBitmap* nonnull dereferenceable(56) %10, i32 5, i32 %2, i32 %2, %"class.SkBitmap::Allocator"* null) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %57) #9, !noalias !12
  call void @_ZN3gfx5Image18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::Image"* nonnull sret %12, %class.SkBitmap* nonnull dereferenceable(56) %9) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #9, !noalias !12
  br label %58

58:                                               ; preds = %54, %55
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9, !noalias !12
  %59 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSEOS0_(%"class.gfx::Image"* nonnull %11, %"class.gfx::Image"* nonnull dereferenceable(8) %12) #9
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  %60 = call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* nonnull %11) #9
  br i1 %60, label %137, label %61

61:                                               ; preds = %58
  %62 = icmp eq %"struct.favicon_base::FaviconRawBitmapResult"* %3, null
  br i1 %62, label %127, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !15
  %66 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %3, i64 0, i32 0
  store i8 %65, i8* %66, align 8
  %67 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %3, i64 0, i32 2
  %68 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %69 = icmp eq %"class.base::RefCountedMemory"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 1 monotonic
  br label %73

73:                                               ; preds = %70, %63
  %74 = ptrtoint %"class.base::RefCountedMemory"* %68 to i64
  %75 = bitcast %class.scoped_refptr.18* %67 to i64*
  %76 = getelementptr inbounds %class.scoped_refptr.18, %class.scoped_refptr.18* %67, i64 0, i32 0
  %77 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %76, align 8
  store i64 %74, i64* %75, align 8
  %78 = icmp eq %"class.base::RefCountedMemory"* %77, null
  br i1 %78, label %91, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %77, i64 0, i32 1
  %81 = getelementptr inbounds %"class.base::RefCountedThreadSafe.19", %"class.base::RefCountedThreadSafe.19"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw sub i32* %81, i32 1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %91

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.base::RefCountedThreadSafe.19", %"class.base::RefCountedThreadSafe.19"* %80, i64 -2
  %86 = bitcast %"class.base::RefCountedThreadSafe.19"* %85 to %"class.base::RefCountedMemory"*
  %87 = bitcast %"class.base::RefCountedThreadSafe.19"* %85 to void (%"class.base::RefCountedMemory"*)***
  %88 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %88, i64 3
  %90 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %89, align 8
  call void %90(%"class.base::RefCountedMemory"* nonnull %86) #9
  br label %91

91:                                               ; preds = %73, %79, %84
  %92 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %3, i64 0, i32 3
  %93 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 3
  %94 = bitcast %"class.gfx::Size"* %93 to i64*
  %95 = bitcast %"class.gfx::Size"* %92 to i64*
  %96 = load i64, i64* %94, align 8
  store i64 %96, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %3, i64 0, i32 4
  %98 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 4
  %99 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %97, %class.GURL* dereferenceable(120) %98) #9
  %100 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %3, i64 0, i32 5
  %101 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 5
  %102 = bitcast i32* %100 to i8*
  %103 = bitcast i32* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 5, i1 false) #9
  br i1 %50, label %110, label %104

104:                                              ; preds = %91
  %105 = icmp sgt i32 %2, 0
  %106 = select i1 %105, i32 %2, i32 0
  %107 = zext i32 %106 to i64
  %108 = shl nuw nsw i64 %107, 32
  %109 = or i64 %108, %107
  store i64 %109, i64* %95, align 8
  br label %110

110:                                              ; preds = %91, %104
  %111 = call %"class.base::RefCountedMemory"* @_ZNK3gfx5Image12As1xPNGBytesEv(%"class.gfx::Image"* nonnull %11) #9
  %112 = ptrtoint %"class.base::RefCountedMemory"* %111 to i64
  %113 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %76, align 8
  store i64 %112, i64* %75, align 8
  %114 = icmp eq %"class.base::RefCountedMemory"* %113, null
  br i1 %114, label %127, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %113, i64 0, i32 1
  %117 = getelementptr inbounds %"class.base::RefCountedThreadSafe.19", %"class.base::RefCountedThreadSafe.19"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw sub i32* %117, i32 1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %127

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.base::RefCountedThreadSafe.19", %"class.base::RefCountedThreadSafe.19"* %116, i64 -2
  %122 = bitcast %"class.base::RefCountedThreadSafe.19"* %121 to %"class.base::RefCountedMemory"*
  %123 = bitcast %"class.base::RefCountedThreadSafe.19"* %121 to void (%"class.base::RefCountedMemory"*)***
  %124 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %124, i64 3
  %126 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %125, align 8
  call void %126(%"class.base::RefCountedMemory"* nonnull %122) #9
  br label %127

127:                                              ; preds = %120, %115, %110, %61
  %128 = icmp eq %class.SkBitmap* %4, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = bitcast %class.SkBitmap* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %130) #9
  call void @_ZNK3gfx5Image8AsBitmapEv(%class.SkBitmap* nonnull sret %13, %"class.gfx::Image"* nonnull %11) #9
  %131 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* nonnull %4, %class.SkBitmap* nonnull dereferenceable(56) %13) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %130) #9
  br label %132

132:                                              ; preds = %127, %129
  %133 = icmp eq %class.GURL* %5, null
  br i1 %133, label %160, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 4
  %136 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* nonnull %5, %class.GURL* dereferenceable(120) %135) #9
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %161

137:                                              ; preds = %58
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %138

138:                                              ; preds = %7, %18, %137, %25
  %139 = icmp eq %"struct.favicon_base::FallbackIconStyle"* %6, null
  br i1 %139, label %161, label %140

140:                                              ; preds = %138
  %141 = bitcast %"struct.favicon_base::FallbackIconStyle"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %141) #9
  call void @_ZN12favicon_base17FallbackIconStyleC1Ev(%"struct.favicon_base::FallbackIconStyle"* nonnull %14) #9
  %142 = bitcast %"struct.favicon_base::FallbackIconStyle"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %142, i8* nonnull align 4 %141, i64 12, i1 false)
  call void @_ZN12favicon_base17FallbackIconStyleD1Ev(%"struct.favicon_base::FallbackIconStyle"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %141) #9
  %143 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %15, align 8
  %144 = icmp eq %"class.base::RefCountedMemory"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %140
  %146 = bitcast %"class.base::RefCountedMemory"* %143 to i64 (%"class.base::RefCountedMemory"*)***
  %147 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %146, align 8
  %148 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %147, i64 1
  %149 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %148, align 8
  %150 = call i64 %149(%"class.base::RefCountedMemory"* nonnull %143) #9
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %158, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 2
  call void @_ZN12favicon_base28SetDominantColorAsBackgroundERK13scoped_refptrIN4base16RefCountedMemoryEEPNS_17FallbackIconStyleE(%class.scoped_refptr.18* dereferenceable(8) %153, %"struct.favicon_base::FallbackIconStyle"* nonnull %6) #9
  %154 = getelementptr inbounds %"struct.favicon_base::FaviconRawBitmapResult", %"struct.favicon_base::FaviconRawBitmapResult"* %0, i64 0, i32 3, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = icmp slt i32 %155, 128
  %157 = select i1 %156, i32 %155, i32 128
  br label %158

158:                                              ; preds = %145, %140, %152
  %159 = phi i32 [ %157, %152 ], [ 0, %145 ], [ 0, %140 ]
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i32 %159) #9
  br label %161

160:                                              ; preds = %132
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %161

161:                                              ; preds = %134, %160, %138, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7favicon15LargeIconWorker24OnIconProcessingCompleteEv(%"class.favicon::LargeIconWorker"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.2", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback.2", align 8
  %6 = alloca %"struct.favicon_base::LargeIconResult", align 8
  %7 = alloca %"struct.favicon_base::LargeIconResult", align 8
  %8 = alloca %"struct.favicon_base::LargeIconImageResult", align 8
  %9 = alloca %"class.gfx::Image", align 8
  %10 = alloca %"struct.favicon_base::LargeIconImageResult", align 8
  %11 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = icmp eq %"class.base::internal::BindStateBase"* %13, null
  br i1 %14, label %51, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 7
  %17 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 7, i32 2, i32 0
  %18 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %17, align 8
  %19 = icmp eq %"class.base::RefCountedMemory"* %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.base::RefCountedMemory"* %18 to i64 (%"class.base::RefCountedMemory"*)***
  %22 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %21, align 8
  %23 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %22, i64 1
  %24 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %23, align 8
  %25 = tail call i64 %24(%"class.base::RefCountedMemory"* nonnull %18) #9
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.favicon_base::LargeIconResult", %"struct.favicon_base::LargeIconResult"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %28) #9
  call void @_ZN12favicon_base15LargeIconResultC1ERKNS_22FaviconRawBitmapResultE(%"struct.favicon_base::LargeIconResult"* nonnull %6, %"struct.favicon_base::FaviconRawBitmapResult"* dereferenceable(152) %16) #9
  %29 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %30 = bitcast %"class.base::OnceCallback"* %11 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %34 = inttoptr i64 %31 to %"class.base::internal::BindStateBase"*
  %35 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %34, i64 0, i32 1
  %36 = bitcast void ()** %35 to void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconResult"*)**
  %37 = load void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconResult"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconResult"*)** %36, align 8
  call void %37(%"class.base::internal::BindStateBase"* %34, %"struct.favicon_base::LargeIconResult"* nonnull dereferenceable(160) %6) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN12favicon_base15LargeIconResultD1Ev(%"struct.favicon_base::LargeIconResult"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %28) #9
  br label %85

38:                                               ; preds = %20, %15
  %39 = getelementptr inbounds %"struct.favicon_base::LargeIconResult", %"struct.favicon_base::LargeIconResult"* %7, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %41 = load %"struct.favicon_base::FallbackIconStyle"*, %"struct.favicon_base::FallbackIconStyle"** %40, align 8
  store %"struct.favicon_base::FallbackIconStyle"* null, %"struct.favicon_base::FallbackIconStyle"** %40, align 8
  call void @_ZN12favicon_base15LargeIconResultC1EPNS_17FallbackIconStyleE(%"struct.favicon_base::LargeIconResult"* nonnull %7, %"struct.favicon_base::FallbackIconStyle"* %41) #9
  %42 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9
  %43 = bitcast %"class.base::OnceCallback"* %11 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %44, i64* %45, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %47 = inttoptr i64 %44 to %"class.base::internal::BindStateBase"*
  %48 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %47, i64 0, i32 1
  %49 = bitcast void ()** %48 to void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconResult"*)**
  %50 = load void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconResult"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconResult"*)** %49, align 8
  call void %50(%"class.base::internal::BindStateBase"* %47, %"struct.favicon_base::LargeIconResult"* nonnull dereferenceable(160) %7) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9
  call void @_ZN12favicon_base15LargeIconResultD1Ev(%"struct.favicon_base::LargeIconResult"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %39) #9
  br label %85

51:                                               ; preds = %1
  %52 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 8
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %52, i64 0, i32 0, i32 0
  %54 = load %class.SkPixelRef*, %class.SkPixelRef** %53, align 8
  %55 = icmp eq %class.SkPixelRef* %54, null
  %56 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 4
  br i1 %55, label %71, label %57

57:                                               ; preds = %51
  %58 = bitcast %"struct.favicon_base::LargeIconImageResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %58) #9
  %59 = bitcast %"class.gfx::Image"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  call void @_ZN3gfx5Image18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::Image"* nonnull sret %9, %class.SkBitmap* dereferenceable(56) %52) #9
  %60 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 9
  call void @_ZN12favicon_base20LargeIconImageResultC1ERKN3gfx5ImageERK4GURL(%"struct.favicon_base::LargeIconImageResult"* nonnull %8, %"class.gfx::Image"* nonnull dereferenceable(8) %9, %class.GURL* dereferenceable(120) %60) #9
  %61 = bitcast %"class.base::OnceCallback.2"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #9
  %62 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %56, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.base::OnceCallback.2"* %56 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.base::OnceCallback.2"* %2 to i64*
  store i64 %64, i64* %65, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %62, align 8
  %66 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %2, i64 0, i32 0
  %67 = inttoptr i64 %64 to %"class.base::internal::BindStateBase"*
  %68 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %67, i64 0, i32 1
  %69 = bitcast void ()** %68 to void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconImageResult"*)**
  %70 = load void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconImageResult"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconImageResult"*)** %69, align 8
  call void %70(%"class.base::internal::BindStateBase"* %67, %"struct.favicon_base::LargeIconImageResult"* nonnull dereferenceable(136) %8) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  call void @_ZN12favicon_base20LargeIconImageResultD1Ev(%"struct.favicon_base::LargeIconImageResult"* nonnull %8) #9
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %58) #9
  br label %85

71:                                               ; preds = %51
  %72 = bitcast %"struct.favicon_base::LargeIconImageResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %74 = load %"struct.favicon_base::FallbackIconStyle"*, %"struct.favicon_base::FallbackIconStyle"** %73, align 8
  store %"struct.favicon_base::FallbackIconStyle"* null, %"struct.favicon_base::FallbackIconStyle"** %73, align 8
  call void @_ZN12favicon_base20LargeIconImageResultC1EPNS_17FallbackIconStyleE(%"struct.favicon_base::LargeIconImageResult"* nonnull %10, %"struct.favicon_base::FallbackIconStyle"* %74) #9
  %75 = bitcast %"class.base::OnceCallback.2"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9
  %76 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %56, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.base::OnceCallback.2"* %56 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.base::OnceCallback.2"* %5 to i64*
  store i64 %78, i64* %79, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %76, align 8
  %80 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %5, i64 0, i32 0
  %81 = inttoptr i64 %78 to %"class.base::internal::BindStateBase"*
  %82 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %81, i64 0, i32 1
  %83 = bitcast void ()** %82 to void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconImageResult"*)**
  %84 = load void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconImageResult"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::LargeIconImageResult"*)** %83, align 8
  call void %84(%"class.base::internal::BindStateBase"* %81, %"struct.favicon_base::LargeIconImageResult"* nonnull dereferenceable(136) %10) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9
  call void @_ZN12favicon_base20LargeIconImageResultD1Ev(%"struct.favicon_base::LargeIconImageResult"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %72) #9
  br label %85

85:                                               ; preds = %71, %57, %38, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerE(%"class.favicon::LargeFaviconProvider"*, %class.GURL* dereferenceable(120), i32, i32, %"class.base::OnceCallback"*, %"class.base::OnceCallback.2"*, %"class.base::CancelableTaskTracker"*) local_unnamed_addr #0 align 2 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.base::CancelableTaskTracker"*, align 8
  %11 = alloca [4 x %"class.base::internal::flat_tree"], align 8
  %12 = alloca %"struct.std::__1::less.52", align 1
  %13 = alloca %"struct.std::__1::less.52", align 1
  %14 = alloca %"struct.std::__1::less.52", align 1
  %15 = alloca %"struct.std::__1::less.52", align 1
  %16 = alloca %"class.base::OnceCallback.53", align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store %"class.base::CancelableTaskTracker"* %6, %"class.base::CancelableTaskTracker"** %10, align 8
  %17 = call %"class.favicon::LargeIconWorker"* @_ZN4base14MakeRefCountedIN7favicon15LargeIconWorkerEJRiS3_NS_12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS4_IFvRKNS5_20LargeIconImageResultEEEERPNS_21CancelableTaskTrackerEEEE13scoped_refptrIT_EDpOT0_(i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9, %"class.base::OnceCallback"* dereferenceable(8) %4, %"class.base::OnceCallback.2"* dereferenceable(8) %5, %"class.base::CancelableTaskTracker"** nonnull dereferenceable(8) %10)
  %18 = load i32, i32* %9, align 4
  %19 = load i32, i32* %8, align 4
  %20 = icmp slt i32 %18, %19
  %21 = select i1 %20, i32 %19, i32 %18
  %22 = load atomic i8, i8* bitcast (i64* @_ZGVZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types to i8*) acquire, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %93, !prof !16

24:                                               ; preds = %7
  %25 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types) #9
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %93, label %27

27:                                               ; preds = %24
  %28 = bitcast [4 x %"class.base::internal::flat_tree"]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %28) #9
  %29 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 0
  %30 = getelementptr inbounds %"struct.std::__1::less.52", %"struct.std::__1::less.52"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #9
  call void @_ZN4base8internal9flat_treeIN12favicon_base8IconTypeENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEEC2ESt16initializer_listIS3_ERKS7_(%"class.base::internal::flat_tree"* nonnull %29, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.2, i64 0, i64 0), i64 1, %"struct.std::__1::less.52"* nonnull dereferenceable(1) %12)
  %31 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 1
  %32 = getelementptr inbounds %"struct.std::__1::less.52", %"struct.std::__1::less.52"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #9
  call void @_ZN4base8internal9flat_treeIN12favicon_base8IconTypeENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEEC2ESt16initializer_listIS3_ERKS7_(%"class.base::internal::flat_tree"* %31, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.3, i64 0, i64 0), i64 1, %"struct.std::__1::less.52"* nonnull dereferenceable(1) %13)
  %33 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 2
  %34 = getelementptr inbounds %"struct.std::__1::less.52", %"struct.std::__1::less.52"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #9
  call void @_ZN4base8internal9flat_treeIN12favicon_base8IconTypeENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEEC2ESt16initializer_listIS3_ERKS7_(%"class.base::internal::flat_tree"* %33, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.4, i64 0, i64 0), i64 1, %"struct.std::__1::less.52"* nonnull dereferenceable(1) %14)
  %35 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 3
  %36 = getelementptr inbounds %"struct.std::__1::less.52", %"struct.std::__1::less.52"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #9
  call void @_ZN4base8internal9flat_treeIN12favicon_base8IconTypeENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEEC2ESt16initializer_listIS3_ERKS7_(%"class.base::internal::flat_tree"* %35, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.ref.tmp.5, i64 0, i64 0), i64 1, %"struct.std::__1::less.52"* nonnull dereferenceable(1) %15)
  %37 = call i8* @_Znwm(i64 96) #10
  %38 = ptrtoint i8* %37 to i64
  %39 = getelementptr inbounds i8, i8* %37, i64 96
  %40 = ptrtoint i8* %39 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #9
  %41 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast [4 x %"class.base::internal::flat_tree"]* %11 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 2
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %73, label %49

49:                                               ; preds = %27
  %50 = icmp ugt i64 %47, 4611686018427387903
  br i1 %50, label %51, label %54

51:                                               ; preds = %209, %177, %144, %49
  %52 = phi i8* [ %37, %49 ], [ %75, %144 ], [ %167, %177 ], [ %200, %209 ]
  %53 = bitcast i8* %52 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #11
  unreachable

54:                                               ; preds = %49
  %55 = call i8* @_Znwm(i64 %46) #10
  %56 = bitcast i8* %55 to i32*
  %57 = getelementptr inbounds i8, i8* %37, i64 8
  %58 = bitcast i8* %57 to i8**
  store i8* %55, i8** %58, align 8
  %59 = bitcast i8* %37 to i8**
  store i8* %55, i8** %59, align 8
  %60 = getelementptr inbounds i32, i32* %56, i64 %47
  %61 = getelementptr inbounds i8, i8* %37, i64 16
  %62 = bitcast i8* %61 to i32**
  store i32* %60, i32** %62, align 8
  %63 = bitcast i8* %57 to i64*
  %64 = ptrtoint i8* %55 to i64
  %65 = icmp sgt i64 %46, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %54
  %67 = lshr exact i64 %46, 2
  %68 = inttoptr i64 %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 %68, i64 %46, i1 false) #9
  %69 = getelementptr inbounds i32, i32* %56, i64 %67
  %70 = ptrtoint i32* %69 to i64
  br label %71

71:                                               ; preds = %66, %54
  %72 = phi i64 [ %70, %66 ], [ %64, %54 ]
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %27
  %74 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 1
  %75 = getelementptr inbounds i8, i8* %37, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #9
  %76 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 1, i32 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.base::internal::flat_tree"* %74 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 2
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %165, label %144

84:                                               ; preds = %230
  %85 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 3, i32 0, i32 0, i32 1
  %86 = bitcast i32** %85 to i64*
  store i64 %205, i64* %86, align 8
  %87 = inttoptr i64 %205 to i8*
  call void @_ZdlPv(i8* %87) #10
  %88 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 2, i32 0, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  br label %90

90:                                               ; preds = %230, %84
  %91 = phi i32* [ %176, %230 ], [ %89, %84 ]
  %92 = icmp eq i32* %91, null
  br i1 %92, label %124, label %119

93:                                               ; preds = %24, %142, %7
  %94 = call i8* @_Znwm(i64 56) #10, !noalias !17
  %95 = bitcast i8* %94 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %95, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.favicon_base::FaviconRawBitmapResult"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJ13scoped_refptrIS4_EEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !17
  %96 = getelementptr inbounds i8, i8* %94, i64 32
  %97 = bitcast i8* %96 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.favicon::LargeIconWorker"*, %"struct.favicon_base::FaviconRawBitmapResult"*)* @_ZN7favicon15LargeIconWorker20OnIconLookupCompleteERKN12favicon_base22FaviconRawBitmapResultE to i64), i64 0>, <2 x i64>* %97, align 8, !noalias !17
  %98 = getelementptr inbounds i8, i8* %94, i64 48
  %99 = bitcast i8* %98 to %"class.favicon::LargeIconWorker"**
  store %"class.favicon::LargeIconWorker"* %17, %"class.favicon::LargeIconWorker"** %99, align 8, !noalias !17
  %100 = icmp eq %"class.favicon::LargeIconWorker"* %17, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 1 monotonic, !noalias !17
  br label %104

104:                                              ; preds = %93, %101
  %105 = bitcast %"class.base::OnceCallback.53"* %16 to i8**
  store i8* %94, i8** %105, align 8, !alias.scope !17
  %106 = load %"class.base::CancelableTaskTracker"*, %"class.base::CancelableTaskTracker"** %10, align 8
  %107 = bitcast %"class.favicon::LargeFaviconProvider"* %0 to i64 (%"class.favicon::LargeFaviconProvider"*, %class.GURL*, %"class.std::__1::vector"*, i32, %"class.base::OnceCallback.53"*, %"class.base::CancelableTaskTracker"*)***
  %108 = load i64 (%"class.favicon::LargeFaviconProvider"*, %class.GURL*, %"class.std::__1::vector"*, i32, %"class.base::OnceCallback.53"*, %"class.base::CancelableTaskTracker"*)**, i64 (%"class.favicon::LargeFaviconProvider"*, %class.GURL*, %"class.std::__1::vector"*, i32, %"class.base::OnceCallback.53"*, %"class.base::CancelableTaskTracker"*)*** %107, align 8
  %109 = load i64 (%"class.favicon::LargeFaviconProvider"*, %class.GURL*, %"class.std::__1::vector"*, i32, %"class.base::OnceCallback.53"*, %"class.base::CancelableTaskTracker"*)*, i64 (%"class.favicon::LargeFaviconProvider"*, %class.GURL*, %"class.std::__1::vector"*, i32, %"class.base::OnceCallback.53"*, %"class.base::CancelableTaskTracker"*)** %108, align 8
  %110 = call i64 %109(%"class.favicon::LargeFaviconProvider"* %0, %class.GURL* dereferenceable(120) %1, %"class.std::__1::vector"* dereferenceable(24) bitcast (%"class.base::NoDestructor"* @_ZZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types to %"class.std::__1::vector"*), i32 %21, %"class.base::OnceCallback.53"* nonnull %16, %"class.base::CancelableTaskTracker"* %106) #9
  %111 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %16, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %111) #9
  br i1 %100, label %118, label %112

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw sub i32* %113, i32 1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %118

116:                                              ; preds = %112
  call void @_ZN7favicon15LargeIconWorkerD2Ev(%"class.favicon::LargeIconWorker"* nonnull %17) #9
  %117 = bitcast %"class.favicon::LargeIconWorker"* %17 to i8*
  call void @_ZdlPv(i8* %117) #10
  br label %118

118:                                              ; preds = %104, %112, %116
  ret i64 %110

119:                                              ; preds = %90
  %120 = ptrtoint i32* %91 to i64
  %121 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 2, i32 0, i32 0, i32 1
  %122 = bitcast i32** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = bitcast i32* %91 to i8*
  call void @_ZdlPv(i8* %123) #10
  br label %124

124:                                              ; preds = %119, %90
  %125 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 1, i32 0, i32 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %124
  %129 = ptrtoint i32* %126 to i64
  %130 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 1, i32 0, i32 0, i32 1
  %131 = bitcast i32** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = bitcast i32* %126 to i8*
  call void @_ZdlPv(i8* %132) #10
  br label %133

133:                                              ; preds = %128, %124
  %134 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 0, i32 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = ptrtoint i32* %135 to i64
  %139 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 0, i32 0, i32 0, i32 1
  %140 = bitcast i32** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %141) #10
  br label %142

142:                                              ; preds = %137, %133
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %28) #9
  %143 = call {}* @llvm.invariant.start.p0i8(i64 24, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types, i64 0, i32 0, i64 0))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types) #9
  br label %93

144:                                              ; preds = %73
  %145 = icmp ugt i64 %82, 4611686018427387903
  br i1 %145, label %51, label %146

146:                                              ; preds = %144
  %147 = call i8* @_Znwm(i64 %81) #10
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds i8, i8* %37, i64 32
  %150 = bitcast i8* %149 to i8**
  store i8* %147, i8** %150, align 8
  %151 = bitcast i8* %75 to i8**
  store i8* %147, i8** %151, align 8
  %152 = getelementptr inbounds i32, i32* %148, i64 %82
  %153 = getelementptr inbounds i8, i8* %37, i64 40
  %154 = bitcast i8* %153 to i32**
  store i32* %152, i32** %154, align 8
  %155 = bitcast i8* %149 to i64*
  %156 = ptrtoint i8* %147 to i64
  %157 = icmp sgt i64 %81, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %146
  %159 = lshr exact i64 %81, 2
  %160 = inttoptr i64 %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %147, i8* align 4 %160, i64 %81, i1 false) #9
  %161 = getelementptr inbounds i32, i32* %148, i64 %159
  %162 = ptrtoint i32* %161 to i64
  br label %163

163:                                              ; preds = %158, %146
  %164 = phi i64 [ %162, %158 ], [ %156, %146 ]
  store i64 %164, i64* %155, align 8
  br label %165

165:                                              ; preds = %163, %73
  %166 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 2
  %167 = getelementptr inbounds i8, i8* %37, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #9
  %168 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 2, i32 0, i32 0, i32 1
  %169 = bitcast i32** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.base::internal::flat_tree"* %166 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %170, %172
  %174 = ashr exact i64 %173, 2
  %175 = icmp eq i64 %173, 0
  %176 = inttoptr i64 %172 to i32*
  br i1 %175, label %198, label %177

177:                                              ; preds = %165
  %178 = icmp ugt i64 %174, 4611686018427387903
  br i1 %178, label %51, label %179

179:                                              ; preds = %177
  %180 = call i8* @_Znwm(i64 %173) #10
  %181 = bitcast i8* %180 to i32*
  %182 = getelementptr inbounds i8, i8* %37, i64 56
  %183 = bitcast i8* %182 to i8**
  store i8* %180, i8** %183, align 8
  %184 = bitcast i8* %167 to i8**
  store i8* %180, i8** %184, align 8
  %185 = getelementptr inbounds i32, i32* %181, i64 %174
  %186 = getelementptr inbounds i8, i8* %37, i64 64
  %187 = bitcast i8* %186 to i32**
  store i32* %185, i32** %187, align 8
  %188 = bitcast i8* %182 to i64*
  %189 = ptrtoint i8* %180 to i64
  %190 = icmp sgt i64 %173, 0
  br i1 %190, label %191, label %196

191:                                              ; preds = %179
  %192 = lshr exact i64 %173, 2
  %193 = inttoptr i64 %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %180, i8* align 4 %193, i64 %173, i1 false) #9
  %194 = getelementptr inbounds i32, i32* %181, i64 %192
  %195 = ptrtoint i32* %194 to i64
  br label %196

196:                                              ; preds = %191, %179
  %197 = phi i64 [ %195, %191 ], [ %189, %179 ]
  store i64 %197, i64* %188, align 8
  br label %198

198:                                              ; preds = %196, %165
  %199 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 3
  %200 = getelementptr inbounds i8, i8* %37, i64 72
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 24, i1 false) #9
  %201 = getelementptr inbounds [4 x %"class.base::internal::flat_tree"], [4 x %"class.base::internal::flat_tree"]* %11, i64 0, i64 3, i32 0, i32 0, i32 1
  %202 = bitcast i32** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast %"class.base::internal::flat_tree"* %199 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = sub i64 %203, %205
  %207 = ashr exact i64 %206, 2
  %208 = icmp eq i64 %206, 0
  br i1 %208, label %230, label %209

209:                                              ; preds = %198
  %210 = icmp ugt i64 %207, 4611686018427387903
  br i1 %210, label %51, label %211

211:                                              ; preds = %209
  %212 = call i8* @_Znwm(i64 %206) #10
  %213 = bitcast i8* %212 to i32*
  %214 = getelementptr inbounds i8, i8* %37, i64 80
  %215 = bitcast i8* %214 to i8**
  store i8* %212, i8** %215, align 8
  %216 = bitcast i8* %200 to i8**
  store i8* %212, i8** %216, align 8
  %217 = getelementptr inbounds i32, i32* %213, i64 %207
  %218 = getelementptr inbounds i8, i8* %37, i64 88
  %219 = bitcast i8* %218 to i32**
  store i32* %217, i32** %219, align 8
  %220 = bitcast i8* %214 to i64*
  %221 = ptrtoint i8* %212 to i64
  %222 = icmp sgt i64 %206, 0
  br i1 %222, label %223, label %228

223:                                              ; preds = %211
  %224 = lshr exact i64 %206, 2
  %225 = inttoptr i64 %205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %212, i8* align 4 %225, i64 %206, i1 false) #9
  %226 = getelementptr inbounds i32, i32* %213, i64 %224
  %227 = ptrtoint i32* %226 to i64
  br label %228

228:                                              ; preds = %223, %211
  %229 = phi i64 [ %227, %223 ], [ %221, %211 ]
  store i64 %229, i64* %220, align 8
  br label %230

230:                                              ; preds = %228, %198
  %231 = getelementptr inbounds i8, i8* %37, i64 96
  %232 = ptrtoint i8* %231 to i64
  store i64 %38, i64* bitcast (%"class.base::NoDestructor"* @_ZZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types to i64*), align 8
  store i64 %232, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types, i64 0, i32 0, i64 8) to i64*), align 8
  store i64 %40, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN7favicon15LargeIconWorker21GetLargeIconRawBitmapEPNS_20LargeFaviconProviderERK4GURLiiN4base12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS7_IFvRKNS8_20LargeIconImageResultEEEEPNS6_21CancelableTaskTrackerEE16large_icon_types, i64 0, i32 0, i64 16) to i64*), align 8
  %233 = icmp eq i64 %205, 0
  br i1 %233, label %90, label %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.favicon::LargeIconWorker"* @_ZN4base14MakeRefCountedIN7favicon15LargeIconWorkerEJRiS3_NS_12OnceCallbackIFvRKN12favicon_base15LargeIconResultEEEENS4_IFvRKNS5_20LargeIconImageResultEEEERPNS_21CancelableTaskTrackerEEEE13scoped_refptrIT_EDpOT0_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.base::OnceCallback"* dereferenceable(8), %"class.base::OnceCallback.2"* dereferenceable(8), %"class.base::CancelableTaskTracker"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback.2", align 8
  %8 = tail call i8* @_Znwm(i64 384) #10
  %9 = bitcast i8* %8 to %"class.favicon::LargeIconWorker"*
  %10 = load i32, i32* %0, align 4
  %11 = load i32, i32* %1, align 4
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.2"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %18 = bitcast %"class.base::CancelableTaskTracker"** %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8* %8 to i32*
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %8, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %10, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %8, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %11, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %8, i64 16
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast i8* %25 to i64*
  store i64 %14, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %28 = getelementptr inbounds i8, i8* %8, i64 24
  %29 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %7, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast i8* %28 to i64*
  store i64 %17, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %31 = tail call %"class.base::TaskRunner"* @_ZN4base10ThreadPool16CreateTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #9
  %32 = getelementptr inbounds i8, i8* %8, i64 32
  %33 = bitcast i8* %32 to %"class.base::TaskRunner"**
  store %"class.base::TaskRunner"* %31, %"class.base::TaskRunner"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %8, i64 40
  %35 = bitcast i8* %34 to i64*
  store i64 %19, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %8, i64 48
  %37 = bitcast i8* %36 to %"struct.favicon_base::FaviconRawBitmapResult"*
  tail call void @_ZN12favicon_base22FaviconRawBitmapResultC1Ev(%"struct.favicon_base::FaviconRawBitmapResult"* %37) #9
  %38 = getelementptr inbounds i8, i8* %8, i64 200
  %39 = bitcast i8* %38 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %39) #9
  %40 = getelementptr inbounds i8, i8* %8, i64 256
  %41 = bitcast i8* %40 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* %41) #9
  %42 = tail call i8* @_Znwm(i64 12) #10
  %43 = bitcast i8* %42 to %"struct.favicon_base::FallbackIconStyle"*
  tail call void @_ZN12favicon_base17FallbackIconStyleC1Ev(%"struct.favicon_base::FallbackIconStyle"* nonnull %43) #9
  %44 = getelementptr inbounds i8, i8* %8, i64 376
  %45 = bitcast i8* %44 to i8**
  store i8* %42, i8** %45, align 8
  %46 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #9
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #9
  %48 = atomicrmw add i32* %20, i32 1 monotonic
  ret %"class.favicon::LargeIconWorker"* %9
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIN12favicon_base8IconTypeENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEEC2ESt16initializer_listIS3_ERKS7_(%"class.base::internal::flat_tree"*, i32*, i64, %"struct.std::__1::less.52"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare", align 1
  %6 = bitcast %"class.base::internal::flat_tree"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #9
  %7 = shl nuw i64 %2, 2
  %8 = ashr exact i64 %7, 2
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %4
  %11 = icmp ugt i64 %8, 4611686018427387903
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = bitcast %"class.base::internal::flat_tree"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %10
  %15 = tail call i8* @_Znwm(i64 %7) #10
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i8**
  store i8* %15, i8** %18, align 8
  %19 = bitcast %"class.base::internal::flat_tree"* %0 to i8**
  store i8* %15, i8** %19, align 8
  %20 = getelementptr inbounds i32, i32* %16, i64 %8
  %21 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %20, i32** %21, align 8
  %22 = bitcast i32** %17 to i64*
  %23 = ptrtoint i8* %15 to i64
  %24 = icmp sgt i64 %7, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %14
  %26 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %26, i64 %7, i1 false) #9
  %27 = getelementptr inbounds i32, i32* %16, i64 %2
  %28 = ptrtoint i32* %27 to i64
  br label %29

29:                                               ; preds = %25, %14
  %30 = phi i64 [ %28, %25 ], [ %23, %14 ]
  store i64 %30, i64* %22, align 8
  %31 = inttoptr i64 %30 to i32*
  br label %32

32:                                               ; preds = %4, %29
  %33 = phi i32* [ null, %4 ], [ %31, %29 ]
  %34 = phi i32* [ null, %4 ], [ %16, %29 ]
  %35 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %36 = ptrtoint i32* %33 to i64
  %37 = getelementptr inbounds %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare", %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37)
  %38 = ptrtoint i32* %34 to i64
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 2
  %41 = icmp sgt i64 %39, 512
  br i1 %41, label %42, label %53

42:                                               ; preds = %32
  %43 = icmp slt i64 %40, 2305843009213693951
  %44 = select i1 %43, i64 %40, i64 2305843009213693951
  br label %45

45:                                               ; preds = %50, %42
  %46 = phi i64 [ %51, %50 ], [ %44, %42 ]
  %47 = shl i64 %46, 2
  %48 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %47, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #9
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = lshr i64 %46, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %45

53:                                               ; preds = %50, %32
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %34, i32* %33, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %40, i32* null, i64 0) #9
  br label %56

54:                                               ; preds = %45
  %55 = bitcast i8* %48 to i32*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %34, i32* %33, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %40, i32* nonnull %55, i64 %46) #9
  call void @_ZdlPv(i8* nonnull %48) #10
  br label %56

56:                                               ; preds = %53, %54
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %37)
  %57 = icmp eq i32* %34, %33
  br i1 %57, label %107, label %58

58:                                               ; preds = %56, %62
  %59 = phi i32* [ %60, %62 ], [ %34, %56 ]
  %60 = getelementptr inbounds i32, i32* %59, i64 1
  %61 = icmp eq i32* %60, %33
  br i1 %61, label %107, label %62

62:                                               ; preds = %58
  %63 = load i32, i32* %59, align 4
  %64 = load i32, i32* %60, align 4
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %58, label %66

66:                                               ; preds = %62
  %67 = icmp eq i32* %59, %33
  br i1 %67, label %107, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds i32, i32* %59, i64 2
  %70 = icmp eq i32* %69, %33
  br i1 %70, label %92, label %71

71:                                               ; preds = %68
  %72 = ptrtoint i32* %59 to i64
  br label %73

73:                                               ; preds = %88, %71
  %74 = phi i32 [ %89, %88 ], [ %63, %71 ]
  %75 = phi i32* [ %87, %88 ], [ %59, %71 ]
  %76 = phi i32* [ %85, %88 ], [ %69, %71 ]
  %77 = phi i64 [ %84, %88 ], [ %72, %71 ]
  %78 = load i32, i32* %76, align 4
  %79 = icmp slt i32 %74, %78
  br i1 %79, label %80, label %83

80:                                               ; preds = %73
  %81 = getelementptr inbounds i32, i32* %75, i64 1
  %82 = ptrtoint i32* %81 to i64
  store i32 %78, i32* %81, align 4
  br label %83

83:                                               ; preds = %80, %73
  %84 = phi i64 [ %77, %73 ], [ %82, %80 ]
  %85 = getelementptr inbounds i32, i32* %76, i64 1
  %86 = icmp eq i32* %85, %33
  %87 = inttoptr i64 %84 to i32*
  br i1 %86, label %90, label %88

88:                                               ; preds = %83
  %89 = load i32, i32* %87, align 4
  br label %73

90:                                               ; preds = %83
  %91 = inttoptr i64 %84 to i32*
  br label %92

92:                                               ; preds = %90, %68
  %93 = phi i32* [ %59, %68 ], [ %91, %90 ]
  %94 = getelementptr inbounds i32, i32* %93, i64 1
  %95 = icmp eq i32* %94, %33
  br i1 %95, label %107, label %96

96:                                               ; preds = %92
  %97 = bitcast i32** %35 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %98, %36
  %100 = ashr exact i64 %99, 2
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %96
  %103 = bitcast i32* %94 to i8*
  %104 = bitcast i32* %33 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %99, i1 false) #9
  br label %105

105:                                              ; preds = %102, %96
  %106 = getelementptr inbounds i32, i32* %94, i64 %100
  store i32* %106, i32** %35, align 8
  br label %107

107:                                              ; preds = %58, %56, %66, %92, %105
  ret void
}

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZN12favicon_base15LargeIconResultC1ERKNS_22FaviconRawBitmapResultE(%"struct.favicon_base::LargeIconResult"*, %"struct.favicon_base::FaviconRawBitmapResult"* dereferenceable(152)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12favicon_base15LargeIconResultD1Ev(%"struct.favicon_base::LargeIconResult"*) unnamed_addr #2

declare void @_ZN12favicon_base15LargeIconResultC1EPNS_17FallbackIconStyleE(%"struct.favicon_base::LargeIconResult"*, %"struct.favicon_base::FallbackIconStyle"*) unnamed_addr #1

declare void @_ZN3gfx5Image18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::Image"* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN12favicon_base20LargeIconImageResultC1ERKN3gfx5ImageERK4GURL(%"struct.favicon_base::LargeIconImageResult"*, %"class.gfx::Image"* dereferenceable(8), %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12favicon_base20LargeIconImageResultD1Ev(%"struct.favicon_base::LargeIconImageResult"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"*) unnamed_addr #2

declare void @_ZN12favicon_base20LargeIconImageResultC1EPNS_17FallbackIconStyleE(%"struct.favicon_base::LargeIconImageResult"*, %"struct.favicon_base::FallbackIconStyle"*) unnamed_addr #1

declare void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSEOS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.base::RefCountedMemory"* @_ZNK3gfx5Image12As1xPNGBytesEv(%"class.gfx::Image"*) local_unnamed_addr #1

declare void @_ZNK3gfx5Image8AsBitmapEv(%class.SkBitmap* sret, %"class.gfx::Image"*) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN12favicon_base17FallbackIconStyleC1Ev(%"struct.favicon_base::FallbackIconStyle"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12favicon_base17FallbackIconStyleD1Ev(%"struct.favicon_base::FallbackIconStyle"*) unnamed_addr #2

declare void @_ZN12favicon_base28SetDominantColorAsBackgroundERK13scoped_refptrIN4base16RefCountedMemoryEEPNS_17FallbackIconStyleE(%class.scoped_refptr.18* dereferenceable(8), %"struct.favicon_base::FallbackIconStyle"*) local_unnamed_addr #1

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN3gfx5Image20CreateFrom1xPNGBytesEPKhm(%"class.gfx::Image"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* sret, %class.SkBitmap* dereferenceable(56), i32, i32, i32, %"class.SkBitmap::Allocator"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS4_P8SkBitmapP4GURLPNS3_17FallbackIconStyleEEJS4_iiS7_S9_SB_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"struct.favicon_base::FaviconRawBitmapResult"*, i32, i32, %"struct.favicon_base::FaviconRawBitmapResult"*, %class.SkBitmap*, %class.GURL*, %"struct.favicon_base::FallbackIconStyle"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.favicon_base::FaviconRawBitmapResult"*
  %6 = bitcast void ()** %4 to i8*
  %7 = getelementptr inbounds void ()*, void ()** %4, i64 19
  %8 = bitcast void ()** %7 to i32*
  %9 = getelementptr inbounds i8, i8* %6, i64 156
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds void ()*, void ()** %4, i64 20
  %12 = bitcast void ()** %11 to %"struct.favicon_base::FaviconRawBitmapResult"**
  %13 = getelementptr inbounds void ()*, void ()** %4, i64 21
  %14 = bitcast void ()** %13 to %class.SkBitmap**
  %15 = getelementptr inbounds void ()*, void ()** %4, i64 22
  %16 = bitcast void ()** %15 to %class.GURL**
  %17 = getelementptr inbounds void ()*, void ()** %4, i64 23
  %18 = bitcast void ()** %17 to %"struct.favicon_base::FallbackIconStyle"**
  %19 = load void (%"struct.favicon_base::FaviconRawBitmapResult"*, i32, i32, %"struct.favicon_base::FaviconRawBitmapResult"*, %class.SkBitmap*, %class.GURL*, %"struct.favicon_base::FallbackIconStyle"*)*, void (%"struct.favicon_base::FaviconRawBitmapResult"*, i32, i32, %"struct.favicon_base::FaviconRawBitmapResult"*, %class.SkBitmap*, %class.GURL*, %"struct.favicon_base::FallbackIconStyle"*)** %3, align 8
  %20 = load i32, i32* %8, align 4
  %21 = load i32, i32* %10, align 4
  %22 = load %"struct.favicon_base::FaviconRawBitmapResult"*, %"struct.favicon_base::FaviconRawBitmapResult"** %12, align 8
  %23 = load %class.SkBitmap*, %class.SkBitmap** %14, align 8
  %24 = load %class.GURL*, %class.GURL** %16, align 8
  %25 = load %"struct.favicon_base::FallbackIconStyle"*, %"struct.favicon_base::FallbackIconStyle"** %18, align 8
  tail call void %19(%"struct.favicon_base::FaviconRawBitmapResult"* dereferenceable(152) %5, i32 %20, i32 %21, %"struct.favicon_base::FaviconRawBitmapResult"* %22, %class.SkBitmap* %23, %class.GURL* %24, %"struct.favicon_base::FallbackIconStyle"* %25) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS3_P8SkBitmapP4GURLPNS2_17FallbackIconStyleEEJS3_iiS6_S8_SA_SC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.favicon_base::FaviconRawBitmapResult"*
  tail call void @_ZN12favicon_base22FaviconRawBitmapResultD1Ev(%"struct.favicon_base::FaviconRawBitmapResult"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN12favicon_base22FaviconRawBitmapResultC1ERKS0_(%"struct.favicon_base::FaviconRawBitmapResult"*, %"struct.favicon_base::FaviconRawBitmapResult"* dereferenceable(152)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7favicon15LargeIconWorkerEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.favicon::LargeIconWorker"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.favicon::LargeIconWorker"*)**
  %21 = load void (%"class.favicon::LargeIconWorker"*)*, void (%"class.favicon::LargeIconWorker"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.favicon::LargeIconWorker"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.favicon::LargeIconWorker"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.favicon::LargeIconWorker"* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7favicon15LargeIconWorkerEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.favicon::LargeIconWorker"**
  %6 = load %"class.favicon::LargeIconWorker"*, %"class.favicon::LargeIconWorker"** %5, align 8
  %7 = icmp eq %"class.favicon::LargeIconWorker"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN7favicon15LargeIconWorkerD2Ev(%"class.favicon::LargeIconWorker"* nonnull %6) #9
  %13 = bitcast %"class.favicon::LargeIconWorker"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %3, %8, %12
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %14, %1
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32*, i32*, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1), i64, i32*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i32* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i32* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i32, i32* %0, i64 1
  %20 = icmp eq i32* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i32, i32* %1, i64 -2
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 4
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i32, i32* %19, align 4
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i32* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 -1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i32 %32, i32* %30, align 4
  %35 = icmp eq i32* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i32* [ %30, %29 ], [ %0, %34 ]
  store i32 %28, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i32* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 4
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i32* [ %410, %408 ], [ %40, %39 ]
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i32* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 -1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i32* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i32 %44, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %43, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i32 %49, i32* %47, align 4
  %57 = icmp eq i32* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i32, i32* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i32* %0, i32* %60, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i32, i32* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i32* %60, i32* %1, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %63, i32* %64)
  %65 = getelementptr inbounds i32, i32* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i32* %366 to i64
  %68 = icmp eq i32* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i32, i32* %4, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 2
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i32* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i32* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i32* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i32, i32* %4, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i32* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i32* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i32, i32* %90, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %90, i64 1
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !22

98:                                               ; preds = %89, %77
  %99 = phi i32* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i32* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 28
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i32, i32* %4, i64 %103
  %105 = ptrtoint i32* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i32, i32* %368, i64 %108
  %110 = getelementptr i32, i32* %366, i64 %108
  %111 = icmp ult i32* %368, %110
  %112 = icmp ult i32* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 9223372036854775800
  %116 = getelementptr i32, i32* %366, i64 %115
  %117 = getelementptr i32, i32* %368, i64 %115
  %118 = add nsw i64 %115, -8
  %119 = lshr exact i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 24
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i32, i32* %366, i64 %126
  %129 = getelementptr i32, i32* %368, i64 %126
  %130 = bitcast i32* %128 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !24
  %132 = getelementptr i32, i32* %128, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !24
  %135 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %135, align 4, !alias.scope !27, !noalias !24
  %136 = getelementptr i32, i32* %129, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %137, align 4, !alias.scope !27, !noalias !24
  %138 = or i64 %126, 8
  %139 = getelementptr i32, i32* %366, i64 %138
  %140 = getelementptr i32, i32* %368, i64 %138
  %141 = bitcast i32* %139 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !alias.scope !24
  %143 = getelementptr i32, i32* %139, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !24
  %146 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %146, align 4, !alias.scope !27, !noalias !24
  %147 = getelementptr i32, i32* %140, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4, !alias.scope !27, !noalias !24
  %149 = or i64 %126, 16
  %150 = getelementptr i32, i32* %366, i64 %149
  %151 = getelementptr i32, i32* %368, i64 %149
  %152 = bitcast i32* %150 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !24
  %154 = getelementptr i32, i32* %150, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !24
  %157 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !27, !noalias !24
  %158 = getelementptr i32, i32* %151, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !27, !noalias !24
  %160 = or i64 %126, 24
  %161 = getelementptr i32, i32* %366, i64 %160
  %162 = getelementptr i32, i32* %368, i64 %160
  %163 = bitcast i32* %161 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4, !alias.scope !24
  %165 = getelementptr i32, i32* %161, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4, !alias.scope !24
  %168 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %164, <4 x i32>* %168, align 4, !alias.scope !27, !noalias !24
  %169 = getelementptr i32, i32* %162, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %170, align 4, !alias.scope !27, !noalias !24
  %171 = add i64 %126, 32
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !29

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i32, i32* %366, i64 %178
  %181 = getelementptr i32, i32* %368, i64 %178
  %182 = bitcast i32* %180 to <4 x i32>*
  %183 = load <4 x i32>, <4 x i32>* %182, align 4, !alias.scope !24
  %184 = getelementptr i32, i32* %180, i64 4
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !24
  %187 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %183, <4 x i32>* %187, align 4, !alias.scope !27, !noalias !24
  %188 = getelementptr i32, i32* %181, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %189, align 4, !alias.scope !27, !noalias !24
  %190 = add i64 %178, 8
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !31

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i32* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i32* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i32* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i32* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i32* %196 to i64
  %202 = icmp eq i32* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i32, i32* %4, i64 %204
  %206 = ptrtoint i32* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 2
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 8
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i32, i32* %4, i64 %212
  %214 = ptrtoint i32* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 2
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i32, i32* %198, i64 %217
  %219 = getelementptr i32, i32* %196, i64 %217
  %220 = icmp ult i32* %198, %219
  %221 = icmp ult i32* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 9223372036854775800
  %225 = getelementptr i32, i32* %196, i64 %224
  %226 = getelementptr i32, i32* %198, i64 %224
  %227 = add nsw i64 %224, -8
  %228 = lshr exact i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 24
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i32, i32* %196, i64 %235
  %238 = getelementptr i32, i32* %198, i64 %235
  %239 = bitcast i32* %237 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !32
  %241 = getelementptr i32, i32* %237, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !32
  %244 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %244, align 4, !alias.scope !35, !noalias !32
  %245 = getelementptr i32, i32* %238, i64 4
  %246 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %246, align 4, !alias.scope !35, !noalias !32
  %247 = or i64 %235, 8
  %248 = getelementptr i32, i32* %196, i64 %247
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = bitcast i32* %248 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !32
  %252 = getelementptr i32, i32* %248, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !32
  %255 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %255, align 4, !alias.scope !35, !noalias !32
  %256 = getelementptr i32, i32* %249, i64 4
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %257, align 4, !alias.scope !35, !noalias !32
  %258 = or i64 %235, 16
  %259 = getelementptr i32, i32* %196, i64 %258
  %260 = getelementptr i32, i32* %198, i64 %258
  %261 = bitcast i32* %259 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !32
  %263 = getelementptr i32, i32* %259, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !32
  %266 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %266, align 4, !alias.scope !35, !noalias !32
  %267 = getelementptr i32, i32* %260, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %268, align 4, !alias.scope !35, !noalias !32
  %269 = or i64 %235, 24
  %270 = getelementptr i32, i32* %196, i64 %269
  %271 = getelementptr i32, i32* %198, i64 %269
  %272 = bitcast i32* %270 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4, !alias.scope !32
  %274 = getelementptr i32, i32* %270, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !32
  %277 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %273, <4 x i32>* %277, align 4, !alias.scope !35, !noalias !32
  %278 = getelementptr i32, i32* %271, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %279, align 4, !alias.scope !35, !noalias !32
  %280 = add i64 %235, 32
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !37

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i32, i32* %196, i64 %287
  %290 = getelementptr i32, i32* %198, i64 %287
  %291 = bitcast i32* %289 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4, !alias.scope !32
  %293 = getelementptr i32, i32* %289, i64 4
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !32
  %296 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %296, align 4, !alias.scope !35, !noalias !32
  %297 = getelementptr i32, i32* %290, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %298, align 4, !alias.scope !35, !noalias !32
  %299 = add i64 %287, 8
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !38

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i32* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i32* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i32* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i32, i32* %4, i64 %308
  %310 = ptrtoint i32* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 2
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i32* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i32* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i32, i32* %317, align 4
  store i32 %320, i32* %318, align 4
  %321 = getelementptr inbounds i32, i32* %317, i64 1
  %322 = getelementptr inbounds i32, i32* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !39

325:                                              ; preds = %316, %304
  %326 = phi i32* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i32* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 28
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i32* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i32* [ %355, %329 ], [ %327, %325 ]
  %332 = load i32, i32* %330, align 4
  store i32 %332, i32* %331, align 4
  %333 = getelementptr inbounds i32, i32* %330, i64 1
  %334 = getelementptr inbounds i32, i32* %331, i64 1
  %335 = load i32, i32* %333, align 4
  store i32 %335, i32* %334, align 4
  %336 = getelementptr inbounds i32, i32* %330, i64 2
  %337 = getelementptr inbounds i32, i32* %331, i64 2
  %338 = load i32, i32* %336, align 4
  store i32 %338, i32* %337, align 4
  %339 = getelementptr inbounds i32, i32* %330, i64 3
  %340 = getelementptr inbounds i32, i32* %331, i64 3
  %341 = load i32, i32* %339, align 4
  store i32 %341, i32* %340, align 4
  %342 = getelementptr inbounds i32, i32* %330, i64 4
  %343 = getelementptr inbounds i32, i32* %331, i64 4
  %344 = load i32, i32* %342, align 4
  store i32 %344, i32* %343, align 4
  %345 = getelementptr inbounds i32, i32* %330, i64 5
  %346 = getelementptr inbounds i32, i32* %331, i64 5
  %347 = load i32, i32* %345, align 4
  store i32 %347, i32* %346, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 6
  %349 = getelementptr inbounds i32, i32* %331, i64 6
  %350 = load i32, i32* %348, align 4
  store i32 %350, i32* %349, align 4
  %351 = getelementptr inbounds i32, i32* %330, i64 7
  %352 = getelementptr inbounds i32, i32* %331, i64 7
  %353 = load i32, i32* %351, align 4
  store i32 %353, i32* %352, align 4
  %354 = getelementptr inbounds i32, i32* %330, i64 8
  %355 = getelementptr inbounds i32, i32* %331, i64 8
  %356 = icmp eq i32* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !40

357:                                              ; preds = %195
  %358 = load i32, i32* %197, align 4
  %359 = load i32, i32* %196, align 4
  %360 = icmp slt i32 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i32 %358, i32* %198, align 4
  %362 = getelementptr inbounds i32, i32* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i32 %359, i32* %198, align 4
  %364 = getelementptr inbounds i32, i32* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i32* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i32* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i32, i32* %198, i64 1
  %369 = icmp eq i32* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i32* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i32* [ %396, %370 ], [ %100, %98 ]
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %371, i64 1
  %375 = getelementptr inbounds i32, i32* %372, i64 1
  %376 = load i32, i32* %374, align 4
  store i32 %376, i32* %375, align 4
  %377 = getelementptr inbounds i32, i32* %371, i64 2
  %378 = getelementptr inbounds i32, i32* %372, i64 2
  %379 = load i32, i32* %377, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %371, i64 3
  %381 = getelementptr inbounds i32, i32* %372, i64 3
  %382 = load i32, i32* %380, align 4
  store i32 %382, i32* %381, align 4
  %383 = getelementptr inbounds i32, i32* %371, i64 4
  %384 = getelementptr inbounds i32, i32* %372, i64 4
  %385 = load i32, i32* %383, align 4
  store i32 %385, i32* %384, align 4
  %386 = getelementptr inbounds i32, i32* %371, i64 5
  %387 = getelementptr inbounds i32, i32* %372, i64 5
  %388 = load i32, i32* %386, align 4
  store i32 %388, i32* %387, align 4
  %389 = getelementptr inbounds i32, i32* %371, i64 6
  %390 = getelementptr inbounds i32, i32* %372, i64 6
  %391 = load i32, i32* %389, align 4
  store i32 %391, i32* %390, align 4
  %392 = getelementptr inbounds i32, i32* %371, i64 7
  %393 = getelementptr inbounds i32, i32* %372, i64 7
  %394 = load i32, i32* %392, align 4
  store i32 %394, i32* %393, align 4
  %395 = getelementptr inbounds i32, i32* %371, i64 8
  %396 = getelementptr inbounds i32, i32* %372, i64 8
  %397 = icmp eq i32* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !41

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %0, i32* %60, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %59, i32* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %60, i32* %1, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %399, i32* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32* %0, i32* %60, i32* %1, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i32* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i32* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i32, i32* %402, i64 -1
  %404 = load i32, i32* %403, align 4
  %405 = icmp slt i32 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i32 %404, i32* %402, align 4
  %407 = icmp eq i32* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i32* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i32 %54, i32* %409, align 4
  %410 = getelementptr inbounds i32, i32* %43, i64 2
  %411 = icmp eq i32* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(i32*, i32*, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1), i64, i32*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i32, i32* %0, align 4
  store i32 %7, i32* %4, align 4
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i32 %10, i32* %4, align 4
  %14 = getelementptr inbounds i32, i32* %4, i64 1
  %15 = load i32, i32* %0, align 4
  store i32 %15, i32* %14, align 4
  br label %390

16:                                               ; preds = %8
  store i32 %11, i32* %4, align 4
  %17 = getelementptr inbounds i32, i32* %4, i64 1
  %18 = load i32, i32* %9, align 4
  store i32 %18, i32* %17, align 4
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i32* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i32, i32* %0, align 4
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 1
  %26 = icmp eq i32* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i32 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i32* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i32* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = load i32, i32* %29, align 4
  %33 = icmp slt i32 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i32 %28, i32* %31, align 4
  %35 = icmp eq i32* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i32* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i32, i32* %37, i64 -1
  %39 = load i32, i32* %29, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i32 %40, i32* %37, align 4
  %43 = icmp eq i32* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i32* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i32, i32* %29, align 4
  store i32 %46, i32* %45, align 4
  br label %48

47:                                               ; preds = %27
  store i32 %32, i32* %31, align 4
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i32, i32* %29, i64 1
  %50 = icmp eq i32* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %31, align 4
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %0, i32* %55, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %54, i32* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i32, i32* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(i32* %55, i32* %1, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %2, i64 %56, i32* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i32* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i32* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i32* %60 to i64
  %63 = icmp eq i32* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i32, i32* %1, i64 -1
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 8
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i32, i32* %1, i64 -1
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i32, i32* %61, i64 %76
  %78 = getelementptr i32, i32* %60, i64 %76
  %79 = icmp ult i32* %61, %78
  %80 = icmp ult i32* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 9223372036854775800
  %84 = getelementptr i32, i32* %61, i64 %83
  %85 = getelementptr i32, i32* %60, i64 %83
  %86 = add nsw i64 %83, -8
  %87 = lshr exact i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 24
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i32, i32* %61, i64 %94
  %97 = getelementptr i32, i32* %60, i64 %94
  %98 = bitcast i32* %97 to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !alias.scope !42
  %100 = getelementptr i32, i32* %97, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !42
  %103 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %103, align 4, !alias.scope !45, !noalias !42
  %104 = getelementptr i32, i32* %96, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !45, !noalias !42
  %106 = or i64 %94, 8
  %107 = getelementptr i32, i32* %61, i64 %106
  %108 = getelementptr i32, i32* %60, i64 %106
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4, !alias.scope !42
  %111 = getelementptr i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4, !alias.scope !42
  %114 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %114, align 4, !alias.scope !45, !noalias !42
  %115 = getelementptr i32, i32* %107, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %113, <4 x i32>* %116, align 4, !alias.scope !45, !noalias !42
  %117 = or i64 %94, 16
  %118 = getelementptr i32, i32* %61, i64 %117
  %119 = getelementptr i32, i32* %60, i64 %117
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !42
  %122 = getelementptr i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !42
  %125 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %125, align 4, !alias.scope !45, !noalias !42
  %126 = getelementptr i32, i32* %118, i64 4
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %127, align 4, !alias.scope !45, !noalias !42
  %128 = or i64 %94, 24
  %129 = getelementptr i32, i32* %61, i64 %128
  %130 = getelementptr i32, i32* %60, i64 %128
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !42
  %133 = getelementptr i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !42
  %136 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %132, <4 x i32>* %136, align 4, !alias.scope !45, !noalias !42
  %137 = getelementptr i32, i32* %129, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %138, align 4, !alias.scope !45, !noalias !42
  %139 = add i64 %94, 32
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !47

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i32, i32* %61, i64 %146
  %149 = getelementptr i32, i32* %60, i64 %146
  %150 = bitcast i32* %149 to <4 x i32>*
  %151 = load <4 x i32>, <4 x i32>* %150, align 4, !alias.scope !42
  %152 = getelementptr i32, i32* %149, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !42
  %155 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %155, align 4, !alias.scope !45, !noalias !42
  %156 = getelementptr i32, i32* %148, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %157, align 4, !alias.scope !45, !noalias !42
  %158 = add i64 %146, 8
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !48

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i32* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i32* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i32* %165 to i64
  %167 = getelementptr i32, i32* %1, i64 -1
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i32* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i32* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %175, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 1
  %180 = getelementptr inbounds i32, i32* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !49

183:                                              ; preds = %174, %163
  %184 = phi i32* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i32* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 28
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i32* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i32* [ %212, %187 ], [ %185, %183 ]
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 1
  %192 = getelementptr inbounds i32, i32* %188, i64 1
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %192, align 4
  %194 = getelementptr inbounds i32, i32* %189, i64 2
  %195 = getelementptr inbounds i32, i32* %188, i64 2
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %189, i64 3
  %198 = getelementptr inbounds i32, i32* %188, i64 3
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %189, i64 4
  %201 = getelementptr inbounds i32, i32* %188, i64 4
  %202 = load i32, i32* %200, align 4
  store i32 %202, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %189, i64 5
  %204 = getelementptr inbounds i32, i32* %188, i64 5
  %205 = load i32, i32* %203, align 4
  store i32 %205, i32* %204, align 4
  %206 = getelementptr inbounds i32, i32* %189, i64 6
  %207 = getelementptr inbounds i32, i32* %188, i64 6
  %208 = load i32, i32* %206, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %189, i64 7
  %210 = getelementptr inbounds i32, i32* %188, i64 7
  %211 = load i32, i32* %209, align 4
  store i32 %211, i32* %210, align 4
  %212 = getelementptr inbounds i32, i32* %189, i64 8
  %213 = getelementptr inbounds i32, i32* %188, i64 8
  %214 = icmp eq i32* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !50

215:                                              ; preds = %53, %385
  %216 = phi i32* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i32* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i32* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i32* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i32* %217 to i64
  %222 = icmp eq i32* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i32, i32* %0, i64 %224
  %226 = ptrtoint i32* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 8
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i32, i32* %0, i64 %232
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 2
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i32, i32* %216, i64 %237
  %239 = getelementptr i32, i32* %217, i64 %237
  %240 = icmp ult i32* %216, %239
  %241 = icmp ult i32* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 9223372036854775800
  %245 = getelementptr i32, i32* %216, i64 %244
  %246 = getelementptr i32, i32* %217, i64 %244
  %247 = add nsw i64 %244, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i32, i32* %216, i64 %255
  %258 = getelementptr i32, i32* %217, i64 %255
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !51
  %261 = getelementptr i32, i32* %258, i64 4
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !51
  %264 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %264, align 4, !alias.scope !54, !noalias !51
  %265 = getelementptr i32, i32* %257, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %266, align 4, !alias.scope !54, !noalias !51
  %267 = or i64 %255, 8
  %268 = getelementptr i32, i32* %216, i64 %267
  %269 = getelementptr i32, i32* %217, i64 %267
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !51
  %272 = getelementptr i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !51
  %275 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4, !alias.scope !54, !noalias !51
  %276 = getelementptr i32, i32* %268, i64 4
  %277 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %277, align 4, !alias.scope !54, !noalias !51
  %278 = or i64 %255, 16
  %279 = getelementptr i32, i32* %216, i64 %278
  %280 = getelementptr i32, i32* %217, i64 %278
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !51
  %283 = getelementptr i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !51
  %286 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !54, !noalias !51
  %287 = getelementptr i32, i32* %279, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !54, !noalias !51
  %289 = or i64 %255, 24
  %290 = getelementptr i32, i32* %216, i64 %289
  %291 = getelementptr i32, i32* %217, i64 %289
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4, !alias.scope !51
  %294 = getelementptr i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !51
  %297 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %293, <4 x i32>* %297, align 4, !alias.scope !54, !noalias !51
  %298 = getelementptr i32, i32* %290, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %299, align 4, !alias.scope !54, !noalias !51
  %300 = add i64 %255, 32
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !56

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i32, i32* %216, i64 %307
  %310 = getelementptr i32, i32* %217, i64 %307
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !51
  %313 = getelementptr i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !51
  %316 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %316, align 4, !alias.scope !54, !noalias !51
  %317 = getelementptr i32, i32* %309, i64 4
  %318 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %318, align 4, !alias.scope !54, !noalias !51
  %319 = add i64 %307, 8
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !57

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i32* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i32* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i32* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i32, i32* %0, i64 %328
  %330 = ptrtoint i32* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 2
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i32* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i32* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %337, align 4
  %341 = getelementptr inbounds i32, i32* %338, i64 1
  %342 = getelementptr inbounds i32, i32* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !58

345:                                              ; preds = %336, %324
  %346 = phi i32* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i32* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 28
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i32* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i32* [ %374, %349 ], [ %347, %345 ]
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %350, align 4
  %353 = getelementptr inbounds i32, i32* %351, i64 1
  %354 = getelementptr inbounds i32, i32* %350, i64 1
  %355 = load i32, i32* %353, align 4
  store i32 %355, i32* %354, align 4
  %356 = getelementptr inbounds i32, i32* %351, i64 2
  %357 = getelementptr inbounds i32, i32* %350, i64 2
  %358 = load i32, i32* %356, align 4
  store i32 %358, i32* %357, align 4
  %359 = getelementptr inbounds i32, i32* %351, i64 3
  %360 = getelementptr inbounds i32, i32* %350, i64 3
  %361 = load i32, i32* %359, align 4
  store i32 %361, i32* %360, align 4
  %362 = getelementptr inbounds i32, i32* %351, i64 4
  %363 = getelementptr inbounds i32, i32* %350, i64 4
  %364 = load i32, i32* %362, align 4
  store i32 %364, i32* %363, align 4
  %365 = getelementptr inbounds i32, i32* %351, i64 5
  %366 = getelementptr inbounds i32, i32* %350, i64 5
  %367 = load i32, i32* %365, align 4
  store i32 %367, i32* %366, align 4
  %368 = getelementptr inbounds i32, i32* %351, i64 6
  %369 = getelementptr inbounds i32, i32* %350, i64 6
  %370 = load i32, i32* %368, align 4
  store i32 %370, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %351, i64 7
  %372 = getelementptr inbounds i32, i32* %350, i64 7
  %373 = load i32, i32* %371, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %351, i64 8
  %375 = getelementptr inbounds i32, i32* %350, i64 8
  %376 = icmp eq i32* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !59

377:                                              ; preds = %215
  %378 = load i32, i32* %218, align 4
  %379 = load i32, i32* %217, align 4
  %380 = icmp slt i32 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i32 %378, i32* %216, align 4
  %382 = getelementptr inbounds i32, i32* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i32 %379, i32* %216, align 4
  %384 = getelementptr inbounds i32, i32* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i32* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i32* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i32, i32* %216, i64 1
  %389 = icmp eq i32* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32*, i32*, i32*, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1), i64, i64, i32*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i32* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i32* %1 to i64
  %13 = ptrtoint i32* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i32* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i32*
  %27 = load i32, i32* %26, align 4
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i32*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i32*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i32* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i32, i32* %31, i64 -1
  %38 = bitcast i32* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 2
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 8
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i32* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i32* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i32* %47 to i64
  %49 = getelementptr i32, i32* %31, i64 -1
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 2
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i32* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i32* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  %61 = getelementptr inbounds i32, i32* %58, i64 1
  %62 = getelementptr inbounds i32, i32* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !60

65:                                               ; preds = %56, %45
  %66 = phi i32* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i32* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i32* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 28
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i32, i32* %31, i64 -1
  %72 = bitcast i32* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i32, i32* %6, i64 %77
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr i32, i32* %29, i64 %77
  %81 = icmp ugt i32* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 9223372036854775800
  %86 = getelementptr i32, i32* %6, i64 %85
  %87 = getelementptr i32, i32* %29, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i32, i32* %6, i64 %96
  %99 = getelementptr i32, i32* %29, i64 %96
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !61
  %102 = getelementptr i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !61
  %105 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !64, !noalias !61
  %106 = getelementptr i32, i32* %98, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !64, !noalias !61
  %108 = or i64 %96, 8
  %109 = getelementptr i32, i32* %6, i64 %108
  %110 = getelementptr i32, i32* %29, i64 %108
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !61
  %113 = getelementptr i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !61
  %116 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !64, !noalias !61
  %117 = getelementptr i32, i32* %109, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !64, !noalias !61
  %119 = or i64 %96, 16
  %120 = getelementptr i32, i32* %6, i64 %119
  %121 = getelementptr i32, i32* %29, i64 %119
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !61
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !61
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !64, !noalias !61
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !64, !noalias !61
  %130 = or i64 %96, 24
  %131 = getelementptr i32, i32* %6, i64 %130
  %132 = getelementptr i32, i32* %29, i64 %130
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !61
  %135 = getelementptr i32, i32* %132, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !61
  %138 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !64, !noalias !61
  %139 = getelementptr i32, i32* %131, i64 4
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !64, !noalias !61
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !66

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i32, i32* %6, i64 %148
  %151 = getelementptr i32, i32* %29, i64 %148
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !61
  %154 = getelementptr i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !61
  %157 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !64, !noalias !61
  %158 = getelementptr i32, i32* %150, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !64, !noalias !61
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !67

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i32* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i32, i32* %15, i64 -1
  %169 = bitcast i32* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 8
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i32* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i32* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i32* %178 to i64
  %180 = getelementptr i32, i32* %15, i64 -1
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i32* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i32* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i32, i32* %189, align 4
  store i32 %191, i32* %188, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !68

196:                                              ; preds = %187, %176
  %197 = phi i32* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i32* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i32* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 28
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i32, i32* %15, i64 -1
  %203 = bitcast i32* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i32, i32* %6, i64 %208
  %210 = bitcast i32* %209 to i8*
  %211 = getelementptr i32, i32* %31, i64 %208
  %212 = icmp ugt i32* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 9223372036854775800
  %217 = getelementptr i32, i32* %6, i64 %216
  %218 = getelementptr i32, i32* %31, i64 %216
  %219 = add nsw i64 %216, -8
  %220 = lshr exact i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 24
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i32, i32* %6, i64 %227
  %230 = getelementptr i32, i32* %31, i64 %227
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !69
  %233 = getelementptr i32, i32* %230, i64 4
  %234 = bitcast i32* %233 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !69
  %236 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %236, align 4, !alias.scope !72, !noalias !69
  %237 = getelementptr i32, i32* %229, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %238, align 4, !alias.scope !72, !noalias !69
  %239 = or i64 %227, 8
  %240 = getelementptr i32, i32* %6, i64 %239
  %241 = getelementptr i32, i32* %31, i64 %239
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !69
  %244 = getelementptr i32, i32* %241, i64 4
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !69
  %247 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %247, align 4, !alias.scope !72, !noalias !69
  %248 = getelementptr i32, i32* %240, i64 4
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %246, <4 x i32>* %249, align 4, !alias.scope !72, !noalias !69
  %250 = or i64 %227, 16
  %251 = getelementptr i32, i32* %6, i64 %250
  %252 = getelementptr i32, i32* %31, i64 %250
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !69
  %255 = getelementptr i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !69
  %258 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %258, align 4, !alias.scope !72, !noalias !69
  %259 = getelementptr i32, i32* %251, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %260, align 4, !alias.scope !72, !noalias !69
  %261 = or i64 %227, 24
  %262 = getelementptr i32, i32* %6, i64 %261
  %263 = getelementptr i32, i32* %31, i64 %261
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !69
  %266 = getelementptr i32, i32* %263, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !69
  %269 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %269, align 4, !alias.scope !72, !noalias !69
  %270 = getelementptr i32, i32* %262, i64 4
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %271, align 4, !alias.scope !72, !noalias !69
  %272 = add i64 %227, 32
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !74

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i32, i32* %6, i64 %279
  %282 = getelementptr i32, i32* %31, i64 %279
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !69
  %285 = getelementptr i32, i32* %282, i64 4
  %286 = bitcast i32* %285 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4, !alias.scope !69
  %288 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %288, align 4, !alias.scope !72, !noalias !69
  %289 = getelementptr i32, i32* %281, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %287, <4 x i32>* %290, align 4, !alias.scope !72, !noalias !69
  %291 = add i64 %279, 8
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !75

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i32* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i32* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i32* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i32* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i32* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i32* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i32* %297 to i64
  %306 = ptrtoint i32* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i32* %301 to i8*
  %311 = bitcast i32* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 %307, i1 false) #9
  br label %887

312:                                              ; preds = %299
  %313 = load i32, i32* %302, align 4
  %314 = load i32, i32* %300, align 4
  %315 = icmp slt i32 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i32 %313, i32* %301, align 4
  %317 = getelementptr inbounds i32, i32* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i32 %314, i32* %301, align 4
  %319 = getelementptr inbounds i32, i32* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i32* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i32* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i32, i32* %301, i64 1
  %324 = icmp eq i32* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i32* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i32* [ %350, %325 ], [ %68, %65 ]
  %328 = load i32, i32* %327, align 4
  store i32 %328, i32* %326, align 4
  %329 = getelementptr inbounds i32, i32* %327, i64 1
  %330 = getelementptr inbounds i32, i32* %326, i64 1
  %331 = load i32, i32* %329, align 4
  store i32 %331, i32* %330, align 4
  %332 = getelementptr inbounds i32, i32* %327, i64 2
  %333 = getelementptr inbounds i32, i32* %326, i64 2
  %334 = load i32, i32* %332, align 4
  store i32 %334, i32* %333, align 4
  %335 = getelementptr inbounds i32, i32* %327, i64 3
  %336 = getelementptr inbounds i32, i32* %326, i64 3
  %337 = load i32, i32* %335, align 4
  store i32 %337, i32* %336, align 4
  %338 = getelementptr inbounds i32, i32* %327, i64 4
  %339 = getelementptr inbounds i32, i32* %326, i64 4
  %340 = load i32, i32* %338, align 4
  store i32 %340, i32* %339, align 4
  %341 = getelementptr inbounds i32, i32* %327, i64 5
  %342 = getelementptr inbounds i32, i32* %326, i64 5
  %343 = load i32, i32* %341, align 4
  store i32 %343, i32* %342, align 4
  %344 = getelementptr inbounds i32, i32* %327, i64 6
  %345 = getelementptr inbounds i32, i32* %326, i64 6
  %346 = load i32, i32* %344, align 4
  store i32 %346, i32* %345, align 4
  %347 = getelementptr inbounds i32, i32* %327, i64 7
  %348 = getelementptr inbounds i32, i32* %326, i64 7
  %349 = load i32, i32* %347, align 4
  store i32 %349, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %327, i64 8
  %351 = getelementptr inbounds i32, i32* %326, i64 8
  %352 = icmp eq i32* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !76

353:                                              ; preds = %196, %520, %294
  %354 = phi i32* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i32* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i32* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i32* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i32* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i32* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i32, i32* %358, i64 -1
  %363 = ptrtoint i32* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 2
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 8
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i32, i32* %358, i64 -1
  %370 = ptrtoint i32* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 2
  %373 = xor i64 %372, -1
  %374 = getelementptr i32, i32* %357, i64 %373
  %375 = getelementptr i32, i32* %358, i64 %373
  %376 = icmp ult i32* %374, %358
  %377 = icmp ult i32* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 9223372036854775800
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i32, i32* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i32, i32* %357, i64 %383
  %385 = add nsw i64 %380, -8
  %386 = lshr exact i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i32, i32* %358, i64 -1
  %393 = getelementptr i32, i32* %357, i64 -1
  %394 = getelementptr i32, i32* %358, i64 -1
  %395 = getelementptr i32, i32* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i32, i32* %392, i64 %399
  %402 = getelementptr inbounds i32, i32* %401, i64 -3
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4, !alias.scope !77
  %405 = getelementptr inbounds i32, i32* %401, i64 -4
  %406 = getelementptr inbounds i32, i32* %405, i64 -3
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4, !alias.scope !77
  %409 = getelementptr inbounds i32, i32* %393, i64 %400
  %410 = getelementptr inbounds i32, i32* %409, i64 -3
  %411 = bitcast i32* %410 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %411, align 4, !alias.scope !80, !noalias !77
  %412 = getelementptr inbounds i32, i32* %409, i64 -4
  %413 = getelementptr inbounds i32, i32* %412, i64 -3
  %414 = bitcast i32* %413 to <4 x i32>*
  store <4 x i32> %408, <4 x i32>* %414, align 4, !alias.scope !80, !noalias !77
  %415 = sub nuw nsw i64 -8, %397
  %416 = sub nuw nsw i64 -8, %397
  %417 = getelementptr inbounds i32, i32* %394, i64 %415
  %418 = getelementptr inbounds i32, i32* %417, i64 -3
  %419 = bitcast i32* %418 to <4 x i32>*
  %420 = load <4 x i32>, <4 x i32>* %419, align 4, !alias.scope !77
  %421 = getelementptr inbounds i32, i32* %417, i64 -4
  %422 = getelementptr inbounds i32, i32* %421, i64 -3
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !77
  %425 = getelementptr inbounds i32, i32* %395, i64 %416
  %426 = getelementptr inbounds i32, i32* %425, i64 -3
  %427 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %427, align 4, !alias.scope !80, !noalias !77
  %428 = getelementptr inbounds i32, i32* %425, i64 -4
  %429 = getelementptr inbounds i32, i32* %428, i64 -3
  %430 = bitcast i32* %429 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %430, align 4, !alias.scope !80, !noalias !77
  %431 = add i64 %397, 16
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !82

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -16, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i32, i32* %358, i64 -1
  %441 = getelementptr i32, i32* %357, i64 -1
  %442 = getelementptr inbounds i32, i32* %440, i64 %437
  %443 = getelementptr inbounds i32, i32* %442, i64 -3
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !77
  %446 = getelementptr inbounds i32, i32* %442, i64 -4
  %447 = getelementptr inbounds i32, i32* %446, i64 -3
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4, !alias.scope !77
  %450 = getelementptr inbounds i32, i32* %441, i64 %437
  %451 = getelementptr inbounds i32, i32* %450, i64 -3
  %452 = bitcast i32* %451 to <4 x i32>*
  store <4 x i32> %445, <4 x i32>* %452, align 4, !alias.scope !80, !noalias !77
  %453 = getelementptr inbounds i32, i32* %450, i64 -4
  %454 = getelementptr inbounds i32, i32* %453, i64 -3
  %455 = bitcast i32* %454 to <4 x i32>*
  store <4 x i32> %449, <4 x i32>* %455, align 4, !alias.scope !80, !noalias !77
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i32* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i32* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i32, i32* %459, i64 -1
  %462 = ptrtoint i32* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 2
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i32* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i32* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i32, i32* %469, i64 -1
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds i32, i32* %470, i64 -1
  store i32 %473, i32* %474, align 4
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !83

477:                                              ; preds = %468, %458
  %478 = phi i32* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i32* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 28
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i32* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i32* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i32, i32* %482, i64 -1
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds i32, i32* %483, i64 -1
  store i32 %485, i32* %486, align 4
  %487 = getelementptr inbounds i32, i32* %482, i64 -2
  %488 = load i32, i32* %487, align 4
  %489 = getelementptr inbounds i32, i32* %483, i64 -2
  store i32 %488, i32* %489, align 4
  %490 = getelementptr inbounds i32, i32* %482, i64 -3
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds i32, i32* %483, i64 -3
  store i32 %491, i32* %492, align 4
  %493 = getelementptr inbounds i32, i32* %482, i64 -4
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i32, i32* %483, i64 -4
  store i32 %494, i32* %495, align 4
  %496 = getelementptr inbounds i32, i32* %482, i64 -5
  %497 = load i32, i32* %496, align 4
  %498 = getelementptr inbounds i32, i32* %483, i64 -5
  store i32 %497, i32* %498, align 4
  %499 = getelementptr inbounds i32, i32* %482, i64 -6
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds i32, i32* %483, i64 -6
  store i32 %500, i32* %501, align 4
  %502 = getelementptr inbounds i32, i32* %482, i64 -7
  %503 = load i32, i32* %502, align 4
  %504 = getelementptr inbounds i32, i32* %483, i64 -7
  store i32 %503, i32* %504, align 4
  %505 = getelementptr inbounds i32, i32* %482, i64 -8
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds i32, i32* %483, i64 -8
  store i32 %506, i32* %507, align 4
  %508 = icmp eq i32* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !84

509:                                              ; preds = %356
  %510 = getelementptr inbounds i32, i32* %359, i64 -1
  %511 = getelementptr inbounds i32, i32* %358, i64 -1
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* %510, align 4
  %514 = icmp slt i32 %512, %513
  %515 = getelementptr inbounds i32, i32* %357, i64 -1
  %516 = select i1 %514, i32 %513, i32 %512
  %517 = select i1 %514, i32* %510, i32* %359
  %518 = select i1 %514, i32* %358, i32* %511
  store i32 %516, i32* %515, align 4
  %519 = icmp eq i32* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i32* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i32* [ %545, %520 ], [ %199, %196 ]
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %521, align 4
  %524 = getelementptr inbounds i32, i32* %522, i64 1
  %525 = getelementptr inbounds i32, i32* %521, i64 1
  %526 = load i32, i32* %524, align 4
  store i32 %526, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %522, i64 2
  %528 = getelementptr inbounds i32, i32* %521, i64 2
  %529 = load i32, i32* %527, align 4
  store i32 %529, i32* %528, align 4
  %530 = getelementptr inbounds i32, i32* %522, i64 3
  %531 = getelementptr inbounds i32, i32* %521, i64 3
  %532 = load i32, i32* %530, align 4
  store i32 %532, i32* %531, align 4
  %533 = getelementptr inbounds i32, i32* %522, i64 4
  %534 = getelementptr inbounds i32, i32* %521, i64 4
  %535 = load i32, i32* %533, align 4
  store i32 %535, i32* %534, align 4
  %536 = getelementptr inbounds i32, i32* %522, i64 5
  %537 = getelementptr inbounds i32, i32* %521, i64 5
  %538 = load i32, i32* %536, align 4
  store i32 %538, i32* %537, align 4
  %539 = getelementptr inbounds i32, i32* %522, i64 6
  %540 = getelementptr inbounds i32, i32* %521, i64 6
  %541 = load i32, i32* %539, align 4
  store i32 %541, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %522, i64 7
  %543 = getelementptr inbounds i32, i32* %521, i64 7
  %544 = load i32, i32* %542, align 4
  store i32 %544, i32* %543, align 4
  %545 = getelementptr inbounds i32, i32* %522, i64 8
  %546 = getelementptr inbounds i32, i32* %521, i64 8
  %547 = icmp eq i32* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !85

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = icmp slt i32 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i32, i32* %551, i64 1
  %556 = ptrtoint i32* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i32*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i32, i32* %26, i64 %563
  %565 = ptrtoint i32* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 2
  %570 = load i32, i32* %564, align 4
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i32* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = icmp slt i32 %570, %576
  %578 = getelementptr inbounds i32, i32* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i32* %572, i32* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i32* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i32* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 2
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i32*
  %593 = inttoptr i64 %550 to i32*
  store i32 %27, i32* %593, align 4
  store i32 %552, i32* %592, align 4
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i32, i32* %560, i64 %595
  %597 = ptrtoint i32* %596 to i64
  %598 = ptrtoint i32* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 2
  %603 = load i32, i32* %596, align 4
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i32* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i32, i32* %605, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = icmp slt i32 %609, %603
  %611 = getelementptr inbounds i32, i32* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i32* %611, i32* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i32* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i32* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 2
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i32*
  %630 = inttoptr i64 %624 to i32*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i32* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i32* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i32, i32* %629, i64 1
  %638 = icmp eq i32* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i32, i32* %629, align 4
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 2
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %631, i8* align 4 %632, i64 %641, i1 false) #9
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i32, i32* %629, i64 %642
  store i32 %640, i32* %646, align 4
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i32, i32* %26, i64 1
  %649 = icmp eq i32* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i32, i32* %630, i64 -1
  %652 = load i32, i32* %651, align 4
  %653 = ptrtoint i32* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 2
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i32, i32* %630, i64 %658
  %660 = bitcast i32* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %660, i8* align 4 %631, i64 %654, i1 false) #9
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i32* [ %659, %656 ], [ %630, %650 ]
  store i32 %652, i32* %629, align 4
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 2
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 2
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i32, i32* %629, align 4
  store i32 %27, i32* %629, align 4
  store i32 %670, i32* %26, align 4
  %671 = getelementptr inbounds i32, i32* %629, i64 1
  %672 = getelementptr inbounds i32, i32* %26, i64 1
  %673 = icmp eq i32* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i32, i32* %26, i64 -2
  %676 = bitcast i32* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 2
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 8
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i32, i32* %629, i64 2
  %685 = getelementptr i32, i32* %26, i64 -2
  %686 = bitcast i32* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 2
  %691 = getelementptr i32, i32* %684, i64 %690
  %692 = getelementptr i32, i32* %26, i64 2
  %693 = getelementptr i32, i32* %692, i64 %690
  %694 = icmp ult i32* %671, %693
  %695 = icmp ult i32* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 9223372036854775800
  %699 = getelementptr i32, i32* %672, i64 %698
  %700 = getelementptr i32, i32* %671, i64 %698
  %701 = add nsw i64 %698, -8
  %702 = lshr exact i64 %701, 3
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i32, i32* %672, i64 %709
  %712 = getelementptr i32, i32* %671, i64 %709
  %713 = bitcast i32* %711 to <4 x i32>*
  %714 = load <4 x i32>, <4 x i32>* %713, align 4, !alias.scope !86
  %715 = getelementptr i32, i32* %711, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %717 = load <4 x i32>, <4 x i32>* %716, align 4, !alias.scope !86
  %718 = bitcast i32* %712 to <4 x i32>*
  %719 = load <4 x i32>, <4 x i32>* %718, align 4, !alias.scope !89, !noalias !86
  %720 = getelementptr i32, i32* %712, i64 4
  %721 = bitcast i32* %720 to <4 x i32>*
  %722 = load <4 x i32>, <4 x i32>* %721, align 4, !alias.scope !89, !noalias !86
  %723 = bitcast i32* %712 to <4 x i32>*
  store <4 x i32> %714, <4 x i32>* %723, align 4, !alias.scope !89, !noalias !86
  %724 = bitcast i32* %720 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %724, align 4, !alias.scope !89, !noalias !86
  %725 = bitcast i32* %711 to <4 x i32>*
  store <4 x i32> %719, <4 x i32>* %725, align 4, !alias.scope !86
  %726 = bitcast i32* %715 to <4 x i32>*
  store <4 x i32> %722, <4 x i32>* %726, align 4, !alias.scope !86
  %727 = or i64 %709, 8
  %728 = getelementptr i32, i32* %672, i64 %727
  %729 = getelementptr i32, i32* %671, i64 %727
  %730 = bitcast i32* %728 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !86
  %732 = getelementptr i32, i32* %728, i64 4
  %733 = bitcast i32* %732 to <4 x i32>*
  %734 = load <4 x i32>, <4 x i32>* %733, align 4, !alias.scope !86
  %735 = bitcast i32* %729 to <4 x i32>*
  %736 = load <4 x i32>, <4 x i32>* %735, align 4, !alias.scope !89, !noalias !86
  %737 = getelementptr i32, i32* %729, i64 4
  %738 = bitcast i32* %737 to <4 x i32>*
  %739 = load <4 x i32>, <4 x i32>* %738, align 4, !alias.scope !89, !noalias !86
  %740 = bitcast i32* %729 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %740, align 4, !alias.scope !89, !noalias !86
  %741 = bitcast i32* %737 to <4 x i32>*
  store <4 x i32> %734, <4 x i32>* %741, align 4, !alias.scope !89, !noalias !86
  %742 = bitcast i32* %728 to <4 x i32>*
  store <4 x i32> %736, <4 x i32>* %742, align 4, !alias.scope !86
  %743 = bitcast i32* %732 to <4 x i32>*
  store <4 x i32> %739, <4 x i32>* %743, align 4, !alias.scope !86
  %744 = add i64 %709, 16
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !91

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i32, i32* %672, i64 %748
  %752 = getelementptr i32, i32* %671, i64 %748
  %753 = bitcast i32* %751 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !86
  %755 = getelementptr i32, i32* %751, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  %757 = load <4 x i32>, <4 x i32>* %756, align 4, !alias.scope !86
  %758 = bitcast i32* %752 to <4 x i32>*
  %759 = load <4 x i32>, <4 x i32>* %758, align 4, !alias.scope !89, !noalias !86
  %760 = getelementptr i32, i32* %752, i64 4
  %761 = bitcast i32* %760 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4, !alias.scope !89, !noalias !86
  %763 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %763, align 4, !alias.scope !89, !noalias !86
  %764 = bitcast i32* %760 to <4 x i32>*
  store <4 x i32> %757, <4 x i32>* %764, align 4, !alias.scope !89, !noalias !86
  %765 = bitcast i32* %751 to <4 x i32>*
  store <4 x i32> %759, <4 x i32>* %765, align 4, !alias.scope !86
  %766 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %762, <4 x i32>* %766, align 4, !alias.scope !86
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i32* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i32* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i32* %771 to i64
  %773 = getelementptr i32, i32* %26, i64 -1
  %774 = ptrtoint i32* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 2
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i32* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i32* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i32, i32* %781, align 4
  %785 = load i32, i32* %782, align 4
  store i32 %784, i32* %782, align 4
  store i32 %785, i32* %781, align 4
  %786 = getelementptr inbounds i32, i32* %782, i64 1
  %787 = getelementptr inbounds i32, i32* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !92

790:                                              ; preds = %780, %769
  %791 = phi i32* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i32* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 12
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i32* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i32* [ %811, %794 ], [ %792, %790 ]
  %797 = load i32, i32* %795, align 4
  %798 = load i32, i32* %796, align 4
  store i32 %797, i32* %796, align 4
  store i32 %798, i32* %795, align 4
  %799 = getelementptr inbounds i32, i32* %796, i64 1
  %800 = getelementptr inbounds i32, i32* %795, i64 1
  %801 = load i32, i32* %800, align 4
  %802 = load i32, i32* %799, align 4
  store i32 %801, i32* %799, align 4
  store i32 %802, i32* %800, align 4
  %803 = getelementptr inbounds i32, i32* %796, i64 2
  %804 = getelementptr inbounds i32, i32* %795, i64 2
  %805 = load i32, i32* %804, align 4
  %806 = load i32, i32* %803, align 4
  store i32 %805, i32* %803, align 4
  store i32 %806, i32* %804, align 4
  %807 = getelementptr inbounds i32, i32* %796, i64 3
  %808 = getelementptr inbounds i32, i32* %795, i64 3
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %807, align 4
  store i32 %809, i32* %807, align 4
  store i32 %810, i32* %808, align 4
  %811 = getelementptr inbounds i32, i32* %796, i64 4
  %812 = getelementptr inbounds i32, i32* %795, i64 4
  %813 = icmp eq i32* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !93

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i32, i32* %629, i64 %815
  %823 = shl nsw i64 %815, 2
  %824 = add i64 %823, -4
  %825 = and i64 %824, 4
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i32, i32* %822, i64 -1
  %829 = load i32, i32* %828, align 4
  %830 = getelementptr inbounds i32, i32* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i32* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i32* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i32* %833 to i64
  %835 = load i32, i32* %833, align 4
  store i32 %835, i32* %832, align 4
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 2
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i32, i32* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i32, i32* %629, i64 %840
  %842 = select i1 %838, i32* %839, i32* %841
  %843 = icmp eq i32* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i32 %829, i32* %833, align 4
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i32* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i32, i32* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i32* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i32, i32* %851, i64 -1
  %853 = load i32, i32* %852, align 4
  %854 = getelementptr inbounds i32, i32* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i32* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i32* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i32* %857 to i64
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %856, align 4
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 2
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i32, i32* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i32, i32* %629, i64 %864
  %866 = select i1 %862, i32* %863, i32* %865
  %867 = icmp eq i32* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i32 %853, i32* %857, align 4
  %869 = getelementptr inbounds i32, i32* %851, i64 -2
  %870 = load i32, i32* %869, align 4
  %871 = getelementptr inbounds i32, i32* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i32* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i32* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32* %560, i32* %629, i32* %873, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i32* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN12favicon_base8IconTypeENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(i32* %873, i32* %630, i32* %15, %"struct.base::internal::flat_tree<favicon_base::IconType, base::identity, std::__1::less<void>, std::__1::vector<favicon_base::IconType, std::__1::allocator<favicon_base::IconType> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i32* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i32* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i32* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i32* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i32* %890 to i64
  %892 = load i32, i32* %890, align 4
  store i32 %892, i32* %889, align 4
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 2
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i32, i32* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i32, i32* %629, i64 %897
  %899 = select i1 %895, i32* %896, i32* %898
  %900 = icmp eq i32* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i32 %870, i32* %890, align 4
  %902 = icmp eq i32* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJ13scoped_refptrIS4_EEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"struct.favicon_base::FaviconRawBitmapResult"* dereferenceable(152)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.favicon::LargeIconWorker"*
  %14 = and i64 %6, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %6, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.favicon::LargeIconWorker"*, %"struct.favicon_base::FaviconRawBitmapResult"*)**
  %22 = load void (%"class.favicon::LargeIconWorker"*, %"struct.favicon_base::FaviconRawBitmapResult"*)*, void (%"class.favicon::LargeIconWorker"*, %"struct.favicon_base::FaviconRawBitmapResult"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %6 to void (%"class.favicon::LargeIconWorker"*, %"struct.favicon_base::FaviconRawBitmapResult"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.favicon::LargeIconWorker"*, %"struct.favicon_base::FaviconRawBitmapResult"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.favicon::LargeIconWorker"* %13, %"struct.favicon_base::FaviconRawBitmapResult"* dereferenceable(152) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.favicon::LargeIconWorker"**
  %6 = load %"class.favicon::LargeIconWorker"*, %"class.favicon::LargeIconWorker"** %5, align 8
  %7 = icmp eq %"class.favicon::LargeIconWorker"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.favicon::LargeIconWorker", %"class.favicon::LargeIconWorker"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN7favicon15LargeIconWorkerD2Ev(%"class.favicon::LargeIconWorker"* nonnull %6) #9
  %13 = bitcast %"class.favicon::LargeIconWorker"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %3, %8, %12
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %14, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS4_P8SkBitmapP4GURLPNS3_17FallbackIconStyleEEJS6_RiSG_S7_S9_SB_SD_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS4_P8SkBitmapP4GURLPNS3_17FallbackIconStyleEEJS6_RiSG_S7_S9_SB_SD_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS2_P8SkBitmapP4GURLPNS1_17FallbackIconStyleEEJS4_RiSE_S5_S7_S9_SB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFvRKN12favicon_base22FaviconRawBitmapResultEiiPS2_P8SkBitmapP4GURLPNS1_17FallbackIconStyleEEJS4_RiSE_S5_S7_S9_SB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7favicon15LargeIconWorkerEFvvEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7favicon15LargeIconWorkerEFvvEJPS4_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN7favicon15LargeIconWorkerEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN7favicon15LargeIconWorkerEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN7favicon12_GLOBAL__N_133ResizeLargeIconOnBackgroundThreadERKN12favicon_base22FaviconRawBitmapResultEi: argument 0"}
!14 = distinct !{!14, !"_ZN7favicon12_GLOBAL__N_133ResizeLargeIconOnBackgroundThreadERKN12favicon_base22FaviconRawBitmapResultEi"}
!15 = !{i8 0, i8 2}
!16 = !{!"branch_weights", i32 1, i32 1048575}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJR13scoped_refptrIS4_EEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJR13scoped_refptrIS4_EEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJR13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIMN7favicon15LargeIconWorkerEFvRKN12favicon_base22FaviconRawBitmapResultEEJR13scoped_refptrIS2_EEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.isvectorized", i32 1}
!31 = distinct !{!31, !23}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !30}
!38 = distinct !{!38, !23}
!39 = distinct !{!39, !23}
!40 = distinct !{!40, !30}
!41 = distinct !{!41, !30}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !30}
!48 = distinct !{!48, !23}
!49 = distinct !{!49, !23}
!50 = distinct !{!50, !30}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !30}
!57 = distinct !{!57, !23}
!58 = distinct !{!58, !23}
!59 = distinct !{!59, !30}
!60 = distinct !{!60, !23}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !30}
!67 = distinct !{!67, !23}
!68 = distinct !{!68, !23}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !30}
!75 = distinct !{!75, !23}
!76 = distinct !{!76, !30}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !30}
!83 = distinct !{!83, !23}
!84 = distinct !{!84, !30}
!85 = distinct !{!85, !30}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !30}
!92 = distinct !{!92, !23}
!93 = distinct !{!93, !30}
