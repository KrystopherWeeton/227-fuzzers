; ModuleID = '../../third_party/icu/source/i18n/utf8collationiterator.cpp'
source_filename = "../../third_party/icu/source/i18n/utf8collationiterator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::UTF8CollationIterator" = type { %"class.icu_69::CollationIterator.base", i8*, i32, i32 }
%"class.icu_69::CollationIterator.base" = type <{ %"class.icu_69::UObject", %struct.UTrie2*, %"struct.icu_69::CollationData"*, %"class.icu_69::CollationIterator::CEBuffer", i32, [4 x i8], %"class.icu_69::SkippedState"*, i32, i8 }>
%"class.icu_69::UObject" = type { i32 (...)** }
%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type opaque
%"struct.icu_69::CollationData" = type <{ %struct.UTrie2*, i32*, i64*, i16*, %"struct.icu_69::CollationData"*, i32*, %"class.icu_69::Normalizer2Impl"*, i32, i32, i32, i32, i8*, %"class.icu_69::UnicodeSet"*, i16*, i32, i32, i16*, i16*, i32, [4 x i8], i32*, i32, [4 x i8] }>
%"class.icu_69::Normalizer2Impl" = type { %"class.icu_69::UObject", i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.UCPTrie*, i16*, i16*, i8*, %"struct.icu_69::UInitOnce", %"struct.icu_69::CanonIterData"* }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.icu_69::CanonIterData" = type opaque
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%"class.icu_69::CollationIterator::CEBuffer" = type { i32, %"class.icu_69::MaybeStackArray.1" }
%"class.icu_69::MaybeStackArray.1" = type { i64*, i32, i8, [40 x i64] }
%"class.icu_69::SkippedState" = type opaque
%"class.icu_69::FCDUTF8CollationIterator" = type { %"class.icu_69::UTF8CollationIterator", i32, i32, i32, %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::UnicodeString" }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.2, [32 x i8] }
%struct.anon.2 = type { i16, i32, i32, i16* }
%"class.icu_69::CollationIterator" = type <{ %"class.icu_69::UObject", %struct.UTrie2*, %"struct.icu_69::CollationData"*, %"class.icu_69::CollationIterator::CEBuffer", i32, [4 x i8], %"class.icu_69::SkippedState"*, i32, i8, [3 x i8] }>
%struct.anon = type { i16, [27 x i16] }

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

@.str = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1
@_ZTVN6icu_6924FCDUTF8CollationIteratorE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6924FCDUTF8CollationIteratorE to i8*), i8* bitcast (void (%"class.icu_69::FCDUTF8CollationIterator"*)* @_ZN6icu_6924FCDUTF8CollationIteratorD2Ev to i8*), i8* bitcast (void (%"class.icu_69::FCDUTF8CollationIterator"*)* @_ZN6icu_6924FCDUTF8CollationIteratorD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (i8 (%"class.icu_69::CollationIterator"*, %"class.icu_69::CollationIterator"*)* @_ZNK6icu_6917CollationIteratoreqERKS0_ to i8*), i8* bitcast (void (%"class.icu_69::FCDUTF8CollationIterator"*, i32)* @_ZN6icu_6924FCDUTF8CollationIterator13resetToOffsetEi to i8*), i8* bitcast (i32 (%"class.icu_69::FCDUTF8CollationIterator"*)* @_ZNK6icu_6924FCDUTF8CollationIterator9getOffsetEv to i8*), i8* bitcast (i32 (%"class.icu_69::FCDUTF8CollationIterator"*, i32*)* @_ZN6icu_6924FCDUTF8CollationIterator13nextCodePointER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::FCDUTF8CollationIterator"*, i32*)* @_ZN6icu_6924FCDUTF8CollationIterator17previousCodePointER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::FCDUTF8CollationIterator"*, i32*, i32*)* @_ZN6icu_6924FCDUTF8CollationIterator14handleNextCE32ERiR10UErrorCode to i8*), i8* bitcast (i16 (%"class.icu_69::FCDUTF8CollationIterator"*)* @_ZN6icu_6924FCDUTF8CollationIterator23handleGetTrailSurrogateEv to i8*), i8* bitcast (i8 (%"class.icu_69::FCDUTF8CollationIterator"*)* @_ZN6icu_6924FCDUTF8CollationIterator18foundNULTerminatorEv to i8*), i8* bitcast (i8 (%"class.icu_69::UTF8CollationIterator"*)* @_ZNK6icu_6921UTF8CollationIterator25forbidSurrogateCodePointsEv to i8*), i8* bitcast (void (%"class.icu_69::FCDUTF8CollationIterator"*, i32, i32*)* @_ZN6icu_6924FCDUTF8CollationIterator20forwardNumCodePointsEiR10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::FCDUTF8CollationIterator"*, i32, i32*)* @_ZN6icu_6924FCDUTF8CollationIterator21backwardNumCodePointsEiR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::CollationIterator"*, i32)* @_ZNK6icu_6917CollationIterator11getDataCE32Ei to i8*), i8* bitcast (i32 (%"class.icu_69::CollationIterator"*, i32, i32*)* @_ZN6icu_6917CollationIterator22getCE32FromBuilderDataEjR10UErrorCode to i8*)] }, align 8
@_ZTVN6icu_6921UTF8CollationIteratorE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6921UTF8CollationIteratorE to i8*), i8* bitcast (void (%"class.icu_69::UTF8CollationIterator"*)* @_ZN6icu_6921UTF8CollationIteratorD2Ev to i8*), i8* bitcast (void (%"class.icu_69::UTF8CollationIterator"*)* @_ZN6icu_6921UTF8CollationIteratorD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (i8 (%"class.icu_69::CollationIterator"*, %"class.icu_69::CollationIterator"*)* @_ZNK6icu_6917CollationIteratoreqERKS0_ to i8*), i8* bitcast (void (%"class.icu_69::UTF8CollationIterator"*, i32)* @_ZN6icu_6921UTF8CollationIterator13resetToOffsetEi to i8*), i8* bitcast (i32 (%"class.icu_69::UTF8CollationIterator"*)* @_ZNK6icu_6921UTF8CollationIterator9getOffsetEv to i8*), i8* bitcast (i32 (%"class.icu_69::UTF8CollationIterator"*, i32*)* @_ZN6icu_6921UTF8CollationIterator13nextCodePointER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::UTF8CollationIterator"*, i32*)* @_ZN6icu_6921UTF8CollationIterator17previousCodePointER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::UTF8CollationIterator"*, i32*, i32*)* @_ZN6icu_6921UTF8CollationIterator14handleNextCE32ERiR10UErrorCode to i8*), i8* bitcast (i16 (%"class.icu_69::CollationIterator"*)* @_ZN6icu_6917CollationIterator23handleGetTrailSurrogateEv to i8*), i8* bitcast (i8 (%"class.icu_69::UTF8CollationIterator"*)* @_ZN6icu_6921UTF8CollationIterator18foundNULTerminatorEv to i8*), i8* bitcast (i8 (%"class.icu_69::UTF8CollationIterator"*)* @_ZNK6icu_6921UTF8CollationIterator25forbidSurrogateCodePointsEv to i8*), i8* bitcast (void (%"class.icu_69::UTF8CollationIterator"*, i32, i32*)* @_ZN6icu_6921UTF8CollationIterator20forwardNumCodePointsEiR10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::UTF8CollationIterator"*, i32, i32*)* @_ZN6icu_6921UTF8CollationIterator21backwardNumCodePointsEiR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::CollationIterator"*, i32)* @_ZNK6icu_6917CollationIterator11getDataCE32Ei to i8*), i8* bitcast (i32 (%"class.icu_69::CollationIterator"*, i32, i32*)* @_ZN6icu_6917CollationIterator22getCE32FromBuilderDataEjR10UErrorCode to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6921UTF8CollationIteratorE = hidden constant [33 x i8] c"N6icu_6921UTF8CollationIteratorE\00", align 1
@_ZTIN6icu_6917CollationIteratorE = external constant i8*
@_ZTIN6icu_6921UTF8CollationIteratorE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @_ZTSN6icu_6921UTF8CollationIteratorE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6917CollationIteratorE to i8*) }, align 8
@_ZTSN6icu_6924FCDUTF8CollationIteratorE = hidden constant [36 x i8] c"N6icu_6924FCDUTF8CollationIteratorE\00", align 1
@_ZTIN6icu_6924FCDUTF8CollationIteratorE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN6icu_6924FCDUTF8CollationIteratorE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6921UTF8CollationIteratorE to i8*) }, align 8
@_ZN6icu_6912CollationFCD9tcccIndexE = external local_unnamed_addr constant [2048 x i8], align 16
@_ZN6icu_6912CollationFCD8tcccBitsE = external local_unnamed_addr constant [0 x i32], align 4
@_ZN6icu_6912CollationFCD9lcccIndexE = external local_unnamed_addr constant [2048 x i8], align 16
@_ZN6icu_6912CollationFCD8lcccBitsE = external local_unnamed_addr constant [0 x i32], align 4
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_6921UTF8CollationIteratorD1Ev = hidden unnamed_addr alias void (%"class.icu_69::UTF8CollationIterator"*), void (%"class.icu_69::UTF8CollationIterator"*)* @_ZN6icu_6921UTF8CollationIteratorD2Ev
@_ZN6icu_6924FCDUTF8CollationIteratorD1Ev = hidden unnamed_addr alias void (%"class.icu_69::FCDUTF8CollationIterator"*), void (%"class.icu_69::FCDUTF8CollationIterator"*)* @_ZN6icu_6924FCDUTF8CollationIteratorD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #9
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #10
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #10
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #10
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #10
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #9
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #9
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #10
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6917CollationIteratorD2Ev(%"class.icu_69::CollationIterator"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6921UTF8CollationIteratorD2Ev(%"class.icu_69::UTF8CollationIterator"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.icu_69::UTF8CollationIterator"* %0 to %"class.icu_69::CollationIterator"*
  tail call void @_ZN6icu_6917CollationIteratorD2Ev(%"class.icu_69::CollationIterator"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6921UTF8CollationIteratorD0Ev(%"class.icu_69::UTF8CollationIterator"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.icu_69::UTF8CollationIterator"* %0 to %"class.icu_69::CollationIterator"*
  tail call void @_ZN6icu_6917CollationIteratorD2Ev(%"class.icu_69::CollationIterator"* %2) #10
  %3 = bitcast %"class.icu_69::UTF8CollationIterator"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6921UTF8CollationIterator13resetToOffsetEi(%"class.icu_69::UTF8CollationIterator"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.icu_69::UTF8CollationIterator"* %0 to %"class.icu_69::CollationIterator"*
  tail call void @_ZN6icu_6917CollationIterator5resetEv(%"class.icu_69::CollationIterator"* %3) #10
  %4 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 2
  store i32 %1, i32* %4, align 8
  ret void
}

declare void @_ZN6icu_6917CollationIterator5resetEv(%"class.icu_69::CollationIterator"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6921UTF8CollationIterator9getOffsetEv(%"class.icu_69::UTF8CollationIterator"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6921UTF8CollationIterator14handleNextCE32ERiR10UErrorCode(%"class.icu_69::UTF8CollationIterator"*, i32* nocapture dereferenceable(4), i32* nocapture readnone dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  store i32 -1, i32* %1, align 4
  br label %194

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = add nsw i32 %5, 1
  store i32 %13, i32* %4, align 8
  %14 = sext i32 %5 to i64
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %1, align 4
  %18 = icmp sgt i8 %16, -1
  br i1 %18, label %19, label %27

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  %21 = load %struct.UTrie2*, %struct.UTrie2** %20, align 8
  %22 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %21, i64 0, i32 2
  %23 = load i32*, i32** %22, align 8
  %24 = zext i8 %16 to i64
  %25 = getelementptr inbounds i32, i32* %23, i64 %24
  %26 = load i32, i32* %25, align 4
  br label %194

27:                                               ; preds = %10
  %28 = and i8 %16, -16
  %29 = icmp eq i8 %28, -32
  br i1 %29, label %30, label %85

30:                                               ; preds = %27
  %31 = load i32, i32* %4, align 8
  %32 = add nsw i32 %31, 1
  %33 = load i32, i32* %6, align 4
  %34 = icmp slt i32 %32, %33
  %35 = icmp slt i32 %33, 0
  %36 = or i1 %34, %35
  br i1 %36, label %37, label %85

37:                                               ; preds = %30
  %38 = and i32 %17, 15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = load i8*, i8** %11, align 8
  %44 = sext i32 %31 to i64
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = lshr i32 %47, 5
  %49 = shl i32 1, %48
  %50 = and i32 %49, %42
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %85, label %52

52:                                               ; preds = %37
  %53 = sext i32 %32 to i64
  %54 = getelementptr inbounds i8, i8* %43, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = xor i8 %55, -128
  %57 = icmp ult i8 %56, 64
  br i1 %57, label %58, label %85

58:                                               ; preds = %52
  %59 = zext i8 %56 to i32
  %60 = shl nuw nsw i32 %38, 12
  %61 = shl nuw nsw i32 %47, 6
  %62 = and i32 %61, 4032
  %63 = or i32 %62, %60
  %64 = or i32 %63, %59
  store i32 %64, i32* %1, align 4
  %65 = load i32, i32* %4, align 8
  %66 = add nsw i32 %65, 2
  store i32 %66, i32* %4, align 8
  %67 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  %68 = load %struct.UTrie2*, %struct.UTrie2** %67, align 8
  %69 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %68, i64 0, i32 2
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %68, i64 0, i32 0
  %72 = load i16*, i16** %71, align 8
  %73 = load i32, i32* %1, align 4
  %74 = ashr i32 %73, 5
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %72, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = shl nuw nsw i32 %78, 2
  %80 = and i32 %73, 31
  %81 = add nuw nsw i32 %79, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %70, i64 %82
  %84 = load i32, i32* %83, align 4
  br label %194

85:                                               ; preds = %30, %37, %52, %27
  %86 = add nsw i8 %16, 62
  %87 = icmp ult i8 %86, 30
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = load i32, i32* %6, align 4
  br label %123

90:                                               ; preds = %85
  %91 = load i32, i32* %4, align 8
  %92 = load i32, i32* %6, align 4
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %123, label %94

94:                                               ; preds = %90
  %95 = load i8*, i8** %11, align 8
  %96 = sext i32 %91 to i64
  %97 = getelementptr inbounds i8, i8* %95, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = xor i8 %98, -128
  %100 = zext i8 %99 to i32
  %101 = icmp ult i8 %99, 64
  br i1 %101, label %102, label %123

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  %104 = load %struct.UTrie2*, %struct.UTrie2** %103, align 8
  %105 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %104, i64 0, i32 2
  %106 = load i32*, i32** %105, align 8
  %107 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %104, i64 0, i32 0
  %108 = load i16*, i16** %107, align 8
  %109 = add nuw nsw i32 %17, 1888
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %108, i64 %110
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = add nuw nsw i32 %113, %100
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i32, i32* %106, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = shl nuw nsw i32 %17, 6
  %119 = and i32 %118, 1984
  %120 = or i32 %119, %100
  store i32 %120, i32* %1, align 4
  %121 = load i32, i32* %4, align 8
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %4, align 8
  br label %194

123:                                              ; preds = %88, %90, %94
  %124 = phi i32 [ %89, %88 ], [ %91, %90 ], [ %92, %94 ]
  %125 = load i8*, i8** %11, align 8
  %126 = tail call i32 @utf8_nextCharSafeBody_69(i8* %125, i32* %4, i32 %124, i32 %17, i8 signext -3) #10
  store i32 %126, i32* %1, align 4
  %127 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %128 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %127, align 8
  %129 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %128, i64 0, i32 0
  %130 = load %struct.UTrie2*, %struct.UTrie2** %129, align 8
  %131 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %130, i64 0, i32 2
  %132 = load i32*, i32** %131, align 8
  %133 = icmp ult i32 %126, 55296
  br i1 %133, label %134, label %145

134:                                              ; preds = %123
  %135 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %130, i64 0, i32 0
  %136 = load i16*, i16** %135, align 8
  %137 = lshr i32 %126, 5
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds i16, i16* %136, i64 %138
  %140 = load i16, i16* %139, align 2
  %141 = zext i16 %140 to i32
  %142 = shl nuw nsw i32 %141, 2
  %143 = and i32 %126, 31
  %144 = add nuw nsw i32 %142, %143
  br label %189

145:                                              ; preds = %123
  %146 = icmp ult i32 %126, 65536
  br i1 %146, label %147, label %161

147:                                              ; preds = %145
  %148 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %130, i64 0, i32 0
  %149 = load i16*, i16** %148, align 8
  %150 = icmp slt i32 %126, 56320
  %151 = select i1 %150, i32 320, i32 0
  %152 = lshr i32 %126, 5
  %153 = add nuw nsw i32 %151, %152
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i16, i16* %149, i64 %154
  %156 = load i16, i16* %155, align 2
  %157 = zext i16 %156 to i32
  %158 = shl nuw nsw i32 %157, 2
  %159 = and i32 %126, 31
  %160 = add nuw nsw i32 %158, %159
  br label %189

161:                                              ; preds = %145
  %162 = icmp ugt i32 %126, 1114111
  br i1 %162, label %189, label %163

163:                                              ; preds = %161
  %164 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %130, i64 0, i32 9
  %165 = load i32, i32* %164, align 4
  %166 = icmp sgt i32 %165, %126
  br i1 %166, label %170, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %130, i64 0, i32 10
  %169 = load i32, i32* %168, align 8
  br label %189

170:                                              ; preds = %163
  %171 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %130, i64 0, i32 0
  %172 = load i16*, i16** %171, align 8
  %173 = lshr i32 %126, 11
  %174 = add nuw nsw i32 %173, 2080
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i16, i16* %172, i64 %175
  %177 = load i16, i16* %176, align 2
  %178 = zext i16 %177 to i32
  %179 = lshr i32 %126, 5
  %180 = and i32 %179, 63
  %181 = add nuw nsw i32 %180, %178
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds i16, i16* %172, i64 %182
  %184 = load i16, i16* %183, align 2
  %185 = zext i16 %184 to i32
  %186 = shl nuw nsw i32 %185, 2
  %187 = and i32 %126, 31
  %188 = add nuw nsw i32 %186, %187
  br label %189

189:                                              ; preds = %134, %147, %161, %167, %170
  %190 = phi i32 [ %144, %134 ], [ %160, %147 ], [ 128, %161 ], [ %169, %167 ], [ %188, %170 ]
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32, i32* %132, i64 %191
  %193 = load i32, i32* %192, align 4
  br label %194

194:                                              ; preds = %58, %102, %189, %19, %9
  %195 = phi i32 [ 192, %9 ], [ %26, %19 ], [ %84, %58 ], [ %117, %102 ], [ %193, %189 ]
  ret i32 %195
}

declare i32 @utf8_nextCharSafeBody_69(i8*, i32*, i32, i32, i8 signext) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6921UTF8CollationIterator18foundNULTerminatorEv(%"class.icu_69::UTF8CollationIterator"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, -1
  store i32 %8, i32* %6, align 8
  store i32 %8, i32* %2, align 4
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i8 [ 1, %5 ], [ 0, %1 ]
  ret i8 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZNK6icu_6921UTF8CollationIterator25forbidSurrogateCodePointsEv(%"class.icu_69::UTF8CollationIterator"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i8 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6921UTF8CollationIterator13nextCodePointER10UErrorCode(%"class.icu_69::UTF8CollationIterator"* nocapture, i32* nocapture readnone dereferenceable(4)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %99, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = sext i32 %4 to i64
  %12 = getelementptr inbounds i8, i8* %10, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = icmp slt i32 %6, 0
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  store i32 %4, i32* %5, align 4
  br label %99

18:                                               ; preds = %8
  %19 = add nsw i32 %4, 1
  store i32 %19, i32* %3, align 8
  %20 = load i8, i8* %12, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp sgt i8 %20, -1
  br i1 %22, label %99, label %23

23:                                               ; preds = %18
  %24 = icmp eq i32 %19, %6
  br i1 %24, label %99, label %25

25:                                               ; preds = %23
  %26 = icmp ugt i8 %20, -33
  br i1 %26, label %27, label %82

27:                                               ; preds = %25
  %28 = icmp ult i8 %20, -16
  br i1 %28, label %29, label %45

29:                                               ; preds = %27
  %30 = and i32 %21, 15
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = sext i32 %19 to i64
  %36 = getelementptr inbounds i8, i8* %10, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = lshr i8 %37, 5
  %39 = zext i8 %38 to i32
  %40 = shl i32 1, %39
  %41 = and i32 %40, %34
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %99, label %43

43:                                               ; preds = %29
  %44 = and i8 %37, 63
  br label %73

45:                                               ; preds = %27
  %46 = add nsw i32 %21, -240
  %47 = icmp slt i32 %46, 5
  br i1 %47, label %48, label %99

48:                                               ; preds = %45
  %49 = sext i32 %19 to i64
  %50 = getelementptr inbounds i8, i8* %10, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = lshr i32 %52, 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = shl i32 1, %46
  %59 = and i32 %58, %57
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %99, label %61

61:                                               ; preds = %48
  %62 = add nsw i32 %4, 2
  store i32 %62, i32* %3, align 8
  %63 = icmp eq i32 %62, %6
  br i1 %63, label %99, label %64

64:                                               ; preds = %61
  %65 = shl nsw i32 %46, 6
  %66 = and i32 %52, 63
  %67 = or i32 %66, %65
  %68 = sext i32 %62 to i64
  %69 = getelementptr inbounds i8, i8* %10, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = xor i8 %70, -128
  %72 = icmp ult i8 %71, 64
  br i1 %72, label %73, label %99

73:                                               ; preds = %43, %64
  %74 = phi i32 [ %19, %43 ], [ %62, %64 ]
  %75 = phi i32 [ %30, %43 ], [ %67, %64 ]
  %76 = phi i8 [ %44, %43 ], [ %71, %64 ]
  %77 = shl nsw i32 %75, 6
  %78 = zext i8 %76 to i32
  %79 = or i32 %77, %78
  %80 = add nsw i32 %74, 1
  store i32 %80, i32* %3, align 8
  %81 = icmp eq i32 %80, %6
  br i1 %81, label %99, label %86

82:                                               ; preds = %25
  %83 = icmp ugt i8 %20, -63
  br i1 %83, label %84, label %99

84:                                               ; preds = %82
  %85 = and i32 %21, 31
  br label %86

86:                                               ; preds = %73, %84
  %87 = phi i32 [ %80, %73 ], [ %19, %84 ]
  %88 = phi i32 [ %79, %73 ], [ %85, %84 ]
  %89 = sext i32 %87 to i64
  %90 = getelementptr inbounds i8, i8* %10, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = xor i8 %91, -128
  %93 = icmp ult i8 %92, 64
  br i1 %93, label %94, label %99

94:                                               ; preds = %86
  %95 = zext i8 %92 to i32
  %96 = shl i32 %88, 6
  %97 = or i32 %96, %95
  %98 = add nsw i32 %87, 1
  store i32 %98, i32* %3, align 8
  br label %99

99:                                               ; preds = %18, %45, %64, %82, %86, %23, %48, %61, %73, %29, %94, %2, %17
  %100 = phi i32 [ -1, %17 ], [ -1, %2 ], [ %21, %18 ], [ %97, %94 ], [ 65533, %29 ], [ 65533, %73 ], [ 65533, %61 ], [ 65533, %48 ], [ 65533, %23 ], [ 65533, %86 ], [ 65533, %82 ], [ 65533, %64 ], [ 65533, %45 ]
  ret i32 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6921UTF8CollationIterator17previousCodePointER10UErrorCode(%"class.icu_69::UTF8CollationIterator"*, i32* nocapture readnone dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = add nsw i32 %4, -1
  store i32 %9, i32* %3, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = icmp sgt i8 %12, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %6
  %16 = tail call i32 @utf8_prevCharSafeBody_69(i8* %8, i32 0, i32* %3, i32 %13, i8 signext -3) #10
  br label %17

17:                                               ; preds = %6, %15, %2
  %18 = phi i32 [ -1, %2 ], [ %13, %6 ], [ %16, %15 ]
  ret i32 %18
}

declare i32 @utf8_prevCharSafeBody_69(i8*, i32, i32*, i32, i8 signext) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6921UTF8CollationIterator20forwardNumCodePointsEiR10UErrorCode(%"class.icu_69::UTF8CollationIterator"* nocapture, i32, i32* nocapture readnone dereferenceable(4)) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 1
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %102

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 3
  %9 = load i32, i32* %7, align 8
  %10 = load i32, i32* %8, align 4
  %11 = icmp slt i32 %10, 0
  br label %12

12:                                               ; preds = %6, %98
  %13 = phi i32 [ %9, %6 ], [ %99, %98 ]
  %14 = phi i32 [ %1, %6 ], [ %100, %98 ]
  %15 = icmp slt i32 %13, %10
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = load i8*, i8** %4, align 8
  %18 = sext i32 %13 to i64
  br label %26

19:                                               ; preds = %12
  br i1 %11, label %20, label %102

20:                                               ; preds = %19
  %21 = load i8*, i8** %4, align 8
  %22 = sext i32 %13 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %102, label %26

26:                                               ; preds = %16, %20
  %27 = phi i64 [ %18, %16 ], [ %22, %20 ]
  %28 = phi i8* [ %17, %16 ], [ %21, %20 ]
  %29 = add nsw i32 %13, 1
  store i32 %29, i32* %7, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 %27
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = add i8 %31, 62
  %34 = icmp ugt i8 %33, 50
  %35 = icmp eq i32 %29, %10
  %36 = or i1 %35, %34
  br i1 %36, label %98, label %37

37:                                               ; preds = %26
  %38 = sext i32 %29 to i64
  %39 = getelementptr inbounds i8, i8* %28, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %31, -16
  %42 = icmp eq i8 %41, -32
  br i1 %42, label %43, label %64

43:                                               ; preds = %37
  %44 = and i32 %32, 15
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = lshr i8 %40, 5
  %50 = zext i8 %49 to i32
  %51 = shl i32 1, %50
  %52 = and i32 %51, %48
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %98, label %54

54:                                               ; preds = %43
  %55 = add nsw i32 %13, 2
  store i32 %55, i32* %7, align 8
  %56 = icmp eq i32 %55, %10
  br i1 %56, label %98, label %57

57:                                               ; preds = %54
  %58 = sext i32 %55 to i64
  %59 = getelementptr inbounds i8, i8* %28, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, -64
  br i1 %61, label %62, label %98

62:                                               ; preds = %57
  %63 = add nsw i32 %13, 3
  store i32 %63, i32* %7, align 8
  br label %98

64:                                               ; preds = %37
  %65 = icmp ult i8 %31, -32
  br i1 %65, label %66, label %70

66:                                               ; preds = %64
  %67 = icmp slt i8 %40, -64
  br i1 %67, label %68, label %98

68:                                               ; preds = %66
  %69 = add nsw i32 %13, 2
  store i32 %69, i32* %7, align 8
  br label %98

70:                                               ; preds = %64
  %71 = lshr i8 %40, 4
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = sext i8 %74 to i32
  %76 = and i32 %32, 7
  %77 = shl i32 1, %76
  %78 = and i32 %77, %75
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %98, label %80

80:                                               ; preds = %70
  %81 = add nsw i32 %13, 2
  store i32 %81, i32* %7, align 8
  %82 = icmp eq i32 %81, %10
  br i1 %82, label %98, label %83

83:                                               ; preds = %80
  %84 = sext i32 %81 to i64
  %85 = getelementptr inbounds i8, i8* %28, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, -64
  br i1 %87, label %88, label %98

88:                                               ; preds = %83
  %89 = add nsw i32 %13, 3
  store i32 %89, i32* %7, align 8
  %90 = icmp eq i32 %89, %10
  br i1 %90, label %98, label %91

91:                                               ; preds = %88
  %92 = sext i32 %89 to i64
  %93 = getelementptr inbounds i8, i8* %28, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, -64
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = add nsw i32 %13, 4
  store i32 %97, i32* %7, align 8
  br label %98

98:                                               ; preds = %26, %62, %57, %83, %91, %96, %66, %68, %70, %80, %88, %43, %54
  %99 = phi i32 [ %29, %26 ], [ %63, %62 ], [ %55, %57 ], [ %81, %83 ], [ %89, %91 ], [ %97, %96 ], [ %29, %66 ], [ %69, %68 ], [ %29, %70 ], [ %10, %80 ], [ %10, %88 ], [ %29, %43 ], [ %10, %54 ]
  %100 = add nsw i32 %14, -1
  %101 = icmp sgt i32 %100, 0
  br i1 %101, label %12, label %102

102:                                              ; preds = %98, %19, %20, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6921UTF8CollationIterator21backwardNumCodePointsEiR10UErrorCode(%"class.icu_69::UTF8CollationIterator"* nocapture, i32, i32* nocapture readnone dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 2
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %26

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::UTF8CollationIterator", %"class.icu_69::UTF8CollationIterator"* %0, i64 0, i32 1
  %8 = load i32, i32* %4, align 8
  br label %9

9:                                                ; preds = %6, %22
  %10 = phi i32 [ %8, %6 ], [ %23, %22 ]
  %11 = phi i32 [ %1, %6 ], [ %24, %22 ]
  %12 = icmp sgt i32 %10, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %9
  %14 = load i8*, i8** %7, align 8
  %15 = add nsw i32 %10, -1
  store i32 %15, i32* %4, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, -64
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @utf8_back1SafeBody_69(i8* %14, i32 0, i32 %15) #10
  store i32 %21, i32* %4, align 8
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %15, %13 ]
  %24 = add nsw i32 %11, -1
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %9, label %26

26:                                               ; preds = %9, %22, %3
  ret void
}

declare i32 @utf8_back1SafeBody_69(i8*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6924FCDUTF8CollationIteratorD2Ev(%"class.icu_69::FCDUTF8CollationIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN6icu_6924FCDUTF8CollationIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %3) #10
  %4 = bitcast %"class.icu_69::FCDUTF8CollationIterator"* %0 to %"class.icu_69::CollationIterator"*
  tail call void @_ZN6icu_6917CollationIteratorD2Ev(%"class.icu_69::CollationIterator"* %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6924FCDUTF8CollationIteratorD0Ev(%"class.icu_69::FCDUTF8CollationIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN6icu_6924FCDUTF8CollationIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %3) #10
  %4 = bitcast %"class.icu_69::FCDUTF8CollationIterator"* %0 to %"class.icu_69::CollationIterator"*
  tail call void @_ZN6icu_6917CollationIteratorD2Ev(%"class.icu_69::CollationIterator"* %4) #10
  %5 = bitcast %"class.icu_69::FCDUTF8CollationIterator"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6924FCDUTF8CollationIterator13resetToOffsetEi(%"class.icu_69::FCDUTF8CollationIterator"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.icu_69::FCDUTF8CollationIterator"* %0 to %"class.icu_69::CollationIterator"*
  tail call void @_ZN6icu_6917CollationIterator5resetEv(%"class.icu_69::CollationIterator"* %3) #10
  %4 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6924FCDUTF8CollationIterator9getOffsetEv(%"class.icu_69::FCDUTF8CollationIterator"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  %5 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  br i1 %4, label %7, label %15

7:                                                ; preds = %1
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  br label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  br label %15

15:                                               ; preds = %1, %12, %9
  %16 = phi i32 [ %11, %9 ], [ %14, %12 ], [ %6, %1 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6924FCDUTF8CollationIterator14handleNextCE32ERiR10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"*, i32* nocapture dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 0, i32 1
  br label %13

13:                                               ; preds = %294, %3
  %14 = load i32, i32* %4, align 8
  switch i32 %14, label %290 [
    i32 0, label %15
    i32 2, label %238
    i32 3, label %245
    i32 1, label %285
  ]

15:                                               ; preds = %13
  %16 = load i32, i32* %5, align 8
  %17 = load i32, i32* %10, align 4
  %18 = icmp eq i32 %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  store i32 -1, i32* %1, align 4
  br label %313

20:                                               ; preds = %15
  %21 = load i8*, i8** %11, align 8
  %22 = add nsw i32 %16, 1
  store i32 %22, i32* %5, align 8
  %23 = sext i32 %16 to i64
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %1, align 4
  %27 = icmp sgt i8 %25, -1
  br i1 %27, label %28, label %35

28:                                               ; preds = %20
  %29 = load %struct.UTrie2*, %struct.UTrie2** %12, align 8
  %30 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %29, i64 0, i32 2
  %31 = load i32*, i32** %30, align 8
  %32 = zext i8 %25 to i64
  %33 = getelementptr inbounds i32, i32* %31, i64 %32
  %34 = load i32, i32* %33, align 4
  br label %313

35:                                               ; preds = %20
  %36 = and i8 %25, -16
  %37 = icmp eq i8 %36, -32
  br i1 %37, label %38, label %102

38:                                               ; preds = %35
  %39 = load i32, i32* %5, align 8
  %40 = add nsw i32 %39, 1
  %41 = load i32, i32* %10, align 4
  %42 = icmp slt i32 %40, %41
  %43 = icmp slt i32 %41, 0
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %102

45:                                               ; preds = %38
  %46 = and i32 %26, 15
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = load i8*, i8** %11, align 8
  %52 = sext i32 %39 to i64
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = lshr i32 %55, 5
  %57 = shl i32 1, %56
  %58 = and i32 %57, %50
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %102, label %60

60:                                               ; preds = %45
  %61 = sext i32 %40 to i64
  %62 = getelementptr inbounds i8, i8* %51, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = xor i8 %63, -128
  %65 = icmp ult i8 %64, 64
  br i1 %65, label %66, label %102

66:                                               ; preds = %60
  %67 = zext i8 %64 to i32
  %68 = shl nuw nsw i32 %46, 12
  %69 = shl nuw nsw i32 %55, 6
  %70 = and i32 %69, 4032
  %71 = or i32 %70, %68
  %72 = or i32 %71, %67
  store i32 %72, i32* %1, align 4
  %73 = load i32, i32* %5, align 8
  %74 = add nsw i32 %73, 2
  store i32 %74, i32* %5, align 8
  %75 = load i32, i32* %1, align 4
  %76 = icmp sgt i32 %75, 191
  br i1 %76, label %77, label %295

77:                                               ; preds = %66
  %78 = lshr i32 %75, 5
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9tcccIndexE, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %295, label %83

83:                                               ; preds = %77
  %84 = zext i8 %81 to i64
  %85 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8tcccBitsE, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %75, 31
  %88 = shl i32 1, %87
  %89 = and i32 %86, %88
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %295, label %91

91:                                               ; preds = %83
  %92 = and i32 %75, 2096897
  %93 = icmp eq i32 %92, 3841
  br i1 %93, label %100, label %94

94:                                               ; preds = %91
  %95 = load i32, i32* %10, align 4
  %96 = icmp eq i32 %74, %95
  br i1 %96, label %295, label %97

97:                                               ; preds = %94
  %98 = tail call signext i8 @_ZNK6icu_6924FCDUTF8CollationIterator11nextHasLcccEv(%"class.icu_69::FCDUTF8CollationIterator"* %0)
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %295, label %100

100:                                              ; preds = %91, %97
  %101 = add nsw i32 %73, -1
  br label %233

102:                                              ; preds = %38, %45, %60, %35
  %103 = add nsw i8 %25, 62
  %104 = icmp ult i8 %103, 30
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = load i32, i32* %10, align 4
  br label %163

107:                                              ; preds = %102
  %108 = load i32, i32* %5, align 8
  %109 = load i32, i32* %10, align 4
  %110 = icmp eq i32 %108, %109
  br i1 %110, label %163, label %111

111:                                              ; preds = %107
  %112 = load i8*, i8** %11, align 8
  %113 = sext i32 %108 to i64
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = xor i8 %115, -128
  %117 = zext i8 %116 to i32
  %118 = icmp ult i8 %116, 64
  br i1 %118, label %119, label %163

119:                                              ; preds = %111
  %120 = load %struct.UTrie2*, %struct.UTrie2** %12, align 8
  %121 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %120, i64 0, i32 2
  %122 = load i32*, i32** %121, align 8
  %123 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %120, i64 0, i32 0
  %124 = load i16*, i16** %123, align 8
  %125 = add nuw nsw i32 %26, 1888
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i16, i16* %124, i64 %126
  %128 = load i16, i16* %127, align 2
  %129 = zext i16 %128 to i32
  %130 = add nuw nsw i32 %129, %117
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %122, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = shl nuw nsw i32 %26, 6
  %135 = and i32 %134, 1984
  %136 = or i32 %135, %117
  store i32 %136, i32* %1, align 4
  %137 = load i32, i32* %5, align 8
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %5, align 8
  %139 = load i32, i32* %1, align 4
  %140 = icmp sgt i32 %139, 191
  br i1 %140, label %141, label %313

141:                                              ; preds = %119
  %142 = lshr i32 %139, 5
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9tcccIndexE, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %313, label %147

147:                                              ; preds = %141
  %148 = zext i8 %145 to i64
  %149 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8tcccBitsE, i64 0, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = and i32 %139, 31
  %152 = shl i32 1, %151
  %153 = and i32 %150, %152
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %313, label %155

155:                                              ; preds = %147
  %156 = load i32, i32* %10, align 4
  %157 = icmp eq i32 %138, %156
  br i1 %157, label %313, label %158

158:                                              ; preds = %155
  %159 = tail call signext i8 @_ZNK6icu_6924FCDUTF8CollationIterator11nextHasLcccEv(%"class.icu_69::FCDUTF8CollationIterator"* %0)
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %313, label %161

161:                                              ; preds = %158
  %162 = add nsw i32 %137, -1
  br label %233

163:                                              ; preds = %105, %107, %111
  %164 = phi i32 [ %106, %105 ], [ %108, %107 ], [ %109, %111 ]
  %165 = load i8*, i8** %11, align 8
  %166 = tail call i32 @utf8_nextCharSafeBody_69(i8* %165, i32* %5, i32 %164, i32 %26, i8 signext -3) #10
  store i32 %166, i32* %1, align 4
  %167 = icmp eq i32 %166, 65533
  br i1 %167, label %313, label %168

168:                                              ; preds = %163
  %169 = lshr i32 %166, 10
  %170 = add nuw nsw i32 %169, 55232
  %171 = and i32 %170, 65535
  %172 = icmp ugt i32 %171, 191
  br i1 %172, label %173, label %196

173:                                              ; preds = %168
  %174 = lshr i32 %171, 5
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9tcccIndexE, i64 0, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %196, label %179

179:                                              ; preds = %173
  %180 = zext i8 %177 to i64
  %181 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8tcccBitsE, i64 0, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = and i32 %170, 31
  %184 = shl i32 1, %183
  %185 = and i32 %182, %184
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %179
  %188 = load i32, i32* %5, align 8
  %189 = load i32, i32* %10, align 4
  %190 = icmp eq i32 %188, %189
  br i1 %190, label %196, label %191

191:                                              ; preds = %187
  %192 = tail call signext i8 @_ZNK6icu_6924FCDUTF8CollationIterator11nextHasLcccEv(%"class.icu_69::FCDUTF8CollationIterator"* %0)
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = add nsw i32 %188, -4
  br label %233

196:                                              ; preds = %168, %173, %191, %187, %179
  %197 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 0, i32 2
  %198 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %197, align 8
  %199 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %198, i64 0, i32 0
  %200 = load %struct.UTrie2*, %struct.UTrie2** %199, align 8
  %201 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %200, i64 0, i32 2
  %202 = load i32*, i32** %201, align 8
  %203 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %200, i64 0, i32 9
  %204 = load i32, i32* %203, align 4
  %205 = icmp sgt i32 %204, %166
  br i1 %205, label %209, label %206

206:                                              ; preds = %196
  %207 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %200, i64 0, i32 10
  %208 = load i32, i32* %207, align 8
  br label %228

209:                                              ; preds = %196
  %210 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %200, i64 0, i32 0
  %211 = load i16*, i16** %210, align 8
  %212 = ashr i32 %166, 11
  %213 = add nsw i32 %212, 2080
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i16, i16* %211, i64 %214
  %216 = load i16, i16* %215, align 2
  %217 = zext i16 %216 to i32
  %218 = lshr i32 %166, 5
  %219 = and i32 %218, 63
  %220 = add nuw nsw i32 %219, %217
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds i16, i16* %211, i64 %221
  %223 = load i16, i16* %222, align 2
  %224 = zext i16 %223 to i32
  %225 = shl nuw nsw i32 %224, 2
  %226 = and i32 %166, 31
  %227 = add nuw nsw i32 %225, %226
  br label %228

228:                                              ; preds = %206, %209
  %229 = phi i32 [ %208, %206 ], [ %227, %209 ]
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i32, i32* %202, i64 %230
  %232 = load i32, i32* %231, align 4
  br label %313

233:                                              ; preds = %161, %194, %100
  %234 = phi i32 [ %162, %161 ], [ %195, %194 ], [ %101, %100 ]
  store i32 %234, i32* %5, align 8
  %235 = tail call signext i8 @_ZN6icu_6924FCDUTF8CollationIterator11nextSegmentER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"* %0, i32* dereferenceable(4) %2)
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %237, label %294

237:                                              ; preds = %233
  store i32 -1, i32* %1, align 4
  br label %313

238:                                              ; preds = %13
  %239 = load i32, i32* %5, align 8
  %240 = load i32, i32* %7, align 8
  %241 = icmp eq i32 %239, %240
  br i1 %241, label %292, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0
  %244 = tail call i32 @_ZN6icu_6921UTF8CollationIterator14handleNextCE32ERiR10UErrorCode(%"class.icu_69::UTF8CollationIterator"* %243, i32* dereferenceable(4) %1, i32* dereferenceable(4) undef)
  br label %313

245:                                              ; preds = %13
  %246 = load i32, i32* %5, align 8
  %247 = load i16, i16* %8, align 8
  %248 = icmp slt i16 %247, 0
  br i1 %248, label %252, label %249

249:                                              ; preds = %245
  %250 = lshr i16 %247, 5
  %251 = zext i16 %250 to i32
  br label %254

252:                                              ; preds = %245
  %253 = load i32, i32* %9, align 4
  br label %254

254:                                              ; preds = %249, %252
  %255 = phi i32 [ %251, %249 ], [ %253, %252 ]
  %256 = icmp eq i32 %246, %255
  br i1 %256, label %290, label %257

257:                                              ; preds = %254
  %258 = add nsw i32 %246, 1
  store i32 %258, i32* %5, align 8
  br i1 %248, label %262, label %259

259:                                              ; preds = %257
  %260 = lshr i16 %247, 5
  %261 = zext i16 %260 to i32
  br label %264

262:                                              ; preds = %257
  %263 = load i32, i32* %9, align 4
  br label %264

264:                                              ; preds = %262, %259
  %265 = phi i32 [ %261, %259 ], [ %263, %262 ]
  %266 = icmp ugt i32 %265, %246
  br i1 %266, label %267, label %283

267:                                              ; preds = %264
  %268 = and i16 %247, 2
  %269 = icmp eq i16 %268, 0
  br i1 %269, label %274, label %270

270:                                              ; preds = %267
  %271 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1
  %272 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %271 to %struct.anon*
  %273 = getelementptr inbounds %struct.anon, %struct.anon* %272, i64 0, i32 1, i64 0
  br label %277

274:                                              ; preds = %267
  %275 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 3
  %276 = load i16*, i16** %275, align 8
  br label %277

277:                                              ; preds = %274, %270
  %278 = phi i16* [ %273, %270 ], [ %276, %274 ]
  %279 = sext i32 %246 to i64
  %280 = getelementptr inbounds i16, i16* %278, i64 %279
  %281 = load i16, i16* %280, align 2
  %282 = zext i16 %281 to i32
  br label %283

283:                                              ; preds = %264, %277
  %284 = phi i32 [ %282, %277 ], [ 65535, %264 ]
  store i32 %284, i32* %1, align 4
  br label %295

285:                                              ; preds = %13
  %286 = load i32, i32* %5, align 8
  store i32 %286, i32* %6, align 4
  %287 = load i32, i32* %7, align 8
  %288 = icmp eq i32 %286, %287
  %289 = select i1 %288, i32 0, i32 2
  br label %292

290:                                              ; preds = %13, %254
  %291 = load i32, i32* %7, align 8
  store i32 %291, i32* %5, align 8
  store i32 %291, i32* %6, align 4
  br label %292

292:                                              ; preds = %290, %238, %285
  %293 = phi i32 [ %289, %285 ], [ 0, %238 ], [ 0, %290 ]
  store i32 %293, i32* %4, align 8
  br label %294

294:                                              ; preds = %292, %233
  br label %13

295:                                              ; preds = %66, %77, %83, %94, %97, %283
  %296 = phi i32 [ %284, %283 ], [ %75, %97 ], [ %75, %94 ], [ %75, %83 ], [ %75, %77 ], [ %75, %66 ]
  %297 = load %struct.UTrie2*, %struct.UTrie2** %12, align 8
  %298 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %297, i64 0, i32 2
  %299 = load i32*, i32** %298, align 8
  %300 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %297, i64 0, i32 0
  %301 = load i16*, i16** %300, align 8
  %302 = ashr i32 %296, 5
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i16, i16* %301, i64 %303
  %305 = load i16, i16* %304, align 2
  %306 = zext i16 %305 to i32
  %307 = shl nuw nsw i32 %306, 2
  %308 = and i32 %296, 31
  %309 = add nuw nsw i32 %307, %308
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds i32, i32* %299, i64 %310
  %312 = load i32, i32* %311, align 4
  br label %313

313:                                              ; preds = %119, %141, %147, %155, %158, %163, %228, %237, %295, %242, %28, %19
  %314 = phi i32 [ 192, %19 ], [ %34, %28 ], [ %312, %295 ], [ %244, %242 ], [ %232, %228 ], [ 192, %237 ], [ %133, %119 ], [ %133, %141 ], [ %133, %147 ], [ %133, %155 ], [ %133, %158 ], [ -195323, %163 ]
  ret i32 %314
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_6924FCDUTF8CollationIterator11nextHasLcccEv(%"class.icu_69::FCDUTF8CollationIterator"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = icmp ult i8 %8, -52
  br i1 %10, label %116, label %11

11:                                               ; preds = %1
  %12 = add nsw i8 %8, 28
  %13 = icmp ult i8 %12, 10
  %14 = icmp ne i8 %8, -22
  %15 = and i1 %14, %13
  br i1 %15, label %116, label %16

16:                                               ; preds = %11
  %17 = add nsw i32 %5, 1
  %18 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %100, label %21

21:                                               ; preds = %16
  %22 = icmp ugt i8 %8, -33
  br i1 %22, label %23, label %78

23:                                               ; preds = %21
  %24 = icmp ult i8 %8, -16
  br i1 %24, label %25, label %41

25:                                               ; preds = %23
  %26 = and i32 %9, 15
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = sext i32 %17 to i64
  %32 = getelementptr inbounds i8, i8* %3, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = lshr i8 %33, 5
  %35 = zext i8 %34 to i32
  %36 = shl i32 1, %35
  %37 = and i32 %36, %30
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %100, label %39

39:                                               ; preds = %25
  %40 = and i8 %33, 63
  br label %69

41:                                               ; preds = %23
  %42 = add nsw i32 %9, -240
  %43 = icmp slt i32 %42, 5
  br i1 %43, label %44, label %100

44:                                               ; preds = %41
  %45 = sext i32 %17 to i64
  %46 = getelementptr inbounds i8, i8* %3, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = lshr i32 %48, 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = shl i32 1, %42
  %55 = and i32 %54, %53
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %100, label %57

57:                                               ; preds = %44
  %58 = add nsw i32 %5, 2
  %59 = icmp eq i32 %58, %19
  br i1 %59, label %100, label %60

60:                                               ; preds = %57
  %61 = shl nsw i32 %42, 6
  %62 = and i32 %48, 63
  %63 = or i32 %62, %61
  %64 = sext i32 %58 to i64
  %65 = getelementptr inbounds i8, i8* %3, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = xor i8 %66, -128
  %68 = icmp ult i8 %67, 64
  br i1 %68, label %69, label %100

69:                                               ; preds = %39, %60
  %70 = phi i32 [ %26, %39 ], [ %63, %60 ]
  %71 = phi i32 [ %17, %39 ], [ %58, %60 ]
  %72 = phi i8 [ %40, %39 ], [ %67, %60 ]
  %73 = shl nsw i32 %70, 6
  %74 = zext i8 %72 to i32
  %75 = or i32 %73, %74
  %76 = add nsw i32 %71, 1
  %77 = icmp eq i32 %76, %19
  br i1 %77, label %100, label %80

78:                                               ; preds = %21
  %79 = and i32 %9, 31
  br label %80

80:                                               ; preds = %69, %78
  %81 = phi i32 [ %75, %69 ], [ %79, %78 ]
  %82 = phi i32 [ %76, %69 ], [ %17, %78 ]
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %3, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = xor i8 %85, -128
  %87 = icmp ult i8 %86, 64
  br i1 %87, label %88, label %100

88:                                               ; preds = %80
  %89 = zext i8 %86 to i32
  %90 = shl i32 %81, 6
  %91 = or i32 %90, %89
  %92 = icmp sgt i32 %91, 65535
  br i1 %92, label %93, label %97

93:                                               ; preds = %88
  %94 = lshr i32 %81, 4
  %95 = add nuw nsw i32 %94, 55232
  %96 = and i32 %95, 65535
  br label %97

97:                                               ; preds = %93, %88
  %98 = phi i32 [ %96, %93 ], [ %91, %88 ]
  %99 = icmp sgt i32 %98, 767
  br i1 %99, label %100, label %116

100:                                              ; preds = %25, %69, %57, %44, %16, %80, %60, %41, %97
  %101 = phi i32 [ %98, %97 ], [ 65533, %41 ], [ 65533, %60 ], [ 65533, %80 ], [ 65533, %16 ], [ 65533, %44 ], [ 65533, %57 ], [ 65533, %69 ], [ 65533, %25 ]
  %102 = lshr i32 %101, 5
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9lcccIndexE, i64 0, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %100
  %108 = zext i8 %105 to i64
  %109 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8lcccBitsE, i64 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %101, 31
  %112 = shl i32 1, %111
  %113 = and i32 %110, %112
  %114 = icmp ne i32 %113, 0
  %115 = zext i1 %114 to i8
  br label %116

116:                                              ; preds = %107, %100, %97, %1, %11
  %117 = phi i8 [ 0, %11 ], [ 0, %1 ], [ 0, %100 ], [ 0, %97 ], [ %115, %107 ]
  ret i8 %117
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6924FCDUTF8CollationIterator11nextSegmentER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = load i32, i32* %1, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %291

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 3
  %14 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 4
  br label %15

15:                                               ; preds = %277, %6
  %16 = phi i32 [ %8, %6 ], [ %279, %277 ]
  %17 = phi i32 [ 0, %6 ], [ %278, %277 ]
  %18 = load i8*, i8** %12, align 8
  %19 = add nsw i32 %16, 1
  store i32 %19, i32* %7, align 8
  %20 = sext i32 %16 to i64
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = icmp sgt i8 %22, -1
  br i1 %24, label %102, label %25

25:                                               ; preds = %15
  %26 = load i32, i32* %13, align 4
  %27 = icmp eq i32 %19, %26
  br i1 %27, label %102, label %28

28:                                               ; preds = %25
  %29 = icmp ugt i8 %22, -33
  br i1 %29, label %30, label %85

30:                                               ; preds = %28
  %31 = icmp ult i8 %22, -16
  br i1 %31, label %32, label %48

32:                                               ; preds = %30
  %33 = and i32 %23, 15
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = sext i32 %19 to i64
  %39 = getelementptr inbounds i8, i8* %18, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = lshr i8 %40, 5
  %42 = zext i8 %41 to i32
  %43 = shl i32 1, %42
  %44 = and i32 %43, %37
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %102, label %46

46:                                               ; preds = %32
  %47 = and i8 %40, 63
  br label %76

48:                                               ; preds = %30
  %49 = add nsw i32 %23, -240
  %50 = icmp slt i32 %49, 5
  br i1 %50, label %51, label %102

51:                                               ; preds = %48
  %52 = sext i32 %19 to i64
  %53 = getelementptr inbounds i8, i8* %18, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = lshr i32 %55, 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = shl i32 1, %49
  %62 = and i32 %61, %60
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %102, label %64

64:                                               ; preds = %51
  %65 = add nsw i32 %16, 2
  store i32 %65, i32* %7, align 8
  %66 = icmp eq i32 %65, %26
  br i1 %66, label %102, label %67

67:                                               ; preds = %64
  %68 = shl nsw i32 %49, 6
  %69 = and i32 %55, 63
  %70 = or i32 %69, %68
  %71 = sext i32 %65 to i64
  %72 = getelementptr inbounds i8, i8* %18, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = xor i8 %73, -128
  %75 = icmp ult i8 %74, 64
  br i1 %75, label %76, label %102

76:                                               ; preds = %46, %67
  %77 = phi i32 [ %19, %46 ], [ %65, %67 ]
  %78 = phi i32 [ %33, %46 ], [ %70, %67 ]
  %79 = phi i8 [ %47, %46 ], [ %74, %67 ]
  %80 = shl nsw i32 %78, 6
  %81 = zext i8 %79 to i32
  %82 = or i32 %80, %81
  %83 = add nsw i32 %77, 1
  store i32 %83, i32* %7, align 8
  %84 = icmp eq i32 %83, %26
  br i1 %84, label %102, label %89

85:                                               ; preds = %28
  %86 = icmp ugt i8 %22, -63
  br i1 %86, label %87, label %102

87:                                               ; preds = %85
  %88 = and i32 %23, 31
  br label %89

89:                                               ; preds = %76, %87
  %90 = phi i32 [ %83, %76 ], [ %19, %87 ]
  %91 = phi i32 [ %82, %76 ], [ %88, %87 ]
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds i8, i8* %18, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = xor i8 %94, -128
  %96 = icmp ult i8 %95, 64
  br i1 %96, label %97, label %102

97:                                               ; preds = %89
  %98 = zext i8 %95 to i32
  %99 = shl i32 %91, 6
  %100 = or i32 %99, %98
  %101 = add nsw i32 %90, 1
  store i32 %101, i32* %7, align 8
  br label %102

102:                                              ; preds = %97, %32, %76, %64, %51, %25, %89, %85, %67, %48, %15
  %103 = phi i32 [ %23, %15 ], [ %100, %97 ], [ 65533, %32 ], [ 65533, %76 ], [ 65533, %64 ], [ 65533, %51 ], [ 65533, %25 ], [ 65533, %89 ], [ 65533, %85 ], [ 65533, %67 ], [ 65533, %48 ]
  %104 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %14, align 8
  %105 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %104, i64 0, i32 1
  %106 = load i16, i16* %105, align 8
  %107 = zext i16 %106 to i32
  %108 = icmp slt i32 %103, %107
  br i1 %108, label %128, label %109

109:                                              ; preds = %102
  %110 = icmp slt i32 %103, 65536
  br i1 %110, label %111, label %126

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %104, i64 0, i32 16
  %113 = load i8*, i8** %112, align 8
  %114 = ashr i32 %103, 8
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %113, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %128, label %119

119:                                              ; preds = %111
  %120 = zext i8 %117 to i32
  %121 = lshr i32 %103, 5
  %122 = and i32 %121, 7
  %123 = shl i32 1, %122
  %124 = and i32 %123, %120
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %119, %109
  %127 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %104, i32 %103) #10
  br label %128

128:                                              ; preds = %102, %111, %119, %126
  %129 = phi i16 [ %127, %126 ], [ 0, %102 ], [ 0, %119 ], [ 0, %111 ]
  %130 = lshr i16 %129, 8
  %131 = zext i16 %130 to i32
  %132 = icmp ne i16 %130, 0
  %133 = icmp eq i32 %16, %8
  %134 = or i1 %133, %132
  br i1 %134, label %136, label %135

135:                                              ; preds = %128
  store i32 %16, i32* %7, align 8
  br label %285

136:                                              ; preds = %128
  %137 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* nonnull %3, i32 %103) #10
  %138 = icmp eq i16 %130, 0
  br i1 %138, label %277, label %139

139:                                              ; preds = %136
  %140 = and i32 %17, 255
  %141 = icmp ugt i32 %140, %131
  br i1 %141, label %143, label %142

142:                                              ; preds = %139
  switch i16 %129, label %277 [
    i16 -32380, label %143
    i16 -32382, label %143
  ]

143:                                              ; preds = %142, %142, %139
  %144 = load i32, i32* %7, align 8
  %145 = load i32, i32* %13, align 4
  %146 = icmp eq i32 %144, %145
  br i1 %146, label %266, label %147

147:                                              ; preds = %143, %261
  %148 = phi i32 [ %264, %261 ], [ %145, %143 ]
  %149 = phi i32 [ %263, %261 ], [ %144, %143 ]
  %150 = load i8*, i8** %12, align 8
  %151 = add nsw i32 %149, 1
  store i32 %151, i32* %7, align 8
  %152 = sext i32 %149 to i64
  %153 = getelementptr inbounds i8, i8* %150, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = icmp sgt i8 %154, -1
  br i1 %156, label %233, label %157

157:                                              ; preds = %147
  %158 = icmp eq i32 %151, %148
  br i1 %158, label %233, label %159

159:                                              ; preds = %157
  %160 = icmp ugt i8 %154, -33
  br i1 %160, label %161, label %216

161:                                              ; preds = %159
  %162 = icmp ult i8 %154, -16
  br i1 %162, label %163, label %179

163:                                              ; preds = %161
  %164 = and i32 %155, 15
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = sext i8 %167 to i32
  %169 = sext i32 %151 to i64
  %170 = getelementptr inbounds i8, i8* %150, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = lshr i8 %171, 5
  %173 = zext i8 %172 to i32
  %174 = shl i32 1, %173
  %175 = and i32 %174, %168
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %233, label %177

177:                                              ; preds = %163
  %178 = and i8 %171, 63
  br label %207

179:                                              ; preds = %161
  %180 = add nsw i32 %155, -240
  %181 = icmp slt i32 %180, 5
  br i1 %181, label %182, label %233

182:                                              ; preds = %179
  %183 = sext i32 %151 to i64
  %184 = getelementptr inbounds i8, i8* %150, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = lshr i32 %186, 4
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = sext i8 %190 to i32
  %192 = shl i32 1, %180
  %193 = and i32 %192, %191
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %233, label %195

195:                                              ; preds = %182
  %196 = add nsw i32 %149, 2
  store i32 %196, i32* %7, align 8
  %197 = icmp eq i32 %196, %148
  br i1 %197, label %233, label %198

198:                                              ; preds = %195
  %199 = shl nsw i32 %180, 6
  %200 = and i32 %186, 63
  %201 = or i32 %200, %199
  %202 = sext i32 %196 to i64
  %203 = getelementptr inbounds i8, i8* %150, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = xor i8 %204, -128
  %206 = icmp ult i8 %205, 64
  br i1 %206, label %207, label %233

207:                                              ; preds = %177, %198
  %208 = phi i32 [ %151, %177 ], [ %196, %198 ]
  %209 = phi i32 [ %164, %177 ], [ %201, %198 ]
  %210 = phi i8 [ %178, %177 ], [ %205, %198 ]
  %211 = shl nsw i32 %209, 6
  %212 = zext i8 %210 to i32
  %213 = or i32 %211, %212
  %214 = add nsw i32 %208, 1
  store i32 %214, i32* %7, align 8
  %215 = icmp eq i32 %214, %148
  br i1 %215, label %233, label %220

216:                                              ; preds = %159
  %217 = icmp ugt i8 %154, -63
  br i1 %217, label %218, label %233

218:                                              ; preds = %216
  %219 = and i32 %155, 31
  br label %220

220:                                              ; preds = %207, %218
  %221 = phi i32 [ %214, %207 ], [ %151, %218 ]
  %222 = phi i32 [ %213, %207 ], [ %219, %218 ]
  %223 = sext i32 %221 to i64
  %224 = getelementptr inbounds i8, i8* %150, i64 %223
  %225 = load i8, i8* %224, align 1
  %226 = xor i8 %225, -128
  %227 = icmp ult i8 %226, 64
  br i1 %227, label %228, label %233

228:                                              ; preds = %220
  %229 = zext i8 %226 to i32
  %230 = shl i32 %222, 6
  %231 = or i32 %230, %229
  %232 = add nsw i32 %221, 1
  store i32 %232, i32* %7, align 8
  br label %233

233:                                              ; preds = %228, %163, %207, %195, %182, %157, %220, %216, %198, %179, %147
  %234 = phi i32 [ %155, %147 ], [ %231, %228 ], [ 65533, %163 ], [ 65533, %207 ], [ 65533, %195 ], [ 65533, %182 ], [ 65533, %157 ], [ 65533, %220 ], [ 65533, %216 ], [ 65533, %198 ], [ 65533, %179 ]
  %235 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %14, align 8
  %236 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %235, i64 0, i32 1
  %237 = load i16, i16* %236, align 8
  %238 = zext i16 %237 to i32
  %239 = icmp slt i32 %234, %238
  br i1 %239, label %260, label %240

240:                                              ; preds = %233
  %241 = icmp slt i32 %234, 65536
  br i1 %241, label %242, label %257

242:                                              ; preds = %240
  %243 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %235, i64 0, i32 16
  %244 = load i8*, i8** %243, align 8
  %245 = ashr i32 %234, 8
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* %244, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %260, label %250

250:                                              ; preds = %242
  %251 = zext i8 %248 to i32
  %252 = lshr i32 %234, 5
  %253 = and i32 %252, 7
  %254 = shl i32 1, %253
  %255 = and i32 %254, %251
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %260, label %257

257:                                              ; preds = %240, %250
  %258 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %235, i32 %234) #10
  %259 = icmp ult i16 %258, 256
  br i1 %259, label %260, label %261

260:                                              ; preds = %242, %250, %233, %257
  store i32 %149, i32* %7, align 8
  br label %266

261:                                              ; preds = %257
  %262 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* nonnull %3, i32 %234) #10
  %263 = load i32, i32* %7, align 8
  %264 = load i32, i32* %13, align 4
  %265 = icmp eq i32 %263, %264
  br i1 %265, label %266, label %147

266:                                              ; preds = %261, %143, %260
  %267 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %14, align 8
  %268 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5
  %269 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915Normalizer2Impl9decomposeERKNS_13UnicodeStringERS1_R10UErrorCode(%"class.icu_69::Normalizer2Impl"* %267, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %268, i32* dereferenceable(4) %1) #10
  %270 = load i32, i32* %1, align 4
  %271 = icmp sgt i32 %270, 0
  br i1 %271, label %289, label %272

272:                                              ; preds = %266
  %273 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  store i32 %8, i32* %273, align 4
  %274 = load i32, i32* %7, align 8
  %275 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  store i32 %274, i32* %275, align 8
  %276 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  store i32 3, i32* %276, align 8
  store i32 0, i32* %7, align 8
  br label %289

277:                                              ; preds = %142, %136
  %278 = zext i16 %129 to i32
  %279 = load i32, i32* %7, align 8
  %280 = load i32, i32* %13, align 4
  %281 = icmp eq i32 %279, %280
  %282 = and i16 %129, 255
  %283 = icmp eq i16 %282, 0
  %284 = or i1 %283, %281
  br i1 %284, label %285, label %15

285:                                              ; preds = %277, %135
  %286 = phi i32 [ %16, %135 ], [ %279, %277 ]
  %287 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  store i32 %286, i32* %287, align 8
  store i32 %8, i32* %7, align 8
  %288 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  store i32 2, i32* %288, align 8
  br label %289

289:                                              ; preds = %266, %272, %285
  %290 = phi i8 [ 1, %285 ], [ 0, %266 ], [ 1, %272 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #10
  br label %291

291:                                              ; preds = %2, %289
  %292 = phi i8 [ %290, %289 ], [ 0, %2 ]
  ret i8 %292
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6924FCDUTF8CollationIterator15switchToForwardEv(%"class.icu_69::FCDUTF8CollationIterator"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %12 [
    i32 1, label %4
    i32 2, label %17
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %6, %9
  %11 = select i1 %10, i32 0, i32 2
  br label %17

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  store i32 %14, i32* %16, align 4
  br label %17

17:                                               ; preds = %12, %1, %4
  %18 = phi i32 [ %11, %4 ], [ 0, %1 ], [ 0, %12 ]
  store i32 %18, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6924FCDUTF8CollationIterator15previousHasTcccEv(%"class.icu_69::FCDUTF8CollationIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, -1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = icmp sgt i8 %10, -1
  br i1 %11, label %44, label %12

12:                                               ; preds = %1
  %13 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #10
  store i32 %7, i32* %2, align 4
  %14 = load i8, i8* %9, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp sgt i8 %14, -1
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = call i32 @utf8_prevCharSafeBody_69(i8* %4, i32 0, i32* nonnull %2, i32 %15, i8 signext -3) #10
  %19 = icmp sgt i32 %18, 65535
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = lshr i32 %18, 10
  %22 = add nuw nsw i32 %21, 55232
  %23 = and i32 %22, 65535
  br label %24

24:                                               ; preds = %12, %20, %17
  %25 = phi i32 [ %23, %20 ], [ %18, %17 ], [ %15, %12 ]
  %26 = icmp sgt i32 %25, 191
  br i1 %26, label %27, label %42

27:                                               ; preds = %24
  %28 = lshr i32 %25, 5
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9tcccIndexE, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %27
  %34 = zext i8 %31 to i64
  %35 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8tcccBitsE, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %25, 31
  %38 = shl i32 1, %37
  %39 = and i32 %36, %38
  %40 = icmp ne i32 %39, 0
  %41 = zext i1 %40 to i8
  br label %42

42:                                               ; preds = %24, %27, %33
  %43 = phi i8 [ 0, %27 ], [ 0, %24 ], [ %41, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #10
  br label %44

44:                                               ; preds = %1, %42
  %45 = phi i8 [ %43, %42 ], [ 0, %1 ]
  ret i8 %45
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i16 @_ZN6icu_6924FCDUTF8CollationIterator23handleGetTrailSurrogateEv(%"class.icu_69::FCDUTF8CollationIterator"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %5, label %39

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = icmp slt i16 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = lshr i16 %9, 5
  %13 = zext i16 %12 to i32
  br label %17

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %14, %11
  %18 = phi i32 [ %13, %11 ], [ %16, %14 ]
  %19 = icmp ugt i32 %18, %7
  br i1 %19, label %20, label %39

20:                                               ; preds = %17
  %21 = and i16 %9, 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1
  %25 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %24 to %struct.anon*
  %26 = getelementptr inbounds %struct.anon, %struct.anon* %25, i64 0, i32 1, i64 0
  br label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 3
  %29 = load i16*, i16** %28, align 8
  br label %30

30:                                               ; preds = %23, %27
  %31 = phi i16* [ %26, %23 ], [ %29, %27 ]
  %32 = sext i32 %7 to i64
  %33 = getelementptr inbounds i16, i16* %31, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = and i16 %34, -1024
  %36 = icmp eq i16 %35, -9216
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = add nuw nsw i32 %7, 1
  store i32 %38, i32* %6, align 8
  br label %39

39:                                               ; preds = %17, %30, %37, %1
  %40 = phi i16 [ 0, %1 ], [ %34, %37 ], [ %34, %30 ], [ -1, %17 ]
  ret i16 %40
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6924FCDUTF8CollationIterator18foundNULTerminatorEv(%"class.icu_69::FCDUTF8CollationIterator"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* %10, align 8
  store i32 %12, i32* %6, align 4
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i8 [ 1, %9 ], [ 0, %5 ], [ 0, %1 ]
  ret i8 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6924FCDUTF8CollationIterator13nextCodePointER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %5 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %9 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  br label %11

11:                                               ; preds = %277, %2
  %12 = load i32, i32* %3, align 8
  switch i32 %12, label %273 [
    i32 0, label %13
    i32 2, label %160
    i32 3, label %249
    i32 1, label %268
  ]

13:                                               ; preds = %11
  %14 = load i32, i32* %4, align 8
  %15 = load i32, i32* %9, align 4
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %280, label %17

17:                                               ; preds = %13
  %18 = load i8*, i8** %10, align 8
  %19 = sext i32 %14 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  %23 = icmp slt i32 %15, 0
  %24 = and i1 %23, %22
  br i1 %24, label %280, label %25

25:                                               ; preds = %17
  %26 = icmp sgt i8 %21, -1
  %27 = add nsw i32 %14, 1
  store i32 %27, i32* %4, align 8
  br i1 %26, label %278, label %28

28:                                               ; preds = %25
  %29 = load i8, i8* %20, align 1
  %30 = zext i8 %29 to i32
  %31 = icmp sgt i8 %29, -1
  br i1 %31, label %113, label %32

32:                                               ; preds = %28
  %33 = icmp eq i32 %27, %15
  br i1 %33, label %118, label %34

34:                                               ; preds = %32
  %35 = icmp ugt i8 %29, -33
  br i1 %35, label %36, label %91

36:                                               ; preds = %34
  %37 = icmp ult i8 %29, -16
  br i1 %37, label %38, label %54

38:                                               ; preds = %36
  %39 = and i32 %30, 15
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = sext i32 %27 to i64
  %45 = getelementptr inbounds i8, i8* %18, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = lshr i8 %46, 5
  %48 = zext i8 %47 to i32
  %49 = shl i32 1, %48
  %50 = and i32 %49, %43
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %118, label %52

52:                                               ; preds = %38
  %53 = and i8 %46, 63
  br label %82

54:                                               ; preds = %36
  %55 = add nsw i32 %30, -240
  %56 = icmp slt i32 %55, 5
  br i1 %56, label %57, label %118

57:                                               ; preds = %54
  %58 = sext i32 %27 to i64
  %59 = getelementptr inbounds i8, i8* %18, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = lshr i32 %61, 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = shl i32 1, %55
  %68 = and i32 %67, %66
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %118, label %70

70:                                               ; preds = %57
  %71 = add nsw i32 %14, 2
  store i32 %71, i32* %4, align 8
  %72 = icmp eq i32 %71, %15
  br i1 %72, label %118, label %73

73:                                               ; preds = %70
  %74 = shl nsw i32 %55, 6
  %75 = and i32 %61, 63
  %76 = or i32 %75, %74
  %77 = sext i32 %71 to i64
  %78 = getelementptr inbounds i8, i8* %18, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = xor i8 %79, -128
  %81 = icmp ult i8 %80, 64
  br i1 %81, label %82, label %118

82:                                               ; preds = %52, %73
  %83 = phi i32 [ %27, %52 ], [ %71, %73 ]
  %84 = phi i32 [ %39, %52 ], [ %76, %73 ]
  %85 = phi i8 [ %53, %52 ], [ %80, %73 ]
  %86 = shl nsw i32 %84, 6
  %87 = zext i8 %85 to i32
  %88 = or i32 %86, %87
  %89 = add nsw i32 %83, 1
  store i32 %89, i32* %4, align 8
  %90 = icmp eq i32 %89, %15
  br i1 %90, label %118, label %95

91:                                               ; preds = %34
  %92 = icmp ugt i8 %29, -63
  br i1 %92, label %93, label %118

93:                                               ; preds = %91
  %94 = and i32 %30, 31
  br label %95

95:                                               ; preds = %82, %93
  %96 = phi i32 [ %89, %82 ], [ %27, %93 ]
  %97 = phi i32 [ %88, %82 ], [ %94, %93 ]
  %98 = sext i32 %96 to i64
  %99 = getelementptr inbounds i8, i8* %18, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = xor i8 %100, -128
  %102 = icmp ult i8 %101, 64
  br i1 %102, label %103, label %118

103:                                              ; preds = %95
  %104 = zext i8 %101 to i32
  %105 = shl i32 %97, 6
  %106 = or i32 %105, %104
  %107 = add nsw i32 %96, 1
  store i32 %107, i32* %4, align 8
  %108 = icmp slt i32 %106, 65536
  br i1 %108, label %113, label %109

109:                                              ; preds = %103
  %110 = lshr i32 %97, 4
  %111 = add nuw nsw i32 %110, 55232
  %112 = and i32 %111, 65535
  br label %113

113:                                              ; preds = %28, %103, %109
  %114 = phi i32 [ %107, %109 ], [ %107, %103 ], [ %27, %28 ]
  %115 = phi i32 [ %106, %109 ], [ %106, %103 ], [ %30, %28 ]
  %116 = phi i32 [ %112, %109 ], [ %106, %103 ], [ %30, %28 ]
  %117 = icmp sgt i32 %116, 191
  br i1 %117, label %118, label %280

118:                                              ; preds = %38, %82, %70, %57, %32, %95, %91, %73, %54, %113
  %119 = phi i32 [ %114, %113 ], [ %27, %54 ], [ %71, %73 ], [ %27, %91 ], [ %96, %95 ], [ %15, %32 ], [ %27, %57 ], [ %15, %70 ], [ %15, %82 ], [ %27, %38 ]
  %120 = phi i32 [ %116, %113 ], [ 65533, %54 ], [ 65533, %73 ], [ 65533, %91 ], [ 65533, %95 ], [ 65533, %32 ], [ 65533, %57 ], [ 65533, %70 ], [ 65533, %82 ], [ 65533, %38 ]
  %121 = phi i32 [ %115, %113 ], [ 65533, %54 ], [ 65533, %73 ], [ 65533, %91 ], [ 65533, %95 ], [ 65533, %32 ], [ 65533, %57 ], [ 65533, %70 ], [ 65533, %82 ], [ 65533, %38 ]
  %122 = lshr i32 %120, 5
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9tcccIndexE, i64 0, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %280, label %127

127:                                              ; preds = %118
  %128 = zext i8 %125 to i64
  %129 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8tcccBitsE, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %120, 31
  %132 = shl i32 1, %131
  %133 = and i32 %130, %132
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %280, label %135

135:                                              ; preds = %127
  %136 = and i32 %121, 2096897
  %137 = icmp eq i32 %136, 3841
  br i1 %137, label %143, label %138

138:                                              ; preds = %135
  %139 = icmp eq i32 %119, %15
  br i1 %139, label %280, label %140

140:                                              ; preds = %138
  %141 = tail call signext i8 @_ZNK6icu_6924FCDUTF8CollationIterator11nextHasLcccEv(%"class.icu_69::FCDUTF8CollationIterator"* %0)
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %280, label %143

143:                                              ; preds = %135, %140
  %144 = icmp ult i32 %121, 128
  br i1 %144, label %155, label %145

145:                                              ; preds = %143
  %146 = icmp ult i32 %121, 2048
  br i1 %146, label %155, label %147

147:                                              ; preds = %145
  %148 = icmp ult i32 %121, 55296
  br i1 %148, label %155, label %149

149:                                              ; preds = %147
  %150 = add i32 %121, -57344
  %151 = icmp ugt i32 %150, 1056767
  br i1 %151, label %155, label %152

152:                                              ; preds = %149
  %153 = icmp ult i32 %121, 65536
  %154 = select i1 %153, i32 3, i32 4
  br label %155

155:                                              ; preds = %145, %152, %149, %147, %143
  %156 = phi i32 [ 1, %143 ], [ 2, %145 ], [ 3, %147 ], [ %154, %152 ], [ 0, %149 ]
  %157 = sub nsw i32 %119, %156
  store i32 %157, i32* %4, align 8
  %158 = tail call signext i8 @_ZN6icu_6924FCDUTF8CollationIterator11nextSegmentER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"* %0, i32* dereferenceable(4) %1)
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %280, label %277

160:                                              ; preds = %11
  %161 = load i32, i32* %4, align 8
  %162 = load i32, i32* %6, align 8
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %275, label %164

164:                                              ; preds = %160
  %165 = load i8*, i8** %10, align 8
  %166 = add nsw i32 %161, 1
  store i32 %166, i32* %4, align 8
  %167 = sext i32 %161 to i64
  %168 = getelementptr inbounds i8, i8* %165, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = icmp sgt i8 %169, -1
  br i1 %171, label %280, label %172

172:                                              ; preds = %164
  %173 = load i32, i32* %9, align 4
  %174 = icmp eq i32 %166, %173
  br i1 %174, label %280, label %175

175:                                              ; preds = %172
  %176 = icmp ugt i8 %169, -33
  br i1 %176, label %177, label %232

177:                                              ; preds = %175
  %178 = icmp ult i8 %169, -16
  br i1 %178, label %179, label %195

179:                                              ; preds = %177
  %180 = and i32 %170, 15
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %181
  %183 = load i8, i8* %182, align 1
  %184 = sext i8 %183 to i32
  %185 = sext i32 %166 to i64
  %186 = getelementptr inbounds i8, i8* %165, i64 %185
  %187 = load i8, i8* %186, align 1
  %188 = lshr i8 %187, 5
  %189 = zext i8 %188 to i32
  %190 = shl i32 1, %189
  %191 = and i32 %190, %184
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %280, label %193

193:                                              ; preds = %179
  %194 = and i8 %187, 63
  br label %223

195:                                              ; preds = %177
  %196 = add nsw i32 %170, -240
  %197 = icmp slt i32 %196, 5
  br i1 %197, label %198, label %280

198:                                              ; preds = %195
  %199 = sext i32 %166 to i64
  %200 = getelementptr inbounds i8, i8* %165, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = lshr i32 %202, 4
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = sext i8 %206 to i32
  %208 = shl i32 1, %196
  %209 = and i32 %208, %207
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %280, label %211

211:                                              ; preds = %198
  %212 = add nsw i32 %161, 2
  store i32 %212, i32* %4, align 8
  %213 = icmp eq i32 %212, %173
  br i1 %213, label %280, label %214

214:                                              ; preds = %211
  %215 = shl nsw i32 %196, 6
  %216 = and i32 %202, 63
  %217 = or i32 %216, %215
  %218 = sext i32 %212 to i64
  %219 = getelementptr inbounds i8, i8* %165, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = xor i8 %220, -128
  %222 = icmp ult i8 %221, 64
  br i1 %222, label %223, label %280

223:                                              ; preds = %193, %214
  %224 = phi i32 [ %166, %193 ], [ %212, %214 ]
  %225 = phi i32 [ %180, %193 ], [ %217, %214 ]
  %226 = phi i8 [ %194, %193 ], [ %221, %214 ]
  %227 = shl nsw i32 %225, 6
  %228 = zext i8 %226 to i32
  %229 = or i32 %227, %228
  %230 = add nsw i32 %224, 1
  store i32 %230, i32* %4, align 8
  %231 = icmp eq i32 %230, %173
  br i1 %231, label %280, label %236

232:                                              ; preds = %175
  %233 = icmp ugt i8 %169, -63
  br i1 %233, label %234, label %280

234:                                              ; preds = %232
  %235 = and i32 %170, 31
  br label %236

236:                                              ; preds = %223, %234
  %237 = phi i32 [ %230, %223 ], [ %166, %234 ]
  %238 = phi i32 [ %229, %223 ], [ %235, %234 ]
  %239 = sext i32 %237 to i64
  %240 = getelementptr inbounds i8, i8* %165, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = xor i8 %241, -128
  %243 = icmp ult i8 %242, 64
  br i1 %243, label %244, label %280

244:                                              ; preds = %236
  %245 = zext i8 %242 to i32
  %246 = shl i32 %238, 6
  %247 = or i32 %246, %245
  %248 = add nsw i32 %237, 1
  store i32 %248, i32* %4, align 8
  br label %280

249:                                              ; preds = %11
  %250 = load i32, i32* %4, align 8
  %251 = load i16, i16* %7, align 8
  %252 = icmp slt i16 %251, 0
  br i1 %252, label %256, label %253

253:                                              ; preds = %249
  %254 = lshr i16 %251, 5
  %255 = zext i16 %254 to i32
  br label %258

256:                                              ; preds = %249
  %257 = load i32, i32* %8, align 4
  br label %258

258:                                              ; preds = %253, %256
  %259 = phi i32 [ %255, %253 ], [ %257, %256 ]
  %260 = icmp eq i32 %250, %259
  br i1 %260, label %273, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5
  %263 = tail call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %262, i32 %250) #10
  %264 = icmp ult i32 %263, 65536
  %265 = select i1 %264, i32 1, i32 2
  %266 = load i32, i32* %4, align 8
  %267 = add nsw i32 %265, %266
  store i32 %267, i32* %4, align 8
  br label %280

268:                                              ; preds = %11
  %269 = load i32, i32* %4, align 8
  store i32 %269, i32* %5, align 4
  %270 = load i32, i32* %6, align 8
  %271 = icmp eq i32 %269, %270
  %272 = select i1 %271, i32 0, i32 2
  br label %275

273:                                              ; preds = %11, %258
  %274 = load i32, i32* %6, align 8
  store i32 %274, i32* %4, align 8
  store i32 %274, i32* %5, align 4
  br label %275

275:                                              ; preds = %273, %160, %268
  %276 = phi i32 [ %272, %268 ], [ 0, %160 ], [ 0, %273 ]
  store i32 %276, i32* %3, align 8
  br label %277

277:                                              ; preds = %275, %155
  br label %11

278:                                              ; preds = %25
  %279 = zext i8 %21 to i32
  br label %280

280:                                              ; preds = %17, %13, %155, %140, %138, %127, %118, %113, %278, %164, %195, %214, %232, %236, %172, %198, %211, %223, %179, %244, %261
  %281 = phi i32 [ %263, %261 ], [ %170, %164 ], [ %247, %244 ], [ 65533, %179 ], [ 65533, %223 ], [ 65533, %211 ], [ 65533, %198 ], [ 65533, %172 ], [ 65533, %236 ], [ 65533, %232 ], [ 65533, %214 ], [ 65533, %195 ], [ %279, %278 ], [ -1, %17 ], [ -1, %13 ], [ -1, %155 ], [ %121, %140 ], [ %121, %138 ], [ %121, %127 ], [ %121, %118 ], [ %115, %113 ]
  ret i32 %281
}

declare i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6924FCDUTF8CollationIterator17previousCodePointER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i32* %3 to i8*
  %9 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  br label %10

10:                                               ; preds = %150, %2
  %11 = load i32, i32* %4, align 8
  switch i32 %11, label %126 [
    i32 1, label %12
    i32 2, label %112
  ]

12:                                               ; preds = %10
  %13 = load i32, i32* %5, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %153, label %15

15:                                               ; preds = %12
  %16 = load i8*, i8** %7, align 8
  %17 = add nsw i32 %13, -1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = icmp sgt i8 %20, -1
  br i1 %21, label %22, label %24

22:                                               ; preds = %15
  %23 = zext i8 %20 to i32
  store i32 %17, i32* %5, align 8
  br label %153

24:                                               ; preds = %15
  store i32 %17, i32* %5, align 8
  %25 = load i8, i8* %19, align 1
  %26 = icmp sgt i8 %25, -1
  %27 = zext i8 %25 to i32
  br i1 %26, label %151, label %28

28:                                               ; preds = %24
  %29 = call i32 @utf8_prevCharSafeBody_69(i8* %16, i32 0, i32* %5, i32 %27, i8 signext -3) #10
  %30 = icmp slt i32 %29, 65536
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = lshr i32 %29, 10
  %33 = add nuw nsw i32 %32, 55232
  %34 = and i32 %33, 65535
  br label %35

35:                                               ; preds = %28, %31
  %36 = phi i32 [ %34, %31 ], [ %29, %28 ]
  %37 = icmp sgt i32 %36, 767
  br i1 %37, label %38, label %153

38:                                               ; preds = %35
  %39 = lshr i32 %36, 5
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9lcccIndexE, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %153, label %44

44:                                               ; preds = %38
  %45 = zext i8 %42 to i64
  %46 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8lcccBitsE, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %36, 31
  %49 = shl i32 1, %48
  %50 = and i32 %47, %49
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %153, label %52

52:                                               ; preds = %44
  %53 = and i32 %29, 2096897
  %54 = icmp eq i32 %53, 3841
  br i1 %54, label %94, label %55

55:                                               ; preds = %52
  %56 = load i32, i32* %5, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %153, label %58

58:                                               ; preds = %55
  %59 = load i8*, i8** %7, align 8
  %60 = add nsw i32 %56, -1
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %59, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = icmp sgt i8 %63, -1
  br i1 %64, label %153, label %65

65:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 %60, i32* %3, align 4
  %66 = load i8, i8* %62, align 1
  %67 = zext i8 %66 to i32
  %68 = icmp sgt i8 %66, -1
  br i1 %68, label %76, label %69

69:                                               ; preds = %65
  %70 = call i32 @utf8_prevCharSafeBody_69(i8* %59, i32 0, i32* nonnull %3, i32 %67, i8 signext -3) #10
  %71 = icmp sgt i32 %70, 65535
  br i1 %71, label %72, label %76

72:                                               ; preds = %69
  %73 = lshr i32 %70, 10
  %74 = add nuw nsw i32 %73, 55232
  %75 = and i32 %74, 65535
  br label %76

76:                                               ; preds = %72, %69, %65
  %77 = phi i32 [ %75, %72 ], [ %70, %69 ], [ %67, %65 ]
  %78 = icmp sgt i32 %77, 191
  br i1 %78, label %79, label %85

79:                                               ; preds = %76
  %80 = lshr i32 %77, 5
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9tcccIndexE, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %79, %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  br label %153

86:                                               ; preds = %79
  %87 = zext i8 %83 to i64
  %88 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8tcccBitsE, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %77, 31
  %91 = shl i32 1, %90
  %92 = and i32 %89, %91
  %93 = icmp eq i32 %92, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  br i1 %93, label %153, label %94

94:                                               ; preds = %52, %86
  %95 = icmp ult i32 %29, 128
  br i1 %95, label %106, label %96

96:                                               ; preds = %94
  %97 = icmp ult i32 %29, 2048
  br i1 %97, label %106, label %98

98:                                               ; preds = %96
  %99 = icmp ult i32 %29, 55296
  br i1 %99, label %106, label %100

100:                                              ; preds = %98
  %101 = add i32 %29, -57344
  %102 = icmp ugt i32 %101, 1056767
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = icmp ult i32 %29, 65536
  %105 = select i1 %104, i32 3, i32 4
  br label %106

106:                                              ; preds = %96, %103, %100, %98, %94
  %107 = phi i32 [ 1, %94 ], [ 2, %96 ], [ 3, %98 ], [ %105, %103 ], [ 0, %100 ]
  %108 = load i32, i32* %5, align 8
  %109 = add nsw i32 %108, %107
  store i32 %109, i32* %5, align 8
  %110 = call signext i8 @_ZN6icu_6924FCDUTF8CollationIterator15previousSegmentER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"* %0, i32* dereferenceable(4) %1)
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %153, label %150

112:                                              ; preds = %10
  %113 = load i32, i32* %5, align 8
  %114 = load i32, i32* %6, align 4
  %115 = icmp eq i32 %113, %114
  br i1 %115, label %148, label %116

116:                                              ; preds = %112
  %117 = load i8*, i8** %7, align 8
  %118 = add nsw i32 %113, -1
  store i32 %118, i32* %5, align 8
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %117, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp sgt i8 %121, -1
  br i1 %123, label %153, label %124

124:                                              ; preds = %116
  %125 = call i32 @utf8_prevCharSafeBody_69(i8* %117, i32 0, i32* %5, i32 %122, i8 signext -3) #10
  br label %153

126:                                              ; preds = %10
  %127 = icmp sgt i32 %11, 2
  br i1 %127, label %128, label %139

128:                                              ; preds = %126
  %129 = load i32, i32* %5, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %146, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5
  %133 = add nsw i32 %129, -1
  %134 = call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %132, i32 %133) #10
  %135 = icmp ult i32 %134, 65536
  %136 = select i1 %135, i32 1, i32 2
  %137 = load i32, i32* %5, align 8
  %138 = sub nsw i32 %137, %136
  store i32 %138, i32* %5, align 8
  br label %153

139:                                              ; preds = %126
  %140 = icmp eq i32 %11, 0
  br i1 %140, label %141, label %146

141:                                              ; preds = %139
  %142 = load i32, i32* %5, align 8
  store i32 %142, i32* %9, align 8
  %143 = load i32, i32* %6, align 4
  %144 = icmp eq i32 %142, %143
  %145 = select i1 %144, i32 1, i32 2
  br label %148

146:                                              ; preds = %128, %139
  %147 = load i32, i32* %6, align 4
  store i32 %147, i32* %5, align 8
  store i32 %147, i32* %9, align 8
  br label %148

148:                                              ; preds = %146, %112, %141
  %149 = phi i32 [ %145, %141 ], [ 1, %112 ], [ 1, %146 ]
  store i32 %149, i32* %4, align 8
  br label %150

150:                                              ; preds = %148, %106
  br label %10

151:                                              ; preds = %24
  %152 = zext i8 %25 to i32
  br label %153

153:                                              ; preds = %151, %58, %35, %38, %44, %55, %86, %106, %12, %85, %116, %124, %131, %22
  %154 = phi i32 [ %23, %22 ], [ %134, %131 ], [ %122, %116 ], [ %125, %124 ], [ %29, %85 ], [ %152, %151 ], [ %29, %58 ], [ %29, %35 ], [ %29, %38 ], [ %29, %44 ], [ %29, %55 ], [ %29, %86 ], [ -1, %106 ], [ -1, %12 ]
  ret i32 %154
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6924FCDUTF8CollationIterator15previousSegmentER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = load i32, i32* %1, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %159

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 4
  br label %14

14:                                               ; preds = %146, %6
  %15 = phi i32 [ %8, %6 ], [ %149, %146 ]
  %16 = phi i8 [ 0, %6 ], [ %148, %146 ]
  %17 = load i8*, i8** %12, align 8
  %18 = add nsw i32 %15, -1
  store i32 %18, i32* %7, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = icmp sgt i8 %21, -1
  br i1 %23, label %26, label %24

24:                                               ; preds = %14
  %25 = call i32 @utf8_prevCharSafeBody_69(i8* %17, i32 0, i32* %7, i32 %22, i8 signext -3) #10
  br label %26

26:                                               ; preds = %24, %14
  %27 = phi i32 [ %22, %14 ], [ %25, %24 ]
  %28 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %13, align 8
  %29 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %28, i64 0, i32 1
  %30 = load i16, i16* %29, align 8
  %31 = zext i16 %30 to i32
  %32 = icmp slt i32 %27, %31
  br i1 %32, label %52, label %33

33:                                               ; preds = %26
  %34 = icmp slt i32 %27, 65536
  br i1 %34, label %35, label %50

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %28, i64 0, i32 16
  %37 = load i8*, i8** %36, align 8
  %38 = ashr i32 %27, 8
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %35
  %44 = zext i8 %41 to i32
  %45 = lshr i32 %27, 5
  %46 = and i32 %45, 7
  %47 = shl i32 1, %46
  %48 = and i32 %47, %44
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %43, %33
  %51 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %28, i32 %27) #10
  br label %52

52:                                               ; preds = %26, %35, %43, %50
  %53 = phi i16 [ %51, %50 ], [ 0, %26 ], [ 0, %43 ], [ 0, %35 ]
  %54 = and i16 %53, 255
  %55 = zext i16 %54 to i32
  %56 = icmp ne i16 %54, 0
  %57 = icmp eq i32 %15, %8
  %58 = or i1 %57, %56
  br i1 %58, label %60, label %59

59:                                               ; preds = %52
  store i32 %15, i32* %7, align 8
  br label %153

60:                                               ; preds = %52
  %61 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* nonnull %3, i32 %27) #10
  %62 = icmp eq i16 %54, 0
  br i1 %62, label %146, label %63

63:                                               ; preds = %60
  %64 = icmp ne i8 %16, 0
  %65 = zext i8 %16 to i32
  %66 = icmp ugt i32 %55, %65
  %67 = and i1 %64, %66
  br i1 %67, label %69, label %68

68:                                               ; preds = %63
  switch i16 %53, label %146 [
    i16 -32380, label %71
    i16 -32382, label %71
  ]

69:                                               ; preds = %63
  %70 = icmp ugt i16 %53, 255
  br i1 %70, label %71, label %116

71:                                               ; preds = %68, %68, %69
  br label %72

72:                                               ; preds = %71, %113
  %73 = load i32, i32* %7, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %116, label %75

75:                                               ; preds = %72
  %76 = load i8*, i8** %12, align 8
  %77 = add nsw i32 %73, -1
  store i32 %77, i32* %7, align 8
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = icmp sgt i8 %80, -1
  br i1 %82, label %85, label %83

83:                                               ; preds = %75
  %84 = call i32 @utf8_prevCharSafeBody_69(i8* %76, i32 0, i32* %7, i32 %81, i8 signext -3) #10
  br label %85

85:                                               ; preds = %83, %75
  %86 = phi i32 [ %81, %75 ], [ %84, %83 ]
  %87 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %13, align 8
  %88 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %87, i64 0, i32 1
  %89 = load i16, i16* %88, align 8
  %90 = zext i16 %89 to i32
  %91 = icmp slt i32 %86, %90
  br i1 %91, label %112, label %92

92:                                               ; preds = %85
  %93 = icmp slt i32 %86, 65536
  br i1 %93, label %94, label %109

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %87, i64 0, i32 16
  %96 = load i8*, i8** %95, align 8
  %97 = ashr i32 %86, 8
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %96, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %112, label %102

102:                                              ; preds = %94
  %103 = zext i8 %100 to i32
  %104 = lshr i32 %86, 5
  %105 = and i32 %104, 7
  %106 = shl i32 1, %105
  %107 = and i32 %106, %103
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %92, %102
  %110 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %87, i32 %86) #10
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %94, %102, %85, %109
  store i32 %73, i32* %7, align 8
  br label %116

113:                                              ; preds = %109
  %114 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* nonnull %3, i32 %86) #10
  %115 = icmp ugt i16 %110, 255
  br i1 %115, label %72, label %116

116:                                              ; preds = %113, %72, %69, %112
  %117 = load i16, i16* %11, align 8
  %118 = icmp slt i16 %117, 0
  %119 = lshr i16 %117, 5
  %120 = zext i16 %119 to i32
  %121 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = select i1 %118, i32 %122, i32 %120
  %124 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReverseEii(%"class.icu_69::UnicodeString"* nonnull %3, i32 0, i32 %123) #10
  %125 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %13, align 8
  %126 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5
  %127 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915Normalizer2Impl9decomposeERKNS_13UnicodeStringERS1_R10UErrorCode(%"class.icu_69::Normalizer2Impl"* %125, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %126, i32* dereferenceable(4) %1) #10
  %128 = load i32, i32* %1, align 4
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %157, label %130

130:                                              ; preds = %116
  %131 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  store i32 %8, i32* %131, align 8
  %132 = load i32, i32* %7, align 8
  %133 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  store i32 %132, i32* %133, align 4
  %134 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  store i32 3, i32* %134, align 8
  %135 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %136 = load i16, i16* %135, align 8
  %137 = icmp slt i16 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %130
  %139 = lshr i16 %136, 5
  %140 = zext i16 %139 to i32
  br label %144

141:                                              ; preds = %130
  %142 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  br label %144

144:                                              ; preds = %138, %141
  %145 = phi i32 [ %140, %138 ], [ %143, %141 ]
  store i32 %145, i32* %7, align 8
  br label %157

146:                                              ; preds = %68, %60
  %147 = lshr i16 %53, 8
  %148 = trunc i16 %147 to i8
  %149 = load i32, i32* %7, align 8
  %150 = icmp eq i32 %149, 0
  %151 = icmp eq i16 %147, 0
  %152 = or i1 %151, %150
  br i1 %152, label %153, label %14

153:                                              ; preds = %146, %59
  %154 = phi i32 [ %15, %59 ], [ %149, %146 ]
  %155 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  store i32 %154, i32* %155, align 4
  store i32 %8, i32* %7, align 8
  %156 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  store i32 2, i32* %156, align 8
  br label %157

157:                                              ; preds = %116, %144, %153
  %158 = phi i8 [ 1, %153 ], [ 0, %116 ], [ 1, %144 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #10
  br label %159

159:                                              ; preds = %2, %157
  %160 = phi i8 [ %158, %157 ], [ 0, %2 ]
  ret i8 %160
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6924FCDUTF8CollationIterator16switchToBackwardEv(%"class.icu_69::FCDUTF8CollationIterator"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %12 [
    i32 0, label %4
    i32 2, label %17
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %6, %9
  %11 = select i1 %10, i32 1, i32 2
  br label %17

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 0, i32 2
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 3
  store i32 %14, i32* %16, align 8
  br label %17

17:                                               ; preds = %12, %1, %4
  %18 = phi i32 [ %11, %4 ], [ 1, %1 ], [ 1, %12 ]
  store i32 %18, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6924FCDUTF8CollationIterator20forwardNumCodePointsEiR10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"*, i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %3 ]
  %7 = tail call i32 @_ZN6icu_6924FCDUTF8CollationIterator13nextCodePointER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"* %0, i32* dereferenceable(4) %2)
  %8 = icmp sgt i32 %7, -1
  %9 = add nsw i32 %6, -1
  %10 = icmp sgt i32 %9, 0
  %11 = and i1 %8, %10
  br i1 %11, label %5, label %12

12:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6924FCDUTF8CollationIterator21backwardNumCodePointsEiR10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"*, i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %3 ]
  %7 = tail call i32 @_ZN6icu_6924FCDUTF8CollationIterator17previousCodePointER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"* %0, i32* dereferenceable(4) %2)
  %8 = icmp sgt i32 %7, -1
  %9 = add nsw i32 %6, -1
  %10 = icmp sgt i32 %9, 0
  %11 = and i1 %8, %10
  br i1 %11, label %5, label %12

12:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6924FCDUTF8CollationIterator9normalizeERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::FCDUTF8CollationIterator"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 4
  %5 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::FCDUTF8CollationIterator", %"class.icu_69::FCDUTF8CollationIterator"* %0, i64 0, i32 5
  %7 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915Normalizer2Impl9decomposeERKNS_13UnicodeStringERS1_R10UErrorCode(%"class.icu_69::Normalizer2Impl"* %5, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %6, i32* dereferenceable(4) %2) #10
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 1
  %10 = zext i1 %9 to i8
  ret i8 %10
}

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915Normalizer2Impl9decomposeERKNS_13UnicodeStringERS1_R10UErrorCode(%"class.icu_69::Normalizer2Impl"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #4

declare i8* @_ZNK6icu_697UObject17getDynamicClassIDEv(%"class.icu_69::UObject"*) unnamed_addr #4

declare signext i8 @_ZNK6icu_6917CollationIteratoreqERKS0_(%"class.icu_69::CollationIterator"*, %"class.icu_69::CollationIterator"* dereferenceable(392)) unnamed_addr #4

declare zeroext i16 @_ZN6icu_6917CollationIterator23handleGetTrailSurrogateEv(%"class.icu_69::CollationIterator"*) unnamed_addr #4

declare i32 @_ZNK6icu_6917CollationIterator11getDataCE32Ei(%"class.icu_69::CollationIterator"*, i32) unnamed_addr #4

declare i32 @_ZN6icu_6917CollationIterator22getCE32FromBuilderDataEjR10UErrorCode(%"class.icu_69::CollationIterator"*, i32, i32* dereferenceable(4)) unnamed_addr #4

declare zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"*, i32) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReverseEii(%"class.icu_69::UnicodeString"*, i32, i32) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind allocsize(0) }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
