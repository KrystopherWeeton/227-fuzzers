; ModuleID = '../../third_party/blink/renderer/core/layout/svg/svg_text_query.cc'
source_filename = "../../third_party/blink/renderer/core/layout/svg/svg_text_query.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LineLayoutSVGInlineText" = type { %"class.blink::LineLayoutText" }
%"class.blink::LineLayoutText" = type { %"class.blink::LineLayoutItem" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1665 }
%class.scoped_refptr.1665 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1666", %"class.WTF::Vector.630", %"class.WTF::Vector.1668", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1666" = type { %"class.base::RefCounted.1667" }
%"class.base::RefCounted.1667" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1668" = type { %"class.WTF::VectorBuffer.1669" }
%"class.WTF::VectorBuffer.1669" = type { %"class.WTF::VectorBufferBase.1670" }
%"class.WTF::VectorBufferBase.1670" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1671 }
%union.anon.1671 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1651" }
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1653" }
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1679 }
%class.scoped_refptr.1679 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1689" }
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1685" }
%"class.blink::MemberBase.1685" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1687" }
%"class.blink::MemberBase.1687" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1680", %"class.WTF::Vector.1680" }
%"class.WTF::Vector.1680" = type { %"class.WTF::VectorBuffer.1681" }
%"class.WTF::VectorBuffer.1681" = type { %"class.WTF::VectorBufferBase.1682" }
%"class.WTF::VectorBufferBase.1682" = type { %class.scoped_refptr.1679*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1655" }
%"class.WTF::Vector.1655" = type { %"class.WTF::VectorBuffer.1656" }
%"class.WTF::VectorBuffer.1656" = type { %"class.WTF::VectorBufferBase.1657" }
%"class.WTF::VectorBufferBase.1657" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1660", %"class.absl::optional.1660", %"class.absl::optional.1660" }
%"class.absl::optional.1660" = type { %"class.absl::optional_internal::optional_data.1661" }
%"class.absl::optional_internal::optional_data.1661" = type { %"class.absl::optional_internal::optional_data_base.1662" }
%"class.absl::optional_internal::optional_data_base.1662" = type { %"class.absl::optional_internal::optional_data_dtor_base.1663" }
%"class.absl::optional_internal::optional_data_dtor_base.1663" = type { i8, %union.anon.1664 }
%union.anon.1664 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1675" }
%"class.WTF::VectorBuffer.1675" = type { %"class.WTF::VectorBufferBase.1676", [32 x i8] }
%"class.WTF::VectorBufferBase.1676" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::SVGInlineTextBox" = type { %"class.blink::InlineTextBox", %"class.blink::LayoutUnit", i8, %"class.WTF::Vector.1623" }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.WTF::Vector.1623" = type { %"class.WTF::VectorBuffer.1624" }
%"class.WTF::VectorBuffer.1624" = type { %"class.WTF::VectorBufferBase.1625" }
%"class.WTF::VectorBufferBase.1625" = type { %"struct.blink::SVGTextFragment"*, i32, i32 }
%"struct.blink::SVGTextFragment" = type { i32, i32, i32, float, float, float, float, %"struct.blink::GlyphOverflow", %"class.blink::AffineTransform", float, float }
%"struct.blink::GlyphOverflow" = type { float, float, float, float }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::SVGTextQuery" = type { %"class.blink::LayoutObject"* }
%"struct.blink::QueryData" = type { i8, i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }
%"class.WTF::Vector.1691" = type { %"class.WTF::VectorBuffer.1692" }
%"class.WTF::VectorBuffer.1692" = type { %"class.WTF::VectorBufferBase.1693" }
%"class.WTF::VectorBufferBase.1693" = type { %"class.blink::SVGInlineTextBox"**, i32, i32 }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"struct.blink::TextLengthData" = type <{ %"struct.blink::QueryData", float, [4 x i8] }>
%"class.blink::SVGTextMetrics" = type { float, float, i32 }
%"class.WTF::Vector.1628" = type { %"class.WTF::VectorBuffer.1629" }
%"class.WTF::VectorBuffer.1629" = type { %"class.WTF::VectorBufferBase.1630" }
%"class.WTF::VectorBufferBase.1630" = type { %"class.blink::SVGTextMetrics"*, i32, i32 }
%"struct.blink::SubStringLengthData" = type <{ %"struct.blink::QueryData", i32, i32, float, [4 x i8] }>
%"class.blink::LayoutSVGInlineText" = type { %"class.blink::LayoutText", float, %"class.blink::Font", %"class.WTF::HashMap.1697", %"class.WTF::Vector.1628" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1696 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1696 = type { %"class.blink::InlineTextBoxList" }
%"class.WTF::HashMap.1697" = type { %"class.WTF::HashTable.1698" }
%"class.WTF::HashTable.1698" = type <{ %"struct.WTF::KeyValuePair.1701"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1701" = type opaque
%"struct.blink::StartPositionOfCharacterData" = type <{ %"struct.blink::QueryData", i32, %"class.blink::FloatPoint", [4 x i8] }>
%"struct.blink::EndPositionOfCharacterData" = type <{ %"struct.blink::QueryData", i32, %"class.blink::FloatPoint", [4 x i8] }>
%"struct.blink::RotationOfCharacterData" = type { %"struct.blink::QueryData", i32, float }
%"struct.blink::ExtentOfCharacterData" = type <{ %"struct.blink::QueryData", i32, %"class.blink::FloatRect", [4 x i8] }>
%"struct.blink::CharacterNumberAtPositionData" = type <{ %"struct.blink::QueryData", %"class.blink::FloatPoint", %"class.blink::LineLayoutItem", i32, [4 x i8] }>
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList.1751" }
%"class.blink::InlineBoxList.1751" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink13InlineTextBox14CompareByStartEPKS0_S2_ = comdat any

$_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink16SVGInlineTextBoxEEEmm = comdat any

$_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEvT0_SB_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_SB_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEvT0_SB_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEbT0_SB_T_ = comdat any

$_ZNK5blink15SVGTextFragment27BuildTransformForTextOnPathEv = comdat any

$_ZNK5blink15SVGTextFragment27BuildTransformForTextOnLineEv = comdat any

$_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@__const._ZNK5blink12SVGTextQuery10TextLengthEv.data = private unnamed_addr constant <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, float, [4 x i8] }> <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.blink::LineLayoutSVGInlineText" { %"class.blink::LineLayoutText" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } } }, %"class.blink::SVGInlineTextBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGInlineTextBox"*) }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK5blink12SVGTextQuery15SubStringLengthEjj.data = private unnamed_addr constant <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, i32, float, [4 x i8] }> <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.blink::LineLayoutSVGInlineText" { %"class.blink::LineLayoutText" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } } }, %"class.blink::SVGInlineTextBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGInlineTextBox"*) }, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK5blink12SVGTextQuery22EndPositionOfCharacterEj.data = private unnamed_addr constant <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, %"class.blink::FloatPoint", [4 x i8] }> <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.blink::LineLayoutSVGInlineText" { %"class.blink::LineLayoutText" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } } }, %"class.blink::SVGInlineTextBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGInlineTextBox"*) }, i32 -1431655766, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK5blink12SVGTextQuery19RotationOfCharacterEj.data = private unnamed_addr constant { { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, float } { { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.blink::LineLayoutSVGInlineText" { %"class.blink::LineLayoutText" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } } }, %"class.blink::SVGInlineTextBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGInlineTextBox"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000 }, align 8
@__const._ZNK5blink12SVGTextQuery17ExtentOfCharacterEj.data = private unnamed_addr constant <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, %"class.blink::FloatRect", [4 x i8] }> <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.blink::LineLayoutSVGInlineText" { %"class.blink::LineLayoutText" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } } }, %"class.blink::SVGInlineTextBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGInlineTextBox"*) }, i32 -1431655766, %"class.blink::FloatRect" { %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatSize" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK5blink12SVGTextQuery25CharacterNumberAtPositionERKNS_10FloatPointE.data = private unnamed_addr constant <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, %"class.blink::FloatPoint", %"class.blink::LineLayoutItem", i32, [4 x i8] }> <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.blink::LineLayoutSVGInlineText" { %"class.blink::LineLayoutText" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } } }, %"class.blink::SVGInlineTextBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGInlineTextBox"*) }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink16SVGInlineTextBoxEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGInlineTextBox *]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12SVGTextQuery18NumberOfCharactersEv(%"class.blink::SVGTextQuery"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::QueryData", align 8
  %3 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 24, i1 false)
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %2, i64 0, i32 1
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 20, i1 false) #11
  %6 = getelementptr inbounds %"class.blink::SVGTextQuery", %"class.blink::SVGTextQuery"* %0, i64 0, i32 0
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  call fastcc void @_ZN5blinkL12LogicalQueryEPNS_12LayoutObjectEPNS_9QueryDataEPFbS3_RKNS_15SVGTextFragmentEE(%"class.blink::LayoutObject"* %7, %"struct.blink::QueryData"* nonnull %2, i1 (%"struct.blink::QueryData"*, %"struct.blink::SVGTextFragment"*)* nonnull @_ZN5blinkL26NumberOfCharactersCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE)
  %8 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret i32 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL12LogicalQueryEPNS_12LayoutObjectEPNS_9QueryDataEPFbS3_RKNS_15SVGTextFragmentEE(%"class.blink::LayoutObject"*, %"struct.blink::QueryData"*, i1 (%"struct.blink::QueryData"*, %"struct.blink::SVGTextFragment"*)* nocapture) unnamed_addr #0 {
  %4 = alloca i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, align 8
  %5 = alloca %"class.blink::SVGInlineTextBox"*, align 8
  %6 = alloca %"class.WTF::Vector.1691", align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %0, null
  br i1 %7, label %132, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.WTF::Vector.1691"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %6, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %6, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #11
  %13 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %14 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %14, i64 13
  %16 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %15, align 8
  %17 = tail call %"class.blink::LayoutObjectChildList"* %16(%"class.blink::LayoutObject"* nonnull %0) #11
  %18 = icmp eq %"class.blink::LayoutObjectChildList"* %17, null
  br i1 %18, label %122, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %17, i64 0, i32 0
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = icmp eq %"class.blink::LayoutObject"* %21, null
  br i1 %22, label %122, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::SVGInlineTextBox"** %5 to i8*
  %25 = bitcast %"class.blink::SVGInlineTextBox"** %5 to %"class.blink::InlineTextBox"**
  %26 = bitcast i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4 to i8*
  %27 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %1, i64 0, i32 3
  %28 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %1, i64 0, i32 2
  %29 = bitcast %"class.blink::LineLayoutSVGInlineText"* %28 to i64*
  %30 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %1, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %1, i64 0, i32 1
  br label %32

32:                                               ; preds = %23, %119
  %33 = phi %"class.blink::LayoutObject"* [ %21, %23 ], [ %120, %119 ]
  %34 = bitcast %"class.blink::LayoutObject"* %33 to i1 (%"class.blink::LayoutObject"*, i32)***
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, i64 92
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, align 8
  %38 = call zeroext i1 %37(%"class.blink::LayoutObject"* nonnull %33, i32 65) #11
  br i1 %38, label %39, label %119

39:                                               ; preds = %32
  store i32 0, i32* %12, align 4
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = and i96 %42, 268435456
  %44 = icmp eq i96 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #11
  br label %50

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 1, i32 6
  %49 = bitcast %"class.blink::UntracedMember"* %48 to %"class.blink::InlineTextBoxList"*
  br label %50

50:                                               ; preds = %47, %45
  %51 = phi %"class.blink::InlineTextBoxList"* [ %46, %45 ], [ %49, %47 ]
  %52 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %52, align 8
  %54 = icmp eq %"class.blink::InlineTextBox"* %53, null
  br i1 %54, label %73, label %55

55:                                               ; preds = %50, %69
  %56 = phi %"class.blink::InlineTextBox"* [ %71, %69 ], [ %53, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store %"class.blink::InlineTextBox"* %56, %"class.blink::InlineTextBox"** %25, align 8
  %57 = load i32, i32* %12, align 4
  %58 = load i32, i32* %11, align 8
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %68, label %60, !prof !2

60:                                               ; preds = %55
  %61 = ptrtoint %"class.blink::InlineTextBox"* %56 to i64
  %62 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %10, align 8
  %63 = zext i32 %57 to i64
  %64 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %62, i64 %63
  %65 = bitcast %"class.blink::SVGInlineTextBox"** %64 to i64*
  store i64 %61, i64* %65, align 8
  %66 = load i32, i32* %12, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %12, align 4
  br label %69

68:                                               ; preds = %55
  call void @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1691"* nonnull %6, %"class.blink::SVGInlineTextBox"** nonnull dereferenceable(8) %5) #11
  br label %69

69:                                               ; preds = %68, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %70 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %56, i64 0, i32 2
  %71 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %70, align 8
  %72 = icmp eq %"class.blink::InlineTextBox"* %71, null
  br i1 %72, label %73, label %55

73:                                               ; preds = %69, %50
  %74 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %10, align 8
  %75 = load i32, i32* %12, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %74, i64 %76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  store i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBox14CompareByStartEPKS0_S2_, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEvT0_SB_T_(%"class.blink::SVGInlineTextBox"** %74, %"class.blink::SVGInlineTextBox"** %77, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %78 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %10, align 8
  %79 = load i32, i32* %12, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %78, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %119, label %83

83:                                               ; preds = %73, %111
  %84 = phi %"class.blink::SVGInlineTextBox"** [ %117, %111 ], [ %78, %73 ]
  %85 = load %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %84, align 8
  store %"class.blink::SVGInlineTextBox"* %85, %"class.blink::SVGInlineTextBox"** %27, align 8
  %86 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %85, i64 0, i32 0, i32 0, i32 4, i32 0
  %87 = bitcast %"class.blink::LayoutObject"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %29, align 8
  %89 = inttoptr i64 %88 to %"class.blink::LayoutObject"*
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %89, i64 0, i32 5, i32 0
  %91 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %91, i64 0, i32 0, i32 9
  %93 = bitcast [20 x i8]* %92 to i160*
  %94 = load i160, i160* %93, align 8
  %95 = and i160 %94, 15211807202738752817960438464512
  %96 = icmp ne i160 %95, 0
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %30, align 8
  %98 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"struct.blink::SVGTextFragment"*, %"struct.blink::SVGTextFragment"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %85, i64 0, i32 3, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %99, i64 %102
  %104 = icmp eq i32 %101, 0
  br i1 %104, label %111, label %107

105:                                              ; preds = %107
  %106 = icmp eq %"struct.blink::SVGTextFragment"* %110, %103
  br i1 %106, label %111, label %107

107:                                              ; preds = %83, %105
  %108 = phi %"struct.blink::SVGTextFragment"* [ %110, %105 ], [ %99, %83 ]
  %109 = call zeroext i1 %2(%"struct.blink::QueryData"* %1, %"struct.blink::SVGTextFragment"* dereferenceable(104) %108) #11
  %110 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %108, i64 1
  br i1 %109, label %122, label %105

111:                                              ; preds = %105, %83
  %112 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %85, i64 0, i32 0, i32 4
  %113 = load i16, i16* %112, align 4
  %114 = zext i16 %113 to i32
  %115 = load i32, i32* %31, align 4
  %116 = add i32 %115, %114
  store i32 %116, i32* %31, align 4
  %117 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %84, i64 1
  %118 = icmp eq %"class.blink::SVGInlineTextBox"** %117, %81
  br i1 %118, label %119, label %83

119:                                              ; preds = %111, %73, %32
  %120 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %33, %"class.blink::LayoutObject"* nonnull %0) #11
  %121 = icmp eq %"class.blink::LayoutObject"* %120, null
  br i1 %121, label %122, label %32

122:                                              ; preds = %119, %107, %8, %19
  %123 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %10, align 8
  %124 = icmp eq %"class.blink::SVGInlineTextBox"** %123, null
  %125 = bitcast %"class.blink::SVGInlineTextBox"** %123 to i8*
  br i1 %124, label %131, label %126, !prof !3

126:                                              ; preds = %122
  %127 = load i32, i32* %12, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %130, label %129, !prof !2

129:                                              ; preds = %126
  store i32 0, i32* %12, align 4
  br label %130

130:                                              ; preds = %129, %126
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %125) #11
  store %"class.blink::SVGInlineTextBox"** null, %"class.blink::SVGInlineTextBox"*** %10, align 8
  br label %131

131:                                              ; preds = %122, %130
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  br label %132

132:                                              ; preds = %3, %131
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blinkL26NumberOfCharactersCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE(%"struct.blink::QueryData"* nocapture readnone, %"struct.blink::SVGTextFragment"* nocapture readnone dereferenceable(104)) #2 {
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink12SVGTextQuery10TextLengthEv(%"class.blink::SVGTextQuery"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::TextLengthData", align 8
  %3 = getelementptr inbounds %"struct.blink::TextLengthData", %"struct.blink::TextLengthData"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 getelementptr inbounds (<{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, float, [4 x i8] }>, <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, float, [4 x i8] }>* @__const._ZNK5blink12SVGTextQuery10TextLengthEv.data, i64 0, i32 0, i32 0), i64 32, i1 false)
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.blink::TextLengthData", %"struct.blink::TextLengthData"* %2, i64 0, i32 0, i32 1
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"class.blink::SVGTextQuery", %"class.blink::SVGTextQuery"* %0, i64 0, i32 0
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::TextLengthData", %"struct.blink::TextLengthData"* %2, i64 0, i32 0
  call fastcc void @_ZN5blinkL12LogicalQueryEPNS_12LayoutObjectEPNS_9QueryDataEPFbS3_RKNS_15SVGTextFragmentEE(%"class.blink::LayoutObject"* %7, %"struct.blink::QueryData"* nonnull %8, i1 (%"struct.blink::QueryData"*, %"struct.blink::SVGTextFragment"*)* nonnull @_ZN5blinkL18TextLengthCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE)
  %9 = getelementptr inbounds %"struct.blink::TextLengthData", %"struct.blink::TextLengthData"* %2, i64 0, i32 1
  %10 = load float, float* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #11
  ret float %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL18TextLengthCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE(%"struct.blink::QueryData"* nocapture, %"struct.blink::SVGTextFragment"* nocapture readonly dereferenceable(104)) #3 {
  %3 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !4
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 6
  %7 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 5
  %8 = load float, float* %7, align 4
  %9 = load float, float* %6, align 4
  %10 = select i1 %5, float %8, float %9
  %11 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1
  %12 = bitcast %"struct.blink::QueryData"* %11 to float*
  %13 = load float, float* %12, align 8
  %14 = fadd float %13, %10
  store float %14, float* %12, align 8
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::SVGTextMetrics"* @_ZN5blink23FindMetricsForCharacterERKN3WTF6VectorINS_14SVGTextMetricsELj0ENS0_18PartitionAllocatorEEERKNS_15SVGTextFragmentEj(%"class.WTF::Vector.1628"* nocapture readonly dereferenceable(16), %"struct.blink::SVGTextFragment"* nocapture readonly dereferenceable(104), i32) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %"class.WTF::Vector.1628", %"class.WTF::Vector.1628"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %5, i64 %8
  %10 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1073741823
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %3, %21
  %15 = phi i32 [ %19, %21 ], [ 0, %3 ]
  %16 = phi %"class.blink::SVGTextMetrics"* [ %22, %21 ], [ %9, %3 ]
  %17 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, %15
  %20 = icmp ugt i32 %19, %2
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %16, i64 1
  %23 = icmp ult i32 %19, %12
  br i1 %23, label %14, label %24

24:                                               ; preds = %21, %14, %3
  %25 = phi %"class.blink::SVGTextMetrics"* [ %9, %3 ], [ %16, %14 ], [ %22, %21 ]
  ret %"class.blink::SVGTextMetrics"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink12SVGTextQuery15SubStringLengthEjj(%"class.blink::SVGTextQuery"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SubStringLengthData", align 8
  %5 = getelementptr inbounds %"struct.blink::SubStringLengthData", %"struct.blink::SubStringLengthData"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 getelementptr inbounds (<{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, i32, float, [4 x i8] }>, <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, i32, float, [4 x i8] }>* @__const._ZNK5blink12SVGTextQuery15SubStringLengthEjj.data, i64 0, i32 0, i32 0), i64 40, i1 false)
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::SubStringLengthData", %"struct.blink::SubStringLengthData"* %4, i64 0, i32 0, i32 1
  %7 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 20, i1 false) #11
  %8 = getelementptr inbounds %"struct.blink::SubStringLengthData", %"struct.blink::SubStringLengthData"* %4, i64 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::SubStringLengthData", %"struct.blink::SubStringLengthData"* %4, i64 0, i32 2
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.blink::SubStringLengthData", %"struct.blink::SubStringLengthData"* %4, i64 0, i32 3
  store float 0.000000e+00, float* %10, align 8
  %11 = getelementptr inbounds %"class.blink::SVGTextQuery", %"class.blink::SVGTextQuery"* %0, i64 0, i32 0
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::SubStringLengthData", %"struct.blink::SubStringLengthData"* %4, i64 0, i32 0
  call fastcc void @_ZN5blinkL12LogicalQueryEPNS_12LayoutObjectEPNS_9QueryDataEPFbS3_RKNS_15SVGTextFragmentEE(%"class.blink::LayoutObject"* %12, %"struct.blink::QueryData"* nonnull %13, i1 (%"struct.blink::QueryData"*, %"struct.blink::SVGTextFragment"*)* nonnull @_ZN5blinkL23SubStringLengthCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE)
  %14 = load float, float* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret float %14
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL23SubStringLengthCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE(%"struct.blink::QueryData"* nocapture, %"struct.blink::SVGTextFragment"* dereferenceable(104)) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1
  %7 = bitcast %"struct.blink::QueryData"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, %8
  %13 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sub i32 %8, %14
  store i32 %15, i32* %3, align 4
  %16 = sub i32 %12, %14
  store i32 %16, i32* %4, align 4
  %17 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 3
  %18 = load %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %17, align 8
  %19 = call zeroext i1 @_ZNK5blink16SVGInlineTextBox43MapStartEndPositionsIntoFragmentCoordinatesERKNS_15SVGTextFragmentERiS4_(%"class.blink::SVGInlineTextBox"* %18, %"struct.blink::SVGTextFragment"* dereferenceable(104) %1, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4) #11
  br i1 %19, label %20, label %81

20:                                               ; preds = %2
  %21 = load i32, i32* %3, align 4
  %22 = load i32, i32* %4, align 4
  %23 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 2
  %24 = bitcast %"class.blink::LineLayoutSVGInlineText"* %23 to %"class.blink::LayoutSVGInlineText"**
  %25 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %26, align 8
  %28 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %27, i64 %30
  %32 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 1073741823
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %75, label %36

36:                                               ; preds = %20, %43
  %37 = phi i32 [ %41, %43 ], [ 0, %20 ]
  %38 = phi %"class.blink::SVGTextMetrics"* [ %44, %43 ], [ %31, %20 ]
  %39 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, %37
  %42 = icmp ugt i32 %41, %21
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %38, i64 1
  %45 = icmp ult i32 %41, %34
  br i1 %45, label %36, label %46

46:                                               ; preds = %43, %36
  %47 = phi %"class.blink::SVGTextMetrics"* [ %38, %36 ], [ %44, %43 ]
  br label %48

48:                                               ; preds = %55, %46
  %49 = phi i32 [ %53, %55 ], [ 0, %46 ]
  %50 = phi %"class.blink::SVGTextMetrics"* [ %56, %55 ], [ %31, %46 ]
  %51 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %50, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %52, %49
  %54 = icmp ugt i32 %53, %22
  br i1 %54, label %58, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %50, i64 1
  %57 = icmp ult i32 %53, %34
  br i1 %57, label %48, label %58

58:                                               ; preds = %55, %48
  %59 = phi %"class.blink::SVGTextMetrics"* [ %50, %48 ], [ %56, %55 ]
  %60 = icmp eq %"class.blink::SVGTextMetrics"* %47, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !4
  %64 = icmp eq i8 %63, 0
  br label %65

65:                                               ; preds = %65, %61
  %66 = phi float [ 0.000000e+00, %61 ], [ %72, %65 ]
  %67 = phi %"class.blink::SVGTextMetrics"* [ %47, %61 ], [ %73, %65 ]
  %68 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %67, i64 0, i32 1
  %69 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %67, i64 0, i32 0
  %70 = select i1 %64, float* %69, float* %68
  %71 = load float, float* %70, align 4
  %72 = fadd float %66, %71
  %73 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %67, i64 1
  %74 = icmp eq %"class.blink::SVGTextMetrics"* %73, %59
  br i1 %74, label %75, label %65

75:                                               ; preds = %65, %20, %58
  %76 = phi float [ 0.000000e+00, %58 ], [ 0.000000e+00, %20 ], [ %72, %65 ]
  %77 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1, i32 2
  %78 = bitcast %"class.blink::LineLayoutSVGInlineText"* %77 to float*
  %79 = load float, float* %78, align 8
  %80 = fadd float %76, %79
  store float %80, float* %78, align 8
  br label %81

81:                                               ; preds = %2, %75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink12SVGTextQuery24StartPositionOfCharacterEj(%"class.blink::SVGTextQuery"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = alloca %"struct.blink::StartPositionOfCharacterData", align 8
  %4 = getelementptr inbounds %"struct.blink::StartPositionOfCharacterData", %"struct.blink::StartPositionOfCharacterData"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 getelementptr inbounds (<{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, %"class.blink::FloatPoint", [4 x i8] }>, <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, %"class.blink::FloatPoint", [4 x i8] }>* @__const._ZNK5blink12SVGTextQuery22EndPositionOfCharacterEj.data, i64 0, i32 0, i32 0), i64 40, i1 false)
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.blink::StartPositionOfCharacterData", %"struct.blink::StartPositionOfCharacterData"* %3, i64 0, i32 0, i32 1
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false) #11
  %7 = getelementptr inbounds %"struct.blink::StartPositionOfCharacterData", %"struct.blink::StartPositionOfCharacterData"* %3, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::StartPositionOfCharacterData", %"struct.blink::StartPositionOfCharacterData"* %3, i64 0, i32 2, i32 0
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::StartPositionOfCharacterData", %"struct.blink::StartPositionOfCharacterData"* %3, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::SVGTextQuery", %"class.blink::SVGTextQuery"* %0, i64 0, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::StartPositionOfCharacterData", %"struct.blink::StartPositionOfCharacterData"* %3, i64 0, i32 0
  call fastcc void @_ZN5blinkL12LogicalQueryEPNS_12LayoutObjectEPNS_9QueryDataEPFbS3_RKNS_15SVGTextFragmentEE(%"class.blink::LayoutObject"* %11, %"struct.blink::QueryData"* nonnull %12, i1 (%"struct.blink::QueryData"*, %"struct.blink::SVGTextFragment"*)* nonnull @_ZN5blinkL32StartPositionOfCharacterCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE)
  %13 = getelementptr inbounds %"struct.blink::StartPositionOfCharacterData", %"struct.blink::StartPositionOfCharacterData"* %3, i64 0, i32 2
  %14 = bitcast %"class.blink::FloatPoint"* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #11
  ret <2 x float> %15
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL32StartPositionOfCharacterCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE(%"struct.blink::QueryData"* nocapture, %"struct.blink::SVGTextFragment"* dereferenceable(104)) #5 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1
  %7 = bitcast %"struct.blink::QueryData"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  %10 = add nsw i32 %8, 1
  %11 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sub i32 %8, %12
  store i32 %13, i32* %3, align 4
  %14 = sub i32 %10, %12
  store i32 %14, i32* %4, align 4
  %15 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 3
  %16 = load %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %15, align 8
  %17 = call zeroext i1 @_ZNK5blink16SVGInlineTextBox43MapStartEndPositionsIntoFragmentCoordinatesERKNS_15SVGTextFragmentERiS4_(%"class.blink::SVGInlineTextBox"* %16, %"struct.blink::SVGTextFragment"* dereferenceable(104) %1, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4) #11
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = load i32, i32* %3, align 4
  %20 = call fastcc <2 x float> @_ZN5blinkL22CalculateGlyphPositionEPKNS_9QueryDataERKNS_15SVGTextFragmentEj(%"struct.blink::QueryData"* %0, %"struct.blink::SVGTextFragment"* dereferenceable(104) %1, i32 %19)
  %21 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1, i32 1
  %22 = bitcast i32* %21 to <2 x float>*
  store <2 x float> %20, <2 x float>* %22, align 4
  br label %23

23:                                               ; preds = %2, %18
  %24 = phi i1 [ true, %18 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink12SVGTextQuery22EndPositionOfCharacterEj(%"class.blink::SVGTextQuery"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = alloca %"struct.blink::EndPositionOfCharacterData", align 8
  %4 = getelementptr inbounds %"struct.blink::EndPositionOfCharacterData", %"struct.blink::EndPositionOfCharacterData"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 getelementptr inbounds (<{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, %"class.blink::FloatPoint", [4 x i8] }>, <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, %"class.blink::FloatPoint", [4 x i8] }>* @__const._ZNK5blink12SVGTextQuery22EndPositionOfCharacterEj.data, i64 0, i32 0, i32 0), i64 40, i1 false)
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.blink::EndPositionOfCharacterData", %"struct.blink::EndPositionOfCharacterData"* %3, i64 0, i32 0, i32 1
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false) #11
  %7 = getelementptr inbounds %"struct.blink::EndPositionOfCharacterData", %"struct.blink::EndPositionOfCharacterData"* %3, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::EndPositionOfCharacterData", %"struct.blink::EndPositionOfCharacterData"* %3, i64 0, i32 2, i32 0
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::EndPositionOfCharacterData", %"struct.blink::EndPositionOfCharacterData"* %3, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::SVGTextQuery", %"class.blink::SVGTextQuery"* %0, i64 0, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::EndPositionOfCharacterData", %"struct.blink::EndPositionOfCharacterData"* %3, i64 0, i32 0
  call fastcc void @_ZN5blinkL12LogicalQueryEPNS_12LayoutObjectEPNS_9QueryDataEPFbS3_RKNS_15SVGTextFragmentEE(%"class.blink::LayoutObject"* %11, %"struct.blink::QueryData"* nonnull %12, i1 (%"struct.blink::QueryData"*, %"struct.blink::SVGTextFragment"*)* nonnull @_ZN5blinkL30EndPositionOfCharacterCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE)
  %13 = getelementptr inbounds %"struct.blink::EndPositionOfCharacterData", %"struct.blink::EndPositionOfCharacterData"* %3, i64 0, i32 2
  %14 = bitcast %"class.blink::FloatPoint"* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #11
  ret <2 x float> %15
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL30EndPositionOfCharacterCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE(%"struct.blink::QueryData"* nocapture, %"struct.blink::SVGTextFragment"* dereferenceable(104)) #5 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1
  %7 = bitcast %"struct.blink::QueryData"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  %10 = add nsw i32 %8, 1
  %11 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sub i32 %8, %12
  store i32 %13, i32* %3, align 4
  %14 = sub i32 %10, %12
  store i32 %14, i32* %4, align 4
  %15 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 3
  %16 = load %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %15, align 8
  %17 = call zeroext i1 @_ZNK5blink16SVGInlineTextBox43MapStartEndPositionsIntoFragmentCoordinatesERKNS_15SVGTextFragmentERiS4_(%"class.blink::SVGInlineTextBox"* %16, %"struct.blink::SVGTextFragment"* dereferenceable(104) %1, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4) #11
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = load i32, i32* %4, align 4
  %20 = call fastcc <2 x float> @_ZN5blinkL22CalculateGlyphPositionEPKNS_9QueryDataERKNS_15SVGTextFragmentEj(%"struct.blink::QueryData"* %0, %"struct.blink::SVGTextFragment"* dereferenceable(104) %1, i32 %19)
  %21 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1, i32 1
  %22 = bitcast i32* %21 to <2 x float>*
  store <2 x float> %20, <2 x float>* %22, align 4
  br label %23

23:                                               ; preds = %2, %18
  %24 = phi i1 [ true, %18 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #11
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink12SVGTextQuery19RotationOfCharacterEj(%"class.blink::SVGTextQuery"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::RotationOfCharacterData", align 8
  %4 = getelementptr inbounds %"struct.blink::RotationOfCharacterData", %"struct.blink::RotationOfCharacterData"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 getelementptr inbounds ({ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, float }, { { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, float }* @__const._ZNK5blink12SVGTextQuery19RotationOfCharacterEj.data, i64 0, i32 0, i32 0), i64 32, i1 false)
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.blink::RotationOfCharacterData", %"struct.blink::RotationOfCharacterData"* %3, i64 0, i32 0, i32 1
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false) #11
  %7 = getelementptr inbounds %"struct.blink::RotationOfCharacterData", %"struct.blink::RotationOfCharacterData"* %3, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::RotationOfCharacterData", %"struct.blink::RotationOfCharacterData"* %3, i64 0, i32 2
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"class.blink::SVGTextQuery", %"class.blink::SVGTextQuery"* %0, i64 0, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::RotationOfCharacterData", %"struct.blink::RotationOfCharacterData"* %3, i64 0, i32 0
  call fastcc void @_ZN5blinkL12LogicalQueryEPNS_12LayoutObjectEPNS_9QueryDataEPFbS3_RKNS_15SVGTextFragmentEE(%"class.blink::LayoutObject"* %10, %"struct.blink::QueryData"* nonnull %11, i1 (%"struct.blink::QueryData"*, %"struct.blink::SVGTextFragment"*)* nonnull @_ZN5blinkL27RotationOfCharacterCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE)
  %12 = load float, float* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  ret float %12
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL27RotationOfCharacterCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE(%"struct.blink::QueryData"* nocapture, %"struct.blink::SVGTextFragment"* dereferenceable(104)) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::AffineTransform", align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1
  %8 = bitcast %"struct.blink::QueryData"* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  %11 = add nsw i32 %9, 1
  %12 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 %9, %13
  store i32 %14, i32* %3, align 4
  %15 = sub i32 %11, %13
  store i32 %15, i32* %4, align 4
  %16 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 3
  %17 = load %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %16, align 8
  %18 = call zeroext i1 @_ZNK5blink16SVGInlineTextBox43MapStartEndPositionsIntoFragmentCoordinatesERKNS_15SVGTextFragmentERiS4_(%"class.blink::SVGInlineTextBox"* %17, %"struct.blink::SVGTextFragment"* dereferenceable(104) %1, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4) #11
  br i1 %18, label %19, label %69

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 9
  %21 = load float, float* %20, align 8
  %22 = fcmp une float %21, 1.000000e+00
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  %25 = call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* %24) #11
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1, i32 1
  %28 = bitcast i32* %27 to float*
  store float 0.000000e+00, float* %28, align 4
  br label %69

29:                                               ; preds = %23, %19
  %30 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %5, i64 0, i32 0, i64 0
  %32 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %5, i64 0, i32 0, i64 1
  %33 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %5, i64 0, i32 0, i64 4
  %34 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  %35 = bitcast %"class.blink::AffineTransform"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %35, i64 48, i1 false) #11
  %36 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 3
  %37 = bitcast double* %33 to <2 x double>*
  %38 = load <2 x double>, <2 x double>* %37, align 8, !alias.scope !5
  %39 = bitcast float* %36 to <2 x float>*
  %40 = load <2 x float>, <2 x float>* %39, align 4, !noalias !5
  %41 = fpext <2 x float> %40 to <2 x double>
  %42 = fadd <2 x double> %38, %41
  %43 = bitcast double* %33 to <2 x double>*
  store <2 x double> %42, <2 x double>* %43, align 8, !alias.scope !5
  %44 = extractelement <2 x float> %40, i32 0
  %45 = fsub float -0.000000e+00, %44
  %46 = fpext float %45 to double
  %47 = extractelement <2 x float> %40, i32 1
  %48 = fsub float -0.000000e+00, %47
  %49 = fpext float %48 to double
  %50 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %5, double %46, double %49) #11
  %51 = call double @_ZNK5blink15AffineTransform6XScaleEv(%"class.blink::AffineTransform"* nonnull %5) #11
  %52 = fdiv double 1.000000e+00, %51
  %53 = call double @_ZNK5blink15AffineTransform6YScaleEv(%"class.blink::AffineTransform"* nonnull %5) #11
  %54 = fdiv double 1.000000e+00, %53
  %55 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEdd(%"class.blink::AffineTransform"* nonnull %5, double %52, double %54) #11
  %56 = load double, double* %32, align 8
  %57 = load double, double* %31, align 8
  %58 = call double @atan2(double %56, double %57) #11
  %59 = fmul double %58, 0x404CA5DC1A63C1F8
  %60 = fcmp ult double %59, 0x47EFFFFFE0000000
  br i1 %60, label %61, label %65

61:                                               ; preds = %29
  %62 = fcmp ole double %59, 0xC7EFFFFFE0000000
  %63 = select i1 %62, double 0xC7EFFFFFE0000000, double %59
  %64 = fptrunc double %63 to float
  br label %65

65:                                               ; preds = %29, %61
  %66 = phi float [ %64, %61 ], [ 0x47EFFFFFE0000000, %29 ]
  %67 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1, i32 1
  %68 = bitcast i32* %67 to float*
  store float %66, float* %68, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #11
  br label %69

69:                                               ; preds = %26, %65, %2
  %70 = phi i1 [ false, %2 ], [ true, %65 ], [ true, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink12SVGTextQuery17ExtentOfCharacterEj(%"class.blink::SVGTextQuery"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::ExtentOfCharacterData", align 8
  %4 = getelementptr inbounds %"struct.blink::ExtentOfCharacterData", %"struct.blink::ExtentOfCharacterData"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 getelementptr inbounds (<{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, %"class.blink::FloatRect", [4 x i8] }>, <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, i32, %"class.blink::FloatRect", [4 x i8] }>* @__const._ZNK5blink12SVGTextQuery17ExtentOfCharacterEj.data, i64 0, i32 0, i32 0), i64 48, i1 false)
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.blink::ExtentOfCharacterData", %"struct.blink::ExtentOfCharacterData"* %3, i64 0, i32 0, i32 1
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false) #11
  %7 = getelementptr inbounds %"struct.blink::ExtentOfCharacterData", %"struct.blink::ExtentOfCharacterData"* %3, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::ExtentOfCharacterData", %"struct.blink::ExtentOfCharacterData"* %3, i64 0, i32 2
  %9 = bitcast %"class.blink::FloatRect"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 16, i1 false) #11
  %10 = getelementptr inbounds %"class.blink::SVGTextQuery", %"class.blink::SVGTextQuery"* %0, i64 0, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::ExtentOfCharacterData", %"struct.blink::ExtentOfCharacterData"* %3, i64 0, i32 0
  call fastcc void @_ZN5blinkL12LogicalQueryEPNS_12LayoutObjectEPNS_9QueryDataEPFbS3_RKNS_15SVGTextFragmentEE(%"class.blink::LayoutObject"* %11, %"struct.blink::QueryData"* nonnull %12, i1 (%"struct.blink::QueryData"*, %"struct.blink::SVGTextFragment"*)* nonnull @_ZN5blinkL25ExtentOfCharacterCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE)
  %13 = bitcast %"class.blink::FloatRect"* %8 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = getelementptr inbounds %"struct.blink::ExtentOfCharacterData", %"struct.blink::ExtentOfCharacterData"* %3, i64 0, i32 2, i32 1
  %16 = bitcast %"class.blink::FloatSize"* %15 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #11
  %18 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %14, 0
  %19 = insertvalue { <2 x float>, <2 x float> } %18, <2 x float> %17, 1
  ret { <2 x float>, <2 x float> } %19
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL25ExtentOfCharacterCallbackEPNS_9QueryDataERKNS_15SVGTextFragmentE(%"struct.blink::QueryData"* nocapture, %"struct.blink::SVGTextFragment"* dereferenceable(104)) #5 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1
  %9 = bitcast %"struct.blink::QueryData"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  %12 = add nsw i32 %10, 1
  %13 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sub i32 %10, %14
  store i32 %15, i32* %5, align 4
  %16 = sub i32 %12, %14
  store i32 %16, i32* %6, align 4
  %17 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 3
  %18 = load %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %17, align 8
  %19 = call zeroext i1 @_ZNK5blink16SVGInlineTextBox43MapStartEndPositionsIntoFragmentCoordinatesERKNS_15SVGTextFragmentERiS4_(%"class.blink::SVGInlineTextBox"* %18, %"struct.blink::SVGTextFragment"* dereferenceable(104) %1, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6) #11
  br i1 %19, label %20, label %202

20:                                               ; preds = %2
  %21 = bitcast %"struct.blink::QueryData"* %0 to %"struct.blink::ExtentOfCharacterData"*
  %22 = load i32, i32* %5, align 4
  %23 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  %24 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::LineLayoutSVGInlineText"* %24 to %"class.blink::LayoutSVGInlineText"**
  %26 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %26, i64 0, i32 1
  %28 = load float, float* %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %26, i64 0, i32 2
  %30 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %29) #11
  %31 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %30, i64 0, i32 2
  %32 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %31, align 8
  %33 = icmp eq %"class.blink::SimpleFontData"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %29, i64 0, i32 0
  %36 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %30, %"class.blink::FontDescription"* dereferenceable(80) %35) #11
  store %"class.blink::SimpleFontData"* %36, %"class.blink::SimpleFontData"** %31, align 8
  %37 = icmp eq %"class.blink::SimpleFontData"* %36, null
  br i1 %37, label %195, label %38

38:                                               ; preds = %34, %20
  %39 = phi %"class.blink::SimpleFontData"* [ %36, %34 ], [ %32, %20 ]
  %40 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %39, i64 0, i32 1, i32 1
  %41 = load float, float* %40, align 4
  %42 = fdiv float %41, %28
  %43 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %25, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 1073741823
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %87, label %54

54:                                               ; preds = %38, %54
  %55 = phi %"class.blink::SVGTextMetrics"* [ %59, %54 ], [ %49, %38 ]
  %56 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %55, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %55, i64 1
  br i1 %58, label %54, label %60

60:                                               ; preds = %54, %67
  %61 = phi i32 [ %65, %67 ], [ 0, %54 ]
  %62 = phi %"class.blink::SVGTextMetrics"* [ %68, %67 ], [ %49, %54 ]
  %63 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %62, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %64, %61
  %66 = icmp ugt i32 %65, %22
  br i1 %66, label %70, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %62, i64 1
  %69 = icmp ult i32 %65, %52
  br i1 %69, label %60, label %70

70:                                               ; preds = %67, %60
  %71 = phi %"class.blink::SVGTextMetrics"* [ %62, %60 ], [ %68, %67 ]
  %72 = icmp eq %"class.blink::SVGTextMetrics"* %55, %71
  br i1 %72, label %87, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !4
  %76 = icmp eq i8 %75, 0
  br label %77

77:                                               ; preds = %77, %73
  %78 = phi float [ 0.000000e+00, %73 ], [ %84, %77 ]
  %79 = phi %"class.blink::SVGTextMetrics"* [ %55, %73 ], [ %85, %77 ]
  %80 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %79, i64 0, i32 1
  %81 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %79, i64 0, i32 0
  %82 = select i1 %76, float* %81, float* %80
  %83 = load float, float* %82, align 4
  %84 = fadd float %78, %83
  %85 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %79, i64 1
  %86 = icmp eq %"class.blink::SVGTextMetrics"* %85, %71
  br i1 %86, label %87, label %77

87:                                               ; preds = %77, %70, %38
  %88 = phi float [ 0.000000e+00, %70 ], [ 0.000000e+00, %38 ], [ %84, %77 ]
  %89 = bitcast %"class.blink::SVGInlineTextBox"** %17 to %"class.blink::InlineBox"**
  %90 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %90, i64 0, i32 7, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 4
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 0
  %96 = load i8, i8* %95, align 8, !range !4
  br i1 %94, label %105, label %97

97:                                               ; preds = %87
  %98 = icmp eq i8 %96, 0
  %99 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 6
  %100 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 5
  %101 = load float, float* %100, align 4
  %102 = load float, float* %99, align 4
  %103 = select i1 %98, float %101, float %102
  %104 = fsub float %103, %88
  br label %105

105:                                              ; preds = %97, %87
  %106 = phi float [ %104, %97 ], [ %88, %87 ]
  %107 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 3
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 4
  %110 = load float, float* %109, align 8
  %111 = icmp eq i8 %96, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %105
  %113 = fadd float %108, 0.000000e+00
  %114 = insertelement <2 x float> undef, float %113, i32 0
  %115 = fadd float %106, %110
  br label %120

116:                                              ; preds = %105
  %117 = fadd float %106, %108
  %118 = insertelement <2 x float> undef, float %117, i32 0
  %119 = fadd float %110, 0.000000e+00
  br label %120

120:                                              ; preds = %116, %112
  %121 = phi float [ %119, %116 ], [ %115, %112 ]
  %122 = phi <2 x float> [ %118, %116 ], [ %114, %112 ]
  %123 = extractelement <2 x float> %122, i32 0
  %124 = fadd float %123, 0.000000e+00
  %125 = insertelement <2 x float> undef, float %124, i32 0
  %126 = fsub float %121, %42
  %127 = insertelement <2 x float> %125, float %126, i32 1
  br i1 %53, label %138, label %128

128:                                              ; preds = %120, %135
  %129 = phi i32 [ %133, %135 ], [ 0, %120 ]
  %130 = phi %"class.blink::SVGTextMetrics"* [ %136, %135 ], [ %49, %120 ]
  %131 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %130, i64 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, %129
  %134 = icmp ugt i32 %133, %22
  br i1 %134, label %138, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %130, i64 1
  %137 = icmp ult i32 %133, %52
  br i1 %137, label %128, label %138

138:                                              ; preds = %135, %128, %120
  %139 = phi %"class.blink::SVGTextMetrics"* [ %49, %120 ], [ %130, %128 ], [ %136, %135 ]
  %140 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -1, i64 16, i1 false) #11
  %141 = call <2 x float> @_ZNK5blink14SVGTextMetrics7ExtentsEv(%"class.blink::SVGTextMetrics"* %139) #11
  %142 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %89, align 8
  %143 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %142, i64 0, i32 7, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %160, label %147

147:                                              ; preds = %138
  %148 = load i8, i8* %95, align 8, !range !4
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %154, label %150

150:                                              ; preds = %147
  %151 = extractelement <2 x float> %141, i32 1
  %152 = fsub float %126, %151
  %153 = insertelement <2 x float> %125, float %152, i32 1
  br label %160

154:                                              ; preds = %147
  %155 = extractelement <2 x float> %141, i32 0
  %156 = fsub float %124, %155
  %157 = insertelement <2 x float> undef, float %156, i32 0
  %158 = fadd float %126, 0.000000e+00
  %159 = insertelement <2 x float> %157, float %158, i32 1
  br label %160

160:                                              ; preds = %154, %150, %138
  %161 = phi <2 x float> [ %127, %138 ], [ %159, %154 ], [ %153, %150 ]
  %162 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %161, <2 x float>* %162, align 8
  %163 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %141, <2 x float>* %163, align 8
  %164 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 9
  %165 = load float, float* %164, align 8
  %166 = fcmp une float %165, 1.000000e+00
  br i1 %166, label %170, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  %169 = call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* %168) #11
  br i1 %169, label %192, label %170

170:                                              ; preds = %167, %160
  %171 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %171) #11
  %172 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %4, i64 0, i32 0, i64 4
  %173 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  %174 = bitcast %"class.blink::AffineTransform"* %173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %171, i8* align 8 %174, i64 48, i1 false) #11
  %175 = bitcast double* %172 to <2 x double>*
  %176 = load <2 x double>, <2 x double>* %175, align 8, !alias.scope !8
  %177 = bitcast float* %107 to <2 x float>*
  %178 = load <2 x float>, <2 x float>* %177, align 4, !noalias !8
  %179 = fpext <2 x float> %178 to <2 x double>
  %180 = fadd <2 x double> %176, %179
  %181 = bitcast double* %172 to <2 x double>*
  store <2 x double> %180, <2 x double>* %181, align 8, !alias.scope !8
  %182 = extractelement <2 x float> %178, i32 0
  %183 = fsub float -0.000000e+00, %182
  %184 = fpext float %183 to double
  %185 = extractelement <2 x float> %178, i32 1
  %186 = fsub float -0.000000e+00, %185
  %187 = fpext float %186 to double
  %188 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %4, double %184, double %187) #11
  %189 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatRect"* nonnull dereferenceable(16) %23) #11
  %190 = extractvalue { <2 x float>, <2 x float> } %189, 0
  %191 = extractvalue { <2 x float>, <2 x float> } %189, 1
  store <2 x float> %190, <2 x float>* %162, align 8
  store <2 x float> %191, <2 x float>* %163, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %171) #11
  br label %192

192:                                              ; preds = %170, %167
  %193 = phi <2 x float> [ %141, %167 ], [ %191, %170 ]
  %194 = phi <2 x float> [ %161, %167 ], [ %190, %170 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #11
  br label %195

195:                                              ; preds = %34, %192
  %196 = phi <2 x float> [ %193, %192 ], [ zeroinitializer, %34 ]
  %197 = phi <2 x float> [ %194, %192 ], [ zeroinitializer, %34 ]
  %198 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 1, i32 1
  %199 = bitcast i32* %198 to <2 x float>*
  store <2 x float> %197, <2 x float>* %199, align 4
  %200 = getelementptr inbounds %"struct.blink::ExtentOfCharacterData", %"struct.blink::ExtentOfCharacterData"* %21, i64 0, i32 2, i32 1
  %201 = bitcast %"class.blink::FloatSize"* %200 to <2 x float>*
  store <2 x float> %196, <2 x float>* %201, align 4
  br label %202

202:                                              ; preds = %2, %195
  %203 = phi i1 [ true, %195 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i1 %203
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink29CharacterNumberAtPositionData21CharacterNumberWithinEPKNS_12LayoutObjectE(%"struct.blink::CharacterNumberAtPositionData"* nocapture readonly, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %4, %"class.blink::LayoutObject"* %1) #11
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %23
  %12 = phi i32 [ %24, %23 ], [ %8, %6 ]
  %13 = phi %"class.blink::LayoutObject"* [ %25, %23 ], [ %9, %6 ]
  %14 = bitcast %"class.blink::LayoutObject"* %13 to i1 (%"class.blink::LayoutObject"*, i32)***
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, i64 92
  %17 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LayoutObject"* nonnull %13, i32 65) #11
  br i1 %18, label %19, label %23

19:                                               ; preds = %11
  %20 = bitcast %"class.blink::LayoutObject"* %13 to %"class.blink::LayoutText"*
  %21 = tail call i32 @_ZNK5blink10LayoutText18ResolvedTextLengthEv(%"class.blink::LayoutText"* nonnull %20) #11
  %22 = add i32 %21, %12
  br label %23

23:                                               ; preds = %11, %19
  %24 = phi i32 [ %22, %19 ], [ %12, %11 ]
  %25 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %13, %"class.blink::LayoutObject"* %1) #11
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %27, label %11

27:                                               ; preds = %23, %6, %2
  %28 = phi i32 [ -1, %2 ], [ %8, %6 ], [ %24, %23 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12SVGTextQuery25CharacterNumberAtPositionERKNS_10FloatPointE(%"class.blink::SVGTextQuery"* nocapture readonly, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = alloca %"class.blink::FloatRect", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"class.blink::AffineTransform", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %"class.WTF::Vector.1691", align 8
  %10 = alloca %"struct.blink::CharacterNumberAtPositionData", align 8
  %11 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 getelementptr inbounds (<{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, %"class.blink::FloatPoint", %"class.blink::LineLayoutItem", i32, [4 x i8] }>, <{ { i8, [3 x i8], i32, %"class.blink::LineLayoutSVGInlineText", %"class.blink::SVGInlineTextBox"* }, %"class.blink::FloatPoint", %"class.blink::LineLayoutItem", i32, [4 x i8] }>* @__const._ZNK5blink12SVGTextQuery25CharacterNumberAtPositionERKNS_10FloatPointE.data, i64 0, i32 0, i32 0), i64 48, i1 false)
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %10, i64 0, i32 0, i32 1
  %13 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 20, i1 false) #11
  %14 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %10, i64 0, i32 1
  %15 = bitcast %"class.blink::FloatPoint"* %1 to i64*
  %16 = bitcast %"class.blink::FloatPoint"* %14 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %10, i64 0, i32 2, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %18, align 8
  %19 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %10, i64 0, i32 3
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::SVGTextQuery", %"class.blink::SVGTextQuery"* %0, i64 0, i32 0
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %10, i64 0, i32 0
  %23 = bitcast %"class.WTF::Vector.1691"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %9, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %9, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #11
  %26 = icmp eq %"class.blink::LayoutObject"* %21, null
  br i1 %26, label %57, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.blink::LayoutObject"* %21 to i1 (%"class.blink::LayoutObject"*)***
  %29 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, i64 23
  %31 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* nonnull %21) #11
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 2, i32 9
  %35 = bitcast %"class.blink::LayoutObject"** %34 to %"class.blink::InlineFlowBox"**
  %36 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %35, align 8
  br label %57

37:                                               ; preds = %27
  %38 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %38, i64 26
  %40 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* nonnull %21) #11
  br i1 %41, label %42, label %57

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 4
  %44 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %43 to i96*
  %45 = load i96, i96* %44, align 4
  %46 = and i96 %45, 268435456
  %47 = icmp eq i96 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  %49 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #11
  br label %53

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 1, i32 1, i32 1
  %52 = bitcast i8* %51 to %"class.blink::LineBoxList"*
  br label %53

53:                                               ; preds = %50, %48
  %54 = phi %"class.blink::LineBoxList"* [ %49, %48 ], [ %52, %50 ]
  %55 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %55, align 8
  br label %57

57:                                               ; preds = %53, %37, %33, %2
  %58 = phi %"class.blink::InlineFlowBox"* [ %36, %33 ], [ %56, %53 ], [ null, %2 ], [ null, %37 ]
  call fastcc void @_ZN5blinkL25CollectTextBoxesInFlowBoxEPNS_13InlineFlowBoxERN3WTF6VectorIPNS_16SVGInlineTextBoxELj0ENS2_18PartitionAllocatorEEE(%"class.blink::InlineFlowBox"* %58, %"class.WTF::Vector.1691"* nonnull dereferenceable(16) %9) #11
  %59 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %24, align 8
  %60 = load i32, i32* %25, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %59, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %311, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %10, i64 0, i32 0, i32 3
  %66 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %10, i64 0, i32 0, i32 2
  %67 = bitcast %"class.blink::LineLayoutSVGInlineText"* %66 to i64*
  %68 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.blink::FloatRect"*
  %69 = bitcast { <2 x float>, <2 x float> }* %8 to %"class.blink::FloatRect"*
  %70 = bitcast %"class.blink::LineLayoutSVGInlineText"* %66 to %"class.blink::LayoutSVGInlineText"**
  %71 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  %72 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  %73 = bitcast %"class.blink::FloatRect"* %3 to i8*
  %74 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 1
  %76 = bitcast %"class.blink::FloatRect"* %3 to i32*
  %77 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1
  %78 = bitcast %"class.blink::FloatSize"* %77 to i32*
  %79 = bitcast float* %75 to i32*
  %80 = bitcast %"class.blink::FloatRect"* %3 to <2 x float>*
  %81 = bitcast %"class.blink::FloatSize"* %77 to <2 x float>*
  %82 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  %83 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %84 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %85 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %22, i64 1
  %86 = bitcast %"struct.blink::QueryData"* %85 to %"class.blink::FloatPoint"*
  %87 = bitcast %"class.blink::AffineTransform"* %6 to i8*
  %88 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %6, i64 0, i32 0, i64 4
  %89 = bitcast %"class.blink::SVGInlineTextBox"** %65 to %"class.blink::InlineBox"**
  %90 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  %91 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  %92 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %93 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %94 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %95 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %96 = bitcast double* %88 to <2 x double>*
  %97 = bitcast double* %88 to <2 x double>*
  br label %98

98:                                               ; preds = %306, %64
  %99 = phi %"class.blink::SVGInlineTextBox"** [ %59, %64 ], [ %307, %306 ]
  %100 = load %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %99, align 8
  store %"class.blink::SVGInlineTextBox"* %100, %"class.blink::SVGInlineTextBox"** %65, align 8
  %101 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %100, i64 0, i32 0, i32 0, i32 4, i32 0
  %102 = bitcast %"class.blink::LayoutObject"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  store i64 %103, i64* %67, align 8
  %104 = inttoptr i64 %103 to %"class.blink::LayoutObject"*
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 5, i32 0
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp ne i160 %110, 0
  %112 = zext i1 %111 to i8
  store i8 %112, i8* %11, align 8
  %113 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %100, i64 0, i32 3, i32 0, i32 0, i32 0
  %114 = load %"struct.blink::SVGTextFragment"*, %"struct.blink::SVGTextFragment"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %100, i64 0, i32 3, i32 0, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %114, i64 %117
  %119 = icmp eq i32 %116, 0
  br i1 %119, label %306, label %120

120:                                              ; preds = %98
  %121 = inttoptr i64 %103 to %"class.blink::LayoutSVGInlineText"*
  br label %127

122:                                              ; preds = %287, %178, %137
  %123 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 1
  %124 = icmp eq %"struct.blink::SVGTextFragment"* %123, %118
  br i1 %124, label %306, label %125

125:                                              ; preds = %122
  %126 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %70, align 8
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi %"class.blink::LayoutSVGInlineText"* [ %126, %125 ], [ %121, %120 ]
  %129 = phi %"struct.blink::SVGTextFragment"* [ %123, %125 ], [ %114, %120 ]
  %130 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %128, i64 0, i32 1
  %131 = load float, float* %130, align 8
  %132 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %128, i64 0, i32 2
  %133 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %132) #11
  %134 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %133, i64 0, i32 2
  %135 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %134, align 8
  %136 = icmp eq %"class.blink::SimpleFontData"* %135, null
  br i1 %136, label %137, label %141

137:                                              ; preds = %127
  %138 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %132, i64 0, i32 0
  %139 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %133, %"class.blink::FontDescription"* dereferenceable(80) %138) #11
  store %"class.blink::SimpleFontData"* %139, %"class.blink::SimpleFontData"** %134, align 8
  %140 = icmp eq %"class.blink::SimpleFontData"* %139, null
  br i1 %140, label %122, label %141

141:                                              ; preds = %137, %127
  %142 = phi %"class.blink::SimpleFontData"* [ %139, %137 ], [ %135, %127 ]
  %143 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %142, i64 0, i32 1, i32 1
  %144 = load float, float* %143, align 4
  %145 = fdiv float %144, %131
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #11
  %146 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 3
  %147 = bitcast float* %146 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -1, i64 16, i1 false) #11
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 4
  %150 = load float, float* %149, align 8
  %151 = fsub float %150, %145
  %152 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 5
  %153 = bitcast float* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 6
  %156 = bitcast float* %155 to i32*
  %157 = load i32, i32* %156, align 8
  store i32 %148, i32* %76, align 8
  store float %151, float* %74, align 4
  store i32 %154, i32* %78, align 8
  store i32 %157, i32* %79, align 4
  %158 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 9
  %159 = load float, float* %158, align 8
  %160 = fcmp une float %159, 1.000000e+00
  br i1 %160, label %167, label %161

161:                                              ; preds = %141
  %162 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 8
  %163 = call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* %162) #11
  br i1 %163, label %164, label %167

164:                                              ; preds = %161
  %165 = load <2 x float>, <2 x float>* %80, align 8
  %166 = load <2 x float>, <2 x float>* %81, align 8
  br label %178

167:                                              ; preds = %161, %141
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %82) #11
  %168 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 2
  %169 = load i32, i32* %168, align 8, !noalias !11
  %170 = and i32 %169, 1073741824
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %173, label %172

172:                                              ; preds = %167
  call void @_ZNK5blink15SVGTextFragment27BuildTransformForTextOnPathEv(%"class.blink::AffineTransform"* nonnull sret %4, %"struct.blink::SVGTextFragment"* %129) #11
  br label %174

173:                                              ; preds = %167
  call void @_ZNK5blink15SVGTextFragment27BuildTransformForTextOnLineEv(%"class.blink::AffineTransform"* nonnull sret %4, %"struct.blink::SVGTextFragment"* %129) #11
  br label %174

174:                                              ; preds = %173, %172
  %175 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3) #11
  %176 = extractvalue { <2 x float>, <2 x float> } %175, 0
  %177 = extractvalue { <2 x float>, <2 x float> } %175, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %82) #11
  br label %178

178:                                              ; preds = %174, %164
  %179 = phi <2 x float> [ %176, %174 ], [ %165, %164 ]
  %180 = phi <2 x float> [ %177, %174 ], [ %166, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #11
  store <2 x float> %179, <2 x float>* %83, align 8
  store <2 x float> %180, <2 x float>* %84, align 8
  %181 = call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"* nonnull %71, %"class.blink::FloatPoint"* dereferenceable(8) %86, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #11
  br i1 %181, label %182, label %122

182:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %87) #11
  %183 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 8
  %184 = bitcast %"class.blink::AffineTransform"* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 8 %184, i64 48, i1 false) #11
  %185 = load <2 x double>, <2 x double>* %96, align 8, !alias.scope !14
  %186 = bitcast float* %146 to <2 x float>*
  %187 = load <2 x float>, <2 x float>* %186, align 4, !noalias !14
  %188 = fpext <2 x float> %187 to <2 x double>
  %189 = fadd <2 x double> %185, %188
  store <2 x double> %189, <2 x double>* %97, align 8, !alias.scope !14
  %190 = extractelement <2 x float> %187, i32 0
  %191 = fsub float -0.000000e+00, %190
  %192 = fpext float %191 to double
  %193 = extractelement <2 x float> %187, i32 1
  %194 = fsub float -0.000000e+00, %193
  %195 = fpext float %194 to double
  %196 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %6, double %192, double %195) #11
  %197 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 2
  %198 = load i32, i32* %197, align 8
  %199 = and i32 %198, 1073741823
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %287, label %201

201:                                              ; preds = %182
  %202 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %70, align 8
  %203 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %202, i64 0, i32 4, i32 0, i32 0, i32 0
  %204 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %203, align 8
  %205 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %204, i64 %207
  %209 = load i8, i8* %11, align 8, !range !4
  br label %210

210:                                              ; preds = %272, %201
  %211 = phi i8 [ %276, %272 ], [ %209, %201 ]
  %212 = phi float [ %282, %272 ], [ 0.000000e+00, %201 ]
  %213 = phi i32 [ %275, %272 ], [ 0, %201 ]
  %214 = phi %"class.blink::SVGTextMetrics"* [ %283, %272 ], [ %208, %201 ]
  %215 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %89, align 8
  %216 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %215, i64 0, i32 7, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %217, 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %226, label %220

220:                                              ; preds = %210
  %221 = icmp eq i8 %211, 0
  %222 = load float, float* %152, align 4
  %223 = load float, float* %155, align 4
  %224 = select i1 %221, float %222, float %223
  %225 = fsub float %224, %212
  br label %226

226:                                              ; preds = %220, %210
  %227 = phi float [ %225, %220 ], [ %212, %210 ]
  %228 = load float, float* %146, align 4
  %229 = load float, float* %149, align 8
  %230 = icmp eq i8 %211, 0
  br i1 %230, label %235, label %231

231:                                              ; preds = %226
  %232 = fadd float %228, 0.000000e+00
  %233 = insertelement <2 x float> undef, float %232, i32 0
  %234 = fadd float %227, %229
  br label %239

235:                                              ; preds = %226
  %236 = fadd float %227, %228
  %237 = insertelement <2 x float> undef, float %236, i32 0
  %238 = fadd float %229, 0.000000e+00
  br label %239

239:                                              ; preds = %235, %231
  %240 = phi float [ %238, %235 ], [ %234, %231 ]
  %241 = phi <2 x float> [ %237, %235 ], [ %233, %231 ]
  %242 = extractelement <2 x float> %241, i32 0
  %243 = fadd float %242, 0.000000e+00
  %244 = insertelement <2 x float> undef, float %243, i32 0
  %245 = fsub float %240, %145
  %246 = insertelement <2 x float> %244, float %245, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -1, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #11
  %247 = call <2 x float> @_ZNK5blink14SVGTextMetrics7ExtentsEv(%"class.blink::SVGTextMetrics"* %214) #11
  %248 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %89, align 8
  %249 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %248, i64 0, i32 7, i32 0
  %250 = load i32, i32* %249, align 4
  %251 = and i32 %250, 4
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %266, label %253

253:                                              ; preds = %239
  %254 = load i8, i8* %11, align 8, !range !4
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %260, label %256

256:                                              ; preds = %253
  %257 = extractelement <2 x float> %247, i32 1
  %258 = fsub float %245, %257
  %259 = insertelement <2 x float> %244, float %258, i32 1
  br label %266

260:                                              ; preds = %253
  %261 = extractelement <2 x float> %247, i32 0
  %262 = fsub float %243, %261
  %263 = insertelement <2 x float> undef, float %262, i32 0
  %264 = fadd float %245, 0.000000e+00
  %265 = insertelement <2 x float> %263, float %264, i32 1
  br label %266

266:                                              ; preds = %260, %256, %239
  %267 = phi <2 x float> [ %246, %239 ], [ %265, %260 ], [ %259, %256 ]
  store <2 x float> %267, <2 x float>* %92, align 8
  store <2 x float> %247, <2 x float>* %93, align 8
  %268 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %6, %"class.blink::FloatRect"* nonnull dereferenceable(16) %69) #11
  %269 = extractvalue { <2 x float>, <2 x float> } %268, 0
  store <2 x float> %269, <2 x float>* %94, align 8
  %270 = extractvalue { <2 x float>, <2 x float> } %268, 1
  store <2 x float> %270, <2 x float>* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #11
  %271 = call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"* nonnull %68, %"class.blink::FloatPoint"* dereferenceable(8) %86, i32 0) #11
  br i1 %271, label %288, label %272

272:                                              ; preds = %266
  %273 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %214, i64 0, i32 2
  %274 = load i32, i32* %273, align 4
  %275 = add i32 %274, %213
  %276 = load i8, i8* %11, align 8, !range !4
  %277 = icmp eq i8 %276, 0
  %278 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %214, i64 0, i32 1
  %279 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %214, i64 0, i32 0
  %280 = select i1 %277, float* %279, float* %278
  %281 = load float, float* %280, align 4
  %282 = fadd float %212, %281
  %283 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %214, i64 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #11
  %284 = load i32, i32* %197, align 8
  %285 = and i32 %284, 1073741823
  %286 = icmp ult i32 %275, %285
  br i1 %286, label %210, label %287

287:                                              ; preds = %272, %182
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %87) #11
  br label %122

288:                                              ; preds = %266
  %289 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %129, i64 0, i32 0
  %290 = load i32, i32* %289, align 8
  %291 = bitcast %"class.blink::SVGInlineTextBox"** %65 to %"class.blink::InlineTextBox"**
  %292 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %292, i64 0, i32 3
  %294 = load i32, i32* %293, align 8
  %295 = add i32 %290, %213
  %296 = sub i32 %295, %294
  %297 = getelementptr inbounds %"struct.blink::CharacterNumberAtPositionData", %"struct.blink::CharacterNumberAtPositionData"* %10, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %298 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %297, align 8
  %299 = bitcast %"class.blink::InlineTextBox"* %292 to %"class.blink::SVGInlineTextBox"*
  %300 = call fastcc i32 @_ZN5blinkL23LogicalOffsetInTextNodeENS_23LineLayoutSVGInlineTextEPKNS_16SVGInlineTextBoxEj(%"class.blink::LayoutObject"* %298, %"class.blink::SVGInlineTextBox"* %299, i32 %296) #11
  %301 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %22, i64 1, i32 3
  %302 = bitcast %"class.blink::SVGInlineTextBox"** %301 to i32*
  store i32 %300, i32* %302, align 8
  %303 = load i64, i64* %67, align 8
  %304 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %22, i64 1, i32 2, i32 0, i32 0, i32 0
  %305 = bitcast %"class.blink::LayoutObject"** %304 to i64*
  store i64 %303, i64* %305, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %87) #11
  br label %309

306:                                              ; preds = %122, %98
  %307 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %99, i64 1
  %308 = icmp eq %"class.blink::SVGInlineTextBox"** %307, %62
  br i1 %308, label %309, label %98

309:                                              ; preds = %306, %288
  %310 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %24, align 8
  br label %311

311:                                              ; preds = %309, %57
  %312 = phi %"class.blink::SVGInlineTextBox"** [ %310, %309 ], [ %59, %57 ]
  %313 = icmp eq %"class.blink::SVGInlineTextBox"** %312, null
  %314 = bitcast %"class.blink::SVGInlineTextBox"** %312 to i8*
  br i1 %313, label %320, label %315, !prof !3

315:                                              ; preds = %311
  %316 = load i32, i32* %25, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %319, label %318, !prof !2

318:                                              ; preds = %315
  store i32 0, i32* %25, align 4
  br label %319

319:                                              ; preds = %318, %315
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %314) #11
  store %"class.blink::SVGInlineTextBox"** null, %"class.blink::SVGInlineTextBox"*** %24, align 8
  br label %320

320:                                              ; preds = %311, %319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  %321 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %322 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %323 = icmp eq %"class.blink::LayoutObject"* %322, null
  br i1 %323, label %344, label %324

324:                                              ; preds = %320
  %325 = load i32, i32* %19, align 8
  %326 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %322, %"class.blink::LayoutObject"* %321) #11
  %327 = icmp eq %"class.blink::LayoutObject"* %326, null
  br i1 %327, label %344, label %328

328:                                              ; preds = %324, %340
  %329 = phi i32 [ %341, %340 ], [ %325, %324 ]
  %330 = phi %"class.blink::LayoutObject"* [ %342, %340 ], [ %326, %324 ]
  %331 = bitcast %"class.blink::LayoutObject"* %330 to i1 (%"class.blink::LayoutObject"*, i32)***
  %332 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %331, align 8
  %333 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %332, i64 92
  %334 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %333, align 8
  %335 = call zeroext i1 %334(%"class.blink::LayoutObject"* nonnull %330, i32 65) #11
  br i1 %335, label %336, label %340

336:                                              ; preds = %328
  %337 = bitcast %"class.blink::LayoutObject"* %330 to %"class.blink::LayoutText"*
  %338 = call i32 @_ZNK5blink10LayoutText18ResolvedTextLengthEv(%"class.blink::LayoutText"* nonnull %337) #11
  %339 = add i32 %338, %329
  br label %340

340:                                              ; preds = %336, %328
  %341 = phi i32 [ %339, %336 ], [ %329, %328 ]
  %342 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %330, %"class.blink::LayoutObject"* %321) #11
  %343 = icmp eq %"class.blink::LayoutObject"* %342, null
  br i1 %343, label %344, label %328

344:                                              ; preds = %340, %320, %324
  %345 = phi i32 [ -1, %320 ], [ %325, %324 ], [ %341, %340 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  ret i32 %345
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink13InlineTextBox14CompareByStartEPKS0_S2_(%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*) #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %4, %6
  ret i1 %7
}

declare dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1691"*, %"class.blink::SVGInlineTextBox"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::SVGInlineTextBox"** @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_(%"class.WTF::Vector.1691"* %0, i32 %5, %"class.blink::SVGInlineTextBox"** %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %8, i64 %10
  %12 = bitcast %"class.blink::SVGInlineTextBox"** %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::SVGInlineTextBox"** %11 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i32, i32* %3, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGInlineTextBox"** @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_(%"class.WTF::Vector.1691"*, i32, %"class.blink::SVGInlineTextBox"**) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %4, align 8
  %6 = icmp ugt %"class.blink::SVGInlineTextBox"** %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %5, i64 %10
  %12 = icmp ugt %"class.blink::SVGInlineTextBox"** %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::SVGInlineTextBox"** %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink16SVGInlineTextBoxEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink16SVGInlineTextBoxEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1691"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.blink::SVGInlineTextBox"** %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.blink::SVGInlineTextBox"** %37 to i8*
  br i1 %40, label %42, label %49, !prof !3

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.1691"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.1691"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.blink::SVGInlineTextBox"** %2 to i64
  %55 = ptrtoint %"class.blink::SVGInlineTextBox"** %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !3

68:                                               ; preds = %53
  %69 = icmp eq %"class.blink::SVGInlineTextBox"** %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink16SVGInlineTextBoxEEEmm(i64 %70) #11
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink16SVGInlineTextBoxEEEPKcv, i64 0, i64 0)) #11
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.1691"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.blink::SVGInlineTextBox"** %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.blink::SVGInlineTextBox"** %77 to i8*
  br i1 %80, label %82, label %88, !prof !3

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #11
  %86 = bitcast %"class.WTF::Vector.1691"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #11
  %90 = bitcast %"class.WTF::Vector.1691"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.blink::SVGInlineTextBox"**
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.blink::SVGInlineTextBox"** [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.blink::SVGInlineTextBox"** [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.blink::SVGInlineTextBox"** %99
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink16SVGInlineTextBoxEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEvT0_SB_T_(%"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %286, %3
  %5 = phi %"class.blink::SVGInlineTextBox"** [ %1, %3 ], [ %263, %286 ]
  %6 = phi %"class.blink::SVGInlineTextBox"** [ %0, %3 ], [ %19, %286 ]
  %7 = ptrtoint %"class.blink::SVGInlineTextBox"** %5 to i64
  %8 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %5, i64 -1
  %9 = bitcast %"class.blink::SVGInlineTextBox"** %8 to %"class.blink::InlineTextBox"**
  %10 = bitcast %"class.blink::SVGInlineTextBox"** %8 to i64*
  %11 = bitcast %"class.blink::SVGInlineTextBox"** %8 to i64*
  %12 = bitcast %"class.blink::SVGInlineTextBox"** %8 to i64*
  %13 = bitcast %"class.blink::SVGInlineTextBox"** %8 to %"class.blink::InlineTextBox"**
  %14 = bitcast %"class.blink::SVGInlineTextBox"** %8 to i64*
  %15 = ptrtoint %"class.blink::SVGInlineTextBox"** %5 to i64
  br label %16

16:                                               ; preds = %295, %4
  %17 = phi %"class.blink::SVGInlineTextBox"** [ %6, %4 ], [ %296, %295 ]
  br label %18

18:                                               ; preds = %203, %16
  %19 = phi %"class.blink::SVGInlineTextBox"** [ %17, %16 ], [ %188, %203 ]
  %20 = ptrtoint %"class.blink::SVGInlineTextBox"** %19 to i64
  %21 = sub i64 %7, %20
  %22 = ashr exact i64 %21, 3
  switch i64 %22, label %93 [
    i64 0, label %299
    i64 1, label %299
    i64 2, label %23
    i64 3, label %36
    i64 4, label %82
    i64 5, label %87
  ]

23:                                               ; preds = %18
  %24 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %25 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %5, i64 -1
  %26 = bitcast %"class.blink::SVGInlineTextBox"** %25 to %"class.blink::InlineTextBox"**
  %27 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %26, align 8
  %28 = bitcast %"class.blink::SVGInlineTextBox"** %19 to %"class.blink::InlineTextBox"**
  %29 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %28, align 8
  %30 = tail call zeroext i1 %24(%"class.blink::InlineTextBox"* %27, %"class.blink::InlineTextBox"* %29) #11
  br i1 %30, label %31, label %299

31:                                               ; preds = %23
  %32 = bitcast %"class.blink::SVGInlineTextBox"** %19 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::SVGInlineTextBox"** %25 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  br label %299

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 1
  %38 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %5, i64 -1
  %39 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %40 = bitcast %"class.blink::SVGInlineTextBox"** %37 to %"class.blink::InlineTextBox"**
  %41 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %40, align 8
  %42 = bitcast %"class.blink::SVGInlineTextBox"** %19 to %"class.blink::InlineTextBox"**
  %43 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %42, align 8
  %44 = tail call zeroext i1 %39(%"class.blink::InlineTextBox"* %41, %"class.blink::InlineTextBox"* %43) #11
  %45 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %46 = bitcast %"class.blink::SVGInlineTextBox"** %38 to %"class.blink::InlineTextBox"**
  %47 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %46, align 8
  %48 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %40, align 8
  %49 = tail call zeroext i1 %45(%"class.blink::InlineTextBox"* %47, %"class.blink::InlineTextBox"* %48) #11
  br i1 %44, label %65, label %50

50:                                               ; preds = %36
  br i1 %49, label %51, label %299

51:                                               ; preds = %50
  %52 = bitcast %"class.blink::SVGInlineTextBox"** %37 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::SVGInlineTextBox"** %38 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  store i64 %53, i64* %54, align 8
  %56 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %57 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %40, align 8
  %58 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %42, align 8
  %59 = tail call zeroext i1 %56(%"class.blink::InlineTextBox"* %57, %"class.blink::InlineTextBox"* %58) #11
  br i1 %59, label %60, label %299

60:                                               ; preds = %51
  %61 = bitcast %"class.blink::SVGInlineTextBox"** %19 to <2 x i64>*
  %62 = load <2 x i64>, <2 x i64>* %61, align 8
  %63 = shufflevector <2 x i64> %62, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %64 = bitcast %"class.blink::SVGInlineTextBox"** %19 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %64, align 8
  br label %299

65:                                               ; preds = %36
  %66 = bitcast %"class.blink::SVGInlineTextBox"** %19 to i64*
  %67 = load i64, i64* %66, align 8
  br i1 %49, label %68, label %71

68:                                               ; preds = %65
  %69 = bitcast %"class.blink::SVGInlineTextBox"** %38 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %66, align 8
  store i64 %67, i64* %69, align 8
  br label %299

71:                                               ; preds = %65
  %72 = bitcast %"class.blink::SVGInlineTextBox"** %37 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %66, align 8
  store i64 %67, i64* %72, align 8
  %74 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %75 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %46, align 8
  %76 = inttoptr i64 %67 to %"class.blink::InlineTextBox"*
  %77 = tail call zeroext i1 %74(%"class.blink::InlineTextBox"* %75, %"class.blink::InlineTextBox"* %76) #11
  br i1 %77, label %78, label %299

78:                                               ; preds = %71
  %79 = load i64, i64* %72, align 8
  %80 = bitcast %"class.blink::SVGInlineTextBox"** %38 to i64*
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %72, align 8
  store i64 %79, i64* %80, align 8
  br label %299

82:                                               ; preds = %18
  %83 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 1
  %84 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 2
  %85 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %5, i64 -1
  %86 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_T_(%"class.blink::SVGInlineTextBox"** %19, %"class.blink::SVGInlineTextBox"** %83, %"class.blink::SVGInlineTextBox"** %84, %"class.blink::SVGInlineTextBox"** %85, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %299

87:                                               ; preds = %18
  %88 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 1
  %89 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 2
  %90 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 3
  %91 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %5, i64 -1
  %92 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_SB_T_(%"class.blink::SVGInlineTextBox"** %19, %"class.blink::SVGInlineTextBox"** %88, %"class.blink::SVGInlineTextBox"** %89, %"class.blink::SVGInlineTextBox"** %90, %"class.blink::SVGInlineTextBox"** %91, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %299

93:                                               ; preds = %18
  %94 = icmp slt i64 %21, 248
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEvT0_SB_T_(%"class.blink::SVGInlineTextBox"** %19, %"class.blink::SVGInlineTextBox"** %5, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %299

96:                                               ; preds = %93
  %97 = icmp sgt i64 %21, 7992
  %98 = sdiv i64 %22, 2
  %99 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 %98
  br i1 %97, label %100, label %107

100:                                              ; preds = %96
  %101 = sdiv i64 %22, 4
  %102 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 %101
  %103 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %99, i64 %101
  %104 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_SB_T_(%"class.blink::SVGInlineTextBox"** %19, %"class.blink::SVGInlineTextBox"** %102, %"class.blink::SVGInlineTextBox"** %99, %"class.blink::SVGInlineTextBox"** %103, %"class.blink::SVGInlineTextBox"** %8, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  %105 = bitcast %"class.blink::SVGInlineTextBox"** %19 to %"class.blink::InlineTextBox"**
  %106 = bitcast %"class.blink::SVGInlineTextBox"** %99 to %"class.blink::InlineTextBox"**
  br label %146

107:                                              ; preds = %96
  %108 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %109 = bitcast %"class.blink::SVGInlineTextBox"** %99 to %"class.blink::InlineTextBox"**
  %110 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %109, align 8
  %111 = bitcast %"class.blink::SVGInlineTextBox"** %19 to %"class.blink::InlineTextBox"**
  %112 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %111, align 8
  %113 = tail call zeroext i1 %108(%"class.blink::InlineTextBox"* %110, %"class.blink::InlineTextBox"* %112) #11
  %114 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %115 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %9, align 8
  %116 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %109, align 8
  %117 = tail call zeroext i1 %114(%"class.blink::InlineTextBox"* %115, %"class.blink::InlineTextBox"* %116) #11
  br i1 %113, label %131, label %118

118:                                              ; preds = %107
  br i1 %117, label %119, label %146

119:                                              ; preds = %118
  %120 = bitcast %"class.blink::SVGInlineTextBox"** %99 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = load i64, i64* %10, align 8
  store i64 %122, i64* %120, align 8
  store i64 %121, i64* %10, align 8
  %123 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %124 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %109, align 8
  %125 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %111, align 8
  %126 = tail call zeroext i1 %123(%"class.blink::InlineTextBox"* %124, %"class.blink::InlineTextBox"* %125) #11
  br i1 %126, label %127, label %146

127:                                              ; preds = %119
  %128 = bitcast %"class.blink::SVGInlineTextBox"** %19 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = load i64, i64* %120, align 8
  store i64 %130, i64* %128, align 8
  store i64 %129, i64* %120, align 8
  br label %146

131:                                              ; preds = %107
  %132 = bitcast %"class.blink::SVGInlineTextBox"** %19 to i64*
  %133 = load i64, i64* %132, align 8
  br i1 %117, label %134, label %136

134:                                              ; preds = %131
  %135 = load i64, i64* %12, align 8
  store i64 %135, i64* %132, align 8
  store i64 %133, i64* %12, align 8
  br label %146

136:                                              ; preds = %131
  %137 = bitcast %"class.blink::SVGInlineTextBox"** %99 to i64*
  %138 = load i64, i64* %137, align 8
  store i64 %138, i64* %132, align 8
  store i64 %133, i64* %137, align 8
  %139 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %140 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %9, align 8
  %141 = inttoptr i64 %133 to %"class.blink::InlineTextBox"*
  %142 = tail call zeroext i1 %139(%"class.blink::InlineTextBox"* %140, %"class.blink::InlineTextBox"* %141) #11
  br i1 %142, label %143, label %146

143:                                              ; preds = %136
  %144 = load i64, i64* %137, align 8
  %145 = load i64, i64* %11, align 8
  store i64 %145, i64* %137, align 8
  store i64 %144, i64* %11, align 8
  br label %146

146:                                              ; preds = %143, %136, %134, %127, %119, %118, %100
  %147 = phi %"class.blink::InlineTextBox"** [ %109, %143 ], [ %109, %136 ], [ %109, %134 ], [ %109, %127 ], [ %109, %119 ], [ %109, %118 ], [ %106, %100 ]
  %148 = phi %"class.blink::InlineTextBox"** [ %111, %143 ], [ %111, %136 ], [ %111, %134 ], [ %111, %127 ], [ %111, %119 ], [ %111, %118 ], [ %105, %100 ]
  %149 = phi i32 [ 2, %143 ], [ 1, %136 ], [ 1, %134 ], [ 2, %127 ], [ 1, %119 ], [ 0, %118 ], [ %104, %100 ]
  %150 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %151 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %148, align 8
  %152 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %147, align 8
  %153 = tail call zeroext i1 %150(%"class.blink::InlineTextBox"* %151, %"class.blink::InlineTextBox"* %152) #11
  br i1 %153, label %222, label %154

154:                                              ; preds = %146, %210
  %155 = phi %"class.blink::SVGInlineTextBox"** [ %156, %210 ], [ %8, %146 ]
  %156 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %155, i64 -1
  %157 = icmp eq %"class.blink::SVGInlineTextBox"** %19, %156
  br i1 %157, label %158, label %210

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 1
  %160 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %161 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %148, align 8
  %162 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %163 = tail call zeroext i1 %160(%"class.blink::InlineTextBox"* %161, %"class.blink::InlineTextBox"* %162) #11
  br i1 %163, label %181, label %164

164:                                              ; preds = %158
  %165 = icmp eq %"class.blink::SVGInlineTextBox"** %159, %8
  br i1 %165, label %299, label %166

166:                                              ; preds = %164, %178
  %167 = phi %"class.blink::SVGInlineTextBox"** [ %179, %178 ], [ %159, %164 ]
  %168 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %169 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %148, align 8
  %170 = bitcast %"class.blink::SVGInlineTextBox"** %167 to %"class.blink::InlineTextBox"**
  %171 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %170, align 8
  %172 = tail call zeroext i1 %168(%"class.blink::InlineTextBox"* %169, %"class.blink::InlineTextBox"* %171) #11
  br i1 %172, label %173, label %178

173:                                              ; preds = %166
  %174 = bitcast %"class.blink::SVGInlineTextBox"** %167 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = load i64, i64* %14, align 8
  store i64 %176, i64* %174, align 8
  store i64 %175, i64* %14, align 8
  %177 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %167, i64 1
  br label %181

178:                                              ; preds = %166
  %179 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %167, i64 1
  %180 = icmp eq %"class.blink::SVGInlineTextBox"** %179, %8
  br i1 %180, label %299, label %166

181:                                              ; preds = %173, %158
  %182 = phi %"class.blink::SVGInlineTextBox"** [ %159, %158 ], [ %177, %173 ]
  %183 = icmp eq %"class.blink::SVGInlineTextBox"** %182, %8
  br i1 %183, label %299, label %184

184:                                              ; preds = %181, %205
  %185 = phi %"class.blink::SVGInlineTextBox"** [ %194, %205 ], [ %182, %181 ]
  %186 = phi %"class.blink::SVGInlineTextBox"** [ %199, %205 ], [ %8, %181 ]
  br label %187

187:                                              ; preds = %187, %184
  %188 = phi %"class.blink::SVGInlineTextBox"** [ %185, %184 ], [ %194, %187 ]
  %189 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %190 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %148, align 8
  %191 = bitcast %"class.blink::SVGInlineTextBox"** %188 to %"class.blink::InlineTextBox"**
  %192 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %191, align 8
  %193 = tail call zeroext i1 %189(%"class.blink::InlineTextBox"* %190, %"class.blink::InlineTextBox"* %192) #11
  %194 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %188, i64 1
  br i1 %193, label %195, label %187

195:                                              ; preds = %187, %195
  %196 = phi %"class.blink::SVGInlineTextBox"** [ %199, %195 ], [ %186, %187 ]
  %197 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %198 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %148, align 8
  %199 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %196, i64 -1
  %200 = bitcast %"class.blink::SVGInlineTextBox"** %199 to %"class.blink::InlineTextBox"**
  %201 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %200, align 8
  %202 = tail call zeroext i1 %197(%"class.blink::InlineTextBox"* %198, %"class.blink::InlineTextBox"* %201) #11
  br i1 %202, label %195, label %203

203:                                              ; preds = %195
  %204 = icmp ult %"class.blink::SVGInlineTextBox"** %188, %199
  br i1 %204, label %205, label %18

205:                                              ; preds = %203
  %206 = bitcast %"class.blink::SVGInlineTextBox"** %188 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.blink::SVGInlineTextBox"** %199 to i64*
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %206, align 8
  store i64 %207, i64* %208, align 8
  br label %184

210:                                              ; preds = %154
  %211 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %212 = bitcast %"class.blink::SVGInlineTextBox"** %156 to %"class.blink::InlineTextBox"**
  %213 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %212, align 8
  %214 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %147, align 8
  %215 = tail call zeroext i1 %211(%"class.blink::InlineTextBox"* %213, %"class.blink::InlineTextBox"* %214) #11
  br i1 %215, label %216, label %154

216:                                              ; preds = %210
  %217 = bitcast %"class.blink::SVGInlineTextBox"** %19 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.blink::SVGInlineTextBox"** %156 to i64*
  %220 = load i64, i64* %219, align 8
  store i64 %220, i64* %217, align 8
  store i64 %218, i64* %219, align 8
  %221 = add i32 %149, 1
  br label %222

222:                                              ; preds = %146, %216
  %223 = phi i32 [ %221, %216 ], [ %149, %146 ]
  %224 = phi %"class.blink::SVGInlineTextBox"** [ %156, %216 ], [ %8, %146 ]
  %225 = ptrtoint %"class.blink::SVGInlineTextBox"** %19 to i64
  %226 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %19, i64 1
  %227 = icmp ult %"class.blink::SVGInlineTextBox"** %226, %224
  br i1 %227, label %228, label %260

228:                                              ; preds = %222, %252
  %229 = phi %"class.blink::SVGInlineTextBox"** [ %259, %252 ], [ %99, %222 ]
  %230 = phi i32 [ %257, %252 ], [ %223, %222 ]
  %231 = phi %"class.blink::SVGInlineTextBox"** [ %241, %252 ], [ %226, %222 ]
  %232 = phi %"class.blink::SVGInlineTextBox"** [ %245, %252 ], [ %224, %222 ]
  %233 = bitcast %"class.blink::SVGInlineTextBox"** %229 to %"class.blink::InlineTextBox"**
  br label %234

234:                                              ; preds = %234, %228
  %235 = phi %"class.blink::SVGInlineTextBox"** [ %231, %228 ], [ %241, %234 ]
  %236 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %237 = bitcast %"class.blink::SVGInlineTextBox"** %235 to %"class.blink::InlineTextBox"**
  %238 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %237, align 8
  %239 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %233, align 8
  %240 = tail call zeroext i1 %236(%"class.blink::InlineTextBox"* %238, %"class.blink::InlineTextBox"* %239) #11
  %241 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %235, i64 1
  br i1 %240, label %234, label %242

242:                                              ; preds = %234, %242
  %243 = phi %"class.blink::SVGInlineTextBox"** [ %245, %242 ], [ %232, %234 ]
  %244 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %245 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %243, i64 -1
  %246 = bitcast %"class.blink::SVGInlineTextBox"** %245 to %"class.blink::InlineTextBox"**
  %247 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %246, align 8
  %248 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %233, align 8
  %249 = tail call zeroext i1 %244(%"class.blink::InlineTextBox"* %247, %"class.blink::InlineTextBox"* %248) #11
  br i1 %249, label %250, label %242

250:                                              ; preds = %242
  %251 = icmp ugt %"class.blink::SVGInlineTextBox"** %235, %245
  br i1 %251, label %260, label %252

252:                                              ; preds = %250
  %253 = bitcast %"class.blink::SVGInlineTextBox"** %235 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.blink::SVGInlineTextBox"** %245 to i64*
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %253, align 8
  store i64 %254, i64* %255, align 8
  %257 = add i32 %230, 1
  %258 = icmp eq %"class.blink::SVGInlineTextBox"** %229, %235
  %259 = select i1 %258, %"class.blink::SVGInlineTextBox"** %245, %"class.blink::SVGInlineTextBox"** %229
  br label %228

260:                                              ; preds = %250, %222
  %261 = phi %"class.blink::SVGInlineTextBox"** [ %99, %222 ], [ %229, %250 ]
  %262 = phi i32 [ %223, %222 ], [ %230, %250 ]
  %263 = phi %"class.blink::SVGInlineTextBox"** [ %226, %222 ], [ %235, %250 ]
  %264 = icmp eq %"class.blink::SVGInlineTextBox"** %263, %261
  br i1 %264, label %278, label %265

265:                                              ; preds = %260
  %266 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %267 = bitcast %"class.blink::SVGInlineTextBox"** %261 to %"class.blink::InlineTextBox"**
  %268 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %267, align 8
  %269 = bitcast %"class.blink::SVGInlineTextBox"** %263 to %"class.blink::InlineTextBox"**
  %270 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %269, align 8
  %271 = tail call zeroext i1 %266(%"class.blink::InlineTextBox"* %268, %"class.blink::InlineTextBox"* %270) #11
  br i1 %271, label %272, label %278

272:                                              ; preds = %265
  %273 = bitcast %"class.blink::SVGInlineTextBox"** %263 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %"class.blink::SVGInlineTextBox"** %261 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %273, align 8
  store i64 %274, i64* %275, align 8
  %277 = add i32 %262, 1
  br label %278

278:                                              ; preds = %260, %272, %265
  %279 = phi i32 [ %277, %272 ], [ %262, %265 ], [ %262, %260 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %288

281:                                              ; preds = %278
  %282 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEbT0_SB_T_(%"class.blink::SVGInlineTextBox"** %19, %"class.blink::SVGInlineTextBox"** %263, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  %283 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %263, i64 1
  %284 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEbT0_SB_T_(%"class.blink::SVGInlineTextBox"** %283, %"class.blink::SVGInlineTextBox"** %5, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br i1 %284, label %285, label %287

285:                                              ; preds = %281
  br i1 %282, label %299, label %286

286:                                              ; preds = %285, %297
  br label %4

287:                                              ; preds = %281
  br i1 %282, label %295, label %288

288:                                              ; preds = %287, %278
  %289 = ptrtoint %"class.blink::SVGInlineTextBox"** %263 to i64
  %290 = sub i64 %289, %225
  %291 = sub i64 %15, %289
  %292 = icmp slt i64 %290, %291
  br i1 %292, label %293, label %297

293:                                              ; preds = %288
  tail call void @_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEvT0_SB_T_(%"class.blink::SVGInlineTextBox"** %19, %"class.blink::SVGInlineTextBox"** %263, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  %294 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %263, i64 1
  br label %295

295:                                              ; preds = %293, %287
  %296 = phi %"class.blink::SVGInlineTextBox"** [ %283, %287 ], [ %294, %293 ]
  br label %16

297:                                              ; preds = %288
  %298 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %263, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEvT0_SB_T_(%"class.blink::SVGInlineTextBox"** %298, %"class.blink::SVGInlineTextBox"** %5, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %286

299:                                              ; preds = %285, %181, %18, %18, %164, %178, %78, %71, %68, %60, %51, %50, %23, %31, %82, %87, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_T_(%"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %7 = bitcast %"class.blink::SVGInlineTextBox"** %1 to %"class.blink::InlineTextBox"**
  %8 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, align 8
  %9 = bitcast %"class.blink::SVGInlineTextBox"** %0 to %"class.blink::InlineTextBox"**
  %10 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %9, align 8
  %11 = tail call zeroext i1 %6(%"class.blink::InlineTextBox"* %8, %"class.blink::InlineTextBox"* %10) #11
  %12 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %13 = bitcast %"class.blink::SVGInlineTextBox"** %2 to %"class.blink::InlineTextBox"**
  %14 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %15 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, align 8
  %16 = tail call zeroext i1 %12(%"class.blink::InlineTextBox"* %14, %"class.blink::InlineTextBox"* %15) #11
  br i1 %11, label %31, label %17

17:                                               ; preds = %5
  br i1 %16, label %18, label %48

18:                                               ; preds = %17
  %19 = bitcast %"class.blink::SVGInlineTextBox"** %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::SVGInlineTextBox"** %2 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 %20, i64* %21, align 8
  %23 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %24 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, align 8
  %25 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %9, align 8
  %26 = tail call zeroext i1 %23(%"class.blink::InlineTextBox"* %24, %"class.blink::InlineTextBox"* %25) #11
  br i1 %26, label %27, label %48

27:                                               ; preds = %18
  %28 = bitcast %"class.blink::SVGInlineTextBox"** %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %19, align 8
  store i64 %30, i64* %28, align 8
  store i64 %29, i64* %19, align 8
  br label %48

31:                                               ; preds = %5
  %32 = bitcast %"class.blink::SVGInlineTextBox"** %0 to i64*
  %33 = load i64, i64* %32, align 8
  br i1 %16, label %34, label %37

34:                                               ; preds = %31
  %35 = bitcast %"class.blink::SVGInlineTextBox"** %2 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %32, align 8
  store i64 %33, i64* %35, align 8
  br label %48

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::SVGInlineTextBox"** %1 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %32, align 8
  store i64 %33, i64* %38, align 8
  %40 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %41 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %42 = inttoptr i64 %33 to %"class.blink::InlineTextBox"*
  %43 = tail call zeroext i1 %40(%"class.blink::InlineTextBox"* %41, %"class.blink::InlineTextBox"* %42) #11
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = load i64, i64* %38, align 8
  %46 = bitcast %"class.blink::SVGInlineTextBox"** %2 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %38, align 8
  store i64 %45, i64* %46, align 8
  br label %48

48:                                               ; preds = %17, %18, %27, %34, %37, %44
  %49 = phi i32 [ 1, %34 ], [ 0, %17 ], [ 2, %27 ], [ 1, %18 ], [ 2, %44 ], [ 1, %37 ]
  %50 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %51 = bitcast %"class.blink::SVGInlineTextBox"** %3 to %"class.blink::InlineTextBox"**
  %52 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %51, align 8
  %53 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %54 = tail call zeroext i1 %50(%"class.blink::InlineTextBox"* %52, %"class.blink::InlineTextBox"* %53) #11
  br i1 %54, label %55, label %79

55:                                               ; preds = %48
  %56 = bitcast %"class.blink::SVGInlineTextBox"** %2 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.blink::SVGInlineTextBox"** %3 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  store i64 %57, i64* %58, align 8
  %60 = add nuw nsw i32 %49, 1
  %61 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %62 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %63 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, align 8
  %64 = tail call zeroext i1 %61(%"class.blink::InlineTextBox"* %62, %"class.blink::InlineTextBox"* %63) #11
  br i1 %64, label %65, label %79

65:                                               ; preds = %55
  %66 = bitcast %"class.blink::SVGInlineTextBox"** %1 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = load i64, i64* %56, align 8
  store i64 %68, i64* %66, align 8
  store i64 %67, i64* %56, align 8
  %69 = add nuw nsw i32 %49, 2
  %70 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %71 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, align 8
  %72 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %9, align 8
  %73 = tail call zeroext i1 %70(%"class.blink::InlineTextBox"* %71, %"class.blink::InlineTextBox"* %72) #11
  br i1 %73, label %74, label %79

74:                                               ; preds = %65
  %75 = bitcast %"class.blink::SVGInlineTextBox"** %0 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %66, align 8
  store i64 %77, i64* %75, align 8
  store i64 %76, i64* %66, align 8
  %78 = add nuw nsw i32 %49, 3
  br label %79

79:                                               ; preds = %55, %74, %65, %48
  %80 = phi i32 [ %78, %74 ], [ %69, %65 ], [ %60, %55 ], [ %49, %48 ]
  ret i32 %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_SB_T_(%"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_T_(%"class.blink::SVGInlineTextBox"** %0, %"class.blink::SVGInlineTextBox"** %1, %"class.blink::SVGInlineTextBox"** %2, %"class.blink::SVGInlineTextBox"** %3, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5, align 8
  %9 = bitcast %"class.blink::SVGInlineTextBox"** %4 to %"class.blink::InlineTextBox"**
  %10 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %9, align 8
  %11 = bitcast %"class.blink::SVGInlineTextBox"** %3 to %"class.blink::InlineTextBox"**
  %12 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %11, align 8
  %13 = tail call zeroext i1 %8(%"class.blink::InlineTextBox"* %10, %"class.blink::InlineTextBox"* %12) #11
  br i1 %13, label %14, label %50

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::SVGInlineTextBox"** %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::SVGInlineTextBox"** %4 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = add i32 %7, 1
  %20 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5, align 8
  %21 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %11, align 8
  %22 = bitcast %"class.blink::SVGInlineTextBox"** %2 to %"class.blink::InlineTextBox"**
  %23 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %22, align 8
  %24 = tail call zeroext i1 %20(%"class.blink::InlineTextBox"* %21, %"class.blink::InlineTextBox"* %23) #11
  br i1 %24, label %25, label %50

25:                                               ; preds = %14
  %26 = bitcast %"class.blink::SVGInlineTextBox"** %2 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %15, align 8
  store i64 %28, i64* %26, align 8
  store i64 %27, i64* %15, align 8
  %29 = add i32 %7, 2
  %30 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5, align 8
  %31 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %22, align 8
  %32 = bitcast %"class.blink::SVGInlineTextBox"** %1 to %"class.blink::InlineTextBox"**
  %33 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %32, align 8
  %34 = tail call zeroext i1 %30(%"class.blink::InlineTextBox"* %31, %"class.blink::InlineTextBox"* %33) #11
  br i1 %34, label %35, label %50

35:                                               ; preds = %25
  %36 = bitcast %"class.blink::SVGInlineTextBox"** %1 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %26, align 8
  store i64 %38, i64* %36, align 8
  store i64 %37, i64* %26, align 8
  %39 = add i32 %7, 3
  %40 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5, align 8
  %41 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %32, align 8
  %42 = bitcast %"class.blink::SVGInlineTextBox"** %0 to %"class.blink::InlineTextBox"**
  %43 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %42, align 8
  %44 = tail call zeroext i1 %40(%"class.blink::InlineTextBox"* %41, %"class.blink::InlineTextBox"* %43) #11
  br i1 %44, label %45, label %50

45:                                               ; preds = %35
  %46 = bitcast %"class.blink::SVGInlineTextBox"** %0 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = load i64, i64* %36, align 8
  store i64 %48, i64* %46, align 8
  store i64 %47, i64* %36, align 8
  %49 = add i32 %7, 4
  br label %50

50:                                               ; preds = %14, %35, %45, %25, %6
  %51 = phi i32 [ %49, %45 ], [ %39, %35 ], [ %29, %25 ], [ %19, %14 ], [ %7, %6 ]
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEvT0_SB_T_(%"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 2
  %5 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 1
  %6 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %7 = bitcast %"class.blink::SVGInlineTextBox"** %5 to %"class.blink::InlineTextBox"**
  %8 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, align 8
  %9 = bitcast %"class.blink::SVGInlineTextBox"** %0 to %"class.blink::InlineTextBox"**
  %10 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %9, align 8
  %11 = tail call zeroext i1 %6(%"class.blink::InlineTextBox"* %8, %"class.blink::InlineTextBox"* %10) #11
  %12 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %13 = bitcast %"class.blink::SVGInlineTextBox"** %4 to %"class.blink::InlineTextBox"**
  %14 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %15 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, align 8
  %16 = tail call zeroext i1 %12(%"class.blink::InlineTextBox"* %14, %"class.blink::InlineTextBox"* %15) #11
  br i1 %11, label %32, label %17

17:                                               ; preds = %3
  br i1 %16, label %18, label %50

18:                                               ; preds = %17
  %19 = bitcast %"class.blink::SVGInlineTextBox"** %5 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::SVGInlineTextBox"** %4 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 %20, i64* %21, align 8
  %23 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %24 = inttoptr i64 %22 to %"class.blink::InlineTextBox"*
  %25 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %9, align 8
  %26 = tail call zeroext i1 %23(%"class.blink::InlineTextBox"* %24, %"class.blink::InlineTextBox"* %25) #11
  br i1 %26, label %27, label %50

27:                                               ; preds = %18
  %28 = bitcast %"class.blink::SVGInlineTextBox"** %0 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8
  %30 = shufflevector <2 x i64> %29, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %31 = bitcast %"class.blink::SVGInlineTextBox"** %0 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 8
  br label %50

32:                                               ; preds = %3
  %33 = bitcast %"class.blink::SVGInlineTextBox"** %0 to i64*
  %34 = load i64, i64* %33, align 8
  br i1 %16, label %35, label %38

35:                                               ; preds = %32
  %36 = bitcast %"class.blink::SVGInlineTextBox"** %4 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %33, align 8
  store i64 %34, i64* %36, align 8
  br label %50

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::SVGInlineTextBox"** %5 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %33, align 8
  store i64 %34, i64* %39, align 8
  %41 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %42 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %43 = inttoptr i64 %34 to %"class.blink::InlineTextBox"*
  %44 = tail call zeroext i1 %41(%"class.blink::InlineTextBox"* %42, %"class.blink::InlineTextBox"* %43) #11
  br i1 %44, label %45, label %50

45:                                               ; preds = %38
  %46 = bitcast %"class.blink::SVGInlineTextBox"** %5 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8
  %48 = shufflevector <2 x i64> %47, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %49 = bitcast %"class.blink::SVGInlineTextBox"** %5 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %49, align 8
  br label %50

50:                                               ; preds = %17, %18, %27, %35, %38, %45
  %51 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 3
  %52 = icmp eq %"class.blink::SVGInlineTextBox"** %51, %1
  br i1 %52, label %53, label %54

53:                                               ; preds = %83, %50
  ret void

54:                                               ; preds = %50, %83
  %55 = phi %"class.blink::SVGInlineTextBox"** [ %84, %83 ], [ %51, %50 ]
  %56 = phi %"class.blink::SVGInlineTextBox"** [ %55, %83 ], [ %4, %50 ]
  %57 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %58 = bitcast %"class.blink::SVGInlineTextBox"** %55 to %"class.blink::InlineTextBox"**
  %59 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %58, align 8
  %60 = bitcast %"class.blink::SVGInlineTextBox"** %56 to %"class.blink::InlineTextBox"**
  %61 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %60, align 8
  %62 = tail call zeroext i1 %57(%"class.blink::InlineTextBox"* %59, %"class.blink::InlineTextBox"* %61) #11
  br i1 %62, label %63, label %83

63:                                               ; preds = %54
  %64 = bitcast %"class.blink::SVGInlineTextBox"** %55 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = inttoptr i64 %65 to %"class.blink::InlineTextBox"*
  br label %67

67:                                               ; preds = %74, %63
  %68 = phi %"class.blink::SVGInlineTextBox"** [ %55, %63 ], [ %69, %74 ]
  %69 = phi %"class.blink::SVGInlineTextBox"** [ %56, %63 ], [ %76, %74 ]
  %70 = bitcast %"class.blink::SVGInlineTextBox"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.blink::SVGInlineTextBox"** %68 to i64*
  store i64 %71, i64* %72, align 8
  %73 = icmp eq %"class.blink::SVGInlineTextBox"** %69, %0
  br i1 %73, label %80, label %74

74:                                               ; preds = %67
  %75 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %76 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %69, i64 -1
  %77 = bitcast %"class.blink::SVGInlineTextBox"** %76 to %"class.blink::InlineTextBox"**
  %78 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %77, align 8
  %79 = tail call zeroext i1 %75(%"class.blink::InlineTextBox"* %66, %"class.blink::InlineTextBox"* %78) #11
  br i1 %79, label %67, label %80

80:                                               ; preds = %67, %74
  %81 = phi %"class.blink::SVGInlineTextBox"** [ %69, %74 ], [ %0, %67 ]
  %82 = bitcast %"class.blink::SVGInlineTextBox"** %81 to i64*
  store i64 %65, i64* %82, align 8
  br label %83

83:                                               ; preds = %80, %54
  %84 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %55, i64 1
  %85 = icmp eq %"class.blink::SVGInlineTextBox"** %84, %1
  br i1 %85, label %53, label %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEbT0_SB_T_(%"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.blink::SVGInlineTextBox"** %1 to i64
  %5 = ptrtoint %"class.blink::SVGInlineTextBox"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %78 [
    i64 0, label %167
    i64 1, label %167
    i64 2, label %8
    i64 3, label %21
    i64 4, label %67
    i64 5, label %72
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %10 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %1, i64 -1
  %11 = bitcast %"class.blink::SVGInlineTextBox"** %10 to %"class.blink::InlineTextBox"**
  %12 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %11, align 8
  %13 = bitcast %"class.blink::SVGInlineTextBox"** %0 to %"class.blink::InlineTextBox"**
  %14 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %15 = tail call zeroext i1 %9(%"class.blink::InlineTextBox"* %12, %"class.blink::InlineTextBox"* %14) #11
  br i1 %15, label %16, label %167

16:                                               ; preds = %8
  %17 = bitcast %"class.blink::SVGInlineTextBox"** %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::SVGInlineTextBox"** %10 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 %18, i64* %19, align 8
  br label %167

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 1
  %23 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %1, i64 -1
  %24 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %25 = bitcast %"class.blink::SVGInlineTextBox"** %22 to %"class.blink::InlineTextBox"**
  %26 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %25, align 8
  %27 = bitcast %"class.blink::SVGInlineTextBox"** %0 to %"class.blink::InlineTextBox"**
  %28 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %27, align 8
  %29 = tail call zeroext i1 %24(%"class.blink::InlineTextBox"* %26, %"class.blink::InlineTextBox"* %28) #11
  %30 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %31 = bitcast %"class.blink::SVGInlineTextBox"** %23 to %"class.blink::InlineTextBox"**
  %32 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %31, align 8
  %33 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %25, align 8
  %34 = tail call zeroext i1 %30(%"class.blink::InlineTextBox"* %32, %"class.blink::InlineTextBox"* %33) #11
  br i1 %29, label %50, label %35

35:                                               ; preds = %21
  br i1 %34, label %36, label %167

36:                                               ; preds = %35
  %37 = bitcast %"class.blink::SVGInlineTextBox"** %22 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::SVGInlineTextBox"** %23 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  %41 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %42 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %25, align 8
  %43 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %27, align 8
  %44 = tail call zeroext i1 %41(%"class.blink::InlineTextBox"* %42, %"class.blink::InlineTextBox"* %43) #11
  br i1 %44, label %45, label %167

45:                                               ; preds = %36
  %46 = bitcast %"class.blink::SVGInlineTextBox"** %0 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8
  %48 = shufflevector <2 x i64> %47, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %49 = bitcast %"class.blink::SVGInlineTextBox"** %0 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %49, align 8
  br label %167

50:                                               ; preds = %21
  %51 = bitcast %"class.blink::SVGInlineTextBox"** %0 to i64*
  %52 = load i64, i64* %51, align 8
  br i1 %34, label %53, label %56

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::SVGInlineTextBox"** %23 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %51, align 8
  store i64 %52, i64* %54, align 8
  br label %167

56:                                               ; preds = %50
  %57 = bitcast %"class.blink::SVGInlineTextBox"** %22 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %51, align 8
  store i64 %52, i64* %57, align 8
  %59 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %60 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %31, align 8
  %61 = inttoptr i64 %52 to %"class.blink::InlineTextBox"*
  %62 = tail call zeroext i1 %59(%"class.blink::InlineTextBox"* %60, %"class.blink::InlineTextBox"* %61) #11
  br i1 %62, label %63, label %167

63:                                               ; preds = %56
  %64 = load i64, i64* %57, align 8
  %65 = bitcast %"class.blink::SVGInlineTextBox"** %23 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %57, align 8
  store i64 %64, i64* %65, align 8
  br label %167

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 1
  %69 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 2
  %70 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %1, i64 -1
  %71 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_T_(%"class.blink::SVGInlineTextBox"** %0, %"class.blink::SVGInlineTextBox"** %68, %"class.blink::SVGInlineTextBox"** %69, %"class.blink::SVGInlineTextBox"** %70, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %167

72:                                               ; preds = %3
  %73 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 1
  %74 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 2
  %75 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 3
  %76 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %1, i64 -1
  %77 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEjT0_SB_SB_SB_SB_T_(%"class.blink::SVGInlineTextBox"** %0, %"class.blink::SVGInlineTextBox"** %73, %"class.blink::SVGInlineTextBox"** %74, %"class.blink::SVGInlineTextBox"** %75, %"class.blink::SVGInlineTextBox"** %76, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %167

78:                                               ; preds = %3
  %79 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 2
  %80 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 1
  %81 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %82 = bitcast %"class.blink::SVGInlineTextBox"** %80 to %"class.blink::InlineTextBox"**
  %83 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %82, align 8
  %84 = bitcast %"class.blink::SVGInlineTextBox"** %0 to %"class.blink::InlineTextBox"**
  %85 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %84, align 8
  %86 = tail call zeroext i1 %81(%"class.blink::InlineTextBox"* %83, %"class.blink::InlineTextBox"* %85) #11
  %87 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %88 = bitcast %"class.blink::SVGInlineTextBox"** %79 to %"class.blink::InlineTextBox"**
  %89 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %88, align 8
  %90 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %82, align 8
  %91 = tail call zeroext i1 %87(%"class.blink::InlineTextBox"* %89, %"class.blink::InlineTextBox"* %90) #11
  br i1 %86, label %107, label %92

92:                                               ; preds = %78
  br i1 %91, label %93, label %125

93:                                               ; preds = %92
  %94 = bitcast %"class.blink::SVGInlineTextBox"** %80 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.blink::SVGInlineTextBox"** %79 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %94, align 8
  store i64 %95, i64* %96, align 8
  %98 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %99 = inttoptr i64 %97 to %"class.blink::InlineTextBox"*
  %100 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %84, align 8
  %101 = tail call zeroext i1 %98(%"class.blink::InlineTextBox"* %99, %"class.blink::InlineTextBox"* %100) #11
  br i1 %101, label %102, label %125

102:                                              ; preds = %93
  %103 = bitcast %"class.blink::SVGInlineTextBox"** %0 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8
  %105 = shufflevector <2 x i64> %104, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %106 = bitcast %"class.blink::SVGInlineTextBox"** %0 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %106, align 8
  br label %125

107:                                              ; preds = %78
  %108 = bitcast %"class.blink::SVGInlineTextBox"** %0 to i64*
  %109 = load i64, i64* %108, align 8
  br i1 %91, label %110, label %113

110:                                              ; preds = %107
  %111 = bitcast %"class.blink::SVGInlineTextBox"** %79 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %108, align 8
  store i64 %109, i64* %111, align 8
  br label %125

113:                                              ; preds = %107
  %114 = bitcast %"class.blink::SVGInlineTextBox"** %80 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %108, align 8
  store i64 %109, i64* %114, align 8
  %116 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %117 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %88, align 8
  %118 = inttoptr i64 %109 to %"class.blink::InlineTextBox"*
  %119 = tail call zeroext i1 %116(%"class.blink::InlineTextBox"* %117, %"class.blink::InlineTextBox"* %118) #11
  br i1 %119, label %120, label %125

120:                                              ; preds = %113
  %121 = bitcast %"class.blink::SVGInlineTextBox"** %80 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8
  %123 = shufflevector <2 x i64> %122, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %124 = bitcast %"class.blink::SVGInlineTextBox"** %80 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %124, align 8
  br label %125

125:                                              ; preds = %92, %93, %102, %110, %113, %120
  %126 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %0, i64 3
  %127 = icmp eq %"class.blink::SVGInlineTextBox"** %126, %1
  br i1 %127, label %167, label %128

128:                                              ; preds = %125, %160
  %129 = phi %"class.blink::SVGInlineTextBox"** [ %162, %160 ], [ %126, %125 ]
  %130 = phi i32 [ %161, %160 ], [ 0, %125 ]
  %131 = phi %"class.blink::SVGInlineTextBox"** [ %129, %160 ], [ %79, %125 ]
  %132 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %133 = bitcast %"class.blink::SVGInlineTextBox"** %129 to %"class.blink::InlineTextBox"**
  %134 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %133, align 8
  %135 = bitcast %"class.blink::SVGInlineTextBox"** %131 to %"class.blink::InlineTextBox"**
  %136 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %135, align 8
  %137 = tail call zeroext i1 %132(%"class.blink::InlineTextBox"* %134, %"class.blink::InlineTextBox"* %136) #11
  br i1 %137, label %138, label %160

138:                                              ; preds = %128
  %139 = bitcast %"class.blink::SVGInlineTextBox"** %129 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = inttoptr i64 %140 to %"class.blink::InlineTextBox"*
  br label %142

142:                                              ; preds = %149, %138
  %143 = phi %"class.blink::SVGInlineTextBox"** [ %129, %138 ], [ %144, %149 ]
  %144 = phi %"class.blink::SVGInlineTextBox"** [ %131, %138 ], [ %151, %149 ]
  %145 = bitcast %"class.blink::SVGInlineTextBox"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.blink::SVGInlineTextBox"** %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = icmp eq %"class.blink::SVGInlineTextBox"** %144, %0
  br i1 %148, label %155, label %149

149:                                              ; preds = %142
  %150 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %151 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %144, i64 -1
  %152 = bitcast %"class.blink::SVGInlineTextBox"** %151 to %"class.blink::InlineTextBox"**
  %153 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %152, align 8
  %154 = tail call zeroext i1 %150(%"class.blink::InlineTextBox"* %141, %"class.blink::InlineTextBox"* %153) #11
  br i1 %154, label %142, label %155

155:                                              ; preds = %142, %149
  %156 = phi %"class.blink::SVGInlineTextBox"** [ %144, %149 ], [ %0, %142 ]
  %157 = bitcast %"class.blink::SVGInlineTextBox"** %156 to i64*
  store i64 %140, i64* %157, align 8
  %158 = add i32 %130, 1
  %159 = icmp eq i32 %158, 8
  br i1 %159, label %164, label %160

160:                                              ; preds = %155, %128
  %161 = phi i32 [ %158, %155 ], [ %130, %128 ]
  %162 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %129, i64 1
  %163 = icmp eq %"class.blink::SVGInlineTextBox"** %162, %1
  br i1 %163, label %167, label %128

164:                                              ; preds = %155
  %165 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %129, i64 1
  %166 = icmp eq %"class.blink::SVGInlineTextBox"** %165, %1
  br label %167

167:                                              ; preds = %160, %164, %125, %63, %56, %53, %45, %36, %35, %8, %16, %3, %3, %72, %67
  %168 = phi i1 [ true, %72 ], [ true, %67 ], [ true, %3 ], [ true, %3 ], [ true, %16 ], [ true, %8 ], [ true, %35 ], [ true, %36 ], [ true, %45 ], [ true, %53 ], [ true, %56 ], [ true, %63 ], [ true, %125 ], [ %166, %164 ], [ true, %160 ]
  ret i1 %168
}

declare zeroext i1 @_ZNK5blink16SVGInlineTextBox43MapStartEndPositionsIntoFragmentCoordinatesERKNS_15SVGTextFragmentERiS4_(%"class.blink::SVGInlineTextBox"*, %"struct.blink::SVGTextFragment"* dereferenceable(104), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc <2 x float> @_ZN5blinkL22CalculateGlyphPositionEPKNS_9QueryDataERKNS_15SVGTextFragmentEj(%"struct.blink::QueryData"* nocapture readonly, %"struct.blink::SVGTextFragment"* dereferenceable(104), i32) unnamed_addr #5 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %6 = alloca %"class.blink::AffineTransform", align 8
  %7 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 2
  %8 = bitcast %"class.blink::LineLayoutSVGInlineText"* %7 to %"class.blink::LayoutSVGInlineText"**
  %9 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %11, i64 %14
  %16 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 1073741823
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %53, label %20

20:                                               ; preds = %3, %20
  %21 = phi %"class.blink::SVGTextMetrics"* [ %25, %20 ], [ %15, %3 ]
  %22 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %21, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %21, i64 1
  br i1 %24, label %20, label %26

26:                                               ; preds = %20, %33
  %27 = phi i32 [ %31, %33 ], [ 0, %20 ]
  %28 = phi %"class.blink::SVGTextMetrics"* [ %34, %33 ], [ %15, %20 ]
  %29 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, %27
  %32 = icmp ugt i32 %31, %2
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %28, i64 1
  %35 = icmp ult i32 %31, %18
  br i1 %35, label %26, label %36

36:                                               ; preds = %33, %26
  %37 = phi %"class.blink::SVGTextMetrics"* [ %28, %26 ], [ %34, %33 ]
  %38 = icmp eq %"class.blink::SVGTextMetrics"* %21, %37
  br i1 %38, label %53, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 0
  %41 = load i8, i8* %40, align 8, !range !4
  %42 = icmp eq i8 %41, 0
  br label %43

43:                                               ; preds = %43, %39
  %44 = phi float [ 0.000000e+00, %39 ], [ %50, %43 ]
  %45 = phi %"class.blink::SVGTextMetrics"* [ %21, %39 ], [ %51, %43 ]
  %46 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %45, i64 0, i32 1
  %47 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %45, i64 0, i32 0
  %48 = select i1 %42, float* %47, float* %46
  %49 = load float, float* %48, align 4
  %50 = fadd float %44, %49
  %51 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %45, i64 1
  %52 = icmp eq %"class.blink::SVGTextMetrics"* %51, %37
  br i1 %52, label %53, label %43

53:                                               ; preds = %43, %3, %36
  %54 = phi float [ 0.000000e+00, %36 ], [ 0.000000e+00, %3 ], [ %50, %43 ]
  %55 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %55, align 8
  %56 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %56, align 4
  %57 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 3
  %58 = bitcast %"class.blink::SVGInlineTextBox"** %57 to %"class.blink::InlineBox"**
  %59 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %59, i64 0, i32 7, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 4
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"struct.blink::QueryData", %"struct.blink::QueryData"* %0, i64 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !4
  br i1 %63, label %74, label %66

66:                                               ; preds = %53
  %67 = icmp eq i8 %65, 0
  %68 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 6
  %69 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 5
  %70 = load float, float* %69, align 4
  %71 = load float, float* %68, align 4
  %72 = select i1 %67, float %70, float %71
  %73 = fsub float %72, %54
  br label %74

74:                                               ; preds = %66, %53
  %75 = phi float [ %73, %66 ], [ %54, %53 ]
  %76 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 3
  %77 = bitcast float* %76 to <2 x float>*
  %78 = load <2 x float>, <2 x float>* %77, align 4
  %79 = icmp eq i8 %65, 0
  %80 = extractelement <2 x float> %78, i32 0
  br i1 %79, label %86, label %81

81:                                               ; preds = %74
  %82 = fadd float %80, 0.000000e+00
  %83 = insertelement <2 x float> undef, float %82, i32 0
  %84 = extractelement <2 x float> %78, i32 1
  %85 = fadd float %75, %84
  br label %91

86:                                               ; preds = %74
  %87 = fadd float %75, %80
  %88 = insertelement <2 x float> undef, float %87, i32 0
  %89 = extractelement <2 x float> %78, i32 1
  %90 = fadd float %89, 0.000000e+00
  br label %91

91:                                               ; preds = %81, %86
  %92 = phi float [ %85, %81 ], [ %90, %86 ]
  %93 = phi <2 x float> [ %83, %81 ], [ %88, %86 ]
  %94 = insertelement <2 x float> %93, float %92, i32 1
  store <2 x float> %94, <2 x float>* %4, align 8
  %95 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 9
  %96 = load float, float* %95, align 8
  %97 = fcmp une float %96, 1.000000e+00
  br i1 %97, label %104, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  %100 = tail call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* %99) #11
  br i1 %100, label %123, label %101

101:                                              ; preds = %98
  %102 = bitcast float* %76 to <2 x float>*
  %103 = load <2 x float>, <2 x float>* %102, align 4, !noalias !17
  br label %104

104:                                              ; preds = %101, %91
  %105 = phi <2 x float> [ %103, %101 ], [ %78, %91 ]
  %106 = bitcast %"class.blink::AffineTransform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %106) #11
  %107 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %6, i64 0, i32 0, i64 4
  %108 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  %109 = bitcast %"class.blink::AffineTransform"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* align 8 %109, i64 48, i1 false) #11
  %110 = bitcast double* %107 to <2 x double>*
  %111 = load <2 x double>, <2 x double>* %110, align 8, !alias.scope !17
  %112 = fpext <2 x float> %105 to <2 x double>
  %113 = fadd <2 x double> %111, %112
  %114 = bitcast double* %107 to <2 x double>*
  store <2 x double> %113, <2 x double>* %114, align 8, !alias.scope !17
  %115 = extractelement <2 x float> %105, i32 0
  %116 = fsub float -0.000000e+00, %115
  %117 = fpext float %116 to double
  %118 = extractelement <2 x float> %105, i32 1
  %119 = fsub float -0.000000e+00, %118
  %120 = fpext float %119 to double
  %121 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %6, double %117, double %120) #11
  %122 = call <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"* nonnull %6, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %5) #11
  store <2 x float> %122, <2 x float>* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %106) #11
  br label %123

123:                                              ; preds = %98, %104
  %124 = phi <2 x float> [ %94, %98 ], [ %122, %104 ]
  ret <2 x float> %124
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"*) local_unnamed_addr #6

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15SVGTextFragment27BuildTransformForTextOnPathEv(%"class.blink::AffineTransform"* noalias sret, %"struct.blink::SVGTextFragment"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::AffineTransform", align 8
  %4 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  %5 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 4
  %6 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 9
  %7 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -1, i64 48, i1 false)
  %8 = load float, float* %6, align 8
  %9 = fcmp une float %8, 1.000000e+00
  %10 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  br i1 %9, label %14, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::AffineTransform"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %13, i64 48, i1 false)
  br label %39

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 0
  %16 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 3
  %17 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 4
  %18 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -1, i64 48, i1 false) #11, !alias.scope !20
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %3) #11
  %19 = load float, float* %6, align 8, !noalias !20
  %20 = fcmp une float %19, 1.000000e+00
  br i1 %20, label %21, label %36

21:                                               ; preds = %14
  %22 = fpext float %19 to double
  %23 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 10
  %24 = load float, float* %23, align 4, !noalias !20
  %25 = fpext float %24 to double
  call void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"* nonnull %3, double %22, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %25, double 0.000000e+00) #11
  %26 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8, !noalias !20
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = bitcast %"class.blink::AffineTransform"* %3 to i64*
  %31 = load i64, i64* %30, align 8, !alias.scope !20
  %32 = bitcast double* %16 to i64*
  store i64 %31, i64* %32, align 8, !alias.scope !20
  store double 1.000000e+00, double* %15, align 8, !alias.scope !20
  %33 = bitcast double* %17 to i64*
  %34 = load i64, i64* %33, align 8, !alias.scope !20
  %35 = bitcast double* %18 to i64*
  store i64 %34, i64* %35, align 8, !alias.scope !20
  store double 0.000000e+00, double* %17, align 8, !alias.scope !20
  br label %36

36:                                               ; preds = %14, %21, %29
  %37 = bitcast %"class.blink::AffineTransform"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %37, i64 48, i1 false) #11
  %38 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"* %0, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %3) #11
  br label %39

39:                                               ; preds = %36, %12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  %40 = call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* %0) #11
  br i1 %40, label %57, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 3
  %43 = bitcast double* %5 to <2 x double>*
  %44 = load <2 x double>, <2 x double>* %43, align 8
  %45 = bitcast float* %42 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 4
  %47 = fpext <2 x float> %46 to <2 x double>
  %48 = fadd <2 x double> %44, %47
  %49 = bitcast double* %5 to <2 x double>*
  store <2 x double> %48, <2 x double>* %49, align 8
  %50 = extractelement <2 x float> %46, i32 0
  %51 = fsub float -0.000000e+00, %50
  %52 = fpext float %51 to double
  %53 = extractelement <2 x float> %46, i32 1
  %54 = fsub float -0.000000e+00, %53
  %55 = fpext float %54 to double
  %56 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* %0, double %52, double %55) #11
  br label %57

57:                                               ; preds = %41, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15SVGTextFragment27BuildTransformForTextOnLineEv(%"class.blink::AffineTransform"* noalias sret, %"struct.blink::SVGTextFragment"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::AffineTransform", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  %6 = tail call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* %5) #11
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 3
  %10 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 4
  %11 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 5
  %12 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 -1, i64 48, i1 false) #11, !alias.scope !23
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #11
  %13 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 9
  %14 = load float, float* %13, align 8, !noalias !23
  %15 = fcmp une float %14, 1.000000e+00
  br i1 %15, label %16, label %76

16:                                               ; preds = %7
  %17 = fpext float %14 to double
  %18 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 10
  %19 = load float, float* %18, align 4, !noalias !23
  %20 = fpext float %19 to double
  tail call void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"* %0, double %17, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %20, double 0.000000e+00) #11
  %21 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %22 = load i32, i32* %21, align 8, !noalias !23
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %76

24:                                               ; preds = %16
  %25 = bitcast %"class.blink::AffineTransform"* %0 to i64*
  %26 = load i64, i64* %25, align 8, !alias.scope !23
  %27 = bitcast double* %9 to i64*
  store i64 %26, i64* %27, align 8, !alias.scope !23
  store double 1.000000e+00, double* %8, align 8, !alias.scope !23
  %28 = bitcast double* %10 to i64*
  %29 = load i64, i64* %28, align 8, !alias.scope !23
  %30 = bitcast double* %11 to i64*
  store i64 %29, i64* %30, align 8, !alias.scope !23
  store double 0.000000e+00, double* %10, align 8, !alias.scope !23
  br label %76

31:                                               ; preds = %2
  %32 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 4
  %34 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %34, i64 48, i1 false)
  %35 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 3
  %36 = bitcast double* %33 to <2 x double>*
  %37 = load <2 x double>, <2 x double>* %36, align 8
  %38 = bitcast float* %35 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  %40 = fpext <2 x float> %39 to <2 x double>
  %41 = fadd <2 x double> %37, %40
  %42 = bitcast double* %33 to <2 x double>*
  store <2 x double> %41, <2 x double>* %42, align 8
  %43 = extractelement <2 x float> %39, i32 0
  %44 = fsub float -0.000000e+00, %43
  %45 = fpext float %44 to double
  %46 = extractelement <2 x float> %39, i32 1
  %47 = fsub float -0.000000e+00, %46
  %48 = fpext float %47 to double
  %49 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %3, double %45, double %48) #11
  %50 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %4, i64 0, i32 0, i64 0
  %52 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %4, i64 0, i32 0, i64 3
  %53 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %4, i64 0, i32 0, i64 4
  %54 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %4, i64 0, i32 0, i64 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -1, i64 48, i1 false) #11, !alias.scope !26
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %4) #11
  %55 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 9
  %56 = load float, float* %55, align 8, !noalias !26
  %57 = fcmp une float %56, 1.000000e+00
  br i1 %57, label %58, label %73

58:                                               ; preds = %31
  %59 = fpext float %56 to double
  %60 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 10
  %61 = load float, float* %60, align 4, !noalias !26
  %62 = fpext float %61 to double
  call void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"* nonnull %4, double %59, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %62, double 0.000000e+00) #11
  %63 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %64 = load i32, i32* %63, align 8, !noalias !26
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %58
  %67 = bitcast %"class.blink::AffineTransform"* %4 to i64*
  %68 = load i64, i64* %67, align 8, !alias.scope !26
  %69 = bitcast double* %52 to i64*
  store i64 %68, i64* %69, align 8, !alias.scope !26
  store double 1.000000e+00, double* %51, align 8, !alias.scope !26
  %70 = bitcast double* %53 to i64*
  %71 = load i64, i64* %70, align 8, !alias.scope !26
  %72 = bitcast double* %54 to i64*
  store i64 %71, i64* %72, align 8, !alias.scope !26
  store double 0.000000e+00, double* %53, align 8, !alias.scope !26
  br label %73

73:                                               ; preds = %31, %58, %66
  %74 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform11PreMultiplyERKS0_(%"class.blink::AffineTransform"* nonnull %3, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #11
  %75 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* nonnull align 8 %32, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #11
  br label %76

76:                                               ; preds = %24, %16, %7, %73
  ret void
}

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #6

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #6

declare void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"*, double, double, double, double, double, double) local_unnamed_addr #6

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform11PreMultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #6

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #6

declare double @_ZNK5blink15AffineTransform6XScaleEv(%"class.blink::AffineTransform"*) local_unnamed_addr #6

declare double @_ZNK5blink15AffineTransform6YScaleEv(%"class.blink::AffineTransform"*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare double @atan2(double, double) local_unnamed_addr #10

declare { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #6

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #6

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #6

declare <2 x float> @_ZNK5blink14SVGTextMetrics7ExtentsEv(%"class.blink::SVGTextMetrics"*) local_unnamed_addr #6

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #6

declare i32 @_ZNK5blink10LayoutText18ResolvedTextLengthEv(%"class.blink::LayoutText"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL25CollectTextBoxesInFlowBoxEPNS_13InlineFlowBoxERN3WTF6VectorIPNS_16SVGInlineTextBoxELj0ENS2_18PartitionAllocatorEEE(%"class.blink::InlineFlowBox"* readonly, %"class.WTF::Vector.1691"* dereferenceable(16)) unnamed_addr #0 {
  %3 = alloca %"class.blink::SVGInlineTextBox"*, align 8
  %4 = icmp eq %"class.blink::InlineFlowBox"* %0, null
  br i1 %4, label %61, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %0, i64 0, i32 2
  %7 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %6, align 8
  %8 = icmp eq %"class.blink::InlineBox"* %7, null
  br i1 %8, label %61, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::SVGInlineTextBox"** %3 to i8*
  %11 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %1, i64 0, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %9, %57
  %15 = phi %"class.blink::InlineBox"* [ %7, %9 ], [ %59, %57 ]
  %16 = bitcast %"class.blink::InlineBox"* %15 to i1 (%"class.blink::InlineBox"*)***
  %17 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %17, i64 14
  %19 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %18, align 8
  %20 = call zeroext i1 %19(%"class.blink::InlineBox"* nonnull %15) #11
  br i1 %20, label %21, label %35

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %15, i64 0, i32 4, i32 0
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 16777216
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %29, label %57

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %57, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::InlineBox"* %15 to %"class.blink::InlineFlowBox"*
  call fastcc void @_ZN5blinkL25CollectTextBoxesInFlowBoxEPNS_13InlineFlowBoxERN3WTF6VectorIPNS_16SVGInlineTextBoxELj0ENS2_18PartitionAllocatorEEE(%"class.blink::InlineFlowBox"* nonnull %34, %"class.WTF::Vector.1691"* dereferenceable(16) %1)
  br label %57

35:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store %"class.blink::SVGInlineTextBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGInlineTextBox"*), %"class.blink::SVGInlineTextBox"** %3, align 8
  %36 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %16, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %36, i64 17
  %38 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %37, align 8
  %39 = call zeroext i1 %38(%"class.blink::InlineBox"* nonnull %15) #11
  %40 = bitcast %"class.blink::InlineBox"* %15 to %"class.blink::SVGInlineTextBox"*
  %41 = select i1 %39, %"class.blink::SVGInlineTextBox"* %40, %"class.blink::SVGInlineTextBox"* null
  store %"class.blink::SVGInlineTextBox"* %41, %"class.blink::SVGInlineTextBox"** %3, align 8
  %42 = icmp eq %"class.blink::SVGInlineTextBox"* %41, null
  %43 = ptrtoint %"class.blink::SVGInlineTextBox"* %41 to i64
  br i1 %42, label %56, label %44

44:                                               ; preds = %35
  %45 = load i32, i32* %11, align 4
  %46 = load i32, i32* %12, align 8
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %55, label %48, !prof !2

48:                                               ; preds = %44
  %49 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %13, align 8
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %49, i64 %50
  %52 = bitcast %"class.blink::SVGInlineTextBox"** %51 to i64*
  store i64 %43, i64* %52, align 8
  %53 = load i32, i32* %11, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %11, align 4
  br label %56

55:                                               ; preds = %44
  call void @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1691"* %1, %"class.blink::SVGInlineTextBox"** nonnull dereferenceable(8) %3) #11
  br label %56

56:                                               ; preds = %55, %48, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %57

57:                                               ; preds = %21, %29, %56, %33
  %58 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %15, i64 0, i32 1
  %59 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %58, align 8
  %60 = icmp eq %"class.blink::InlineBox"* %59, null
  br i1 %60, label %61, label %14

61:                                               ; preds = %57, %5, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1691"*, %"class.blink::SVGInlineTextBox"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::SVGInlineTextBox"** @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_(%"class.WTF::Vector.1691"* %0, i32 %5, %"class.blink::SVGInlineTextBox"** %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %8, i64 %10
  %12 = bitcast %"class.blink::SVGInlineTextBox"** %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::SVGInlineTextBox"** %11 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i32, i32* %3, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %3, align 4
  ret void
}

declare dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() local_unnamed_addr #6

declare zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"*, %"class.blink::FloatPoint"* dereferenceable(8), i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blinkL23LogicalOffsetInTextNodeENS_23LineLayoutSVGInlineTextEPKNS_16SVGInlineTextBoxEj(%"class.blink::LayoutObject"* nocapture readonly, %"class.blink::SVGInlineTextBox"*, i32) unnamed_addr #0 {
  %4 = alloca i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, align 8
  %5 = alloca %"class.blink::SVGInlineTextBox"*, align 8
  %6 = alloca %"class.WTF::Vector.1691", align 8
  %7 = bitcast %"class.WTF::Vector.1691"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %6, i64 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = bitcast %"class.WTF::Vector.1691"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false)
  %14 = load i96, i96* %12, align 4
  %15 = and i96 %14, 268435456
  %16 = icmp eq i96 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #11
  br label %22

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 1, i32 6
  %21 = bitcast %"class.blink::UntracedMember"* %20 to %"class.blink::InlineTextBoxList"*
  br label %22

22:                                               ; preds = %19, %17
  %23 = phi %"class.blink::InlineTextBoxList"* [ %18, %17 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %24, align 8
  %26 = icmp eq %"class.blink::InlineTextBox"* %25, null
  br i1 %26, label %55, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::SVGInlineTextBox"** %5 to i8*
  %29 = bitcast %"class.blink::SVGInlineTextBox"** %5 to %"class.blink::InlineTextBox"**
  br label %30

30:                                               ; preds = %48, %27
  %31 = phi i32 [ 0, %27 ], [ %50, %48 ]
  %32 = phi i32 [ 0, %27 ], [ %49, %48 ]
  %33 = phi %"class.blink::InlineTextBox"* [ %25, %27 ], [ %46, %48 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  store %"class.blink::InlineTextBox"* %33, %"class.blink::InlineTextBox"** %29, align 8
  %34 = icmp eq i32 %32, %31
  br i1 %34, label %43, label %35, !prof !2

35:                                               ; preds = %30
  %36 = ptrtoint %"class.blink::InlineTextBox"* %33 to i64
  %37 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %8, align 8
  %38 = zext i32 %32 to i64
  %39 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %37, i64 %38
  %40 = bitcast %"class.blink::SVGInlineTextBox"** %39 to i64*
  store i64 %36, i64* %40, align 8
  %41 = load i32, i32* %10, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %10, align 4
  br label %44

43:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1691"* nonnull %6, %"class.blink::SVGInlineTextBox"** nonnull dereferenceable(8) %5) #11
  br label %44

44:                                               ; preds = %43, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  %45 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %33, i64 0, i32 2
  %46 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %45, align 8
  %47 = icmp eq %"class.blink::InlineTextBox"* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = load i32, i32* %10, align 4
  %50 = load i32, i32* %9, align 8
  br label %30

51:                                               ; preds = %44
  %52 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %8, align 8
  %53 = load i32, i32* %10, align 4
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %51, %22
  %56 = phi i64 [ %54, %51 ], [ 0, %22 ]
  %57 = phi %"class.blink::SVGInlineTextBox"** [ %52, %51 ], [ null, %22 ]
  %58 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %57, i64 %56
  %59 = bitcast i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #11
  store i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBox14CompareByStartEPKS0_S2_, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPNS1_16SVGInlineTextBoxEEEvT0_SB_T_(%"class.blink::SVGInlineTextBox"** %57, %"class.blink::SVGInlineTextBox"** %58, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  %60 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %8, align 8
  %61 = load i32, i32* %10, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %60, i64 %62
  %64 = icmp eq i32 %61, 0
  br i1 %64, label %79, label %65

65:                                               ; preds = %55, %69
  %66 = phi %"class.blink::SVGInlineTextBox"** [ %70, %69 ], [ %60, %55 ]
  %67 = load %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %66, align 8
  %68 = icmp eq %"class.blink::SVGInlineTextBox"* %67, %1
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %66, i64 1
  %71 = icmp ult %"class.blink::SVGInlineTextBox"** %70, %63
  br i1 %71, label %65, label %79

72:                                               ; preds = %65
  %73 = ptrtoint %"class.blink::SVGInlineTextBox"** %66 to i64
  %74 = ptrtoint %"class.blink::SVGInlineTextBox"** %60 to i64
  %75 = sub i64 %73, %74
  %76 = lshr exact i64 %75, 3
  %77 = trunc i64 %76 to i32
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %95, label %79

79:                                               ; preds = %69, %55, %72
  %80 = phi i32 [ %77, %72 ], [ -1, %55 ], [ -1, %69 ]
  br label %81

81:                                               ; preds = %79, %81
  %82 = phi i32 [ %91, %81 ], [ %2, %79 ]
  %83 = phi i32 [ %84, %81 ], [ %80, %79 ]
  %84 = add i32 %83, -1
  %85 = call dereferenceable(8) %"class.blink::SVGInlineTextBox"** @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1691"* nonnull %6, i32 %84) #11
  %86 = bitcast %"class.blink::SVGInlineTextBox"** %85 to %"class.blink::InlineTextBox"**
  %87 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %87, i64 0, i32 4
  %89 = load i16, i16* %88, align 4
  %90 = zext i16 %89 to i32
  %91 = add i32 %82, %90
  %92 = icmp eq i32 %84, 0
  br i1 %92, label %93, label %81

93:                                               ; preds = %81
  %94 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %8, align 8
  br label %95

95:                                               ; preds = %93, %72
  %96 = phi %"class.blink::SVGInlineTextBox"** [ %60, %72 ], [ %94, %93 ]
  %97 = phi i32 [ %2, %72 ], [ %91, %93 ]
  %98 = icmp eq %"class.blink::SVGInlineTextBox"** %96, null
  %99 = bitcast %"class.blink::SVGInlineTextBox"** %96 to i8*
  br i1 %98, label %105, label %100, !prof !3

100:                                              ; preds = %95
  %101 = load i32, i32* %10, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103, !prof !2

103:                                              ; preds = %100
  store i32 0, i32* %10, align 4
  br label %104

104:                                              ; preds = %103, %100
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %99) #11
  store %"class.blink::SVGInlineTextBox"** null, %"class.blink::SVGInlineTextBox"*** %8, align 8
  br label %105

105:                                              ; preds = %95, %104
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::SVGInlineTextBox"** @_ZN3WTF6VectorIPN5blink16SVGInlineTextBoxELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1691"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1691", %"class.WTF::Vector.1691"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SVGInlineTextBox"**, %"class.blink::SVGInlineTextBox"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::SVGInlineTextBox"*, %"class.blink::SVGInlineTextBox"** %24, i64 %25
  ret %"class.blink::SVGInlineTextBox"** %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink15SVGTextFragment22BuildFragmentTransformENS0_13TransformTypeE: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink15SVGTextFragment22BuildFragmentTransformENS0_13TransformTypeE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink15SVGTextFragment22BuildFragmentTransformENS0_13TransformTypeE: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink15SVGTextFragment22BuildFragmentTransformENS0_13TransformTypeE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink15SVGTextFragment28BuildNormalFragmentTransformEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink15SVGTextFragment28BuildNormalFragmentTransformEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink15SVGTextFragment22BuildFragmentTransformENS0_13TransformTypeE: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink15SVGTextFragment22BuildFragmentTransformENS0_13TransformTypeE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink15SVGTextFragment22BuildFragmentTransformENS0_13TransformTypeE: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink15SVGTextFragment22BuildFragmentTransformENS0_13TransformTypeE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv"}
