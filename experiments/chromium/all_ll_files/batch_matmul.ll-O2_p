; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/batch_matmul.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/batch_matmul.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.ruy::KernelParamsFloat" = type <{ float*, float*, float*, float*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, i8, [3 x i8], [16 x float], [256 x float], [4 x i8] }>
%"struct.ruy::KernelParamsFloat.42" = type <{ float*, float*, float*, float*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, i8, [3 x i8], [8 x float], [64 x float], [4 x i8] }>
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::ops::builtin::batch_matmul::OpContext" = type { %struct.TfLiteBatchMatMulParams*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor* }
%struct.TfLiteBatchMatMulParams = type { i8, i8 }
%"struct.tflite::ops::builtin::batch_matmul::OpData" = type <{ i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%"struct.tflite::TransposeParams" = type { i8, [5 x i32] }
%"class.tflite::CpuBackendContext" = type <{ %"class.tflite::TfLiteInternalBackendContext", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.14", i32, i8, [3 x i8] }>
%"class.tflite::TfLiteInternalBackendContext" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ruy::Context"* }
%"class.ruy::Context" = type { %"class.ruy::CtxImpl"* }
%"class.ruy::CtxImpl" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gemmlowp::GemmContext"* }
%"class.gemmlowp::GemmContext" = type { %"class.gemmlowp::MultiThreadGemmContext" }
%"class.gemmlowp::MultiThreadGemmContext" = type { %"class.gemmlowp::MultiThreadGemmContextBase", %"class.gemmlowp::WorkersPool" }
%"class.gemmlowp::MultiThreadGemmContextBase" = type { %"class.gemmlowp::SingleThreadGemmContext.base", i32 }
%"class.gemmlowp::SingleThreadGemmContext.base" = type <{ %"class.gemmlowp::Allocator", i32, i32, float }>
%"class.gemmlowp::Allocator" = type { i8, i64, i8*, i64, i64, [5 x i64], i64 }
%"class.gemmlowp::WorkersPool" = type { %"class.std::__1::vector", %"class.gemmlowp::BlockingCounter", %"class.gemmlowp::Allocator" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gemmlowp::Worker"**, %"class.gemmlowp::Worker"**, %"class.std::__1::__compressed_pair.25" }
%"class.gemmlowp::Worker" = type { i64, %"struct.gemmlowp::Task"*, %union.pthread_cond_t, %union.pthread_mutex_t, %"struct.std::__1::atomic", %"class.gemmlowp::Allocator", %"class.gemmlowp::BlockingCounter"* }
%"struct.gemmlowp::Task" = type { i32 (...)**, %"class.gemmlowp::Allocator"* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.17, %union.anon.18, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.17 = type { i64 }
%union.anon.18 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.gemmlowp::Worker"** }
%"class.gemmlowp::BlockingCounter" = type { %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"struct.tflite::NdArrayDesc" = type { [5 x i32], [5 x i32] }
%"struct.tflite::FullyConnectedParams" = type { i32, i32, i32, i32, i32, i32, i32, float, float, i8, i8, i8 }
%"struct.tflite::cpu_backend_gemm::MatrixParams" = type <{ i32, i32, i32, float, i8, [3 x i8] }>
%"struct.tflite::cpu_backend_gemm::GemmParams" = type { float, i32, float*, i32*, float*, float, float }
%"struct.ruy::Mat" = type <{ %"class.ruy::detail::ConstCheckingPtr", %"struct.ruy::MatLayout", float, i8, [3 x i8] }>
%"class.ruy::detail::ConstCheckingPtr" = type { float* }
%"struct.ruy::MatLayout" = type <{ i32, i32, i32, i8, [3 x i8] }>
%"class.ruy::MulParams" = type { float*, float, i32, float*, i32*, float, float }
%"class.ruy::Ctx" = type { i8 }
%"struct.ruy::TrMulParams" = type { i8, %"class.ruy::SidePair", void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)*, %"class.ruy::SidePair.37", %"struct.ruy::EMat", %"class.ruy::SidePair.35", %"class.ruy::SidePair.38", i8* }
%"class.ruy::SidePair" = type { [2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*] }
%"struct.ruy::PEMat" = type <{ %"struct.ruy::Type", [5 x i8], i8*, %"struct.ruy::Type", [5 x i8], i8*, %"struct.ruy::PMatLayout", i32, [4 x i8] }>
%"struct.ruy::Type" = type { i8, i8, i8 }
%"struct.ruy::PMatLayout" = type { i32, i32, i32, i8, %"struct.ruy::KernelLayout" }
%"struct.ruy::KernelLayout" = type { i8, i8, i8 }
%"class.ruy::SidePair.36" = type { [2 x i32] }
%"class.ruy::SidePair.37" = type { [2 x %"struct.ruy::EMat"] }
%"struct.ruy::EMat" = type <{ %"struct.ruy::Type", [5 x i8], i8*, %"struct.ruy::MatLayout", i32, i8, [3 x i8] }>
%"class.ruy::SidePair.35" = type { [2 x %"struct.ruy::PEMat"] }
%"class.ruy::SidePair.38" = type { [2 x i8] }
%"class.ruy::PrepackedCache" = type { %"class.std::__1::unordered_map", i32, i32, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.45", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.61", [4 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i64 }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { float }
%"struct.ruy::PMat" = type <{ float*, float*, %"struct.ruy::PMatLayout", i32, [4 x i8] }>
%"struct.ruy::Kernel" = type { i8 }
%"struct.tflite::cpu_backend_gemm::MatrixParams.88" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"struct.tflite::cpu_backend_gemm::MatrixParams.90" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.tflite::cpu_backend_gemm::GemmParams.92" = type { i32, i32, i32*, i32*, i32*, i32, i32 }
%"struct.ruy::Mat.99" = type <{ %"class.ruy::detail::ConstCheckingPtr.95", %"struct.ruy::MatLayout", i8, i8, [6 x i8] }>
%"class.ruy::detail::ConstCheckingPtr.95" = type { i8* }
%"struct.ruy::Mat.100" = type <{ %"class.ruy::detail::ConstCheckingPtr.97", %"struct.ruy::MatLayout", i32, i8, [3 x i8] }>
%"class.ruy::detail::ConstCheckingPtr.97" = type { i32* }
%"class.ruy::MulParams.98" = type { i32*, i32, i32, i32*, i32*, i32, i32 }
%"struct.ruy::KernelParams8bit" = type <{ i32*, i32*, i32*, i8*, i32*, i32*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], [16 x i32], [1024 x i8], [16 x i32], [16 x i32], [4 x i8] }>
%"struct.ruy::PMat.101" = type <{ i8*, i32*, %"struct.ruy::PMatLayout", i32, [4 x i8] }>
%"struct.ruy::Kernel.102" = type { i8 }
%"struct.ruy::KernelParams8bit.106" = type <{ i32*, i32*, i32*, i8*, i32*, i32*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], [8 x i32], [256 x i8], [8 x i32], [8 x i32], [4 x i8] }>
%"struct.tflite::cpu_backend_gemm::GemmParams.112" = type <{ i32, i32, i32*, i32*, i32*, i8, i8, [6 x i8] }>
%"class.ruy::MulParams.114" = type <{ i32*, i32, i32, i32*, i32*, i8, i8, [6 x i8] }>
%"struct.ruy::Kernel.115" = type { i8 }

$_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIfEEvPK12TfLiteTensorPKT_PS4_PS7_ = comdat any

$_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIaEEvPK12TfLiteTensorPKT_PS4_PS7_ = comdat any

$_ZN6tflite3ops7builtin12batch_matmul4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin12batch_matmul4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13optimized_ops9TransposeIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops13TransposeImplIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops11Transpose2DIfEEvRKNS_12RuntimeShapeEPKT_S4_PS5_ = comdat any

$_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops11Transpose2DIaEEvRKNS_12RuntimeShapeEPKT_S4_PS5_ = comdat any

$_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops11BatchMatMulERKNS_12RuntimeShapeEPKfS3_S5_S3_Pf = comdat any

$_ZN6tflite3ops7builtin12batch_matmul13EvalQuantizedILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_ = comdat any

$_ZN6tflite3ops7builtin12batch_matmul10EvalHybridILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_SI_SI_SI_SI_SI_ = comdat any

$_ZN6tflite3ops7builtin12batch_matmul8EvalInt8ILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextPKNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSD_SG_SD_PSE_ = comdat any

$_ZN6tflite13reference_ops11BatchMatMulERKNS_12RuntimeShapeEPKaS3_S5_PKfPKiPiS3_PfPb = comdat any

$_ZN6tflite13reference_ops11BatchMatMulERKNS_20FullyConnectedParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa = comdat any

$_ZN6tflite13optimized_ops11BatchMatMulERKNS_12RuntimeShapeEPKfS3_S5_S3_PfPNS_17CpuBackendContextE = comdat any

$_ZN6tflite3ops7builtin12batch_matmul13EvalQuantizedILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_ = comdat any

$_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIffffLNS0_18QuantizationFlavorE0EE3RunERKNS0_12MatrixParamsIfEEPKfS8_SA_S8_PfRKNS0_10GemmParamsIffLS3_0EEEPNS_17CpuBackendContextE = comdat any

$_ZN3ruy11DispatchMulILNS_4PathE26EfffNS_9MulParamsIffEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE = comdat any

$_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE = comdat any

$_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE16EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEii = comdat any

$_ZNK3ruy6KernelILNS_4PathE2EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE = comdat any

$_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EfffNS_9MulParamsIffEEE6SearchES1_PNS_11TrMulParamsE = comdat any

$_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EfffNS_9MulParamsIffEEEEvPNS_11TrMulParamsE = comdat any

$_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE8EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN6tflite3ops7builtin12batch_matmul10EvalHybridILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_SI_SI_SI_SI_SI_ = comdat any

$_ZN6tflite3ops7builtin12batch_matmul8EvalInt8ILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextPKNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSD_SG_SD_PSE_ = comdat any

$_ZN6tflite13optimized_ops11BatchMatMulERKNS_12RuntimeShapeEPKaS3_S5_PKfPKiPiS3_SA_PfPbPNS_17CpuBackendContextE = comdat any

$_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIaaiiLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIaEEPKaS8_SA_RKNS5_IiEEPiRKNS0_10GemmParamsIiiLS3_1EEEPNS_17CpuBackendContextE = comdat any

$_ZN3ruy11DispatchMulILNS_4PathE26EaaiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE = comdat any

$_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE16EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaiE3RunENS_6TuningERKNS_3MatIaEEPNS_4PMatIaEEii = comdat any

$_ZNK3ruy6KernelILNS_4PathE2EaaiNS_9MulParamsIiiEEE3RunERKNS_4PMatIaEES8_RKS3_iiiiPNS_3MatIiEE = comdat any

$_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EaaiNS_9MulParamsIiiEEE6SearchES1_PNS_11TrMulParamsE = comdat any

$_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE = comdat any

$_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN6tflite13optimized_ops11BatchMatMulERKNS_20FullyConnectedParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_PaPNS_17CpuBackendContextE = comdat any

$_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIaaiaLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIaEEPKaS8_SA_S8_PaRKNS0_10GemmParamsIiaLS3_1EEEPNS_17CpuBackendContextE = comdat any

$_ZN3ruy11DispatchMulILNS_4PathE26EaaaNS_9MulParamsIiaEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE = comdat any

$_ZN3ruy9RunKernelILNS_4PathE16EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy9RunKernelILNS_4PathE2EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZNK3ruy6KernelILNS_4PathE2EaaaNS_9MulParamsIiaEEE3RunERKNS_4PMatIaEES8_RKS3_iiiiPNS_3MatIaEE = comdat any

$_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EaaaNS_9MulParamsIiaEEE6SearchES1_PNS_11TrMulParamsE = comdat any

$_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EaaaNS_9MulParamsIiaEEEEvPNS_11TrMulParamsE = comdat any

$_ZN3ruy9RunKernelILNS_4PathE8EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [69 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/batch_matmul.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.9 = private unnamed_addr constant [66 x i8] c"lhs_data->type == kTfLiteFloat32 || lhs_data->type == kTfLiteInt8\00", align 1
@.str.10 = private unnamed_addr constant [66 x i8] c"rhs_data->type == kTfLiteFloat32 || rhs_data->type == kTfLiteInt8\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"NumDimensions(lhs_data) >= 2\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"NumDimensions(lhs_data) <= 4\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"NumDimensions(rhs_data) >= 2\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"NumDimensions(rhs_data) <= 4\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"rhs_dim\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"accum_dim_lhs\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"accum_dim_rhs\00", align 1
@.str.18 = private unnamed_addr constant [53 x i8] c"Can only transpose tensors with float and int8 type.\00", align 1
@_ZZN6tflite3ops7builtin25Register_BATCH_MATMUL_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin12batch_matmul4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin12batch_matmul4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12batch_matmul7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12batch_matmul4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin39Register_BATCH_MATMUL_GENERIC_OPTIMIZEDEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin12batch_matmul4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin12batch_matmul4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12batch_matmul7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12batch_matmul4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.21 = private unnamed_addr constant [47 x i8] c"Currently BatchMatMul doesn't support type: %s\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"Currently only hybrid and int8 quantization is supported.\0A\00", align 1
@_ZZN3ruy8PackImplILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEiiE7zerobuf = internal constant [16 x float] zeroinitializer, align 16
@__const._ZNK3ruy6KernelILNS_4PathE16EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE.params = private unnamed_addr constant %"struct.ruy::KernelParamsFloat" <{ float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [256 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZZN3ruy8PackImplILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEiiE7zerobuf = internal constant [8 x float] zeroinitializer, align 16
@__const._ZNK3ruy6KernelILNS_4PathE8EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE.params = private unnamed_addr constant %"struct.ruy::KernelParamsFloat.42" <{ float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", [8 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [64 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN6tflite3ops7builtin12batch_matmul8EvalInt8ILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextPKNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSD_SG_SD_PSE_.op_params = private unnamed_addr constant { i32, i32, i32, i32, i32, i32, i32, float, float, i8, i8, i8, [1 x i8] } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA" }, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden nonnull i8* @_ZN6tflite3ops7builtin12batch_matmul4InitEP13TfLiteContextPKcm(%struct.TfLiteContext*, i8* nocapture readnone, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 24) #10
  %5 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 24, i1 false)
  %6 = load i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, i32*)** %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 16
  %8 = bitcast i8* %7 to i32*
  %9 = tail call i32 %6(%struct.TfLiteContext* %0, i32 7, i32* %8) #11
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin12batch_matmul4FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #10
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin12batch_matmul18ResizeOutputTensorEP13TfLiteContextRKNS_12RuntimeShapeES7_bbiP12TfLiteTensor(%struct.TfLiteContext*, %"class.tflite::RuntimeShape"* nocapture readonly dereferenceable(32), %"class.tflite::RuntimeShape"* nocapture readonly dereferenceable(32), i1 zeroext, i1 zeroext, i32, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %8 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %5) #11
  %9 = add i32 %5, -2
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %15 = bitcast %union.anon* %13 to [5 x i32]*
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %19 = bitcast %union.anon* %17 to [5 x i32]*
  %20 = zext i32 %9 to i64
  br label %56

21:                                               ; preds = %56, %7
  %22 = add nsw i32 %5, -1
  %23 = select i1 %3, i32 %22, i32 %9
  %24 = select i1 %4, i32 %9, i32 %22
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, 5
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %29 = getelementptr inbounds %union.anon, %union.anon* %28, i64 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = sext i32 %23 to i64
  %32 = getelementptr inbounds i32, i32* %30, i64 %31
  %33 = bitcast %union.anon* %28 to [5 x i32]*
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* %33, i64 0, i64 %31
  %35 = select i1 %27, i32* %32, i32* %34
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %9 to i64
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %37
  store i32 %36, i32* %38, align 4
  %39 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp sgt i32 %40, 5
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %43 = getelementptr inbounds %union.anon, %union.anon* %42, i64 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = sext i32 %24 to i64
  %46 = getelementptr inbounds i32, i32* %44, i64 %45
  %47 = bitcast %union.anon* %42 to [5 x i32]*
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %47, i64 0, i64 %45
  %49 = select i1 %41, i32* %46, i32* %48
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %22 to i64
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %51
  store i32 %50, i32* %52, align 4
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %54 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %53, align 8
  %55 = tail call i32 %54(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %6, %struct.TfLiteIntArray* %8) #11
  ret i32 %55

56:                                               ; preds = %56, %11
  %57 = phi i64 [ 0, %11 ], [ %77, %56 ]
  %58 = load i32, i32* %12, align 8
  %59 = icmp sgt i32 %58, 5
  %60 = load i32*, i32** %14, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 %57
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %15, i64 0, i64 %57
  %63 = select i1 %59, i32* %61, i32* %62
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %16, align 8
  %66 = icmp sgt i32 %65, 5
  %67 = load i32*, i32** %18, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %57
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %57
  %70 = select i1 %66, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = icmp ne i32 %64, %71
  %73 = icmp eq i32 %64, 1
  %74 = and i1 %73, %72
  %75 = select i1 %74, i32 %71, i32 %64
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 %57
  store i32 %75, i32* %76, align 4
  %77 = add nuw nsw i64 %57, 1
  %78 = icmp eq i64 %77, %20
  br i1 %78, label %21, label %56
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin12batch_matmul21InitializeTemporariesEP13TfLiteContextP10TfLiteNodePNS2_9OpContextE(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture, %"struct.tflite::ops::builtin::batch_matmul::OpContext"* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca [1 x i32], align 4
  %5 = alloca [2 x i32], align 4
  %6 = alloca [1 x i32], align 4
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %8 = bitcast i8** %7 to %"struct.tflite::ops::builtin::batch_matmul::OpData"**
  %9 = load %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"struct.tflite::ops::builtin::batch_matmul::OpData"** %8, align 8
  %10 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpContext", %"struct.tflite::ops::builtin::batch_matmul::OpContext"* %2, i64 0, i32 1
  %11 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %10, align 8
  %12 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpContext", %"struct.tflite::ops::builtin::batch_matmul::OpContext"* %2, i64 0, i32 2
  %13 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  tail call void @TfLiteIntArrayFree(%struct.TfLiteIntArray* %15) #11
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %10, align 8
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 9
  br i1 %23, label %25, label %24

24:                                               ; preds = %3, %20
  br label %25

25:                                               ; preds = %20, %24
  %26 = phi i32 [ 2, %24 ], [ 7, %20 ]
  %27 = phi i1 [ false, %24 ], [ true, %20 ]
  %28 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %26) #11
  store %struct.TfLiteIntArray* %28, %struct.TfLiteIntArray** %14, align 8
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %11, i64 0, i32 2
  %30 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %13, i64 0, i32 2
  %34 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %33, align 8
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpContext", %"struct.tflite::ops::builtin::batch_matmul::OpContext"* %2, i64 0, i32 0
  %38 = load %struct.TfLiteBatchMatMulParams*, %struct.TfLiteBatchMatMulParams** %37, align 8
  %39 = getelementptr inbounds %struct.TfLiteBatchMatMulParams, %struct.TfLiteBatchMatMulParams* %38, i64 0, i32 0
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  %42 = add i32 %32, -2
  %43 = add nsw i32 %32, -1
  %44 = select i1 %41, i32 %43, i32 %42
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 1, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = select i1 %41, i32 %42, i32 %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 1, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %9, i64 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %28, i64 0, i32 1, i64 0
  store i32 %53, i32* %54, align 4
  %55 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %56 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %55, i64 0, i32 1, i64 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %25
  %60 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %61 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %60, align 8
  %62 = sext i32 %57 to i64
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %61, i64 %62
  br label %64

64:                                               ; preds = %25, %59
  %65 = phi %struct.TfLiteTensor* [ %63, %59 ], [ null, %25 ]
  %66 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %32) #11
  %67 = icmp sgt i32 %42, 0
  %68 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  br i1 %67, label %69, label %92

69:                                               ; preds = %64
  %70 = zext i32 %42 to i64
  %71 = add nsw i64 %70, -1
  %72 = and i64 %70, 3
  %73 = icmp ult i64 %71, 3
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = sub nsw i64 %70, %72
  br label %112

76:                                               ; preds = %112, %69
  %77 = phi %struct.TfLiteIntArray* [ undef, %69 ], [ %135, %112 ]
  %78 = phi i64 [ 0, %69 ], [ %134, %112 ]
  %79 = phi %struct.TfLiteIntArray* [ %68, %69 ], [ %135, %112 ]
  %80 = icmp eq i64 %72, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %76, %81
  %82 = phi i64 [ %88, %81 ], [ %78, %76 ]
  %83 = phi %struct.TfLiteIntArray* [ %89, %81 ], [ %79, %76 ]
  %84 = phi i64 [ %90, %81 ], [ %72, %76 ]
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %83, i64 0, i32 1, i64 %82
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 1, i64 %82
  store i32 %86, i32* %87, align 4
  %88 = add nuw nsw i64 %82, 1
  %89 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %81, !llvm.loop !3

92:                                               ; preds = %76, %81, %64
  %93 = phi %struct.TfLiteIntArray* [ %68, %64 ], [ %77, %76 ], [ %89, %81 ]
  %94 = sext i32 %43 to i64
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %93, i64 0, i32 1, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %42 to i64
  %98 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 1, i64 %97
  store i32 %96, i32* %98, align 4
  %99 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 1, i64 %97
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 1, i64 %94
  store i32 %101, i32* %102, align 4
  %103 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %10, align 8
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %65, i64 0, i32 0
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %65, i64 0, i32 4
  store i32 2, i32* %107, align 8
  %108 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %109 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %108, align 8
  %110 = tail call i32 %109(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %65, %struct.TfLiteIntArray* %66) #11
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %138, label %616

112:                                              ; preds = %112, %74
  %113 = phi i64 [ 0, %74 ], [ %134, %112 ]
  %114 = phi %struct.TfLiteIntArray* [ %68, %74 ], [ %135, %112 ]
  %115 = phi i64 [ %75, %74 ], [ %136, %112 ]
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %114, i64 0, i32 1, i64 %113
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 1, i64 %113
  store i32 %117, i32* %118, align 4
  %119 = or i64 %113, 1
  %120 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  %121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %120, i64 0, i32 1, i64 %119
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 1, i64 %119
  store i32 %122, i32* %123, align 4
  %124 = or i64 %113, 2
  %125 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  %126 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %125, i64 0, i32 1, i64 %124
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 1, i64 %124
  store i32 %127, i32* %128, align 4
  %129 = or i64 %113, 3
  %130 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %130, i64 0, i32 1, i64 %129
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 1, i64 %129
  store i32 %132, i32* %133, align 4
  %134 = add nuw nsw i64 %113, 4
  %135 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  %136 = add i64 %115, -4
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %76, label %112

138:                                              ; preds = %92
  %139 = load i32, i32* %52, align 4
  %140 = add nsw i32 %139, 1
  %141 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %142 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %141, i64 0, i32 1, i64 1
  store i32 %140, i32* %142, align 4
  %143 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 1, i64 1
  %145 = load i32, i32* %144, align 4
  %146 = icmp slt i32 %145, 0
  br i1 %146, label %152, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %149 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %148, align 8
  %150 = sext i32 %145 to i64
  %151 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %149, i64 %150
  br label %152

152:                                              ; preds = %138, %147
  %153 = phi %struct.TfLiteTensor* [ %151, %147 ], [ null, %138 ]
  %154 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %155 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %154, i64 0, i32 2
  %156 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %155, align 8
  %157 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %156, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %158) #11
  %160 = add i32 %158, -2
  %161 = icmp sgt i32 %160, 0
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %155, align 8
  br i1 %161, label %163, label %186

163:                                              ; preds = %152
  %164 = zext i32 %160 to i64
  %165 = add nsw i64 %164, -1
  %166 = and i64 %164, 3
  %167 = icmp ult i64 %165, 3
  br i1 %167, label %170, label %168

168:                                              ; preds = %163
  %169 = sub nsw i64 %164, %166
  br label %211

170:                                              ; preds = %211, %163
  %171 = phi %struct.TfLiteIntArray* [ undef, %163 ], [ %234, %211 ]
  %172 = phi i64 [ 0, %163 ], [ %233, %211 ]
  %173 = phi %struct.TfLiteIntArray* [ %162, %163 ], [ %234, %211 ]
  %174 = icmp eq i64 %166, 0
  br i1 %174, label %186, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %182, %175 ], [ %172, %170 ]
  %177 = phi %struct.TfLiteIntArray* [ %183, %175 ], [ %173, %170 ]
  %178 = phi i64 [ %184, %175 ], [ %166, %170 ]
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %177, i64 0, i32 1, i64 %176
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 %176
  store i32 %180, i32* %181, align 4
  %182 = add nuw nsw i64 %176, 1
  %183 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %155, align 8
  %184 = add i64 %178, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %175, !llvm.loop !5

186:                                              ; preds = %170, %175, %152
  %187 = phi %struct.TfLiteIntArray* [ %162, %152 ], [ %171, %170 ], [ %183, %175 ]
  %188 = add nsw i32 %158, -1
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %187, i64 0, i32 1, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = sext i32 %160 to i64
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 %192
  store i32 %191, i32* %193, align 4
  %194 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %155, align 8
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %194, i64 0, i32 1, i64 %192
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 %189
  store i32 %196, i32* %197, align 4
  %198 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %199 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %198, i64 0, i32 4
  %200 = load i32, i32* %199, align 8
  %201 = icmp eq i32 %200, 1
  %202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %153, i64 0, i32 4
  %203 = select i1 %201, i32 3, i32 2
  store i32 %203, i32* %202, align 8
  %204 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %205 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %204, i64 0, i32 0
  %206 = load i32, i32* %205, align 8
  %207 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %153, i64 0, i32 0
  store i32 %206, i32* %207, align 8
  store i32 2, i32* %202, align 8
  %208 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %108, align 8
  %209 = tail call i32 %208(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %153, %struct.TfLiteIntArray* %159) #11
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %237, label %616

211:                                              ; preds = %211, %168
  %212 = phi i64 [ 0, %168 ], [ %233, %211 ]
  %213 = phi %struct.TfLiteIntArray* [ %162, %168 ], [ %234, %211 ]
  %214 = phi i64 [ %169, %168 ], [ %235, %211 ]
  %215 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %213, i64 0, i32 1, i64 %212
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 %212
  store i32 %216, i32* %217, align 4
  %218 = or i64 %212, 1
  %219 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %155, align 8
  %220 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %219, i64 0, i32 1, i64 %218
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 %218
  store i32 %221, i32* %222, align 4
  %223 = or i64 %212, 2
  %224 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %155, align 8
  %225 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 1, i64 %223
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 %223
  store i32 %226, i32* %227, align 4
  %228 = or i64 %212, 3
  %229 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %155, align 8
  %230 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %229, i64 0, i32 1, i64 %228
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %159, i64 0, i32 1, i64 %228
  store i32 %231, i32* %232, align 4
  %233 = add nuw nsw i64 %212, 4
  %234 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %155, align 8
  %235 = add i64 %214, -4
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %170, label %211

237:                                              ; preds = %186
  br i1 %27, label %238, label %615

238:                                              ; preds = %237
  br i1 %67, label %239, label %331

239:                                              ; preds = %238
  %240 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %29, align 8
  %241 = zext i32 %42 to i64
  %242 = icmp ult i32 %42, 8
  br i1 %242, label %243, label %246

243:                                              ; preds = %321, %239
  %244 = phi i64 [ 0, %239 ], [ %247, %321 ]
  %245 = phi i32 [ 1, %239 ], [ %329, %321 ]
  br label %427

246:                                              ; preds = %239
  %247 = and i64 %241, 4294967288
  %248 = add nsw i64 %247, -8
  %249 = lshr exact i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp ult i64 %248, 24
  br i1 %252, label %298, label %253

253:                                              ; preds = %246
  %254 = sub nsw i64 %250, %251
  br label %255

255:                                              ; preds = %255, %253
  %256 = phi i64 [ 0, %253 ], [ %295, %255 ]
  %257 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %293, %255 ]
  %258 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %253 ], [ %294, %255 ]
  %259 = phi i64 [ %254, %253 ], [ %296, %255 ]
  %260 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %240, i64 0, i32 1, i64 %256
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = getelementptr inbounds i32, i32* %260, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4
  %266 = mul nsw <4 x i32> %262, %257
  %267 = mul nsw <4 x i32> %265, %258
  %268 = or i64 %256, 8
  %269 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %240, i64 0, i32 1, i64 %268
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4
  %272 = getelementptr inbounds i32, i32* %269, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = mul nsw <4 x i32> %271, %266
  %276 = mul nsw <4 x i32> %274, %267
  %277 = or i64 %256, 16
  %278 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %240, i64 0, i32 1, i64 %277
  %279 = bitcast i32* %278 to <4 x i32>*
  %280 = load <4 x i32>, <4 x i32>* %279, align 4
  %281 = getelementptr inbounds i32, i32* %278, i64 4
  %282 = bitcast i32* %281 to <4 x i32>*
  %283 = load <4 x i32>, <4 x i32>* %282, align 4
  %284 = mul nsw <4 x i32> %280, %275
  %285 = mul nsw <4 x i32> %283, %276
  %286 = or i64 %256, 24
  %287 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %240, i64 0, i32 1, i64 %286
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = getelementptr inbounds i32, i32* %287, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4
  %293 = mul nsw <4 x i32> %289, %284
  %294 = mul nsw <4 x i32> %292, %285
  %295 = add i64 %256, 32
  %296 = add i64 %259, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %255, !llvm.loop !6

298:                                              ; preds = %255, %246
  %299 = phi <4 x i32> [ undef, %246 ], [ %293, %255 ]
  %300 = phi <4 x i32> [ undef, %246 ], [ %294, %255 ]
  %301 = phi i64 [ 0, %246 ], [ %295, %255 ]
  %302 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %293, %255 ]
  %303 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %246 ], [ %294, %255 ]
  %304 = icmp eq i64 %251, 0
  br i1 %304, label %321, label %305

305:                                              ; preds = %298, %305
  %306 = phi i64 [ %318, %305 ], [ %301, %298 ]
  %307 = phi <4 x i32> [ %316, %305 ], [ %302, %298 ]
  %308 = phi <4 x i32> [ %317, %305 ], [ %303, %298 ]
  %309 = phi i64 [ %319, %305 ], [ %251, %298 ]
  %310 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %240, i64 0, i32 1, i64 %306
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4
  %313 = getelementptr inbounds i32, i32* %310, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4
  %316 = mul nsw <4 x i32> %312, %307
  %317 = mul nsw <4 x i32> %315, %308
  %318 = add i64 %306, 8
  %319 = add i64 %309, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %305, !llvm.loop !8

321:                                              ; preds = %305, %298
  %322 = phi <4 x i32> [ %299, %298 ], [ %316, %305 ]
  %323 = phi <4 x i32> [ %300, %298 ], [ %317, %305 ]
  %324 = mul <4 x i32> %323, %322
  %325 = shufflevector <4 x i32> %324, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %326 = mul <4 x i32> %324, %325
  %327 = shufflevector <4 x i32> %326, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %328 = mul <4 x i32> %326, %327
  %329 = extractelement <4 x i32> %328, i32 0
  %330 = icmp eq i64 %247, %241
  br i1 %330, label %331, label %243

331:                                              ; preds = %427, %321, %238
  %332 = phi i32 [ 1, %238 ], [ %329, %321 ], [ %432, %427 ]
  %333 = add i32 %36, -2
  %334 = icmp sgt i32 %333, 0
  br i1 %334, label %335, label %435

335:                                              ; preds = %331
  %336 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %33, align 8
  %337 = zext i32 %333 to i64
  %338 = icmp ult i32 %333, 8
  br i1 %338, label %339, label %342

339:                                              ; preds = %417, %335
  %340 = phi i64 [ 0, %335 ], [ %343, %417 ]
  %341 = phi i32 [ 1, %335 ], [ %425, %417 ]
  br label %465

342:                                              ; preds = %335
  %343 = and i64 %337, 4294967288
  %344 = add nsw i64 %343, -8
  %345 = lshr exact i64 %344, 3
  %346 = add nuw nsw i64 %345, 1
  %347 = and i64 %346, 3
  %348 = icmp ult i64 %344, 24
  br i1 %348, label %394, label %349

349:                                              ; preds = %342
  %350 = sub nsw i64 %346, %347
  br label %351

351:                                              ; preds = %351, %349
  %352 = phi i64 [ 0, %349 ], [ %391, %351 ]
  %353 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %349 ], [ %389, %351 ]
  %354 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %349 ], [ %390, %351 ]
  %355 = phi i64 [ %350, %349 ], [ %392, %351 ]
  %356 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %336, i64 0, i32 1, i64 %352
  %357 = bitcast i32* %356 to <4 x i32>*
  %358 = load <4 x i32>, <4 x i32>* %357, align 4
  %359 = getelementptr inbounds i32, i32* %356, i64 4
  %360 = bitcast i32* %359 to <4 x i32>*
  %361 = load <4 x i32>, <4 x i32>* %360, align 4
  %362 = mul nsw <4 x i32> %358, %353
  %363 = mul nsw <4 x i32> %361, %354
  %364 = or i64 %352, 8
  %365 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %336, i64 0, i32 1, i64 %364
  %366 = bitcast i32* %365 to <4 x i32>*
  %367 = load <4 x i32>, <4 x i32>* %366, align 4
  %368 = getelementptr inbounds i32, i32* %365, i64 4
  %369 = bitcast i32* %368 to <4 x i32>*
  %370 = load <4 x i32>, <4 x i32>* %369, align 4
  %371 = mul nsw <4 x i32> %367, %362
  %372 = mul nsw <4 x i32> %370, %363
  %373 = or i64 %352, 16
  %374 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %336, i64 0, i32 1, i64 %373
  %375 = bitcast i32* %374 to <4 x i32>*
  %376 = load <4 x i32>, <4 x i32>* %375, align 4
  %377 = getelementptr inbounds i32, i32* %374, i64 4
  %378 = bitcast i32* %377 to <4 x i32>*
  %379 = load <4 x i32>, <4 x i32>* %378, align 4
  %380 = mul nsw <4 x i32> %376, %371
  %381 = mul nsw <4 x i32> %379, %372
  %382 = or i64 %352, 24
  %383 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %336, i64 0, i32 1, i64 %382
  %384 = bitcast i32* %383 to <4 x i32>*
  %385 = load <4 x i32>, <4 x i32>* %384, align 4
  %386 = getelementptr inbounds i32, i32* %383, i64 4
  %387 = bitcast i32* %386 to <4 x i32>*
  %388 = load <4 x i32>, <4 x i32>* %387, align 4
  %389 = mul nsw <4 x i32> %385, %380
  %390 = mul nsw <4 x i32> %388, %381
  %391 = add i64 %352, 32
  %392 = add i64 %355, -4
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %394, label %351, !llvm.loop !9

394:                                              ; preds = %351, %342
  %395 = phi <4 x i32> [ undef, %342 ], [ %389, %351 ]
  %396 = phi <4 x i32> [ undef, %342 ], [ %390, %351 ]
  %397 = phi i64 [ 0, %342 ], [ %391, %351 ]
  %398 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %342 ], [ %389, %351 ]
  %399 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %342 ], [ %390, %351 ]
  %400 = icmp eq i64 %347, 0
  br i1 %400, label %417, label %401

401:                                              ; preds = %394, %401
  %402 = phi i64 [ %414, %401 ], [ %397, %394 ]
  %403 = phi <4 x i32> [ %412, %401 ], [ %398, %394 ]
  %404 = phi <4 x i32> [ %413, %401 ], [ %399, %394 ]
  %405 = phi i64 [ %415, %401 ], [ %347, %394 ]
  %406 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %336, i64 0, i32 1, i64 %402
  %407 = bitcast i32* %406 to <4 x i32>*
  %408 = load <4 x i32>, <4 x i32>* %407, align 4
  %409 = getelementptr inbounds i32, i32* %406, i64 4
  %410 = bitcast i32* %409 to <4 x i32>*
  %411 = load <4 x i32>, <4 x i32>* %410, align 4
  %412 = mul nsw <4 x i32> %408, %403
  %413 = mul nsw <4 x i32> %411, %404
  %414 = add i64 %402, 8
  %415 = add i64 %405, -1
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %417, label %401, !llvm.loop !10

417:                                              ; preds = %401, %394
  %418 = phi <4 x i32> [ %395, %394 ], [ %412, %401 ]
  %419 = phi <4 x i32> [ %396, %394 ], [ %413, %401 ]
  %420 = mul <4 x i32> %419, %418
  %421 = shufflevector <4 x i32> %420, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %422 = mul <4 x i32> %420, %421
  %423 = shufflevector <4 x i32> %422, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %424 = mul <4 x i32> %422, %423
  %425 = extractelement <4 x i32> %424, i32 0
  %426 = icmp eq i64 %343, %337
  br i1 %426, label %435, label %339

427:                                              ; preds = %243, %427
  %428 = phi i64 [ %433, %427 ], [ %244, %243 ]
  %429 = phi i32 [ %432, %427 ], [ %245, %243 ]
  %430 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %240, i64 0, i32 1, i64 %428
  %431 = load i32, i32* %430, align 4
  %432 = mul nsw i32 %431, %429
  %433 = add nuw nsw i64 %428, 1
  %434 = icmp eq i64 %433, %241
  br i1 %434, label %331, label %427, !llvm.loop !11

435:                                              ; preds = %465, %417, %331
  %436 = phi i32 [ 1, %331 ], [ %425, %417 ], [ %470, %465 ]
  %437 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %9, i64 0, i32 6
  store i8 1, i8* %437, align 1
  %438 = load i32, i32* %52, align 4
  %439 = add nsw i32 %438, 2
  %440 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %441 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %440, i64 0, i32 1, i64 2
  store i32 %439, i32* %441, align 4
  %442 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %443 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %442, i64 0, i32 1, i64 2
  %444 = load i32, i32* %443, align 4
  %445 = icmp slt i32 %444, 0
  br i1 %445, label %451, label %446

446:                                              ; preds = %435
  %447 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %448 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %447, align 8
  %449 = sext i32 %444 to i64
  %450 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %448, i64 %449
  br label %451

451:                                              ; preds = %435, %446
  %452 = phi %struct.TfLiteTensor* [ %450, %446 ], [ null, %435 ]
  %453 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %454 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %453, i64 0, i32 0
  %455 = load i32, i32* %454, align 8
  %456 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %452, i64 0, i32 0
  store i32 %455, i32* %456, align 8
  %457 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %452, i64 0, i32 4
  store i32 2, i32* %457, align 8
  %458 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %10, align 8
  %459 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %458, i64 0, i32 2
  %460 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %459, align 8
  %461 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %460) #11
  %462 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %108, align 8
  %463 = tail call i32 %462(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %452, %struct.TfLiteIntArray* %461) #11
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %473, label %616

465:                                              ; preds = %339, %465
  %466 = phi i64 [ %471, %465 ], [ %340, %339 ]
  %467 = phi i32 [ %470, %465 ], [ %341, %339 ]
  %468 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %336, i64 0, i32 1, i64 %466
  %469 = load i32, i32* %468, align 4
  %470 = mul nsw i32 %469, %467
  %471 = add nuw nsw i64 %466, 1
  %472 = icmp eq i64 %471, %337
  br i1 %472, label %435, label %465, !llvm.loop !13

473:                                              ; preds = %451
  %474 = load i32, i32* %52, align 4
  %475 = add nsw i32 %474, 3
  %476 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %477 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %476, i64 0, i32 1, i64 3
  store i32 %475, i32* %477, align 4
  %478 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %479 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %478, i64 0, i32 1, i64 3
  %480 = load i32, i32* %479, align 4
  %481 = icmp slt i32 %480, 0
  br i1 %481, label %487, label %482

482:                                              ; preds = %473
  %483 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %484 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %483, align 8
  %485 = sext i32 %480 to i64
  %486 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %484, i64 %485
  br label %487

487:                                              ; preds = %473, %482
  %488 = phi %struct.TfLiteTensor* [ %486, %482 ], [ null, %473 ]
  %489 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %488, i64 0, i32 0
  store i32 1, i32* %489, align 8
  %490 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %488, i64 0, i32 4
  store i32 2, i32* %490, align 8
  %491 = bitcast [1 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %491) #11
  %492 = getelementptr inbounds [1 x i32], [1 x i32]* %4, i64 0, i64 0
  %493 = mul nsw i32 %332, %47
  store i32 %493, i32* %492, align 4
  %494 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %488, i64 0, i32 2
  %495 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %494, align 8
  %496 = call i32 @TfLiteIntArrayEqualsArray(%struct.TfLiteIntArray* %495, i32 1, i32* nonnull %492) #11
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %506

498:                                              ; preds = %487
  %499 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #11
  %500 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %499, i64 0, i32 1, i64 0
  store i32 %47, i32* %500, align 4
  %501 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %108, align 8
  %502 = call i32 %501(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %488, %struct.TfLiteIntArray* %499) #11
  %503 = icmp eq i32 %502, 0
  %504 = xor i1 %503, true
  %505 = zext i1 %504 to i32
  br i1 %503, label %506, label %611

506:                                              ; preds = %487, %498
  %507 = load i32, i32* %52, align 4
  %508 = add nsw i32 %507, 4
  %509 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %510 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 4
  store i32 %508, i32* %510, align 4
  %511 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %512 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %511, i64 0, i32 1, i64 4
  %513 = load i32, i32* %512, align 4
  %514 = icmp slt i32 %513, 0
  br i1 %514, label %520, label %515

515:                                              ; preds = %506
  %516 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %517 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %516, align 8
  %518 = sext i32 %513 to i64
  %519 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %517, i64 %518
  br label %520

520:                                              ; preds = %506, %515
  %521 = phi %struct.TfLiteTensor* [ %519, %515 ], [ null, %506 ]
  %522 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %521, i64 0, i32 0
  store i32 2, i32* %522, align 8
  %523 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %521, i64 0, i32 4
  store i32 2, i32* %523, align 8
  %524 = bitcast [2 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %524) #11
  %525 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 0
  %526 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 1
  store i32 %51, i32* %525, align 4
  store i32 %47, i32* %526, align 4
  %527 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %521, i64 0, i32 2
  %528 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %527, align 8
  %529 = call i32 @TfLiteIntArrayEqualsArray(%struct.TfLiteIntArray* %528, i32 2, i32* nonnull %525) #11
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %540

531:                                              ; preds = %520
  %532 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 2) #11
  %533 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %532, i64 0, i32 1, i64 0
  store i32 %51, i32* %533, align 4
  %534 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %532, i64 0, i32 1, i64 1
  store i32 %47, i32* %534, align 4
  %535 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %108, align 8
  %536 = call i32 %535(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %521, %struct.TfLiteIntArray* %532) #11
  %537 = icmp eq i32 %536, 0
  %538 = xor i1 %537, true
  %539 = zext i1 %538 to i32
  br i1 %537, label %540, label %608

540:                                              ; preds = %520, %531
  %541 = load i32, i32* %52, align 4
  %542 = add nsw i32 %541, 5
  %543 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %544 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %543, i64 0, i32 1, i64 5
  store i32 %542, i32* %544, align 4
  %545 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %546 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %545, i64 0, i32 1, i64 5
  %547 = load i32, i32* %546, align 4
  %548 = icmp slt i32 %547, 0
  br i1 %548, label %554, label %549

549:                                              ; preds = %540
  %550 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %551 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %550, align 8
  %552 = sext i32 %547 to i64
  %553 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %551, i64 %552
  br label %554

554:                                              ; preds = %540, %549
  %555 = phi %struct.TfLiteTensor* [ %553, %549 ], [ null, %540 ]
  %556 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %555, i64 0, i32 0
  store i32 2, i32* %556, align 8
  %557 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %555, i64 0, i32 4
  store i32 2, i32* %557, align 8
  %558 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %555, i64 0, i32 2
  %559 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %558, align 8
  %560 = call i32 @TfLiteIntArrayEqualsArray(%struct.TfLiteIntArray* %559, i32 1, i32* nonnull %492) #11
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %562, label %570

562:                                              ; preds = %554
  %563 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #11
  %564 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %563, i64 0, i32 1, i64 0
  store i32 %493, i32* %564, align 4
  %565 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %108, align 8
  %566 = call i32 %565(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %555, %struct.TfLiteIntArray* %563) #11
  %567 = icmp eq i32 %566, 0
  %568 = xor i1 %567, true
  %569 = zext i1 %568 to i32
  br i1 %567, label %570, label %608

570:                                              ; preds = %554, %562
  %571 = load i32, i32* %52, align 4
  %572 = add nsw i32 %571, 6
  %573 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %574 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %573, i64 0, i32 1, i64 6
  store i32 %572, i32* %574, align 4
  %575 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %576 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %575, i64 0, i32 1, i64 6
  %577 = load i32, i32* %576, align 4
  %578 = icmp slt i32 %577, 0
  br i1 %578, label %584, label %579

579:                                              ; preds = %570
  %580 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %581 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %580, align 8
  %582 = sext i32 %577 to i64
  %583 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %581, i64 %582
  br label %584

584:                                              ; preds = %570, %579
  %585 = phi %struct.TfLiteTensor* [ %583, %579 ], [ null, %570 ]
  %586 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %585, i64 0, i32 0
  store i32 2, i32* %586, align 8
  %587 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %585, i64 0, i32 4
  store i32 3, i32* %587, align 8
  %588 = bitcast [1 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %588) #11
  %589 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 0
  %590 = mul nsw i32 %436, %51
  store i32 %590, i32* %589, align 4
  %591 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %585, i64 0, i32 2
  %592 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %591, align 8
  %593 = call i32 @TfLiteIntArrayEqualsArray(%struct.TfLiteIntArray* %592, i32 1, i32* nonnull %589) #11
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %604

595:                                              ; preds = %584
  %596 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #11
  %597 = load i32, i32* %589, align 4
  %598 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %596, i64 0, i32 1, i64 0
  store i32 %597, i32* %598, align 4
  %599 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %108, align 8
  %600 = call i32 %599(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %585, %struct.TfLiteIntArray* %596) #11
  %601 = icmp eq i32 %600, 0
  %602 = xor i1 %601, true
  %603 = zext i1 %602 to i32
  br i1 %601, label %604, label %605

604:                                              ; preds = %584, %595
  br label %605

605:                                              ; preds = %595, %604
  %606 = phi i32 [ 0, %604 ], [ %603, %595 ]
  %607 = phi i32 [ 0, %604 ], [ %600, %595 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %588) #11
  br label %608

608:                                              ; preds = %605, %562, %531
  %609 = phi i32 [ %539, %531 ], [ %606, %605 ], [ %569, %562 ]
  %610 = phi i32 [ %536, %531 ], [ %607, %605 ], [ %566, %562 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %524) #11
  br label %611

611:                                              ; preds = %608, %498
  %612 = phi i32 [ %609, %608 ], [ %505, %498 ]
  %613 = phi i32 [ %610, %608 ], [ %502, %498 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %491) #11
  %614 = icmp eq i32 %612, 0
  br i1 %614, label %615, label %616

615:                                              ; preds = %611, %237
  br label %616

616:                                              ; preds = %451, %611, %186, %92, %615
  %617 = phi i32 [ 0, %615 ], [ %613, %611 ], [ %209, %186 ], [ %110, %92 ], [ %463, %451 ]
  ret i32 %617
}

declare void @TfLiteIntArrayFree(%struct.TfLiteIntArray*) local_unnamed_addr #4

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #4

declare i32 @TfLiteIntArrayEqualsArray(%struct.TfLiteIntArray*, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin12batch_matmul7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture) #0 {
  %3 = alloca %"struct.tflite::ops::builtin::batch_matmul::OpContext", align 8
  %4 = alloca double, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %17 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %16, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %17(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 281, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %13, i32 2) #11
  br label %614

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %26 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %25, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %26(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 282, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %22, i32 1) #11
  br label %614

27:                                               ; preds = %18
  %28 = bitcast %"struct.tflite::ops::builtin::batch_matmul::OpContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpContext", %"struct.tflite::ops::builtin::batch_matmul::OpContext"* %3, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpContext", %"struct.tflite::ops::builtin::batch_matmul::OpContext"* %3, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpContext", %"struct.tflite::ops::builtin::batch_matmul::OpContext"* %3, i64 0, i32 3
  %32 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %33 = bitcast i8** %32 to i64*
  %34 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpContext", %"struct.tflite::ops::builtin::batch_matmul::OpContext"* %3, i64 0, i32 1
  %35 = bitcast %struct.TfLiteTensor** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  %36 = load i64, i64* %33, align 8
  %37 = bitcast %"struct.tflite::ops::builtin::batch_matmul::OpContext"* %3 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  %41 = inttoptr i64 %36 to %struct.TfLiteBatchMatMulParams*
  br i1 %40, label %47, label %42

42:                                               ; preds = %27
  %43 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = sext i32 %39 to i64
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 %45
  br label %47

47:                                               ; preds = %42, %27
  %48 = phi %struct.TfLiteTensor* [ %46, %42 ], [ null, %27 ]
  store %struct.TfLiteTensor* %48, %struct.TfLiteTensor** %29, align 8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %52, %47
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %47 ]
  store %struct.TfLiteTensor* %58, %struct.TfLiteTensor** %30, align 8
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %64 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %63, align 8
  %65 = sext i32 %60 to i64
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 %65
  br label %67

67:                                               ; preds = %57, %62
  %68 = phi %struct.TfLiteTensor* [ %66, %62 ], [ null, %57 ]
  store %struct.TfLiteTensor* %68, %struct.TfLiteTensor** %31, align 8
  %69 = call i32 @_ZN6tflite3ops7builtin12batch_matmul21InitializeTemporariesEP13TfLiteContextP10TfLiteNodePNS2_9OpContextE(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::batch_matmul::OpContext"* nonnull %3)
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %612

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %73 = bitcast i8** %72 to %"struct.tflite::ops::builtin::batch_matmul::OpData"**
  %74 = load %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"struct.tflite::ops::builtin::batch_matmul::OpData"** %73, align 8
  %75 = getelementptr inbounds %struct.TfLiteBatchMatMulParams, %struct.TfLiteBatchMatMulParams* %41, i64 0, i32 0
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = icmp ne i8 %76, 0
  %78 = getelementptr inbounds %struct.TfLiteBatchMatMulParams, %struct.TfLiteBatchMatMulParams* %41, i64 0, i32 1
  %79 = load i8, i8* %78, align 1, !range !2
  %80 = icmp ne i8 %79, 0
  %81 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 1, i64 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp slt i32 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %71
  %86 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %87 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %86, align 8
  %88 = sext i32 %83 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %87, i64 %88
  br label %90

90:                                               ; preds = %71, %85
  %91 = phi %struct.TfLiteTensor* [ %89, %85 ], [ null, %71 ]
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 1, i64 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %97 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %96, align 8
  %98 = sext i32 %93 to i64
  %99 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %97, i64 %98
  br label %100

100:                                              ; preds = %90, %95
  %101 = phi %struct.TfLiteTensor* [ %99, %95 ], [ null, %90 ]
  %102 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %19, align 8
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %102, i64 0, i32 1, i64 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %111, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %108 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %107, align 8
  %109 = sext i32 %104 to i64
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %108, i64 %109
  br label %111

111:                                              ; preds = %100, %106
  %112 = phi %struct.TfLiteTensor* [ %110, %106 ], [ null, %100 ]
  %113 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 9
  br i1 %115, label %116, label %130

116:                                              ; preds = %111
  %117 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #11
  store double 0.000000e+00, double* %4, align 8
  %118 = call i32 @_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_PS2_Pd(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %91, %struct.TfLiteTensor* %101, %struct.TfLiteTensor* %112, double* nonnull %4) #11
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %129

120:                                              ; preds = %116
  %121 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #11
  store i32 -1431655766, i32* %5, align 4
  %122 = load double, double* %4, align 8
  %123 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %74, i64 0, i32 0
  call void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double %122, i32* %123, i32* nonnull %5) #11
  %124 = load i32, i32* %5, align 4
  %125 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %74, i64 0, i32 1
  store i32 %124, i32* %125, align 4
  %126 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %74, i64 0, i32 2
  store i32 -128, i32* %126, align 4
  %127 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %74, i64 0, i32 3
  store i32 127, i32* %127, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #11
  %128 = load i32, i32* %113, align 8
  br label %130

129:                                              ; preds = %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #11
  br label %612

130:                                              ; preds = %120, %111
  %131 = phi i32 [ %128, %120 ], [ %114, %111 ]
  switch i32 %131, label %132 [
    i32 1, label %135
    i32 9, label %135
  ]

132:                                              ; preds = %130
  %133 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %134 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %133, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %134(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 312, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.9, i64 0, i64 0)) #11
  br label %612

135:                                              ; preds = %130, %130
  %136 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  switch i32 %137, label %138 [
    i32 1, label %141
    i32 9, label %141
  ]

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %140 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %139, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %140(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 314, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.10, i64 0, i64 0)) #11
  br label %612

141:                                              ; preds = %135, %135
  %142 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 0, i32 2
  %143 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %142, align 8
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp sgt i32 %145, 1
  br i1 %146, label %150, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %149 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %148, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %149(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 316, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0)) #11
  br label %612

150:                                              ; preds = %141
  %151 = icmp slt i32 %145, 5
  br i1 %151, label %155, label %152

152:                                              ; preds = %150
  %153 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %154 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %153, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %154(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 317, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0)) #11
  br label %612

155:                                              ; preds = %150
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %101, i64 0, i32 2
  %157 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %156, align 8
  %158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %157, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, 1
  br i1 %160, label %164, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %163 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %162, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %163(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 318, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %612

164:                                              ; preds = %155
  %165 = icmp slt i32 %159, 5
  br i1 %165, label %169, label %166

166:                                              ; preds = %164
  %167 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %168 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %167, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %168(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 319, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0)) #11
  br label %612

169:                                              ; preds = %164
  %170 = icmp slt i32 %145, %159
  %171 = select i1 %170, i32 %159, i32 %145
  %172 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %172) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 32, i1 false)
  %173 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %173) #11
  %174 = icmp eq %struct.TfLiteTensor* %91, null
  br i1 %174, label %182, label %175

175:                                              ; preds = %169
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 1, i64 0
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %178 = sext i32 %145 to i64
  %179 = shl nsw i64 %178, 2
  %180 = bitcast %union.anon* %177 to i8*
  %181 = bitcast i32* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 4 %181, i64 %179, i1 false) #11
  br label %182

182:                                              ; preds = %175, %169
  %183 = phi i32 [ %145, %175 ], [ 0, %169 ]
  %184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %183, i32* %184, align 8
  %185 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %171, i32* %185, align 8, !alias.scope !14
  %186 = sub nsw i32 %171, %183
  %187 = icmp sgt i32 %186, 0
  %188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %187, label %189, label %269

189:                                              ; preds = %182
  %190 = bitcast %union.anon* %188 to [5 x i32]*
  %191 = zext i32 %186 to i64
  %192 = icmp ult i32 %186, 8
  br i1 %192, label %262, label %193

193:                                              ; preds = %189
  %194 = and i64 %191, 4294967288
  %195 = add nsw i64 %194, -8
  %196 = lshr exact i64 %195, 3
  %197 = add nuw nsw i64 %196, 1
  %198 = and i64 %197, 7
  %199 = icmp ult i64 %195, 56
  br i1 %199, label %247, label %200

200:                                              ; preds = %193
  %201 = sub nsw i64 %197, %198
  br label %202

202:                                              ; preds = %202, %200
  %203 = phi i64 [ 0, %200 ], [ %244, %202 ]
  %204 = phi i64 [ %201, %200 ], [ %245, %202 ]
  %205 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %203
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %206, align 8, !alias.scope !14
  %207 = getelementptr inbounds i32, i32* %205, i64 4
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %208, align 8, !alias.scope !14
  %209 = or i64 %203, 8
  %210 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %209
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %211, align 8, !alias.scope !14
  %212 = getelementptr inbounds i32, i32* %210, i64 4
  %213 = bitcast i32* %212 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %213, align 8, !alias.scope !14
  %214 = or i64 %203, 16
  %215 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %214
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %216, align 8, !alias.scope !14
  %217 = getelementptr inbounds i32, i32* %215, i64 4
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %218, align 8, !alias.scope !14
  %219 = or i64 %203, 24
  %220 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %219
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %221, align 8, !alias.scope !14
  %222 = getelementptr inbounds i32, i32* %220, i64 4
  %223 = bitcast i32* %222 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %223, align 8, !alias.scope !14
  %224 = or i64 %203, 32
  %225 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %224
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %226, align 8, !alias.scope !14
  %227 = getelementptr inbounds i32, i32* %225, i64 4
  %228 = bitcast i32* %227 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %228, align 8, !alias.scope !14
  %229 = or i64 %203, 40
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %229
  %231 = bitcast i32* %230 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %231, align 8, !alias.scope !14
  %232 = getelementptr inbounds i32, i32* %230, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %233, align 8, !alias.scope !14
  %234 = or i64 %203, 48
  %235 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %234
  %236 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %236, align 8, !alias.scope !14
  %237 = getelementptr inbounds i32, i32* %235, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %238, align 8, !alias.scope !14
  %239 = or i64 %203, 56
  %240 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %239
  %241 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %241, align 8, !alias.scope !14
  %242 = getelementptr inbounds i32, i32* %240, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %243, align 8, !alias.scope !14
  %244 = add i64 %203, 64
  %245 = add i64 %204, -8
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %202, !llvm.loop !17

247:                                              ; preds = %202, %193
  %248 = phi i64 [ 0, %193 ], [ %244, %202 ]
  %249 = icmp eq i64 %198, 0
  br i1 %249, label %260, label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %257, %250 ], [ %248, %247 ]
  %252 = phi i64 [ %258, %250 ], [ %198, %247 ]
  %253 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %251
  %254 = bitcast i32* %253 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %254, align 8, !alias.scope !14
  %255 = getelementptr inbounds i32, i32* %253, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %256, align 8, !alias.scope !14
  %257 = add i64 %251, 8
  %258 = add i64 %252, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %250, !llvm.loop !18

260:                                              ; preds = %250, %247
  %261 = icmp eq i64 %194, %191
  br i1 %261, label %269, label %262

262:                                              ; preds = %260, %189
  %263 = phi i64 [ 0, %189 ], [ %194, %260 ]
  br label %264

264:                                              ; preds = %262, %264
  %265 = phi i64 [ %267, %264 ], [ %263, %262 ]
  %266 = getelementptr inbounds [5 x i32], [5 x i32]* %190, i64 0, i64 %265
  store i32 1, i32* %266, align 4, !alias.scope !14
  %267 = add nuw nsw i64 %265, 1
  %268 = icmp eq i64 %267, %191
  br i1 %268, label %269, label %264, !llvm.loop !19

269:                                              ; preds = %264, %260, %182
  %270 = getelementptr inbounds %union.anon, %union.anon* %188, i64 0, i32 0
  %271 = bitcast %union.anon* %188 to i32*
  %272 = sext i32 %186 to i64
  %273 = getelementptr inbounds i32, i32* %271, i64 %272
  %274 = bitcast i32* %273 to i8*
  %275 = icmp sgt i32 %183, 5
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %277 = getelementptr inbounds %union.anon, %union.anon* %276, i64 0, i32 0
  %278 = load i32*, i32** %277, align 8, !noalias !14
  %279 = bitcast %union.anon* %276 to i32*
  %280 = select i1 %275, i32* %278, i32* %279
  %281 = bitcast i32* %280 to i8*
  %282 = sext i32 %183 to i64
  %283 = shl nsw i64 %282, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %274, i8* align 4 %281, i64 %283, i1 false) #11
  %284 = xor i1 %275, true
  %285 = icmp eq i32* %278, null
  %286 = or i1 %285, %284
  br i1 %286, label %289, label %287

287:                                              ; preds = %269
  %288 = bitcast i32* %278 to i8*
  call void @_ZdaPv(i8* %288) #10
  br label %289

289:                                              ; preds = %269, %287
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %173) #11
  %290 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %290) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %290, i8 -86, i64 32, i1 false)
  %291 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %291) #11
  %292 = icmp eq %struct.TfLiteTensor* %101, null
  br i1 %292, label %293, label %295

293:                                              ; preds = %289
  %294 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %294, align 8, !alias.scope !20
  br label %319

295:                                              ; preds = %289
  %296 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %156, align 8, !noalias !20
  %297 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %296, i64 0, i32 0
  %298 = load i32, i32* %297, align 4, !noalias !20
  %299 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %296, i64 0, i32 1, i64 0
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %298, i32* %300, align 8, !alias.scope !20
  %301 = icmp sgt i32 %298, 5
  br i1 %301, label %302, label %309

302:                                              ; preds = %295
  %303 = sext i32 %298 to i64
  %304 = shl nsw i64 %303, 2
  %305 = call i8* @_Znam(i64 %304) #10, !noalias !20
  %306 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %307 = bitcast i32** %306 to i8**
  store i8* %305, i8** %307, align 8, !alias.scope !20
  %308 = bitcast i8* %305 to i32*
  br label %314

309:                                              ; preds = %295
  %310 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %311 = bitcast %union.anon* %310 to i32*
  %312 = sext i32 %298 to i64
  %313 = shl nsw i64 %312, 2
  br label %314

314:                                              ; preds = %309, %302
  %315 = phi i64 [ %304, %302 ], [ %313, %309 ]
  %316 = phi i32* [ %308, %302 ], [ %311, %309 ]
  %317 = bitcast i32* %316 to i8*
  %318 = bitcast i32* %299 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %317, i8* align 4 %318, i64 %315, i1 false) #11
  br label %319

319:                                              ; preds = %293, %314
  %320 = phi i32 [ 0, %293 ], [ %298, %314 ]
  %321 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %321, align 8, !alias.scope !23
  %322 = icmp slt i32 %171, %320
  br i1 %322, label %323, label %324

323:                                              ; preds = %319
  call void @abort() #12, !noalias !23
  unreachable

324:                                              ; preds = %319
  store i32 %171, i32* %321, align 8, !alias.scope !23
  %325 = sub i32 %171, %320
  %326 = icmp sgt i32 %325, 0
  %327 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %326, label %328, label %408

328:                                              ; preds = %324
  %329 = bitcast %union.anon* %327 to [5 x i32]*
  %330 = zext i32 %325 to i64
  %331 = icmp ult i32 %325, 8
  br i1 %331, label %401, label %332

332:                                              ; preds = %328
  %333 = and i64 %330, 4294967288
  %334 = add nsw i64 %333, -8
  %335 = lshr exact i64 %334, 3
  %336 = add nuw nsw i64 %335, 1
  %337 = and i64 %336, 7
  %338 = icmp ult i64 %334, 56
  br i1 %338, label %386, label %339

339:                                              ; preds = %332
  %340 = sub nsw i64 %336, %337
  br label %341

341:                                              ; preds = %341, %339
  %342 = phi i64 [ 0, %339 ], [ %383, %341 ]
  %343 = phi i64 [ %340, %339 ], [ %384, %341 ]
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %342
  %345 = bitcast i32* %344 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %345, align 8, !alias.scope !23
  %346 = getelementptr inbounds i32, i32* %344, i64 4
  %347 = bitcast i32* %346 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %347, align 8, !alias.scope !23
  %348 = or i64 %342, 8
  %349 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %348
  %350 = bitcast i32* %349 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %350, align 8, !alias.scope !23
  %351 = getelementptr inbounds i32, i32* %349, i64 4
  %352 = bitcast i32* %351 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %352, align 8, !alias.scope !23
  %353 = or i64 %342, 16
  %354 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %353
  %355 = bitcast i32* %354 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %355, align 8, !alias.scope !23
  %356 = getelementptr inbounds i32, i32* %354, i64 4
  %357 = bitcast i32* %356 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %357, align 8, !alias.scope !23
  %358 = or i64 %342, 24
  %359 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %358
  %360 = bitcast i32* %359 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %360, align 8, !alias.scope !23
  %361 = getelementptr inbounds i32, i32* %359, i64 4
  %362 = bitcast i32* %361 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %362, align 8, !alias.scope !23
  %363 = or i64 %342, 32
  %364 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %363
  %365 = bitcast i32* %364 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %365, align 8, !alias.scope !23
  %366 = getelementptr inbounds i32, i32* %364, i64 4
  %367 = bitcast i32* %366 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %367, align 8, !alias.scope !23
  %368 = or i64 %342, 40
  %369 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %368
  %370 = bitcast i32* %369 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %370, align 8, !alias.scope !23
  %371 = getelementptr inbounds i32, i32* %369, i64 4
  %372 = bitcast i32* %371 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %372, align 8, !alias.scope !23
  %373 = or i64 %342, 48
  %374 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %373
  %375 = bitcast i32* %374 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %375, align 8, !alias.scope !23
  %376 = getelementptr inbounds i32, i32* %374, i64 4
  %377 = bitcast i32* %376 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %377, align 8, !alias.scope !23
  %378 = or i64 %342, 56
  %379 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %378
  %380 = bitcast i32* %379 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %380, align 8, !alias.scope !23
  %381 = getelementptr inbounds i32, i32* %379, i64 4
  %382 = bitcast i32* %381 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %382, align 8, !alias.scope !23
  %383 = add i64 %342, 64
  %384 = add i64 %343, -8
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %341, !llvm.loop !26

386:                                              ; preds = %341, %332
  %387 = phi i64 [ 0, %332 ], [ %383, %341 ]
  %388 = icmp eq i64 %337, 0
  br i1 %388, label %399, label %389

389:                                              ; preds = %386, %389
  %390 = phi i64 [ %396, %389 ], [ %387, %386 ]
  %391 = phi i64 [ %397, %389 ], [ %337, %386 ]
  %392 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %390
  %393 = bitcast i32* %392 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %393, align 8, !alias.scope !23
  %394 = getelementptr inbounds i32, i32* %392, i64 4
  %395 = bitcast i32* %394 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %395, align 8, !alias.scope !23
  %396 = add i64 %390, 8
  %397 = add i64 %391, -1
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %399, label %389, !llvm.loop !27

399:                                              ; preds = %389, %386
  %400 = icmp eq i64 %333, %330
  br i1 %400, label %408, label %401

401:                                              ; preds = %399, %328
  %402 = phi i64 [ 0, %328 ], [ %333, %399 ]
  br label %403

403:                                              ; preds = %401, %403
  %404 = phi i64 [ %406, %403 ], [ %402, %401 ]
  %405 = getelementptr inbounds [5 x i32], [5 x i32]* %329, i64 0, i64 %404
  store i32 1, i32* %405, align 4, !alias.scope !23
  %406 = add nuw nsw i64 %404, 1
  %407 = icmp eq i64 %406, %330
  br i1 %407, label %408, label %403, !llvm.loop !28

408:                                              ; preds = %403, %399, %324
  %409 = getelementptr inbounds %union.anon, %union.anon* %327, i64 0, i32 0
  %410 = bitcast %union.anon* %327 to i32*
  %411 = sext i32 %325 to i64
  %412 = getelementptr inbounds i32, i32* %410, i64 %411
  %413 = bitcast i32* %412 to i8*
  %414 = icmp sgt i32 %320, 5
  %415 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %416 = getelementptr inbounds %union.anon, %union.anon* %415, i64 0, i32 0
  %417 = load i32*, i32** %416, align 8, !noalias !23
  %418 = bitcast %union.anon* %415 to i32*
  %419 = select i1 %414, i32* %417, i32* %418
  %420 = bitcast i32* %419 to i8*
  %421 = sext i32 %320 to i64
  %422 = shl nsw i64 %421, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %413, i8* align 4 %420, i64 %422, i1 false) #11
  %423 = xor i1 %414, true
  %424 = icmp eq i32* %417, null
  %425 = or i1 %424, %423
  br i1 %425, label %428, label %426

426:                                              ; preds = %408
  %427 = bitcast i32* %417 to i8*
  call void @_ZdaPv(i8* %427) #10
  br label %428

428:                                              ; preds = %408, %426
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %291) #11
  %429 = add i32 %171, -2
  %430 = icmp sgt i32 %429, 0
  br i1 %430, label %431, label %462

431:                                              ; preds = %428
  %432 = load i32, i32* %185, align 8
  %433 = icmp sgt i32 %432, 5
  %434 = load i32*, i32** %270, align 8
  %435 = bitcast %union.anon* %188 to [5 x i32]*
  %436 = load i32, i32* %321, align 8
  %437 = icmp sgt i32 %436, 5
  %438 = load i32*, i32** %409, align 8
  %439 = bitcast %union.anon* %327 to [5 x i32]*
  %440 = sext i32 %429 to i64
  br label %443

441:                                              ; preds = %443
  %442 = icmp slt i64 %458, %440
  br i1 %442, label %443, label %462

443:                                              ; preds = %431, %441
  %444 = phi i64 [ 0, %431 ], [ %458, %441 ]
  %445 = getelementptr inbounds i32, i32* %434, i64 %444
  %446 = getelementptr inbounds [5 x i32], [5 x i32]* %435, i64 0, i64 %444
  %447 = select i1 %433, i32* %445, i32* %446
  %448 = load i32, i32* %447, align 4
  %449 = getelementptr inbounds i32, i32* %438, i64 %444
  %450 = getelementptr inbounds [5 x i32], [5 x i32]* %439, i64 0, i64 %444
  %451 = select i1 %437, i32* %449, i32* %450
  %452 = load i32, i32* %451, align 4
  %453 = icmp ne i32 %448, %452
  %454 = icmp ne i32 %448, 1
  %455 = and i1 %454, %453
  %456 = icmp ne i32 %452, 1
  %457 = and i1 %456, %455
  %458 = add nuw nsw i64 %444, 1
  br i1 %457, label %459, label %441

459:                                              ; preds = %443
  %460 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %461 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %460, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %461(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 335, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %452, i32 1) #11
  br label %594

462:                                              ; preds = %441, %428
  br i1 %77, label %463, label %468

463:                                              ; preds = %462
  %464 = load i32, i32* %185, align 8
  %465 = load i32*, i32** %270, align 8
  %466 = sext i32 %429 to i64
  %467 = getelementptr inbounds i32, i32* %465, i64 %466
  br label %474

468:                                              ; preds = %462
  %469 = add nsw i32 %171, -1
  %470 = load i32, i32* %185, align 8
  %471 = load i32*, i32** %270, align 8
  %472 = sext i32 %469 to i64
  %473 = getelementptr inbounds i32, i32* %471, i64 %472
  br label %474

474:                                              ; preds = %468, %463
  %475 = phi i64 [ %472, %468 ], [ %466, %463 ]
  %476 = phi i32* [ %473, %468 ], [ %467, %463 ]
  %477 = phi i32 [ %470, %468 ], [ %464, %463 ]
  %478 = phi i32* [ %471, %468 ], [ %465, %463 ]
  %479 = icmp sgt i32 %477, 5
  %480 = bitcast %union.anon* %188 to [5 x i32]*
  %481 = getelementptr inbounds [5 x i32], [5 x i32]* %480, i64 0, i64 %475
  %482 = select i1 %479, i32* %476, i32* %481
  %483 = load i32, i32* %482, align 4
  br i1 %80, label %484, label %490

484:                                              ; preds = %474
  %485 = add nsw i32 %171, -1
  %486 = load i32, i32* %321, align 8
  %487 = load i32*, i32** %409, align 8
  %488 = sext i32 %485 to i64
  %489 = getelementptr inbounds i32, i32* %487, i64 %488
  br label %495

490:                                              ; preds = %474
  %491 = load i32, i32* %321, align 8
  %492 = load i32*, i32** %409, align 8
  %493 = sext i32 %429 to i64
  %494 = getelementptr inbounds i32, i32* %492, i64 %493
  br label %495

495:                                              ; preds = %490, %484
  %496 = phi i64 [ %493, %490 ], [ %488, %484 ]
  %497 = phi i32* [ %494, %490 ], [ %489, %484 ]
  %498 = phi i32 [ %491, %490 ], [ %486, %484 ]
  %499 = phi i32* [ %492, %490 ], [ %487, %484 ]
  %500 = icmp sgt i32 %498, 5
  %501 = bitcast %union.anon* %327 to [5 x i32]*
  %502 = getelementptr inbounds [5 x i32], [5 x i32]* %501, i64 0, i64 %496
  %503 = select i1 %500, i32* %497, i32* %502
  %504 = load i32, i32* %503, align 4
  %505 = icmp eq i32 %483, %504
  br i1 %505, label %509, label %506

506:                                              ; preds = %495
  %507 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %508 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %507, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %508(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 345, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i32 %483, i32 %504) #11
  br label %594

509:                                              ; preds = %495
  %510 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %171) #11
  %511 = bitcast %union.anon* %188 to [5 x i32]*
  %512 = bitcast %union.anon* %327 to [5 x i32]*
  br i1 %430, label %513, label %571

513:                                              ; preds = %509
  %514 = zext i32 %429 to i64
  %515 = icmp sgt i32 %477, 5
  %516 = icmp sgt i32 %498, 5
  %517 = and i64 %514, 1
  %518 = icmp eq i32 %429, 1
  br i1 %518, label %554, label %519

519:                                              ; preds = %513
  %520 = sub nsw i64 %514, %517
  br label %521

521:                                              ; preds = %521, %519
  %522 = phi i64 [ 0, %519 ], [ %551, %521 ]
  %523 = phi i64 [ %520, %519 ], [ %552, %521 ]
  %524 = getelementptr inbounds i32, i32* %478, i64 %522
  %525 = getelementptr inbounds [5 x i32], [5 x i32]* %511, i64 0, i64 %522
  %526 = select i1 %515, i32* %524, i32* %525
  %527 = load i32, i32* %526, align 4
  %528 = getelementptr inbounds i32, i32* %499, i64 %522
  %529 = getelementptr inbounds [5 x i32], [5 x i32]* %512, i64 0, i64 %522
  %530 = select i1 %516, i32* %528, i32* %529
  %531 = load i32, i32* %530, align 4
  %532 = icmp ne i32 %527, %531
  %533 = icmp eq i32 %527, 1
  %534 = and i1 %533, %532
  %535 = select i1 %534, i32 %531, i32 %527
  %536 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %510, i64 0, i32 1, i64 %522
  store i32 %535, i32* %536, align 4
  %537 = or i64 %522, 1
  %538 = getelementptr inbounds i32, i32* %478, i64 %537
  %539 = getelementptr inbounds [5 x i32], [5 x i32]* %511, i64 0, i64 %537
  %540 = select i1 %515, i32* %538, i32* %539
  %541 = load i32, i32* %540, align 4
  %542 = getelementptr inbounds i32, i32* %499, i64 %537
  %543 = getelementptr inbounds [5 x i32], [5 x i32]* %512, i64 0, i64 %537
  %544 = select i1 %516, i32* %542, i32* %543
  %545 = load i32, i32* %544, align 4
  %546 = icmp ne i32 %541, %545
  %547 = icmp eq i32 %541, 1
  %548 = and i1 %547, %546
  %549 = select i1 %548, i32 %545, i32 %541
  %550 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %510, i64 0, i32 1, i64 %537
  store i32 %549, i32* %550, align 4
  %551 = add nuw nsw i64 %522, 2
  %552 = add i64 %523, -2
  %553 = icmp eq i64 %552, 0
  br i1 %553, label %554, label %521

554:                                              ; preds = %521, %513
  %555 = phi i64 [ 0, %513 ], [ %551, %521 ]
  %556 = icmp eq i64 %517, 0
  br i1 %556, label %571, label %557

557:                                              ; preds = %554
  %558 = getelementptr inbounds i32, i32* %478, i64 %555
  %559 = getelementptr inbounds [5 x i32], [5 x i32]* %511, i64 0, i64 %555
  %560 = select i1 %515, i32* %558, i32* %559
  %561 = load i32, i32* %560, align 4
  %562 = getelementptr inbounds i32, i32* %499, i64 %555
  %563 = getelementptr inbounds [5 x i32], [5 x i32]* %512, i64 0, i64 %555
  %564 = select i1 %516, i32* %562, i32* %563
  %565 = load i32, i32* %564, align 4
  %566 = icmp ne i32 %561, %565
  %567 = icmp eq i32 %561, 1
  %568 = and i1 %567, %566
  %569 = select i1 %568, i32 %565, i32 %561
  %570 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %510, i64 0, i32 1, i64 %555
  store i32 %569, i32* %570, align 4
  br label %571

571:                                              ; preds = %557, %554, %509
  %572 = add nsw i32 %171, -1
  %573 = select i1 %77, i32 %572, i32 %429
  %574 = select i1 %80, i32 %429, i32 %572
  %575 = icmp sgt i32 %477, 5
  %576 = sext i32 %573 to i64
  %577 = getelementptr inbounds i32, i32* %478, i64 %576
  %578 = getelementptr inbounds [5 x i32], [5 x i32]* %511, i64 0, i64 %576
  %579 = select i1 %575, i32* %577, i32* %578
  %580 = load i32, i32* %579, align 4
  %581 = sext i32 %429 to i64
  %582 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %510, i64 0, i32 1, i64 %581
  store i32 %580, i32* %582, align 4
  %583 = icmp sgt i32 %498, 5
  %584 = sext i32 %574 to i64
  %585 = getelementptr inbounds i32, i32* %499, i64 %584
  %586 = getelementptr inbounds [5 x i32], [5 x i32]* %512, i64 0, i64 %584
  %587 = select i1 %583, i32* %585, i32* %586
  %588 = load i32, i32* %587, align 4
  %589 = sext i32 %572 to i64
  %590 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %510, i64 0, i32 1, i64 %589
  store i32 %588, i32* %590, align 4
  %591 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %592 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %591, align 8
  %593 = call i32 %592(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %112, %struct.TfLiteIntArray* %510) #11
  br label %594

594:                                              ; preds = %459, %506, %571
  %595 = phi i32* [ %434, %459 ], [ %478, %506 ], [ %478, %571 ]
  %596 = phi i32 [ %432, %459 ], [ %477, %506 ], [ %477, %571 ]
  %597 = phi i32* [ %438, %459 ], [ %499, %506 ], [ %499, %571 ]
  %598 = phi i32 [ %436, %459 ], [ %498, %506 ], [ %498, %571 ]
  %599 = phi i32 [ 1, %459 ], [ 1, %506 ], [ %593, %571 ]
  %600 = icmp slt i32 %598, 6
  %601 = icmp eq i32* %597, null
  %602 = or i1 %600, %601
  br i1 %602, label %605, label %603

603:                                              ; preds = %594
  %604 = bitcast i32* %597 to i8*
  call void @_ZdaPv(i8* %604) #10
  br label %605

605:                                              ; preds = %594, %603
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %290) #11
  %606 = icmp slt i32 %596, 6
  %607 = icmp eq i32* %595, null
  %608 = or i1 %606, %607
  br i1 %608, label %611, label %609

609:                                              ; preds = %605
  %610 = bitcast i32* %595 to i8*
  call void @_ZdaPv(i8* %610) #10
  br label %611

611:                                              ; preds = %605, %609
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %172) #11
  br label %612

612:                                              ; preds = %129, %132, %138, %147, %152, %161, %166, %611, %67
  %613 = phi i32 [ %69, %67 ], [ %599, %611 ], [ 1, %166 ], [ 1, %161 ], [ 1, %152 ], [ 1, %147 ], [ 1, %138 ], [ 1, %132 ], [ %118, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  br label %614

614:                                              ; preds = %612, %24, %15
  %615 = phi i32 [ 1, %15 ], [ 1, %24 ], [ %613, %612 ]
  ret i32 %615
}

declare i32 @_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_PS2_Pd(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, double*) local_unnamed_addr #4

declare void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double, i32*, i32*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin12batch_matmul20TransposeRowsColumnsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %36 [
    i32 1, label %6
    i32 9, label %21
  ]

6:                                                ; preds = %3
  %7 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %10 = bitcast %union.TfLitePtrUnion* %9 to float**
  %11 = load float*, float** %10, align 8
  br label %12

12:                                               ; preds = %6, %8
  %13 = phi float* [ %11, %8 ], [ null, %6 ]
  %14 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %17 = bitcast %union.TfLitePtrUnion* %16 to float**
  %18 = load float*, float** %17, align 8
  br label %19

19:                                               ; preds = %12, %15
  %20 = phi float* [ %18, %15 ], [ null, %12 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIfEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %1, float* %13, %struct.TfLiteTensor* %2, float* %20)
  br label %39

21:                                               ; preds = %3
  %22 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %25 = bitcast %union.TfLitePtrUnion* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %21, %23
  %28 = phi i8* [ %26, %23 ], [ null, %21 ]
  %29 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %32 = bitcast %union.TfLitePtrUnion* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %27, %30
  %35 = phi i8* [ %33, %30 ], [ null, %27 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIaEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %1, i8* %28, %struct.TfLiteTensor* %2, i8* %35)
  br label %39

36:                                               ; preds = %3
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %38 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %37, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %38(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %39

39:                                               ; preds = %36, %34, %19
  %40 = phi i32 [ 0, %19 ], [ 0, %34 ], [ 1, %36 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIfEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor*, float*, %struct.TfLiteTensor*, float*) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"struct.tflite::TransposeParams", align 4
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %30, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %12 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %11, align 8, !noalias !29
  %13 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4, !noalias !29
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 1, i64 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %14, i32* %16, align 8, !alias.scope !29
  %17 = icmp sgt i32 %14, 5
  br i1 %17, label %18, label %25

18:                                               ; preds = %10
  %19 = sext i32 %14 to i64
  %20 = shl nsw i64 %19, 2
  %21 = tail call i8* @_Znam(i64 %20) #10, !noalias !29
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %23 = bitcast i32** %22 to i8**
  store i8* %21, i8** %23, align 8, !alias.scope !29
  %24 = bitcast i8* %21 to i32*
  br label %35

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to i32*
  %28 = sext i32 %14 to i64
  %29 = shl nsw i64 %28, 2
  br label %35

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %31, align 8, !alias.scope !29
  %32 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %33, align 8, !alias.scope !32
  %34 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** inttoptr (i64 16 to %struct.TfLiteIntArray**), align 16
  br label %60

35:                                               ; preds = %25, %18
  %36 = phi i64 [ %20, %18 ], [ %29, %25 ]
  %37 = phi i32* [ %24, %18 ], [ %27, %25 ]
  %38 = bitcast i32* %37 to i8*
  %39 = bitcast i32* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 %36, i1 false) #11
  %40 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 32, i1 false)
  %41 = load i32, i32* %13, align 4, !noalias !32
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %41, i32* %42, align 8, !alias.scope !32
  %43 = icmp sgt i32 %41, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %35
  %45 = sext i32 %41 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10, !noalias !32
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8, !alias.scope !32
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %41 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %51, %44
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %39, i64 %57, i1 false) #11
  br label %60

60:                                               ; preds = %30, %56
  %61 = phi i32 [ 0, %30 ], [ %14, %56 ]
  %62 = phi i32 [ 0, %30 ], [ %41, %56 ]
  %63 = phi %struct.TfLiteIntArray* [ %34, %30 ], [ %12, %56 ]
  %64 = phi i8* [ %32, %30 ], [ %40, %56 ]
  %65 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 -86, i64 24, i1 false)
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = trunc i32 %67 to i8
  store i8 %68, i8* %65, align 4
  %69 = add i32 %67, -2
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %138

71:                                               ; preds = %60
  %72 = zext i32 %69 to i64
  %73 = icmp ult i32 %69, 8
  br i1 %73, label %74, label %76

74:                                               ; preds = %136, %71
  %75 = phi i64 [ 0, %71 ], [ %77, %136 ]
  br label %200

76:                                               ; preds = %71
  %77 = and i64 %72, 4294967288
  %78 = add nsw i64 %77, -8
  %79 = lshr exact i64 %78, 3
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 3
  %82 = icmp ult i64 %78, 24
  br i1 %82, label %119, label %83

83:                                               ; preds = %76
  %84 = sub nsw i64 %80, %81
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ 0, %83 ], [ %115, %85 ]
  %87 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %83 ], [ %116, %85 ]
  %88 = phi i64 [ %84, %83 ], [ %117, %85 ]
  %89 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %86
  %90 = add <4 x i32> %87, <i32 4, i32 4, i32 4, i32 4>
  %91 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %87, <4 x i32>* %91, align 4
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> %90, <4 x i32>* %93, align 4
  %94 = or i64 %86, 8
  %95 = add <4 x i32> %87, <i32 8, i32 8, i32 8, i32 8>
  %96 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %94
  %97 = add <4 x i32> %87, <i32 12, i32 12, i32 12, i32 12>
  %98 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %95, <4 x i32>* %98, align 4
  %99 = getelementptr inbounds i32, i32* %96, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %100, align 4
  %101 = or i64 %86, 16
  %102 = add <4 x i32> %87, <i32 16, i32 16, i32 16, i32 16>
  %103 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %101
  %104 = add <4 x i32> %87, <i32 20, i32 20, i32 20, i32 20>
  %105 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4
  %108 = or i64 %86, 24
  %109 = add <4 x i32> %87, <i32 24, i32 24, i32 24, i32 24>
  %110 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %108
  %111 = add <4 x i32> %87, <i32 28, i32 28, i32 28, i32 28>
  %112 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %109, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4
  %115 = add i64 %86, 32
  %116 = add <4 x i32> %87, <i32 32, i32 32, i32 32, i32 32>
  %117 = add i64 %88, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %85, !llvm.loop !35

119:                                              ; preds = %85, %76
  %120 = phi i64 [ 0, %76 ], [ %115, %85 ]
  %121 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %76 ], [ %116, %85 ]
  %122 = icmp eq i64 %81, 0
  br i1 %122, label %136, label %123

123:                                              ; preds = %119, %123
  %124 = phi i64 [ %132, %123 ], [ %120, %119 ]
  %125 = phi <4 x i32> [ %133, %123 ], [ %121, %119 ]
  %126 = phi i64 [ %134, %123 ], [ %81, %119 ]
  %127 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %124
  %128 = add <4 x i32> %125, <i32 4, i32 4, i32 4, i32 4>
  %129 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %125, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds i32, i32* %127, i64 4
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %128, <4 x i32>* %131, align 4
  %132 = add i64 %124, 8
  %133 = add <4 x i32> %125, <i32 8, i32 8, i32 8, i32 8>
  %134 = add i64 %126, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %123, !llvm.loop !36

136:                                              ; preds = %123, %119
  %137 = icmp eq i64 %77, %72
  br i1 %137, label %138, label %74

138:                                              ; preds = %200, %136, %60
  %139 = add nsw i32 %67, -1
  %140 = sext i32 %69 to i64
  %141 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %140
  store i32 %139, i32* %141, align 4
  %142 = sext i32 %139 to i64
  %143 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %142
  store i32 %69, i32* %143, align 4
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %145 = icmp sgt i32 %62, 5
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %147 = getelementptr inbounds %union.anon, %union.anon* %146, i64 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 %140
  %150 = bitcast %union.anon* %146 to [5 x i32]*
  %151 = getelementptr inbounds [5 x i32], [5 x i32]* %150, i64 0, i64 %140
  %152 = select i1 %145, i32* %149, i32* %151
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %155 = icmp sgt i32 %61, 5
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %155, label %157, label %163

157:                                              ; preds = %138
  %158 = getelementptr inbounds %union.anon, %union.anon* %156, i64 0, i32 0
  %159 = load i32*, i32** %158, align 8
  %160 = getelementptr inbounds i32, i32* %159, i64 %142
  store i32 %153, i32* %160, align 4
  %161 = load i32, i32* %144, align 8
  %162 = load i32*, i32** %147, align 8
  br label %166

163:                                              ; preds = %138
  %164 = bitcast %union.anon* %156 to [5 x i32]*
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %164, i64 0, i64 %142
  store i32 %153, i32* %165, align 4
  br label %166

166:                                              ; preds = %157, %163
  %167 = phi i32* [ %162, %157 ], [ %148, %163 ]
  %168 = phi i32 [ %161, %157 ], [ %62, %163 ]
  %169 = icmp sgt i32 %168, 5
  %170 = getelementptr inbounds i32, i32* %167, i64 %142
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %150, i64 0, i64 %142
  %172 = select i1 %169, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = load i32, i32* %154, align 8
  %175 = icmp sgt i32 %174, 5
  %176 = getelementptr inbounds %union.anon, %union.anon* %156, i64 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = getelementptr inbounds i32, i32* %177, i64 %140
  %179 = bitcast %union.anon* %156 to [5 x i32]*
  %180 = getelementptr inbounds [5 x i32], [5 x i32]* %179, i64 0, i64 %140
  %181 = select i1 %175, i32* %178, i32* %180
  store i32 %173, i32* %181, align 4
  call void @_ZN6tflite13optimized_ops9TransposeIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %1, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, float* %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  %182 = load i32, i32* %144, align 8
  %183 = icmp sgt i32 %182, 5
  br i1 %183, label %184, label %190

184:                                              ; preds = %166
  %185 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %186 = load i32*, i32** %185, align 8
  %187 = icmp eq i32* %186, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %184
  %189 = bitcast i32* %186 to i8*
  call void @_ZdaPv(i8* %189) #10
  br label %190

190:                                              ; preds = %166, %184, %188
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #11
  %191 = load i32, i32* %154, align 8
  %192 = icmp sgt i32 %191, 5
  br i1 %192, label %193, label %199

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = icmp eq i32* %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %193
  %198 = bitcast i32* %195 to i8*
  call void @_ZdaPv(i8* %198) #10
  br label %199

199:                                              ; preds = %190, %193, %197
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void

200:                                              ; preds = %74, %200
  %201 = phi i64 [ %204, %200 ], [ %75, %74 ]
  %202 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %201
  %203 = trunc i64 %201 to i32
  store i32 %203, i32* %202, align 4
  %204 = add nuw nsw i64 %201, 1
  %205 = icmp eq i64 %204, %72
  br i1 %205, label %138, label %200, !llvm.loop !37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIaEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor*, i8*, %struct.TfLiteTensor*, i8*) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"struct.tflite::TransposeParams", align 4
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %30, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %12 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %11, align 8, !noalias !38
  %13 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4, !noalias !38
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 1, i64 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %14, i32* %16, align 8, !alias.scope !38
  %17 = icmp sgt i32 %14, 5
  br i1 %17, label %18, label %25

18:                                               ; preds = %10
  %19 = sext i32 %14 to i64
  %20 = shl nsw i64 %19, 2
  %21 = tail call i8* @_Znam(i64 %20) #10, !noalias !38
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %23 = bitcast i32** %22 to i8**
  store i8* %21, i8** %23, align 8, !alias.scope !38
  %24 = bitcast i8* %21 to i32*
  br label %35

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to i32*
  %28 = sext i32 %14 to i64
  %29 = shl nsw i64 %28, 2
  br label %35

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %31, align 8, !alias.scope !38
  %32 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %33, align 8, !alias.scope !41
  %34 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** inttoptr (i64 16 to %struct.TfLiteIntArray**), align 16
  br label %60

35:                                               ; preds = %25, %18
  %36 = phi i64 [ %20, %18 ], [ %29, %25 ]
  %37 = phi i32* [ %24, %18 ], [ %27, %25 ]
  %38 = bitcast i32* %37 to i8*
  %39 = bitcast i32* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 %36, i1 false) #11
  %40 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 32, i1 false)
  %41 = load i32, i32* %13, align 4, !noalias !41
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %41, i32* %42, align 8, !alias.scope !41
  %43 = icmp sgt i32 %41, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %35
  %45 = sext i32 %41 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10, !noalias !41
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8, !alias.scope !41
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %41 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %51, %44
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %39, i64 %57, i1 false) #11
  br label %60

60:                                               ; preds = %30, %56
  %61 = phi i32 [ 0, %30 ], [ %14, %56 ]
  %62 = phi i32 [ 0, %30 ], [ %41, %56 ]
  %63 = phi %struct.TfLiteIntArray* [ %34, %30 ], [ %12, %56 ]
  %64 = phi i8* [ %32, %30 ], [ %40, %56 ]
  %65 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 -86, i64 24, i1 false)
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = trunc i32 %67 to i8
  store i8 %68, i8* %65, align 4
  %69 = add i32 %67, -2
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %138

71:                                               ; preds = %60
  %72 = zext i32 %69 to i64
  %73 = icmp ult i32 %69, 8
  br i1 %73, label %74, label %76

74:                                               ; preds = %136, %71
  %75 = phi i64 [ 0, %71 ], [ %77, %136 ]
  br label %200

76:                                               ; preds = %71
  %77 = and i64 %72, 4294967288
  %78 = add nsw i64 %77, -8
  %79 = lshr exact i64 %78, 3
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 3
  %82 = icmp ult i64 %78, 24
  br i1 %82, label %119, label %83

83:                                               ; preds = %76
  %84 = sub nsw i64 %80, %81
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ 0, %83 ], [ %115, %85 ]
  %87 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %83 ], [ %116, %85 ]
  %88 = phi i64 [ %84, %83 ], [ %117, %85 ]
  %89 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %86
  %90 = add <4 x i32> %87, <i32 4, i32 4, i32 4, i32 4>
  %91 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %87, <4 x i32>* %91, align 4
  %92 = getelementptr inbounds i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> %90, <4 x i32>* %93, align 4
  %94 = or i64 %86, 8
  %95 = add <4 x i32> %87, <i32 8, i32 8, i32 8, i32 8>
  %96 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %94
  %97 = add <4 x i32> %87, <i32 12, i32 12, i32 12, i32 12>
  %98 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %95, <4 x i32>* %98, align 4
  %99 = getelementptr inbounds i32, i32* %96, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %100, align 4
  %101 = or i64 %86, 16
  %102 = add <4 x i32> %87, <i32 16, i32 16, i32 16, i32 16>
  %103 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %101
  %104 = add <4 x i32> %87, <i32 20, i32 20, i32 20, i32 20>
  %105 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 4
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4
  %108 = or i64 %86, 24
  %109 = add <4 x i32> %87, <i32 24, i32 24, i32 24, i32 24>
  %110 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %108
  %111 = add <4 x i32> %87, <i32 28, i32 28, i32 28, i32 28>
  %112 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %109, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4
  %115 = add i64 %86, 32
  %116 = add <4 x i32> %87, <i32 32, i32 32, i32 32, i32 32>
  %117 = add i64 %88, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %85, !llvm.loop !44

119:                                              ; preds = %85, %76
  %120 = phi i64 [ 0, %76 ], [ %115, %85 ]
  %121 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %76 ], [ %116, %85 ]
  %122 = icmp eq i64 %81, 0
  br i1 %122, label %136, label %123

123:                                              ; preds = %119, %123
  %124 = phi i64 [ %132, %123 ], [ %120, %119 ]
  %125 = phi <4 x i32> [ %133, %123 ], [ %121, %119 ]
  %126 = phi i64 [ %134, %123 ], [ %81, %119 ]
  %127 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %124
  %128 = add <4 x i32> %125, <i32 4, i32 4, i32 4, i32 4>
  %129 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %125, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds i32, i32* %127, i64 4
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %128, <4 x i32>* %131, align 4
  %132 = add i64 %124, 8
  %133 = add <4 x i32> %125, <i32 8, i32 8, i32 8, i32 8>
  %134 = add i64 %126, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %123, !llvm.loop !45

136:                                              ; preds = %123, %119
  %137 = icmp eq i64 %77, %72
  br i1 %137, label %138, label %74

138:                                              ; preds = %200, %136, %60
  %139 = add nsw i32 %67, -1
  %140 = sext i32 %69 to i64
  %141 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %140
  store i32 %139, i32* %141, align 4
  %142 = sext i32 %139 to i64
  %143 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %142
  store i32 %69, i32* %143, align 4
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %145 = icmp sgt i32 %62, 5
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %147 = getelementptr inbounds %union.anon, %union.anon* %146, i64 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 %140
  %150 = bitcast %union.anon* %146 to [5 x i32]*
  %151 = getelementptr inbounds [5 x i32], [5 x i32]* %150, i64 0, i64 %140
  %152 = select i1 %145, i32* %149, i32* %151
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %155 = icmp sgt i32 %61, 5
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %155, label %157, label %163

157:                                              ; preds = %138
  %158 = getelementptr inbounds %union.anon, %union.anon* %156, i64 0, i32 0
  %159 = load i32*, i32** %158, align 8
  %160 = getelementptr inbounds i32, i32* %159, i64 %142
  store i32 %153, i32* %160, align 4
  %161 = load i32, i32* %144, align 8
  %162 = load i32*, i32** %147, align 8
  br label %166

163:                                              ; preds = %138
  %164 = bitcast %union.anon* %156 to [5 x i32]*
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %164, i64 0, i64 %142
  store i32 %153, i32* %165, align 4
  br label %166

166:                                              ; preds = %157, %163
  %167 = phi i32* [ %162, %157 ], [ %148, %163 ]
  %168 = phi i32 [ %161, %157 ], [ %62, %163 ]
  %169 = icmp sgt i32 %168, 5
  %170 = getelementptr inbounds i32, i32* %167, i64 %142
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %150, i64 0, i64 %142
  %172 = select i1 %169, i32* %170, i32* %171
  %173 = load i32, i32* %172, align 4
  %174 = load i32, i32* %154, align 8
  %175 = icmp sgt i32 %174, 5
  %176 = getelementptr inbounds %union.anon, %union.anon* %156, i64 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = getelementptr inbounds i32, i32* %177, i64 %140
  %179 = bitcast %union.anon* %156 to [5 x i32]*
  %180 = getelementptr inbounds [5 x i32], [5 x i32]* %179, i64 0, i64 %140
  %181 = select i1 %175, i32* %178, i32* %180
  store i32 %173, i32* %181, align 4
  call void @_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %1, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i8* %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  %182 = load i32, i32* %144, align 8
  %183 = icmp sgt i32 %182, 5
  br i1 %183, label %184, label %190

184:                                              ; preds = %166
  %185 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %186 = load i32*, i32** %185, align 8
  %187 = icmp eq i32* %186, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %184
  %189 = bitcast i32* %186 to i8*
  call void @_ZdaPv(i8* %189) #10
  br label %190

190:                                              ; preds = %166, %184, %188
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #11
  %191 = load i32, i32* %154, align 8
  %192 = icmp sgt i32 %191, 5
  br i1 %192, label %193, label %199

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = icmp eq i32* %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %193
  %198 = bitcast i32* %195 to i8*
  call void @_ZdaPv(i8* %198) #10
  br label %199

199:                                              ; preds = %190, %193, %197
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void

200:                                              ; preds = %74, %200
  %201 = phi i64 [ %204, %200 ], [ %75, %74 ]
  %202 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %7, i64 0, i32 1, i64 %201
  %203 = trunc i64 %201 to i32
  store i32 %203, i32* %202, align 4
  %204 = add nuw nsw i64 %201, 1
  %205 = icmp eq i64 %204, %72
  br i1 %205, label %138, label %200, !llvm.loop !46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin12batch_matmul17SwapRowColumnDimsERKNS_12RuntimeShapeE(%"class.tflite::RuntimeShape"* noalias nocapture sret, %"class.tflite::RuntimeShape"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %3 = bitcast %"class.tflite::RuntimeShape"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 32, i1 false)
  %4 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = icmp sgt i32 %6, 5
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = sext i32 %6 to i64
  %10 = shl nsw i64 %9, 2
  %11 = tail call i8* @_Znam(i64 %10) #10
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1, i32 0
  %13 = bitcast i32** %12 to i8**
  store i8* %11, i8** %13, align 8
  %14 = bitcast i8* %11 to i32*
  br label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %17 = bitcast %union.anon* %16 to i32*
  %18 = sext i32 %6 to i64
  %19 = shl nsw i64 %18, 2
  br label %20

20:                                               ; preds = %8, %15
  %21 = phi i64 [ %10, %8 ], [ %19, %15 ]
  %22 = phi i32* [ %14, %8 ], [ %17, %15 ]
  %23 = bitcast i32* %22 to i8*
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %25 = getelementptr inbounds %union.anon, %union.anon* %24, i64 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = bitcast %union.anon* %24 to i32*
  %28 = select i1 %7, i32* %26, i32* %27
  %29 = bitcast i32* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %29, i64 %21, i1 false) #11
  %30 = add nsw i32 %6, -2
  %31 = add nsw i32 %6, -1
  br i1 %7, label %32, label %48

32:                                               ; preds = %20
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds i32, i32* %26, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = sext i32 %30 to i64
  %39 = getelementptr inbounds i32, i32* %37, i64 %38
  store i32 %35, i32* %39, align 4
  %40 = load i32, i32* %5, align 8
  %41 = load i32*, i32** %25, align 8
  %42 = bitcast %union.anon* %24 to [5 x i32]*
  %43 = icmp sgt i32 %40, 5
  %44 = getelementptr inbounds i32, i32* %41, i64 %38
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 %38
  %46 = select i1 %43, i32* %44, i32* %45
  %47 = load i32, i32* %46, align 4
  br label %61

48:                                               ; preds = %20
  %49 = bitcast %union.anon* %24 to [5 x i32]*
  %50 = sext i32 %31 to i64
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %49, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %54 = bitcast %union.anon* %53 to [5 x i32]*
  %55 = sext i32 %30 to i64
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %54, i64 0, i64 %55
  store i32 %52, i32* %56, align 4
  %57 = load i32, i32* %4, align 8
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %49, i64 0, i64 %55
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %57, 5
  br i1 %60, label %61, label %67

61:                                               ; preds = %32, %48
  %62 = phi i32 [ %47, %32 ], [ %59, %48 ]
  %63 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = sext i32 %31 to i64
  %66 = getelementptr inbounds i32, i32* %64, i64 %65
  store i32 %62, i32* %66, align 4
  br label %71

67:                                               ; preds = %48
  %68 = bitcast %union.anon* %53 to [5 x i32]*
  %69 = sext i32 %31 to i64
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %68, i64 0, i64 %69
  store i32 %59, i32* %70, align 4
  br label %71

71:                                               ; preds = %61, %67
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.TfLiteTensor* @_ZN6tflite3ops7builtin12batch_matmul10GetTempRhsEP13TfLiteContextP10TfLiteNodePK12TfLiteTensor(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly, %struct.TfLiteTensor* nocapture readonly) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %11 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %10, align 8
  %12 = sext i32 %7 to i64
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %11, i64 %12
  br label %14

14:                                               ; preds = %3, %9
  %15 = phi %struct.TfLiteTensor* [ %13, %9 ], [ null, %3 ]
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 9
  br i1 %18, label %19, label %28

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 3
  %21 = bitcast %struct.TfLiteQuantizationParams* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %15, i64 0, i32 3
  %24 = bitcast %struct.TfLiteQuantizationParams* %23 to i32*
  store i32 %22, i32* %24, align 8
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 3, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %15, i64 0, i32 3, i32 1
  store i32 %26, i32* %27, align 4
  br label %28

28:                                               ; preds = %19, %14
  ret %struct.TfLiteTensor* %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.TfLiteTensor* @_ZN6tflite3ops7builtin12batch_matmul10GetTempLhsEP13TfLiteContextP10TfLiteNodePK12TfLiteTensor(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly, %struct.TfLiteTensor* nocapture readonly) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %11 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %10, align 8
  %12 = sext i32 %7 to i64
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %11, i64 %12
  br label %14

14:                                               ; preds = %3, %9
  %15 = phi %struct.TfLiteTensor* [ %13, %9 ], [ null, %3 ]
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 9
  br i1 %18, label %19, label %28

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 3
  %21 = bitcast %struct.TfLiteQuantizationParams* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %15, i64 0, i32 3
  %24 = bitcast %struct.TfLiteQuantizationParams* %23 to i32*
  store i32 %22, i32* %24, align 8
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 3, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %15, i64 0, i32 3, i32 1
  store i32 %26, i32* %27, align 4
  br label %28

28:                                               ; preds = %19, %14
  ret %struct.TfLiteTensor* %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin25Register_BATCH_MATMUL_REFEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin25Register_BATCH_MATMUL_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin12batch_matmul4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"class.tflite::RuntimeShape", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %9 = bitcast i8** %8 to %struct.TfLiteBatchMatMulParams**
  %10 = load %struct.TfLiteBatchMatMulParams*, %struct.TfLiteBatchMatMulParams** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %12 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %11, align 8
  %13 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 1, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, 0
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 1, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  %19 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  %24 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %25 = bitcast i8** %24 to %"struct.tflite::ops::builtin::batch_matmul::OpData"**
  %26 = load %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"struct.tflite::ops::builtin::batch_matmul::OpData"** %25, align 8
  br i1 %15, label %32, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %29 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %28, align 8
  %30 = sext i32 %14 to i64
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 %30
  br label %32

32:                                               ; preds = %2, %27
  %33 = phi %struct.TfLiteTensor* [ %31, %27 ], [ null, %2 ]
  br i1 %18, label %39, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %17 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %32, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %32 ]
  br i1 %23, label %46, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %22 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %39 ]
  %48 = bitcast %"class.tflite::RuntimeShape"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 32, i1 false)
  %49 = icmp eq %struct.TfLiteTensor* %33, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 0, i32* %51, align 8, !alias.scope !47
  br label %77

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 2
  %54 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %53, align 8, !noalias !47
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4, !noalias !47
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 1, i64 0
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 %56, i32* %58, align 8, !alias.scope !47
  %59 = icmp sgt i32 %56, 5
  br i1 %59, label %60, label %67

60:                                               ; preds = %52
  %61 = sext i32 %56 to i64
  %62 = shl nsw i64 %61, 2
  %63 = tail call i8* @_Znam(i64 %62) #10, !noalias !47
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %65 = bitcast i32** %64 to i8**
  store i8* %63, i8** %65, align 8, !alias.scope !47
  %66 = bitcast i8* %63 to i32*
  br label %72

67:                                               ; preds = %52
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %69 = bitcast %union.anon* %68 to i32*
  %70 = sext i32 %56 to i64
  %71 = shl nsw i64 %70, 2
  br label %72

72:                                               ; preds = %67, %60
  %73 = phi i64 [ %62, %60 ], [ %71, %67 ]
  %74 = phi i32* [ %66, %60 ], [ %69, %67 ]
  %75 = bitcast i32* %74 to i8*
  %76 = bitcast i32* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %73, i1 false) #11
  br label %77

77:                                               ; preds = %50, %72
  %78 = phi i32 [ 0, %50 ], [ %56, %72 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 32, i1 false)
  %80 = icmp eq %struct.TfLiteTensor* %40, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !50
  br label %108

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8, !noalias !50
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4, !noalias !50
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %87, i32* %89, align 8, !alias.scope !50
  %90 = icmp sgt i32 %87, 5
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = sext i32 %87 to i64
  %93 = shl nsw i64 %92, 2
  %94 = tail call i8* @_Znam(i64 %93) #10, !noalias !50
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %96 = bitcast i32** %95 to i8**
  store i8* %94, i8** %96, align 8, !alias.scope !50
  %97 = bitcast i8* %94 to i32*
  br label %103

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %100 = bitcast %union.anon* %99 to i32*
  %101 = sext i32 %87 to i64
  %102 = shl nsw i64 %101, 2
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %98 ]
  %105 = phi i32* [ %97, %91 ], [ %100, %98 ]
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %104, i1 false) #11
  br label %108

108:                                              ; preds = %81, %103
  %109 = phi i32 [ 0, %81 ], [ %87, %103 ]
  %110 = getelementptr inbounds %struct.TfLiteBatchMatMulParams, %struct.TfLiteBatchMatMulParams* %10, i64 0, i32 1
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = icmp ne i8 %111, 0
  %113 = getelementptr inbounds %struct.TfLiteBatchMatMulParams, %struct.TfLiteBatchMatMulParams* %10, i64 0, i32 0
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = icmp ne i8 %114, 0
  br i1 %112, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %117, align 8
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp slt i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %124 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %123, align 8
  %125 = sext i32 %120 to i64
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %124, i64 %125
  br label %127

127:                                              ; preds = %122, %116
  %128 = phi %struct.TfLiteTensor* [ %126, %122 ], [ null, %116 ]
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, 9
  br i1 %131, label %132, label %141

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 3
  %134 = bitcast %struct.TfLiteQuantizationParams* %133 to i32*
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %128, i64 0, i32 3
  %137 = bitcast %struct.TfLiteQuantizationParams* %136 to i32*
  store i32 %135, i32* %137, align 8
  %138 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 3, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %128, i64 0, i32 3, i32 1
  store i32 %139, i32* %140, align 4
  br label %141

141:                                              ; preds = %132, %127, %108
  %142 = phi %struct.TfLiteTensor* [ %40, %108 ], [ %128, %127 ], [ %128, %132 ]
  br i1 %115, label %143, label %168

143:                                              ; preds = %141
  %144 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %145 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %144, align 8
  %146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %145, i64 0, i32 1, i64 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp slt i32 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %151 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %150, align 8
  %152 = sext i32 %147 to i64
  %153 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %151, i64 %152
  br label %154

154:                                              ; preds = %149, %143
  %155 = phi %struct.TfLiteTensor* [ %153, %149 ], [ null, %143 ]
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 9
  br i1 %158, label %159, label %168

159:                                              ; preds = %154
  %160 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 3
  %161 = bitcast %struct.TfLiteQuantizationParams* %160 to i32*
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %155, i64 0, i32 3
  %164 = bitcast %struct.TfLiteQuantizationParams* %163 to i32*
  store i32 %162, i32* %164, align 8
  %165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 3, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %155, i64 0, i32 3, i32 1
  store i32 %166, i32* %167, align 4
  br label %168

168:                                              ; preds = %159, %154, %141
  %169 = phi %struct.TfLiteTensor* [ %33, %141 ], [ %155, %154 ], [ %155, %159 ]
  br i1 %112, label %226, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 4
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %178

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %26, i64 0, i32 5
  %176 = load i8, i8* %175, align 4, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %226

178:                                              ; preds = %174, %170
  %179 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %180 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %179, align 8
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %180, i64 0, i32 1, i64 1
  %182 = load i32, i32* %181, align 4
  %183 = icmp slt i32 %182, 0
  br i1 %183, label %189, label %184

184:                                              ; preds = %178
  %185 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %186 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %187 = sext i32 %182 to i64
  %188 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %186, i64 %187
  br label %189

189:                                              ; preds = %178, %184
  %190 = phi %struct.TfLiteTensor* [ %188, %184 ], [ null, %178 ]
  %191 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %192 = load i32, i32* %191, align 8
  switch i32 %192, label %221 [
    i32 1, label %193
    i32 9, label %207
  ]

193:                                              ; preds = %189
  br i1 %80, label %198, label %194

194:                                              ; preds = %193
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1
  %196 = bitcast %union.TfLitePtrUnion* %195 to float**
  %197 = load float*, float** %196, align 8
  br label %198

198:                                              ; preds = %194, %193
  %199 = phi float* [ %197, %194 ], [ null, %193 ]
  %200 = icmp eq %struct.TfLiteTensor* %190, null
  br i1 %200, label %205, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %190, i64 0, i32 1
  %203 = bitcast %union.TfLitePtrUnion* %202 to float**
  %204 = load float*, float** %203, align 8
  br label %205

205:                                              ; preds = %201, %198
  %206 = phi float* [ %204, %201 ], [ null, %198 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIfEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %40, float* %199, %struct.TfLiteTensor* %190, float* %206) #11
  br label %224

207:                                              ; preds = %189
  br i1 %80, label %212, label %208

208:                                              ; preds = %207
  %209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1
  %210 = bitcast %union.TfLitePtrUnion* %209 to i8**
  %211 = load i8*, i8** %210, align 8
  br label %212

212:                                              ; preds = %208, %207
  %213 = phi i8* [ %211, %208 ], [ null, %207 ]
  %214 = icmp eq %struct.TfLiteTensor* %190, null
  br i1 %214, label %219, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %190, i64 0, i32 1
  %217 = bitcast %union.TfLitePtrUnion* %216 to i8**
  %218 = load i8*, i8** %217, align 8
  br label %219

219:                                              ; preds = %215, %212
  %220 = phi i8* [ %218, %215 ], [ null, %212 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIaEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %40, i8* %213, %struct.TfLiteTensor* %190, i8* %220) #11
  br label %224

221:                                              ; preds = %189
  %222 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %223 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %222, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %223(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %224

224:                                              ; preds = %205, %219, %221
  %225 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %26, i64 0, i32 5
  store i8 1, i8* %225, align 4
  br label %226

226:                                              ; preds = %174, %224, %168
  br i1 %115, label %227, label %273

227:                                              ; preds = %226
  %228 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %229 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %228, align 8
  %230 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %229, i64 0, i32 1, i64 0
  %231 = load i32, i32* %230, align 4
  %232 = icmp slt i32 %231, 0
  br i1 %232, label %238, label %233

233:                                              ; preds = %227
  %234 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %235 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %234, align 8
  %236 = sext i32 %231 to i64
  %237 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %235, i64 %236
  br label %238

238:                                              ; preds = %227, %233
  %239 = phi %struct.TfLiteTensor* [ %237, %233 ], [ null, %227 ]
  %240 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 0
  %241 = load i32, i32* %240, align 8
  switch i32 %241, label %270 [
    i32 1, label %242
    i32 9, label %256
  ]

242:                                              ; preds = %238
  br i1 %49, label %247, label %243

243:                                              ; preds = %242
  %244 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 1
  %245 = bitcast %union.TfLitePtrUnion* %244 to float**
  %246 = load float*, float** %245, align 8
  br label %247

247:                                              ; preds = %243, %242
  %248 = phi float* [ %246, %243 ], [ null, %242 ]
  %249 = icmp eq %struct.TfLiteTensor* %239, null
  br i1 %249, label %254, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %239, i64 0, i32 1
  %252 = bitcast %union.TfLitePtrUnion* %251 to float**
  %253 = load float*, float** %252, align 8
  br label %254

254:                                              ; preds = %250, %247
  %255 = phi float* [ %253, %250 ], [ null, %247 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIfEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %33, float* %248, %struct.TfLiteTensor* %239, float* %255) #11
  br label %273

256:                                              ; preds = %238
  br i1 %49, label %261, label %257

257:                                              ; preds = %256
  %258 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 1
  %259 = bitcast %union.TfLitePtrUnion* %258 to i8**
  %260 = load i8*, i8** %259, align 8
  br label %261

261:                                              ; preds = %257, %256
  %262 = phi i8* [ %260, %257 ], [ null, %256 ]
  %263 = icmp eq %struct.TfLiteTensor* %239, null
  br i1 %263, label %268, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %239, i64 0, i32 1
  %266 = bitcast %union.TfLitePtrUnion* %265 to i8**
  %267 = load i8*, i8** %266, align 8
  br label %268

268:                                              ; preds = %264, %261
  %269 = phi i8* [ %267, %264 ], [ null, %261 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIaEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %33, i8* %262, %struct.TfLiteTensor* %239, i8* %269) #11
  br label %273

270:                                              ; preds = %238
  %271 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %272 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %271, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %272(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %273

273:                                              ; preds = %270, %268, %254, %226
  %274 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %274) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %274, i8 -86, i64 32, i1 false)
  br i1 %112, label %275, label %300

275:                                              ; preds = %273
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %109, i32* %276, align 8
  %277 = icmp sgt i32 %109, 5
  br i1 %277, label %278, label %285

278:                                              ; preds = %275
  %279 = sext i32 %109 to i64
  %280 = shl nsw i64 %279, 2
  %281 = tail call i8* @_Znam(i64 %280) #10
  %282 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %283 = bitcast i32** %282 to i8**
  store i8* %281, i8** %283, align 8
  %284 = bitcast i8* %281 to i32*
  br label %290

285:                                              ; preds = %275
  %286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %287 = bitcast %union.anon* %286 to i32*
  %288 = sext i32 %109 to i64
  %289 = shl nsw i64 %288, 2
  br label %290

290:                                              ; preds = %278, %285
  %291 = phi i64 [ %280, %278 ], [ %289, %285 ]
  %292 = phi i32* [ %284, %278 ], [ %287, %285 ]
  %293 = bitcast i32* %292 to i8*
  %294 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %295 = getelementptr inbounds %union.anon, %union.anon* %294, i64 0, i32 0
  %296 = load i32*, i32** %295, align 8
  %297 = bitcast %union.anon* %294 to i32*
  %298 = select i1 %277, i32* %296, i32* %297
  %299 = bitcast i32* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 4 %299, i64 %291, i1 false) #11
  br label %360

300:                                              ; preds = %273
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %274, i8 -86, i64 32, i1 false) #11, !alias.scope !53
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %109, i32* %301, align 8, !alias.scope !53
  %302 = icmp sgt i32 %109, 5
  br i1 %302, label %303, label %310

303:                                              ; preds = %300
  %304 = sext i32 %109 to i64
  %305 = shl nsw i64 %304, 2
  %306 = tail call i8* @_Znam(i64 %305) #10, !noalias !53
  %307 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %308 = bitcast i32** %307 to i8**
  store i8* %306, i8** %308, align 8, !alias.scope !53
  %309 = bitcast i8* %306 to i32*
  br label %315

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %312 = bitcast %union.anon* %311 to i32*
  %313 = sext i32 %109 to i64
  %314 = shl nsw i64 %313, 2
  br label %315

315:                                              ; preds = %310, %303
  %316 = phi i64 [ %305, %303 ], [ %314, %310 ]
  %317 = phi i32* [ %309, %303 ], [ %312, %310 ]
  %318 = bitcast i32* %317 to i8*
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %320 = getelementptr inbounds %union.anon, %union.anon* %319, i64 0, i32 0
  %321 = load i32*, i32** %320, align 8, !noalias !53
  %322 = bitcast %union.anon* %319 to i32*
  %323 = select i1 %302, i32* %321, i32* %322
  %324 = bitcast i32* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %318, i8* align 4 %324, i64 %316, i1 false) #11
  %325 = add nsw i32 %109, -2
  %326 = add nsw i32 %109, -1
  br i1 %302, label %327, label %337

327:                                              ; preds = %315
  %328 = sext i32 %326 to i64
  %329 = getelementptr inbounds i32, i32* %321, i64 %328
  %330 = load i32, i32* %329, align 4, !noalias !53
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %332 = load i32*, i32** %331, align 8, !alias.scope !53
  %333 = sext i32 %325 to i64
  %334 = getelementptr inbounds i32, i32* %332, i64 %333
  store i32 %330, i32* %334, align 4, !noalias !53
  %335 = getelementptr inbounds i32, i32* %321, i64 %333
  %336 = load i32, i32* %335, align 4, !noalias !53
  br label %353

337:                                              ; preds = %315
  %338 = bitcast %union.anon* %319 to [5 x i32]*
  %339 = sext i32 %326 to i64
  %340 = getelementptr inbounds [5 x i32], [5 x i32]* %338, i64 0, i64 %339
  %341 = load i32, i32* %340, align 4, !noalias !53
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %343 = bitcast %union.anon* %342 to [5 x i32]*
  %344 = sext i32 %325 to i64
  %345 = getelementptr inbounds [5 x i32], [5 x i32]* %343, i64 0, i64 %344
  store i32 %341, i32* %345, align 4, !alias.scope !53
  %346 = load i32, i32* %301, align 8, !alias.scope !53
  %347 = getelementptr inbounds [5 x i32], [5 x i32]* %338, i64 0, i64 %344
  %348 = load i32, i32* %347, align 4, !noalias !53
  %349 = icmp sgt i32 %346, 5
  br i1 %349, label %350, label %358

350:                                              ; preds = %337
  %351 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %352 = load i32*, i32** %351, align 8, !alias.scope !53
  br label %353

353:                                              ; preds = %350, %327
  %354 = phi i64 [ %339, %350 ], [ %328, %327 ]
  %355 = phi i32* [ %352, %350 ], [ %332, %327 ]
  %356 = phi i32 [ %348, %350 ], [ %336, %327 ]
  %357 = getelementptr inbounds i32, i32* %355, i64 %354
  store i32 %356, i32* %357, align 4, !noalias !53
  br label %360

358:                                              ; preds = %337
  %359 = getelementptr inbounds [5 x i32], [5 x i32]* %343, i64 0, i64 %339
  store i32 %348, i32* %359, align 4, !alias.scope !53
  br label %360

360:                                              ; preds = %358, %353, %290
  %361 = phi i32* [ %321, %358 ], [ %321, %353 ], [ %296, %290 ]
  %362 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %362) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %362, i8 -86, i64 32, i1 false)
  br i1 %115, label %363, label %388

363:                                              ; preds = %360
  %364 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %78, i32* %364, align 8
  %365 = icmp sgt i32 %78, 5
  br i1 %365, label %366, label %373

366:                                              ; preds = %363
  %367 = sext i32 %78 to i64
  %368 = shl nsw i64 %367, 2
  %369 = tail call i8* @_Znam(i64 %368) #10
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %371 = bitcast i32** %370 to i8**
  store i8* %369, i8** %371, align 8
  %372 = bitcast i8* %369 to i32*
  br label %378

373:                                              ; preds = %363
  %374 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %375 = bitcast %union.anon* %374 to i32*
  %376 = sext i32 %78 to i64
  %377 = shl nsw i64 %376, 2
  br label %378

378:                                              ; preds = %366, %373
  %379 = phi i64 [ %368, %366 ], [ %377, %373 ]
  %380 = phi i32* [ %372, %366 ], [ %375, %373 ]
  %381 = bitcast i32* %380 to i8*
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %383 = getelementptr inbounds %union.anon, %union.anon* %382, i64 0, i32 0
  %384 = load i32*, i32** %383, align 8
  %385 = bitcast %union.anon* %382 to i32*
  %386 = select i1 %365, i32* %384, i32* %385
  %387 = bitcast i32* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %381, i8* align 4 %387, i64 %379, i1 false) #11
  br label %448

388:                                              ; preds = %360
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %362, i8 -86, i64 32, i1 false) #11, !alias.scope !56
  %389 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %78, i32* %389, align 8, !alias.scope !56
  %390 = icmp sgt i32 %78, 5
  br i1 %390, label %391, label %398

391:                                              ; preds = %388
  %392 = sext i32 %78 to i64
  %393 = shl nsw i64 %392, 2
  %394 = tail call i8* @_Znam(i64 %393) #10, !noalias !56
  %395 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %396 = bitcast i32** %395 to i8**
  store i8* %394, i8** %396, align 8, !alias.scope !56
  %397 = bitcast i8* %394 to i32*
  br label %403

398:                                              ; preds = %388
  %399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %400 = bitcast %union.anon* %399 to i32*
  %401 = sext i32 %78 to i64
  %402 = shl nsw i64 %401, 2
  br label %403

403:                                              ; preds = %398, %391
  %404 = phi i64 [ %393, %391 ], [ %402, %398 ]
  %405 = phi i32* [ %397, %391 ], [ %400, %398 ]
  %406 = bitcast i32* %405 to i8*
  %407 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %408 = getelementptr inbounds %union.anon, %union.anon* %407, i64 0, i32 0
  %409 = load i32*, i32** %408, align 8, !noalias !56
  %410 = bitcast %union.anon* %407 to i32*
  %411 = select i1 %390, i32* %409, i32* %410
  %412 = bitcast i32* %411 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %406, i8* align 4 %412, i64 %404, i1 false) #11
  %413 = add nsw i32 %78, -2
  %414 = add nsw i32 %78, -1
  br i1 %390, label %415, label %425

415:                                              ; preds = %403
  %416 = sext i32 %414 to i64
  %417 = getelementptr inbounds i32, i32* %409, i64 %416
  %418 = load i32, i32* %417, align 4, !noalias !56
  %419 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %420 = load i32*, i32** %419, align 8, !alias.scope !56
  %421 = sext i32 %413 to i64
  %422 = getelementptr inbounds i32, i32* %420, i64 %421
  store i32 %418, i32* %422, align 4, !noalias !56
  %423 = getelementptr inbounds i32, i32* %409, i64 %421
  %424 = load i32, i32* %423, align 4, !noalias !56
  br label %441

425:                                              ; preds = %403
  %426 = bitcast %union.anon* %407 to [5 x i32]*
  %427 = sext i32 %414 to i64
  %428 = getelementptr inbounds [5 x i32], [5 x i32]* %426, i64 0, i64 %427
  %429 = load i32, i32* %428, align 4, !noalias !56
  %430 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %431 = bitcast %union.anon* %430 to [5 x i32]*
  %432 = sext i32 %413 to i64
  %433 = getelementptr inbounds [5 x i32], [5 x i32]* %431, i64 0, i64 %432
  store i32 %429, i32* %433, align 4, !alias.scope !56
  %434 = load i32, i32* %389, align 8, !alias.scope !56
  %435 = getelementptr inbounds [5 x i32], [5 x i32]* %426, i64 0, i64 %432
  %436 = load i32, i32* %435, align 4, !noalias !56
  %437 = icmp sgt i32 %434, 5
  br i1 %437, label %438, label %446

438:                                              ; preds = %425
  %439 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %440 = load i32*, i32** %439, align 8, !alias.scope !56
  br label %441

441:                                              ; preds = %438, %415
  %442 = phi i64 [ %427, %438 ], [ %416, %415 ]
  %443 = phi i32* [ %440, %438 ], [ %420, %415 ]
  %444 = phi i32 [ %436, %438 ], [ %424, %415 ]
  %445 = getelementptr inbounds i32, i32* %443, i64 %442
  store i32 %444, i32* %445, align 4, !noalias !56
  br label %448

446:                                              ; preds = %425
  %447 = getelementptr inbounds [5 x i32], [5 x i32]* %431, i64 0, i64 %427
  store i32 %436, i32* %447, align 4, !alias.scope !56
  br label %448

448:                                              ; preds = %446, %441, %378
  %449 = phi i32* [ %409, %446 ], [ %409, %441 ], [ %384, %378 ]
  %450 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %451 = load i32, i32* %450, align 8
  switch i32 %451, label %513 [
    i32 1, label %452
    i32 9, label %511
  ]

452:                                              ; preds = %448
  %453 = icmp eq %struct.TfLiteTensor* %142, null
  br i1 %453, label %458, label %454

454:                                              ; preds = %452
  %455 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %142, i64 0, i32 1
  %456 = bitcast %union.TfLitePtrUnion* %455 to float**
  %457 = load float*, float** %456, align 8
  br label %458

458:                                              ; preds = %452, %454
  %459 = phi float* [ %457, %454 ], [ null, %452 ]
  %460 = icmp eq %struct.TfLiteTensor* %169, null
  br i1 %460, label %465, label %461

461:                                              ; preds = %458
  %462 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %169, i64 0, i32 1
  %463 = bitcast %union.TfLitePtrUnion* %462 to float**
  %464 = load float*, float** %463, align 8
  br label %465

465:                                              ; preds = %458, %461
  %466 = phi float* [ %464, %461 ], [ null, %458 ]
  %467 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %467) #11
  %468 = icmp eq %struct.TfLiteTensor* %47, null
  br i1 %468, label %469, label %471

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %470, align 8, !alias.scope !59
  br label %499

471:                                              ; preds = %465
  %472 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 2
  %473 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %472, align 8, !noalias !59
  %474 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %473, i64 0, i32 0
  %475 = load i32, i32* %474, align 4, !noalias !59
  %476 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %473, i64 0, i32 1, i64 0
  %477 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %475, i32* %477, align 8, !alias.scope !59
  %478 = icmp sgt i32 %475, 5
  br i1 %478, label %479, label %486

479:                                              ; preds = %471
  %480 = sext i32 %475 to i64
  %481 = shl nsw i64 %480, 2
  %482 = tail call i8* @_Znam(i64 %481) #10, !noalias !59
  %483 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %484 = bitcast i32** %483 to i8**
  store i8* %482, i8** %484, align 8, !alias.scope !59
  %485 = bitcast i8* %482 to i32*
  br label %491

486:                                              ; preds = %471
  %487 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %488 = bitcast %union.anon* %487 to i32*
  %489 = sext i32 %475 to i64
  %490 = shl nsw i64 %489, 2
  br label %491

491:                                              ; preds = %486, %479
  %492 = phi i64 [ %481, %479 ], [ %490, %486 ]
  %493 = phi i32* [ %485, %479 ], [ %488, %486 ]
  %494 = bitcast i32* %493 to i8*
  %495 = bitcast i32* %476 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %494, i8* align 4 %495, i64 %492, i1 false) #11
  %496 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 1
  %497 = bitcast %union.TfLitePtrUnion* %496 to float**
  %498 = load float*, float** %497, align 8
  br label %499

499:                                              ; preds = %469, %491
  %500 = phi float* [ %498, %491 ], [ null, %469 ]
  call void @_ZN6tflite13reference_ops11BatchMatMulERKNS_12RuntimeShapeEPKfS3_S5_S3_Pf(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, float* %459, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %466, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, float* %500)
  %501 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %502 = load i32, i32* %501, align 8
  %503 = icmp sgt i32 %502, 5
  br i1 %503, label %504, label %510

504:                                              ; preds = %499
  %505 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %506 = load i32*, i32** %505, align 8
  %507 = icmp eq i32* %506, null
  br i1 %507, label %510, label %508

508:                                              ; preds = %504
  %509 = bitcast i32* %506 to i8*
  call void @_ZdaPv(i8* %509) #10
  br label %510

510:                                              ; preds = %499, %504, %508
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %467) #11
  br label %519

511:                                              ; preds = %448
  %512 = call i32 @_ZN6tflite3ops7builtin12batch_matmul13EvalQuantizedILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::batch_matmul::OpData"* %26, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %struct.TfLiteTensor* %169, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %struct.TfLiteTensor* %142, %struct.TfLiteTensor* %47)
  br label %519

513:                                              ; preds = %448
  %514 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %515 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %514, align 8
  %516 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 0
  %517 = load i32, i32* %516, align 8
  %518 = tail call i8* @TfLiteTypeGetName(i32 %517) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %515(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21, i64 0, i64 0), i8* %518) #11
  br label %519

519:                                              ; preds = %510, %511, %513
  %520 = phi i32 [ 1, %513 ], [ 0, %511 ], [ 0, %510 ]
  %521 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %522 = load i32, i32* %521, align 8
  %523 = icmp sgt i32 %522, 5
  br i1 %523, label %524, label %530

524:                                              ; preds = %519
  %525 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %526 = load i32*, i32** %525, align 8
  %527 = icmp eq i32* %526, null
  br i1 %527, label %530, label %528

528:                                              ; preds = %524
  %529 = bitcast i32* %526 to i8*
  call void @_ZdaPv(i8* %529) #10
  br label %530

530:                                              ; preds = %519, %524, %528
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %362) #11
  %531 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %532 = load i32, i32* %531, align 8
  %533 = icmp sgt i32 %532, 5
  br i1 %533, label %534, label %540

534:                                              ; preds = %530
  %535 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %536 = load i32*, i32** %535, align 8
  %537 = icmp eq i32* %536, null
  br i1 %537, label %540, label %538

538:                                              ; preds = %534
  %539 = bitcast i32* %536 to i8*
  call void @_ZdaPv(i8* %539) #10
  br label %540

540:                                              ; preds = %530, %534, %538
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %274) #11
  %541 = icmp slt i32 %109, 6
  %542 = icmp eq i32* %361, null
  %543 = or i1 %541, %542
  br i1 %543, label %546, label %544

544:                                              ; preds = %540
  %545 = bitcast i32* %361 to i8*
  call void @_ZdaPv(i8* %545) #10
  br label %546

546:                                              ; preds = %540, %544
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #11
  %547 = icmp slt i32 %78, 6
  %548 = icmp eq i32* %449, null
  %549 = or i1 %547, %548
  br i1 %549, label %552, label %550

550:                                              ; preds = %546
  %551 = bitcast i32* %449 to i8*
  call void @_ZdaPv(i8* %551) #10
  br label %552

552:                                              ; preds = %546, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #11
  ret i32 %520
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin39Register_BATCH_MATMUL_GENERIC_OPTIMIZEDEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin39Register_BATCH_MATMUL_GENERIC_OPTIMIZEDEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin12batch_matmul4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"class.tflite::RuntimeShape", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %9 = bitcast i8** %8 to %struct.TfLiteBatchMatMulParams**
  %10 = load %struct.TfLiteBatchMatMulParams*, %struct.TfLiteBatchMatMulParams** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %12 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %11, align 8
  %13 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 1, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, 0
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 1, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  %19 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  %24 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %25 = bitcast i8** %24 to %"struct.tflite::ops::builtin::batch_matmul::OpData"**
  %26 = load %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"struct.tflite::ops::builtin::batch_matmul::OpData"** %25, align 8
  br i1 %15, label %32, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %29 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %28, align 8
  %30 = sext i32 %14 to i64
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 %30
  br label %32

32:                                               ; preds = %2, %27
  %33 = phi %struct.TfLiteTensor* [ %31, %27 ], [ null, %2 ]
  br i1 %18, label %39, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %17 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %32, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %32 ]
  br i1 %23, label %46, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %22 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %39 ]
  %48 = bitcast %"class.tflite::RuntimeShape"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 32, i1 false)
  %49 = icmp eq %struct.TfLiteTensor* %33, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 0, i32* %51, align 8, !alias.scope !62
  br label %77

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 2
  %54 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %53, align 8, !noalias !62
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4, !noalias !62
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 1, i64 0
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 %56, i32* %58, align 8, !alias.scope !62
  %59 = icmp sgt i32 %56, 5
  br i1 %59, label %60, label %67

60:                                               ; preds = %52
  %61 = sext i32 %56 to i64
  %62 = shl nsw i64 %61, 2
  %63 = tail call i8* @_Znam(i64 %62) #10, !noalias !62
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %65 = bitcast i32** %64 to i8**
  store i8* %63, i8** %65, align 8, !alias.scope !62
  %66 = bitcast i8* %63 to i32*
  br label %72

67:                                               ; preds = %52
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %69 = bitcast %union.anon* %68 to i32*
  %70 = sext i32 %56 to i64
  %71 = shl nsw i64 %70, 2
  br label %72

72:                                               ; preds = %67, %60
  %73 = phi i64 [ %62, %60 ], [ %71, %67 ]
  %74 = phi i32* [ %66, %60 ], [ %69, %67 ]
  %75 = bitcast i32* %74 to i8*
  %76 = bitcast i32* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %73, i1 false) #11
  br label %77

77:                                               ; preds = %50, %72
  %78 = phi i32 [ 0, %50 ], [ %56, %72 ]
  %79 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 32, i1 false)
  %80 = icmp eq %struct.TfLiteTensor* %40, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %82, align 8, !alias.scope !65
  br label %108

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %84, align 8, !noalias !65
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4, !noalias !65
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %87, i32* %89, align 8, !alias.scope !65
  %90 = icmp sgt i32 %87, 5
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = sext i32 %87 to i64
  %93 = shl nsw i64 %92, 2
  %94 = tail call i8* @_Znam(i64 %93) #10, !noalias !65
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %96 = bitcast i32** %95 to i8**
  store i8* %94, i8** %96, align 8, !alias.scope !65
  %97 = bitcast i8* %94 to i32*
  br label %103

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %100 = bitcast %union.anon* %99 to i32*
  %101 = sext i32 %87 to i64
  %102 = shl nsw i64 %101, 2
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %98 ]
  %105 = phi i32* [ %97, %91 ], [ %100, %98 ]
  %106 = bitcast i32* %105 to i8*
  %107 = bitcast i32* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 %104, i1 false) #11
  br label %108

108:                                              ; preds = %81, %103
  %109 = phi i32 [ 0, %81 ], [ %87, %103 ]
  %110 = getelementptr inbounds %struct.TfLiteBatchMatMulParams, %struct.TfLiteBatchMatMulParams* %10, i64 0, i32 1
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = icmp ne i8 %111, 0
  %113 = getelementptr inbounds %struct.TfLiteBatchMatMulParams, %struct.TfLiteBatchMatMulParams* %10, i64 0, i32 0
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = icmp ne i8 %114, 0
  br i1 %112, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %117, align 8
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp slt i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %124 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %123, align 8
  %125 = sext i32 %120 to i64
  %126 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %124, i64 %125
  br label %127

127:                                              ; preds = %122, %116
  %128 = phi %struct.TfLiteTensor* [ %126, %122 ], [ null, %116 ]
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, 9
  br i1 %131, label %132, label %141

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 3
  %134 = bitcast %struct.TfLiteQuantizationParams* %133 to i32*
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %128, i64 0, i32 3
  %137 = bitcast %struct.TfLiteQuantizationParams* %136 to i32*
  store i32 %135, i32* %137, align 8
  %138 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 3, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %128, i64 0, i32 3, i32 1
  store i32 %139, i32* %140, align 4
  br label %141

141:                                              ; preds = %132, %127, %108
  %142 = phi %struct.TfLiteTensor* [ %40, %108 ], [ %128, %127 ], [ %128, %132 ]
  br i1 %115, label %143, label %168

143:                                              ; preds = %141
  %144 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %145 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %144, align 8
  %146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %145, i64 0, i32 1, i64 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp slt i32 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %151 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %150, align 8
  %152 = sext i32 %147 to i64
  %153 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %151, i64 %152
  br label %154

154:                                              ; preds = %149, %143
  %155 = phi %struct.TfLiteTensor* [ %153, %149 ], [ null, %143 ]
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 9
  br i1 %158, label %159, label %168

159:                                              ; preds = %154
  %160 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 3
  %161 = bitcast %struct.TfLiteQuantizationParams* %160 to i32*
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %155, i64 0, i32 3
  %164 = bitcast %struct.TfLiteQuantizationParams* %163 to i32*
  store i32 %162, i32* %164, align 8
  %165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 3, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %155, i64 0, i32 3, i32 1
  store i32 %166, i32* %167, align 4
  br label %168

168:                                              ; preds = %159, %154, %141
  %169 = phi %struct.TfLiteTensor* [ %33, %141 ], [ %155, %154 ], [ %155, %159 ]
  br i1 %112, label %226, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 4
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %178

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %26, i64 0, i32 5
  %176 = load i8, i8* %175, align 4, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %226

178:                                              ; preds = %174, %170
  %179 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %180 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %179, align 8
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %180, i64 0, i32 1, i64 1
  %182 = load i32, i32* %181, align 4
  %183 = icmp slt i32 %182, 0
  br i1 %183, label %189, label %184

184:                                              ; preds = %178
  %185 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %186 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %187 = sext i32 %182 to i64
  %188 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %186, i64 %187
  br label %189

189:                                              ; preds = %178, %184
  %190 = phi %struct.TfLiteTensor* [ %188, %184 ], [ null, %178 ]
  %191 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %192 = load i32, i32* %191, align 8
  switch i32 %192, label %221 [
    i32 1, label %193
    i32 9, label %207
  ]

193:                                              ; preds = %189
  br i1 %80, label %198, label %194

194:                                              ; preds = %193
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1
  %196 = bitcast %union.TfLitePtrUnion* %195 to float**
  %197 = load float*, float** %196, align 8
  br label %198

198:                                              ; preds = %194, %193
  %199 = phi float* [ %197, %194 ], [ null, %193 ]
  %200 = icmp eq %struct.TfLiteTensor* %190, null
  br i1 %200, label %205, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %190, i64 0, i32 1
  %203 = bitcast %union.TfLitePtrUnion* %202 to float**
  %204 = load float*, float** %203, align 8
  br label %205

205:                                              ; preds = %201, %198
  %206 = phi float* [ %204, %201 ], [ null, %198 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIfEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %40, float* %199, %struct.TfLiteTensor* %190, float* %206) #11
  br label %224

207:                                              ; preds = %189
  br i1 %80, label %212, label %208

208:                                              ; preds = %207
  %209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1
  %210 = bitcast %union.TfLitePtrUnion* %209 to i8**
  %211 = load i8*, i8** %210, align 8
  br label %212

212:                                              ; preds = %208, %207
  %213 = phi i8* [ %211, %208 ], [ null, %207 ]
  %214 = icmp eq %struct.TfLiteTensor* %190, null
  br i1 %214, label %219, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %190, i64 0, i32 1
  %217 = bitcast %union.TfLitePtrUnion* %216 to i8**
  %218 = load i8*, i8** %217, align 8
  br label %219

219:                                              ; preds = %215, %212
  %220 = phi i8* [ %218, %215 ], [ null, %212 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIaEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %40, i8* %213, %struct.TfLiteTensor* %190, i8* %220) #11
  br label %224

221:                                              ; preds = %189
  %222 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %223 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %222, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %223(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %224

224:                                              ; preds = %205, %219, %221
  %225 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %26, i64 0, i32 5
  store i8 1, i8* %225, align 4
  br label %226

226:                                              ; preds = %174, %224, %168
  br i1 %115, label %227, label %273

227:                                              ; preds = %226
  %228 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %229 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %228, align 8
  %230 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %229, i64 0, i32 1, i64 0
  %231 = load i32, i32* %230, align 4
  %232 = icmp slt i32 %231, 0
  br i1 %232, label %238, label %233

233:                                              ; preds = %227
  %234 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %235 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %234, align 8
  %236 = sext i32 %231 to i64
  %237 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %235, i64 %236
  br label %238

238:                                              ; preds = %227, %233
  %239 = phi %struct.TfLiteTensor* [ %237, %233 ], [ null, %227 ]
  %240 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 0
  %241 = load i32, i32* %240, align 8
  switch i32 %241, label %270 [
    i32 1, label %242
    i32 9, label %256
  ]

242:                                              ; preds = %238
  br i1 %49, label %247, label %243

243:                                              ; preds = %242
  %244 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 1
  %245 = bitcast %union.TfLitePtrUnion* %244 to float**
  %246 = load float*, float** %245, align 8
  br label %247

247:                                              ; preds = %243, %242
  %248 = phi float* [ %246, %243 ], [ null, %242 ]
  %249 = icmp eq %struct.TfLiteTensor* %239, null
  br i1 %249, label %254, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %239, i64 0, i32 1
  %252 = bitcast %union.TfLitePtrUnion* %251 to float**
  %253 = load float*, float** %252, align 8
  br label %254

254:                                              ; preds = %250, %247
  %255 = phi float* [ %253, %250 ], [ null, %247 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIfEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %33, float* %248, %struct.TfLiteTensor* %239, float* %255) #11
  br label %273

256:                                              ; preds = %238
  br i1 %49, label %261, label %257

257:                                              ; preds = %256
  %258 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 1
  %259 = bitcast %union.TfLitePtrUnion* %258 to i8**
  %260 = load i8*, i8** %259, align 8
  br label %261

261:                                              ; preds = %257, %256
  %262 = phi i8* [ %260, %257 ], [ null, %256 ]
  %263 = icmp eq %struct.TfLiteTensor* %239, null
  br i1 %263, label %268, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %239, i64 0, i32 1
  %266 = bitcast %union.TfLitePtrUnion* %265 to i8**
  %267 = load i8*, i8** %266, align 8
  br label %268

268:                                              ; preds = %264, %261
  %269 = phi i8* [ %267, %264 ], [ null, %261 ]
  tail call void @_ZN6tflite3ops7builtin12batch_matmul24TransposeRowsColumnsImplIaEEvPK12TfLiteTensorPKT_PS4_PS7_(%struct.TfLiteTensor* %33, i8* %262, %struct.TfLiteTensor* %239, i8* %269) #11
  br label %273

270:                                              ; preds = %238
  %271 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %272 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %271, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %272(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %273

273:                                              ; preds = %270, %268, %254, %226
  %274 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %274) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %274, i8 -86, i64 32, i1 false)
  br i1 %112, label %275, label %300

275:                                              ; preds = %273
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %109, i32* %276, align 8
  %277 = icmp sgt i32 %109, 5
  br i1 %277, label %278, label %285

278:                                              ; preds = %275
  %279 = sext i32 %109 to i64
  %280 = shl nsw i64 %279, 2
  %281 = tail call i8* @_Znam(i64 %280) #10
  %282 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %283 = bitcast i32** %282 to i8**
  store i8* %281, i8** %283, align 8
  %284 = bitcast i8* %281 to i32*
  br label %290

285:                                              ; preds = %275
  %286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %287 = bitcast %union.anon* %286 to i32*
  %288 = sext i32 %109 to i64
  %289 = shl nsw i64 %288, 2
  br label %290

290:                                              ; preds = %278, %285
  %291 = phi i64 [ %280, %278 ], [ %289, %285 ]
  %292 = phi i32* [ %284, %278 ], [ %287, %285 ]
  %293 = bitcast i32* %292 to i8*
  %294 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %295 = getelementptr inbounds %union.anon, %union.anon* %294, i64 0, i32 0
  %296 = load i32*, i32** %295, align 8
  %297 = bitcast %union.anon* %294 to i32*
  %298 = select i1 %277, i32* %296, i32* %297
  %299 = bitcast i32* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 4 %299, i64 %291, i1 false) #11
  br label %360

300:                                              ; preds = %273
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %274, i8 -86, i64 32, i1 false) #11, !alias.scope !68
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %109, i32* %301, align 8, !alias.scope !68
  %302 = icmp sgt i32 %109, 5
  br i1 %302, label %303, label %310

303:                                              ; preds = %300
  %304 = sext i32 %109 to i64
  %305 = shl nsw i64 %304, 2
  %306 = tail call i8* @_Znam(i64 %305) #10, !noalias !68
  %307 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %308 = bitcast i32** %307 to i8**
  store i8* %306, i8** %308, align 8, !alias.scope !68
  %309 = bitcast i8* %306 to i32*
  br label %315

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %312 = bitcast %union.anon* %311 to i32*
  %313 = sext i32 %109 to i64
  %314 = shl nsw i64 %313, 2
  br label %315

315:                                              ; preds = %310, %303
  %316 = phi i64 [ %305, %303 ], [ %314, %310 ]
  %317 = phi i32* [ %309, %303 ], [ %312, %310 ]
  %318 = bitcast i32* %317 to i8*
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %320 = getelementptr inbounds %union.anon, %union.anon* %319, i64 0, i32 0
  %321 = load i32*, i32** %320, align 8, !noalias !68
  %322 = bitcast %union.anon* %319 to i32*
  %323 = select i1 %302, i32* %321, i32* %322
  %324 = bitcast i32* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %318, i8* align 4 %324, i64 %316, i1 false) #11
  %325 = add nsw i32 %109, -2
  %326 = add nsw i32 %109, -1
  br i1 %302, label %327, label %337

327:                                              ; preds = %315
  %328 = sext i32 %326 to i64
  %329 = getelementptr inbounds i32, i32* %321, i64 %328
  %330 = load i32, i32* %329, align 4, !noalias !68
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %332 = load i32*, i32** %331, align 8, !alias.scope !68
  %333 = sext i32 %325 to i64
  %334 = getelementptr inbounds i32, i32* %332, i64 %333
  store i32 %330, i32* %334, align 4, !noalias !68
  %335 = getelementptr inbounds i32, i32* %321, i64 %333
  %336 = load i32, i32* %335, align 4, !noalias !68
  br label %353

337:                                              ; preds = %315
  %338 = bitcast %union.anon* %319 to [5 x i32]*
  %339 = sext i32 %326 to i64
  %340 = getelementptr inbounds [5 x i32], [5 x i32]* %338, i64 0, i64 %339
  %341 = load i32, i32* %340, align 4, !noalias !68
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %343 = bitcast %union.anon* %342 to [5 x i32]*
  %344 = sext i32 %325 to i64
  %345 = getelementptr inbounds [5 x i32], [5 x i32]* %343, i64 0, i64 %344
  store i32 %341, i32* %345, align 4, !alias.scope !68
  %346 = load i32, i32* %301, align 8, !alias.scope !68
  %347 = getelementptr inbounds [5 x i32], [5 x i32]* %338, i64 0, i64 %344
  %348 = load i32, i32* %347, align 4, !noalias !68
  %349 = icmp sgt i32 %346, 5
  br i1 %349, label %350, label %358

350:                                              ; preds = %337
  %351 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %352 = load i32*, i32** %351, align 8, !alias.scope !68
  br label %353

353:                                              ; preds = %350, %327
  %354 = phi i64 [ %339, %350 ], [ %328, %327 ]
  %355 = phi i32* [ %352, %350 ], [ %332, %327 ]
  %356 = phi i32 [ %348, %350 ], [ %336, %327 ]
  %357 = getelementptr inbounds i32, i32* %355, i64 %354
  store i32 %356, i32* %357, align 4, !noalias !68
  br label %360

358:                                              ; preds = %337
  %359 = getelementptr inbounds [5 x i32], [5 x i32]* %343, i64 0, i64 %339
  store i32 %348, i32* %359, align 4, !alias.scope !68
  br label %360

360:                                              ; preds = %358, %353, %290
  %361 = phi i32* [ %321, %358 ], [ %321, %353 ], [ %296, %290 ]
  %362 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %362) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %362, i8 -86, i64 32, i1 false)
  br i1 %115, label %363, label %388

363:                                              ; preds = %360
  %364 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %78, i32* %364, align 8
  %365 = icmp sgt i32 %78, 5
  br i1 %365, label %366, label %373

366:                                              ; preds = %363
  %367 = sext i32 %78 to i64
  %368 = shl nsw i64 %367, 2
  %369 = tail call i8* @_Znam(i64 %368) #10
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %371 = bitcast i32** %370 to i8**
  store i8* %369, i8** %371, align 8
  %372 = bitcast i8* %369 to i32*
  br label %378

373:                                              ; preds = %363
  %374 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %375 = bitcast %union.anon* %374 to i32*
  %376 = sext i32 %78 to i64
  %377 = shl nsw i64 %376, 2
  br label %378

378:                                              ; preds = %366, %373
  %379 = phi i64 [ %368, %366 ], [ %377, %373 ]
  %380 = phi i32* [ %372, %366 ], [ %375, %373 ]
  %381 = bitcast i32* %380 to i8*
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %383 = getelementptr inbounds %union.anon, %union.anon* %382, i64 0, i32 0
  %384 = load i32*, i32** %383, align 8
  %385 = bitcast %union.anon* %382 to i32*
  %386 = select i1 %365, i32* %384, i32* %385
  %387 = bitcast i32* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %381, i8* align 4 %387, i64 %379, i1 false) #11
  br label %448

388:                                              ; preds = %360
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %362, i8 -86, i64 32, i1 false) #11, !alias.scope !71
  %389 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %78, i32* %389, align 8, !alias.scope !71
  %390 = icmp sgt i32 %78, 5
  br i1 %390, label %391, label %398

391:                                              ; preds = %388
  %392 = sext i32 %78 to i64
  %393 = shl nsw i64 %392, 2
  %394 = tail call i8* @_Znam(i64 %393) #10, !noalias !71
  %395 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %396 = bitcast i32** %395 to i8**
  store i8* %394, i8** %396, align 8, !alias.scope !71
  %397 = bitcast i8* %394 to i32*
  br label %403

398:                                              ; preds = %388
  %399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %400 = bitcast %union.anon* %399 to i32*
  %401 = sext i32 %78 to i64
  %402 = shl nsw i64 %401, 2
  br label %403

403:                                              ; preds = %398, %391
  %404 = phi i64 [ %393, %391 ], [ %402, %398 ]
  %405 = phi i32* [ %397, %391 ], [ %400, %398 ]
  %406 = bitcast i32* %405 to i8*
  %407 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %408 = getelementptr inbounds %union.anon, %union.anon* %407, i64 0, i32 0
  %409 = load i32*, i32** %408, align 8, !noalias !71
  %410 = bitcast %union.anon* %407 to i32*
  %411 = select i1 %390, i32* %409, i32* %410
  %412 = bitcast i32* %411 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %406, i8* align 4 %412, i64 %404, i1 false) #11
  %413 = add nsw i32 %78, -2
  %414 = add nsw i32 %78, -1
  br i1 %390, label %415, label %425

415:                                              ; preds = %403
  %416 = sext i32 %414 to i64
  %417 = getelementptr inbounds i32, i32* %409, i64 %416
  %418 = load i32, i32* %417, align 4, !noalias !71
  %419 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %420 = load i32*, i32** %419, align 8, !alias.scope !71
  %421 = sext i32 %413 to i64
  %422 = getelementptr inbounds i32, i32* %420, i64 %421
  store i32 %418, i32* %422, align 4, !noalias !71
  %423 = getelementptr inbounds i32, i32* %409, i64 %421
  %424 = load i32, i32* %423, align 4, !noalias !71
  br label %441

425:                                              ; preds = %403
  %426 = bitcast %union.anon* %407 to [5 x i32]*
  %427 = sext i32 %414 to i64
  %428 = getelementptr inbounds [5 x i32], [5 x i32]* %426, i64 0, i64 %427
  %429 = load i32, i32* %428, align 4, !noalias !71
  %430 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %431 = bitcast %union.anon* %430 to [5 x i32]*
  %432 = sext i32 %413 to i64
  %433 = getelementptr inbounds [5 x i32], [5 x i32]* %431, i64 0, i64 %432
  store i32 %429, i32* %433, align 4, !alias.scope !71
  %434 = load i32, i32* %389, align 8, !alias.scope !71
  %435 = getelementptr inbounds [5 x i32], [5 x i32]* %426, i64 0, i64 %432
  %436 = load i32, i32* %435, align 4, !noalias !71
  %437 = icmp sgt i32 %434, 5
  br i1 %437, label %438, label %446

438:                                              ; preds = %425
  %439 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %440 = load i32*, i32** %439, align 8, !alias.scope !71
  br label %441

441:                                              ; preds = %438, %415
  %442 = phi i64 [ %427, %438 ], [ %416, %415 ]
  %443 = phi i32* [ %440, %438 ], [ %420, %415 ]
  %444 = phi i32 [ %436, %438 ], [ %424, %415 ]
  %445 = getelementptr inbounds i32, i32* %443, i64 %442
  store i32 %444, i32* %445, align 4, !noalias !71
  br label %448

446:                                              ; preds = %425
  %447 = getelementptr inbounds [5 x i32], [5 x i32]* %431, i64 0, i64 %427
  store i32 %436, i32* %447, align 4, !alias.scope !71
  br label %448

448:                                              ; preds = %446, %441, %378
  %449 = phi i32* [ %409, %446 ], [ %409, %441 ], [ %384, %378 ]
  %450 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %451 = load i32, i32* %450, align 8
  switch i32 %451, label %514 [
    i32 1, label %452
    i32 9, label %512
  ]

452:                                              ; preds = %448
  %453 = icmp eq %struct.TfLiteTensor* %142, null
  br i1 %453, label %458, label %454

454:                                              ; preds = %452
  %455 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %142, i64 0, i32 1
  %456 = bitcast %union.TfLitePtrUnion* %455 to float**
  %457 = load float*, float** %456, align 8
  br label %458

458:                                              ; preds = %452, %454
  %459 = phi float* [ %457, %454 ], [ null, %452 ]
  %460 = icmp eq %struct.TfLiteTensor* %169, null
  br i1 %460, label %465, label %461

461:                                              ; preds = %458
  %462 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %169, i64 0, i32 1
  %463 = bitcast %union.TfLitePtrUnion* %462 to float**
  %464 = load float*, float** %463, align 8
  br label %465

465:                                              ; preds = %458, %461
  %466 = phi float* [ %464, %461 ], [ null, %458 ]
  %467 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %467) #11
  %468 = icmp eq %struct.TfLiteTensor* %47, null
  br i1 %468, label %469, label %471

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %470, align 8, !alias.scope !74
  br label %499

471:                                              ; preds = %465
  %472 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 2
  %473 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %472, align 8, !noalias !74
  %474 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %473, i64 0, i32 0
  %475 = load i32, i32* %474, align 4, !noalias !74
  %476 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %473, i64 0, i32 1, i64 0
  %477 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %475, i32* %477, align 8, !alias.scope !74
  %478 = icmp sgt i32 %475, 5
  br i1 %478, label %479, label %486

479:                                              ; preds = %471
  %480 = sext i32 %475 to i64
  %481 = shl nsw i64 %480, 2
  %482 = tail call i8* @_Znam(i64 %481) #10, !noalias !74
  %483 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %484 = bitcast i32** %483 to i8**
  store i8* %482, i8** %484, align 8, !alias.scope !74
  %485 = bitcast i8* %482 to i32*
  br label %491

486:                                              ; preds = %471
  %487 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %488 = bitcast %union.anon* %487 to i32*
  %489 = sext i32 %475 to i64
  %490 = shl nsw i64 %489, 2
  br label %491

491:                                              ; preds = %486, %479
  %492 = phi i64 [ %481, %479 ], [ %490, %486 ]
  %493 = phi i32* [ %485, %479 ], [ %488, %486 ]
  %494 = bitcast i32* %493 to i8*
  %495 = bitcast i32* %476 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %494, i8* align 4 %495, i64 %492, i1 false) #11
  %496 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 1
  %497 = bitcast %union.TfLitePtrUnion* %496 to float**
  %498 = load float*, float** %497, align 8
  br label %499

499:                                              ; preds = %469, %491
  %500 = phi float* [ %498, %491 ], [ null, %469 ]
  %501 = tail call %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext* %0) #11
  call void @_ZN6tflite13optimized_ops11BatchMatMulERKNS_12RuntimeShapeEPKfS3_S5_S3_PfPNS_17CpuBackendContextE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, float* %459, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %466, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, float* %500, %"class.tflite::CpuBackendContext"* %501)
  %502 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %503 = load i32, i32* %502, align 8
  %504 = icmp sgt i32 %503, 5
  br i1 %504, label %505, label %511

505:                                              ; preds = %499
  %506 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %507 = load i32*, i32** %506, align 8
  %508 = icmp eq i32* %507, null
  br i1 %508, label %511, label %509

509:                                              ; preds = %505
  %510 = bitcast i32* %507 to i8*
  call void @_ZdaPv(i8* %510) #10
  br label %511

511:                                              ; preds = %499, %505, %509
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %467) #11
  br label %520

512:                                              ; preds = %448
  %513 = call i32 @_ZN6tflite3ops7builtin12batch_matmul13EvalQuantizedILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::batch_matmul::OpData"* %26, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %struct.TfLiteTensor* %169, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %struct.TfLiteTensor* %142, %struct.TfLiteTensor* %47)
  br label %520

514:                                              ; preds = %448
  %515 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %516 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %515, align 8
  %517 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 0
  %518 = load i32, i32* %517, align 8
  %519 = tail call i8* @TfLiteTypeGetName(i32 %518) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %516(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21, i64 0, i64 0), i8* %519) #11
  br label %520

520:                                              ; preds = %511, %512, %514
  %521 = phi i32 [ 1, %514 ], [ 0, %512 ], [ 0, %511 ]
  %522 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %523 = load i32, i32* %522, align 8
  %524 = icmp sgt i32 %523, 5
  br i1 %524, label %525, label %531

525:                                              ; preds = %520
  %526 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %527 = load i32*, i32** %526, align 8
  %528 = icmp eq i32* %527, null
  br i1 %528, label %531, label %529

529:                                              ; preds = %525
  %530 = bitcast i32* %527 to i8*
  call void @_ZdaPv(i8* %530) #10
  br label %531

531:                                              ; preds = %520, %525, %529
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %362) #11
  %532 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %533 = load i32, i32* %532, align 8
  %534 = icmp sgt i32 %533, 5
  br i1 %534, label %535, label %541

535:                                              ; preds = %531
  %536 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %537 = load i32*, i32** %536, align 8
  %538 = icmp eq i32* %537, null
  br i1 %538, label %541, label %539

539:                                              ; preds = %535
  %540 = bitcast i32* %537 to i8*
  call void @_ZdaPv(i8* %540) #10
  br label %541

541:                                              ; preds = %531, %535, %539
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %274) #11
  %542 = icmp slt i32 %109, 6
  %543 = icmp eq i32* %361, null
  %544 = or i1 %542, %543
  br i1 %544, label %547, label %545

545:                                              ; preds = %541
  %546 = bitcast i32* %361 to i8*
  call void @_ZdaPv(i8* %546) #10
  br label %547

547:                                              ; preds = %541, %545
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #11
  %548 = icmp slt i32 %78, 6
  %549 = icmp eq i32* %449, null
  %550 = or i1 %548, %549
  br i1 %550, label %553, label %551

551:                                              ; preds = %547
  %552 = bitcast i32* %449 to i8*
  call void @_ZdaPv(i8* %552) #10
  br label %553

553:                                              ; preds = %547, %551
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #11
  ret i32 %521
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin21Register_BATCH_MATMULEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin39Register_BATCH_MATMUL_GENERIC_OPTIMIZEDEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops9TransposeIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"struct.tflite::TransposeParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::TransposeParams", align 4
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %17 = load i32, i32* %14, align 8
  store i32 %17, i32* %16, align 8
  %18 = icmp sgt i32 %17, 5
  br i1 %18, label %19, label %26

19:                                               ; preds = %5
  %20 = sext i32 %17 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* @_Znam(i64 %21) #10
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %24 = bitcast i32** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast i8* %22 to i32*
  br label %31

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to i32*
  %29 = sext i32 %17 to i64
  %30 = shl nsw i64 %29, 2
  br label %31

31:                                               ; preds = %19, %26
  %32 = phi i64 [ %21, %19 ], [ %30, %26 ]
  %33 = phi i32* [ %25, %19 ], [ %28, %26 ]
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %35, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %union.anon* %35 to i32*
  %39 = select i1 %18, i32* %37, i32* %38
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %40, i64 %32, i1 false) #11
  %41 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %13, i32* %42, align 8
  %43 = icmp sgt i32 %13, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %31
  %45 = sext i32 %13 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %13 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %61 = getelementptr inbounds %union.anon, %union.anon* %60, i64 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %union.anon* %60 to i32*
  %64 = select i1 %43, i32* %62, i32* %63
  %65 = bitcast i32* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %65, i64 %57, i1 false) #11
  %66 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 %67, i64 24, i1 false)
  call void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"* nonnull %6, %"class.tflite::RuntimeShape"* nonnull %7, %"struct.tflite::TransposeParams"* nonnull %8) #11
  %68 = load i8, i8* %66, align 4
  %69 = icmp sgt i8 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %56
  %71 = sext i8 %68 to i64
  br label %74

72:                                               ; preds = %74
  %73 = icmp slt i64 %80, %71
  br i1 %73, label %74, label %81

74:                                               ; preds = %70, %72
  %75 = phi i64 [ 0, %70 ], [ %80, %72 ]
  %76 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = icmp eq i64 %75, %78
  %80 = add nuw nsw i64 %75, 1
  br i1 %79, label %72, label %196

81:                                               ; preds = %72, %56
  %82 = bitcast float* %4 to i8*
  %83 = bitcast float* %2 to i8*
  %84 = load i32, i32* %14, align 8
  %85 = icmp sgt i32 %84, 5
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = load i32*, i32** %36, align 8
  br label %90

88:                                               ; preds = %81
  %89 = icmp sgt i32 %84, 0
  br i1 %89, label %90, label %194

90:                                               ; preds = %88, %86
  %91 = phi i32* [ %87, %86 ], [ %38, %88 ]
  %92 = zext i32 %84 to i64
  %93 = icmp ult i32 %84, 8
  br i1 %93, label %179, label %94

94:                                               ; preds = %90
  %95 = and i64 %92, 4294967288
  %96 = add nsw i64 %95, -8
  %97 = lshr exact i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 3
  %100 = icmp ult i64 %96, 24
  br i1 %100, label %146, label %101

101:                                              ; preds = %94
  %102 = sub nsw i64 %98, %99
  br label %103

103:                                              ; preds = %103, %101
  %104 = phi i64 [ 0, %101 ], [ %143, %103 ]
  %105 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %101 ], [ %141, %103 ]
  %106 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %101 ], [ %142, %103 ]
  %107 = phi i64 [ %102, %101 ], [ %144, %103 ]
  %108 = getelementptr inbounds i32, i32* %91, i64 %104
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4
  %111 = getelementptr inbounds i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4
  %114 = mul nsw <4 x i32> %110, %105
  %115 = mul nsw <4 x i32> %113, %106
  %116 = or i64 %104, 8
  %117 = getelementptr inbounds i32, i32* %91, i64 %116
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4
  %120 = getelementptr inbounds i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4
  %123 = mul nsw <4 x i32> %119, %114
  %124 = mul nsw <4 x i32> %122, %115
  %125 = or i64 %104, 16
  %126 = getelementptr inbounds i32, i32* %91, i64 %125
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 4
  %129 = getelementptr inbounds i32, i32* %126, i64 4
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4
  %132 = mul nsw <4 x i32> %128, %123
  %133 = mul nsw <4 x i32> %131, %124
  %134 = or i64 %104, 24
  %135 = getelementptr inbounds i32, i32* %91, i64 %134
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4
  %138 = getelementptr inbounds i32, i32* %135, i64 4
  %139 = bitcast i32* %138 to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 4
  %141 = mul nsw <4 x i32> %137, %132
  %142 = mul nsw <4 x i32> %140, %133
  %143 = add i64 %104, 32
  %144 = add i64 %107, -4
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %103, !llvm.loop !77

146:                                              ; preds = %103, %94
  %147 = phi <4 x i32> [ undef, %94 ], [ %141, %103 ]
  %148 = phi <4 x i32> [ undef, %94 ], [ %142, %103 ]
  %149 = phi i64 [ 0, %94 ], [ %143, %103 ]
  %150 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %94 ], [ %141, %103 ]
  %151 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %94 ], [ %142, %103 ]
  %152 = icmp eq i64 %99, 0
  br i1 %152, label %169, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %166, %153 ], [ %149, %146 ]
  %155 = phi <4 x i32> [ %164, %153 ], [ %150, %146 ]
  %156 = phi <4 x i32> [ %165, %153 ], [ %151, %146 ]
  %157 = phi i64 [ %167, %153 ], [ %99, %146 ]
  %158 = getelementptr inbounds i32, i32* %91, i64 %154
  %159 = bitcast i32* %158 to <4 x i32>*
  %160 = load <4 x i32>, <4 x i32>* %159, align 4
  %161 = getelementptr inbounds i32, i32* %158, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  %163 = load <4 x i32>, <4 x i32>* %162, align 4
  %164 = mul nsw <4 x i32> %160, %155
  %165 = mul nsw <4 x i32> %163, %156
  %166 = add i64 %154, 8
  %167 = add i64 %157, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %153, !llvm.loop !78

169:                                              ; preds = %153, %146
  %170 = phi <4 x i32> [ %147, %146 ], [ %164, %153 ]
  %171 = phi <4 x i32> [ %148, %146 ], [ %165, %153 ]
  %172 = mul <4 x i32> %171, %170
  %173 = shufflevector <4 x i32> %172, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %174 = mul <4 x i32> %172, %173
  %175 = shufflevector <4 x i32> %174, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %176 = mul <4 x i32> %174, %175
  %177 = extractelement <4 x i32> %176, i32 0
  %178 = icmp eq i64 %95, %92
  br i1 %178, label %190, label %179

179:                                              ; preds = %169, %90
  %180 = phi i64 [ 0, %90 ], [ %95, %169 ]
  %181 = phi i32 [ 1, %90 ], [ %177, %169 ]
  br label %182

182:                                              ; preds = %179, %182
  %183 = phi i64 [ %188, %182 ], [ %180, %179 ]
  %184 = phi i32 [ %187, %182 ], [ %181, %179 ]
  %185 = getelementptr inbounds i32, i32* %91, i64 %183
  %186 = load i32, i32* %185, align 4
  %187 = mul nsw i32 %186, %184
  %188 = add nuw nsw i64 %183, 1
  %189 = icmp eq i64 %188, %92
  br i1 %189, label %190, label %182, !llvm.loop !79

190:                                              ; preds = %182, %169
  %191 = phi i32 [ %177, %169 ], [ %187, %182 ]
  %192 = sext i32 %191 to i64
  %193 = shl nsw i64 %192, 2
  br label %194

194:                                              ; preds = %190, %88
  %195 = phi i64 [ 4, %88 ], [ %193, %190 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 %195, i1 false)
  br label %355

196:                                              ; preds = %74
  %197 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %198, 0
  %200 = icmp sgt i32 %13, 2
  %201 = and i1 %200, %199
  br i1 %201, label %202, label %354

202:                                              ; preds = %196
  %203 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 -86, i64 32, i1 false)
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %204, align 8
  %205 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %205) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 32, i1 false)
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %206, align 8
  %207 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %207, i8 -86, i64 24, i1 false)
  %208 = load i32, i32* %16, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %209, label %211, label %214

211:                                              ; preds = %202
  %212 = getelementptr inbounds %union.anon, %union.anon* %210, i64 0, i32 0
  %213 = load i32*, i32** %212, align 8
  br label %219

214:                                              ; preds = %202
  %215 = bitcast %union.anon* %210 to i32*
  %216 = icmp sgt i32 %208, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  %218 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  br label %323

219:                                              ; preds = %214, %211
  %220 = phi i32* [ %213, %211 ], [ %215, %214 ]
  %221 = zext i32 %208 to i64
  %222 = icmp ult i32 %208, 8
  br i1 %222, label %308, label %223

223:                                              ; preds = %219
  %224 = and i64 %221, 4294967288
  %225 = add nsw i64 %224, -8
  %226 = lshr exact i64 %225, 3
  %227 = add nuw nsw i64 %226, 1
  %228 = and i64 %227, 3
  %229 = icmp ult i64 %225, 24
  br i1 %229, label %275, label %230

230:                                              ; preds = %223
  %231 = sub nsw i64 %227, %228
  br label %232

232:                                              ; preds = %232, %230
  %233 = phi i64 [ 0, %230 ], [ %272, %232 ]
  %234 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %230 ], [ %270, %232 ]
  %235 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %230 ], [ %271, %232 ]
  %236 = phi i64 [ %231, %230 ], [ %273, %232 ]
  %237 = getelementptr inbounds i32, i32* %220, i64 %233
  %238 = bitcast i32* %237 to <4 x i32>*
  %239 = load <4 x i32>, <4 x i32>* %238, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 4
  %241 = bitcast i32* %240 to <4 x i32>*
  %242 = load <4 x i32>, <4 x i32>* %241, align 4
  %243 = mul nsw <4 x i32> %239, %234
  %244 = mul nsw <4 x i32> %242, %235
  %245 = or i64 %233, 8
  %246 = getelementptr inbounds i32, i32* %220, i64 %245
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4
  %249 = getelementptr inbounds i32, i32* %246, i64 4
  %250 = bitcast i32* %249 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4
  %252 = mul nsw <4 x i32> %248, %243
  %253 = mul nsw <4 x i32> %251, %244
  %254 = or i64 %233, 16
  %255 = getelementptr inbounds i32, i32* %220, i64 %254
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4
  %258 = getelementptr inbounds i32, i32* %255, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4
  %261 = mul nsw <4 x i32> %257, %252
  %262 = mul nsw <4 x i32> %260, %253
  %263 = or i64 %233, 24
  %264 = getelementptr inbounds i32, i32* %220, i64 %263
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4
  %267 = getelementptr inbounds i32, i32* %264, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  %269 = load <4 x i32>, <4 x i32>* %268, align 4
  %270 = mul nsw <4 x i32> %266, %261
  %271 = mul nsw <4 x i32> %269, %262
  %272 = add i64 %233, 32
  %273 = add i64 %236, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %232, !llvm.loop !80

275:                                              ; preds = %232, %223
  %276 = phi <4 x i32> [ undef, %223 ], [ %270, %232 ]
  %277 = phi <4 x i32> [ undef, %223 ], [ %271, %232 ]
  %278 = phi i64 [ 0, %223 ], [ %272, %232 ]
  %279 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %223 ], [ %270, %232 ]
  %280 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %223 ], [ %271, %232 ]
  %281 = icmp eq i64 %228, 0
  br i1 %281, label %298, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %295, %282 ], [ %278, %275 ]
  %284 = phi <4 x i32> [ %293, %282 ], [ %279, %275 ]
  %285 = phi <4 x i32> [ %294, %282 ], [ %280, %275 ]
  %286 = phi i64 [ %296, %282 ], [ %228, %275 ]
  %287 = getelementptr inbounds i32, i32* %220, i64 %283
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = getelementptr inbounds i32, i32* %287, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4
  %293 = mul nsw <4 x i32> %289, %284
  %294 = mul nsw <4 x i32> %292, %285
  %295 = add i64 %283, 8
  %296 = add i64 %286, -1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %282, !llvm.loop !81

298:                                              ; preds = %282, %275
  %299 = phi <4 x i32> [ %276, %275 ], [ %293, %282 ]
  %300 = phi <4 x i32> [ %277, %275 ], [ %294, %282 ]
  %301 = mul <4 x i32> %300, %299
  %302 = shufflevector <4 x i32> %301, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %303 = mul <4 x i32> %301, %302
  %304 = shufflevector <4 x i32> %303, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %305 = mul <4 x i32> %303, %304
  %306 = extractelement <4 x i32> %305, i32 0
  %307 = icmp eq i64 %224, %221
  br i1 %307, label %319, label %308

308:                                              ; preds = %298, %219
  %309 = phi i64 [ 0, %219 ], [ %224, %298 ]
  %310 = phi i32 [ 1, %219 ], [ %306, %298 ]
  br label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %317, %311 ], [ %309, %308 ]
  %313 = phi i32 [ %316, %311 ], [ %310, %308 ]
  %314 = getelementptr inbounds i32, i32* %220, i64 %312
  %315 = load i32, i32* %314, align 4
  %316 = mul nsw i32 %315, %313
  %317 = add nuw nsw i64 %312, 1
  %318 = icmp eq i64 %317, %221
  br i1 %318, label %319, label %311, !llvm.loop !82

319:                                              ; preds = %311, %298
  %320 = phi i32 [ %306, %298 ], [ %316, %311 ]
  %321 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  %322 = icmp sgt i32 %320, 0
  br i1 %322, label %323, label %329

323:                                              ; preds = %217, %319
  %324 = phi i64 [ %218, %217 ], [ %321, %319 ]
  %325 = phi i32 [ 1, %217 ], [ %320, %319 ]
  %326 = shl i64 %324, 32
  %327 = ashr exact i64 %326, 32
  %328 = sext i32 %325 to i64
  br label %348

329:                                              ; preds = %348, %319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #11
  %330 = load i32, i32* %206, align 8
  %331 = icmp sgt i32 %330, 5
  br i1 %331, label %332, label %338

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %334 = load i32*, i32** %333, align 8
  %335 = icmp eq i32* %334, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %332
  %337 = bitcast i32* %334 to i8*
  call void @_ZdaPv(i8* %337) #10
  br label %338

338:                                              ; preds = %329, %332, %336
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %205) #11
  %339 = load i32, i32* %204, align 8
  %340 = icmp sgt i32 %339, 5
  br i1 %340, label %341, label %347

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %343 = load i32*, i32** %342, align 8
  %344 = icmp eq i32* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %341
  %346 = bitcast i32* %343 to i8*
  call void @_ZdaPv(i8* %346) #10
  br label %347

347:                                              ; preds = %338, %341, %345
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #11
  br label %355

348:                                              ; preds = %323, %348
  %349 = phi i64 [ 0, %323 ], [ %352, %348 ]
  %350 = getelementptr inbounds float, float* %2, i64 %349
  %351 = getelementptr inbounds float, float* %4, i64 %349
  call void @_ZN6tflite13optimized_ops13TransposeImplIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, float* %350, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, float* %351)
  %352 = add i64 %349, %327
  %353 = icmp slt i64 %352, %328
  br i1 %353, label %348, label %329

354:                                              ; preds = %196
  call void @_ZN6tflite13optimized_ops13TransposeImplIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, float* %4)
  br label %355

355:                                              ; preds = %354, %347, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  %356 = load i32, i32* %42, align 8
  %357 = icmp sgt i32 %356, 5
  br i1 %357, label %358, label %364

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %360 = load i32*, i32** %359, align 8
  %361 = icmp eq i32* %360, null
  br i1 %361, label %364, label %362

362:                                              ; preds = %358
  %363 = bitcast i32* %360 to i8*
  call void @_ZdaPv(i8* %363) #10
  br label %364

364:                                              ; preds = %355, %358, %362
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #11
  %365 = load i32, i32* %16, align 8
  %366 = icmp sgt i32 %365, 5
  br i1 %366, label %367, label %373

367:                                              ; preds = %364
  %368 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %369 = load i32*, i32** %368, align 8
  %370 = icmp eq i32* %369, null
  br i1 %370, label %373, label %371

371:                                              ; preds = %367
  %372 = bitcast i32* %369 to i8*
  call void @_ZdaPv(i8* %372) #10
  br label %373

373:                                              ; preds = %364, %367, %371
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  ret void
}

declare void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"struct.tflite::TransposeParams"*) local_unnamed_addr #4

declare i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"struct.tflite::TransposeParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops13TransposeImplIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #0 comdat {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %6, align 4
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %7, align 4
  %14 = call zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* nonnull %6, i32* nonnull %7) #11
  br i1 %14, label %15, label %46

15:                                               ; preds = %5
  %16 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* %7, align 4
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i32*
  store i32 %17, i32* %21, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  store i32 %18, i32* %22, align 4
  %23 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 2, i32* %24, align 8
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %26 = bitcast %union.anon* %25 to i32*
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %17, i32* %27, align 4
  call void @_ZN6tflite13optimized_ops11Transpose2DIfEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, float* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, float* %4)
  %28 = load i32, i32* %24, align 8
  %29 = icmp sgt i32 %28, 5
  br i1 %29, label %30, label %36

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast i32* %32 to i8*
  call void @_ZdaPv(i8* %35) #10
  br label %36

36:                                               ; preds = %15, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  %37 = load i32, i32* %19, align 8
  %38 = icmp sgt i32 %37, 5
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast i32* %41 to i8*
  call void @_ZdaPv(i8* %44) #10
  br label %45

45:                                               ; preds = %36, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  br label %210

46:                                               ; preds = %5
  %47 = icmp eq i32 %11, 3
  br i1 %47, label %48, label %207

48:                                               ; preds = %46
  %49 = load i32, i32* %10, align 8
  %50 = icmp sgt i32 %49, 5
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %union.anon, %union.anon* %51, i64 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = getelementptr inbounds i32, i32* %53, i64 2
  %56 = bitcast %union.anon* %51 to [5 x i32]*
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 1
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %59 = bitcast [16 x i8]* %58 to i32*
  %60 = select i1 %50, i32* %54, i32* %57
  %61 = select i1 %50, i32* %55, i32* %59
  %62 = load i32, i32* %60, align 4
  %63 = load i32, i32* %61, align 4
  %64 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 2
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 1
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %73

69:                                               ; preds = %48
  %70 = icmp eq i32 %68, 1
  %71 = select i1 %70, i32 %63, i32 -1431655766
  %72 = select i1 %70, i32 -1431655766, i32 %63
  br label %85

73:                                               ; preds = %48
  %74 = icmp eq i32 %68, 2
  %75 = select i1 %74, i32 1, i32 -1431655766
  %76 = select i1 %74, i32 -1431655766, i32 1
  %77 = icmp eq i32 %65, 1
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = icmp eq i32 %68, 1
  %80 = select i1 %79, i32 %63, i32 %75
  %81 = select i1 %79, i32 %76, i32 %63
  %82 = icmp eq i32 %65, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = mul nsw i32 %63, %62
  br label %93

85:                                               ; preds = %78, %73, %69
  %86 = phi i32 [ %81, %78 ], [ %72, %69 ], [ %76, %73 ]
  %87 = phi i32 [ %80, %78 ], [ %71, %69 ], [ %75, %73 ]
  %88 = phi i32 [ -1431655766, %78 ], [ 1, %69 ], [ %63, %73 ]
  %89 = icmp eq i32 %68, 0
  %90 = mul nsw i32 %63, %62
  %91 = select i1 %89, i32 %90, i32 %87
  %92 = select i1 %89, i32 %86, i32 %90
  br label %93

93:                                               ; preds = %85, %83
  %94 = phi i32 [ %84, %83 ], [ %88, %85 ]
  %95 = phi i32 [ %80, %83 ], [ %91, %85 ]
  %96 = phi i32 [ %81, %83 ], [ %92, %85 ]
  %97 = sext i32 %65 to i64
  %98 = getelementptr inbounds i32, i32* %53, i64 %97
  %99 = sext i32 %68 to i64
  %100 = getelementptr inbounds i32, i32* %53, i64 %99
  %101 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 2
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %53, i64 %103
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %97
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %99
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %103
  %108 = select i1 %50, i32* %100, i32* %106
  %109 = select i1 %50, i32* %98, i32* %105
  %110 = select i1 %50, i32* %104, i32* %107
  %111 = load i32, i32* %109, align 4
  %112 = load i32, i32* %108, align 4
  %113 = load i32, i32* %110, align 4
  %114 = icmp sgt i32 %111, 0
  br i1 %114, label %115, label %210

115:                                              ; preds = %93
  %116 = icmp sgt i32 %112, 0
  %117 = icmp sgt i32 %113, 0
  %118 = sext i32 %96 to i64
  %119 = sext i32 %95 to i64
  %120 = sext i32 %94 to i64
  %121 = zext i32 %111 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %113 to i64
  %124 = add nsw i64 %123, -1
  %125 = and i64 %123, 3
  %126 = icmp ult i64 %124, 3
  %127 = sub nsw i64 %123, %125
  %128 = icmp eq i64 %125, 0
  br label %129

129:                                              ; preds = %144, %115
  %130 = phi i64 [ 0, %115 ], [ %145, %144 ]
  br i1 %116, label %131, label %144

131:                                              ; preds = %129
  %132 = mul nsw i64 %130, %120
  %133 = trunc i64 %130 to i32
  %134 = mul i32 %112, %133
  br label %135

135:                                              ; preds = %163, %131
  %136 = phi i64 [ 0, %131 ], [ %164, %163 ]
  br i1 %117, label %137, label %163

137:                                              ; preds = %135
  %138 = mul nsw i64 %136, %119
  %139 = add nsw i64 %138, %132
  %140 = trunc i64 %136 to i32
  %141 = add i32 %134, %140
  %142 = mul i32 %141, %113
  %143 = sext i32 %142 to i64
  br i1 %126, label %147, label %166

144:                                              ; preds = %163, %129
  %145 = add nuw nsw i64 %130, 1
  %146 = icmp eq i64 %145, %121
  br i1 %146, label %210, label %129

147:                                              ; preds = %166, %137
  %148 = phi i64 [ 0, %137 ], [ %204, %166 ]
  br i1 %128, label %163, label %149

149:                                              ; preds = %147, %149
  %150 = phi i64 [ %160, %149 ], [ %148, %147 ]
  %151 = phi i64 [ %161, %149 ], [ %125, %147 ]
  %152 = mul nsw i64 %150, %118
  %153 = add nsw i64 %139, %152
  %154 = add nsw i64 %150, %143
  %155 = getelementptr inbounds float, float* %2, i64 %153
  %156 = bitcast float* %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds float, float* %4, i64 %154
  %159 = bitcast float* %158 to i32*
  store i32 %157, i32* %159, align 4
  %160 = add nuw nsw i64 %150, 1
  %161 = add i64 %151, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %149, !llvm.loop !83

163:                                              ; preds = %147, %149, %135
  %164 = add nuw nsw i64 %136, 1
  %165 = icmp eq i64 %164, %122
  br i1 %165, label %144, label %135

166:                                              ; preds = %137, %166
  %167 = phi i64 [ %204, %166 ], [ 0, %137 ]
  %168 = phi i64 [ %205, %166 ], [ %127, %137 ]
  %169 = mul nsw i64 %167, %118
  %170 = add nsw i64 %139, %169
  %171 = add nsw i64 %167, %143
  %172 = getelementptr inbounds float, float* %2, i64 %170
  %173 = bitcast float* %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds float, float* %4, i64 %171
  %176 = bitcast float* %175 to i32*
  store i32 %174, i32* %176, align 4
  %177 = or i64 %167, 1
  %178 = mul nsw i64 %177, %118
  %179 = add nsw i64 %139, %178
  %180 = add nsw i64 %177, %143
  %181 = getelementptr inbounds float, float* %2, i64 %179
  %182 = bitcast float* %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds float, float* %4, i64 %180
  %185 = bitcast float* %184 to i32*
  store i32 %183, i32* %185, align 4
  %186 = or i64 %167, 2
  %187 = mul nsw i64 %186, %118
  %188 = add nsw i64 %139, %187
  %189 = add nsw i64 %186, %143
  %190 = getelementptr inbounds float, float* %2, i64 %188
  %191 = bitcast float* %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds float, float* %4, i64 %189
  %194 = bitcast float* %193 to i32*
  store i32 %192, i32* %194, align 4
  %195 = or i64 %167, 3
  %196 = mul nsw i64 %195, %118
  %197 = add nsw i64 %139, %196
  %198 = add nsw i64 %195, %143
  %199 = getelementptr inbounds float, float* %2, i64 %197
  %200 = bitcast float* %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds float, float* %4, i64 %198
  %203 = bitcast float* %202 to i32*
  store i32 %201, i32* %203, align 4
  %204 = add nuw nsw i64 %167, 4
  %205 = add i64 %168, -4
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %147, label %166

207:                                              ; preds = %46
  %208 = bitcast float* %2 to i32*
  %209 = bitcast float* %4 to i32*
  call void @_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* %208, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i32* %209) #11
  br label %210

210:                                              ; preds = %144, %93, %207, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  ret void
}

declare zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops11Transpose2DIfEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #8 comdat {
  %5 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 5
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %union.anon* %8 to i32*
  %12 = select i1 %7, i32* %10, i32* %11
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %12, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 %15, 3
  %17 = add nsw i32 %13, -4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %4
  %20 = sext i32 %15 to i64
  %21 = add i32 %15, -4
  %22 = icmp slt i32 %21, 0
  %23 = sext i32 %13 to i64
  %24 = shl i32 %15, 2
  %25 = and i32 %15, -4
  %26 = shl nsw i64 %20, 1
  %27 = mul nsw i64 %20, 3
  br label %44

28:                                               ; preds = %205
  %29 = trunc i64 %209 to i32
  br label %30

30:                                               ; preds = %28, %4
  %31 = phi i32 [ 0, %4 ], [ %29, %28 ]
  %32 = phi float* [ %1, %4 ], [ %208, %28 ]
  %33 = icmp slt i32 %31, %13
  br i1 %33, label %34, label %282

34:                                               ; preds = %30
  %35 = icmp sgt i32 %15, 0
  %36 = sext i32 %13 to i64
  %37 = zext i32 %31 to i64
  %38 = zext i32 %13 to i64
  %39 = add i32 %15, -1
  %40 = and i32 %15, 7
  %41 = icmp ult i32 %39, 7
  %42 = sub i32 %15, %40
  %43 = icmp eq i32 %40, 0
  br label %212

44:                                               ; preds = %19, %205
  %45 = phi i64 [ 0, %19 ], [ %209, %205 ]
  %46 = phi float* [ %1, %19 ], [ %208, %205 ]
  %47 = getelementptr inbounds float, float* %3, i64 %45
  %48 = bitcast float* %46 to i8*
  tail call void @llvm.prefetch(i8* %48, i32 0, i32 3, i32 1) #11
  %49 = getelementptr inbounds float, float* %46, i64 %20
  %50 = bitcast float* %49 to i8*
  tail call void @llvm.prefetch(i8* %50, i32 0, i32 3, i32 1) #11
  %51 = getelementptr inbounds float, float* %49, i64 %20
  %52 = bitcast float* %51 to i8*
  tail call void @llvm.prefetch(i8* %52, i32 0, i32 3, i32 1) #11
  %53 = getelementptr inbounds float, float* %51, i64 %20
  %54 = bitcast float* %53 to i8*
  tail call void @llvm.prefetch(i8* %54, i32 0, i32 3, i32 1) #11
  br i1 %22, label %141, label %55

55:                                               ; preds = %44, %55
  %56 = phi float* [ %138, %55 ], [ %46, %44 ]
  %57 = phi float* [ %137, %55 ], [ %47, %44 ]
  %58 = phi i32 [ %139, %55 ], [ 0, %44 ]
  %59 = bitcast float* %56 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds float, float* %56, i64 1
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds float, float* %56, i64 2
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds float, float* %56, i64 3
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds float, float* %56, i64 %20
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds float, float* %70, i64 1
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds float, float* %70, i64 2
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds float, float* %70, i64 3
  %80 = bitcast float* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds float, float* %70, i64 %20
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds float, float* %82, i64 1
  %86 = bitcast float* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds float, float* %82, i64 2
  %89 = bitcast float* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds float, float* %82, i64 3
  %92 = bitcast float* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds float, float* %82, i64 %20
  %95 = bitcast float* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds float, float* %94, i64 1
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds float, float* %94, i64 2
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds float, float* %94, i64 3
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = bitcast float* %57 to i32*
  store i32 %60, i32* %106, align 4
  %107 = getelementptr inbounds float, float* %57, i64 1
  %108 = bitcast float* %107 to i32*
  store i32 %72, i32* %108, align 4
  %109 = getelementptr inbounds float, float* %57, i64 2
  %110 = bitcast float* %109 to i32*
  store i32 %84, i32* %110, align 4
  %111 = getelementptr inbounds float, float* %57, i64 3
  %112 = bitcast float* %111 to i32*
  store i32 %96, i32* %112, align 4
  %113 = getelementptr inbounds float, float* %57, i64 %23
  %114 = bitcast float* %113 to i32*
  store i32 %63, i32* %114, align 4
  %115 = getelementptr inbounds float, float* %113, i64 1
  %116 = bitcast float* %115 to i32*
  store i32 %75, i32* %116, align 4
  %117 = getelementptr inbounds float, float* %113, i64 2
  %118 = bitcast float* %117 to i32*
  store i32 %87, i32* %118, align 4
  %119 = getelementptr inbounds float, float* %113, i64 3
  %120 = bitcast float* %119 to i32*
  store i32 %99, i32* %120, align 4
  %121 = getelementptr inbounds float, float* %113, i64 %23
  %122 = bitcast float* %121 to i32*
  store i32 %66, i32* %122, align 4
  %123 = getelementptr inbounds float, float* %121, i64 1
  %124 = bitcast float* %123 to i32*
  store i32 %78, i32* %124, align 4
  %125 = getelementptr inbounds float, float* %121, i64 2
  %126 = bitcast float* %125 to i32*
  store i32 %90, i32* %126, align 4
  %127 = getelementptr inbounds float, float* %121, i64 3
  %128 = bitcast float* %127 to i32*
  store i32 %102, i32* %128, align 4
  %129 = getelementptr inbounds float, float* %121, i64 %23
  %130 = bitcast float* %129 to i32*
  store i32 %69, i32* %130, align 4
  %131 = getelementptr inbounds float, float* %129, i64 1
  %132 = bitcast float* %131 to i32*
  store i32 %81, i32* %132, align 4
  %133 = getelementptr inbounds float, float* %129, i64 2
  %134 = bitcast float* %133 to i32*
  store i32 %93, i32* %134, align 4
  %135 = getelementptr inbounds float, float* %129, i64 3
  %136 = bitcast float* %135 to i32*
  store i32 %105, i32* %136, align 4
  %137 = getelementptr inbounds float, float* %129, i64 %23
  %138 = getelementptr inbounds float, float* %56, i64 4
  %139 = add nuw nsw i32 %58, 4
  %140 = icmp sgt i32 %139, %21
  br i1 %140, label %141, label %55

141:                                              ; preds = %55, %44
  %142 = phi i32 [ 0, %44 ], [ %25, %55 ]
  %143 = phi float* [ %47, %44 ], [ %137, %55 ]
  %144 = phi float* [ %46, %44 ], [ %138, %55 ]
  %145 = icmp eq i32 %15, %142
  br i1 %145, label %205, label %146

146:                                              ; preds = %141
  %147 = sub i32 %15, %142
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %149, label %450

149:                                              ; preds = %146
  %150 = zext i32 %147 to i64
  %151 = add nsw i64 %150, -1
  %152 = and i64 %150, 3
  %153 = icmp ult i64 %151, 3
  br i1 %153, label %156, label %154

154:                                              ; preds = %149
  %155 = sub nsw i64 %150, %152
  br label %172

156:                                              ; preds = %172, %149
  %157 = phi i64 [ 0, %149 ], [ %202, %172 ]
  %158 = icmp eq i64 %152, 0
  br i1 %158, label %171, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %168, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %169, %159 ], [ %152, %156 ]
  %162 = getelementptr inbounds float, float* %144, i64 %160
  %163 = bitcast float* %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = mul nsw i64 %160, %23
  %166 = getelementptr inbounds float, float* %143, i64 %165
  %167 = bitcast float* %166 to i32*
  store i32 %164, i32* %167, align 4
  %168 = add nuw nsw i64 %160, 1
  %169 = add i64 %161, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %159, !llvm.loop !84

171:                                              ; preds = %159, %156
  br i1 %148, label %283, label %450

172:                                              ; preds = %172, %154
  %173 = phi i64 [ 0, %154 ], [ %202, %172 ]
  %174 = phi i64 [ %155, %154 ], [ %203, %172 ]
  %175 = getelementptr inbounds float, float* %144, i64 %173
  %176 = bitcast float* %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = mul nsw i64 %173, %23
  %179 = getelementptr inbounds float, float* %143, i64 %178
  %180 = bitcast float* %179 to i32*
  store i32 %177, i32* %180, align 4
  %181 = or i64 %173, 1
  %182 = getelementptr inbounds float, float* %144, i64 %181
  %183 = bitcast float* %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i64 %181, %23
  %186 = getelementptr inbounds float, float* %143, i64 %185
  %187 = bitcast float* %186 to i32*
  store i32 %184, i32* %187, align 4
  %188 = or i64 %173, 2
  %189 = getelementptr inbounds float, float* %144, i64 %188
  %190 = bitcast float* %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = mul nsw i64 %188, %23
  %193 = getelementptr inbounds float, float* %143, i64 %192
  %194 = bitcast float* %193 to i32*
  store i32 %191, i32* %194, align 4
  %195 = or i64 %173, 3
  %196 = getelementptr inbounds float, float* %144, i64 %195
  %197 = bitcast float* %196 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = mul nsw i64 %195, %23
  %200 = getelementptr inbounds float, float* %143, i64 %199
  %201 = bitcast float* %200 to i32*
  store i32 %198, i32* %201, align 4
  %202 = add nuw nsw i64 %173, 4
  %203 = add i64 %174, -4
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %156, label %172

205:                                              ; preds = %141, %450
  %206 = phi i32 [ %451, %450 ], [ %16, %141 ]
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds float, float* %144, i64 %207
  %209 = add nuw i64 %45, 4
  %210 = trunc i64 %209 to i32
  %211 = icmp slt i32 %17, %210
  br i1 %211, label %28, label %44

212:                                              ; preds = %232, %34
  %213 = phi i64 [ %37, %34 ], [ %234, %232 ]
  %214 = phi float* [ %32, %34 ], [ %233, %232 ]
  br i1 %35, label %215, label %232

215:                                              ; preds = %212
  %216 = getelementptr inbounds float, float* %3, i64 %213
  br i1 %41, label %217, label %236

217:                                              ; preds = %236, %215
  %218 = phi float* [ undef, %215 ], [ %279, %236 ]
  %219 = phi float* [ %216, %215 ], [ %278, %236 ]
  %220 = phi float* [ %214, %215 ], [ %279, %236 ]
  br i1 %43, label %232, label %221

221:                                              ; preds = %217, %221
  %222 = phi float* [ %228, %221 ], [ %219, %217 ]
  %223 = phi float* [ %229, %221 ], [ %220, %217 ]
  %224 = phi i32 [ %230, %221 ], [ %40, %217 ]
  %225 = bitcast float* %223 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = bitcast float* %222 to i32*
  store i32 %226, i32* %227, align 4
  %228 = getelementptr inbounds float, float* %222, i64 %36
  %229 = getelementptr inbounds float, float* %223, i64 1
  %230 = add i32 %224, -1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !85

232:                                              ; preds = %217, %221, %212
  %233 = phi float* [ %214, %212 ], [ %218, %217 ], [ %229, %221 ]
  %234 = add nuw nsw i64 %213, 1
  %235 = icmp eq i64 %234, %38
  br i1 %235, label %282, label %212

236:                                              ; preds = %215, %236
  %237 = phi float* [ %278, %236 ], [ %216, %215 ]
  %238 = phi float* [ %279, %236 ], [ %214, %215 ]
  %239 = phi i32 [ %280, %236 ], [ %42, %215 ]
  %240 = bitcast float* %238 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = bitcast float* %237 to i32*
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds float, float* %237, i64 %36
  %244 = getelementptr inbounds float, float* %238, i64 1
  %245 = bitcast float* %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = bitcast float* %243 to i32*
  store i32 %246, i32* %247, align 4
  %248 = getelementptr inbounds float, float* %243, i64 %36
  %249 = getelementptr inbounds float, float* %238, i64 2
  %250 = bitcast float* %249 to i32*
  %251 = load i32, i32* %250, align 4
  %252 = bitcast float* %248 to i32*
  store i32 %251, i32* %252, align 4
  %253 = getelementptr inbounds float, float* %248, i64 %36
  %254 = getelementptr inbounds float, float* %238, i64 3
  %255 = bitcast float* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = bitcast float* %253 to i32*
  store i32 %256, i32* %257, align 4
  %258 = getelementptr inbounds float, float* %253, i64 %36
  %259 = getelementptr inbounds float, float* %238, i64 4
  %260 = bitcast float* %259 to i32*
  %261 = load i32, i32* %260, align 4
  %262 = bitcast float* %258 to i32*
  store i32 %261, i32* %262, align 4
  %263 = getelementptr inbounds float, float* %258, i64 %36
  %264 = getelementptr inbounds float, float* %238, i64 5
  %265 = bitcast float* %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = bitcast float* %263 to i32*
  store i32 %266, i32* %267, align 4
  %268 = getelementptr inbounds float, float* %263, i64 %36
  %269 = getelementptr inbounds float, float* %238, i64 6
  %270 = bitcast float* %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = bitcast float* %268 to i32*
  store i32 %271, i32* %272, align 4
  %273 = getelementptr inbounds float, float* %268, i64 %36
  %274 = getelementptr inbounds float, float* %238, i64 7
  %275 = bitcast float* %274 to i32*
  %276 = load i32, i32* %275, align 4
  %277 = bitcast float* %273 to i32*
  store i32 %276, i32* %277, align 4
  %278 = getelementptr inbounds float, float* %273, i64 %36
  %279 = getelementptr inbounds float, float* %238, i64 8
  %280 = add i32 %239, -8
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %217, label %236

282:                                              ; preds = %232, %30
  ret void

283:                                              ; preds = %171
  %284 = getelementptr inbounds float, float* %144, i64 %20
  %285 = getelementptr inbounds float, float* %143, i64 1
  %286 = and i64 %150, 3
  %287 = icmp ult i64 %151, 3
  br i1 %287, label %323, label %288

288:                                              ; preds = %283
  %289 = sub nsw i64 %150, %286
  br label %290

290:                                              ; preds = %290, %288
  %291 = phi i64 [ 0, %288 ], [ %320, %290 ]
  %292 = phi i64 [ %289, %288 ], [ %321, %290 ]
  %293 = getelementptr inbounds float, float* %284, i64 %291
  %294 = bitcast float* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = mul nsw i64 %291, %23
  %297 = getelementptr inbounds float, float* %285, i64 %296
  %298 = bitcast float* %297 to i32*
  store i32 %295, i32* %298, align 4
  %299 = or i64 %291, 1
  %300 = getelementptr inbounds float, float* %284, i64 %299
  %301 = bitcast float* %300 to i32*
  %302 = load i32, i32* %301, align 4
  %303 = mul nsw i64 %299, %23
  %304 = getelementptr inbounds float, float* %285, i64 %303
  %305 = bitcast float* %304 to i32*
  store i32 %302, i32* %305, align 4
  %306 = or i64 %291, 2
  %307 = getelementptr inbounds float, float* %284, i64 %306
  %308 = bitcast float* %307 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = mul nsw i64 %306, %23
  %311 = getelementptr inbounds float, float* %285, i64 %310
  %312 = bitcast float* %311 to i32*
  store i32 %309, i32* %312, align 4
  %313 = or i64 %291, 3
  %314 = getelementptr inbounds float, float* %284, i64 %313
  %315 = bitcast float* %314 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = mul nsw i64 %313, %23
  %318 = getelementptr inbounds float, float* %285, i64 %317
  %319 = bitcast float* %318 to i32*
  store i32 %316, i32* %319, align 4
  %320 = add nuw nsw i64 %291, 4
  %321 = add i64 %292, -4
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %290

323:                                              ; preds = %290, %283
  %324 = phi i64 [ 0, %283 ], [ %320, %290 ]
  %325 = icmp eq i64 %286, 0
  br i1 %325, label %338, label %326

326:                                              ; preds = %323, %326
  %327 = phi i64 [ %335, %326 ], [ %324, %323 ]
  %328 = phi i64 [ %336, %326 ], [ %286, %323 ]
  %329 = getelementptr inbounds float, float* %284, i64 %327
  %330 = bitcast float* %329 to i32*
  %331 = load i32, i32* %330, align 4
  %332 = mul nsw i64 %327, %23
  %333 = getelementptr inbounds float, float* %285, i64 %332
  %334 = bitcast float* %333 to i32*
  store i32 %331, i32* %334, align 4
  %335 = add nuw nsw i64 %327, 1
  %336 = add i64 %328, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %326, !llvm.loop !86

338:                                              ; preds = %326, %323
  br i1 %148, label %339, label %450

339:                                              ; preds = %338
  %340 = getelementptr inbounds float, float* %144, i64 %26
  %341 = getelementptr inbounds float, float* %143, i64 2
  %342 = and i64 %150, 3
  %343 = icmp ult i64 %151, 3
  br i1 %343, label %379, label %344

344:                                              ; preds = %339
  %345 = sub nsw i64 %150, %342
  br label %346

346:                                              ; preds = %346, %344
  %347 = phi i64 [ 0, %344 ], [ %376, %346 ]
  %348 = phi i64 [ %345, %344 ], [ %377, %346 ]
  %349 = getelementptr inbounds float, float* %340, i64 %347
  %350 = bitcast float* %349 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = mul nsw i64 %347, %23
  %353 = getelementptr inbounds float, float* %341, i64 %352
  %354 = bitcast float* %353 to i32*
  store i32 %351, i32* %354, align 4
  %355 = or i64 %347, 1
  %356 = getelementptr inbounds float, float* %340, i64 %355
  %357 = bitcast float* %356 to i32*
  %358 = load i32, i32* %357, align 4
  %359 = mul nsw i64 %355, %23
  %360 = getelementptr inbounds float, float* %341, i64 %359
  %361 = bitcast float* %360 to i32*
  store i32 %358, i32* %361, align 4
  %362 = or i64 %347, 2
  %363 = getelementptr inbounds float, float* %340, i64 %362
  %364 = bitcast float* %363 to i32*
  %365 = load i32, i32* %364, align 4
  %366 = mul nsw i64 %362, %23
  %367 = getelementptr inbounds float, float* %341, i64 %366
  %368 = bitcast float* %367 to i32*
  store i32 %365, i32* %368, align 4
  %369 = or i64 %347, 3
  %370 = getelementptr inbounds float, float* %340, i64 %369
  %371 = bitcast float* %370 to i32*
  %372 = load i32, i32* %371, align 4
  %373 = mul nsw i64 %369, %23
  %374 = getelementptr inbounds float, float* %341, i64 %373
  %375 = bitcast float* %374 to i32*
  store i32 %372, i32* %375, align 4
  %376 = add nuw nsw i64 %347, 4
  %377 = add i64 %348, -4
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %346

379:                                              ; preds = %346, %339
  %380 = phi i64 [ 0, %339 ], [ %376, %346 ]
  %381 = icmp eq i64 %342, 0
  br i1 %381, label %394, label %382

382:                                              ; preds = %379, %382
  %383 = phi i64 [ %391, %382 ], [ %380, %379 ]
  %384 = phi i64 [ %392, %382 ], [ %342, %379 ]
  %385 = getelementptr inbounds float, float* %340, i64 %383
  %386 = bitcast float* %385 to i32*
  %387 = load i32, i32* %386, align 4
  %388 = mul nsw i64 %383, %23
  %389 = getelementptr inbounds float, float* %341, i64 %388
  %390 = bitcast float* %389 to i32*
  store i32 %387, i32* %390, align 4
  %391 = add nuw nsw i64 %383, 1
  %392 = add i64 %384, -1
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %394, label %382, !llvm.loop !87

394:                                              ; preds = %382, %379
  br i1 %148, label %395, label %450

395:                                              ; preds = %394
  %396 = getelementptr inbounds float, float* %144, i64 %27
  %397 = getelementptr inbounds float, float* %143, i64 3
  %398 = and i64 %150, 3
  %399 = icmp ult i64 %151, 3
  br i1 %399, label %435, label %400

400:                                              ; preds = %395
  %401 = sub nsw i64 %150, %398
  br label %402

402:                                              ; preds = %402, %400
  %403 = phi i64 [ 0, %400 ], [ %432, %402 ]
  %404 = phi i64 [ %401, %400 ], [ %433, %402 ]
  %405 = getelementptr inbounds float, float* %396, i64 %403
  %406 = bitcast float* %405 to i32*
  %407 = load i32, i32* %406, align 4
  %408 = mul nsw i64 %403, %23
  %409 = getelementptr inbounds float, float* %397, i64 %408
  %410 = bitcast float* %409 to i32*
  store i32 %407, i32* %410, align 4
  %411 = or i64 %403, 1
  %412 = getelementptr inbounds float, float* %396, i64 %411
  %413 = bitcast float* %412 to i32*
  %414 = load i32, i32* %413, align 4
  %415 = mul nsw i64 %411, %23
  %416 = getelementptr inbounds float, float* %397, i64 %415
  %417 = bitcast float* %416 to i32*
  store i32 %414, i32* %417, align 4
  %418 = or i64 %403, 2
  %419 = getelementptr inbounds float, float* %396, i64 %418
  %420 = bitcast float* %419 to i32*
  %421 = load i32, i32* %420, align 4
  %422 = mul nsw i64 %418, %23
  %423 = getelementptr inbounds float, float* %397, i64 %422
  %424 = bitcast float* %423 to i32*
  store i32 %421, i32* %424, align 4
  %425 = or i64 %403, 3
  %426 = getelementptr inbounds float, float* %396, i64 %425
  %427 = bitcast float* %426 to i32*
  %428 = load i32, i32* %427, align 4
  %429 = mul nsw i64 %425, %23
  %430 = getelementptr inbounds float, float* %397, i64 %429
  %431 = bitcast float* %430 to i32*
  store i32 %428, i32* %431, align 4
  %432 = add nuw nsw i64 %403, 4
  %433 = add i64 %404, -4
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %435, label %402

435:                                              ; preds = %402, %395
  %436 = phi i64 [ 0, %395 ], [ %432, %402 ]
  %437 = icmp eq i64 %398, 0
  br i1 %437, label %450, label %438

438:                                              ; preds = %435, %438
  %439 = phi i64 [ %447, %438 ], [ %436, %435 ]
  %440 = phi i64 [ %448, %438 ], [ %398, %435 ]
  %441 = getelementptr inbounds float, float* %396, i64 %439
  %442 = bitcast float* %441 to i32*
  %443 = load i32, i32* %442, align 4
  %444 = mul nsw i64 %439, %23
  %445 = getelementptr inbounds float, float* %397, i64 %444
  %446 = bitcast float* %445 to i32*
  store i32 %443, i32* %446, align 4
  %447 = add nuw nsw i64 %439, 1
  %448 = add i64 %440, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %438, !llvm.loop !88

450:                                              ; preds = %435, %438, %146, %171, %338, %394
  %451 = sub i32 %24, %142
  br label %205
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.tflite::NdArrayDesc", align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sub i32 5, %10
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 40, i1 false)
  %15 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !89
  %17 = icmp sgt i32 %10, 5
  br i1 %17, label %18, label %19

18:                                               ; preds = %5
  tail call void @abort() #12, !noalias !89
  unreachable

19:                                               ; preds = %5
  store i32 5, i32* %16, align 8, !alias.scope !89
  %20 = icmp sgt i32 %13, 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to [5 x i32]*
  br i1 %20, label %23, label %102

23:                                               ; preds = %19
  %24 = zext i32 %13 to i64
  %25 = icmp ult i32 %13, 8
  br i1 %25, label %95, label %26

26:                                               ; preds = %23
  %27 = and i64 %24, 4294967288
  %28 = add nsw i64 %27, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 7
  %32 = icmp ult i64 %28, 56
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = sub nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %77, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %78, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %36
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !89
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !89
  %42 = or i64 %36, 8
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !89
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !89
  %47 = or i64 %36, 16
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !89
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !89
  %52 = or i64 %36, 24
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !89
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !89
  %57 = or i64 %36, 32
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !89
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !89
  %62 = or i64 %36, 40
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !89
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !89
  %67 = or i64 %36, 48
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !89
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !89
  %72 = or i64 %36, 56
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !89
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !89
  %77 = add i64 %36, 64
  %78 = add i64 %37, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %35, !llvm.loop !92

80:                                               ; preds = %35, %26
  %81 = phi i64 [ 0, %26 ], [ %77, %35 ]
  %82 = icmp eq i64 %31, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %90, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %91, %83 ], [ %31, %80 ]
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !89
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !89
  %90 = add i64 %84, 8
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %83, !llvm.loop !93

93:                                               ; preds = %83, %80
  %94 = icmp eq i64 %27, %24
  br i1 %94, label %102, label %95

95:                                               ; preds = %93, %23
  %96 = phi i64 [ 0, %23 ], [ %27, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %100, %97 ], [ %96, %95 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %98
  store i32 1, i32* %99, align 4, !alias.scope !89
  %100 = add nuw nsw i64 %98, 1
  %101 = icmp eq i64 %100, %24
  br i1 %101, label %102, label %97, !llvm.loop !94

102:                                              ; preds = %97, %93, %19
  %103 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %104 = bitcast %union.anon* %21 to i32*
  %105 = sext i32 %13 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %109 = bitcast %union.anon* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %109, i64 %111, i1 false) #11
  %112 = load i32, i32* %16, align 8
  %113 = icmp sgt i32 %112, 5
  %114 = load i32*, i32** %103, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 4
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 8
  %117 = bitcast i8* %116 to i32*
  %118 = select i1 %113, i32* %115, i32* %117
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 4
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 4
  store i32 1, i32* %121, align 4
  %122 = getelementptr inbounds i32, i32* %114, i64 3
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = select i1 %113, i32* %122, i32* %124
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 3
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 3
  store i32 %119, i32* %128, align 4
  %129 = mul nsw i32 %126, %119
  %130 = getelementptr inbounds i32, i32* %114, i64 2
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = select i1 %113, i32* %130, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 2
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 2
  store i32 %129, i32* %136, align 4
  %137 = mul nsw i32 %134, %129
  %138 = getelementptr inbounds i32, i32* %114, i64 1
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 1
  %140 = select i1 %113, i32* %138, i32* %139
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 1
  store i32 %137, i32* %143, align 4
  %144 = mul nsw i32 %141, %137
  %145 = select i1 %113, i32* %114, i32* %104
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 0
  store i32 %144, i32* %148, align 4
  %149 = xor i1 %113, true
  %150 = icmp eq i32* %114, null
  %151 = or i1 %150, %149
  br i1 %151, label %155, label %152

152:                                              ; preds = %102
  %153 = bitcast i32* %114 to i8*
  tail call void @_ZdaPv(i8* %153) #10
  %154 = load i32, i32* %11, align 8, !noalias !95
  br label %155

155:                                              ; preds = %102, %152
  %156 = phi i32 [ %12, %102 ], [ %154, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  %157 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !95
  %159 = icmp sgt i32 %156, 5
  br i1 %159, label %160, label %161

160:                                              ; preds = %155
  tail call void @abort() #12, !noalias !95
  unreachable

161:                                              ; preds = %155
  store i32 5, i32* %158, align 8, !alias.scope !95
  %162 = sub i32 5, %156
  %163 = icmp sgt i32 %162, 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %165 = bitcast %union.anon* %164 to [5 x i32]*
  br i1 %163, label %166, label %245

166:                                              ; preds = %161
  %167 = zext i32 %162 to i64
  %168 = icmp ult i32 %162, 8
  br i1 %168, label %238, label %169

169:                                              ; preds = %166
  %170 = and i64 %167, 4294967288
  %171 = add nsw i64 %170, -8
  %172 = lshr exact i64 %171, 3
  %173 = add nuw nsw i64 %172, 1
  %174 = and i64 %173, 7
  %175 = icmp ult i64 %171, 56
  br i1 %175, label %223, label %176

176:                                              ; preds = %169
  %177 = sub nsw i64 %173, %174
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i64 [ 0, %176 ], [ %220, %178 ]
  %180 = phi i64 [ %177, %176 ], [ %221, %178 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !95
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !95
  %185 = or i64 %179, 8
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %185
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !95
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !95
  %190 = or i64 %179, 16
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %190
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !95
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !95
  %195 = or i64 %179, 24
  %196 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %197, align 8, !alias.scope !95
  %198 = getelementptr inbounds i32, i32* %196, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %199, align 8, !alias.scope !95
  %200 = or i64 %179, 32
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %200
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %202, align 8, !alias.scope !95
  %203 = getelementptr inbounds i32, i32* %201, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %204, align 8, !alias.scope !95
  %205 = or i64 %179, 40
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %205
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %207, align 8, !alias.scope !95
  %208 = getelementptr inbounds i32, i32* %206, i64 4
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %209, align 8, !alias.scope !95
  %210 = or i64 %179, 48
  %211 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %210
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %212, align 8, !alias.scope !95
  %213 = getelementptr inbounds i32, i32* %211, i64 4
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %214, align 8, !alias.scope !95
  %215 = or i64 %179, 56
  %216 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %215
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %217, align 8, !alias.scope !95
  %218 = getelementptr inbounds i32, i32* %216, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %219, align 8, !alias.scope !95
  %220 = add i64 %179, 64
  %221 = add i64 %180, -8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %178, !llvm.loop !98

223:                                              ; preds = %178, %169
  %224 = phi i64 [ 0, %169 ], [ %220, %178 ]
  %225 = icmp eq i64 %174, 0
  br i1 %225, label %236, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %233, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %234, %226 ], [ %174, %223 ]
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %227
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %230, align 8, !alias.scope !95
  %231 = getelementptr inbounds i32, i32* %229, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %232, align 8, !alias.scope !95
  %233 = add i64 %227, 8
  %234 = add i64 %228, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %226, !llvm.loop !99

236:                                              ; preds = %226, %223
  %237 = icmp eq i64 %170, %167
  br i1 %237, label %245, label %238

238:                                              ; preds = %236, %166
  %239 = phi i64 [ 0, %166 ], [ %170, %236 ]
  br label %240

240:                                              ; preds = %238, %240
  %241 = phi i64 [ %243, %240 ], [ %239, %238 ]
  %242 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %241
  store i32 1, i32* %242, align 4, !alias.scope !95
  %243 = add nuw nsw i64 %241, 1
  %244 = icmp eq i64 %243, %167
  br i1 %244, label %245, label %240, !llvm.loop !100

245:                                              ; preds = %240, %236, %161
  %246 = getelementptr inbounds %union.anon, %union.anon* %164, i64 0, i32 0
  %247 = bitcast %union.anon* %164 to i32*
  %248 = sext i32 %162 to i64
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  %250 = bitcast i32* %249 to i8*
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i8*
  %253 = sext i32 %156 to i64
  %254 = shl nsw i64 %253, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %252, i64 %254, i1 false) #11
  %255 = load i32, i32* %158, align 8
  %256 = icmp sgt i32 %255, 5
  %257 = load i32*, i32** %246, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %260 = bitcast i8* %259 to i32*
  %261 = select i1 %256, i32* %258, i32* %260
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds i32, i32* %257, i64 3
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %265 = bitcast i8* %264 to i32*
  %266 = select i1 %256, i32* %263, i32* %265
  %267 = load i32, i32* %266, align 4
  %268 = mul nsw i32 %267, %262
  %269 = getelementptr inbounds i32, i32* %257, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %256, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %257, i64 1
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 1
  %276 = select i1 %256, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = select i1 %256, i32* %257, i32* %247
  %279 = load i32, i32* %278, align 4
  %280 = xor i1 %256, true
  %281 = icmp eq i32* %257, null
  %282 = or i1 %281, %280
  br i1 %282, label %285, label %283

283:                                              ; preds = %245
  %284 = bitcast i32* %257 to i8*
  tail call void @_ZdaPv(i8* %284) #10
  br label %285

285:                                              ; preds = %245, %283
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %286 = icmp slt i32 %12, 5
  br i1 %286, label %294, label %287

287:                                              ; preds = %285
  %288 = add nsw i32 %12, -5
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = add nsw i32 %291, %13
  %293 = sext i32 %292 to i64
  br label %536

294:                                              ; preds = %285
  %295 = icmp eq i32 %12, 4
  br i1 %295, label %536, label %544

296:                                              ; preds = %583
  %297 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %584
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %587
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %585
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %586
  %304 = load i32, i32* %303, align 4
  %305 = icmp sgt i32 %277, 0
  %306 = icmp sgt i32 %273, 0
  %307 = icmp sgt i32 %267, 0
  %308 = icmp sgt i32 %262, 0
  %309 = sext i32 %298 to i64
  %310 = sext i32 %300 to i64
  %311 = sext i32 %302 to i64
  %312 = sext i32 %304 to i64
  %313 = zext i32 %279 to i64
  %314 = zext i32 %277 to i64
  %315 = zext i32 %273 to i64
  %316 = zext i32 %267 to i64
  %317 = zext i32 %262 to i64
  %318 = add nsw i64 %317, -1
  %319 = mul i32 %277, %273
  %320 = mul i32 %319, %267
  %321 = mul i32 %320, %262
  %322 = zext i32 %321 to i64
  %323 = mul i32 %267, %262
  %324 = mul i32 %323, %273
  %325 = zext i32 %324 to i64
  %326 = zext i32 %323 to i64
  %327 = mul i32 %277, %273
  %328 = mul i32 %327, %267
  %329 = mul i32 %328, %262
  %330 = zext i32 %329 to i64
  %331 = mul i32 %267, %262
  %332 = mul i32 %331, %273
  %333 = zext i32 %332 to i64
  %334 = zext i32 %331 to i64
  %335 = getelementptr i32, i32* %4, i64 %317
  %336 = and i64 %317, 4294967288
  %337 = add nsw i64 %336, -8
  %338 = lshr exact i64 %337, 3
  %339 = add nuw nsw i64 %338, 1
  %340 = icmp ult i32 %262, 8
  %341 = icmp ne i64 %588, 1
  %342 = trunc i64 %318 to i32
  %343 = icmp ugt i64 %318, 4294967295
  %344 = and i64 %317, 4294967288
  %345 = and i64 %339, 1
  %346 = icmp eq i64 %337, 0
  %347 = sub nuw nsw i64 %339, %345
  %348 = icmp eq i64 %345, 0
  %349 = icmp eq i64 %344, %317
  %350 = and i64 %317, 1
  %351 = icmp eq i64 %350, 0
  %352 = sub nsw i64 0, %317
  br label %353

353:                                              ; preds = %532, %296
  %354 = phi i64 [ 0, %296 ], [ %533, %532 ]
  %355 = mul i64 %354, %312
  %356 = add i64 %355, %317
  %357 = mul i64 %354, %330
  %358 = mul i64 %354, %322
  br i1 %305, label %359, label %532

359:                                              ; preds = %353
  %360 = mul nsw i64 %354, %312
  %361 = trunc i64 %354 to i32
  %362 = mul i32 %277, %361
  br label %363

363:                                              ; preds = %529, %359
  %364 = phi i64 [ 0, %359 ], [ %530, %529 ]
  %365 = mul i64 %364, %311
  %366 = add i64 %355, %365
  %367 = add i64 %356, %365
  %368 = mul i64 %364, %333
  %369 = add i64 %357, %368
  %370 = mul i64 %364, %325
  %371 = add i64 %358, %370
  br i1 %306, label %372, label %529

372:                                              ; preds = %363
  %373 = mul nsw i64 %364, %311
  %374 = add nsw i64 %373, %360
  %375 = trunc i64 %364 to i32
  %376 = add i32 %362, %375
  %377 = mul i32 %376, %273
  br label %378

378:                                              ; preds = %526, %372
  %379 = phi i64 [ 0, %372 ], [ %527, %526 ]
  %380 = mul i64 %379, %310
  %381 = add i64 %366, %380
  %382 = add i64 %367, %380
  %383 = mul i64 %379, %334
  %384 = add i64 %369, %383
  %385 = mul i64 %379, %326
  %386 = add i64 %371, %385
  br i1 %307, label %387, label %526

387:                                              ; preds = %378
  %388 = mul nsw i64 %379, %310
  %389 = add nsw i64 %374, %388
  %390 = trunc i64 %379 to i32
  %391 = add i32 %377, %390
  %392 = mul i32 %268, %391
  br label %393

393:                                              ; preds = %523, %387
  %394 = phi i64 [ 0, %387 ], [ %524, %523 ]
  %395 = mul i64 %394, %309
  %396 = add i64 %381, %395
  %397 = getelementptr i32, i32* %2, i64 %396
  %398 = add i64 %382, %395
  %399 = getelementptr i32, i32* %2, i64 %398
  %400 = mul i64 %394, %317
  %401 = add i64 %384, %400
  %402 = shl i64 %401, 32
  %403 = ashr exact i64 %402, 32
  %404 = getelementptr i32, i32* %4, i64 %403
  %405 = getelementptr i32, i32* %335, i64 %403
  %406 = mul i64 %394, %317
  %407 = add i64 %386, %406
  %408 = trunc i64 %407 to i32
  br i1 %308, label %409, label %523

409:                                              ; preds = %393
  %410 = mul nsw i64 %394, %309
  %411 = add nsw i64 %389, %410
  %412 = trunc i64 %394 to i32
  %413 = mul i32 %262, %412
  br i1 %340, label %483, label %414

414:                                              ; preds = %409
  %415 = add i32 %408, %342
  %416 = icmp slt i32 %415, %408
  %417 = or i1 %416, %343
  %418 = or i1 %341, %417
  br i1 %418, label %483, label %419

419:                                              ; preds = %414
  %420 = icmp ult i32* %397, %405
  %421 = icmp ult i32* %404, %399
  %422 = and i1 %420, %421
  br i1 %422, label %483, label %423

423:                                              ; preds = %419
  br i1 %346, label %463, label %424

424:                                              ; preds = %423, %424
  %425 = phi i64 [ %460, %424 ], [ 0, %423 ]
  %426 = phi i64 [ %461, %424 ], [ %347, %423 ]
  %427 = mul nsw i64 %588, %425
  %428 = add nsw i64 %411, %427
  %429 = getelementptr inbounds i32, i32* %2, i64 %428
  %430 = bitcast i32* %429 to <4 x i32>*
  %431 = load <4 x i32>, <4 x i32>* %430, align 4, !alias.scope !101, !noalias !104
  %432 = getelementptr inbounds i32, i32* %429, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  %434 = load <4 x i32>, <4 x i32>* %433, align 4, !alias.scope !101, !noalias !104
  %435 = trunc i64 %425 to i32
  %436 = add i32 %413, %435
  %437 = add i32 %436, %392
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds i32, i32* %4, i64 %438
  %440 = bitcast i32* %439 to <4 x i32>*
  store <4 x i32> %431, <4 x i32>* %440, align 4, !alias.scope !104
  %441 = getelementptr inbounds i32, i32* %439, i64 4
  %442 = bitcast i32* %441 to <4 x i32>*
  store <4 x i32> %434, <4 x i32>* %442, align 4, !alias.scope !104
  %443 = or i64 %425, 8
  %444 = mul nsw i64 %588, %443
  %445 = add nsw i64 %411, %444
  %446 = getelementptr inbounds i32, i32* %2, i64 %445
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4, !alias.scope !101, !noalias !104
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4, !alias.scope !101, !noalias !104
  %452 = trunc i64 %443 to i32
  %453 = add i32 %413, %452
  %454 = add i32 %453, %392
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i32, i32* %4, i64 %455
  %457 = bitcast i32* %456 to <4 x i32>*
  store <4 x i32> %448, <4 x i32>* %457, align 4, !alias.scope !104
  %458 = getelementptr inbounds i32, i32* %456, i64 4
  %459 = bitcast i32* %458 to <4 x i32>*
  store <4 x i32> %451, <4 x i32>* %459, align 4, !alias.scope !104
  %460 = add i64 %425, 16
  %461 = add i64 %426, -2
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %424, !llvm.loop !106

463:                                              ; preds = %424, %423
  %464 = phi i64 [ 0, %423 ], [ %460, %424 ]
  br i1 %348, label %482, label %465

465:                                              ; preds = %463
  %466 = mul nsw i64 %588, %464
  %467 = add nsw i64 %411, %466
  %468 = getelementptr inbounds i32, i32* %2, i64 %467
  %469 = bitcast i32* %468 to <4 x i32>*
  %470 = load <4 x i32>, <4 x i32>* %469, align 4, !alias.scope !101, !noalias !104
  %471 = getelementptr inbounds i32, i32* %468, i64 4
  %472 = bitcast i32* %471 to <4 x i32>*
  %473 = load <4 x i32>, <4 x i32>* %472, align 4, !alias.scope !101, !noalias !104
  %474 = trunc i64 %464 to i32
  %475 = add i32 %413, %474
  %476 = add i32 %475, %392
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i32, i32* %4, i64 %477
  %479 = bitcast i32* %478 to <4 x i32>*
  store <4 x i32> %470, <4 x i32>* %479, align 4, !alias.scope !104
  %480 = getelementptr inbounds i32, i32* %478, i64 4
  %481 = bitcast i32* %480 to <4 x i32>*
  store <4 x i32> %473, <4 x i32>* %481, align 4, !alias.scope !104
  br label %482

482:                                              ; preds = %463, %465
  br i1 %349, label %523, label %483

483:                                              ; preds = %482, %419, %414, %409
  %484 = phi i64 [ 0, %419 ], [ 0, %414 ], [ 0, %409 ], [ %344, %482 ]
  %485 = xor i64 %484, -1
  br i1 %351, label %497, label %486

486:                                              ; preds = %483
  %487 = mul nsw i64 %588, %484
  %488 = add nsw i64 %411, %487
  %489 = getelementptr inbounds i32, i32* %2, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = trunc i64 %484 to i32
  %492 = add i32 %413, %491
  %493 = add i32 %492, %392
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i32, i32* %4, i64 %494
  store i32 %490, i32* %495, align 4
  %496 = or i64 %484, 1
  br label %497

497:                                              ; preds = %486, %483
  %498 = phi i64 [ %496, %486 ], [ %484, %483 ]
  %499 = icmp eq i64 %485, %352
  br i1 %499, label %523, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %521, %500 ], [ %498, %497 ]
  %502 = mul nsw i64 %588, %501
  %503 = add nsw i64 %411, %502
  %504 = getelementptr inbounds i32, i32* %2, i64 %503
  %505 = load i32, i32* %504, align 4
  %506 = trunc i64 %501 to i32
  %507 = add i32 %413, %506
  %508 = add i32 %507, %392
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds i32, i32* %4, i64 %509
  store i32 %505, i32* %510, align 4
  %511 = add nuw nsw i64 %501, 1
  %512 = mul nsw i64 %588, %511
  %513 = add nsw i64 %411, %512
  %514 = getelementptr inbounds i32, i32* %2, i64 %513
  %515 = load i32, i32* %514, align 4
  %516 = trunc i64 %511 to i32
  %517 = add i32 %413, %516
  %518 = add i32 %517, %392
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i32, i32* %4, i64 %519
  store i32 %515, i32* %520, align 4
  %521 = add nuw nsw i64 %501, 2
  %522 = icmp eq i64 %521, %317
  br i1 %522, label %523, label %500, !llvm.loop !107

523:                                              ; preds = %497, %500, %482, %393
  %524 = add nuw nsw i64 %394, 1
  %525 = icmp eq i64 %524, %316
  br i1 %525, label %526, label %393

526:                                              ; preds = %523, %378
  %527 = add nuw nsw i64 %379, 1
  %528 = icmp eq i64 %527, %315
  br i1 %528, label %529, label %378

529:                                              ; preds = %526, %363
  %530 = add nuw nsw i64 %364, 1
  %531 = icmp eq i64 %530, %314
  br i1 %531, label %532, label %363

532:                                              ; preds = %529, %353
  %533 = add nuw nsw i64 %354, 1
  %534 = icmp eq i64 %533, %313
  br i1 %534, label %535, label %353

535:                                              ; preds = %532, %583
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  ret void

536:                                              ; preds = %294, %287
  %537 = phi i64 [ %293, %287 ], [ 0, %294 ]
  %538 = add nsw i32 %12, -4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = add nsw i32 %541, %13
  %543 = sext i32 %542 to i64
  br label %546

544:                                              ; preds = %294
  %545 = icmp slt i32 %12, 3
  br i1 %545, label %555, label %546

546:                                              ; preds = %544, %536
  %547 = phi i64 [ %543, %536 ], [ 1, %544 ]
  %548 = phi i64 [ %537, %536 ], [ 0, %544 ]
  %549 = add nsw i32 %12, -3
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = add nsw i32 %552, %13
  %554 = sext i32 %553 to i64
  br label %557

555:                                              ; preds = %544
  %556 = icmp eq i32 %12, 2
  br i1 %556, label %557, label %567

557:                                              ; preds = %555, %546
  %558 = phi i64 [ %554, %546 ], [ 2, %555 ]
  %559 = phi i64 [ %548, %546 ], [ 0, %555 ]
  %560 = phi i64 [ %547, %546 ], [ 1, %555 ]
  %561 = add nsw i32 %12, -2
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = add nsw i32 %564, %13
  %566 = sext i32 %565 to i64
  br label %569

567:                                              ; preds = %555
  %568 = icmp slt i32 %12, 1
  br i1 %568, label %583, label %569

569:                                              ; preds = %557, %567
  %570 = phi i64 [ %566, %557 ], [ 3, %567 ]
  %571 = phi i64 [ %560, %557 ], [ 1, %567 ]
  %572 = phi i64 [ %559, %557 ], [ 0, %567 ]
  %573 = phi i64 [ %558, %557 ], [ 2, %567 ]
  %574 = add nsw i32 %12, -1
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %575
  %577 = load i32, i32* %576, align 4
  %578 = add nsw i32 %577, %13
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = sext i32 %581 to i64
  br label %583

583:                                              ; preds = %567, %569
  %584 = phi i64 [ %570, %569 ], [ 3, %567 ]
  %585 = phi i64 [ %571, %569 ], [ 1, %567 ]
  %586 = phi i64 [ %572, %569 ], [ 0, %567 ]
  %587 = phi i64 [ %573, %569 ], [ 2, %567 ]
  %588 = phi i64 [ %582, %569 ], [ 1, %567 ]
  %589 = icmp sgt i32 %279, 0
  br i1 %589, label %296, label %535
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"struct.tflite::TransposeParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::TransposeParams", align 4
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %17 = load i32, i32* %14, align 8
  store i32 %17, i32* %16, align 8
  %18 = icmp sgt i32 %17, 5
  br i1 %18, label %19, label %26

19:                                               ; preds = %5
  %20 = sext i32 %17 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* @_Znam(i64 %21) #10
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %24 = bitcast i32** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast i8* %22 to i32*
  br label %31

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to i32*
  %29 = sext i32 %17 to i64
  %30 = shl nsw i64 %29, 2
  br label %31

31:                                               ; preds = %19, %26
  %32 = phi i64 [ %21, %19 ], [ %30, %26 ]
  %33 = phi i32* [ %25, %19 ], [ %28, %26 ]
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %35, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %union.anon* %35 to i32*
  %39 = select i1 %18, i32* %37, i32* %38
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %40, i64 %32, i1 false) #11
  %41 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %13, i32* %42, align 8
  %43 = icmp sgt i32 %13, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %31
  %45 = sext i32 %13 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %13 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %61 = getelementptr inbounds %union.anon, %union.anon* %60, i64 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %union.anon* %60 to i32*
  %64 = select i1 %43, i32* %62, i32* %63
  %65 = bitcast i32* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %65, i64 %57, i1 false) #11
  %66 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 %67, i64 24, i1 false)
  call void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"* nonnull %6, %"class.tflite::RuntimeShape"* nonnull %7, %"struct.tflite::TransposeParams"* nonnull %8) #11
  %68 = load i8, i8* %66, align 4
  %69 = icmp sgt i8 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %56
  %71 = sext i8 %68 to i64
  br label %74

72:                                               ; preds = %74
  %73 = icmp slt i64 %80, %71
  br i1 %73, label %74, label %81

74:                                               ; preds = %70, %72
  %75 = phi i64 [ 0, %70 ], [ %80, %72 ]
  %76 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = icmp eq i64 %75, %78
  %80 = add nuw nsw i64 %75, 1
  br i1 %79, label %72, label %193

81:                                               ; preds = %72, %56
  %82 = load i32, i32* %14, align 8
  %83 = icmp sgt i32 %82, 5
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = load i32*, i32** %36, align 8
  br label %88

86:                                               ; preds = %81
  %87 = icmp sgt i32 %82, 0
  br i1 %87, label %88, label %191

88:                                               ; preds = %86, %84
  %89 = phi i32* [ %85, %84 ], [ %38, %86 ]
  %90 = zext i32 %82 to i64
  %91 = icmp ult i32 %82, 8
  br i1 %91, label %177, label %92

92:                                               ; preds = %88
  %93 = and i64 %90, 4294967288
  %94 = add nsw i64 %93, -8
  %95 = lshr exact i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp ult i64 %94, 24
  br i1 %98, label %144, label %99

99:                                               ; preds = %92
  %100 = sub nsw i64 %96, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i64 [ 0, %99 ], [ %141, %101 ]
  %103 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %139, %101 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %140, %101 ]
  %105 = phi i64 [ %100, %99 ], [ %142, %101 ]
  %106 = getelementptr inbounds i32, i32* %89, i64 %102
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4
  %109 = getelementptr inbounds i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4
  %112 = mul nsw <4 x i32> %108, %103
  %113 = mul nsw <4 x i32> %111, %104
  %114 = or i64 %102, 8
  %115 = getelementptr inbounds i32, i32* %89, i64 %114
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = getelementptr inbounds i32, i32* %115, i64 4
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4
  %121 = mul nsw <4 x i32> %117, %112
  %122 = mul nsw <4 x i32> %120, %113
  %123 = or i64 %102, 16
  %124 = getelementptr inbounds i32, i32* %89, i64 %123
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4
  %127 = getelementptr inbounds i32, i32* %124, i64 4
  %128 = bitcast i32* %127 to <4 x i32>*
  %129 = load <4 x i32>, <4 x i32>* %128, align 4
  %130 = mul nsw <4 x i32> %126, %121
  %131 = mul nsw <4 x i32> %129, %122
  %132 = or i64 %102, 24
  %133 = getelementptr inbounds i32, i32* %89, i64 %132
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4
  %136 = getelementptr inbounds i32, i32* %133, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  %138 = load <4 x i32>, <4 x i32>* %137, align 4
  %139 = mul nsw <4 x i32> %135, %130
  %140 = mul nsw <4 x i32> %138, %131
  %141 = add i64 %102, 32
  %142 = add i64 %105, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %101, !llvm.loop !108

144:                                              ; preds = %101, %92
  %145 = phi <4 x i32> [ undef, %92 ], [ %139, %101 ]
  %146 = phi <4 x i32> [ undef, %92 ], [ %140, %101 ]
  %147 = phi i64 [ 0, %92 ], [ %141, %101 ]
  %148 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %92 ], [ %139, %101 ]
  %149 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %92 ], [ %140, %101 ]
  %150 = icmp eq i64 %97, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %164, %151 ], [ %147, %144 ]
  %153 = phi <4 x i32> [ %162, %151 ], [ %148, %144 ]
  %154 = phi <4 x i32> [ %163, %151 ], [ %149, %144 ]
  %155 = phi i64 [ %165, %151 ], [ %97, %144 ]
  %156 = getelementptr inbounds i32, i32* %89, i64 %152
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4
  %159 = getelementptr inbounds i32, i32* %156, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 4
  %162 = mul nsw <4 x i32> %158, %153
  %163 = mul nsw <4 x i32> %161, %154
  %164 = add i64 %152, 8
  %165 = add i64 %155, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %151, !llvm.loop !109

167:                                              ; preds = %151, %144
  %168 = phi <4 x i32> [ %145, %144 ], [ %162, %151 ]
  %169 = phi <4 x i32> [ %146, %144 ], [ %163, %151 ]
  %170 = mul <4 x i32> %169, %168
  %171 = shufflevector <4 x i32> %170, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %172 = mul <4 x i32> %170, %171
  %173 = shufflevector <4 x i32> %172, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %174 = mul <4 x i32> %172, %173
  %175 = extractelement <4 x i32> %174, i32 0
  %176 = icmp eq i64 %93, %90
  br i1 %176, label %188, label %177

177:                                              ; preds = %167, %88
  %178 = phi i64 [ 0, %88 ], [ %93, %167 ]
  %179 = phi i32 [ 1, %88 ], [ %175, %167 ]
  br label %180

180:                                              ; preds = %177, %180
  %181 = phi i64 [ %186, %180 ], [ %178, %177 ]
  %182 = phi i32 [ %185, %180 ], [ %179, %177 ]
  %183 = getelementptr inbounds i32, i32* %89, i64 %181
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i32 %184, %182
  %186 = add nuw nsw i64 %181, 1
  %187 = icmp eq i64 %186, %90
  br i1 %187, label %188, label %180, !llvm.loop !110

188:                                              ; preds = %180, %167
  %189 = phi i32 [ %175, %167 ], [ %185, %180 ]
  %190 = sext i32 %189 to i64
  br label %191

191:                                              ; preds = %188, %86
  %192 = phi i64 [ 1, %86 ], [ %190, %188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %2, i64 %192, i1 false)
  br label %352

193:                                              ; preds = %74
  %194 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, 0
  %197 = icmp sgt i32 %13, 2
  %198 = and i1 %197, %196
  br i1 %198, label %199, label %351

199:                                              ; preds = %193
  %200 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %200) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 -86, i64 32, i1 false)
  %201 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %201, align 8
  %202 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 32, i1 false)
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %203, align 8
  %204 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %204, i8 -86, i64 24, i1 false)
  %205 = load i32, i32* %16, align 8
  %206 = icmp sgt i32 %205, 5
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %206, label %208, label %211

208:                                              ; preds = %199
  %209 = getelementptr inbounds %union.anon, %union.anon* %207, i64 0, i32 0
  %210 = load i32*, i32** %209, align 8
  br label %216

211:                                              ; preds = %199
  %212 = bitcast %union.anon* %207 to i32*
  %213 = icmp sgt i32 %205, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %211
  %215 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  br label %320

216:                                              ; preds = %211, %208
  %217 = phi i32* [ %210, %208 ], [ %212, %211 ]
  %218 = zext i32 %205 to i64
  %219 = icmp ult i32 %205, 8
  br i1 %219, label %305, label %220

220:                                              ; preds = %216
  %221 = and i64 %218, 4294967288
  %222 = add nsw i64 %221, -8
  %223 = lshr exact i64 %222, 3
  %224 = add nuw nsw i64 %223, 1
  %225 = and i64 %224, 3
  %226 = icmp ult i64 %222, 24
  br i1 %226, label %272, label %227

227:                                              ; preds = %220
  %228 = sub nsw i64 %224, %225
  br label %229

229:                                              ; preds = %229, %227
  %230 = phi i64 [ 0, %227 ], [ %269, %229 ]
  %231 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %227 ], [ %267, %229 ]
  %232 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %227 ], [ %268, %229 ]
  %233 = phi i64 [ %228, %227 ], [ %270, %229 ]
  %234 = getelementptr inbounds i32, i32* %217, i64 %230
  %235 = bitcast i32* %234 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4
  %237 = getelementptr inbounds i32, i32* %234, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  %239 = load <4 x i32>, <4 x i32>* %238, align 4
  %240 = mul nsw <4 x i32> %236, %231
  %241 = mul nsw <4 x i32> %239, %232
  %242 = or i64 %230, 8
  %243 = getelementptr inbounds i32, i32* %217, i64 %242
  %244 = bitcast i32* %243 to <4 x i32>*
  %245 = load <4 x i32>, <4 x i32>* %244, align 4
  %246 = getelementptr inbounds i32, i32* %243, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4
  %249 = mul nsw <4 x i32> %245, %240
  %250 = mul nsw <4 x i32> %248, %241
  %251 = or i64 %230, 16
  %252 = getelementptr inbounds i32, i32* %217, i64 %251
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4
  %255 = getelementptr inbounds i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4
  %258 = mul nsw <4 x i32> %254, %249
  %259 = mul nsw <4 x i32> %257, %250
  %260 = or i64 %230, 24
  %261 = getelementptr inbounds i32, i32* %217, i64 %260
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4
  %264 = getelementptr inbounds i32, i32* %261, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4
  %267 = mul nsw <4 x i32> %263, %258
  %268 = mul nsw <4 x i32> %266, %259
  %269 = add i64 %230, 32
  %270 = add i64 %233, -4
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %229, !llvm.loop !111

272:                                              ; preds = %229, %220
  %273 = phi <4 x i32> [ undef, %220 ], [ %267, %229 ]
  %274 = phi <4 x i32> [ undef, %220 ], [ %268, %229 ]
  %275 = phi i64 [ 0, %220 ], [ %269, %229 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %220 ], [ %267, %229 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %220 ], [ %268, %229 ]
  %278 = icmp eq i64 %225, 0
  br i1 %278, label %295, label %279

279:                                              ; preds = %272, %279
  %280 = phi i64 [ %292, %279 ], [ %275, %272 ]
  %281 = phi <4 x i32> [ %290, %279 ], [ %276, %272 ]
  %282 = phi <4 x i32> [ %291, %279 ], [ %277, %272 ]
  %283 = phi i64 [ %293, %279 ], [ %225, %272 ]
  %284 = getelementptr inbounds i32, i32* %217, i64 %280
  %285 = bitcast i32* %284 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 4
  %287 = getelementptr inbounds i32, i32* %284, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = mul nsw <4 x i32> %286, %281
  %291 = mul nsw <4 x i32> %289, %282
  %292 = add i64 %280, 8
  %293 = add i64 %283, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %279, !llvm.loop !112

295:                                              ; preds = %279, %272
  %296 = phi <4 x i32> [ %273, %272 ], [ %290, %279 ]
  %297 = phi <4 x i32> [ %274, %272 ], [ %291, %279 ]
  %298 = mul <4 x i32> %297, %296
  %299 = shufflevector <4 x i32> %298, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %300 = mul <4 x i32> %298, %299
  %301 = shufflevector <4 x i32> %300, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %302 = mul <4 x i32> %300, %301
  %303 = extractelement <4 x i32> %302, i32 0
  %304 = icmp eq i64 %221, %218
  br i1 %304, label %316, label %305

305:                                              ; preds = %295, %216
  %306 = phi i64 [ 0, %216 ], [ %221, %295 ]
  %307 = phi i32 [ 1, %216 ], [ %303, %295 ]
  br label %308

308:                                              ; preds = %305, %308
  %309 = phi i64 [ %314, %308 ], [ %306, %305 ]
  %310 = phi i32 [ %313, %308 ], [ %307, %305 ]
  %311 = getelementptr inbounds i32, i32* %217, i64 %309
  %312 = load i32, i32* %311, align 4
  %313 = mul nsw i32 %312, %310
  %314 = add nuw nsw i64 %309, 1
  %315 = icmp eq i64 %314, %218
  br i1 %315, label %316, label %308, !llvm.loop !113

316:                                              ; preds = %308, %295
  %317 = phi i32 [ %303, %295 ], [ %313, %308 ]
  %318 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  %319 = icmp sgt i32 %317, 0
  br i1 %319, label %320, label %326

320:                                              ; preds = %214, %316
  %321 = phi i64 [ %215, %214 ], [ %318, %316 ]
  %322 = phi i32 [ 1, %214 ], [ %317, %316 ]
  %323 = shl i64 %321, 32
  %324 = ashr exact i64 %323, 32
  %325 = sext i32 %322 to i64
  br label %345

326:                                              ; preds = %345, %316
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #11
  %327 = load i32, i32* %203, align 8
  %328 = icmp sgt i32 %327, 5
  br i1 %328, label %329, label %335

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %331 = load i32*, i32** %330, align 8
  %332 = icmp eq i32* %331, null
  br i1 %332, label %335, label %333

333:                                              ; preds = %329
  %334 = bitcast i32* %331 to i8*
  call void @_ZdaPv(i8* %334) #10
  br label %335

335:                                              ; preds = %326, %329, %333
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #11
  %336 = load i32, i32* %201, align 8
  %337 = icmp sgt i32 %336, 5
  br i1 %337, label %338, label %344

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %340 = load i32*, i32** %339, align 8
  %341 = icmp eq i32* %340, null
  br i1 %341, label %344, label %342

342:                                              ; preds = %338
  %343 = bitcast i32* %340 to i8*
  call void @_ZdaPv(i8* %343) #10
  br label %344

344:                                              ; preds = %335, %338, %342
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %200) #11
  br label %352

345:                                              ; preds = %320, %345
  %346 = phi i64 [ 0, %320 ], [ %349, %345 ]
  %347 = getelementptr inbounds i8, i8* %2, i64 %346
  %348 = getelementptr inbounds i8, i8* %4, i64 %346
  call void @_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %347, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %348)
  %349 = add i64 %346, %324
  %350 = icmp slt i64 %349, %325
  br i1 %350, label %345, label %326

351:                                              ; preds = %193
  call void @_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %4)
  br label %352

352:                                              ; preds = %351, %344, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  %353 = load i32, i32* %42, align 8
  %354 = icmp sgt i32 %353, 5
  br i1 %354, label %355, label %361

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast i32* %357 to i8*
  call void @_ZdaPv(i8* %360) #10
  br label %361

361:                                              ; preds = %352, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #11
  %362 = load i32, i32* %16, align 8
  %363 = icmp sgt i32 %362, 5
  br i1 %363, label %364, label %370

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %366 = load i32*, i32** %365, align 8
  %367 = icmp eq i32* %366, null
  br i1 %367, label %370, label %368

368:                                              ; preds = %364
  %369 = bitcast i32* %366 to i8*
  call void @_ZdaPv(i8* %369) #10
  br label %370

370:                                              ; preds = %361, %364, %368
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %6, align 4
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %7, align 4
  %14 = call zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* nonnull %6, i32* nonnull %7) #11
  br i1 %14, label %15, label %46

15:                                               ; preds = %5
  %16 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* %7, align 4
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i32*
  store i32 %17, i32* %21, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  store i32 %18, i32* %22, align 4
  %23 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 2, i32* %24, align 8
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %26 = bitcast %union.anon* %25 to i32*
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %17, i32* %27, align 4
  call void @_ZN6tflite13optimized_ops11Transpose2DIaEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %4)
  %28 = load i32, i32* %24, align 8
  %29 = icmp sgt i32 %28, 5
  br i1 %29, label %30, label %36

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast i32* %32 to i8*
  call void @_ZdaPv(i8* %35) #10
  br label %36

36:                                               ; preds = %15, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  %37 = load i32, i32* %19, align 8
  %38 = icmp sgt i32 %37, 5
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast i32* %41 to i8*
  call void @_ZdaPv(i8* %44) #10
  br label %45

45:                                               ; preds = %36, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  br label %265

46:                                               ; preds = %5
  %47 = icmp eq i32 %11, 3
  br i1 %47, label %48, label %264

48:                                               ; preds = %46
  %49 = load i32, i32* %10, align 8
  %50 = icmp sgt i32 %49, 5
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %union.anon, %union.anon* %51, i64 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = getelementptr inbounds i32, i32* %53, i64 2
  %56 = bitcast %union.anon* %51 to [5 x i32]*
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 1
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %59 = bitcast [16 x i8]* %58 to i32*
  %60 = select i1 %50, i32* %54, i32* %57
  %61 = select i1 %50, i32* %55, i32* %59
  %62 = load i32, i32* %60, align 4
  %63 = load i32, i32* %61, align 4
  %64 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 2
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 1
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %73

69:                                               ; preds = %48
  %70 = icmp eq i32 %68, 1
  %71 = select i1 %70, i32 %63, i32 -1431655766
  %72 = select i1 %70, i32 -1431655766, i32 %63
  br label %85

73:                                               ; preds = %48
  %74 = icmp eq i32 %68, 2
  %75 = select i1 %74, i32 1, i32 -1431655766
  %76 = select i1 %74, i32 -1431655766, i32 1
  %77 = icmp eq i32 %65, 1
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = icmp eq i32 %68, 1
  %80 = select i1 %79, i32 %63, i32 %75
  %81 = select i1 %79, i32 %76, i32 %63
  %82 = icmp eq i32 %65, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = mul nsw i32 %63, %62
  br label %93

85:                                               ; preds = %78, %73, %69
  %86 = phi i32 [ %81, %78 ], [ %72, %69 ], [ %76, %73 ]
  %87 = phi i32 [ %80, %78 ], [ %71, %69 ], [ %75, %73 ]
  %88 = phi i32 [ -1431655766, %78 ], [ 1, %69 ], [ %63, %73 ]
  %89 = icmp eq i32 %68, 0
  %90 = mul nsw i32 %63, %62
  %91 = select i1 %89, i32 %90, i32 %87
  %92 = select i1 %89, i32 %86, i32 %90
  br label %93

93:                                               ; preds = %85, %83
  %94 = phi i32 [ %84, %83 ], [ %88, %85 ]
  %95 = phi i32 [ %80, %83 ], [ %91, %85 ]
  %96 = phi i32 [ %81, %83 ], [ %92, %85 ]
  %97 = sext i32 %65 to i64
  %98 = getelementptr inbounds i32, i32* %53, i64 %97
  %99 = sext i32 %68 to i64
  %100 = getelementptr inbounds i32, i32* %53, i64 %99
  %101 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 2
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %53, i64 %103
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %97
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %99
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %103
  %108 = select i1 %50, i32* %100, i32* %106
  %109 = select i1 %50, i32* %98, i32* %105
  %110 = select i1 %50, i32* %104, i32* %107
  %111 = load i32, i32* %109, align 4
  %112 = load i32, i32* %108, align 4
  %113 = load i32, i32* %110, align 4
  %114 = icmp sgt i32 %111, 0
  br i1 %114, label %115, label %265

115:                                              ; preds = %93
  %116 = icmp sgt i32 %112, 0
  %117 = icmp sgt i32 %113, 0
  %118 = sext i32 %96 to i64
  %119 = sext i32 %95 to i64
  %120 = sext i32 %94 to i64
  %121 = zext i32 %111 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %113 to i64
  %124 = mul i32 %112, %113
  %125 = zext i32 %124 to i64
  %126 = getelementptr i8, i8* %4, i64 %123
  %127 = and i64 %123, 4294967264
  %128 = add nsw i64 %127, -32
  %129 = lshr exact i64 %128, 5
  %130 = add nuw nsw i64 %129, 1
  %131 = icmp ugt i32 %113, 31
  %132 = icmp eq i32 %96, 1
  %133 = and i1 %131, %132
  %134 = and i64 %123, 4294967264
  %135 = and i64 %130, 1
  %136 = icmp eq i64 %128, 0
  %137 = sub nuw nsw i64 %130, %135
  %138 = icmp eq i64 %135, 0
  %139 = icmp eq i64 %134, %123
  %140 = and i64 %123, 1
  %141 = icmp eq i64 %140, 0
  %142 = sub nsw i64 0, %123
  br label %143

143:                                              ; preds = %241, %115
  %144 = phi i64 [ 0, %115 ], [ %242, %241 ]
  %145 = mul i64 %144, %125
  %146 = mul i64 %144, %120
  %147 = add i64 %146, %123
  br i1 %116, label %148, label %241

148:                                              ; preds = %143
  %149 = mul nsw i64 %144, %120
  %150 = trunc i64 %144 to i32
  %151 = mul i32 %112, %150
  br label %152

152:                                              ; preds = %244, %148
  %153 = phi i64 [ 0, %148 ], [ %245, %244 ]
  %154 = mul i64 %153, %123
  %155 = add i64 %145, %154
  %156 = shl i64 %155, 32
  %157 = ashr exact i64 %156, 32
  %158 = getelementptr i8, i8* %4, i64 %157
  %159 = getelementptr i8, i8* %126, i64 %157
  %160 = mul i64 %153, %119
  %161 = add i64 %146, %160
  %162 = getelementptr i8, i8* %2, i64 %161
  %163 = add i64 %147, %160
  %164 = getelementptr i8, i8* %2, i64 %163
  br i1 %117, label %165, label %244

165:                                              ; preds = %152
  %166 = mul nsw i64 %153, %119
  %167 = add nsw i64 %166, %149
  %168 = trunc i64 %153 to i32
  %169 = add i32 %151, %168
  %170 = mul i32 %169, %113
  %171 = sext i32 %170 to i64
  br i1 %133, label %172, label %176

172:                                              ; preds = %165
  %173 = icmp ult i8* %158, %164
  %174 = icmp ult i8* %162, %159
  %175 = and i1 %173, %174
  br i1 %175, label %176, label %190

176:                                              ; preds = %165, %240, %172
  %177 = phi i64 [ 0, %172 ], [ 0, %165 ], [ %134, %240 ]
  %178 = xor i64 %177, -1
  br i1 %141, label %187, label %179

179:                                              ; preds = %176
  %180 = mul nsw i64 %177, %118
  %181 = add nsw i64 %167, %180
  %182 = add nsw i64 %177, %171
  %183 = getelementptr inbounds i8, i8* %2, i64 %181
  %184 = load i8, i8* %183, align 1
  %185 = getelementptr inbounds i8, i8* %4, i64 %182
  store i8 %184, i8* %185, align 1
  %186 = or i64 %177, 1
  br label %187

187:                                              ; preds = %179, %176
  %188 = phi i64 [ %186, %179 ], [ %177, %176 ]
  %189 = icmp eq i64 %178, %142
  br i1 %189, label %244, label %247

190:                                              ; preds = %172
  br i1 %136, label %224, label %191

191:                                              ; preds = %190, %191
  %192 = phi i64 [ %221, %191 ], [ 0, %190 ]
  %193 = phi i64 [ %222, %191 ], [ %137, %190 ]
  %194 = mul nsw i64 %192, %118
  %195 = add nsw i64 %167, %194
  %196 = add nsw i64 %192, %171
  %197 = getelementptr inbounds i8, i8* %2, i64 %195
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1, !alias.scope !114
  %200 = getelementptr inbounds i8, i8* %197, i64 16
  %201 = bitcast i8* %200 to <16 x i8>*
  %202 = load <16 x i8>, <16 x i8>* %201, align 1, !alias.scope !114
  %203 = getelementptr inbounds i8, i8* %4, i64 %196
  %204 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %199, <16 x i8>* %204, align 1, !alias.scope !117, !noalias !114
  %205 = getelementptr inbounds i8, i8* %203, i64 16
  %206 = bitcast i8* %205 to <16 x i8>*
  store <16 x i8> %202, <16 x i8>* %206, align 1, !alias.scope !117, !noalias !114
  %207 = or i64 %192, 32
  %208 = mul nsw i64 %207, %118
  %209 = add nsw i64 %167, %208
  %210 = add nsw i64 %207, %171
  %211 = getelementptr inbounds i8, i8* %2, i64 %209
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !114
  %214 = getelementptr inbounds i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !114
  %217 = getelementptr inbounds i8, i8* %4, i64 %210
  %218 = bitcast i8* %217 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %218, align 1, !alias.scope !117, !noalias !114
  %219 = getelementptr inbounds i8, i8* %217, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !117, !noalias !114
  %221 = add i64 %192, 64
  %222 = add i64 %193, -2
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %191, !llvm.loop !119

224:                                              ; preds = %191, %190
  %225 = phi i64 [ 0, %190 ], [ %221, %191 ]
  br i1 %138, label %240, label %226

226:                                              ; preds = %224
  %227 = mul nsw i64 %225, %118
  %228 = add nsw i64 %167, %227
  %229 = add nsw i64 %225, %171
  %230 = getelementptr inbounds i8, i8* %2, i64 %228
  %231 = bitcast i8* %230 to <16 x i8>*
  %232 = load <16 x i8>, <16 x i8>* %231, align 1, !alias.scope !114
  %233 = getelementptr inbounds i8, i8* %230, i64 16
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !114
  %236 = getelementptr inbounds i8, i8* %4, i64 %229
  %237 = bitcast i8* %236 to <16 x i8>*
  store <16 x i8> %232, <16 x i8>* %237, align 1, !alias.scope !117, !noalias !114
  %238 = getelementptr inbounds i8, i8* %236, i64 16
  %239 = bitcast i8* %238 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !117, !noalias !114
  br label %240

240:                                              ; preds = %224, %226
  br i1 %139, label %244, label %176

241:                                              ; preds = %244, %143
  %242 = add nuw nsw i64 %144, 1
  %243 = icmp eq i64 %242, %121
  br i1 %243, label %265, label %143

244:                                              ; preds = %187, %247, %240, %152
  %245 = add nuw nsw i64 %153, 1
  %246 = icmp eq i64 %245, %122
  br i1 %246, label %241, label %152

247:                                              ; preds = %187, %247
  %248 = phi i64 [ %262, %247 ], [ %188, %187 ]
  %249 = mul nsw i64 %248, %118
  %250 = add nsw i64 %167, %249
  %251 = add nsw i64 %248, %171
  %252 = getelementptr inbounds i8, i8* %2, i64 %250
  %253 = load i8, i8* %252, align 1
  %254 = getelementptr inbounds i8, i8* %4, i64 %251
  store i8 %253, i8* %254, align 1
  %255 = add nuw nsw i64 %248, 1
  %256 = mul nsw i64 %255, %118
  %257 = add nsw i64 %167, %256
  %258 = add nsw i64 %255, %171
  %259 = getelementptr inbounds i8, i8* %2, i64 %257
  %260 = load i8, i8* %259, align 1
  %261 = getelementptr inbounds i8, i8* %4, i64 %258
  store i8 %260, i8* %261, align 1
  %262 = add nuw nsw i64 %248, 2
  %263 = icmp eq i64 %262, %123
  br i1 %263, label %244, label %247, !llvm.loop !120

264:                                              ; preds = %46
  call void @_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i8* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %4) #11
  br label %265

265:                                              ; preds = %241, %93, %264, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops11Transpose2DIaEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #8 comdat {
  %5 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 5
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %union.anon* %8 to i32*
  %12 = select i1 %7, i32* %10, i32* %11
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %12, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 %15, 3
  %17 = add nsw i32 %13, -4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %4
  %20 = sext i32 %15 to i64
  %21 = add i32 %15, -4
  %22 = icmp slt i32 %21, 0
  %23 = sext i32 %13 to i64
  %24 = shl i32 %15, 2
  %25 = and i32 %15, -4
  %26 = shl nsw i64 %20, 1
  %27 = mul nsw i64 %20, 3
  br label %44

28:                                               ; preds = %159
  %29 = trunc i64 %163 to i32
  br label %30

30:                                               ; preds = %28, %4
  %31 = phi i32 [ 0, %4 ], [ %29, %28 ]
  %32 = phi i8* [ %1, %4 ], [ %162, %28 ]
  %33 = icmp slt i32 %31, %13
  br i1 %33, label %34, label %218

34:                                               ; preds = %30
  %35 = icmp sgt i32 %15, 0
  %36 = sext i32 %13 to i64
  %37 = zext i32 %31 to i64
  %38 = zext i32 %13 to i64
  %39 = add i32 %15, -1
  %40 = and i32 %15, 7
  %41 = icmp ult i32 %39, 7
  %42 = sub i32 %15, %40
  %43 = icmp eq i32 %40, 0
  br label %166

44:                                               ; preds = %19, %159
  %45 = phi i64 [ 0, %19 ], [ %163, %159 ]
  %46 = phi i8* [ %1, %19 ], [ %162, %159 ]
  %47 = getelementptr inbounds i8, i8* %3, i64 %45
  tail call void @llvm.prefetch(i8* %46, i32 0, i32 3, i32 1) #11
  %48 = getelementptr inbounds i8, i8* %46, i64 %20
  tail call void @llvm.prefetch(i8* %48, i32 0, i32 3, i32 1) #11
  %49 = getelementptr inbounds i8, i8* %48, i64 %20
  tail call void @llvm.prefetch(i8* %49, i32 0, i32 3, i32 1) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %20
  tail call void @llvm.prefetch(i8* %50, i32 0, i32 3, i32 1) #11
  br i1 %22, label %105, label %51

51:                                               ; preds = %44, %51
  %52 = phi i8* [ %102, %51 ], [ %46, %44 ]
  %53 = phi i8* [ %101, %51 ], [ %47, %44 ]
  %54 = phi i32 [ %103, %51 ], [ 0, %44 ]
  %55 = load i8, i8* %52, align 1
  %56 = getelementptr inbounds i8, i8* %52, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %52, i64 2
  %59 = load i8, i8* %58, align 1
  %60 = getelementptr inbounds i8, i8* %52, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %52, i64 %20
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %62, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds i8, i8* %62, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = getelementptr inbounds i8, i8* %62, i64 3
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %62, i64 %20
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %70, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds i8, i8* %70, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = getelementptr inbounds i8, i8* %70, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = getelementptr inbounds i8, i8* %70, i64 %20
  %79 = load i8, i8* %78, align 1
  %80 = getelementptr inbounds i8, i8* %78, i64 1
  %81 = load i8, i8* %80, align 1
  %82 = getelementptr inbounds i8, i8* %78, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds i8, i8* %78, i64 3
  %85 = load i8, i8* %84, align 1
  store i8 %55, i8* %53, align 1
  %86 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 %63, i8* %86, align 1
  %87 = getelementptr inbounds i8, i8* %53, i64 2
  store i8 %71, i8* %87, align 1
  %88 = getelementptr inbounds i8, i8* %53, i64 3
  store i8 %79, i8* %88, align 1
  %89 = getelementptr inbounds i8, i8* %53, i64 %23
  store i8 %57, i8* %89, align 1
  %90 = getelementptr inbounds i8, i8* %89, i64 1
  store i8 %65, i8* %90, align 1
  %91 = getelementptr inbounds i8, i8* %89, i64 2
  store i8 %73, i8* %91, align 1
  %92 = getelementptr inbounds i8, i8* %89, i64 3
  store i8 %81, i8* %92, align 1
  %93 = getelementptr inbounds i8, i8* %89, i64 %23
  store i8 %59, i8* %93, align 1
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  store i8 %67, i8* %94, align 1
  %95 = getelementptr inbounds i8, i8* %93, i64 2
  store i8 %75, i8* %95, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 3
  store i8 %83, i8* %96, align 1
  %97 = getelementptr inbounds i8, i8* %93, i64 %23
  store i8 %61, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  store i8 %69, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %97, i64 2
  store i8 %77, i8* %99, align 1
  %100 = getelementptr inbounds i8, i8* %97, i64 3
  store i8 %85, i8* %100, align 1
  %101 = getelementptr inbounds i8, i8* %97, i64 %23
  %102 = getelementptr inbounds i8, i8* %52, i64 4
  %103 = add nuw nsw i32 %54, 4
  %104 = icmp sgt i32 %103, %21
  br i1 %104, label %105, label %51

105:                                              ; preds = %51, %44
  %106 = phi i32 [ 0, %44 ], [ %25, %51 ]
  %107 = phi i8* [ %47, %44 ], [ %101, %51 ]
  %108 = phi i8* [ %46, %44 ], [ %102, %51 ]
  %109 = icmp eq i32 %15, %106
  br i1 %109, label %159, label %110

110:                                              ; preds = %105
  %111 = sub i32 %15, %106
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %356

113:                                              ; preds = %110
  %114 = zext i32 %111 to i64
  %115 = add nsw i64 %114, -1
  %116 = and i64 %114, 3
  %117 = icmp ult i64 %115, 3
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = sub nsw i64 %114, %116
  br label %134

120:                                              ; preds = %134, %113
  %121 = phi i64 [ 0, %113 ], [ %156, %134 ]
  %122 = icmp eq i64 %116, 0
  br i1 %122, label %133, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %130, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %131, %123 ], [ %116, %120 ]
  %126 = getelementptr inbounds i8, i8* %108, i64 %124
  %127 = load i8, i8* %126, align 1
  %128 = mul nsw i64 %124, %23
  %129 = getelementptr inbounds i8, i8* %107, i64 %128
  store i8 %127, i8* %129, align 1
  %130 = add nuw nsw i64 %124, 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %123, !llvm.loop !121

133:                                              ; preds = %123, %120
  br i1 %112, label %219, label %356

134:                                              ; preds = %134, %118
  %135 = phi i64 [ 0, %118 ], [ %156, %134 ]
  %136 = phi i64 [ %119, %118 ], [ %157, %134 ]
  %137 = getelementptr inbounds i8, i8* %108, i64 %135
  %138 = load i8, i8* %137, align 1
  %139 = mul nsw i64 %135, %23
  %140 = getelementptr inbounds i8, i8* %107, i64 %139
  store i8 %138, i8* %140, align 1
  %141 = or i64 %135, 1
  %142 = getelementptr inbounds i8, i8* %108, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = mul nsw i64 %141, %23
  %145 = getelementptr inbounds i8, i8* %107, i64 %144
  store i8 %143, i8* %145, align 1
  %146 = or i64 %135, 2
  %147 = getelementptr inbounds i8, i8* %108, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = mul nsw i64 %146, %23
  %150 = getelementptr inbounds i8, i8* %107, i64 %149
  store i8 %148, i8* %150, align 1
  %151 = or i64 %135, 3
  %152 = getelementptr inbounds i8, i8* %108, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = mul nsw i64 %151, %23
  %155 = getelementptr inbounds i8, i8* %107, i64 %154
  store i8 %153, i8* %155, align 1
  %156 = add nuw nsw i64 %135, 4
  %157 = add i64 %136, -4
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %120, label %134

159:                                              ; preds = %105, %356
  %160 = phi i32 [ %357, %356 ], [ %16, %105 ]
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %108, i64 %161
  %163 = add nuw i64 %45, 4
  %164 = trunc i64 %163 to i32
  %165 = icmp slt i32 %17, %164
  br i1 %165, label %28, label %44

166:                                              ; preds = %184, %34
  %167 = phi i64 [ %37, %34 ], [ %186, %184 ]
  %168 = phi i8* [ %32, %34 ], [ %185, %184 ]
  br i1 %35, label %169, label %184

169:                                              ; preds = %166
  %170 = getelementptr inbounds i8, i8* %3, i64 %167
  br i1 %41, label %171, label %188

171:                                              ; preds = %188, %169
  %172 = phi i8* [ undef, %169 ], [ %215, %188 ]
  %173 = phi i8* [ %170, %169 ], [ %214, %188 ]
  %174 = phi i8* [ %168, %169 ], [ %215, %188 ]
  br i1 %43, label %184, label %175

175:                                              ; preds = %171, %175
  %176 = phi i8* [ %180, %175 ], [ %173, %171 ]
  %177 = phi i8* [ %181, %175 ], [ %174, %171 ]
  %178 = phi i32 [ %182, %175 ], [ %40, %171 ]
  %179 = load i8, i8* %177, align 1
  store i8 %179, i8* %176, align 1
  %180 = getelementptr inbounds i8, i8* %176, i64 %36
  %181 = getelementptr inbounds i8, i8* %177, i64 1
  %182 = add i32 %178, -1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !122

184:                                              ; preds = %171, %175, %166
  %185 = phi i8* [ %168, %166 ], [ %172, %171 ], [ %181, %175 ]
  %186 = add nuw nsw i64 %167, 1
  %187 = icmp eq i64 %186, %38
  br i1 %187, label %218, label %166

188:                                              ; preds = %169, %188
  %189 = phi i8* [ %214, %188 ], [ %170, %169 ]
  %190 = phi i8* [ %215, %188 ], [ %168, %169 ]
  %191 = phi i32 [ %216, %188 ], [ %42, %169 ]
  %192 = load i8, i8* %190, align 1
  store i8 %192, i8* %189, align 1
  %193 = getelementptr inbounds i8, i8* %189, i64 %36
  %194 = getelementptr inbounds i8, i8* %190, i64 1
  %195 = load i8, i8* %194, align 1
  store i8 %195, i8* %193, align 1
  %196 = getelementptr inbounds i8, i8* %193, i64 %36
  %197 = getelementptr inbounds i8, i8* %190, i64 2
  %198 = load i8, i8* %197, align 1
  store i8 %198, i8* %196, align 1
  %199 = getelementptr inbounds i8, i8* %196, i64 %36
  %200 = getelementptr inbounds i8, i8* %190, i64 3
  %201 = load i8, i8* %200, align 1
  store i8 %201, i8* %199, align 1
  %202 = getelementptr inbounds i8, i8* %199, i64 %36
  %203 = getelementptr inbounds i8, i8* %190, i64 4
  %204 = load i8, i8* %203, align 1
  store i8 %204, i8* %202, align 1
  %205 = getelementptr inbounds i8, i8* %202, i64 %36
  %206 = getelementptr inbounds i8, i8* %190, i64 5
  %207 = load i8, i8* %206, align 1
  store i8 %207, i8* %205, align 1
  %208 = getelementptr inbounds i8, i8* %205, i64 %36
  %209 = getelementptr inbounds i8, i8* %190, i64 6
  %210 = load i8, i8* %209, align 1
  store i8 %210, i8* %208, align 1
  %211 = getelementptr inbounds i8, i8* %208, i64 %36
  %212 = getelementptr inbounds i8, i8* %190, i64 7
  %213 = load i8, i8* %212, align 1
  store i8 %213, i8* %211, align 1
  %214 = getelementptr inbounds i8, i8* %211, i64 %36
  %215 = getelementptr inbounds i8, i8* %190, i64 8
  %216 = add i32 %191, -8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %171, label %188

218:                                              ; preds = %184, %30
  ret void

219:                                              ; preds = %133
  %220 = getelementptr inbounds i8, i8* %108, i64 %20
  %221 = getelementptr inbounds i8, i8* %107, i64 1
  %222 = and i64 %114, 3
  %223 = icmp ult i64 %115, 3
  br i1 %223, label %251, label %224

224:                                              ; preds = %219
  %225 = sub nsw i64 %114, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %248, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %249, %226 ]
  %229 = getelementptr inbounds i8, i8* %220, i64 %227
  %230 = load i8, i8* %229, align 1
  %231 = mul nsw i64 %227, %23
  %232 = getelementptr inbounds i8, i8* %221, i64 %231
  store i8 %230, i8* %232, align 1
  %233 = or i64 %227, 1
  %234 = getelementptr inbounds i8, i8* %220, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = mul nsw i64 %233, %23
  %237 = getelementptr inbounds i8, i8* %221, i64 %236
  store i8 %235, i8* %237, align 1
  %238 = or i64 %227, 2
  %239 = getelementptr inbounds i8, i8* %220, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = mul nsw i64 %238, %23
  %242 = getelementptr inbounds i8, i8* %221, i64 %241
  store i8 %240, i8* %242, align 1
  %243 = or i64 %227, 3
  %244 = getelementptr inbounds i8, i8* %220, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = mul nsw i64 %243, %23
  %247 = getelementptr inbounds i8, i8* %221, i64 %246
  store i8 %245, i8* %247, align 1
  %248 = add nuw nsw i64 %227, 4
  %249 = add i64 %228, -4
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %226

251:                                              ; preds = %226, %219
  %252 = phi i64 [ 0, %219 ], [ %248, %226 ]
  %253 = icmp eq i64 %222, 0
  br i1 %253, label %264, label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %261, %254 ], [ %252, %251 ]
  %256 = phi i64 [ %262, %254 ], [ %222, %251 ]
  %257 = getelementptr inbounds i8, i8* %220, i64 %255
  %258 = load i8, i8* %257, align 1
  %259 = mul nsw i64 %255, %23
  %260 = getelementptr inbounds i8, i8* %221, i64 %259
  store i8 %258, i8* %260, align 1
  %261 = add nuw nsw i64 %255, 1
  %262 = add i64 %256, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %254, !llvm.loop !123

264:                                              ; preds = %254, %251
  br i1 %112, label %265, label %356

265:                                              ; preds = %264
  %266 = getelementptr inbounds i8, i8* %108, i64 %26
  %267 = getelementptr inbounds i8, i8* %107, i64 2
  %268 = and i64 %114, 3
  %269 = icmp ult i64 %115, 3
  br i1 %269, label %297, label %270

270:                                              ; preds = %265
  %271 = sub nsw i64 %114, %268
  br label %272

272:                                              ; preds = %272, %270
  %273 = phi i64 [ 0, %270 ], [ %294, %272 ]
  %274 = phi i64 [ %271, %270 ], [ %295, %272 ]
  %275 = getelementptr inbounds i8, i8* %266, i64 %273
  %276 = load i8, i8* %275, align 1
  %277 = mul nsw i64 %273, %23
  %278 = getelementptr inbounds i8, i8* %267, i64 %277
  store i8 %276, i8* %278, align 1
  %279 = or i64 %273, 1
  %280 = getelementptr inbounds i8, i8* %266, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = mul nsw i64 %279, %23
  %283 = getelementptr inbounds i8, i8* %267, i64 %282
  store i8 %281, i8* %283, align 1
  %284 = or i64 %273, 2
  %285 = getelementptr inbounds i8, i8* %266, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = mul nsw i64 %284, %23
  %288 = getelementptr inbounds i8, i8* %267, i64 %287
  store i8 %286, i8* %288, align 1
  %289 = or i64 %273, 3
  %290 = getelementptr inbounds i8, i8* %266, i64 %289
  %291 = load i8, i8* %290, align 1
  %292 = mul nsw i64 %289, %23
  %293 = getelementptr inbounds i8, i8* %267, i64 %292
  store i8 %291, i8* %293, align 1
  %294 = add nuw nsw i64 %273, 4
  %295 = add i64 %274, -4
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %272

297:                                              ; preds = %272, %265
  %298 = phi i64 [ 0, %265 ], [ %294, %272 ]
  %299 = icmp eq i64 %268, 0
  br i1 %299, label %310, label %300

300:                                              ; preds = %297, %300
  %301 = phi i64 [ %307, %300 ], [ %298, %297 ]
  %302 = phi i64 [ %308, %300 ], [ %268, %297 ]
  %303 = getelementptr inbounds i8, i8* %266, i64 %301
  %304 = load i8, i8* %303, align 1
  %305 = mul nsw i64 %301, %23
  %306 = getelementptr inbounds i8, i8* %267, i64 %305
  store i8 %304, i8* %306, align 1
  %307 = add nuw nsw i64 %301, 1
  %308 = add i64 %302, -1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %300, !llvm.loop !124

310:                                              ; preds = %300, %297
  br i1 %112, label %311, label %356

311:                                              ; preds = %310
  %312 = getelementptr inbounds i8, i8* %108, i64 %27
  %313 = getelementptr inbounds i8, i8* %107, i64 3
  %314 = and i64 %114, 3
  %315 = icmp ult i64 %115, 3
  br i1 %315, label %343, label %316

316:                                              ; preds = %311
  %317 = sub nsw i64 %114, %314
  br label %318

318:                                              ; preds = %318, %316
  %319 = phi i64 [ 0, %316 ], [ %340, %318 ]
  %320 = phi i64 [ %317, %316 ], [ %341, %318 ]
  %321 = getelementptr inbounds i8, i8* %312, i64 %319
  %322 = load i8, i8* %321, align 1
  %323 = mul nsw i64 %319, %23
  %324 = getelementptr inbounds i8, i8* %313, i64 %323
  store i8 %322, i8* %324, align 1
  %325 = or i64 %319, 1
  %326 = getelementptr inbounds i8, i8* %312, i64 %325
  %327 = load i8, i8* %326, align 1
  %328 = mul nsw i64 %325, %23
  %329 = getelementptr inbounds i8, i8* %313, i64 %328
  store i8 %327, i8* %329, align 1
  %330 = or i64 %319, 2
  %331 = getelementptr inbounds i8, i8* %312, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = mul nsw i64 %330, %23
  %334 = getelementptr inbounds i8, i8* %313, i64 %333
  store i8 %332, i8* %334, align 1
  %335 = or i64 %319, 3
  %336 = getelementptr inbounds i8, i8* %312, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = mul nsw i64 %335, %23
  %339 = getelementptr inbounds i8, i8* %313, i64 %338
  store i8 %337, i8* %339, align 1
  %340 = add nuw nsw i64 %319, 4
  %341 = add i64 %320, -4
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %318

343:                                              ; preds = %318, %311
  %344 = phi i64 [ 0, %311 ], [ %340, %318 ]
  %345 = icmp eq i64 %314, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %343, %346
  %347 = phi i64 [ %353, %346 ], [ %344, %343 ]
  %348 = phi i64 [ %354, %346 ], [ %314, %343 ]
  %349 = getelementptr inbounds i8, i8* %312, i64 %347
  %350 = load i8, i8* %349, align 1
  %351 = mul nsw i64 %347, %23
  %352 = getelementptr inbounds i8, i8* %313, i64 %351
  store i8 %350, i8* %352, align 1
  %353 = add nuw nsw i64 %347, 1
  %354 = add i64 %348, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %346, !llvm.loop !125

356:                                              ; preds = %343, %346, %110, %133, %264, %310
  %357 = sub i32 %24, %106
  br label %159
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.tflite::NdArrayDesc", align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sub i32 5, %10
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 40, i1 false)
  %15 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !126
  %17 = icmp sgt i32 %10, 5
  br i1 %17, label %18, label %19

18:                                               ; preds = %5
  tail call void @abort() #12, !noalias !126
  unreachable

19:                                               ; preds = %5
  store i32 5, i32* %16, align 8, !alias.scope !126
  %20 = icmp sgt i32 %13, 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to [5 x i32]*
  br i1 %20, label %23, label %102

23:                                               ; preds = %19
  %24 = zext i32 %13 to i64
  %25 = icmp ult i32 %13, 8
  br i1 %25, label %95, label %26

26:                                               ; preds = %23
  %27 = and i64 %24, 4294967288
  %28 = add nsw i64 %27, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 7
  %32 = icmp ult i64 %28, 56
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = sub nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %77, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %78, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %36
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !126
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !126
  %42 = or i64 %36, 8
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !126
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !126
  %47 = or i64 %36, 16
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !126
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !126
  %52 = or i64 %36, 24
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !126
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !126
  %57 = or i64 %36, 32
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !126
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !126
  %62 = or i64 %36, 40
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !126
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !126
  %67 = or i64 %36, 48
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !126
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !126
  %72 = or i64 %36, 56
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !126
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !126
  %77 = add i64 %36, 64
  %78 = add i64 %37, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %35, !llvm.loop !129

80:                                               ; preds = %35, %26
  %81 = phi i64 [ 0, %26 ], [ %77, %35 ]
  %82 = icmp eq i64 %31, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %90, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %91, %83 ], [ %31, %80 ]
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !126
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !126
  %90 = add i64 %84, 8
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %83, !llvm.loop !130

93:                                               ; preds = %83, %80
  %94 = icmp eq i64 %27, %24
  br i1 %94, label %102, label %95

95:                                               ; preds = %93, %23
  %96 = phi i64 [ 0, %23 ], [ %27, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %100, %97 ], [ %96, %95 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %98
  store i32 1, i32* %99, align 4, !alias.scope !126
  %100 = add nuw nsw i64 %98, 1
  %101 = icmp eq i64 %100, %24
  br i1 %101, label %102, label %97, !llvm.loop !131

102:                                              ; preds = %97, %93, %19
  %103 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %104 = bitcast %union.anon* %21 to i32*
  %105 = sext i32 %13 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %109 = bitcast %union.anon* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %109, i64 %111, i1 false) #11
  %112 = load i32, i32* %16, align 8
  %113 = icmp sgt i32 %112, 5
  %114 = load i32*, i32** %103, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 4
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 8
  %117 = bitcast i8* %116 to i32*
  %118 = select i1 %113, i32* %115, i32* %117
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 4
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 4
  store i32 1, i32* %121, align 4
  %122 = getelementptr inbounds i32, i32* %114, i64 3
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = select i1 %113, i32* %122, i32* %124
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 3
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 3
  store i32 %119, i32* %128, align 4
  %129 = mul nsw i32 %126, %119
  %130 = getelementptr inbounds i32, i32* %114, i64 2
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = select i1 %113, i32* %130, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 2
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 2
  store i32 %129, i32* %136, align 4
  %137 = mul nsw i32 %134, %129
  %138 = getelementptr inbounds i32, i32* %114, i64 1
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 1
  %140 = select i1 %113, i32* %138, i32* %139
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 1
  store i32 %137, i32* %143, align 4
  %144 = mul nsw i32 %141, %137
  %145 = select i1 %113, i32* %114, i32* %104
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 0
  store i32 %144, i32* %148, align 4
  %149 = xor i1 %113, true
  %150 = icmp eq i32* %114, null
  %151 = or i1 %150, %149
  br i1 %151, label %155, label %152

152:                                              ; preds = %102
  %153 = bitcast i32* %114 to i8*
  tail call void @_ZdaPv(i8* %153) #10
  %154 = load i32, i32* %11, align 8, !noalias !132
  br label %155

155:                                              ; preds = %102, %152
  %156 = phi i32 [ %12, %102 ], [ %154, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  %157 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !132
  %159 = icmp sgt i32 %156, 5
  br i1 %159, label %160, label %161

160:                                              ; preds = %155
  tail call void @abort() #12, !noalias !132
  unreachable

161:                                              ; preds = %155
  store i32 5, i32* %158, align 8, !alias.scope !132
  %162 = sub i32 5, %156
  %163 = icmp sgt i32 %162, 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %165 = bitcast %union.anon* %164 to [5 x i32]*
  br i1 %163, label %166, label %245

166:                                              ; preds = %161
  %167 = zext i32 %162 to i64
  %168 = icmp ult i32 %162, 8
  br i1 %168, label %238, label %169

169:                                              ; preds = %166
  %170 = and i64 %167, 4294967288
  %171 = add nsw i64 %170, -8
  %172 = lshr exact i64 %171, 3
  %173 = add nuw nsw i64 %172, 1
  %174 = and i64 %173, 7
  %175 = icmp ult i64 %171, 56
  br i1 %175, label %223, label %176

176:                                              ; preds = %169
  %177 = sub nsw i64 %173, %174
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i64 [ 0, %176 ], [ %220, %178 ]
  %180 = phi i64 [ %177, %176 ], [ %221, %178 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !132
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !132
  %185 = or i64 %179, 8
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %185
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !132
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !132
  %190 = or i64 %179, 16
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %190
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !132
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !132
  %195 = or i64 %179, 24
  %196 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %197, align 8, !alias.scope !132
  %198 = getelementptr inbounds i32, i32* %196, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %199, align 8, !alias.scope !132
  %200 = or i64 %179, 32
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %200
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %202, align 8, !alias.scope !132
  %203 = getelementptr inbounds i32, i32* %201, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %204, align 8, !alias.scope !132
  %205 = or i64 %179, 40
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %205
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %207, align 8, !alias.scope !132
  %208 = getelementptr inbounds i32, i32* %206, i64 4
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %209, align 8, !alias.scope !132
  %210 = or i64 %179, 48
  %211 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %210
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %212, align 8, !alias.scope !132
  %213 = getelementptr inbounds i32, i32* %211, i64 4
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %214, align 8, !alias.scope !132
  %215 = or i64 %179, 56
  %216 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %215
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %217, align 8, !alias.scope !132
  %218 = getelementptr inbounds i32, i32* %216, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %219, align 8, !alias.scope !132
  %220 = add i64 %179, 64
  %221 = add i64 %180, -8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %178, !llvm.loop !135

223:                                              ; preds = %178, %169
  %224 = phi i64 [ 0, %169 ], [ %220, %178 ]
  %225 = icmp eq i64 %174, 0
  br i1 %225, label %236, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %233, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %234, %226 ], [ %174, %223 ]
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %227
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %230, align 8, !alias.scope !132
  %231 = getelementptr inbounds i32, i32* %229, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %232, align 8, !alias.scope !132
  %233 = add i64 %227, 8
  %234 = add i64 %228, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %226, !llvm.loop !136

236:                                              ; preds = %226, %223
  %237 = icmp eq i64 %170, %167
  br i1 %237, label %245, label %238

238:                                              ; preds = %236, %166
  %239 = phi i64 [ 0, %166 ], [ %170, %236 ]
  br label %240

240:                                              ; preds = %238, %240
  %241 = phi i64 [ %243, %240 ], [ %239, %238 ]
  %242 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %241
  store i32 1, i32* %242, align 4, !alias.scope !132
  %243 = add nuw nsw i64 %241, 1
  %244 = icmp eq i64 %243, %167
  br i1 %244, label %245, label %240, !llvm.loop !137

245:                                              ; preds = %240, %236, %161
  %246 = getelementptr inbounds %union.anon, %union.anon* %164, i64 0, i32 0
  %247 = bitcast %union.anon* %164 to i32*
  %248 = sext i32 %162 to i64
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  %250 = bitcast i32* %249 to i8*
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i8*
  %253 = sext i32 %156 to i64
  %254 = shl nsw i64 %253, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %252, i64 %254, i1 false) #11
  %255 = load i32, i32* %158, align 8
  %256 = icmp sgt i32 %255, 5
  %257 = load i32*, i32** %246, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %260 = bitcast i8* %259 to i32*
  %261 = select i1 %256, i32* %258, i32* %260
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds i32, i32* %257, i64 3
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %265 = bitcast i8* %264 to i32*
  %266 = select i1 %256, i32* %263, i32* %265
  %267 = load i32, i32* %266, align 4
  %268 = mul nsw i32 %267, %262
  %269 = getelementptr inbounds i32, i32* %257, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %256, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %257, i64 1
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 1
  %276 = select i1 %256, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = select i1 %256, i32* %257, i32* %247
  %279 = load i32, i32* %278, align 4
  %280 = xor i1 %256, true
  %281 = icmp eq i32* %257, null
  %282 = or i1 %281, %280
  br i1 %282, label %285, label %283

283:                                              ; preds = %245
  %284 = bitcast i32* %257 to i8*
  tail call void @_ZdaPv(i8* %284) #10
  br label %285

285:                                              ; preds = %245, %283
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %286 = icmp slt i32 %12, 5
  br i1 %286, label %294, label %287

287:                                              ; preds = %285
  %288 = add nsw i32 %12, -5
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = add nsw i32 %291, %13
  %293 = sext i32 %292 to i64
  br label %536

294:                                              ; preds = %285
  %295 = icmp eq i32 %12, 4
  br i1 %295, label %536, label %544

296:                                              ; preds = %583
  %297 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %584
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %587
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %585
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %586
  %304 = load i32, i32* %303, align 4
  %305 = icmp sgt i32 %277, 0
  %306 = icmp sgt i32 %273, 0
  %307 = icmp sgt i32 %267, 0
  %308 = icmp sgt i32 %262, 0
  %309 = sext i32 %298 to i64
  %310 = sext i32 %300 to i64
  %311 = sext i32 %302 to i64
  %312 = sext i32 %304 to i64
  %313 = zext i32 %279 to i64
  %314 = zext i32 %277 to i64
  %315 = zext i32 %273 to i64
  %316 = zext i32 %267 to i64
  %317 = zext i32 %262 to i64
  %318 = add nsw i64 %317, -1
  %319 = mul i32 %277, %273
  %320 = mul i32 %319, %267
  %321 = mul i32 %320, %262
  %322 = zext i32 %321 to i64
  %323 = mul i32 %267, %262
  %324 = mul i32 %323, %273
  %325 = zext i32 %324 to i64
  %326 = zext i32 %323 to i64
  %327 = mul i32 %277, %273
  %328 = mul i32 %327, %267
  %329 = mul i32 %328, %262
  %330 = zext i32 %329 to i64
  %331 = mul i32 %267, %262
  %332 = mul i32 %331, %273
  %333 = zext i32 %332 to i64
  %334 = zext i32 %331 to i64
  %335 = getelementptr i8, i8* %4, i64 %317
  %336 = and i64 %317, 4294967264
  %337 = add nsw i64 %336, -32
  %338 = lshr exact i64 %337, 5
  %339 = add nuw nsw i64 %338, 1
  %340 = icmp ult i32 %262, 32
  %341 = icmp ne i64 %588, 1
  %342 = trunc i64 %318 to i32
  %343 = icmp ugt i64 %318, 4294967295
  %344 = and i64 %317, 4294967264
  %345 = and i64 %339, 1
  %346 = icmp eq i64 %337, 0
  %347 = sub nuw nsw i64 %339, %345
  %348 = icmp eq i64 %345, 0
  %349 = icmp eq i64 %344, %317
  %350 = and i64 %317, 1
  %351 = icmp eq i64 %350, 0
  %352 = sub nsw i64 0, %317
  br label %353

353:                                              ; preds = %532, %296
  %354 = phi i64 [ 0, %296 ], [ %533, %532 ]
  %355 = mul i64 %354, %312
  %356 = add i64 %355, %317
  %357 = mul i64 %354, %330
  %358 = mul i64 %354, %322
  br i1 %305, label %359, label %532

359:                                              ; preds = %353
  %360 = mul nsw i64 %354, %312
  %361 = trunc i64 %354 to i32
  %362 = mul i32 %277, %361
  br label %363

363:                                              ; preds = %529, %359
  %364 = phi i64 [ 0, %359 ], [ %530, %529 ]
  %365 = mul i64 %364, %311
  %366 = add i64 %355, %365
  %367 = add i64 %356, %365
  %368 = mul i64 %364, %333
  %369 = add i64 %357, %368
  %370 = mul i64 %364, %325
  %371 = add i64 %358, %370
  br i1 %306, label %372, label %529

372:                                              ; preds = %363
  %373 = mul nsw i64 %364, %311
  %374 = add nsw i64 %373, %360
  %375 = trunc i64 %364 to i32
  %376 = add i32 %362, %375
  %377 = mul i32 %376, %273
  br label %378

378:                                              ; preds = %526, %372
  %379 = phi i64 [ 0, %372 ], [ %527, %526 ]
  %380 = mul i64 %379, %310
  %381 = add i64 %366, %380
  %382 = add i64 %367, %380
  %383 = mul i64 %379, %334
  %384 = add i64 %369, %383
  %385 = mul i64 %379, %326
  %386 = add i64 %371, %385
  br i1 %307, label %387, label %526

387:                                              ; preds = %378
  %388 = mul nsw i64 %379, %310
  %389 = add nsw i64 %374, %388
  %390 = trunc i64 %379 to i32
  %391 = add i32 %377, %390
  %392 = mul i32 %268, %391
  br label %393

393:                                              ; preds = %523, %387
  %394 = phi i64 [ 0, %387 ], [ %524, %523 ]
  %395 = mul i64 %394, %309
  %396 = add i64 %381, %395
  %397 = getelementptr i8, i8* %2, i64 %396
  %398 = add i64 %382, %395
  %399 = getelementptr i8, i8* %2, i64 %398
  %400 = mul i64 %394, %317
  %401 = add i64 %384, %400
  %402 = shl i64 %401, 32
  %403 = ashr exact i64 %402, 32
  %404 = getelementptr i8, i8* %4, i64 %403
  %405 = getelementptr i8, i8* %335, i64 %403
  %406 = mul i64 %394, %317
  %407 = add i64 %386, %406
  %408 = trunc i64 %407 to i32
  br i1 %308, label %409, label %523

409:                                              ; preds = %393
  %410 = mul nsw i64 %394, %309
  %411 = add nsw i64 %389, %410
  %412 = trunc i64 %394 to i32
  %413 = mul i32 %262, %412
  br i1 %340, label %483, label %414

414:                                              ; preds = %409
  %415 = add i32 %408, %342
  %416 = icmp slt i32 %415, %408
  %417 = or i1 %416, %343
  %418 = or i1 %341, %417
  br i1 %418, label %483, label %419

419:                                              ; preds = %414
  %420 = icmp ult i8* %397, %405
  %421 = icmp ult i8* %404, %399
  %422 = and i1 %420, %421
  br i1 %422, label %483, label %423

423:                                              ; preds = %419
  br i1 %346, label %463, label %424

424:                                              ; preds = %423, %424
  %425 = phi i64 [ %460, %424 ], [ 0, %423 ]
  %426 = phi i64 [ %461, %424 ], [ %347, %423 ]
  %427 = mul nsw i64 %588, %425
  %428 = add nsw i64 %411, %427
  %429 = getelementptr inbounds i8, i8* %2, i64 %428
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !138, !noalias !141
  %432 = getelementptr inbounds i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !138, !noalias !141
  %435 = trunc i64 %425 to i32
  %436 = add i32 %413, %435
  %437 = add i32 %436, %392
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds i8, i8* %4, i64 %438
  %440 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %440, align 1, !alias.scope !141
  %441 = getelementptr inbounds i8, i8* %439, i64 16
  %442 = bitcast i8* %441 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %442, align 1, !alias.scope !141
  %443 = or i64 %425, 32
  %444 = mul nsw i64 %588, %443
  %445 = add nsw i64 %411, %444
  %446 = getelementptr inbounds i8, i8* %2, i64 %445
  %447 = bitcast i8* %446 to <16 x i8>*
  %448 = load <16 x i8>, <16 x i8>* %447, align 1, !alias.scope !138, !noalias !141
  %449 = getelementptr inbounds i8, i8* %446, i64 16
  %450 = bitcast i8* %449 to <16 x i8>*
  %451 = load <16 x i8>, <16 x i8>* %450, align 1, !alias.scope !138, !noalias !141
  %452 = trunc i64 %443 to i32
  %453 = add i32 %413, %452
  %454 = add i32 %453, %392
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i8, i8* %4, i64 %455
  %457 = bitcast i8* %456 to <16 x i8>*
  store <16 x i8> %448, <16 x i8>* %457, align 1, !alias.scope !141
  %458 = getelementptr inbounds i8, i8* %456, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %451, <16 x i8>* %459, align 1, !alias.scope !141
  %460 = add i64 %425, 64
  %461 = add i64 %426, -2
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %424, !llvm.loop !143

463:                                              ; preds = %424, %423
  %464 = phi i64 [ 0, %423 ], [ %460, %424 ]
  br i1 %348, label %482, label %465

465:                                              ; preds = %463
  %466 = mul nsw i64 %588, %464
  %467 = add nsw i64 %411, %466
  %468 = getelementptr inbounds i8, i8* %2, i64 %467
  %469 = bitcast i8* %468 to <16 x i8>*
  %470 = load <16 x i8>, <16 x i8>* %469, align 1, !alias.scope !138, !noalias !141
  %471 = getelementptr inbounds i8, i8* %468, i64 16
  %472 = bitcast i8* %471 to <16 x i8>*
  %473 = load <16 x i8>, <16 x i8>* %472, align 1, !alias.scope !138, !noalias !141
  %474 = trunc i64 %464 to i32
  %475 = add i32 %413, %474
  %476 = add i32 %475, %392
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i8, i8* %4, i64 %477
  %479 = bitcast i8* %478 to <16 x i8>*
  store <16 x i8> %470, <16 x i8>* %479, align 1, !alias.scope !141
  %480 = getelementptr inbounds i8, i8* %478, i64 16
  %481 = bitcast i8* %480 to <16 x i8>*
  store <16 x i8> %473, <16 x i8>* %481, align 1, !alias.scope !141
  br label %482

482:                                              ; preds = %463, %465
  br i1 %349, label %523, label %483

483:                                              ; preds = %482, %419, %414, %409
  %484 = phi i64 [ 0, %419 ], [ 0, %414 ], [ 0, %409 ], [ %344, %482 ]
  %485 = xor i64 %484, -1
  br i1 %351, label %497, label %486

486:                                              ; preds = %483
  %487 = mul nsw i64 %588, %484
  %488 = add nsw i64 %411, %487
  %489 = getelementptr inbounds i8, i8* %2, i64 %488
  %490 = load i8, i8* %489, align 1
  %491 = trunc i64 %484 to i32
  %492 = add i32 %413, %491
  %493 = add i32 %492, %392
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i8, i8* %4, i64 %494
  store i8 %490, i8* %495, align 1
  %496 = or i64 %484, 1
  br label %497

497:                                              ; preds = %486, %483
  %498 = phi i64 [ %496, %486 ], [ %484, %483 ]
  %499 = icmp eq i64 %485, %352
  br i1 %499, label %523, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %521, %500 ], [ %498, %497 ]
  %502 = mul nsw i64 %588, %501
  %503 = add nsw i64 %411, %502
  %504 = getelementptr inbounds i8, i8* %2, i64 %503
  %505 = load i8, i8* %504, align 1
  %506 = trunc i64 %501 to i32
  %507 = add i32 %413, %506
  %508 = add i32 %507, %392
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds i8, i8* %4, i64 %509
  store i8 %505, i8* %510, align 1
  %511 = add nuw nsw i64 %501, 1
  %512 = mul nsw i64 %588, %511
  %513 = add nsw i64 %411, %512
  %514 = getelementptr inbounds i8, i8* %2, i64 %513
  %515 = load i8, i8* %514, align 1
  %516 = trunc i64 %511 to i32
  %517 = add i32 %413, %516
  %518 = add i32 %517, %392
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i8, i8* %4, i64 %519
  store i8 %515, i8* %520, align 1
  %521 = add nuw nsw i64 %501, 2
  %522 = icmp eq i64 %521, %317
  br i1 %522, label %523, label %500, !llvm.loop !144

523:                                              ; preds = %497, %500, %482, %393
  %524 = add nuw nsw i64 %394, 1
  %525 = icmp eq i64 %524, %316
  br i1 %525, label %526, label %393

526:                                              ; preds = %523, %378
  %527 = add nuw nsw i64 %379, 1
  %528 = icmp eq i64 %527, %315
  br i1 %528, label %529, label %378

529:                                              ; preds = %526, %363
  %530 = add nuw nsw i64 %364, 1
  %531 = icmp eq i64 %530, %314
  br i1 %531, label %532, label %363

532:                                              ; preds = %529, %353
  %533 = add nuw nsw i64 %354, 1
  %534 = icmp eq i64 %533, %313
  br i1 %534, label %535, label %353

535:                                              ; preds = %532, %583
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  ret void

536:                                              ; preds = %294, %287
  %537 = phi i64 [ %293, %287 ], [ 0, %294 ]
  %538 = add nsw i32 %12, -4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = add nsw i32 %541, %13
  %543 = sext i32 %542 to i64
  br label %546

544:                                              ; preds = %294
  %545 = icmp slt i32 %12, 3
  br i1 %545, label %555, label %546

546:                                              ; preds = %544, %536
  %547 = phi i64 [ %543, %536 ], [ 1, %544 ]
  %548 = phi i64 [ %537, %536 ], [ 0, %544 ]
  %549 = add nsw i32 %12, -3
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = add nsw i32 %552, %13
  %554 = sext i32 %553 to i64
  br label %557

555:                                              ; preds = %544
  %556 = icmp eq i32 %12, 2
  br i1 %556, label %557, label %567

557:                                              ; preds = %555, %546
  %558 = phi i64 [ %554, %546 ], [ 2, %555 ]
  %559 = phi i64 [ %548, %546 ], [ 0, %555 ]
  %560 = phi i64 [ %547, %546 ], [ 1, %555 ]
  %561 = add nsw i32 %12, -2
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = add nsw i32 %564, %13
  %566 = sext i32 %565 to i64
  br label %569

567:                                              ; preds = %555
  %568 = icmp slt i32 %12, 1
  br i1 %568, label %583, label %569

569:                                              ; preds = %557, %567
  %570 = phi i64 [ %566, %557 ], [ 3, %567 ]
  %571 = phi i64 [ %560, %557 ], [ 1, %567 ]
  %572 = phi i64 [ %559, %557 ], [ 0, %567 ]
  %573 = phi i64 [ %558, %557 ], [ 2, %567 ]
  %574 = add nsw i32 %12, -1
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %575
  %577 = load i32, i32* %576, align 4
  %578 = add nsw i32 %577, %13
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = sext i32 %581 to i64
  br label %583

583:                                              ; preds = %567, %569
  %584 = phi i64 [ %570, %569 ], [ 3, %567 ]
  %585 = phi i64 [ %571, %569 ], [ 1, %567 ]
  %586 = phi i64 [ %572, %569 ], [ 0, %567 ]
  %587 = phi i64 [ %573, %569 ], [ 2, %567 ]
  %588 = phi i64 [ %582, %569 ], [ 1, %567 ]
  %589 = icmp sgt i32 %279, 0
  br i1 %589, label %296, label %535
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops11BatchMatMulERKNS_12RuntimeShapeEPKfS3_S5_S3_Pf(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #8 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !145
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !145
  %13 = icmp sgt i32 %12, 5
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void @abort() #12, !noalias !145
  unreachable

15:                                               ; preds = %6
  store i32 5, i32* %10, align 8, !alias.scope !145
  %16 = sub i32 5, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !145
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !145
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !145
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !145
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !145
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !145
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !145
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !145
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !145
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !145
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !145
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !145
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !145
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !145
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !145
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !145
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !148

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !145
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !145
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !149

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !145
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !150

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %106 = bitcast %union.anon* %105 to i8*
  %107 = sext i32 %12 to i64
  %108 = shl nsw i64 %107, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %106, i64 %108, i1 false) #11
  %109 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 32, i1 false)
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %110, align 8, !alias.scope !151
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %112 = load i32, i32* %111, align 8, !noalias !151
  %113 = icmp sgt i32 %112, 5
  br i1 %113, label %114, label %115

114:                                              ; preds = %99
  tail call void @abort() #12, !noalias !151
  unreachable

115:                                              ; preds = %99
  store i32 5, i32* %110, align 8, !alias.scope !151
  %116 = sub i32 5, %112
  %117 = icmp sgt i32 %116, 0
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %119 = bitcast %union.anon* %118 to [5 x i32]*
  br i1 %117, label %120, label %199

120:                                              ; preds = %115
  %121 = zext i32 %116 to i64
  %122 = icmp ult i32 %116, 8
  br i1 %122, label %192, label %123

123:                                              ; preds = %120
  %124 = and i64 %121, 4294967288
  %125 = add nsw i64 %124, -8
  %126 = lshr exact i64 %125, 3
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 7
  %129 = icmp ult i64 %125, 56
  br i1 %129, label %177, label %130

130:                                              ; preds = %123
  %131 = sub nsw i64 %127, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %174, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %175, %132 ]
  %135 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %133
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %136, align 8, !alias.scope !151
  %137 = getelementptr inbounds i32, i32* %135, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %138, align 8, !alias.scope !151
  %139 = or i64 %133, 8
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %139
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !151
  %142 = getelementptr inbounds i32, i32* %140, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !151
  %144 = or i64 %133, 16
  %145 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %144
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !151
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !151
  %149 = or i64 %133, 24
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !151
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !151
  %154 = or i64 %133, 32
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !151
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !151
  %159 = or i64 %133, 40
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !151
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !151
  %164 = or i64 %133, 48
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !151
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !151
  %169 = or i64 %133, 56
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !151
  %172 = getelementptr inbounds i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !151
  %174 = add i64 %133, 64
  %175 = add i64 %134, -8
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %132, !llvm.loop !154

177:                                              ; preds = %132, %123
  %178 = phi i64 [ 0, %123 ], [ %174, %132 ]
  %179 = icmp eq i64 %128, 0
  br i1 %179, label %190, label %180

180:                                              ; preds = %177, %180
  %181 = phi i64 [ %187, %180 ], [ %178, %177 ]
  %182 = phi i64 [ %188, %180 ], [ %128, %177 ]
  %183 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %181
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !151
  %185 = getelementptr inbounds i32, i32* %183, i64 4
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %186, align 8, !alias.scope !151
  %187 = add i64 %181, 8
  %188 = add i64 %182, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %180, !llvm.loop !155

190:                                              ; preds = %180, %177
  %191 = icmp eq i64 %124, %121
  br i1 %191, label %199, label %192

192:                                              ; preds = %190, %120
  %193 = phi i64 [ 0, %120 ], [ %124, %190 ]
  br label %194

194:                                              ; preds = %192, %194
  %195 = phi i64 [ %197, %194 ], [ %193, %192 ]
  %196 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %195
  store i32 1, i32* %196, align 4, !alias.scope !151
  %197 = add nuw nsw i64 %195, 1
  %198 = icmp eq i64 %197, %121
  br i1 %198, label %199, label %194, !llvm.loop !156

199:                                              ; preds = %194, %190, %115
  %200 = getelementptr inbounds %union.anon, %union.anon* %118, i64 0, i32 0
  %201 = bitcast %union.anon* %118 to i32*
  %202 = sext i32 %116 to i64
  %203 = getelementptr inbounds i32, i32* %201, i64 %202
  %204 = bitcast i32* %203 to i8*
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %206 = bitcast %union.anon* %205 to i8*
  %207 = sext i32 %112 to i64
  %208 = shl nsw i64 %207, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* align 4 %206, i64 %208, i1 false) #11
  %209 = load i32, i32* %10, align 8
  %210 = icmp sgt i32 %209, 5
  %211 = load i32*, i32** %100, align 8
  %212 = select i1 %210, i32* %211, i32* %101
  %213 = load i32, i32* %212, align 4
  %214 = load i32, i32* %110, align 8
  %215 = icmp sgt i32 %214, 5
  %216 = load i32*, i32** %200, align 8
  %217 = select i1 %215, i32* %216, i32* %201
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %213, %218
  %220 = icmp eq i32 %213, 1
  %221 = select i1 %220, i32 %218, i32 %213
  %222 = select i1 %219, i32 %213, i32 %221
  %223 = getelementptr inbounds i32, i32* %211, i64 1
  %224 = bitcast %union.anon* %18 to [5 x i32]*
  %225 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 1
  %226 = select i1 %210, i32* %223, i32* %225
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds i32, i32* %216, i64 1
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 1
  %230 = select i1 %215, i32* %228, i32* %229
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %227, %231
  %233 = icmp eq i32 %227, 1
  %234 = select i1 %233, i32 %231, i32 %227
  %235 = select i1 %232, i32 %227, i32 %234
  %236 = getelementptr inbounds i32, i32* %211, i64 2
  %237 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %238 = bitcast [16 x i8]* %237 to i32*
  %239 = select i1 %210, i32* %236, i32* %238
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds i32, i32* %216, i64 2
  %242 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %243 = bitcast [16 x i8]* %242 to i32*
  %244 = select i1 %215, i32* %241, i32* %243
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %240, %245
  %247 = icmp eq i32 %240, 1
  %248 = select i1 %247, i32 %245, i32 %240
  %249 = select i1 %246, i32 %240, i32 %248
  br i1 %220, label %309, label %250

250:                                              ; preds = %199
  %251 = icmp sgt i32 %209, 1
  br i1 %251, label %252, label %309

252:                                              ; preds = %250
  %253 = add i32 %209, -1
  %254 = add i32 %209, -2
  %255 = and i32 %253, 3
  %256 = icmp ult i32 %254, 3
  br i1 %256, label %289, label %257

257:                                              ; preds = %252
  %258 = sub i32 %253, %255
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi i64 [ 1, %257 ], [ %286, %259 ]
  %261 = phi i32 [ 1, %257 ], [ %285, %259 ]
  %262 = phi i32 [ %258, %257 ], [ %287, %259 ]
  %263 = getelementptr inbounds i32, i32* %211, i64 %260
  %264 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %260
  %265 = select i1 %210, i32* %263, i32* %264
  %266 = load i32, i32* %265, align 4
  %267 = mul nsw i32 %266, %261
  %268 = add nuw nsw i64 %260, 1
  %269 = getelementptr inbounds i32, i32* %211, i64 %268
  %270 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %268
  %271 = select i1 %210, i32* %269, i32* %270
  %272 = load i32, i32* %271, align 4
  %273 = mul nsw i32 %272, %267
  %274 = add nuw nsw i64 %260, 2
  %275 = getelementptr inbounds i32, i32* %211, i64 %274
  %276 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %274
  %277 = select i1 %210, i32* %275, i32* %276
  %278 = load i32, i32* %277, align 4
  %279 = mul nsw i32 %278, %273
  %280 = add nuw nsw i64 %260, 3
  %281 = getelementptr inbounds i32, i32* %211, i64 %280
  %282 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %280
  %283 = select i1 %210, i32* %281, i32* %282
  %284 = load i32, i32* %283, align 4
  %285 = mul nsw i32 %284, %279
  %286 = add nuw nsw i64 %260, 4
  %287 = add i32 %262, -4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %259

289:                                              ; preds = %259, %252
  %290 = phi i32 [ undef, %252 ], [ %285, %259 ]
  %291 = phi i64 [ 1, %252 ], [ %286, %259 ]
  %292 = phi i32 [ 1, %252 ], [ %285, %259 ]
  %293 = icmp eq i32 %255, 0
  br i1 %293, label %306, label %294

294:                                              ; preds = %289, %294
  %295 = phi i64 [ %303, %294 ], [ %291, %289 ]
  %296 = phi i32 [ %302, %294 ], [ %292, %289 ]
  %297 = phi i32 [ %304, %294 ], [ %255, %289 ]
  %298 = getelementptr inbounds i32, i32* %211, i64 %295
  %299 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %295
  %300 = select i1 %210, i32* %298, i32* %299
  %301 = load i32, i32* %300, align 4
  %302 = mul nsw i32 %301, %296
  %303 = add nuw nsw i64 %295, 1
  %304 = add i32 %297, -1
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %294, !llvm.loop !157

306:                                              ; preds = %294, %289
  %307 = phi i32 [ %290, %289 ], [ %302, %294 ]
  %308 = sext i32 %307 to i64
  br label %309

309:                                              ; preds = %306, %199, %250
  %310 = phi i64 [ 0, %199 ], [ 1, %250 ], [ %308, %306 ]
  br i1 %233, label %370, label %311

311:                                              ; preds = %309
  %312 = icmp sgt i32 %209, 2
  br i1 %312, label %313, label %370

313:                                              ; preds = %311
  %314 = add i32 %209, -2
  %315 = add i32 %209, -3
  %316 = and i32 %314, 3
  %317 = icmp ult i32 %315, 3
  br i1 %317, label %350, label %318

318:                                              ; preds = %313
  %319 = sub i32 %314, %316
  br label %320

320:                                              ; preds = %320, %318
  %321 = phi i64 [ 2, %318 ], [ %347, %320 ]
  %322 = phi i32 [ 1, %318 ], [ %346, %320 ]
  %323 = phi i32 [ %319, %318 ], [ %348, %320 ]
  %324 = getelementptr inbounds i32, i32* %211, i64 %321
  %325 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %321
  %326 = select i1 %210, i32* %324, i32* %325
  %327 = load i32, i32* %326, align 4
  %328 = mul nsw i32 %327, %322
  %329 = or i64 %321, 1
  %330 = getelementptr inbounds i32, i32* %211, i64 %329
  %331 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %329
  %332 = select i1 %210, i32* %330, i32* %331
  %333 = load i32, i32* %332, align 4
  %334 = mul nsw i32 %333, %328
  %335 = add nuw nsw i64 %321, 2
  %336 = getelementptr inbounds i32, i32* %211, i64 %335
  %337 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %335
  %338 = select i1 %210, i32* %336, i32* %337
  %339 = load i32, i32* %338, align 4
  %340 = mul nsw i32 %339, %334
  %341 = add nuw nsw i64 %321, 3
  %342 = getelementptr inbounds i32, i32* %211, i64 %341
  %343 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %341
  %344 = select i1 %210, i32* %342, i32* %343
  %345 = load i32, i32* %344, align 4
  %346 = mul nsw i32 %345, %340
  %347 = add nuw nsw i64 %321, 4
  %348 = add i32 %323, -4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %320

350:                                              ; preds = %320, %313
  %351 = phi i32 [ undef, %313 ], [ %346, %320 ]
  %352 = phi i64 [ 2, %313 ], [ %347, %320 ]
  %353 = phi i32 [ 1, %313 ], [ %346, %320 ]
  %354 = icmp eq i32 %316, 0
  br i1 %354, label %367, label %355

355:                                              ; preds = %350, %355
  %356 = phi i64 [ %364, %355 ], [ %352, %350 ]
  %357 = phi i32 [ %363, %355 ], [ %353, %350 ]
  %358 = phi i32 [ %365, %355 ], [ %316, %350 ]
  %359 = getelementptr inbounds i32, i32* %211, i64 %356
  %360 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %356
  %361 = select i1 %210, i32* %359, i32* %360
  %362 = load i32, i32* %361, align 4
  %363 = mul nsw i32 %362, %357
  %364 = add nuw nsw i64 %356, 1
  %365 = add i32 %358, -1
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %355, !llvm.loop !158

367:                                              ; preds = %355, %350
  %368 = phi i32 [ %351, %350 ], [ %363, %355 ]
  %369 = sext i32 %368 to i64
  br label %370

370:                                              ; preds = %367, %309, %311
  %371 = phi i64 [ 0, %309 ], [ 1, %311 ], [ %369, %367 ]
  br i1 %247, label %431, label %372

372:                                              ; preds = %370
  %373 = icmp sgt i32 %209, 3
  br i1 %373, label %374, label %431

374:                                              ; preds = %372
  %375 = add i32 %209, -3
  %376 = add i32 %209, -4
  %377 = and i32 %375, 3
  %378 = icmp ult i32 %376, 3
  br i1 %378, label %411, label %379

379:                                              ; preds = %374
  %380 = sub i32 %375, %377
  br label %381

381:                                              ; preds = %381, %379
  %382 = phi i64 [ 3, %379 ], [ %408, %381 ]
  %383 = phi i32 [ 1, %379 ], [ %407, %381 ]
  %384 = phi i32 [ %380, %379 ], [ %409, %381 ]
  %385 = getelementptr inbounds i32, i32* %211, i64 %382
  %386 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %382
  %387 = select i1 %210, i32* %385, i32* %386
  %388 = load i32, i32* %387, align 4
  %389 = mul nsw i32 %388, %383
  %390 = add nuw nsw i64 %382, 1
  %391 = getelementptr inbounds i32, i32* %211, i64 %390
  %392 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %390
  %393 = select i1 %210, i32* %391, i32* %392
  %394 = load i32, i32* %393, align 4
  %395 = mul nsw i32 %394, %389
  %396 = add nuw nsw i64 %382, 2
  %397 = getelementptr inbounds i32, i32* %211, i64 %396
  %398 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %396
  %399 = select i1 %210, i32* %397, i32* %398
  %400 = load i32, i32* %399, align 4
  %401 = mul nsw i32 %400, %395
  %402 = add nuw nsw i64 %382, 3
  %403 = getelementptr inbounds i32, i32* %211, i64 %402
  %404 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %402
  %405 = select i1 %210, i32* %403, i32* %404
  %406 = load i32, i32* %405, align 4
  %407 = mul nsw i32 %406, %401
  %408 = add nuw nsw i64 %382, 4
  %409 = add i32 %384, -4
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %381

411:                                              ; preds = %381, %374
  %412 = phi i32 [ undef, %374 ], [ %407, %381 ]
  %413 = phi i64 [ 3, %374 ], [ %408, %381 ]
  %414 = phi i32 [ 1, %374 ], [ %407, %381 ]
  %415 = icmp eq i32 %377, 0
  br i1 %415, label %428, label %416

416:                                              ; preds = %411, %416
  %417 = phi i64 [ %425, %416 ], [ %413, %411 ]
  %418 = phi i32 [ %424, %416 ], [ %414, %411 ]
  %419 = phi i32 [ %426, %416 ], [ %377, %411 ]
  %420 = getelementptr inbounds i32, i32* %211, i64 %417
  %421 = getelementptr inbounds [5 x i32], [5 x i32]* %224, i64 0, i64 %417
  %422 = select i1 %210, i32* %420, i32* %421
  %423 = load i32, i32* %422, align 4
  %424 = mul nsw i32 %423, %418
  %425 = add nuw nsw i64 %417, 1
  %426 = add i32 %419, -1
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %416, !llvm.loop !159

428:                                              ; preds = %416, %411
  %429 = phi i32 [ %412, %411 ], [ %424, %416 ]
  %430 = sext i32 %429 to i64
  br label %431

431:                                              ; preds = %428, %370, %372
  %432 = phi i64 [ 0, %370 ], [ 1, %372 ], [ %430, %428 ]
  %433 = icmp eq i32 %218, 1
  br i1 %433, label %493, label %434

434:                                              ; preds = %431
  %435 = icmp sgt i32 %214, 1
  br i1 %435, label %436, label %493

436:                                              ; preds = %434
  %437 = add i32 %214, -1
  %438 = add i32 %214, -2
  %439 = and i32 %437, 3
  %440 = icmp ult i32 %438, 3
  br i1 %440, label %473, label %441

441:                                              ; preds = %436
  %442 = sub i32 %437, %439
  br label %443

443:                                              ; preds = %443, %441
  %444 = phi i64 [ 1, %441 ], [ %470, %443 ]
  %445 = phi i32 [ 1, %441 ], [ %469, %443 ]
  %446 = phi i32 [ %442, %441 ], [ %471, %443 ]
  %447 = getelementptr inbounds i32, i32* %216, i64 %444
  %448 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %444
  %449 = select i1 %215, i32* %447, i32* %448
  %450 = load i32, i32* %449, align 4
  %451 = mul nsw i32 %450, %445
  %452 = add nuw nsw i64 %444, 1
  %453 = getelementptr inbounds i32, i32* %216, i64 %452
  %454 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %452
  %455 = select i1 %215, i32* %453, i32* %454
  %456 = load i32, i32* %455, align 4
  %457 = mul nsw i32 %456, %451
  %458 = add nuw nsw i64 %444, 2
  %459 = getelementptr inbounds i32, i32* %216, i64 %458
  %460 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %458
  %461 = select i1 %215, i32* %459, i32* %460
  %462 = load i32, i32* %461, align 4
  %463 = mul nsw i32 %462, %457
  %464 = add nuw nsw i64 %444, 3
  %465 = getelementptr inbounds i32, i32* %216, i64 %464
  %466 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %464
  %467 = select i1 %215, i32* %465, i32* %466
  %468 = load i32, i32* %467, align 4
  %469 = mul nsw i32 %468, %463
  %470 = add nuw nsw i64 %444, 4
  %471 = add i32 %446, -4
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %443

473:                                              ; preds = %443, %436
  %474 = phi i32 [ undef, %436 ], [ %469, %443 ]
  %475 = phi i64 [ 1, %436 ], [ %470, %443 ]
  %476 = phi i32 [ 1, %436 ], [ %469, %443 ]
  %477 = icmp eq i32 %439, 0
  br i1 %477, label %490, label %478

478:                                              ; preds = %473, %478
  %479 = phi i64 [ %487, %478 ], [ %475, %473 ]
  %480 = phi i32 [ %486, %478 ], [ %476, %473 ]
  %481 = phi i32 [ %488, %478 ], [ %439, %473 ]
  %482 = getelementptr inbounds i32, i32* %216, i64 %479
  %483 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %479
  %484 = select i1 %215, i32* %482, i32* %483
  %485 = load i32, i32* %484, align 4
  %486 = mul nsw i32 %485, %480
  %487 = add nuw nsw i64 %479, 1
  %488 = add i32 %481, -1
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %478, !llvm.loop !160

490:                                              ; preds = %478, %473
  %491 = phi i32 [ %474, %473 ], [ %486, %478 ]
  %492 = sext i32 %491 to i64
  br label %493

493:                                              ; preds = %490, %431, %434
  %494 = phi i64 [ 0, %431 ], [ 1, %434 ], [ %492, %490 ]
  %495 = icmp eq i32 %231, 1
  br i1 %495, label %555, label %496

496:                                              ; preds = %493
  %497 = icmp sgt i32 %214, 2
  br i1 %497, label %498, label %555

498:                                              ; preds = %496
  %499 = add i32 %214, -2
  %500 = add i32 %214, -3
  %501 = and i32 %499, 3
  %502 = icmp ult i32 %500, 3
  br i1 %502, label %535, label %503

503:                                              ; preds = %498
  %504 = sub i32 %499, %501
  br label %505

505:                                              ; preds = %505, %503
  %506 = phi i64 [ 2, %503 ], [ %532, %505 ]
  %507 = phi i32 [ 1, %503 ], [ %531, %505 ]
  %508 = phi i32 [ %504, %503 ], [ %533, %505 ]
  %509 = getelementptr inbounds i32, i32* %216, i64 %506
  %510 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %506
  %511 = select i1 %215, i32* %509, i32* %510
  %512 = load i32, i32* %511, align 4
  %513 = mul nsw i32 %512, %507
  %514 = or i64 %506, 1
  %515 = getelementptr inbounds i32, i32* %216, i64 %514
  %516 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %514
  %517 = select i1 %215, i32* %515, i32* %516
  %518 = load i32, i32* %517, align 4
  %519 = mul nsw i32 %518, %513
  %520 = add nuw nsw i64 %506, 2
  %521 = getelementptr inbounds i32, i32* %216, i64 %520
  %522 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %520
  %523 = select i1 %215, i32* %521, i32* %522
  %524 = load i32, i32* %523, align 4
  %525 = mul nsw i32 %524, %519
  %526 = add nuw nsw i64 %506, 3
  %527 = getelementptr inbounds i32, i32* %216, i64 %526
  %528 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %526
  %529 = select i1 %215, i32* %527, i32* %528
  %530 = load i32, i32* %529, align 4
  %531 = mul nsw i32 %530, %525
  %532 = add nuw nsw i64 %506, 4
  %533 = add i32 %508, -4
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %505

535:                                              ; preds = %505, %498
  %536 = phi i32 [ undef, %498 ], [ %531, %505 ]
  %537 = phi i64 [ 2, %498 ], [ %532, %505 ]
  %538 = phi i32 [ 1, %498 ], [ %531, %505 ]
  %539 = icmp eq i32 %501, 0
  br i1 %539, label %552, label %540

540:                                              ; preds = %535, %540
  %541 = phi i64 [ %549, %540 ], [ %537, %535 ]
  %542 = phi i32 [ %548, %540 ], [ %538, %535 ]
  %543 = phi i32 [ %550, %540 ], [ %501, %535 ]
  %544 = getelementptr inbounds i32, i32* %216, i64 %541
  %545 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %541
  %546 = select i1 %215, i32* %544, i32* %545
  %547 = load i32, i32* %546, align 4
  %548 = mul nsw i32 %547, %542
  %549 = add nuw nsw i64 %541, 1
  %550 = add i32 %543, -1
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %540, !llvm.loop !161

552:                                              ; preds = %540, %535
  %553 = phi i32 [ %536, %535 ], [ %548, %540 ]
  %554 = sext i32 %553 to i64
  br label %555

555:                                              ; preds = %552, %493, %496
  %556 = phi i64 [ 0, %493 ], [ 1, %496 ], [ %554, %552 ]
  %557 = icmp eq i32 %245, 1
  br i1 %557, label %617, label %558

558:                                              ; preds = %555
  %559 = icmp sgt i32 %214, 3
  br i1 %559, label %560, label %617

560:                                              ; preds = %558
  %561 = add i32 %214, -3
  %562 = add i32 %214, -4
  %563 = and i32 %561, 3
  %564 = icmp ult i32 %562, 3
  br i1 %564, label %597, label %565

565:                                              ; preds = %560
  %566 = sub i32 %561, %563
  br label %567

567:                                              ; preds = %567, %565
  %568 = phi i64 [ 3, %565 ], [ %594, %567 ]
  %569 = phi i32 [ 1, %565 ], [ %593, %567 ]
  %570 = phi i32 [ %566, %565 ], [ %595, %567 ]
  %571 = getelementptr inbounds i32, i32* %216, i64 %568
  %572 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %568
  %573 = select i1 %215, i32* %571, i32* %572
  %574 = load i32, i32* %573, align 4
  %575 = mul nsw i32 %574, %569
  %576 = add nuw nsw i64 %568, 1
  %577 = getelementptr inbounds i32, i32* %216, i64 %576
  %578 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %576
  %579 = select i1 %215, i32* %577, i32* %578
  %580 = load i32, i32* %579, align 4
  %581 = mul nsw i32 %580, %575
  %582 = add nuw nsw i64 %568, 2
  %583 = getelementptr inbounds i32, i32* %216, i64 %582
  %584 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %582
  %585 = select i1 %215, i32* %583, i32* %584
  %586 = load i32, i32* %585, align 4
  %587 = mul nsw i32 %586, %581
  %588 = add nuw nsw i64 %568, 3
  %589 = getelementptr inbounds i32, i32* %216, i64 %588
  %590 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %588
  %591 = select i1 %215, i32* %589, i32* %590
  %592 = load i32, i32* %591, align 4
  %593 = mul nsw i32 %592, %587
  %594 = add nuw nsw i64 %568, 4
  %595 = add i32 %570, -4
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %567

597:                                              ; preds = %567, %560
  %598 = phi i32 [ undef, %560 ], [ %593, %567 ]
  %599 = phi i64 [ 3, %560 ], [ %594, %567 ]
  %600 = phi i32 [ 1, %560 ], [ %593, %567 ]
  %601 = icmp eq i32 %563, 0
  br i1 %601, label %614, label %602

602:                                              ; preds = %597, %602
  %603 = phi i64 [ %611, %602 ], [ %599, %597 ]
  %604 = phi i32 [ %610, %602 ], [ %600, %597 ]
  %605 = phi i32 [ %612, %602 ], [ %563, %597 ]
  %606 = getelementptr inbounds i32, i32* %216, i64 %603
  %607 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %603
  %608 = select i1 %215, i32* %606, i32* %607
  %609 = load i32, i32* %608, align 4
  %610 = mul nsw i32 %609, %604
  %611 = add nuw nsw i64 %603, 1
  %612 = add i32 %605, -1
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %602, !llvm.loop !162

614:                                              ; preds = %602, %597
  %615 = phi i32 [ %598, %597 ], [ %610, %602 ]
  %616 = sext i32 %615 to i64
  br label %617

617:                                              ; preds = %614, %555, %558
  %618 = phi i64 [ 0, %555 ], [ 1, %558 ], [ %616, %614 ]
  %619 = getelementptr inbounds i32, i32* %211, i64 3
  %620 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %621 = bitcast i8* %620 to i32*
  %622 = select i1 %210, i32* %619, i32* %621
  %623 = load i32, i32* %622, align 4
  %624 = getelementptr inbounds i32, i32* %216, i64 4
  %625 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %626 = bitcast i8* %625 to i32*
  %627 = select i1 %215, i32* %624, i32* %626
  %628 = load i32, i32* %627, align 4
  %629 = getelementptr inbounds i32, i32* %211, i64 4
  %630 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 8
  %631 = bitcast i8* %630 to i32*
  %632 = select i1 %210, i32* %629, i32* %631
  %633 = load i32, i32* %632, align 4
  %634 = icmp sgt i32 %222, 0
  br i1 %634, label %635, label %654

635:                                              ; preds = %617
  %636 = icmp sgt i32 %235, 0
  %637 = icmp sgt i32 %249, 0
  %638 = mul i32 %628, %623
  %639 = icmp sgt i32 %628, 0
  %640 = icmp sgt i32 %623, 0
  %641 = icmp sgt i32 %633, 0
  %642 = sext i32 %633 to i64
  %643 = sext i32 %623 to i64
  %644 = zext i32 %222 to i64
  %645 = zext i32 %235 to i64
  %646 = zext i32 %249 to i64
  %647 = zext i32 %628 to i64
  %648 = zext i32 %623 to i64
  %649 = zext i32 %633 to i64
  %650 = and i64 %649, 1
  %651 = icmp eq i32 %633, 1
  %652 = sub nsw i64 %649, %650
  %653 = icmp eq i64 %650, 0
  br label %667

654:                                              ; preds = %676, %617
  %655 = xor i1 %215, true
  %656 = icmp eq i32* %216, null
  %657 = or i1 %656, %655
  br i1 %657, label %660, label %658

658:                                              ; preds = %654
  %659 = bitcast i32* %216 to i8*
  tail call void @_ZdaPv(i8* %659) #10
  br label %660

660:                                              ; preds = %654, %658
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #11
  %661 = xor i1 %210, true
  %662 = icmp eq i32* %211, null
  %663 = or i1 %662, %661
  br i1 %663, label %666, label %664

664:                                              ; preds = %660
  %665 = bitcast i32* %211 to i8*
  tail call void @_ZdaPv(i8* %665) #10
  br label %666

666:                                              ; preds = %660, %664
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  ret void

667:                                              ; preds = %676, %635
  %668 = phi i64 [ 0, %635 ], [ %677, %676 ]
  %669 = mul nsw i64 %668, %310
  %670 = getelementptr inbounds float, float* %1, i64 %669
  %671 = mul nsw i64 %668, %494
  %672 = getelementptr inbounds float, float* %3, i64 %671
  br i1 %636, label %673, label %676

673:                                              ; preds = %667
  %674 = trunc i64 %668 to i32
  %675 = mul i32 %235, %674
  br label %679

676:                                              ; preds = %689, %667
  %677 = add nuw nsw i64 %668, 1
  %678 = icmp eq i64 %677, %644
  br i1 %678, label %654, label %667

679:                                              ; preds = %689, %673
  %680 = phi i64 [ 0, %673 ], [ %690, %689 ]
  %681 = mul nsw i64 %680, %371
  %682 = getelementptr inbounds float, float* %670, i64 %681
  %683 = mul nsw i64 %680, %556
  %684 = getelementptr inbounds float, float* %672, i64 %683
  br i1 %637, label %685, label %689

685:                                              ; preds = %679
  %686 = trunc i64 %680 to i32
  %687 = add i32 %675, %686
  %688 = mul i32 %687, %249
  br label %692

689:                                              ; preds = %708, %679
  %690 = add nuw nsw i64 %680, 1
  %691 = icmp eq i64 %690, %645
  br i1 %691, label %676, label %679

692:                                              ; preds = %708, %685
  %693 = phi i64 [ 0, %685 ], [ %709, %708 ]
  %694 = mul nsw i64 %693, %432
  %695 = getelementptr inbounds float, float* %682, i64 %694
  %696 = mul nsw i64 %693, %618
  %697 = getelementptr inbounds float, float* %684, i64 %696
  %698 = trunc i64 %693 to i32
  %699 = add i32 %688, %698
  %700 = mul i32 %638, %699
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds float, float* %5, i64 %701
  br i1 %639, label %703, label %708

703:                                              ; preds = %692, %715
  %704 = phi i64 [ %716, %715 ], [ 0, %692 ]
  br i1 %640, label %705, label %715

705:                                              ; preds = %703
  %706 = mul nsw i64 %704, %642
  %707 = mul nsw i64 %704, %643
  br label %711

708:                                              ; preds = %715, %692
  %709 = add nuw nsw i64 %693, 1
  %710 = icmp eq i64 %709, %646
  br i1 %710, label %689, label %692

711:                                              ; preds = %731, %705
  %712 = phi i64 [ 0, %705 ], [ %735, %731 ]
  br i1 %641, label %713, label %731

713:                                              ; preds = %711
  %714 = mul nsw i64 %712, %642
  br i1 %651, label %718, label %737

715:                                              ; preds = %731, %703
  %716 = add nuw nsw i64 %704, 1
  %717 = icmp eq i64 %716, %647
  br i1 %717, label %708, label %703

718:                                              ; preds = %737, %713
  %719 = phi float [ undef, %713 ], [ %757, %737 ]
  %720 = phi i64 [ 0, %713 ], [ %758, %737 ]
  %721 = phi float [ 0.000000e+00, %713 ], [ %757, %737 ]
  br i1 %653, label %731, label %722

722:                                              ; preds = %718
  %723 = add nsw i64 %720, %714
  %724 = getelementptr inbounds float, float* %695, i64 %723
  %725 = load float, float* %724, align 4
  %726 = add nsw i64 %720, %706
  %727 = getelementptr inbounds float, float* %697, i64 %726
  %728 = load float, float* %727, align 4
  %729 = fmul float %725, %728
  %730 = fadd float %721, %729
  br label %731

731:                                              ; preds = %722, %718, %711
  %732 = phi float [ 0.000000e+00, %711 ], [ %719, %718 ], [ %730, %722 ]
  %733 = add nsw i64 %712, %707
  %734 = getelementptr inbounds float, float* %702, i64 %733
  store float %732, float* %734, align 4
  %735 = add nuw nsw i64 %712, 1
  %736 = icmp eq i64 %735, %648
  br i1 %736, label %715, label %711

737:                                              ; preds = %713, %737
  %738 = phi i64 [ %758, %737 ], [ 0, %713 ]
  %739 = phi float [ %757, %737 ], [ 0.000000e+00, %713 ]
  %740 = phi i64 [ %759, %737 ], [ %652, %713 ]
  %741 = add nsw i64 %738, %714
  %742 = getelementptr inbounds float, float* %695, i64 %741
  %743 = load float, float* %742, align 4
  %744 = add nsw i64 %738, %706
  %745 = getelementptr inbounds float, float* %697, i64 %744
  %746 = load float, float* %745, align 4
  %747 = fmul float %743, %746
  %748 = fadd float %739, %747
  %749 = or i64 %738, 1
  %750 = add nsw i64 %749, %714
  %751 = getelementptr inbounds float, float* %695, i64 %750
  %752 = load float, float* %751, align 4
  %753 = add nsw i64 %749, %706
  %754 = getelementptr inbounds float, float* %697, i64 %753
  %755 = load float, float* %754, align 4
  %756 = fmul float %752, %755
  %757 = fadd float %748, %756
  %758 = add nuw nsw i64 %738, 2
  %759 = add i64 %740, -2
  %760 = icmp eq i64 %759, 0
  br i1 %760, label %718, label %737
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin12batch_matmul13EvalQuantizedILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %108 [
    i32 1, label %12
    i32 9, label %66
  ]

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %20 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %19, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 %21
  br label %23

23:                                               ; preds = %12, %18
  %24 = phi %struct.TfLiteTensor* [ %22, %18 ], [ null, %12 ]
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %23 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 4
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %33 ]
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 5
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %50 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %49, align 8
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 %51
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi %struct.TfLiteTensor* [ %52, %48 ], [ null, %43 ]
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 6
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %60 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %59, align 8
  %61 = sext i32 %56 to i64
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 %61
  br label %63

63:                                               ; preds = %53, %58
  %64 = phi %struct.TfLiteTensor* [ %62, %58 ], [ null, %53 ]
  %65 = tail call i32 @_ZN6tflite3ops7builtin12batch_matmul10EvalHybridILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_SI_SI_SI_SI_SI_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::batch_matmul::OpData"* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %struct.TfLiteTensor* %4, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, %struct.TfLiteTensor* %6, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44, %struct.TfLiteTensor* %64, %struct.TfLiteTensor* %54, %struct.TfLiteTensor* %7)
  br label %111

66:                                               ; preds = %8
  %67 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #11
  %68 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %70, align 8, !alias.scope !163
  br label %96

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %73 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %72, align 8, !noalias !163
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4, !noalias !163
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 0
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %75, i32* %77, align 8, !alias.scope !163
  %78 = icmp sgt i32 %75, 5
  br i1 %78, label %79, label %86

79:                                               ; preds = %71
  %80 = sext i32 %75 to i64
  %81 = shl nsw i64 %80, 2
  %82 = tail call i8* @_Znam(i64 %81) #10, !noalias !163
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %84 = bitcast i32** %83 to i8**
  store i8* %82, i8** %84, align 8, !alias.scope !163
  %85 = bitcast i8* %82 to i32*
  br label %91

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %88 = bitcast %union.anon* %87 to i32*
  %89 = sext i32 %75 to i64
  %90 = shl nsw i64 %89, 2
  br label %91

91:                                               ; preds = %86, %79
  %92 = phi i64 [ %81, %79 ], [ %90, %86 ]
  %93 = phi i32* [ %85, %79 ], [ %88, %86 ]
  %94 = bitcast i32* %93 to i8*
  %95 = bitcast i32* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 %92, i1 false) #11
  br label %96

96:                                               ; preds = %69, %91
  %97 = call i32 @_ZN6tflite3ops7builtin12batch_matmul8EvalInt8ILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextPKNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSD_SG_SD_PSE_(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::batch_matmul::OpData"* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %struct.TfLiteTensor* %4, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, %struct.TfLiteTensor* %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %struct.TfLiteTensor* %7)
  %98 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp sgt i32 %99, 5
  br i1 %100, label %101, label %107

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = icmp eq i32* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = bitcast i32* %103 to i8*
  call void @_ZdaPv(i8* %106) #10
  br label %107

107:                                              ; preds = %96, %101, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #11
  br label %111

108:                                              ; preds = %8
  %109 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %110 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %109, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %110(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0)) #11
  br label %111

111:                                              ; preds = %108, %107, %63
  %112 = phi i32 [ %65, %63 ], [ %97, %107 ], [ 1, %108 ]
  ret i32 %112
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin12batch_matmul10EvalHybridILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_SI_SI_SI_SI_SI_(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, -2
  %19 = icmp sgt i32 %17, 5
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %19, label %21, label %29

21:                                               ; preds = %13
  %22 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = sext i32 %18 to i64
  %25 = getelementptr inbounds i32, i32* %23, i64 %24
  %26 = add nsw i32 %17, -1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %23, i64 %27
  br label %36

29:                                               ; preds = %13
  %30 = bitcast %union.anon* %20 to [5 x i32]*
  %31 = sext i32 %18 to i64
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %31
  %33 = add nsw i32 %17, -1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %34
  br label %36

36:                                               ; preds = %21, %29
  %37 = phi i32* [ %25, %21 ], [ %32, %29 ]
  %38 = phi i32* [ %28, %21 ], [ %35, %29 ]
  %39 = load i32, i32* %37, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp sgt i32 %18, 0
  br i1 %41, label %42, label %69

42:                                               ; preds = %36
  %43 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = bitcast %union.anon* %20 to [5 x i32]*
  %46 = zext i32 %18 to i64
  %47 = add nsw i64 %46, -1
  %48 = and i64 %46, 3
  %49 = icmp ult i64 %47, 3
  br i1 %49, label %52, label %50

50:                                               ; preds = %42
  %51 = sub nsw i64 %46, %48
  br label %116

52:                                               ; preds = %116, %42
  %53 = phi i32 [ undef, %42 ], [ %142, %116 ]
  %54 = phi i64 [ 0, %42 ], [ %143, %116 ]
  %55 = phi i32 [ %40, %42 ], [ %142, %116 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52, %57
  %58 = phi i64 [ %66, %57 ], [ %54, %52 ]
  %59 = phi i32 [ %65, %57 ], [ %55, %52 ]
  %60 = phi i64 [ %67, %57 ], [ %48, %52 ]
  %61 = getelementptr inbounds i32, i32* %44, i64 %58
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %58
  %63 = select i1 %19, i32* %61, i32* %62
  %64 = load i32, i32* %63, align 4
  %65 = mul nsw i32 %64, %59
  %66 = add nuw nsw i64 %58, 1
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %57, !llvm.loop !166

69:                                               ; preds = %52, %57, %36
  %70 = phi i32 [ %40, %36 ], [ %53, %52 ], [ %65, %57 ]
  %71 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %74 = bitcast %union.TfLitePtrUnion* %73 to float**
  %75 = load float*, float** %74, align 8
  br label %76

76:                                               ; preds = %69, %72
  %77 = phi float* [ %75, %72 ], [ null, %69 ]
  %78 = icmp eq %struct.TfLiteTensor* %11, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %11, i64 0, i32 1, i32 0
  %81 = load i32*, i32** %80, align 8
  br label %82

82:                                               ; preds = %76, %79
  %83 = phi i32* [ %81, %79 ], [ null, %76 ]
  %84 = icmp eq %struct.TfLiteTensor* %10, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 0, i32 1, i32 0
  %87 = load i32*, i32** %86, align 8
  br label %88

88:                                               ; preds = %82, %85
  %89 = phi i32* [ %87, %85 ], [ null, %82 ]
  %90 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %88, %91
  %96 = phi i8* [ %94, %91 ], [ null, %88 ]
  %97 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %100 = bitcast %union.TfLitePtrUnion* %99 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %95, %98
  %103 = phi i8* [ %101, %98 ], [ null, %95 ]
  %104 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %107 = bitcast %union.TfLitePtrUnion* %106 to float**
  %108 = load float*, float** %107, align 8
  br label %109

109:                                              ; preds = %102, %105
  %110 = phi float* [ %108, %105 ], [ null, %102 ]
  %111 = icmp sgt i32 %70, 0
  br i1 %111, label %112, label %146

112:                                              ; preds = %109
  %113 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 0
  %114 = sext i32 %39 to i64
  %115 = zext i32 %70 to i64
  br label %180

116:                                              ; preds = %116, %50
  %117 = phi i64 [ 0, %50 ], [ %143, %116 ]
  %118 = phi i32 [ %40, %50 ], [ %142, %116 ]
  %119 = phi i64 [ %51, %50 ], [ %144, %116 ]
  %120 = getelementptr inbounds i32, i32* %44, i64 %117
  %121 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %117
  %122 = select i1 %19, i32* %120, i32* %121
  %123 = load i32, i32* %122, align 4
  %124 = mul nsw i32 %123, %118
  %125 = or i64 %117, 1
  %126 = getelementptr inbounds i32, i32* %44, i64 %125
  %127 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %125
  %128 = select i1 %19, i32* %126, i32* %127
  %129 = load i32, i32* %128, align 4
  %130 = mul nsw i32 %129, %124
  %131 = or i64 %117, 2
  %132 = getelementptr inbounds i32, i32* %44, i64 %131
  %133 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %131
  %134 = select i1 %19, i32* %132, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = mul nsw i32 %135, %130
  %137 = or i64 %117, 3
  %138 = getelementptr inbounds i32, i32* %44, i64 %137
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %137
  %140 = select i1 %19, i32* %138, i32* %139
  %141 = load i32, i32* %140, align 4
  %142 = mul nsw i32 %141, %136
  %143 = add nuw nsw i64 %117, 4
  %144 = add i64 %119, -4
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %52, label %116

146:                                              ; preds = %180, %109
  %147 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %147) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 32, i1 false)
  %148 = icmp eq %struct.TfLiteTensor* %12, null
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %150, align 8, !alias.scope !167
  br label %202

151:                                              ; preds = %146
  %152 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 0, i32 2
  %153 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %152, align 8, !noalias !167
  %154 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %153, i64 0, i32 0
  %155 = load i32, i32* %154, align 4, !noalias !167
  %156 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %153, i64 0, i32 1, i64 0
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %155, i32* %157, align 8, !alias.scope !167
  %158 = icmp sgt i32 %155, 5
  br i1 %158, label %159, label %166

159:                                              ; preds = %151
  %160 = sext i32 %155 to i64
  %161 = shl nsw i64 %160, 2
  %162 = tail call i8* @_Znam(i64 %161) #10, !noalias !167
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %164 = bitcast i32** %163 to i8**
  store i8* %162, i8** %164, align 8, !alias.scope !167
  %165 = bitcast i32* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %162, i8* align 4 %165, i64 %161, i1 false) #11
  br label %173

166:                                              ; preds = %151
  %167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %168 = sext i32 %155 to i64
  %169 = shl nsw i64 %168, 2
  %170 = bitcast %union.anon* %167 to i8*
  %171 = bitcast i32* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 4 %171, i64 %169, i1 false) #11
  %172 = icmp sgt i32 %155, 0
  br i1 %172, label %173, label %193

173:                                              ; preds = %159, %166
  %174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %175 = getelementptr inbounds %union.anon, %union.anon* %174, i64 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = bitcast %union.anon* %174 to [5 x i32]*
  %178 = sext i32 %155 to i64
  %179 = icmp sgt i32 %155, 5
  br label %262

180:                                              ; preds = %180, %112
  %181 = phi i64 [ 0, %112 ], [ %190, %180 ]
  %182 = mul nsw i64 %181, %114
  %183 = getelementptr inbounds float, float* %110, i64 %182
  %184 = getelementptr inbounds i8, i8* %96, i64 %182
  %185 = getelementptr inbounds float, float* %77, i64 %181
  %186 = getelementptr inbounds i32, i32* %83, i64 %181
  tail call void @_ZN6tflite12tensor_utils24AsymmetricQuantizeFloatsEPKfiPaPfPi(float* %183, i32 %39, i8* %184, float* %185, i32* %186) #11
  %187 = load float, float* %113, align 8
  %188 = load float, float* %185, align 4
  %189 = fmul float %187, %188
  store float %189, float* %185, align 4
  %190 = add nuw nsw i64 %181, 1
  %191 = icmp eq i64 %190, %115
  br i1 %191, label %146, label %180

192:                                              ; preds = %262
  br i1 %148, label %198, label %193

193:                                              ; preds = %166, %192
  %194 = phi i32 [ %269, %192 ], [ 1, %166 ]
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 0, i32 1
  %196 = bitcast %union.TfLitePtrUnion* %195 to i8**
  %197 = load i8*, i8** %196, align 8
  br label %198

198:                                              ; preds = %192, %193
  %199 = phi i32 [ %194, %193 ], [ %269, %192 ]
  %200 = phi i8* [ %197, %193 ], [ null, %192 ]
  %201 = icmp sgt i32 %199, 0
  br i1 %201, label %202, label %208

202:                                              ; preds = %149, %198
  %203 = phi i8* [ null, %149 ], [ %200, %198 ]
  %204 = phi i32 [ 0, %149 ], [ %155, %198 ]
  %205 = phi i32 [ 1, %149 ], [ %199, %198 ]
  %206 = zext i32 %205 to i64
  %207 = shl nuw nsw i64 %206, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %203, i8 0, i64 %207, i1 false)
  br label %208

208:                                              ; preds = %202, %198
  %209 = phi i32 [ %204, %202 ], [ %155, %198 ]
  %210 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %210) #11
  br i1 %148, label %211, label %213

211:                                              ; preds = %208
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %212, align 8, !alias.scope !170
  br label %241

213:                                              ; preds = %208
  %214 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 0, i32 2
  %215 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %214, align 8, !noalias !170
  %216 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %215, i64 0, i32 0
  %217 = load i32, i32* %216, align 4, !noalias !170
  %218 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %215, i64 0, i32 1, i64 0
  %219 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %217, i32* %219, align 8, !alias.scope !170
  %220 = icmp sgt i32 %217, 5
  br i1 %220, label %221, label %228

221:                                              ; preds = %213
  %222 = sext i32 %217 to i64
  %223 = shl nsw i64 %222, 2
  %224 = tail call i8* @_Znam(i64 %223) #10, !noalias !170
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %226 = bitcast i32** %225 to i8**
  store i8* %224, i8** %226, align 8, !alias.scope !170
  %227 = bitcast i8* %224 to i32*
  br label %233

228:                                              ; preds = %213
  %229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %230 = bitcast %union.anon* %229 to i32*
  %231 = sext i32 %217 to i64
  %232 = shl nsw i64 %231, 2
  br label %233

233:                                              ; preds = %228, %221
  %234 = phi i64 [ %223, %221 ], [ %232, %228 ]
  %235 = phi i32* [ %227, %221 ], [ %230, %228 ]
  %236 = bitcast i32* %235 to i8*
  %237 = bitcast i32* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %236, i8* align 4 %237, i64 %234, i1 false) #11
  %238 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 0, i32 1
  %239 = bitcast %union.TfLitePtrUnion* %238 to float**
  %240 = load float*, float** %239, align 8
  br label %241

241:                                              ; preds = %211, %233
  %242 = phi float* [ %240, %233 ], [ null, %211 ]
  %243 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %2, i64 0, i32 6
  call void @_ZN6tflite13reference_ops11BatchMatMulERKNS_12RuntimeShapeEPKaS3_S5_PKfPKiPiS3_PfPb(%"class.tflite::RuntimeShape"* dereferenceable(32) %5, i8* %103, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %96, float* %77, i32* %83, i32* %89, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, float* %242, i8* %243)
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = icmp sgt i32 %245, 5
  br i1 %246, label %247, label %253

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = bitcast i32* %249 to i8*
  call void @_ZdaPv(i8* %252) #10
  br label %253

253:                                              ; preds = %241, %247, %251
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %210) #11
  %254 = icmp sgt i32 %209, 5
  br i1 %254, label %255, label %261

255:                                              ; preds = %253
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = icmp eq i32* %257, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %255
  %260 = bitcast i32* %257 to i8*
  call void @_ZdaPv(i8* %260) #10
  br label %261

261:                                              ; preds = %253, %255, %259
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %147) #11
  ret i32 0

262:                                              ; preds = %173, %262
  %263 = phi i64 [ 0, %173 ], [ %270, %262 ]
  %264 = phi i32 [ 1, %173 ], [ %269, %262 ]
  %265 = getelementptr inbounds i32, i32* %176, i64 %263
  %266 = getelementptr inbounds [5 x i32], [5 x i32]* %177, i64 0, i64 %263
  %267 = select i1 %179, i32* %265, i32* %266
  %268 = load i32, i32* %267, align 4
  %269 = mul nsw i32 %268, %264
  %270 = add nuw nsw i64 %263, 1
  %271 = icmp slt i64 %270, %178
  br i1 %271, label %262, label %192
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin12batch_matmul8EvalInt8ILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextPKNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSD_SG_SD_PSE_(%struct.TfLiteContext*, %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %9 = alloca %"struct.tflite::FullyConnectedParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = bitcast %"struct.tflite::FullyConnectedParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 bitcast ({ i32, i32, i32, i32, i32, i32, i32, float, float, i8, i8, i8, [1 x i8] }* @__const._ZN6tflite3ops7builtin12batch_matmul8EvalInt8ILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextPKNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSD_SG_SD_PSE_.op_params to i8*), i64 40, i1 false)
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub nsw i32 0, %13
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 3, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 0, %16
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 3, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 0
  store i32 %14, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 1
  store i32 %17, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 2
  store i32 %19, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 3
  %24 = bitcast %"struct.tflite::ops::builtin::batch_matmul::OpData"* %1 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 4
  %26 = bitcast i32* %23 to <4 x i32>*
  store <4 x i32> %25, <4 x i32>* %26, align 4
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  %30 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 9
  %31 = zext i1 %29 to i8
  store i8 %31, i8* %30, align 4
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 1
  %35 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 10
  %36 = zext i1 %34 to i8
  store i8 %36, i8* %35, align 1
  %37 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %8
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %40 = bitcast %union.TfLitePtrUnion* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %8, %38
  %43 = phi i8* [ %41, %38 ], [ null, %8 ]
  %44 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %47 = bitcast %union.TfLitePtrUnion* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %45
  %50 = phi i8* [ %48, %45 ], [ null, %42 ]
  %51 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #11
  %52 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %54, align 8, !alias.scope !173
  br label %83

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %57 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %56, align 8, !noalias !173
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !173
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %57, i64 0, i32 1, i64 0
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %59, i32* %61, align 8, !alias.scope !173
  %62 = icmp sgt i32 %59, 5
  br i1 %62, label %63, label %70

63:                                               ; preds = %55
  %64 = sext i32 %59 to i64
  %65 = shl nsw i64 %64, 2
  %66 = tail call i8* @_Znam(i64 %65) #10, !noalias !173
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %68 = bitcast i32** %67 to i8**
  store i8* %66, i8** %68, align 8, !alias.scope !173
  %69 = bitcast i8* %66 to i32*
  br label %75

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %72 = bitcast %union.anon* %71 to i32*
  %73 = sext i32 %59 to i64
  %74 = shl nsw i64 %73, 2
  br label %75

75:                                               ; preds = %70, %63
  %76 = phi i64 [ %65, %63 ], [ %74, %70 ]
  %77 = phi i32* [ %69, %63 ], [ %72, %70 ]
  %78 = bitcast i32* %77 to i8*
  %79 = bitcast i32* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 %76, i1 false) #11
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %81 = bitcast %union.TfLitePtrUnion* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %53, %75
  %84 = phi i8* [ %82, %75 ], [ null, %53 ]
  call void @_ZN6tflite13reference_ops11BatchMatMulERKNS_20FullyConnectedParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::FullyConnectedParams"* nonnull dereferenceable(40) %9, %"class.tflite::RuntimeShape"* dereferenceable(32) %4, i8* %43, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, i8* %50, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %84)
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = icmp sgt i32 %86, 5
  br i1 %87, label %88, label %94

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = icmp eq i32* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = bitcast i32* %90 to i8*
  call void @_ZdaPv(i8* %93) #10
  br label %94

94:                                               ; preds = %83, %88, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  ret i32 0
}

declare void @_ZN6tflite12tensor_utils24AsymmetricQuantizeFloatsEPKfiPaPfPi(float*, i32, i8*, float*, i32*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops11BatchMatMulERKNS_12RuntimeShapeEPKaS3_S5_PKfPKiPiS3_PfPb(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, float*, i32*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, i8*) local_unnamed_addr #8 comdat {
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %14, align 8, !alias.scope !176
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 8, !noalias !176
  %17 = icmp sgt i32 %16, 5
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #12, !noalias !176
  unreachable

19:                                               ; preds = %10
  store i32 5, i32* %14, align 8, !alias.scope !176
  %20 = sub i32 5, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !176
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !176
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !176
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !176
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !176
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !176
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !176
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !176
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !176
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !176
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !176
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !176
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !176
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !176
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !176
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !176
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !179

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !176
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !176
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !180

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !176
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !181

103:                                              ; preds = %98, %94, %19
  %104 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %105 = bitcast %union.anon* %22 to i32*
  %106 = sext i32 %20 to i64
  %107 = getelementptr inbounds i32, i32* %105, i64 %106
  %108 = bitcast i32* %107 to i8*
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %110 = bitcast %union.anon* %109 to i8*
  %111 = sext i32 %16 to i64
  %112 = shl nsw i64 %111, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %110, i64 %112, i1 false) #11
  %113 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %113) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 32, i1 false)
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %114, align 8, !alias.scope !182
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %116 = load i32, i32* %115, align 8, !noalias !182
  %117 = icmp sgt i32 %116, 5
  br i1 %117, label %118, label %119

118:                                              ; preds = %103
  tail call void @abort() #12, !noalias !182
  unreachable

119:                                              ; preds = %103
  store i32 5, i32* %114, align 8, !alias.scope !182
  %120 = sub i32 5, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %123 = bitcast %union.anon* %122 to [5 x i32]*
  br i1 %121, label %124, label %203

124:                                              ; preds = %119
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %124
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !182
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !182
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !182
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !182
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !182
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !182
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !182
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !182
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !182
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !182
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !182
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !182
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !182
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !182
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !182
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !182
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !185

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !182
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !182
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !186

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %124
  %197 = phi i64 [ 0, %124 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !182
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !187

203:                                              ; preds = %198, %194, %119
  %204 = getelementptr inbounds %union.anon, %union.anon* %122, i64 0, i32 0
  %205 = bitcast %union.anon* %122 to i32*
  %206 = sext i32 %120 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  %208 = bitcast i32* %207 to i8*
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %210 = bitcast %union.anon* %209 to i8*
  %211 = sext i32 %116 to i64
  %212 = shl nsw i64 %211, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %210, i64 %212, i1 false) #11
  %213 = load i32, i32* %14, align 8
  %214 = icmp sgt i32 %213, 5
  %215 = load i32*, i32** %104, align 8
  %216 = select i1 %214, i32* %215, i32* %105
  %217 = load i32, i32* %216, align 4
  %218 = load i32, i32* %114, align 8
  %219 = icmp sgt i32 %218, 5
  %220 = load i32*, i32** %204, align 8
  %221 = select i1 %219, i32* %220, i32* %205
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %217, %222
  %224 = icmp eq i32 %217, 1
  %225 = select i1 %224, i32 %222, i32 %217
  %226 = select i1 %223, i32 %217, i32 %225
  %227 = getelementptr inbounds i32, i32* %215, i64 1
  %228 = bitcast %union.anon* %22 to [5 x i32]*
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 1
  %230 = select i1 %214, i32* %227, i32* %229
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds i32, i32* %220, i64 1
  %233 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 1
  %234 = select i1 %219, i32* %232, i32* %233
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %231, %235
  %237 = icmp eq i32 %231, 1
  %238 = select i1 %237, i32 %235, i32 %231
  %239 = select i1 %236, i32 %231, i32 %238
  %240 = getelementptr inbounds i32, i32* %215, i64 2
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1
  %242 = bitcast [16 x i8]* %241 to i32*
  %243 = select i1 %214, i32* %240, i32* %242
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds i32, i32* %220, i64 2
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 1
  %247 = bitcast [16 x i8]* %246 to i32*
  %248 = select i1 %219, i32* %245, i32* %247
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %244, %249
  %251 = icmp eq i32 %244, 1
  %252 = select i1 %251, i32 %249, i32 %244
  %253 = select i1 %250, i32 %244, i32 %252
  br i1 %224, label %310, label %254

254:                                              ; preds = %203
  %255 = icmp sgt i32 %213, 1
  br i1 %255, label %256, label %310

256:                                              ; preds = %254
  %257 = add i32 %213, -1
  %258 = add i32 %213, -2
  %259 = and i32 %257, 3
  %260 = icmp ult i32 %258, 3
  br i1 %260, label %293, label %261

261:                                              ; preds = %256
  %262 = sub i32 %257, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 1, %261 ], [ %290, %263 ]
  %265 = phi i32 [ 1, %261 ], [ %289, %263 ]
  %266 = phi i32 [ %262, %261 ], [ %291, %263 ]
  %267 = getelementptr inbounds i32, i32* %215, i64 %264
  %268 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %264
  %269 = select i1 %214, i32* %267, i32* %268
  %270 = load i32, i32* %269, align 4
  %271 = mul nsw i32 %270, %265
  %272 = add nuw nsw i64 %264, 1
  %273 = getelementptr inbounds i32, i32* %215, i64 %272
  %274 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %272
  %275 = select i1 %214, i32* %273, i32* %274
  %276 = load i32, i32* %275, align 4
  %277 = mul nsw i32 %276, %271
  %278 = add nuw nsw i64 %264, 2
  %279 = getelementptr inbounds i32, i32* %215, i64 %278
  %280 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %278
  %281 = select i1 %214, i32* %279, i32* %280
  %282 = load i32, i32* %281, align 4
  %283 = mul nsw i32 %282, %277
  %284 = add nuw nsw i64 %264, 3
  %285 = getelementptr inbounds i32, i32* %215, i64 %284
  %286 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %284
  %287 = select i1 %214, i32* %285, i32* %286
  %288 = load i32, i32* %287, align 4
  %289 = mul nsw i32 %288, %283
  %290 = add nuw nsw i64 %264, 4
  %291 = add i32 %266, -4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %263

293:                                              ; preds = %263, %256
  %294 = phi i32 [ undef, %256 ], [ %289, %263 ]
  %295 = phi i64 [ 1, %256 ], [ %290, %263 ]
  %296 = phi i32 [ 1, %256 ], [ %289, %263 ]
  %297 = icmp eq i32 %259, 0
  br i1 %297, label %310, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %307, %298 ], [ %295, %293 ]
  %300 = phi i32 [ %306, %298 ], [ %296, %293 ]
  %301 = phi i32 [ %308, %298 ], [ %259, %293 ]
  %302 = getelementptr inbounds i32, i32* %215, i64 %299
  %303 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %299
  %304 = select i1 %214, i32* %302, i32* %303
  %305 = load i32, i32* %304, align 4
  %306 = mul nsw i32 %305, %300
  %307 = add nuw nsw i64 %299, 1
  %308 = add i32 %301, -1
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %298, !llvm.loop !188

310:                                              ; preds = %293, %298, %203, %254
  %311 = phi i32 [ 0, %203 ], [ 1, %254 ], [ %294, %293 ], [ %306, %298 ]
  br i1 %237, label %368, label %312

312:                                              ; preds = %310
  %313 = icmp sgt i32 %213, 2
  br i1 %313, label %314, label %368

314:                                              ; preds = %312
  %315 = add i32 %213, -2
  %316 = add i32 %213, -3
  %317 = and i32 %315, 3
  %318 = icmp ult i32 %316, 3
  br i1 %318, label %351, label %319

319:                                              ; preds = %314
  %320 = sub i32 %315, %317
  br label %321

321:                                              ; preds = %321, %319
  %322 = phi i64 [ 2, %319 ], [ %348, %321 ]
  %323 = phi i32 [ 1, %319 ], [ %347, %321 ]
  %324 = phi i32 [ %320, %319 ], [ %349, %321 ]
  %325 = getelementptr inbounds i32, i32* %215, i64 %322
  %326 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %322
  %327 = select i1 %214, i32* %325, i32* %326
  %328 = load i32, i32* %327, align 4
  %329 = mul nsw i32 %328, %323
  %330 = or i64 %322, 1
  %331 = getelementptr inbounds i32, i32* %215, i64 %330
  %332 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %330
  %333 = select i1 %214, i32* %331, i32* %332
  %334 = load i32, i32* %333, align 4
  %335 = mul nsw i32 %334, %329
  %336 = add nuw nsw i64 %322, 2
  %337 = getelementptr inbounds i32, i32* %215, i64 %336
  %338 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %336
  %339 = select i1 %214, i32* %337, i32* %338
  %340 = load i32, i32* %339, align 4
  %341 = mul nsw i32 %340, %335
  %342 = add nuw nsw i64 %322, 3
  %343 = getelementptr inbounds i32, i32* %215, i64 %342
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %342
  %345 = select i1 %214, i32* %343, i32* %344
  %346 = load i32, i32* %345, align 4
  %347 = mul nsw i32 %346, %341
  %348 = add nuw nsw i64 %322, 4
  %349 = add i32 %324, -4
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %321

351:                                              ; preds = %321, %314
  %352 = phi i32 [ undef, %314 ], [ %347, %321 ]
  %353 = phi i64 [ 2, %314 ], [ %348, %321 ]
  %354 = phi i32 [ 1, %314 ], [ %347, %321 ]
  %355 = icmp eq i32 %317, 0
  br i1 %355, label %368, label %356

356:                                              ; preds = %351, %356
  %357 = phi i64 [ %365, %356 ], [ %353, %351 ]
  %358 = phi i32 [ %364, %356 ], [ %354, %351 ]
  %359 = phi i32 [ %366, %356 ], [ %317, %351 ]
  %360 = getelementptr inbounds i32, i32* %215, i64 %357
  %361 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %357
  %362 = select i1 %214, i32* %360, i32* %361
  %363 = load i32, i32* %362, align 4
  %364 = mul nsw i32 %363, %358
  %365 = add nuw nsw i64 %357, 1
  %366 = add i32 %359, -1
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %356, !llvm.loop !189

368:                                              ; preds = %351, %356, %310, %312
  %369 = phi i32 [ 0, %310 ], [ 1, %312 ], [ %352, %351 ], [ %364, %356 ]
  br i1 %251, label %426, label %370

370:                                              ; preds = %368
  %371 = icmp sgt i32 %213, 3
  br i1 %371, label %372, label %426

372:                                              ; preds = %370
  %373 = add i32 %213, -3
  %374 = add i32 %213, -4
  %375 = and i32 %373, 3
  %376 = icmp ult i32 %374, 3
  br i1 %376, label %409, label %377

377:                                              ; preds = %372
  %378 = sub i32 %373, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 3, %377 ], [ %406, %379 ]
  %381 = phi i32 [ 1, %377 ], [ %405, %379 ]
  %382 = phi i32 [ %378, %377 ], [ %407, %379 ]
  %383 = getelementptr inbounds i32, i32* %215, i64 %380
  %384 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %380
  %385 = select i1 %214, i32* %383, i32* %384
  %386 = load i32, i32* %385, align 4
  %387 = mul nsw i32 %386, %381
  %388 = add nuw nsw i64 %380, 1
  %389 = getelementptr inbounds i32, i32* %215, i64 %388
  %390 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %388
  %391 = select i1 %214, i32* %389, i32* %390
  %392 = load i32, i32* %391, align 4
  %393 = mul nsw i32 %392, %387
  %394 = add nuw nsw i64 %380, 2
  %395 = getelementptr inbounds i32, i32* %215, i64 %394
  %396 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %394
  %397 = select i1 %214, i32* %395, i32* %396
  %398 = load i32, i32* %397, align 4
  %399 = mul nsw i32 %398, %393
  %400 = add nuw nsw i64 %380, 3
  %401 = getelementptr inbounds i32, i32* %215, i64 %400
  %402 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %400
  %403 = select i1 %214, i32* %401, i32* %402
  %404 = load i32, i32* %403, align 4
  %405 = mul nsw i32 %404, %399
  %406 = add nuw nsw i64 %380, 4
  %407 = add i32 %382, -4
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %379

409:                                              ; preds = %379, %372
  %410 = phi i32 [ undef, %372 ], [ %405, %379 ]
  %411 = phi i64 [ 3, %372 ], [ %406, %379 ]
  %412 = phi i32 [ 1, %372 ], [ %405, %379 ]
  %413 = icmp eq i32 %375, 0
  br i1 %413, label %426, label %414

414:                                              ; preds = %409, %414
  %415 = phi i64 [ %423, %414 ], [ %411, %409 ]
  %416 = phi i32 [ %422, %414 ], [ %412, %409 ]
  %417 = phi i32 [ %424, %414 ], [ %375, %409 ]
  %418 = getelementptr inbounds i32, i32* %215, i64 %415
  %419 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %415
  %420 = select i1 %214, i32* %418, i32* %419
  %421 = load i32, i32* %420, align 4
  %422 = mul nsw i32 %421, %416
  %423 = add nuw nsw i64 %415, 1
  %424 = add i32 %417, -1
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %414, !llvm.loop !190

426:                                              ; preds = %409, %414, %368, %370
  %427 = phi i32 [ 0, %368 ], [ 1, %370 ], [ %410, %409 ], [ %422, %414 ]
  %428 = icmp eq i32 %222, 1
  br i1 %428, label %485, label %429

429:                                              ; preds = %426
  %430 = icmp sgt i32 %218, 1
  br i1 %430, label %431, label %485

431:                                              ; preds = %429
  %432 = add i32 %218, -1
  %433 = add i32 %218, -2
  %434 = and i32 %432, 3
  %435 = icmp ult i32 %433, 3
  br i1 %435, label %468, label %436

436:                                              ; preds = %431
  %437 = sub i32 %432, %434
  br label %438

438:                                              ; preds = %438, %436
  %439 = phi i64 [ 1, %436 ], [ %465, %438 ]
  %440 = phi i32 [ 1, %436 ], [ %464, %438 ]
  %441 = phi i32 [ %437, %436 ], [ %466, %438 ]
  %442 = getelementptr inbounds i32, i32* %220, i64 %439
  %443 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %439
  %444 = select i1 %219, i32* %442, i32* %443
  %445 = load i32, i32* %444, align 4
  %446 = mul nsw i32 %445, %440
  %447 = add nuw nsw i64 %439, 1
  %448 = getelementptr inbounds i32, i32* %220, i64 %447
  %449 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %447
  %450 = select i1 %219, i32* %448, i32* %449
  %451 = load i32, i32* %450, align 4
  %452 = mul nsw i32 %451, %446
  %453 = add nuw nsw i64 %439, 2
  %454 = getelementptr inbounds i32, i32* %220, i64 %453
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %453
  %456 = select i1 %219, i32* %454, i32* %455
  %457 = load i32, i32* %456, align 4
  %458 = mul nsw i32 %457, %452
  %459 = add nuw nsw i64 %439, 3
  %460 = getelementptr inbounds i32, i32* %220, i64 %459
  %461 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %459
  %462 = select i1 %219, i32* %460, i32* %461
  %463 = load i32, i32* %462, align 4
  %464 = mul nsw i32 %463, %458
  %465 = add nuw nsw i64 %439, 4
  %466 = add i32 %441, -4
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %438

468:                                              ; preds = %438, %431
  %469 = phi i32 [ undef, %431 ], [ %464, %438 ]
  %470 = phi i64 [ 1, %431 ], [ %465, %438 ]
  %471 = phi i32 [ 1, %431 ], [ %464, %438 ]
  %472 = icmp eq i32 %434, 0
  br i1 %472, label %485, label %473

473:                                              ; preds = %468, %473
  %474 = phi i64 [ %482, %473 ], [ %470, %468 ]
  %475 = phi i32 [ %481, %473 ], [ %471, %468 ]
  %476 = phi i32 [ %483, %473 ], [ %434, %468 ]
  %477 = getelementptr inbounds i32, i32* %220, i64 %474
  %478 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %474
  %479 = select i1 %219, i32* %477, i32* %478
  %480 = load i32, i32* %479, align 4
  %481 = mul nsw i32 %480, %475
  %482 = add nuw nsw i64 %474, 1
  %483 = add i32 %476, -1
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %473, !llvm.loop !191

485:                                              ; preds = %468, %473, %426, %429
  %486 = phi i32 [ 0, %426 ], [ 1, %429 ], [ %469, %468 ], [ %481, %473 ]
  %487 = icmp eq i32 %235, 1
  br i1 %487, label %544, label %488

488:                                              ; preds = %485
  %489 = icmp sgt i32 %218, 2
  br i1 %489, label %490, label %544

490:                                              ; preds = %488
  %491 = add i32 %218, -2
  %492 = add i32 %218, -3
  %493 = and i32 %491, 3
  %494 = icmp ult i32 %492, 3
  br i1 %494, label %527, label %495

495:                                              ; preds = %490
  %496 = sub i32 %491, %493
  br label %497

497:                                              ; preds = %497, %495
  %498 = phi i64 [ 2, %495 ], [ %524, %497 ]
  %499 = phi i32 [ 1, %495 ], [ %523, %497 ]
  %500 = phi i32 [ %496, %495 ], [ %525, %497 ]
  %501 = getelementptr inbounds i32, i32* %220, i64 %498
  %502 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %498
  %503 = select i1 %219, i32* %501, i32* %502
  %504 = load i32, i32* %503, align 4
  %505 = mul nsw i32 %504, %499
  %506 = or i64 %498, 1
  %507 = getelementptr inbounds i32, i32* %220, i64 %506
  %508 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %506
  %509 = select i1 %219, i32* %507, i32* %508
  %510 = load i32, i32* %509, align 4
  %511 = mul nsw i32 %510, %505
  %512 = add nuw nsw i64 %498, 2
  %513 = getelementptr inbounds i32, i32* %220, i64 %512
  %514 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %512
  %515 = select i1 %219, i32* %513, i32* %514
  %516 = load i32, i32* %515, align 4
  %517 = mul nsw i32 %516, %511
  %518 = add nuw nsw i64 %498, 3
  %519 = getelementptr inbounds i32, i32* %220, i64 %518
  %520 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %518
  %521 = select i1 %219, i32* %519, i32* %520
  %522 = load i32, i32* %521, align 4
  %523 = mul nsw i32 %522, %517
  %524 = add nuw nsw i64 %498, 4
  %525 = add i32 %500, -4
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %497

527:                                              ; preds = %497, %490
  %528 = phi i32 [ undef, %490 ], [ %523, %497 ]
  %529 = phi i64 [ 2, %490 ], [ %524, %497 ]
  %530 = phi i32 [ 1, %490 ], [ %523, %497 ]
  %531 = icmp eq i32 %493, 0
  br i1 %531, label %544, label %532

532:                                              ; preds = %527, %532
  %533 = phi i64 [ %541, %532 ], [ %529, %527 ]
  %534 = phi i32 [ %540, %532 ], [ %530, %527 ]
  %535 = phi i32 [ %542, %532 ], [ %493, %527 ]
  %536 = getelementptr inbounds i32, i32* %220, i64 %533
  %537 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %533
  %538 = select i1 %219, i32* %536, i32* %537
  %539 = load i32, i32* %538, align 4
  %540 = mul nsw i32 %539, %534
  %541 = add nuw nsw i64 %533, 1
  %542 = add i32 %535, -1
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %544, label %532, !llvm.loop !192

544:                                              ; preds = %527, %532, %485, %488
  %545 = phi i32 [ 0, %485 ], [ 1, %488 ], [ %528, %527 ], [ %540, %532 ]
  %546 = icmp eq i32 %249, 1
  br i1 %546, label %603, label %547

547:                                              ; preds = %544
  %548 = icmp sgt i32 %218, 3
  br i1 %548, label %549, label %603

549:                                              ; preds = %547
  %550 = add i32 %218, -3
  %551 = add i32 %218, -4
  %552 = and i32 %550, 3
  %553 = icmp ult i32 %551, 3
  br i1 %553, label %586, label %554

554:                                              ; preds = %549
  %555 = sub i32 %550, %552
  br label %556

556:                                              ; preds = %556, %554
  %557 = phi i64 [ 3, %554 ], [ %583, %556 ]
  %558 = phi i32 [ 1, %554 ], [ %582, %556 ]
  %559 = phi i32 [ %555, %554 ], [ %584, %556 ]
  %560 = getelementptr inbounds i32, i32* %220, i64 %557
  %561 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %557
  %562 = select i1 %219, i32* %560, i32* %561
  %563 = load i32, i32* %562, align 4
  %564 = mul nsw i32 %563, %558
  %565 = add nuw nsw i64 %557, 1
  %566 = getelementptr inbounds i32, i32* %220, i64 %565
  %567 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %565
  %568 = select i1 %219, i32* %566, i32* %567
  %569 = load i32, i32* %568, align 4
  %570 = mul nsw i32 %569, %564
  %571 = add nuw nsw i64 %557, 2
  %572 = getelementptr inbounds i32, i32* %220, i64 %571
  %573 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %571
  %574 = select i1 %219, i32* %572, i32* %573
  %575 = load i32, i32* %574, align 4
  %576 = mul nsw i32 %575, %570
  %577 = add nuw nsw i64 %557, 3
  %578 = getelementptr inbounds i32, i32* %220, i64 %577
  %579 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %577
  %580 = select i1 %219, i32* %578, i32* %579
  %581 = load i32, i32* %580, align 4
  %582 = mul nsw i32 %581, %576
  %583 = add nuw nsw i64 %557, 4
  %584 = add i32 %559, -4
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %556

586:                                              ; preds = %556, %549
  %587 = phi i32 [ undef, %549 ], [ %582, %556 ]
  %588 = phi i64 [ 3, %549 ], [ %583, %556 ]
  %589 = phi i32 [ 1, %549 ], [ %582, %556 ]
  %590 = icmp eq i32 %552, 0
  br i1 %590, label %603, label %591

591:                                              ; preds = %586, %591
  %592 = phi i64 [ %600, %591 ], [ %588, %586 ]
  %593 = phi i32 [ %599, %591 ], [ %589, %586 ]
  %594 = phi i32 [ %601, %591 ], [ %552, %586 ]
  %595 = getelementptr inbounds i32, i32* %220, i64 %592
  %596 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %592
  %597 = select i1 %219, i32* %595, i32* %596
  %598 = load i32, i32* %597, align 4
  %599 = mul nsw i32 %598, %593
  %600 = add nuw nsw i64 %592, 1
  %601 = add i32 %594, -1
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %603, label %591, !llvm.loop !193

603:                                              ; preds = %586, %591, %544, %547
  %604 = phi i32 [ 0, %544 ], [ 1, %547 ], [ %587, %586 ], [ %599, %591 ]
  %605 = getelementptr inbounds i32, i32* %215, i64 3
  %606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1, i64 4
  %607 = bitcast i8* %606 to i32*
  %608 = select i1 %214, i32* %605, i32* %607
  %609 = load i32, i32* %608, align 4
  %610 = getelementptr inbounds i32, i32* %220, i64 4
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 1, i64 8
  %612 = bitcast i8* %611 to i32*
  %613 = select i1 %219, i32* %610, i32* %612
  %614 = load i32, i32* %613, align 4
  %615 = getelementptr inbounds i32, i32* %215, i64 4
  %616 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 1, i64 8
  %617 = bitcast i8* %616 to i32*
  %618 = select i1 %214, i32* %615, i32* %617
  %619 = load i32, i32* %618, align 4
  %620 = icmp eq i32 %486, 0
  %621 = select i1 %620, i32 0, i32 %614
  %622 = icmp eq i32 %545, 0
  %623 = select i1 %622, i32 0, i32 %614
  %624 = icmp eq i32 %604, 0
  %625 = select i1 %624, i32 0, i32 %614
  %626 = icmp eq i32 %311, 0
  %627 = select i1 %626, i32 0, i32 %609
  %628 = icmp eq i32 %369, 0
  %629 = select i1 %628, i32 0, i32 %609
  %630 = icmp eq i32 %427, 0
  %631 = select i1 %630, i32 0, i32 %609
  %632 = icmp ne i8* %9, null
  br i1 %632, label %633, label %636

633:                                              ; preds = %603
  %634 = load i8, i8* %9, align 1, !range !2
  %635 = icmp eq i8 %634, 0
  br i1 %635, label %715, label %636

636:                                              ; preds = %633, %603
  %637 = add i32 %213, -2
  %638 = icmp sgt i32 %637, 1
  br i1 %638, label %639, label %664

639:                                              ; preds = %636
  %640 = zext i32 %637 to i64
  %641 = add nsw i64 %640, -1
  %642 = add nsw i64 %640, -2
  %643 = and i64 %641, 3
  %644 = icmp ult i64 %642, 3
  br i1 %644, label %647, label %645

645:                                              ; preds = %639
  %646 = sub nsw i64 %641, %643
  br label %675

647:                                              ; preds = %675, %639
  %648 = phi i32 [ undef, %639 ], [ %701, %675 ]
  %649 = phi i64 [ 1, %639 ], [ %702, %675 ]
  %650 = phi i32 [ 1, %639 ], [ %701, %675 ]
  %651 = icmp eq i64 %643, 0
  br i1 %651, label %664, label %652

652:                                              ; preds = %647, %652
  %653 = phi i64 [ %661, %652 ], [ %649, %647 ]
  %654 = phi i32 [ %660, %652 ], [ %650, %647 ]
  %655 = phi i64 [ %662, %652 ], [ %643, %647 ]
  %656 = getelementptr inbounds i32, i32* %215, i64 %653
  %657 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %653
  %658 = select i1 %214, i32* %656, i32* %657
  %659 = load i32, i32* %658, align 4
  %660 = mul nsw i32 %659, %654
  %661 = add nuw nsw i64 %653, 1
  %662 = add i64 %655, -1
  %663 = icmp eq i64 %662, 0
  br i1 %663, label %664, label %652, !llvm.loop !194

664:                                              ; preds = %647, %652, %636
  %665 = phi i32 [ 1, %636 ], [ %648, %647 ], [ %660, %652 ]
  %666 = bitcast i32* %6 to i8*
  %667 = sext i32 %609 to i64
  %668 = shl nsw i64 %667, 2
  %669 = sext i32 %665 to i64
  %670 = mul i64 %668, %669
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %666, i8 0, i64 %670, i1 false)
  %671 = icmp sgt i32 %665, 0
  br i1 %671, label %672, label %705

672:                                              ; preds = %664
  %673 = sext i32 %619 to i64
  %674 = zext i32 %665 to i64
  br label %706

675:                                              ; preds = %675, %645
  %676 = phi i64 [ 1, %645 ], [ %702, %675 ]
  %677 = phi i32 [ 1, %645 ], [ %701, %675 ]
  %678 = phi i64 [ %646, %645 ], [ %703, %675 ]
  %679 = getelementptr inbounds i32, i32* %215, i64 %676
  %680 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %676
  %681 = select i1 %214, i32* %679, i32* %680
  %682 = load i32, i32* %681, align 4
  %683 = mul nsw i32 %682, %677
  %684 = add nuw nsw i64 %676, 1
  %685 = getelementptr inbounds i32, i32* %215, i64 %684
  %686 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %684
  %687 = select i1 %214, i32* %685, i32* %686
  %688 = load i32, i32* %687, align 4
  %689 = mul nsw i32 %688, %683
  %690 = add nuw nsw i64 %676, 2
  %691 = getelementptr inbounds i32, i32* %215, i64 %690
  %692 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %690
  %693 = select i1 %214, i32* %691, i32* %692
  %694 = load i32, i32* %693, align 4
  %695 = mul nsw i32 %694, %689
  %696 = add nuw nsw i64 %676, 3
  %697 = getelementptr inbounds i32, i32* %215, i64 %696
  %698 = getelementptr inbounds [5 x i32], [5 x i32]* %228, i64 0, i64 %696
  %699 = select i1 %214, i32* %697, i32* %698
  %700 = load i32, i32* %699, align 4
  %701 = mul nsw i32 %700, %695
  %702 = add nuw nsw i64 %676, 4
  %703 = add i64 %678, -4
  %704 = icmp eq i64 %703, 0
  br i1 %704, label %647, label %675

705:                                              ; preds = %706, %664
  br i1 %632, label %714, label %715

706:                                              ; preds = %706, %672
  %707 = phi i64 [ 0, %672 ], [ %712, %706 ]
  %708 = mul nsw i64 %707, %667
  %709 = mul nsw i64 %708, %673
  %710 = getelementptr inbounds i8, i8* %1, i64 %709
  %711 = getelementptr inbounds i32, i32* %6, i64 %708
  tail call void @_ZN6tflite12tensor_utils26PortableReductionSumVectorEPKaPiii(i8* %710, i32* %711, i32 %609, i32 %619) #11
  %712 = add nuw nsw i64 %707, 1
  %713 = icmp eq i64 %712, %674
  br i1 %713, label %705, label %706

714:                                              ; preds = %705
  store i8 0, i8* %9, align 1
  br label %715

715:                                              ; preds = %705, %714, %633
  %716 = icmp sgt i32 %226, 0
  br i1 %716, label %717, label %747

717:                                              ; preds = %715
  %718 = icmp sgt i32 %239, 0
  %719 = icmp sgt i32 %253, 0
  %720 = mul i32 %614, %609
  %721 = icmp sgt i32 %614, 0
  %722 = icmp sgt i32 %609, 0
  %723 = icmp sgt i32 %619, 0
  %724 = sext i32 %619 to i64
  %725 = sext i32 %609 to i64
  %726 = sext i32 %631 to i64
  %727 = sext i32 %625 to i64
  %728 = sext i32 %604 to i64
  %729 = sext i32 %427 to i64
  %730 = sext i32 %629 to i64
  %731 = sext i32 %623 to i64
  %732 = sext i32 %545 to i64
  %733 = sext i32 %369 to i64
  %734 = sext i32 %627 to i64
  %735 = sext i32 %621 to i64
  %736 = sext i32 %486 to i64
  %737 = sext i32 %311 to i64
  %738 = zext i32 %226 to i64
  %739 = zext i32 %239 to i64
  %740 = zext i32 %253 to i64
  %741 = zext i32 %614 to i64
  %742 = zext i32 %609 to i64
  %743 = zext i32 %619 to i64
  %744 = icmp ult i32 %619, 8
  %745 = and i64 %743, 4294967288
  %746 = icmp eq i64 %745, %743
  br label %760

747:                                              ; preds = %774, %715
  %748 = xor i1 %219, true
  %749 = icmp eq i32* %220, null
  %750 = or i1 %749, %748
  br i1 %750, label %753, label %751

751:                                              ; preds = %747
  %752 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %752) #10
  br label %753

753:                                              ; preds = %747, %751
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %113) #11
  %754 = xor i1 %214, true
  %755 = icmp eq i32* %215, null
  %756 = or i1 %755, %754
  br i1 %756, label %759, label %757

757:                                              ; preds = %753
  %758 = bitcast i32* %215 to i8*
  tail call void @_ZdaPv(i8* %758) #10
  br label %759

759:                                              ; preds = %753, %757
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  ret void

760:                                              ; preds = %774, %717
  %761 = phi i64 [ 0, %717 ], [ %775, %774 ]
  %762 = mul nsw i64 %761, %737
  %763 = getelementptr inbounds i8, i8* %1, i64 %762
  %764 = mul nsw i64 %761, %736
  %765 = getelementptr inbounds i8, i8* %3, i64 %764
  %766 = mul nsw i64 %761, %735
  %767 = getelementptr inbounds i32, i32* %5, i64 %766
  %768 = getelementptr inbounds float, float* %4, i64 %766
  %769 = mul nsw i64 %761, %734
  %770 = getelementptr inbounds i32, i32* %6, i64 %769
  br i1 %718, label %771, label %774

771:                                              ; preds = %760
  %772 = trunc i64 %761 to i32
  %773 = mul i32 %239, %772
  br label %777

774:                                              ; preds = %792, %760
  %775 = add nuw nsw i64 %761, 1
  %776 = icmp eq i64 %775, %738
  br i1 %776, label %747, label %760

777:                                              ; preds = %792, %771
  %778 = phi i64 [ 0, %771 ], [ %793, %792 ]
  %779 = mul nsw i64 %778, %733
  %780 = getelementptr inbounds i8, i8* %763, i64 %779
  %781 = mul nsw i64 %778, %732
  %782 = getelementptr inbounds i8, i8* %765, i64 %781
  %783 = mul nsw i64 %778, %731
  %784 = getelementptr inbounds i32, i32* %767, i64 %783
  %785 = getelementptr inbounds float, float* %768, i64 %783
  %786 = mul nsw i64 %778, %730
  %787 = getelementptr inbounds i32, i32* %770, i64 %786
  br i1 %719, label %788, label %792

788:                                              ; preds = %777
  %789 = trunc i64 %778 to i32
  %790 = add i32 %773, %789
  %791 = mul i32 %790, %253
  br label %795

792:                                              ; preds = %811, %777
  %793 = add nuw nsw i64 %778, 1
  %794 = icmp eq i64 %793, %739
  br i1 %794, label %774, label %777

795:                                              ; preds = %811, %788
  %796 = phi i64 [ 0, %788 ], [ %812, %811 ]
  %797 = mul nsw i64 %796, %729
  %798 = getelementptr inbounds i8, i8* %780, i64 %797
  %799 = mul nsw i64 %796, %728
  %800 = getelementptr inbounds i8, i8* %782, i64 %799
  %801 = mul nsw i64 %796, %727
  %802 = getelementptr inbounds i32, i32* %784, i64 %801
  %803 = getelementptr inbounds float, float* %785, i64 %801
  %804 = mul nsw i64 %796, %726
  %805 = getelementptr inbounds i32, i32* %787, i64 %804
  %806 = trunc i64 %796 to i32
  %807 = add i32 %791, %806
  %808 = mul i32 %720, %807
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds float, float* %8, i64 %809
  br i1 %721, label %814, label %811

811:                                              ; preds = %866, %795
  %812 = add nuw nsw i64 %796, 1
  %813 = icmp eq i64 %812, %740
  br i1 %813, label %792, label %795

814:                                              ; preds = %795, %866
  %815 = phi i64 [ %867, %866 ], [ 0, %795 ]
  %816 = getelementptr inbounds float, float* %803, i64 %815
  %817 = load float, float* %816, align 4
  %818 = getelementptr inbounds i32, i32* %802, i64 %815
  %819 = load i32, i32* %818, align 4
  %820 = sitofp i32 %819 to float
  br i1 %722, label %821, label %866

821:                                              ; preds = %814
  %822 = mul nsw i64 %815, %724
  %823 = mul nsw i64 %815, %725
  br label %824

824:                                              ; preds = %869, %821
  %825 = phi i64 [ 0, %821 ], [ %884, %869 ]
  br i1 %723, label %826, label %869

826:                                              ; preds = %824
  %827 = mul nsw i64 %825, %724
  br i1 %744, label %828, label %831

828:                                              ; preds = %859, %826
  %829 = phi i64 [ 0, %826 ], [ %745, %859 ]
  %830 = phi i32 [ 0, %826 ], [ %865, %859 ]
  br label %886

831:                                              ; preds = %826, %831
  %832 = phi i64 [ %857, %831 ], [ 0, %826 ]
  %833 = phi <4 x i32> [ %855, %831 ], [ zeroinitializer, %826 ]
  %834 = phi <4 x i32> [ %856, %831 ], [ zeroinitializer, %826 ]
  %835 = add nsw i64 %832, %827
  %836 = getelementptr inbounds i8, i8* %798, i64 %835
  %837 = bitcast i8* %836 to <4 x i8>*
  %838 = load <4 x i8>, <4 x i8>* %837, align 1
  %839 = getelementptr inbounds i8, i8* %836, i64 4
  %840 = bitcast i8* %839 to <4 x i8>*
  %841 = load <4 x i8>, <4 x i8>* %840, align 1
  %842 = sext <4 x i8> %838 to <4 x i32>
  %843 = sext <4 x i8> %841 to <4 x i32>
  %844 = add nsw i64 %832, %822
  %845 = getelementptr inbounds i8, i8* %800, i64 %844
  %846 = bitcast i8* %845 to <4 x i8>*
  %847 = load <4 x i8>, <4 x i8>* %846, align 1
  %848 = getelementptr inbounds i8, i8* %845, i64 4
  %849 = bitcast i8* %848 to <4 x i8>*
  %850 = load <4 x i8>, <4 x i8>* %849, align 1
  %851 = sext <4 x i8> %847 to <4 x i32>
  %852 = sext <4 x i8> %850 to <4 x i32>
  %853 = mul nsw <4 x i32> %851, %842
  %854 = mul nsw <4 x i32> %852, %843
  %855 = add nsw <4 x i32> %853, %833
  %856 = add nsw <4 x i32> %854, %834
  %857 = add i64 %832, 8
  %858 = icmp eq i64 %857, %745
  br i1 %858, label %859, label %831, !llvm.loop !195

859:                                              ; preds = %831
  %860 = add <4 x i32> %856, %855
  %861 = shufflevector <4 x i32> %860, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %862 = add <4 x i32> %860, %861
  %863 = shufflevector <4 x i32> %862, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %864 = add <4 x i32> %862, %863
  %865 = extractelement <4 x i32> %864, i32 0
  br i1 %746, label %869, label %828

866:                                              ; preds = %869, %814
  %867 = add nuw nsw i64 %815, 1
  %868 = icmp eq i64 %867, %741
  br i1 %868, label %811, label %814

869:                                              ; preds = %886, %859, %824
  %870 = phi i32 [ 0, %824 ], [ %865, %859 ], [ %898, %886 ]
  %871 = getelementptr inbounds i32, i32* %805, i64 %825
  %872 = load i32, i32* %871, align 4
  %873 = sitofp i32 %872 to float
  %874 = fmul float %820, %873
  %875 = sitofp i32 %870 to float
  %876 = fsub float %875, %874
  %877 = fptosi float %876 to i32
  %878 = add nsw i64 %825, %823
  %879 = sitofp i32 %877 to float
  %880 = fmul float %817, %879
  %881 = getelementptr inbounds float, float* %810, i64 %878
  %882 = load float, float* %881, align 4
  %883 = fadd float %882, %880
  store float %883, float* %881, align 4
  %884 = add nuw nsw i64 %825, 1
  %885 = icmp eq i64 %884, %742
  br i1 %885, label %866, label %824

886:                                              ; preds = %828, %886
  %887 = phi i64 [ %899, %886 ], [ %829, %828 ]
  %888 = phi i32 [ %898, %886 ], [ %830, %828 ]
  %889 = add nsw i64 %887, %827
  %890 = getelementptr inbounds i8, i8* %798, i64 %889
  %891 = load i8, i8* %890, align 1
  %892 = sext i8 %891 to i32
  %893 = add nsw i64 %887, %822
  %894 = getelementptr inbounds i8, i8* %800, i64 %893
  %895 = load i8, i8* %894, align 1
  %896 = sext i8 %895 to i32
  %897 = mul nsw i32 %896, %892
  %898 = add nsw i32 %897, %888
  %899 = add nuw nsw i64 %887, 1
  %900 = icmp eq i64 %899, %743
  br i1 %900, label %869, label %886, !llvm.loop !196
}

declare void @_ZN6tflite12tensor_utils26PortableReductionSumVectorEPKaPiii(i8*, i32*, i32, i32) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops11BatchMatMulERKNS_20FullyConnectedParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::FullyConnectedParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #8 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !197
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 8, !noalias !197
  %14 = icmp sgt i32 %13, 5
  br i1 %14, label %15, label %16

15:                                               ; preds = %7
  tail call void @abort() #12, !noalias !197
  unreachable

16:                                               ; preds = %7
  store i32 5, i32* %11, align 8, !alias.scope !197
  %17 = sub i32 5, %13
  %18 = icmp sgt i32 %17, 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %18, label %20, label %100

20:                                               ; preds = %16
  %21 = bitcast %union.anon* %19 to [5 x i32]*
  %22 = zext i32 %17 to i64
  %23 = icmp ult i32 %17, 8
  br i1 %23, label %93, label %24

24:                                               ; preds = %20
  %25 = and i64 %22, 4294967288
  %26 = add nsw i64 %25, -8
  %27 = lshr exact i64 %26, 3
  %28 = add nuw nsw i64 %27, 1
  %29 = and i64 %28, 7
  %30 = icmp ult i64 %26, 56
  br i1 %30, label %78, label %31

31:                                               ; preds = %24
  %32 = sub nsw i64 %28, %29
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 0, %31 ], [ %75, %33 ]
  %35 = phi i64 [ %32, %31 ], [ %76, %33 ]
  %36 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %34
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %37, align 8, !alias.scope !197
  %38 = getelementptr inbounds i32, i32* %36, i64 4
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !197
  %40 = or i64 %34, 8
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %40
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !197
  %43 = getelementptr inbounds i32, i32* %41, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !197
  %45 = or i64 %34, 16
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %45
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !197
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !197
  %50 = or i64 %34, 24
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !197
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !197
  %55 = or i64 %34, 32
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !197
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !197
  %60 = or i64 %34, 40
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !197
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !197
  %65 = or i64 %34, 48
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !197
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !197
  %70 = or i64 %34, 56
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !197
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !197
  %75 = add i64 %34, 64
  %76 = add i64 %35, -8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %33, !llvm.loop !200

78:                                               ; preds = %33, %24
  %79 = phi i64 [ 0, %24 ], [ %75, %33 ]
  %80 = icmp eq i64 %29, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %78, %81
  %82 = phi i64 [ %88, %81 ], [ %79, %78 ]
  %83 = phi i64 [ %89, %81 ], [ %29, %78 ]
  %84 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !197
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !197
  %88 = add i64 %82, 8
  %89 = add i64 %83, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %81, !llvm.loop !201

91:                                               ; preds = %81, %78
  %92 = icmp eq i64 %25, %22
  br i1 %92, label %100, label %93

93:                                               ; preds = %91, %20
  %94 = phi i64 [ 0, %20 ], [ %25, %91 ]
  br label %95

95:                                               ; preds = %93, %95
  %96 = phi i64 [ %98, %95 ], [ %94, %93 ]
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* %21, i64 0, i64 %96
  store i32 1, i32* %97, align 4, !alias.scope !197
  %98 = add nuw nsw i64 %96, 1
  %99 = icmp eq i64 %98, %22
  br i1 %99, label %100, label %95, !llvm.loop !202

100:                                              ; preds = %95, %91, %16
  %101 = getelementptr inbounds %union.anon, %union.anon* %19, i64 0, i32 0
  %102 = bitcast %union.anon* %19 to i32*
  %103 = sext i32 %17 to i64
  %104 = getelementptr inbounds i32, i32* %102, i64 %103
  %105 = bitcast i32* %104 to i8*
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = bitcast %union.anon* %106 to i8*
  %108 = sext i32 %13 to i64
  %109 = shl nsw i64 %108, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %107, i64 %109, i1 false) #11
  %110 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 32, i1 false)
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %111, align 8, !alias.scope !203
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %113 = load i32, i32* %112, align 8, !noalias !203
  %114 = icmp sgt i32 %113, 5
  br i1 %114, label %115, label %116

115:                                              ; preds = %100
  tail call void @abort() #12, !noalias !203
  unreachable

116:                                              ; preds = %100
  store i32 5, i32* %111, align 8, !alias.scope !203
  %117 = sub i32 5, %113
  %118 = icmp sgt i32 %117, 0
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %120 = bitcast %union.anon* %119 to [5 x i32]*
  br i1 %118, label %121, label %200

121:                                              ; preds = %116
  %122 = zext i32 %117 to i64
  %123 = icmp ult i32 %117, 8
  br i1 %123, label %193, label %124

124:                                              ; preds = %121
  %125 = and i64 %122, 4294967288
  %126 = add nsw i64 %125, -8
  %127 = lshr exact i64 %126, 3
  %128 = add nuw nsw i64 %127, 1
  %129 = and i64 %128, 7
  %130 = icmp ult i64 %126, 56
  br i1 %130, label %178, label %131

131:                                              ; preds = %124
  %132 = sub nsw i64 %128, %129
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %175, %133 ]
  %135 = phi i64 [ %132, %131 ], [ %176, %133 ]
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %134
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %137, align 8, !alias.scope !203
  %138 = getelementptr inbounds i32, i32* %136, i64 4
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !203
  %140 = or i64 %134, 8
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %140
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !203
  %143 = getelementptr inbounds i32, i32* %141, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !203
  %145 = or i64 %134, 16
  %146 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %145
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !203
  %148 = getelementptr inbounds i32, i32* %146, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !203
  %150 = or i64 %134, 24
  %151 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %150
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !203
  %153 = getelementptr inbounds i32, i32* %151, i64 4
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !203
  %155 = or i64 %134, 32
  %156 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %155
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !203
  %158 = getelementptr inbounds i32, i32* %156, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !203
  %160 = or i64 %134, 40
  %161 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %160
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !203
  %163 = getelementptr inbounds i32, i32* %161, i64 4
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !203
  %165 = or i64 %134, 48
  %166 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %165
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !203
  %168 = getelementptr inbounds i32, i32* %166, i64 4
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !203
  %170 = or i64 %134, 56
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %170
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !203
  %173 = getelementptr inbounds i32, i32* %171, i64 4
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !203
  %175 = add i64 %134, 64
  %176 = add i64 %135, -8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %133, !llvm.loop !206

178:                                              ; preds = %133, %124
  %179 = phi i64 [ 0, %124 ], [ %175, %133 ]
  %180 = icmp eq i64 %129, 0
  br i1 %180, label %191, label %181

181:                                              ; preds = %178, %181
  %182 = phi i64 [ %188, %181 ], [ %179, %178 ]
  %183 = phi i64 [ %189, %181 ], [ %129, %178 ]
  %184 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %182
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %185, align 8, !alias.scope !203
  %186 = getelementptr inbounds i32, i32* %184, i64 4
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !203
  %188 = add i64 %182, 8
  %189 = add i64 %183, -1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %181, !llvm.loop !207

191:                                              ; preds = %181, %178
  %192 = icmp eq i64 %125, %122
  br i1 %192, label %200, label %193

193:                                              ; preds = %191, %121
  %194 = phi i64 [ 0, %121 ], [ %125, %191 ]
  br label %195

195:                                              ; preds = %193, %195
  %196 = phi i64 [ %198, %195 ], [ %194, %193 ]
  %197 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %196
  store i32 1, i32* %197, align 4, !alias.scope !203
  %198 = add nuw nsw i64 %196, 1
  %199 = icmp eq i64 %198, %122
  br i1 %199, label %200, label %195, !llvm.loop !208

200:                                              ; preds = %195, %191, %116
  %201 = getelementptr inbounds %union.anon, %union.anon* %119, i64 0, i32 0
  %202 = bitcast %union.anon* %119 to i32*
  %203 = sext i32 %117 to i64
  %204 = getelementptr inbounds i32, i32* %202, i64 %203
  %205 = bitcast i32* %204 to i8*
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %207 = bitcast %union.anon* %206 to i8*
  %208 = sext i32 %113 to i64
  %209 = shl nsw i64 %208, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %205, i8* align 4 %207, i64 %209, i1 false) #11
  %210 = load i32, i32* %11, align 8
  %211 = icmp sgt i32 %210, 5
  %212 = load i32*, i32** %101, align 8
  %213 = select i1 %211, i32* %212, i32* %102
  %214 = load i32, i32* %213, align 4
  %215 = load i32, i32* %111, align 8
  %216 = icmp sgt i32 %215, 5
  %217 = load i32*, i32** %201, align 8
  %218 = select i1 %216, i32* %217, i32* %202
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %214, %219
  %221 = icmp eq i32 %214, 1
  %222 = select i1 %221, i32 %219, i32 %214
  %223 = select i1 %220, i32 %214, i32 %222
  %224 = getelementptr inbounds i32, i32* %212, i64 1
  %225 = bitcast %union.anon* %19 to [5 x i32]*
  %226 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 1
  %227 = select i1 %211, i32* %224, i32* %226
  %228 = load i32, i32* %227, align 4
  %229 = getelementptr inbounds i32, i32* %217, i64 1
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 1
  %231 = select i1 %216, i32* %229, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %228, %232
  %234 = icmp eq i32 %228, 1
  %235 = select i1 %234, i32 %232, i32 %228
  %236 = select i1 %233, i32 %228, i32 %235
  %237 = getelementptr inbounds i32, i32* %212, i64 2
  %238 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %239 = bitcast [16 x i8]* %238 to i32*
  %240 = select i1 %211, i32* %237, i32* %239
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds i32, i32* %217, i64 2
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %244 = bitcast [16 x i8]* %243 to i32*
  %245 = select i1 %216, i32* %242, i32* %244
  %246 = load i32, i32* %245, align 4
  %247 = icmp eq i32 %241, %246
  %248 = icmp eq i32 %241, 1
  %249 = select i1 %248, i32 %246, i32 %241
  %250 = select i1 %247, i32 %241, i32 %249
  br i1 %221, label %310, label %251

251:                                              ; preds = %200
  %252 = icmp sgt i32 %210, 1
  br i1 %252, label %253, label %310

253:                                              ; preds = %251
  %254 = add i32 %210, -1
  %255 = add i32 %210, -2
  %256 = and i32 %254, 3
  %257 = icmp ult i32 %255, 3
  br i1 %257, label %290, label %258

258:                                              ; preds = %253
  %259 = sub i32 %254, %256
  br label %260

260:                                              ; preds = %260, %258
  %261 = phi i64 [ 1, %258 ], [ %287, %260 ]
  %262 = phi i32 [ 1, %258 ], [ %286, %260 ]
  %263 = phi i32 [ %259, %258 ], [ %288, %260 ]
  %264 = getelementptr inbounds i32, i32* %212, i64 %261
  %265 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %261
  %266 = select i1 %211, i32* %264, i32* %265
  %267 = load i32, i32* %266, align 4
  %268 = mul nsw i32 %267, %262
  %269 = add nuw nsw i64 %261, 1
  %270 = getelementptr inbounds i32, i32* %212, i64 %269
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %269
  %272 = select i1 %211, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = mul nsw i32 %273, %268
  %275 = add nuw nsw i64 %261, 2
  %276 = getelementptr inbounds i32, i32* %212, i64 %275
  %277 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %275
  %278 = select i1 %211, i32* %276, i32* %277
  %279 = load i32, i32* %278, align 4
  %280 = mul nsw i32 %279, %274
  %281 = add nuw nsw i64 %261, 3
  %282 = getelementptr inbounds i32, i32* %212, i64 %281
  %283 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %281
  %284 = select i1 %211, i32* %282, i32* %283
  %285 = load i32, i32* %284, align 4
  %286 = mul nsw i32 %285, %280
  %287 = add nuw nsw i64 %261, 4
  %288 = add i32 %263, -4
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %260

290:                                              ; preds = %260, %253
  %291 = phi i32 [ undef, %253 ], [ %286, %260 ]
  %292 = phi i64 [ 1, %253 ], [ %287, %260 ]
  %293 = phi i32 [ 1, %253 ], [ %286, %260 ]
  %294 = icmp eq i32 %256, 0
  br i1 %294, label %307, label %295

295:                                              ; preds = %290, %295
  %296 = phi i64 [ %304, %295 ], [ %292, %290 ]
  %297 = phi i32 [ %303, %295 ], [ %293, %290 ]
  %298 = phi i32 [ %305, %295 ], [ %256, %290 ]
  %299 = getelementptr inbounds i32, i32* %212, i64 %296
  %300 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %296
  %301 = select i1 %211, i32* %299, i32* %300
  %302 = load i32, i32* %301, align 4
  %303 = mul nsw i32 %302, %297
  %304 = add nuw nsw i64 %296, 1
  %305 = add i32 %298, -1
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %295, !llvm.loop !209

307:                                              ; preds = %295, %290
  %308 = phi i32 [ %291, %290 ], [ %303, %295 ]
  %309 = sext i32 %308 to i64
  br label %310

310:                                              ; preds = %307, %200, %251
  %311 = phi i64 [ 0, %200 ], [ 1, %251 ], [ %309, %307 ]
  br i1 %234, label %371, label %312

312:                                              ; preds = %310
  %313 = icmp sgt i32 %210, 2
  br i1 %313, label %314, label %371

314:                                              ; preds = %312
  %315 = add i32 %210, -2
  %316 = add i32 %210, -3
  %317 = and i32 %315, 3
  %318 = icmp ult i32 %316, 3
  br i1 %318, label %351, label %319

319:                                              ; preds = %314
  %320 = sub i32 %315, %317
  br label %321

321:                                              ; preds = %321, %319
  %322 = phi i64 [ 2, %319 ], [ %348, %321 ]
  %323 = phi i32 [ 1, %319 ], [ %347, %321 ]
  %324 = phi i32 [ %320, %319 ], [ %349, %321 ]
  %325 = getelementptr inbounds i32, i32* %212, i64 %322
  %326 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %322
  %327 = select i1 %211, i32* %325, i32* %326
  %328 = load i32, i32* %327, align 4
  %329 = mul nsw i32 %328, %323
  %330 = or i64 %322, 1
  %331 = getelementptr inbounds i32, i32* %212, i64 %330
  %332 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %330
  %333 = select i1 %211, i32* %331, i32* %332
  %334 = load i32, i32* %333, align 4
  %335 = mul nsw i32 %334, %329
  %336 = add nuw nsw i64 %322, 2
  %337 = getelementptr inbounds i32, i32* %212, i64 %336
  %338 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %336
  %339 = select i1 %211, i32* %337, i32* %338
  %340 = load i32, i32* %339, align 4
  %341 = mul nsw i32 %340, %335
  %342 = add nuw nsw i64 %322, 3
  %343 = getelementptr inbounds i32, i32* %212, i64 %342
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %342
  %345 = select i1 %211, i32* %343, i32* %344
  %346 = load i32, i32* %345, align 4
  %347 = mul nsw i32 %346, %341
  %348 = add nuw nsw i64 %322, 4
  %349 = add i32 %324, -4
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %321

351:                                              ; preds = %321, %314
  %352 = phi i32 [ undef, %314 ], [ %347, %321 ]
  %353 = phi i64 [ 2, %314 ], [ %348, %321 ]
  %354 = phi i32 [ 1, %314 ], [ %347, %321 ]
  %355 = icmp eq i32 %317, 0
  br i1 %355, label %368, label %356

356:                                              ; preds = %351, %356
  %357 = phi i64 [ %365, %356 ], [ %353, %351 ]
  %358 = phi i32 [ %364, %356 ], [ %354, %351 ]
  %359 = phi i32 [ %366, %356 ], [ %317, %351 ]
  %360 = getelementptr inbounds i32, i32* %212, i64 %357
  %361 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %357
  %362 = select i1 %211, i32* %360, i32* %361
  %363 = load i32, i32* %362, align 4
  %364 = mul nsw i32 %363, %358
  %365 = add nuw nsw i64 %357, 1
  %366 = add i32 %359, -1
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %356, !llvm.loop !210

368:                                              ; preds = %356, %351
  %369 = phi i32 [ %352, %351 ], [ %364, %356 ]
  %370 = sext i32 %369 to i64
  br label %371

371:                                              ; preds = %368, %310, %312
  %372 = phi i64 [ 0, %310 ], [ 1, %312 ], [ %370, %368 ]
  br i1 %248, label %432, label %373

373:                                              ; preds = %371
  %374 = icmp sgt i32 %210, 3
  br i1 %374, label %375, label %432

375:                                              ; preds = %373
  %376 = add i32 %210, -3
  %377 = add i32 %210, -4
  %378 = and i32 %376, 3
  %379 = icmp ult i32 %377, 3
  br i1 %379, label %412, label %380

380:                                              ; preds = %375
  %381 = sub i32 %376, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 3, %380 ], [ %409, %382 ]
  %384 = phi i32 [ 1, %380 ], [ %408, %382 ]
  %385 = phi i32 [ %381, %380 ], [ %410, %382 ]
  %386 = getelementptr inbounds i32, i32* %212, i64 %383
  %387 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %383
  %388 = select i1 %211, i32* %386, i32* %387
  %389 = load i32, i32* %388, align 4
  %390 = mul nsw i32 %389, %384
  %391 = add nuw nsw i64 %383, 1
  %392 = getelementptr inbounds i32, i32* %212, i64 %391
  %393 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %391
  %394 = select i1 %211, i32* %392, i32* %393
  %395 = load i32, i32* %394, align 4
  %396 = mul nsw i32 %395, %390
  %397 = add nuw nsw i64 %383, 2
  %398 = getelementptr inbounds i32, i32* %212, i64 %397
  %399 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %397
  %400 = select i1 %211, i32* %398, i32* %399
  %401 = load i32, i32* %400, align 4
  %402 = mul nsw i32 %401, %396
  %403 = add nuw nsw i64 %383, 3
  %404 = getelementptr inbounds i32, i32* %212, i64 %403
  %405 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %403
  %406 = select i1 %211, i32* %404, i32* %405
  %407 = load i32, i32* %406, align 4
  %408 = mul nsw i32 %407, %402
  %409 = add nuw nsw i64 %383, 4
  %410 = add i32 %385, -4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %382

412:                                              ; preds = %382, %375
  %413 = phi i32 [ undef, %375 ], [ %408, %382 ]
  %414 = phi i64 [ 3, %375 ], [ %409, %382 ]
  %415 = phi i32 [ 1, %375 ], [ %408, %382 ]
  %416 = icmp eq i32 %378, 0
  br i1 %416, label %429, label %417

417:                                              ; preds = %412, %417
  %418 = phi i64 [ %426, %417 ], [ %414, %412 ]
  %419 = phi i32 [ %425, %417 ], [ %415, %412 ]
  %420 = phi i32 [ %427, %417 ], [ %378, %412 ]
  %421 = getelementptr inbounds i32, i32* %212, i64 %418
  %422 = getelementptr inbounds [5 x i32], [5 x i32]* %225, i64 0, i64 %418
  %423 = select i1 %211, i32* %421, i32* %422
  %424 = load i32, i32* %423, align 4
  %425 = mul nsw i32 %424, %419
  %426 = add nuw nsw i64 %418, 1
  %427 = add i32 %420, -1
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %417, !llvm.loop !211

429:                                              ; preds = %417, %412
  %430 = phi i32 [ %413, %412 ], [ %425, %417 ]
  %431 = sext i32 %430 to i64
  br label %432

432:                                              ; preds = %429, %371, %373
  %433 = phi i64 [ 0, %371 ], [ 1, %373 ], [ %431, %429 ]
  %434 = icmp eq i32 %219, 1
  br i1 %434, label %494, label %435

435:                                              ; preds = %432
  %436 = icmp sgt i32 %215, 1
  br i1 %436, label %437, label %494

437:                                              ; preds = %435
  %438 = add i32 %215, -1
  %439 = add i32 %215, -2
  %440 = and i32 %438, 3
  %441 = icmp ult i32 %439, 3
  br i1 %441, label %474, label %442

442:                                              ; preds = %437
  %443 = sub i32 %438, %440
  br label %444

444:                                              ; preds = %444, %442
  %445 = phi i64 [ 1, %442 ], [ %471, %444 ]
  %446 = phi i32 [ 1, %442 ], [ %470, %444 ]
  %447 = phi i32 [ %443, %442 ], [ %472, %444 ]
  %448 = getelementptr inbounds i32, i32* %217, i64 %445
  %449 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %445
  %450 = select i1 %216, i32* %448, i32* %449
  %451 = load i32, i32* %450, align 4
  %452 = mul nsw i32 %451, %446
  %453 = add nuw nsw i64 %445, 1
  %454 = getelementptr inbounds i32, i32* %217, i64 %453
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %453
  %456 = select i1 %216, i32* %454, i32* %455
  %457 = load i32, i32* %456, align 4
  %458 = mul nsw i32 %457, %452
  %459 = add nuw nsw i64 %445, 2
  %460 = getelementptr inbounds i32, i32* %217, i64 %459
  %461 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %459
  %462 = select i1 %216, i32* %460, i32* %461
  %463 = load i32, i32* %462, align 4
  %464 = mul nsw i32 %463, %458
  %465 = add nuw nsw i64 %445, 3
  %466 = getelementptr inbounds i32, i32* %217, i64 %465
  %467 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %465
  %468 = select i1 %216, i32* %466, i32* %467
  %469 = load i32, i32* %468, align 4
  %470 = mul nsw i32 %469, %464
  %471 = add nuw nsw i64 %445, 4
  %472 = add i32 %447, -4
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %444

474:                                              ; preds = %444, %437
  %475 = phi i32 [ undef, %437 ], [ %470, %444 ]
  %476 = phi i64 [ 1, %437 ], [ %471, %444 ]
  %477 = phi i32 [ 1, %437 ], [ %470, %444 ]
  %478 = icmp eq i32 %440, 0
  br i1 %478, label %491, label %479

479:                                              ; preds = %474, %479
  %480 = phi i64 [ %488, %479 ], [ %476, %474 ]
  %481 = phi i32 [ %487, %479 ], [ %477, %474 ]
  %482 = phi i32 [ %489, %479 ], [ %440, %474 ]
  %483 = getelementptr inbounds i32, i32* %217, i64 %480
  %484 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %480
  %485 = select i1 %216, i32* %483, i32* %484
  %486 = load i32, i32* %485, align 4
  %487 = mul nsw i32 %486, %481
  %488 = add nuw nsw i64 %480, 1
  %489 = add i32 %482, -1
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %479, !llvm.loop !212

491:                                              ; preds = %479, %474
  %492 = phi i32 [ %475, %474 ], [ %487, %479 ]
  %493 = sext i32 %492 to i64
  br label %494

494:                                              ; preds = %491, %432, %435
  %495 = phi i64 [ 0, %432 ], [ 1, %435 ], [ %493, %491 ]
  %496 = icmp eq i32 %232, 1
  br i1 %496, label %556, label %497

497:                                              ; preds = %494
  %498 = icmp sgt i32 %215, 2
  br i1 %498, label %499, label %556

499:                                              ; preds = %497
  %500 = add i32 %215, -2
  %501 = add i32 %215, -3
  %502 = and i32 %500, 3
  %503 = icmp ult i32 %501, 3
  br i1 %503, label %536, label %504

504:                                              ; preds = %499
  %505 = sub i32 %500, %502
  br label %506

506:                                              ; preds = %506, %504
  %507 = phi i64 [ 2, %504 ], [ %533, %506 ]
  %508 = phi i32 [ 1, %504 ], [ %532, %506 ]
  %509 = phi i32 [ %505, %504 ], [ %534, %506 ]
  %510 = getelementptr inbounds i32, i32* %217, i64 %507
  %511 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %507
  %512 = select i1 %216, i32* %510, i32* %511
  %513 = load i32, i32* %512, align 4
  %514 = mul nsw i32 %513, %508
  %515 = or i64 %507, 1
  %516 = getelementptr inbounds i32, i32* %217, i64 %515
  %517 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %515
  %518 = select i1 %216, i32* %516, i32* %517
  %519 = load i32, i32* %518, align 4
  %520 = mul nsw i32 %519, %514
  %521 = add nuw nsw i64 %507, 2
  %522 = getelementptr inbounds i32, i32* %217, i64 %521
  %523 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %521
  %524 = select i1 %216, i32* %522, i32* %523
  %525 = load i32, i32* %524, align 4
  %526 = mul nsw i32 %525, %520
  %527 = add nuw nsw i64 %507, 3
  %528 = getelementptr inbounds i32, i32* %217, i64 %527
  %529 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %527
  %530 = select i1 %216, i32* %528, i32* %529
  %531 = load i32, i32* %530, align 4
  %532 = mul nsw i32 %531, %526
  %533 = add nuw nsw i64 %507, 4
  %534 = add i32 %509, -4
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %506

536:                                              ; preds = %506, %499
  %537 = phi i32 [ undef, %499 ], [ %532, %506 ]
  %538 = phi i64 [ 2, %499 ], [ %533, %506 ]
  %539 = phi i32 [ 1, %499 ], [ %532, %506 ]
  %540 = icmp eq i32 %502, 0
  br i1 %540, label %553, label %541

541:                                              ; preds = %536, %541
  %542 = phi i64 [ %550, %541 ], [ %538, %536 ]
  %543 = phi i32 [ %549, %541 ], [ %539, %536 ]
  %544 = phi i32 [ %551, %541 ], [ %502, %536 ]
  %545 = getelementptr inbounds i32, i32* %217, i64 %542
  %546 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %542
  %547 = select i1 %216, i32* %545, i32* %546
  %548 = load i32, i32* %547, align 4
  %549 = mul nsw i32 %548, %543
  %550 = add nuw nsw i64 %542, 1
  %551 = add i32 %544, -1
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %553, label %541, !llvm.loop !213

553:                                              ; preds = %541, %536
  %554 = phi i32 [ %537, %536 ], [ %549, %541 ]
  %555 = sext i32 %554 to i64
  br label %556

556:                                              ; preds = %553, %494, %497
  %557 = phi i64 [ 0, %494 ], [ 1, %497 ], [ %555, %553 ]
  %558 = icmp eq i32 %246, 1
  br i1 %558, label %618, label %559

559:                                              ; preds = %556
  %560 = icmp sgt i32 %215, 3
  br i1 %560, label %561, label %618

561:                                              ; preds = %559
  %562 = add i32 %215, -3
  %563 = add i32 %215, -4
  %564 = and i32 %562, 3
  %565 = icmp ult i32 %563, 3
  br i1 %565, label %598, label %566

566:                                              ; preds = %561
  %567 = sub i32 %562, %564
  br label %568

568:                                              ; preds = %568, %566
  %569 = phi i64 [ 3, %566 ], [ %595, %568 ]
  %570 = phi i32 [ 1, %566 ], [ %594, %568 ]
  %571 = phi i32 [ %567, %566 ], [ %596, %568 ]
  %572 = getelementptr inbounds i32, i32* %217, i64 %569
  %573 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %569
  %574 = select i1 %216, i32* %572, i32* %573
  %575 = load i32, i32* %574, align 4
  %576 = mul nsw i32 %575, %570
  %577 = add nuw nsw i64 %569, 1
  %578 = getelementptr inbounds i32, i32* %217, i64 %577
  %579 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %577
  %580 = select i1 %216, i32* %578, i32* %579
  %581 = load i32, i32* %580, align 4
  %582 = mul nsw i32 %581, %576
  %583 = add nuw nsw i64 %569, 2
  %584 = getelementptr inbounds i32, i32* %217, i64 %583
  %585 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %583
  %586 = select i1 %216, i32* %584, i32* %585
  %587 = load i32, i32* %586, align 4
  %588 = mul nsw i32 %587, %582
  %589 = add nuw nsw i64 %569, 3
  %590 = getelementptr inbounds i32, i32* %217, i64 %589
  %591 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %589
  %592 = select i1 %216, i32* %590, i32* %591
  %593 = load i32, i32* %592, align 4
  %594 = mul nsw i32 %593, %588
  %595 = add nuw nsw i64 %569, 4
  %596 = add i32 %571, -4
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %598, label %568

598:                                              ; preds = %568, %561
  %599 = phi i32 [ undef, %561 ], [ %594, %568 ]
  %600 = phi i64 [ 3, %561 ], [ %595, %568 ]
  %601 = phi i32 [ 1, %561 ], [ %594, %568 ]
  %602 = icmp eq i32 %564, 0
  br i1 %602, label %615, label %603

603:                                              ; preds = %598, %603
  %604 = phi i64 [ %612, %603 ], [ %600, %598 ]
  %605 = phi i32 [ %611, %603 ], [ %601, %598 ]
  %606 = phi i32 [ %613, %603 ], [ %564, %598 ]
  %607 = getelementptr inbounds i32, i32* %217, i64 %604
  %608 = getelementptr inbounds [5 x i32], [5 x i32]* %120, i64 0, i64 %604
  %609 = select i1 %216, i32* %607, i32* %608
  %610 = load i32, i32* %609, align 4
  %611 = mul nsw i32 %610, %605
  %612 = add nuw nsw i64 %604, 1
  %613 = add i32 %606, -1
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %603, !llvm.loop !214

615:                                              ; preds = %603, %598
  %616 = phi i32 [ %599, %598 ], [ %611, %603 ]
  %617 = sext i32 %616 to i64
  br label %618

618:                                              ; preds = %615, %556, %559
  %619 = phi i64 [ 0, %556 ], [ 1, %559 ], [ %617, %615 ]
  %620 = getelementptr inbounds i32, i32* %212, i64 3
  %621 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %622 = bitcast i8* %621 to i32*
  %623 = select i1 %211, i32* %620, i32* %622
  %624 = load i32, i32* %623, align 4
  %625 = getelementptr inbounds i32, i32* %217, i64 4
  %626 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1, i64 8
  %627 = bitcast i8* %626 to i32*
  %628 = select i1 %216, i32* %625, i32* %627
  %629 = load i32, i32* %628, align 4
  %630 = getelementptr inbounds i32, i32* %212, i64 4
  %631 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %632 = bitcast i8* %631 to i32*
  %633 = select i1 %211, i32* %630, i32* %632
  %634 = load i32, i32* %633, align 4
  %635 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 0
  %636 = load i32, i32* %635, align 4
  %637 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 1
  %638 = load i32, i32* %637, align 4
  %639 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 2
  %640 = load i32, i32* %639, align 4
  %641 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 3
  %642 = load i32, i32* %641, align 4
  %643 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 4
  %644 = load i32, i32* %643, align 4
  %645 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 5
  %646 = load i32, i32* %645, align 4
  %647 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 6
  %648 = load i32, i32* %647, align 4
  %649 = icmp sgt i32 %223, 0
  br i1 %649, label %650, label %692

650:                                              ; preds = %618
  %651 = icmp sgt i32 %236, 0
  %652 = icmp sgt i32 %250, 0
  %653 = mul i32 %629, %624
  %654 = icmp sgt i32 %629, 0
  %655 = icmp sgt i32 %624, 0
  %656 = icmp sgt i32 %634, 0
  %657 = icmp sgt i32 %644, 0
  %658 = sub nsw i32 0, %644
  %659 = select i1 %657, i32 0, i32 %658
  %660 = shl i32 1, %644
  %661 = select i1 %657, i32 %660, i32 1
  %662 = sext i32 %642 to i64
  %663 = icmp eq i32 %642, -2147483648
  %664 = zext i32 %659 to i64
  %665 = shl nsw i64 -1, %664
  %666 = trunc i64 %665 to i32
  %667 = xor i32 %666, -1
  %668 = ashr i32 %667, 1
  %669 = sext i32 %634 to i64
  %670 = sext i32 %624 to i64
  %671 = zext i32 %223 to i64
  %672 = zext i32 %236 to i64
  %673 = zext i32 %250 to i64
  %674 = zext i32 %629 to i64
  %675 = zext i32 %624 to i64
  %676 = zext i32 %634 to i64
  %677 = and i64 %676, 4294967292
  %678 = add nsw i64 %677, -4
  %679 = lshr exact i64 %678, 2
  %680 = add nuw nsw i64 %679, 1
  %681 = icmp ult i32 %634, 4
  %682 = and i64 %676, 4294967292
  %683 = insertelement <4 x i32> undef, i32 %638, i32 0
  %684 = shufflevector <4 x i32> %683, <4 x i32> undef, <4 x i32> zeroinitializer
  %685 = insertelement <4 x i32> undef, i32 %636, i32 0
  %686 = shufflevector <4 x i32> %685, <4 x i32> undef, <4 x i32> zeroinitializer
  %687 = and i64 %680, 1
  %688 = icmp eq i64 %678, 0
  %689 = sub nuw nsw i64 %680, %687
  %690 = icmp eq i64 %687, 0
  %691 = icmp eq i64 %682, %676
  br label %705

692:                                              ; preds = %714, %618
  %693 = xor i1 %216, true
  %694 = icmp eq i32* %217, null
  %695 = or i1 %694, %693
  br i1 %695, label %698, label %696

696:                                              ; preds = %692
  %697 = bitcast i32* %217 to i8*
  tail call void @_ZdaPv(i8* %697) #10
  br label %698

698:                                              ; preds = %692, %696
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #11
  %699 = xor i1 %211, true
  %700 = icmp eq i32* %212, null
  %701 = or i1 %700, %699
  br i1 %701, label %704, label %702

702:                                              ; preds = %698
  %703 = bitcast i32* %212 to i8*
  tail call void @_ZdaPv(i8* %703) #10
  br label %704

704:                                              ; preds = %698, %702
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  ret void

705:                                              ; preds = %714, %650
  %706 = phi i64 [ 0, %650 ], [ %715, %714 ]
  %707 = mul nsw i64 %706, %311
  %708 = getelementptr inbounds i8, i8* %2, i64 %707
  %709 = mul nsw i64 %706, %495
  %710 = getelementptr inbounds i8, i8* %4, i64 %709
  br i1 %651, label %711, label %714

711:                                              ; preds = %705
  %712 = trunc i64 %706 to i32
  %713 = mul i32 %236, %712
  br label %717

714:                                              ; preds = %727, %705
  %715 = add nuw nsw i64 %706, 1
  %716 = icmp eq i64 %715, %671
  br i1 %716, label %692, label %705

717:                                              ; preds = %727, %711
  %718 = phi i64 [ 0, %711 ], [ %728, %727 ]
  %719 = mul nsw i64 %718, %372
  %720 = getelementptr inbounds i8, i8* %708, i64 %719
  %721 = mul nsw i64 %718, %557
  %722 = getelementptr inbounds i8, i8* %710, i64 %721
  br i1 %652, label %723, label %727

723:                                              ; preds = %717
  %724 = trunc i64 %718 to i32
  %725 = add i32 %713, %724
  %726 = mul i32 %725, %250
  br label %730

727:                                              ; preds = %746, %717
  %728 = add nuw nsw i64 %718, 1
  %729 = icmp eq i64 %728, %672
  br i1 %729, label %714, label %717

730:                                              ; preds = %746, %723
  %731 = phi i64 [ 0, %723 ], [ %747, %746 ]
  %732 = mul nsw i64 %731, %433
  %733 = getelementptr inbounds i8, i8* %720, i64 %732
  %734 = mul nsw i64 %731, %619
  %735 = getelementptr inbounds i8, i8* %722, i64 %734
  %736 = trunc i64 %731 to i32
  %737 = add i32 %726, %736
  %738 = mul i32 %653, %737
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds i8, i8* %6, i64 %739
  br i1 %654, label %741, label %746

741:                                              ; preds = %730, %819
  %742 = phi i64 [ %820, %819 ], [ 0, %730 ]
  br i1 %655, label %743, label %819

743:                                              ; preds = %741
  %744 = mul nsw i64 %742, %669
  %745 = mul nsw i64 %742, %670
  br label %749

746:                                              ; preds = %819, %730
  %747 = add nuw nsw i64 %731, 1
  %748 = icmp eq i64 %747, %673
  br i1 %748, label %727, label %730

749:                                              ; preds = %837, %743
  %750 = phi i64 [ 0, %743 ], [ %854, %837 ]
  br i1 %656, label %751, label %822

751:                                              ; preds = %749
  %752 = mul nsw i64 %750, %669
  br i1 %681, label %753, label %756

753:                                              ; preds = %812, %751
  %754 = phi i64 [ 0, %751 ], [ %682, %812 ]
  %755 = phi i32 [ 0, %751 ], [ %818, %812 ]
  br label %856

756:                                              ; preds = %751
  br i1 %688, label %793, label %757

757:                                              ; preds = %756, %757
  %758 = phi i64 [ %790, %757 ], [ 0, %756 ]
  %759 = phi <4 x i32> [ %789, %757 ], [ zeroinitializer, %756 ]
  %760 = phi i64 [ %791, %757 ], [ %689, %756 ]
  %761 = add nsw i64 %758, %752
  %762 = getelementptr inbounds i8, i8* %733, i64 %761
  %763 = bitcast i8* %762 to <4 x i8>*
  %764 = load <4 x i8>, <4 x i8>* %763, align 1
  %765 = sext <4 x i8> %764 to <4 x i32>
  %766 = add nsw i64 %758, %744
  %767 = getelementptr inbounds i8, i8* %735, i64 %766
  %768 = bitcast i8* %767 to <4 x i8>*
  %769 = load <4 x i8>, <4 x i8>* %768, align 1
  %770 = sext <4 x i8> %769 to <4 x i32>
  %771 = add nsw <4 x i32> %684, %765
  %772 = add nsw <4 x i32> %686, %770
  %773 = mul nsw <4 x i32> %772, %771
  %774 = add nsw <4 x i32> %773, %759
  %775 = or i64 %758, 4
  %776 = add nsw i64 %775, %752
  %777 = getelementptr inbounds i8, i8* %733, i64 %776
  %778 = bitcast i8* %777 to <4 x i8>*
  %779 = load <4 x i8>, <4 x i8>* %778, align 1
  %780 = sext <4 x i8> %779 to <4 x i32>
  %781 = add nsw i64 %775, %744
  %782 = getelementptr inbounds i8, i8* %735, i64 %781
  %783 = bitcast i8* %782 to <4 x i8>*
  %784 = load <4 x i8>, <4 x i8>* %783, align 1
  %785 = sext <4 x i8> %784 to <4 x i32>
  %786 = add nsw <4 x i32> %684, %780
  %787 = add nsw <4 x i32> %686, %785
  %788 = mul nsw <4 x i32> %787, %786
  %789 = add nsw <4 x i32> %788, %774
  %790 = add i64 %758, 8
  %791 = add i64 %760, -2
  %792 = icmp eq i64 %791, 0
  br i1 %792, label %793, label %757, !llvm.loop !215

793:                                              ; preds = %757, %756
  %794 = phi <4 x i32> [ undef, %756 ], [ %789, %757 ]
  %795 = phi i64 [ 0, %756 ], [ %790, %757 ]
  %796 = phi <4 x i32> [ zeroinitializer, %756 ], [ %789, %757 ]
  br i1 %690, label %812, label %797

797:                                              ; preds = %793
  %798 = add nsw i64 %795, %744
  %799 = getelementptr inbounds i8, i8* %735, i64 %798
  %800 = bitcast i8* %799 to <4 x i8>*
  %801 = load <4 x i8>, <4 x i8>* %800, align 1
  %802 = sext <4 x i8> %801 to <4 x i32>
  %803 = add nsw <4 x i32> %686, %802
  %804 = add nsw i64 %795, %752
  %805 = getelementptr inbounds i8, i8* %733, i64 %804
  %806 = bitcast i8* %805 to <4 x i8>*
  %807 = load <4 x i8>, <4 x i8>* %806, align 1
  %808 = sext <4 x i8> %807 to <4 x i32>
  %809 = add nsw <4 x i32> %684, %808
  %810 = mul nsw <4 x i32> %803, %809
  %811 = add nsw <4 x i32> %810, %796
  br label %812

812:                                              ; preds = %793, %797
  %813 = phi <4 x i32> [ %794, %793 ], [ %811, %797 ]
  %814 = shufflevector <4 x i32> %813, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %815 = add <4 x i32> %813, %814
  %816 = shufflevector <4 x i32> %815, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %817 = add <4 x i32> %815, %816
  %818 = extractelement <4 x i32> %817, i32 0
  br i1 %691, label %822, label %753

819:                                              ; preds = %837, %741
  %820 = add nuw nsw i64 %742, 1
  %821 = icmp eq i64 %820, %674
  br i1 %821, label %746, label %741

822:                                              ; preds = %856, %812, %749
  %823 = phi i32 [ 0, %749 ], [ %818, %812 ], [ %870, %856 ]
  %824 = mul nsw i32 %823, %661
  %825 = icmp eq i32 %824, %642
  br i1 %825, label %828, label %826

826:                                              ; preds = %822
  %827 = sext i32 %824 to i64
  br label %829

828:                                              ; preds = %822
  br i1 %663, label %837, label %829

829:                                              ; preds = %828, %826
  %830 = phi i64 [ %827, %826 ], [ %662, %828 ]
  %831 = mul nsw i64 %830, %662
  %832 = icmp sgt i64 %831, -1
  %833 = select i1 %832, i64 1073741824, i64 -1073741823
  %834 = add nsw i64 %833, %831
  %835 = sdiv i64 %834, 2147483648
  %836 = trunc i64 %835 to i32
  br label %837

837:                                              ; preds = %828, %829
  %838 = phi i32 [ %836, %829 ], [ 2147483647, %828 ]
  %839 = and i32 %838, %667
  %840 = lshr i32 %838, 31
  %841 = add nsw i32 %840, %668
  %842 = ashr i32 %838, %659
  %843 = icmp sgt i32 %839, %841
  %844 = zext i1 %843 to i32
  %845 = add i32 %842, %640
  %846 = add i32 %845, %844
  %847 = icmp slt i32 %846, %646
  %848 = select i1 %847, i32 %646, i32 %846
  %849 = icmp slt i32 %648, %848
  %850 = select i1 %849, i32 %648, i32 %848
  %851 = add nsw i64 %750, %745
  %852 = trunc i32 %850 to i8
  %853 = getelementptr inbounds i8, i8* %740, i64 %851
  store i8 %852, i8* %853, align 1
  %854 = add nuw nsw i64 %750, 1
  %855 = icmp eq i64 %854, %675
  br i1 %855, label %819, label %749

856:                                              ; preds = %753, %856
  %857 = phi i64 [ %871, %856 ], [ %754, %753 ]
  %858 = phi i32 [ %870, %856 ], [ %755, %753 ]
  %859 = add nsw i64 %857, %752
  %860 = getelementptr inbounds i8, i8* %733, i64 %859
  %861 = load i8, i8* %860, align 1
  %862 = sext i8 %861 to i32
  %863 = add nsw i64 %857, %744
  %864 = getelementptr inbounds i8, i8* %735, i64 %863
  %865 = load i8, i8* %864, align 1
  %866 = sext i8 %865 to i32
  %867 = add nsw i32 %638, %862
  %868 = add nsw i32 %636, %866
  %869 = mul nsw i32 %868, %867
  %870 = add nsw i32 %869, %858
  %871 = add nuw nsw i64 %857, 1
  %872 = icmp eq i64 %871, %676
  br i1 %872, label %822, label %856, !llvm.loop !216
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops11BatchMatMulERKNS_12RuntimeShapeEPKfS3_S5_S3_PfPNS_17CpuBackendContextE(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::CpuBackendContext"*) local_unnamed_addr #8 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams", align 4
  %11 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams", align 4
  %12 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams", align 4
  %13 = alloca %"struct.tflite::cpu_backend_gemm::GemmParams", align 8
  %14 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !217
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 8, !noalias !217
  %18 = icmp sgt i32 %17, 5
  br i1 %18, label %19, label %20

19:                                               ; preds = %7
  tail call void @abort() #12, !noalias !217
  unreachable

20:                                               ; preds = %7
  store i32 5, i32* %15, align 8, !alias.scope !217
  %21 = sub i32 5, %17
  %22 = icmp sgt i32 %21, 0
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %22, label %24, label %104

24:                                               ; preds = %20
  %25 = bitcast %union.anon* %23 to [5 x i32]*
  %26 = zext i32 %21 to i64
  %27 = icmp ult i32 %21, 8
  br i1 %27, label %97, label %28

28:                                               ; preds = %24
  %29 = and i64 %26, 4294967288
  %30 = add nsw i64 %29, -8
  %31 = lshr exact i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 7
  %34 = icmp ult i64 %30, 56
  br i1 %34, label %82, label %35

35:                                               ; preds = %28
  %36 = sub nsw i64 %32, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %79, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %80, %37 ]
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %38
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !217
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !217
  %44 = or i64 %38, 8
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !217
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !217
  %49 = or i64 %38, 16
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !217
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !217
  %54 = or i64 %38, 24
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !217
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !217
  %59 = or i64 %38, 32
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !217
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !217
  %64 = or i64 %38, 40
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !217
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !217
  %69 = or i64 %38, 48
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !217
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !217
  %74 = or i64 %38, 56
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %74
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !217
  %77 = getelementptr inbounds i32, i32* %75, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %78, align 8, !alias.scope !217
  %79 = add i64 %38, 64
  %80 = add i64 %39, -8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %37, !llvm.loop !220

82:                                               ; preds = %37, %28
  %83 = phi i64 [ 0, %28 ], [ %79, %37 ]
  %84 = icmp eq i64 %33, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %92, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %93, %85 ], [ %33, %82 ]
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %86
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !217
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %91, align 8, !alias.scope !217
  %92 = add i64 %86, 8
  %93 = add i64 %87, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %85, !llvm.loop !221

95:                                               ; preds = %85, %82
  %96 = icmp eq i64 %29, %26
  br i1 %96, label %104, label %97

97:                                               ; preds = %95, %24
  %98 = phi i64 [ 0, %24 ], [ %29, %95 ]
  br label %99

99:                                               ; preds = %97, %99
  %100 = phi i64 [ %102, %99 ], [ %98, %97 ]
  %101 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %100
  store i32 1, i32* %101, align 4, !alias.scope !217
  %102 = add nuw nsw i64 %100, 1
  %103 = icmp eq i64 %102, %26
  br i1 %103, label %104, label %99, !llvm.loop !222

104:                                              ; preds = %99, %95, %20
  %105 = getelementptr inbounds %union.anon, %union.anon* %23, i64 0, i32 0
  %106 = bitcast %union.anon* %23 to i32*
  %107 = sext i32 %21 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %107
  %109 = bitcast i32* %108 to i8*
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %111 = bitcast %union.anon* %110 to i8*
  %112 = sext i32 %17 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %111, i64 %113, i1 false) #11
  %114 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !223
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %117 = load i32, i32* %116, align 8, !noalias !223
  %118 = icmp sgt i32 %117, 5
  br i1 %118, label %119, label %120

119:                                              ; preds = %104
  tail call void @abort() #12, !noalias !223
  unreachable

120:                                              ; preds = %104
  store i32 5, i32* %115, align 8, !alias.scope !223
  %121 = sub i32 5, %117
  %122 = icmp sgt i32 %121, 0
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %124 = bitcast %union.anon* %123 to [5 x i32]*
  br i1 %122, label %125, label %204

125:                                              ; preds = %120
  %126 = zext i32 %121 to i64
  %127 = icmp ult i32 %121, 8
  br i1 %127, label %197, label %128

128:                                              ; preds = %125
  %129 = and i64 %126, 4294967288
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 7
  %134 = icmp ult i64 %130, 56
  br i1 %134, label %182, label %135

135:                                              ; preds = %128
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %179, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %180, %137 ]
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %138
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !223
  %142 = getelementptr inbounds i32, i32* %140, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !223
  %144 = or i64 %138, 8
  %145 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %144
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !223
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !223
  %149 = or i64 %138, 16
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !223
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !223
  %154 = or i64 %138, 24
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !223
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !223
  %159 = or i64 %138, 32
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !223
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !223
  %164 = or i64 %138, 40
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !223
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !223
  %169 = or i64 %138, 48
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !223
  %172 = getelementptr inbounds i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !223
  %174 = or i64 %138, 56
  %175 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !223
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !223
  %179 = add i64 %138, 64
  %180 = add i64 %139, -8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %137, !llvm.loop !226

182:                                              ; preds = %137, %128
  %183 = phi i64 [ 0, %128 ], [ %179, %137 ]
  %184 = icmp eq i64 %133, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %133, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %186
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !223
  %190 = getelementptr inbounds i32, i32* %188, i64 4
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %191, align 8, !alias.scope !223
  %192 = add i64 %186, 8
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !227

195:                                              ; preds = %185, %182
  %196 = icmp eq i64 %129, %126
  br i1 %196, label %204, label %197

197:                                              ; preds = %195, %125
  %198 = phi i64 [ 0, %125 ], [ %129, %195 ]
  br label %199

199:                                              ; preds = %197, %199
  %200 = phi i64 [ %202, %199 ], [ %198, %197 ]
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %200
  store i32 1, i32* %201, align 4, !alias.scope !223
  %202 = add nuw nsw i64 %200, 1
  %203 = icmp eq i64 %202, %126
  br i1 %203, label %204, label %199, !llvm.loop !228

204:                                              ; preds = %199, %195, %120
  %205 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %206 = bitcast %union.anon* %123 to i32*
  %207 = sext i32 %121 to i64
  %208 = getelementptr inbounds i32, i32* %206, i64 %207
  %209 = bitcast i32* %208 to i8*
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %211 = bitcast %union.anon* %210 to i8*
  %212 = sext i32 %117 to i64
  %213 = shl nsw i64 %212, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %209, i8* align 4 %211, i64 %213, i1 false) #11
  %214 = load i32, i32* %15, align 8
  %215 = icmp sgt i32 %214, 5
  %216 = load i32*, i32** %105, align 8
  %217 = select i1 %215, i32* %216, i32* %106
  %218 = load i32, i32* %217, align 4
  %219 = load i32, i32* %115, align 8
  %220 = icmp sgt i32 %219, 5
  %221 = load i32*, i32** %205, align 8
  %222 = select i1 %220, i32* %221, i32* %206
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %218, %223
  %225 = icmp eq i32 %218, 1
  %226 = select i1 %225, i32 %223, i32 %218
  %227 = select i1 %224, i32 %218, i32 %226
  %228 = getelementptr inbounds i32, i32* %216, i64 1
  %229 = bitcast %union.anon* %23 to [5 x i32]*
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 1
  %231 = select i1 %215, i32* %228, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds i32, i32* %221, i64 1
  %234 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 1
  %235 = select i1 %220, i32* %233, i32* %234
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %232, %236
  %238 = icmp eq i32 %232, 1
  %239 = select i1 %238, i32 %236, i32 %232
  %240 = select i1 %237, i32 %232, i32 %239
  %241 = getelementptr inbounds i32, i32* %216, i64 2
  %242 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %243 = bitcast [16 x i8]* %242 to i32*
  %244 = select i1 %215, i32* %241, i32* %243
  %245 = load i32, i32* %244, align 4
  %246 = getelementptr inbounds i32, i32* %221, i64 2
  %247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %248 = bitcast [16 x i8]* %247 to i32*
  %249 = select i1 %220, i32* %246, i32* %248
  %250 = load i32, i32* %249, align 4
  %251 = icmp eq i32 %245, %250
  %252 = icmp eq i32 %245, 1
  %253 = select i1 %252, i32 %250, i32 %245
  %254 = select i1 %251, i32 %245, i32 %253
  br i1 %225, label %314, label %255

255:                                              ; preds = %204
  %256 = icmp sgt i32 %214, 1
  br i1 %256, label %257, label %314

257:                                              ; preds = %255
  %258 = add i32 %214, -1
  %259 = add i32 %214, -2
  %260 = and i32 %258, 3
  %261 = icmp ult i32 %259, 3
  br i1 %261, label %294, label %262

262:                                              ; preds = %257
  %263 = sub i32 %258, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 1, %262 ], [ %291, %264 ]
  %266 = phi i32 [ 1, %262 ], [ %290, %264 ]
  %267 = phi i32 [ %263, %262 ], [ %292, %264 ]
  %268 = getelementptr inbounds i32, i32* %216, i64 %265
  %269 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %265
  %270 = select i1 %215, i32* %268, i32* %269
  %271 = load i32, i32* %270, align 4
  %272 = mul nsw i32 %271, %266
  %273 = add nuw nsw i64 %265, 1
  %274 = getelementptr inbounds i32, i32* %216, i64 %273
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %273
  %276 = select i1 %215, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = mul nsw i32 %277, %272
  %279 = add nuw nsw i64 %265, 2
  %280 = getelementptr inbounds i32, i32* %216, i64 %279
  %281 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %279
  %282 = select i1 %215, i32* %280, i32* %281
  %283 = load i32, i32* %282, align 4
  %284 = mul nsw i32 %283, %278
  %285 = add nuw nsw i64 %265, 3
  %286 = getelementptr inbounds i32, i32* %216, i64 %285
  %287 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %285
  %288 = select i1 %215, i32* %286, i32* %287
  %289 = load i32, i32* %288, align 4
  %290 = mul nsw i32 %289, %284
  %291 = add nuw nsw i64 %265, 4
  %292 = add i32 %267, -4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %264

294:                                              ; preds = %264, %257
  %295 = phi i32 [ undef, %257 ], [ %290, %264 ]
  %296 = phi i64 [ 1, %257 ], [ %291, %264 ]
  %297 = phi i32 [ 1, %257 ], [ %290, %264 ]
  %298 = icmp eq i32 %260, 0
  br i1 %298, label %311, label %299

299:                                              ; preds = %294, %299
  %300 = phi i64 [ %308, %299 ], [ %296, %294 ]
  %301 = phi i32 [ %307, %299 ], [ %297, %294 ]
  %302 = phi i32 [ %309, %299 ], [ %260, %294 ]
  %303 = getelementptr inbounds i32, i32* %216, i64 %300
  %304 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %300
  %305 = select i1 %215, i32* %303, i32* %304
  %306 = load i32, i32* %305, align 4
  %307 = mul nsw i32 %306, %301
  %308 = add nuw nsw i64 %300, 1
  %309 = add i32 %302, -1
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %299, !llvm.loop !229

311:                                              ; preds = %299, %294
  %312 = phi i32 [ %295, %294 ], [ %307, %299 ]
  %313 = sext i32 %312 to i64
  br label %314

314:                                              ; preds = %311, %204, %255
  %315 = phi i64 [ 0, %204 ], [ 1, %255 ], [ %313, %311 ]
  br i1 %238, label %375, label %316

316:                                              ; preds = %314
  %317 = icmp sgt i32 %214, 2
  br i1 %317, label %318, label %375

318:                                              ; preds = %316
  %319 = add i32 %214, -2
  %320 = add i32 %214, -3
  %321 = and i32 %319, 3
  %322 = icmp ult i32 %320, 3
  br i1 %322, label %355, label %323

323:                                              ; preds = %318
  %324 = sub i32 %319, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 2, %323 ], [ %352, %325 ]
  %327 = phi i32 [ 1, %323 ], [ %351, %325 ]
  %328 = phi i32 [ %324, %323 ], [ %353, %325 ]
  %329 = getelementptr inbounds i32, i32* %216, i64 %326
  %330 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %326
  %331 = select i1 %215, i32* %329, i32* %330
  %332 = load i32, i32* %331, align 4
  %333 = mul nsw i32 %332, %327
  %334 = or i64 %326, 1
  %335 = getelementptr inbounds i32, i32* %216, i64 %334
  %336 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %334
  %337 = select i1 %215, i32* %335, i32* %336
  %338 = load i32, i32* %337, align 4
  %339 = mul nsw i32 %338, %333
  %340 = add nuw nsw i64 %326, 2
  %341 = getelementptr inbounds i32, i32* %216, i64 %340
  %342 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %340
  %343 = select i1 %215, i32* %341, i32* %342
  %344 = load i32, i32* %343, align 4
  %345 = mul nsw i32 %344, %339
  %346 = add nuw nsw i64 %326, 3
  %347 = getelementptr inbounds i32, i32* %216, i64 %346
  %348 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %346
  %349 = select i1 %215, i32* %347, i32* %348
  %350 = load i32, i32* %349, align 4
  %351 = mul nsw i32 %350, %345
  %352 = add nuw nsw i64 %326, 4
  %353 = add i32 %328, -4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %325

355:                                              ; preds = %325, %318
  %356 = phi i32 [ undef, %318 ], [ %351, %325 ]
  %357 = phi i64 [ 2, %318 ], [ %352, %325 ]
  %358 = phi i32 [ 1, %318 ], [ %351, %325 ]
  %359 = icmp eq i32 %321, 0
  br i1 %359, label %372, label %360

360:                                              ; preds = %355, %360
  %361 = phi i64 [ %369, %360 ], [ %357, %355 ]
  %362 = phi i32 [ %368, %360 ], [ %358, %355 ]
  %363 = phi i32 [ %370, %360 ], [ %321, %355 ]
  %364 = getelementptr inbounds i32, i32* %216, i64 %361
  %365 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %361
  %366 = select i1 %215, i32* %364, i32* %365
  %367 = load i32, i32* %366, align 4
  %368 = mul nsw i32 %367, %362
  %369 = add nuw nsw i64 %361, 1
  %370 = add i32 %363, -1
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %360, !llvm.loop !230

372:                                              ; preds = %360, %355
  %373 = phi i32 [ %356, %355 ], [ %368, %360 ]
  %374 = sext i32 %373 to i64
  br label %375

375:                                              ; preds = %372, %314, %316
  %376 = phi i64 [ 0, %314 ], [ 1, %316 ], [ %374, %372 ]
  br i1 %252, label %436, label %377

377:                                              ; preds = %375
  %378 = icmp sgt i32 %214, 3
  br i1 %378, label %379, label %436

379:                                              ; preds = %377
  %380 = add i32 %214, -3
  %381 = add i32 %214, -4
  %382 = and i32 %380, 3
  %383 = icmp ult i32 %381, 3
  br i1 %383, label %416, label %384

384:                                              ; preds = %379
  %385 = sub i32 %380, %382
  br label %386

386:                                              ; preds = %386, %384
  %387 = phi i64 [ 3, %384 ], [ %413, %386 ]
  %388 = phi i32 [ 1, %384 ], [ %412, %386 ]
  %389 = phi i32 [ %385, %384 ], [ %414, %386 ]
  %390 = getelementptr inbounds i32, i32* %216, i64 %387
  %391 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %387
  %392 = select i1 %215, i32* %390, i32* %391
  %393 = load i32, i32* %392, align 4
  %394 = mul nsw i32 %393, %388
  %395 = add nuw nsw i64 %387, 1
  %396 = getelementptr inbounds i32, i32* %216, i64 %395
  %397 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %395
  %398 = select i1 %215, i32* %396, i32* %397
  %399 = load i32, i32* %398, align 4
  %400 = mul nsw i32 %399, %394
  %401 = add nuw nsw i64 %387, 2
  %402 = getelementptr inbounds i32, i32* %216, i64 %401
  %403 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %401
  %404 = select i1 %215, i32* %402, i32* %403
  %405 = load i32, i32* %404, align 4
  %406 = mul nsw i32 %405, %400
  %407 = add nuw nsw i64 %387, 3
  %408 = getelementptr inbounds i32, i32* %216, i64 %407
  %409 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %407
  %410 = select i1 %215, i32* %408, i32* %409
  %411 = load i32, i32* %410, align 4
  %412 = mul nsw i32 %411, %406
  %413 = add nuw nsw i64 %387, 4
  %414 = add i32 %389, -4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %386

416:                                              ; preds = %386, %379
  %417 = phi i32 [ undef, %379 ], [ %412, %386 ]
  %418 = phi i64 [ 3, %379 ], [ %413, %386 ]
  %419 = phi i32 [ 1, %379 ], [ %412, %386 ]
  %420 = icmp eq i32 %382, 0
  br i1 %420, label %433, label %421

421:                                              ; preds = %416, %421
  %422 = phi i64 [ %430, %421 ], [ %418, %416 ]
  %423 = phi i32 [ %429, %421 ], [ %419, %416 ]
  %424 = phi i32 [ %431, %421 ], [ %382, %416 ]
  %425 = getelementptr inbounds i32, i32* %216, i64 %422
  %426 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 %422
  %427 = select i1 %215, i32* %425, i32* %426
  %428 = load i32, i32* %427, align 4
  %429 = mul nsw i32 %428, %423
  %430 = add nuw nsw i64 %422, 1
  %431 = add i32 %424, -1
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %421, !llvm.loop !231

433:                                              ; preds = %421, %416
  %434 = phi i32 [ %417, %416 ], [ %429, %421 ]
  %435 = sext i32 %434 to i64
  br label %436

436:                                              ; preds = %433, %375, %377
  %437 = phi i64 [ 0, %375 ], [ 1, %377 ], [ %435, %433 ]
  %438 = icmp eq i32 %223, 1
  br i1 %438, label %498, label %439

439:                                              ; preds = %436
  %440 = icmp sgt i32 %219, 1
  br i1 %440, label %441, label %498

441:                                              ; preds = %439
  %442 = add i32 %219, -1
  %443 = add i32 %219, -2
  %444 = and i32 %442, 3
  %445 = icmp ult i32 %443, 3
  br i1 %445, label %478, label %446

446:                                              ; preds = %441
  %447 = sub i32 %442, %444
  br label %448

448:                                              ; preds = %448, %446
  %449 = phi i64 [ 1, %446 ], [ %475, %448 ]
  %450 = phi i32 [ 1, %446 ], [ %474, %448 ]
  %451 = phi i32 [ %447, %446 ], [ %476, %448 ]
  %452 = getelementptr inbounds i32, i32* %221, i64 %449
  %453 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %449
  %454 = select i1 %220, i32* %452, i32* %453
  %455 = load i32, i32* %454, align 4
  %456 = mul nsw i32 %455, %450
  %457 = add nuw nsw i64 %449, 1
  %458 = getelementptr inbounds i32, i32* %221, i64 %457
  %459 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %457
  %460 = select i1 %220, i32* %458, i32* %459
  %461 = load i32, i32* %460, align 4
  %462 = mul nsw i32 %461, %456
  %463 = add nuw nsw i64 %449, 2
  %464 = getelementptr inbounds i32, i32* %221, i64 %463
  %465 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %463
  %466 = select i1 %220, i32* %464, i32* %465
  %467 = load i32, i32* %466, align 4
  %468 = mul nsw i32 %467, %462
  %469 = add nuw nsw i64 %449, 3
  %470 = getelementptr inbounds i32, i32* %221, i64 %469
  %471 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %469
  %472 = select i1 %220, i32* %470, i32* %471
  %473 = load i32, i32* %472, align 4
  %474 = mul nsw i32 %473, %468
  %475 = add nuw nsw i64 %449, 4
  %476 = add i32 %451, -4
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %448

478:                                              ; preds = %448, %441
  %479 = phi i32 [ undef, %441 ], [ %474, %448 ]
  %480 = phi i64 [ 1, %441 ], [ %475, %448 ]
  %481 = phi i32 [ 1, %441 ], [ %474, %448 ]
  %482 = icmp eq i32 %444, 0
  br i1 %482, label %495, label %483

483:                                              ; preds = %478, %483
  %484 = phi i64 [ %492, %483 ], [ %480, %478 ]
  %485 = phi i32 [ %491, %483 ], [ %481, %478 ]
  %486 = phi i32 [ %493, %483 ], [ %444, %478 ]
  %487 = getelementptr inbounds i32, i32* %221, i64 %484
  %488 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %484
  %489 = select i1 %220, i32* %487, i32* %488
  %490 = load i32, i32* %489, align 4
  %491 = mul nsw i32 %490, %485
  %492 = add nuw nsw i64 %484, 1
  %493 = add i32 %486, -1
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %483, !llvm.loop !232

495:                                              ; preds = %483, %478
  %496 = phi i32 [ %479, %478 ], [ %491, %483 ]
  %497 = sext i32 %496 to i64
  br label %498

498:                                              ; preds = %495, %436, %439
  %499 = phi i64 [ 0, %436 ], [ 1, %439 ], [ %497, %495 ]
  %500 = icmp eq i32 %236, 1
  br i1 %500, label %560, label %501

501:                                              ; preds = %498
  %502 = icmp sgt i32 %219, 2
  br i1 %502, label %503, label %560

503:                                              ; preds = %501
  %504 = add i32 %219, -2
  %505 = add i32 %219, -3
  %506 = and i32 %504, 3
  %507 = icmp ult i32 %505, 3
  br i1 %507, label %540, label %508

508:                                              ; preds = %503
  %509 = sub i32 %504, %506
  br label %510

510:                                              ; preds = %510, %508
  %511 = phi i64 [ 2, %508 ], [ %537, %510 ]
  %512 = phi i32 [ 1, %508 ], [ %536, %510 ]
  %513 = phi i32 [ %509, %508 ], [ %538, %510 ]
  %514 = getelementptr inbounds i32, i32* %221, i64 %511
  %515 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %511
  %516 = select i1 %220, i32* %514, i32* %515
  %517 = load i32, i32* %516, align 4
  %518 = mul nsw i32 %517, %512
  %519 = or i64 %511, 1
  %520 = getelementptr inbounds i32, i32* %221, i64 %519
  %521 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %519
  %522 = select i1 %220, i32* %520, i32* %521
  %523 = load i32, i32* %522, align 4
  %524 = mul nsw i32 %523, %518
  %525 = add nuw nsw i64 %511, 2
  %526 = getelementptr inbounds i32, i32* %221, i64 %525
  %527 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %525
  %528 = select i1 %220, i32* %526, i32* %527
  %529 = load i32, i32* %528, align 4
  %530 = mul nsw i32 %529, %524
  %531 = add nuw nsw i64 %511, 3
  %532 = getelementptr inbounds i32, i32* %221, i64 %531
  %533 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %531
  %534 = select i1 %220, i32* %532, i32* %533
  %535 = load i32, i32* %534, align 4
  %536 = mul nsw i32 %535, %530
  %537 = add nuw nsw i64 %511, 4
  %538 = add i32 %513, -4
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %510

540:                                              ; preds = %510, %503
  %541 = phi i32 [ undef, %503 ], [ %536, %510 ]
  %542 = phi i64 [ 2, %503 ], [ %537, %510 ]
  %543 = phi i32 [ 1, %503 ], [ %536, %510 ]
  %544 = icmp eq i32 %506, 0
  br i1 %544, label %557, label %545

545:                                              ; preds = %540, %545
  %546 = phi i64 [ %554, %545 ], [ %542, %540 ]
  %547 = phi i32 [ %553, %545 ], [ %543, %540 ]
  %548 = phi i32 [ %555, %545 ], [ %506, %540 ]
  %549 = getelementptr inbounds i32, i32* %221, i64 %546
  %550 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %546
  %551 = select i1 %220, i32* %549, i32* %550
  %552 = load i32, i32* %551, align 4
  %553 = mul nsw i32 %552, %547
  %554 = add nuw nsw i64 %546, 1
  %555 = add i32 %548, -1
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %545, !llvm.loop !233

557:                                              ; preds = %545, %540
  %558 = phi i32 [ %541, %540 ], [ %553, %545 ]
  %559 = sext i32 %558 to i64
  br label %560

560:                                              ; preds = %557, %498, %501
  %561 = phi i64 [ 0, %498 ], [ 1, %501 ], [ %559, %557 ]
  %562 = icmp eq i32 %250, 1
  br i1 %562, label %622, label %563

563:                                              ; preds = %560
  %564 = icmp sgt i32 %219, 3
  br i1 %564, label %565, label %622

565:                                              ; preds = %563
  %566 = add i32 %219, -3
  %567 = add i32 %219, -4
  %568 = and i32 %566, 3
  %569 = icmp ult i32 %567, 3
  br i1 %569, label %602, label %570

570:                                              ; preds = %565
  %571 = sub i32 %566, %568
  br label %572

572:                                              ; preds = %572, %570
  %573 = phi i64 [ 3, %570 ], [ %599, %572 ]
  %574 = phi i32 [ 1, %570 ], [ %598, %572 ]
  %575 = phi i32 [ %571, %570 ], [ %600, %572 ]
  %576 = getelementptr inbounds i32, i32* %221, i64 %573
  %577 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %573
  %578 = select i1 %220, i32* %576, i32* %577
  %579 = load i32, i32* %578, align 4
  %580 = mul nsw i32 %579, %574
  %581 = add nuw nsw i64 %573, 1
  %582 = getelementptr inbounds i32, i32* %221, i64 %581
  %583 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %581
  %584 = select i1 %220, i32* %582, i32* %583
  %585 = load i32, i32* %584, align 4
  %586 = mul nsw i32 %585, %580
  %587 = add nuw nsw i64 %573, 2
  %588 = getelementptr inbounds i32, i32* %221, i64 %587
  %589 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %587
  %590 = select i1 %220, i32* %588, i32* %589
  %591 = load i32, i32* %590, align 4
  %592 = mul nsw i32 %591, %586
  %593 = add nuw nsw i64 %573, 3
  %594 = getelementptr inbounds i32, i32* %221, i64 %593
  %595 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %593
  %596 = select i1 %220, i32* %594, i32* %595
  %597 = load i32, i32* %596, align 4
  %598 = mul nsw i32 %597, %592
  %599 = add nuw nsw i64 %573, 4
  %600 = add i32 %575, -4
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %572

602:                                              ; preds = %572, %565
  %603 = phi i32 [ undef, %565 ], [ %598, %572 ]
  %604 = phi i64 [ 3, %565 ], [ %599, %572 ]
  %605 = phi i32 [ 1, %565 ], [ %598, %572 ]
  %606 = icmp eq i32 %568, 0
  br i1 %606, label %619, label %607

607:                                              ; preds = %602, %607
  %608 = phi i64 [ %616, %607 ], [ %604, %602 ]
  %609 = phi i32 [ %615, %607 ], [ %605, %602 ]
  %610 = phi i32 [ %617, %607 ], [ %568, %602 ]
  %611 = getelementptr inbounds i32, i32* %221, i64 %608
  %612 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %608
  %613 = select i1 %220, i32* %611, i32* %612
  %614 = load i32, i32* %613, align 4
  %615 = mul nsw i32 %614, %609
  %616 = add nuw nsw i64 %608, 1
  %617 = add i32 %610, -1
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %607, !llvm.loop !234

619:                                              ; preds = %607, %602
  %620 = phi i32 [ %603, %602 ], [ %615, %607 ]
  %621 = sext i32 %620 to i64
  br label %622

622:                                              ; preds = %619, %560, %563
  %623 = phi i64 [ 0, %560 ], [ 1, %563 ], [ %621, %619 ]
  %624 = getelementptr inbounds i32, i32* %216, i64 3
  %625 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %626 = bitcast i8* %625 to i32*
  %627 = select i1 %215, i32* %624, i32* %626
  %628 = load i32, i32* %627, align 4
  %629 = getelementptr inbounds i32, i32* %221, i64 4
  %630 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1, i64 8
  %631 = bitcast i8* %630 to i32*
  %632 = select i1 %220, i32* %629, i32* %631
  %633 = load i32, i32* %632, align 4
  %634 = getelementptr inbounds i32, i32* %216, i64 4
  %635 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %636 = bitcast i8* %635 to i32*
  %637 = select i1 %215, i32* %634, i32* %636
  %638 = load i32, i32* %637, align 4
  %639 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %639) #11
  %640 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %10, i64 0, i32 0
  %641 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %10, i64 0, i32 1
  %642 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %10, i64 0, i32 2
  %643 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %10, i64 0, i32 4
  %644 = bitcast i8* %643 to i32*
  store i32 -1431655766, i32* %644, align 4
  %645 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %10, i64 0, i32 3
  %646 = bitcast float* %645 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %646, i8 0, i64 5, i1 false) #11
  store i32 1, i32* %640, align 4
  store i32 %628, i32* %641, align 4
  store i32 %638, i32* %642, align 4
  %647 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %647) #11
  %648 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %11, i64 0, i32 1
  %649 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %11, i64 0, i32 2
  %650 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %11, i64 0, i32 4
  %651 = bitcast i8* %650 to i32*
  store i32 -1431655766, i32* %651, align 4
  %652 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %652, i8 0, i64 17, i1 false)
  store i32 %638, i32* %648, align 4
  store i32 %633, i32* %649, align 4
  %653 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %653) #11
  %654 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %12, i64 0, i32 1
  %655 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %12, i64 0, i32 2
  %656 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %12, i64 0, i32 4
  %657 = bitcast i8* %656 to i32*
  store i32 -1431655766, i32* %657, align 4
  %658 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %658, i8 0, i64 17, i1 false)
  store i32 %628, i32* %654, align 4
  store i32 %633, i32* %655, align 4
  %659 = icmp sgt i32 %227, 0
  br i1 %659, label %660, label %671

660:                                              ; preds = %622
  %661 = icmp sgt i32 %240, 0
  %662 = icmp sgt i32 %254, 0
  %663 = mul i32 %633, %628
  %664 = bitcast %"struct.tflite::cpu_backend_gemm::GemmParams"* %13 to i8*
  %665 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %13, i64 0, i32 5
  %666 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %13, i64 0, i32 6
  %667 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %6, i64 0, i32 4
  %668 = zext i32 %227 to i64
  %669 = zext i32 %240 to i64
  %670 = zext i32 %254 to i64
  br label %684

671:                                              ; preds = %693, %622
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %653) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %647) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %639) #11
  %672 = xor i1 %220, true
  %673 = icmp eq i32* %221, null
  %674 = or i1 %673, %672
  br i1 %674, label %677, label %675

675:                                              ; preds = %671
  %676 = bitcast i32* %221 to i8*
  call void @_ZdaPv(i8* %676) #10
  br label %677

677:                                              ; preds = %671, %675
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #11
  %678 = xor i1 %215, true
  %679 = icmp eq i32* %216, null
  %680 = or i1 %679, %678
  br i1 %680, label %683, label %681

681:                                              ; preds = %677
  %682 = bitcast i32* %216 to i8*
  call void @_ZdaPv(i8* %682) #10
  br label %683

683:                                              ; preds = %677, %681
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  ret void

684:                                              ; preds = %693, %660
  %685 = phi i64 [ 0, %660 ], [ %694, %693 ]
  %686 = mul nsw i64 %685, %315
  %687 = getelementptr inbounds float, float* %1, i64 %686
  %688 = mul nsw i64 %685, %499
  %689 = getelementptr inbounds float, float* %3, i64 %688
  br i1 %661, label %690, label %693

690:                                              ; preds = %684
  %691 = trunc i64 %685 to i32
  %692 = mul i32 %240, %691
  br label %696

693:                                              ; preds = %706, %684
  %694 = add nuw nsw i64 %685, 1
  %695 = icmp eq i64 %694, %668
  br i1 %695, label %671, label %684

696:                                              ; preds = %706, %690
  %697 = phi i64 [ 0, %690 ], [ %707, %706 ]
  %698 = mul nsw i64 %697, %376
  %699 = getelementptr inbounds float, float* %687, i64 %698
  %700 = mul nsw i64 %697, %561
  %701 = getelementptr inbounds float, float* %689, i64 %700
  br i1 %662, label %702, label %706

702:                                              ; preds = %696
  %703 = trunc i64 %697 to i32
  %704 = add i32 %692, %703
  %705 = mul i32 %704, %254
  br label %709

706:                                              ; preds = %724, %696
  %707 = add nuw nsw i64 %697, 1
  %708 = icmp eq i64 %707, %669
  br i1 %708, label %693, label %696

709:                                              ; preds = %724, %702
  %710 = phi i64 [ 0, %702 ], [ %725, %724 ]
  %711 = mul nsw i64 %710, %437
  %712 = getelementptr inbounds float, float* %699, i64 %711
  %713 = mul nsw i64 %710, %623
  %714 = getelementptr inbounds float, float* %701, i64 %713
  %715 = trunc i64 %710 to i32
  %716 = add i32 %705, %715
  %717 = mul i32 %663, %716
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds float, float* %5, i64 %718
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %664) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %664, i8 0, i64 32, i1 false) #11
  store float 0xFFF0000000000000, float* %665, align 8
  store float 0x7FF0000000000000, float* %666, align 4
  %720 = load i8, i8* %667, align 4, !range !2
  %721 = icmp eq i8 %720, 0
  br i1 %721, label %723, label %722

722:                                              ; preds = %709
  call void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIffffLNS0_18QuantizationFlavorE0EE3RunERKNS0_12MatrixParamsIfEEPKfS8_SA_S8_PfRKNS0_10GemmParamsIffLS3_0EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %10, float* %712, %"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %11, float* %714, %"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %12, float* %719, %"struct.tflite::cpu_backend_gemm::GemmParams"* nonnull dereferenceable(40) %13, %"class.tflite::CpuBackendContext"* %6) #11
  br label %724

723:                                              ; preds = %709
  call void @_ZN6tflite16cpu_backend_gemm6detail18GemmImplUsingEigen3RunERKNS0_12MatrixParamsIfEEPKfS6_S8_S6_PfRKNS0_10GemmParamsIffLNS0_18QuantizationFlavorE0EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %10, float* %712, %"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %11, float* %714, %"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %12, float* %719, %"struct.tflite::cpu_backend_gemm::GemmParams"* nonnull dereferenceable(40) %13, %"class.tflite::CpuBackendContext"* %6) #11
  br label %724

724:                                              ; preds = %722, %723
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %664) #11
  %725 = add nuw nsw i64 %710, 1
  %726 = icmp eq i64 %725, %670
  br i1 %726, label %706, label %709
}

declare %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin12batch_matmul13EvalQuantizedILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %108 [
    i32 1, label %12
    i32 9, label %66
  ]

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %20 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %19, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 %21
  br label %23

23:                                               ; preds = %12, %18
  %24 = phi %struct.TfLiteTensor* [ %22, %18 ], [ null, %12 ]
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %23 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 4
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %33 ]
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 5
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %50 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %49, align 8
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 %51
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi %struct.TfLiteTensor* [ %52, %48 ], [ null, %43 ]
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 6
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %60 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %59, align 8
  %61 = sext i32 %56 to i64
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 %61
  br label %63

63:                                               ; preds = %53, %58
  %64 = phi %struct.TfLiteTensor* [ %62, %58 ], [ null, %53 ]
  %65 = tail call i32 @_ZN6tflite3ops7builtin12batch_matmul10EvalHybridILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_SI_SI_SI_SI_SI_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::batch_matmul::OpData"* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %struct.TfLiteTensor* %4, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, %struct.TfLiteTensor* %6, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44, %struct.TfLiteTensor* %64, %struct.TfLiteTensor* %54, %struct.TfLiteTensor* %7)
  br label %111

66:                                               ; preds = %8
  %67 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #11
  %68 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %70, align 8, !alias.scope !235
  br label %96

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %73 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %72, align 8, !noalias !235
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4, !noalias !235
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 0
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %75, i32* %77, align 8, !alias.scope !235
  %78 = icmp sgt i32 %75, 5
  br i1 %78, label %79, label %86

79:                                               ; preds = %71
  %80 = sext i32 %75 to i64
  %81 = shl nsw i64 %80, 2
  %82 = tail call i8* @_Znam(i64 %81) #10, !noalias !235
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %84 = bitcast i32** %83 to i8**
  store i8* %82, i8** %84, align 8, !alias.scope !235
  %85 = bitcast i8* %82 to i32*
  br label %91

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %88 = bitcast %union.anon* %87 to i32*
  %89 = sext i32 %75 to i64
  %90 = shl nsw i64 %89, 2
  br label %91

91:                                               ; preds = %86, %79
  %92 = phi i64 [ %81, %79 ], [ %90, %86 ]
  %93 = phi i32* [ %85, %79 ], [ %88, %86 ]
  %94 = bitcast i32* %93 to i8*
  %95 = bitcast i32* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 %92, i1 false) #11
  br label %96

96:                                               ; preds = %69, %91
  %97 = call i32 @_ZN6tflite3ops7builtin12batch_matmul8EvalInt8ILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextPKNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSD_SG_SD_PSE_(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::batch_matmul::OpData"* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %struct.TfLiteTensor* %4, %"class.tflite::RuntimeShape"* dereferenceable(32) %5, %struct.TfLiteTensor* %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %struct.TfLiteTensor* %7)
  %98 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp sgt i32 %99, 5
  br i1 %100, label %101, label %107

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = icmp eq i32* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = bitcast i32* %103 to i8*
  call void @_ZdaPv(i8* %106) #10
  br label %107

107:                                              ; preds = %96, %101, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #11
  br label %111

108:                                              ; preds = %8
  %109 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %110 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %109, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %110(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0)) #11
  br label %111

111:                                              ; preds = %108, %107, %63
  %112 = phi i32 [ %65, %63 ], [ %97, %107 ], [ 1, %108 ]
  ret i32 %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIffffLNS0_18QuantizationFlavorE0EE3RunERKNS0_12MatrixParamsIfEEPKfS8_SA_S8_PfRKNS0_10GemmParamsIffLS3_0EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::GemmParams"* dereferenceable(40), %"class.tflite::CpuBackendContext"*) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %"struct.ruy::Mat", align 8
  %10 = alloca %"struct.ruy::Mat", align 8
  %11 = alloca %"struct.ruy::Mat", align 8
  %12 = alloca %"class.ruy::MulParams", align 8
  %13 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 4
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  %19 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = select i1 %18, i32 %22, i32 %20
  %24 = ptrtoint float* %1 to i64
  %25 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 3
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  br i1 %15, label %28, label %35

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 4
  %30 = load i8, i8* %29, align 4
  %31 = icmp eq i8 %30, 1
  %32 = zext i1 %31 to i8
  %33 = icmp eq i8 %30, 2
  %34 = select i1 %33, i8 3, i8 %32
  br label %35

35:                                               ; preds = %8, %28
  %36 = phi i8 [ %34, %28 ], [ 0, %8 ]
  %37 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = select i1 %39, i32 %43, i32 %41
  %45 = ptrtoint float* %3 to i64
  %46 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 3
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4
  br i1 %15, label %49, label %56

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 4
  %51 = load i8, i8* %50, align 4
  %52 = icmp eq i8 %51, 1
  %53 = zext i1 %52 to i8
  %54 = icmp eq i8 %51, 2
  %55 = select i1 %54, i8 3, i8 %53
  br label %56

56:                                               ; preds = %35, %49
  %57 = phi i8 [ %55, %49 ], [ 0, %35 ]
  %58 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %4, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp ne i32 %59, 0
  %61 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %4, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %4, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = select i1 %60, i32 %64, i32 %62
  %66 = ptrtoint float* %5 to i64
  %67 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %4, i64 0, i32 3
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = bitcast %"class.ruy::MulParams"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 1
  %72 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 2
  %73 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 3
  %74 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 5
  %75 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 6
  %76 = bitcast %"struct.tflite::cpu_backend_gemm::GemmParams"* %6 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = bitcast float* %71 to i32*
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  store i32 %80, i32* %72, align 4
  %81 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 2
  %82 = bitcast float** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8
  %84 = bitcast float** %73 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %84, align 8
  %85 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 4
  %86 = bitcast float** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.ruy::MulParams"* %12 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 5
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 8
  %92 = bitcast float* %74 to i32*
  store i32 %91, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 6
  %94 = bitcast float* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = bitcast float* %75 to i32*
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.ruy::Context"*, %"class.ruy::Context"** %97, align 8
  %99 = bitcast %"struct.ruy::Mat"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %99) #11
  %100 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %9, i64 0, i32 1, i32 2
  %101 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %9, i64 0, i32 2
  %102 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %9, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 24, i1 false) #11, !alias.scope !238
  %103 = bitcast i8* %102 to i32*
  store i32 -1431655936, i32* %103, align 4, !alias.scope !238
  %104 = bitcast %"struct.ruy::Mat"* %9 to i64*
  store i64 %24, i64* %104, align 8, !alias.scope !238
  %105 = zext i32 %23 to i64
  %106 = zext i1 %18 to i64
  %107 = shl nuw nsw i64 %106, 32
  %108 = or i64 %107, %105
  %109 = zext i32 %22 to i64
  %110 = shl nuw i64 %109, 32
  %111 = zext i32 %20 to i64
  %112 = or i64 %110, %111
  %113 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %9, i64 0, i32 1
  %114 = bitcast %"struct.ruy::MatLayout"* %113 to i64*
  store i64 %112, i64* %114, align 8, !alias.scope !238
  %115 = bitcast i32* %100 to i40*
  %116 = trunc i64 %108 to i40
  store i40 %116, i40* %115, align 8, !alias.scope !238
  %117 = bitcast float* %101 to i32*
  store i32 %27, i32* %117, align 8, !alias.scope !238
  store i8 %36, i8* %102, align 4, !alias.scope !238
  %118 = bitcast %"struct.ruy::Mat"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #11
  %119 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %10, i64 0, i32 1, i32 2
  %120 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %10, i64 0, i32 2
  %121 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %10, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 24, i1 false) #11, !alias.scope !241
  %122 = bitcast i8* %121 to i32*
  store i32 -1431655936, i32* %122, align 4, !alias.scope !241
  %123 = bitcast %"struct.ruy::Mat"* %10 to i64*
  store i64 %45, i64* %123, align 8, !alias.scope !241
  %124 = zext i32 %44 to i64
  %125 = zext i1 %39 to i64
  %126 = shl nuw nsw i64 %125, 32
  %127 = or i64 %126, %124
  %128 = zext i32 %43 to i64
  %129 = shl nuw i64 %128, 32
  %130 = zext i32 %41 to i64
  %131 = or i64 %129, %130
  %132 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %10, i64 0, i32 1
  %133 = bitcast %"struct.ruy::MatLayout"* %132 to i64*
  store i64 %131, i64* %133, align 8, !alias.scope !241
  %134 = bitcast i32* %119 to i40*
  %135 = trunc i64 %127 to i40
  store i40 %135, i40* %134, align 8, !alias.scope !241
  %136 = bitcast float* %120 to i32*
  store i32 %48, i32* %136, align 8, !alias.scope !241
  store i8 %57, i8* %121, align 4, !alias.scope !241
  %137 = bitcast %"struct.ruy::Mat"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %137) #11
  %138 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %11, i64 0, i32 1, i32 2
  %139 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %11, i64 0, i32 2
  %140 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 24, i1 false) #11, !alias.scope !244
  %141 = bitcast i8* %140 to i32*
  store i32 -1431655936, i32* %141, align 4, !alias.scope !244
  %142 = bitcast %"struct.ruy::Mat"* %11 to i64*
  store i64 %66, i64* %142, align 8, !alias.scope !244
  %143 = zext i32 %65 to i64
  %144 = zext i1 %60 to i64
  %145 = shl nuw nsw i64 %144, 32
  %146 = or i64 %145, %143
  %147 = zext i32 %64 to i64
  %148 = shl nuw i64 %147, 32
  %149 = zext i32 %62 to i64
  %150 = or i64 %148, %149
  %151 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %11, i64 0, i32 1
  %152 = bitcast %"struct.ruy::MatLayout"* %151 to i64*
  store i64 %150, i64* %152, align 8, !alias.scope !244
  %153 = bitcast i32* %138 to i40*
  %154 = trunc i64 %146 to i40
  store i40 %154, i40* %153, align 8, !alias.scope !244
  %155 = bitcast float* %139 to i32*
  store i32 %69, i32* %155, align 8, !alias.scope !244
  %156 = tail call %"class.ruy::Ctx"* @_ZN3ruy7get_ctxEPNS_7ContextE(%"class.ruy::Context"* %98) #11
  call void @_ZN3ruy11DispatchMulILNS_4PathE26EfffNS_9MulParamsIffEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat"* nonnull dereferenceable(32) %9, %"struct.ruy::Mat"* nonnull dereferenceable(32) %10, %"class.ruy::MulParams"* nonnull dereferenceable(40) %12, %"class.ruy::Ctx"* %156, %"struct.ruy::Mat"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %99) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #11
  ret void
}

declare void @_ZN6tflite16cpu_backend_gemm6detail18GemmImplUsingEigen3RunERKNS0_12MatrixParamsIfEEPKfS6_S8_S6_PfRKNS0_10GemmParamsIffLNS0_18QuantizationFlavorE0EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::GemmParams"* dereferenceable(40), %"class.tflite::CpuBackendContext"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy11DispatchMulILNS_4PathE26EfffNS_9MulParamsIffEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat"* dereferenceable(32), %"struct.ruy::Mat"* dereferenceable(32), %"class.ruy::MulParams"* dereferenceable(40), %"class.ruy::Ctx"*, %"struct.ruy::Mat"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.ruy::TrMulParams", align 8
  %7 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 1, i32 1
  %8 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %4, i64 0, i32 2
  %11 = tail call zeroext i8 @_ZN3ruy3Ctx10SelectPathENS_4PathE(%"class.ruy::Ctx"* %3, i8 zeroext 26) #11
  %12 = bitcast %"struct.ruy::Mat"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %7, align 4
  %17 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 1, i32 3
  %20 = load i8, i8* %19, align 4
  %21 = load float, float* %8, align 8
  %22 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 3
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %20, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 272, i1 false)
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 4
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 5
  %31 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 2
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 4
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 5
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 2
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 2
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 5
  store i8 0, i8* %39, align 4
  %40 = bitcast i8** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 21, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 0
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 1
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 2
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  %47 = bitcast i8** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 11, i1 false) #11
  %48 = bitcast i8** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 22, i1 false) #11
  %49 = bitcast %"class.ruy::SidePair"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %46, align 1
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 0
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 1
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 2
  store i8 0, i8* %54, align 2
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 2
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 5
  %57 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  %58 = bitcast i8** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 11, i1 false) #11
  %59 = bitcast i8** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 22, i1 false) #11
  store i8 1, i8* %57, align 1
  %60 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %60, align 1
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 1
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 7
  %65 = fptosi float %21 to i32
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3
  %67 = bitcast %"class.ruy::SidePair.37"* %66 to i24*
  store i24 262401, i24* %67, align 8
  %68 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 -86, i64 5, i1 false) #11
  %69 = bitcast i8** %28 to i64*
  store i64 %13, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  store i32 %16, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  store i32 %15, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 2
  store i32 %18, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  store i8 %25, i8* %73, align 4
  %74 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %74, i8 -86, i64 3, i1 false) #11
  store i32 %65, i32* %29, align 8
  store i8 %23, i8* %30, align 4
  %75 = bitcast %"struct.ruy::Mat"* %1 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !247
  %77 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1
  %78 = bitcast %"struct.ruy::MatLayout"* %77 to i8*
  %79 = load float, float* %9, align 8, !noalias !247
  %80 = fptosi float %79 to i32
  %81 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 3
  %82 = load i8, i8* %81, align 4, !noalias !247
  %83 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1
  %84 = bitcast %"struct.ruy::EMat"* %83 to i24*
  store i24 262401, i24* %84, align 8
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 -86, i64 5, i1 false) #11
  %86 = bitcast i8** %31 to i64*
  store i64 %76, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3
  %88 = bitcast %"struct.ruy::MatLayout"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %78, i64 13, i1 false)
  %89 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %89, i8 -86, i64 3, i1 false) #11
  store i32 %80, i32* %32, align 8
  store i8 %82, i8* %33, align 4
  %90 = bitcast %"struct.ruy::Mat"* %4 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !250
  %92 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %4, i64 0, i32 1
  %93 = bitcast %"struct.ruy::MatLayout"* %92 to i8*
  %94 = load float, float* %10, align 8, !noalias !250
  %95 = fptosi float %94 to i32
  %96 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %4, i64 0, i32 3
  %97 = load i8, i8* %96, align 4, !noalias !250
  %98 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4
  %99 = bitcast %"struct.ruy::EMat"* %98 to i24*
  store i24 262401, i24* %99, align 8
  %100 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %100, i8 -86, i64 5, i1 false) #11
  %101 = bitcast i8** %37 to i64*
  store i64 %91, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3
  %103 = bitcast %"struct.ruy::MatLayout"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 4 %93, i64 13, i1 false)
  %104 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %104, i8 -86, i64 3, i1 false) #11
  store i32 %95, i32* %38, align 8
  store i8 %97, i8* %39, align 4
  %105 = bitcast i8** %64 to %"class.ruy::MulParams"**
  store %"class.ruy::MulParams"* %2, %"class.ruy::MulParams"** %105, align 8
  %106 = icmp eq i8 %11, 16
  br i1 %106, label %107, label %196

107:                                              ; preds = %5
  br i1 %24, label %116, label %108

108:                                              ; preds = %107
  %109 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %110 = load i8, i8* %109, align 4
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 3
  %114 = load i8, i8* %113, align 4
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %154, label %116

116:                                              ; preds = %107, %112, %108
  store i8 2, i8* %26, align 8
  %117 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %118 = bitcast %"struct.ruy::PEMat"* %117 to i24*
  store i24 262401, i24* %118, align 8
  %119 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %120 = bitcast %"struct.ruy::Type"* %119 to i24*
  store i24 262401, i24* %120, align 8
  %121 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %16, i32* %122, align 8
  %123 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %124, align 1
  store i8 1, i8* %46, align 1
  store i8 1, i8* %50, align 1
  %125 = and i32 %16, 255
  %126 = icmp eq i32 %125, 0
  %127 = add nsw i32 %16, 64
  %128 = select i1 %126, i32 %127, i32 %16
  %129 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %128, i32* %129, align 8
  %130 = sitofp i32 %65 to float
  %131 = fptosi float %130 to i32
  store i32 %131, i32* %51, align 8
  %132 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %133 = bitcast %"struct.ruy::PEMat"* %132 to i24*
  store i24 262401, i24* %133, align 8
  %134 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %135 = bitcast %"struct.ruy::Type"* %134 to i24*
  store i24 262401, i24* %135, align 8
  %136 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %136, align 4
  %137 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %138, i32* %139, align 8
  %140 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %143, align 1
  store i8 1, i8* %57, align 1
  store i8 1, i8* %60, align 1
  %144 = and i32 %138, 255
  %145 = icmp eq i32 %144, 0
  %146 = add nsw i32 %138, 64
  %147 = select i1 %145, i32 %146, i32 %138
  %148 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %147, i32* %148, align 8
  %149 = sitofp i32 %80 to float
  %150 = fptosi float %149 to i32
  store i32 %150, i32* %61, align 8
  %151 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %152 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %151 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %152, align 8
  %153 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %153, align 8
  br label %197

154:                                              ; preds = %112
  store i8 16, i8* %26, align 8
  %155 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %156 = bitcast %"struct.ruy::PEMat"* %155 to i24*
  store i24 262401, i24* %156, align 8
  %157 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %158 = bitcast %"struct.ruy::Type"* %157 to i24*
  store i24 262401, i24* %158, align 8
  %159 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %159, align 4
  %160 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %16, i32* %160, align 8
  %161 = add i32 %15, 15
  %162 = and i32 %161, -16
  %163 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %162, i32* %163, align 4
  %164 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 1, i8* %164, align 1
  store i8 1, i8* %46, align 1
  store i8 16, i8* %50, align 1
  %165 = and i32 %16, 255
  %166 = icmp eq i32 %165, 0
  %167 = add nsw i32 %16, 64
  %168 = select i1 %166, i32 %167, i32 %16
  %169 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %168, i32* %169, align 8
  %170 = sitofp i32 %65 to float
  %171 = fptosi float %170 to i32
  store i32 %171, i32* %51, align 8
  %172 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %173 = bitcast %"struct.ruy::PEMat"* %172 to i24*
  store i24 262401, i24* %173, align 8
  %174 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %175 = bitcast %"struct.ruy::Type"* %174 to i24*
  store i24 262401, i24* %175, align 8
  %176 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %176, align 4
  %177 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %178, i32* %179, align 8
  %180 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = add i32 %181, 15
  %183 = and i32 %182, -16
  %184 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %183, i32* %184, align 4
  %185 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 1, i8* %185, align 1
  store i8 1, i8* %57, align 1
  store i8 16, i8* %60, align 1
  %186 = and i32 %178, 255
  %187 = icmp eq i32 %186, 0
  %188 = add nsw i32 %178, 64
  %189 = select i1 %187, i32 %188, i32 %178
  %190 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %189, i32* %190, align 8
  %191 = sitofp i32 %80 to float
  %192 = fptosi float %191 to i32
  store i32 %192, i32* %61, align 8
  %193 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %194 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %193 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %194, align 8
  %195 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE16EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %195, align 8
  br label %197

196:                                              ; preds = %5
  call void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EfffNS_9MulParamsIffEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext %11, %"struct.ruy::TrMulParams"* nonnull %6) #11
  br label %197

197:                                              ; preds = %154, %116, %196
  call void @_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3)
  call void @_ZN3ruy5TrMulEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3) #11
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %26) #11
  ret void
}

declare %"class.ruy::Ctx"* @_ZN3ruy7get_ctxEPNS_7ContextE(%"class.ruy::Context"*) local_unnamed_addr #4

declare zeroext i8 @_ZN3ruy3Ctx10SelectPathENS_4PathE(%"class.ruy::Ctx"*, i8 zeroext) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"*, %"class.ruy::Ctx"*) local_unnamed_addr #8 comdat {
  %3 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4
  %5 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  switch i8 %4, label %31 [
    i8 2, label %10
    i8 3, label %15
    i8 1, label %13
  ]

10:                                               ; preds = %2
  %11 = shl nuw nsw i32 %9, 2
  %12 = icmp sgt i32 %6, %11
  br i1 %12, label %31, label %15

13:                                               ; preds = %2
  %14 = icmp sgt i32 %6, %9
  br i1 %14, label %31, label %15

15:                                               ; preds = %10, %13, %2
  %16 = tail call %"class.ruy::PrepackedCache"* @_ZN3ruy3Ctx17GetPrepackedCacheEv(%"class.ruy::Ctx"* %1) #11
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %20 = tail call i32 @_ZN3ruy14PrepackedCache3GetEPKvPNS_5PEMatE(%"class.ruy::PrepackedCache"* %16, i8* %18, %"struct.ruy::PEMat"* %19) #11
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %15
  %23 = tail call i32 @_ZN3ruy3Ctx19GetMainThreadTuningEv(%"class.ruy::Ctx"* %1) #11
  %24 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 0
  %27 = load void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %26, align 8
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0
  tail call void %27(i32 %23, %"struct.ruy::EMat"* dereferenceable(40) %28, %"struct.ruy::PEMat"* %19, i32 0, i32 %25) #11
  br label %29

29:                                               ; preds = %22, %15
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 6, i32 0, i64 0
  store i8 1, i8* %30, align 1
  br label %31

31:                                               ; preds = %10, %13, %2, %29
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 5
  %33 = load i8, i8* %32, align 4
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  switch i8 %33, label %60 [
    i8 2, label %41
    i8 3, label %44
    i8 1, label %39
  ]

39:                                               ; preds = %31
  %40 = icmp sgt i32 %35, %38
  br i1 %40, label %60, label %44

41:                                               ; preds = %31
  %42 = shl nuw nsw i32 %38, 2
  %43 = icmp sgt i32 %35, %42
  br i1 %43, label %60, label %44

44:                                               ; preds = %41, %39, %31
  %45 = tail call %"class.ruy::PrepackedCache"* @_ZN3ruy3Ctx17GetPrepackedCacheEv(%"class.ruy::Ctx"* %1) #11
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %49 = tail call i32 @_ZN3ruy14PrepackedCache3GetEPKvPNS_5PEMatE(%"class.ruy::PrepackedCache"* %45, i8* %47, %"struct.ruy::PEMat"* %48) #11
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %58

51:                                               ; preds = %44
  %52 = tail call i32 @_ZN3ruy3Ctx19GetMainThreadTuningEv(%"class.ruy::Ctx"* %1) #11
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 1
  %56 = load void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %55, align 8
  %57 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1
  tail call void %56(i32 %52, %"struct.ruy::EMat"* dereferenceable(40) %57, %"struct.ruy::PEMat"* %48, i32 0, i32 %54) #11
  br label %58

58:                                               ; preds = %51, %44
  %59 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 6, i32 0, i64 1
  store i8 1, i8* %59, align 1
  br label %60

60:                                               ; preds = %58, %41, %39, %31
  ret void
}

declare void @_ZN3ruy5TrMulEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"*, %"class.ruy::Ctx"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %7 = bitcast i8** %6 to float**
  %8 = load float*, float** %7, align 8, !noalias !253
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %14 = bitcast i8** %13 to float**
  %15 = load float*, float** %14, align 8, !noalias !256
  %16 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %3, %4
  br i1 %18, label %19, label %38

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %3 to i64
  %23 = sext i32 %4 to i64
  %24 = sext i32 %12 to i64
  br label %25

25:                                               ; preds = %19, %25
  %26 = phi i64 [ %22, %19 ], [ %36, %25 ]
  %27 = mul nsw i64 %26, %24
  %28 = getelementptr inbounds float, float* %8, i64 %27
  %29 = trunc i64 %26 to i32
  %30 = and i32 %29, -16
  %31 = mul nsw i32 %30, %17
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float, float* %15, i64 %32
  %34 = trunc i64 %26 to i32
  %35 = sub i32 %21, %34
  tail call void @_ZN3ruy15PackFloatAvx512EPKfS1_iiiPf(float* %28, float* getelementptr inbounds ([16 x float], [16 x float]* @_ZZN3ruy8PackImplILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEiiE7zerobuf, i64 0, i64 0), i32 %12, i32 %35, i32 %10, float* %33) #11
  %36 = add i64 %26, 16
  %37 = icmp slt i64 %36, %23
  br i1 %37, label %25, label %38

38:                                               ; preds = %25, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE16EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.35"* dereferenceable(112), i8*, %"class.ruy::SidePair.36"* dereferenceable(8), %"class.ruy::SidePair.36"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParamsFloat", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = bitcast i8** %8 to float**
  %10 = load float*, float** %9, align 8, !noalias !259
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 2
  %18 = bitcast i8** %17 to float**
  %19 = load float*, float** %18, align 8, !noalias !262
  %20 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 2
  %25 = bitcast i8** %24 to float**
  %26 = load float*, float** %25, align 8, !noalias !265
  %27 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %"struct.ruy::KernelParamsFloat"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1176, i8* nonnull %37) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 bitcast (%"struct.ruy::KernelParamsFloat"* @__const._ZNK3ruy6KernelILNS_4PathE16EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE.params to i8*), i64 1176, i1 false) #11
  %38 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 18, i64 0
  %39 = bitcast float* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 64, i1 false) #11
  %40 = mul nsw i32 %30, %23
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds float, float* %19, i64 %41
  %43 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 0
  store float* %42, float** %43, align 8
  %44 = mul nsw i32 %32, %28
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float, float* %26, i64 %45
  %47 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 1
  store float* %46, float** %47, align 8
  %48 = mul nsw i32 %32, %16
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, float* %10, i64 %49
  %51 = sext i32 %30 to i64
  %52 = getelementptr inbounds float, float* %50, i64 %51
  %53 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 2
  store float* %52, float** %53, align 8
  %54 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 3
  %55 = bitcast i8* %2 to float**
  %56 = load float*, float** %55, align 8
  %57 = icmp eq float* %56, null
  %58 = select i1 %57, float* %38, float* %56
  store float* %58, float** %54, align 8
  %59 = xor i1 %57, true
  %60 = zext i1 %59 to i8
  %61 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 16
  store i8 %60, i8* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 4
  store i32 %30, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 5
  store i32 %32, i32* %63, align 4
  %64 = add nsw i32 %34, -16
  %65 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 6
  store i32 %64, i32* %65, align 8
  %66 = add nsw i32 %36, -16
  %67 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 7
  store i32 %66, i32* %67, align 4
  %68 = shl i32 %23, 2
  %69 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 10
  store i32 %68, i32* %69, align 8
  %70 = shl i32 %28, 2
  %71 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 11
  store i32 %70, i32* %71, align 4
  %72 = shl i32 %16, 2
  %73 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 12
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 13
  store i32 %21, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %2, i64 32
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 14
  %79 = bitcast float* %78 to i32*
  store i32 %77, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %2, i64 36
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 15
  %84 = bitcast float* %83 to i32*
  store i32 %82, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 8
  store i32 %12, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 9
  store i32 %14, i32* %86, align 4
  %87 = icmp eq i32 %14, 1
  br i1 %87, label %88, label %89

88:                                               ; preds = %6
  call void @_ZN3ruy26KernelFloatAvx512SingleColERKNS_17KernelParamsFloatILi16ELi16EEE(%"struct.ruy::KernelParamsFloat"* nonnull dereferenceable(1176) %7) #11
  br label %90

89:                                               ; preds = %6
  call void @_ZN3ruy17KernelFloatAvx512ERKNS_17KernelParamsFloatILi16ELi16EEE(%"struct.ruy::KernelParamsFloat"* nonnull dereferenceable(1176) %7) #11
  br label %90

90:                                               ; preds = %88, %89
  call void @llvm.lifetime.end.p0i8(i64 1176, i8* nonnull %37) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca %"struct.ruy::Mat", align 8
  %7 = alloca %"struct.ruy::PMat", align 8
  %8 = bitcast %"struct.ruy::Mat"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %6, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %6, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false) #11, !alias.scope !268
  %12 = bitcast i8* %10 to i32*
  store i32 -1431655936, i32* %12, align 4, !alias.scope !268
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !268
  %16 = bitcast %"struct.ruy::Mat"* %6 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !268
  %17 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3
  %18 = bitcast %"struct.ruy::MatLayout"* %11 to i8*
  %19 = bitcast %"struct.ruy::MatLayout"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 13, i1 false) #11
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !noalias !268
  %22 = sitofp i32 %21 to float
  store float %22, float* %9, align 8, !alias.scope !268
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 5
  %24 = load i8, i8* %23, align 4, !noalias !268
  store i8 %24, i8* %10, align 4, !alias.scope !268
  %25 = bitcast %"struct.ruy::PMat"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %7, i64 0, i32 3
  %27 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %28 = bitcast i8** %27 to i64*
  %29 = bitcast %"struct.ruy::PMat"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 40, i1 false)
  %30 = load i64, i64* %28, align 8, !noalias !271
  %31 = bitcast %"struct.ruy::PMat"* %7 to i64*
  store i64 %30, i64* %31, align 8, !alias.scope !271
  %32 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !271
  %35 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %7, i64 0, i32 1
  %36 = bitcast float** %35 to i64*
  store i64 %34, i64* %36, align 8, !alias.scope !271
  %37 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6
  %38 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %7, i64 0, i32 2
  %39 = bitcast %"struct.ruy::PMatLayout"* %38 to i8*
  %40 = bitcast %"struct.ruy::PMatLayout"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 4 %40, i64 16, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %42 = load i32, i32* %41, align 8, !noalias !271
  store i32 %42, i32* %26, align 8, !alias.scope !271
  call void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEii(i32 %0, %"struct.ruy::Mat"* nonnull dereferenceable(32) %6, %"struct.ruy::PMat"* nonnull %7, i32 %3, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.35"* dereferenceable(112), i8*, %"class.ruy::SidePair.36"* dereferenceable(8), %"class.ruy::SidePair.36"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::Kernel", align 1
  %8 = alloca %"struct.ruy::Mat", align 8
  %9 = alloca %"struct.ruy::PMat", align 8
  %10 = alloca %"struct.ruy::PMat", align 8
  %11 = bitcast %"struct.ruy::Mat"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11, !alias.scope !274
  %15 = bitcast i8* %13 to i32*
  store i32 -1431655936, i32* %15, align 4, !alias.scope !274
  %16 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !274
  %19 = bitcast %"struct.ruy::Mat"* %8 to i64*
  store i64 %18, i64* %19, align 8, !alias.scope !274
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3
  %21 = bitcast %"struct.ruy::MatLayout"* %14 to i8*
  %22 = bitcast %"struct.ruy::MatLayout"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 13, i1 false) #11
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %24 = load i32, i32* %23, align 8, !noalias !274
  %25 = sitofp i32 %24 to float
  store float %25, float* %12, align 8, !alias.scope !274
  %26 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 5
  %27 = load i8, i8* %26, align 4, !noalias !274
  store i8 %27, i8* %13, align 4, !alias.scope !274
  %28 = bitcast %"struct.ruy::PMat"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false) #11, !alias.scope !277
  %29 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %9, i64 0, i32 3
  %30 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 2
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !277
  %33 = bitcast %"struct.ruy::PMat"* %9 to i64*
  store i64 %32, i64* %33, align 8, !alias.scope !277
  %34 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 5
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !277
  %37 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %9, i64 0, i32 1
  %38 = bitcast float** %37 to i64*
  store i64 %36, i64* %38, align 8, !alias.scope !277
  %39 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6
  %40 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %9, i64 0, i32 2
  %41 = bitcast %"struct.ruy::PMatLayout"* %40 to i8*
  %42 = bitcast %"struct.ruy::PMatLayout"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 4 %42, i64 16, i1 false) #11
  %43 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 7
  %44 = load i32, i32* %43, align 8, !noalias !277
  store i32 %44, i32* %29, align 8, !alias.scope !277
  %45 = bitcast %"struct.ruy::PMat"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 40, i1 false) #11, !alias.scope !280
  %46 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %10, i64 0, i32 3
  %47 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 2
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !280
  %50 = bitcast %"struct.ruy::PMat"* %10 to i64*
  store i64 %49, i64* %50, align 8, !alias.scope !280
  %51 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 5
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !280
  %54 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %10, i64 0, i32 1
  %55 = bitcast float** %54 to i64*
  store i64 %53, i64* %55, align 8, !alias.scope !280
  %56 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 6
  %57 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %10, i64 0, i32 2
  %58 = bitcast %"struct.ruy::PMatLayout"* %57 to i8*
  %59 = bitcast %"struct.ruy::PMatLayout"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 4 %59, i64 16, i1 false) #11
  %60 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 7
  %61 = load i32, i32* %60, align 8, !noalias !280
  store i32 %61, i32* %46, align 8, !alias.scope !280
  %62 = bitcast i8* %2 to %"class.ruy::MulParams"*
  %63 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.ruy::Kernel", %"struct.ruy::Kernel"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #11
  store i8 -86, i8* %71, align 1
  call void @_ZNK3ruy6KernelILNS_4PathE2EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE(%"struct.ruy::Kernel"* nonnull %7, %"struct.ruy::PMat"* nonnull dereferenceable(40) %9, %"struct.ruy::PMat"* nonnull dereferenceable(40) %10, %"class.ruy::MulParams"* dereferenceable(40) %62, i32 %64, i32 %66, i32 %68, i32 %70, %"struct.ruy::Mat"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEii(i32, %"struct.ruy::Mat"* dereferenceable(32), %"struct.ruy::PMat"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 1
  %7 = load float*, float** %6, align 8
  %8 = icmp slt i32 %3, %4
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1, i32 3
  %16 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1, i32 2
  %17 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 1
  %19 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 2
  %20 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 3
  %21 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 2
  %22 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 0
  %23 = icmp eq float* %7, null
  %24 = sext i32 %3 to i64
  %25 = sext i32 %4 to i64
  br label %26

26:                                               ; preds = %107, %9
  %27 = phi i64 [ %24, %9 ], [ %108, %107 ]
  %28 = load i32, i32* %10, align 8
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = trunc i64 %27 to i32
  %32 = trunc i64 %27 to i32
  br label %36

33:                                               ; preds = %107, %5
  ret void

34:                                               ; preds = %65, %26
  %35 = phi float [ 0.000000e+00, %26 ], [ %68, %65 ]
  br i1 %23, label %107, label %105

36:                                               ; preds = %30, %65
  %37 = phi i32 [ %102, %65 ], [ 0, %30 ]
  %38 = phi float [ %68, %65 ], [ 0.000000e+00, %30 ]
  %39 = load i32, i32* %11, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %27, %40
  br i1 %41, label %42, label %62

42:                                               ; preds = %36
  %43 = load i32, i32* %12, align 8
  %44 = icmp slt i32 %37, %43
  br i1 %44, label %45, label %62

45:                                               ; preds = %42
  %46 = load float*, float** %14, align 8
  %47 = load i8, i8* %15, align 4
  %48 = load i32, i32* %16, align 4
  switch i8 %47, label %49 [
    i8 0, label %50
    i8 1, label %52
  ]

49:                                               ; preds = %45
  br label %50

50:                                               ; preds = %49, %45
  %51 = phi i32 [ 1, %45 ], [ %48, %49 ]
  br label %52

52:                                               ; preds = %45, %50
  %53 = phi i32 [ %51, %50 ], [ %48, %45 ]
  %54 = phi i32 [ %48, %50 ], [ 1, %45 ]
  %55 = mul nsw i32 %53, %37
  %56 = mul nsw i32 %54, %32
  %57 = add nsw i32 %56, %55
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, float* %46, i64 %58
  %60 = load float, float* %59, align 4
  %61 = fadd float %60, 0.000000e+00
  br label %65

62:                                               ; preds = %42, %36
  %63 = load i32, i32* %13, align 8
  %64 = sitofp i32 %63 to float
  br label %65

65:                                               ; preds = %62, %52
  %66 = phi i32 [ %31, %62 ], [ %32, %52 ]
  %67 = phi float [ %64, %62 ], [ %61, %52 ]
  %68 = fadd float %38, %67
  %69 = load float*, float** %17, align 8
  %70 = load i8, i8* %18, align 1
  %71 = zext i8 %70 to i32
  %72 = sub nsw i32 0, %71
  %73 = and i32 %37, %72
  %74 = load i8, i8* %19, align 1
  %75 = zext i8 %74 to i32
  %76 = sub nsw i32 0, %75
  %77 = and i32 %66, %76
  %78 = load i8, i8* %20, align 4
  %79 = icmp eq i8 %78, 0
  %80 = load i32, i32* %21, align 4
  %81 = select i1 %79, i32 %75, i32 %80
  %82 = icmp eq i8 %78, 1
  %83 = select i1 %82, i32 %71, i32 %80
  %84 = mul nsw i32 %81, %73
  %85 = mul nsw i32 %83, %77
  %86 = sub nsw i32 %37, %73
  %87 = sub nsw i32 %66, %77
  %88 = load i8, i8* %22, align 1
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, i8 1, i8 %74
  %91 = zext i8 %90 to i32
  %92 = icmp eq i8 %88, 1
  %93 = select i1 %92, i8 1, i8 %70
  %94 = zext i8 %93 to i32
  %95 = mul nsw i32 %86, %91
  %96 = mul nsw i32 %87, %94
  %97 = add i32 %84, %85
  %98 = add i32 %97, %96
  %99 = add i32 %98, %95
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds float, float* %69, i64 %100
  store float %67, float* %101, align 4
  %102 = add nuw nsw i32 %37, 1
  %103 = load i32, i32* %10, align 8
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %36, label %34

105:                                              ; preds = %34
  %106 = getelementptr inbounds float, float* %7, i64 %27
  store float %35, float* %106, align 4
  br label %107

107:                                              ; preds = %34, %105
  %108 = add nsw i64 %27, 1
  %109 = icmp eq i64 %108, %25
  br i1 %109, label %33, label %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3ruy6KernelILNS_4PathE2EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE(%"struct.ruy::Kernel"*, %"struct.ruy::PMat"* dereferenceable(40), %"struct.ruy::PMat"* dereferenceable(40), %"class.ruy::MulParams"* dereferenceable(40), i32, i32, i32, i32, %"struct.ruy::Mat"*) local_unnamed_addr #0 comdat align 2 {
  %10 = alloca i32, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, %6
  %16 = select i1 %15, i32 %14, i32 %6
  %17 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, %7
  %20 = select i1 %19, i32 %18, i32 %7
  %21 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %16, %4
  br i1 %23, label %24, label %63

24:                                               ; preds = %9
  %25 = icmp sgt i32 %20, %5
  %26 = bitcast i32* %10 to i8*
  %27 = icmp sgt i32 %22, 0
  %28 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 4, i32 1
  %30 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 4, i32 2
  %31 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 3
  %32 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 2
  %33 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 4, i32 0
  %34 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 1
  %36 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 2
  %37 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 3
  %38 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 2
  %39 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 0
  %40 = bitcast i32* %10 to float*
  %41 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %3, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 3
  %43 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 3
  %45 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 2
  %47 = bitcast float* %11 to i8*
  %48 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %3, i64 0, i32 6
  %49 = bitcast float* %12 to i8*
  %50 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %3, i64 0, i32 5
  %51 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1, i32 3
  %53 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1, i32 2
  %54 = sext i32 %5 to i64
  %55 = sext i32 %20 to i64
  %56 = sext i32 %4 to i64
  %57 = sext i32 %16 to i64
  br label %58

58:                                               ; preds = %24, %64
  %59 = phi i64 [ %56, %24 ], [ %65, %64 ]
  br i1 %25, label %60, label %64

60:                                               ; preds = %58
  %61 = trunc i64 %59 to i32
  %62 = trunc i64 %59 to i32
  br label %67

63:                                               ; preds = %64, %9
  ret void

64:                                               ; preds = %204, %58
  %65 = add nsw i64 %59, 1
  %66 = icmp slt i64 %65, %57
  br i1 %66, label %58, label %63

67:                                               ; preds = %60, %204
  %68 = phi i64 [ %54, %60 ], [ %214, %204 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26)
  store i32 0, i32* %10, align 4
  br i1 %27, label %69, label %120

69:                                               ; preds = %67
  %70 = load float*, float** %28, align 8
  %71 = load i8, i8* %29, align 1
  %72 = zext i8 %71 to i32
  %73 = sub nsw i32 0, %72
  %74 = load i8, i8* %30, align 1
  %75 = zext i8 %74 to i32
  %76 = sub nsw i32 0, %75
  %77 = and i32 %61, %76
  %78 = load i8, i8* %31, align 4
  %79 = icmp eq i8 %78, 0
  %80 = load i32, i32* %32, align 4
  %81 = select i1 %79, i32 %75, i32 %80
  %82 = icmp eq i8 %78, 1
  %83 = select i1 %82, i32 %72, i32 %80
  %84 = mul nsw i32 %83, %77
  %85 = sub nsw i32 %61, %77
  %86 = load i8, i8* %33, align 1
  %87 = icmp eq i8 %86, 0
  %88 = select i1 %87, i8 1, i8 %74
  %89 = zext i8 %88 to i32
  %90 = icmp eq i8 %86, 1
  %91 = select i1 %90, i8 1, i8 %71
  %92 = zext i8 %91 to i32
  %93 = mul nsw i32 %85, %92
  %94 = load float*, float** %34, align 8
  %95 = load i8, i8* %35, align 1
  %96 = zext i8 %95 to i32
  %97 = sub nsw i32 0, %96
  %98 = load i8, i8* %36, align 1
  %99 = zext i8 %98 to i32
  %100 = sub nsw i32 0, %99
  %101 = trunc i64 %68 to i32
  %102 = and i32 %101, %100
  %103 = load i8, i8* %37, align 4
  %104 = icmp eq i8 %103, 0
  %105 = load i32, i32* %38, align 4
  %106 = select i1 %104, i32 %99, i32 %105
  %107 = icmp eq i8 %103, 1
  %108 = select i1 %107, i32 %96, i32 %105
  %109 = mul nsw i32 %108, %102
  %110 = sub nsw i32 %101, %102
  %111 = load i8, i8* %39, align 1
  %112 = icmp eq i8 %111, 0
  %113 = select i1 %112, i8 1, i8 %98
  %114 = zext i8 %113 to i32
  %115 = icmp eq i8 %111, 1
  %116 = select i1 %115, i8 1, i8 %95
  %117 = zext i8 %116 to i32
  %118 = mul nsw i32 %110, %117
  br label %124

119:                                              ; preds = %124
  store float %148, float* %40, align 4
  br label %120

120:                                              ; preds = %119, %67
  %121 = phi float [ %148, %119 ], [ 0.000000e+00, %67 ]
  %122 = load float*, float** %41, align 8
  %123 = icmp eq float* %122, null
  br i1 %123, label %155, label %151

124:                                              ; preds = %124, %69
  %125 = phi float [ 0.000000e+00, %69 ], [ %148, %124 ]
  %126 = phi i32 [ 0, %69 ], [ %149, %124 ]
  %127 = and i32 %126, %73
  %128 = mul nsw i32 %81, %127
  %129 = sub nsw i32 %126, %127
  %130 = mul nsw i32 %129, %89
  %131 = add i32 %128, %84
  %132 = add i32 %131, %93
  %133 = add i32 %132, %130
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds float, float* %70, i64 %134
  %136 = load float, float* %135, align 4
  %137 = and i32 %126, %97
  %138 = mul nsw i32 %106, %137
  %139 = sub nsw i32 %126, %137
  %140 = mul nsw i32 %139, %114
  %141 = add i32 %138, %109
  %142 = add i32 %141, %118
  %143 = add i32 %142, %140
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds float, float* %94, i64 %144
  %146 = load float, float* %145, align 4
  %147 = fmul float %136, %146
  %148 = fadd float %125, %147
  %149 = add nuw nsw i32 %126, 1
  %150 = icmp eq i32 %149, %22
  br i1 %150, label %119, label %124

151:                                              ; preds = %120
  %152 = getelementptr inbounds float, float* %122, i64 %59
  %153 = load float, float* %152, align 4
  %154 = fadd float %153, %121
  store float %154, float* %40, align 4
  br label %155

155:                                              ; preds = %120, %151
  %156 = phi float [ %121, %120 ], [ %154, %151 ]
  %157 = load i32, i32* %42, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %166, label %159

159:                                              ; preds = %155
  %160 = sitofp i32 %157 to float
  %161 = load float*, float** %43, align 8
  %162 = getelementptr inbounds float, float* %161, i64 %68
  %163 = load float, float* %162, align 4
  %164 = fmul float %163, %160
  %165 = fsub float %156, %164
  store float %165, float* %40, align 4
  br label %166

166:                                              ; preds = %155, %159
  %167 = phi float [ %156, %155 ], [ %165, %159 ]
  %168 = load i32, i32* %44, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %183, label %170

170:                                              ; preds = %166
  %171 = sitofp i32 %168 to float
  %172 = load float*, float** %45, align 8
  %173 = getelementptr inbounds float, float* %172, i64 %59
  %174 = load float, float* %173, align 4
  %175 = fmul float %174, %171
  %176 = fsub float %167, %175
  store float %176, float* %40, align 4
  %177 = or i1 %158, %169
  br i1 %177, label %183, label %178

178:                                              ; preds = %170
  %179 = mul i32 %157, %22
  %180 = mul i32 %179, %168
  %181 = sitofp i32 %180 to float
  %182 = fadd float %176, %181
  store float %182, float* %40, align 4
  br label %183

183:                                              ; preds = %166, %170, %178
  %184 = phi float [ %176, %170 ], [ %182, %178 ], [ %167, %166 ]
  %185 = load float, float* %46, align 8
  %186 = fadd float %185, %184
  store float %186, float* %40, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47)
  %187 = load float, float* %48, align 4
  store float %187, float* %11, align 4
  %188 = fcmp olt float %187, %186
  %189 = select i1 %188, float* %11, float* %40
  %190 = bitcast float* %189 to i32*
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49)
  %192 = load float, float* %50, align 8
  store float %192, float* %12, align 4
  %193 = bitcast i32 %191 to float
  %194 = fcmp ogt float %192, %193
  %195 = select i1 %194, float* %12, float* %40
  %196 = bitcast float* %195 to i32*
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49)
  %198 = load float*, float** %51, align 8
  %199 = load i8, i8* %52, align 4
  %200 = load i32, i32* %53, align 4
  switch i8 %199, label %201 [
    i8 0, label %202
    i8 1, label %204
  ]

201:                                              ; preds = %183
  br label %202

202:                                              ; preds = %201, %183
  %203 = phi i32 [ 1, %183 ], [ %200, %201 ]
  br label %204

204:                                              ; preds = %183, %202
  %205 = phi i32 [ %203, %202 ], [ %200, %183 ]
  %206 = phi i32 [ %200, %202 ], [ 1, %183 ]
  %207 = mul nsw i32 %205, %62
  %208 = trunc i64 %68 to i32
  %209 = mul nsw i32 %206, %208
  %210 = add nsw i32 %209, %207
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds float, float* %198, i64 %211
  %213 = bitcast float* %212 to i32*
  store i32 %197, i32* %213, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26)
  %214 = add nsw i64 %68, 1
  %215 = icmp slt i64 %214, %55
  br i1 %215, label %67, label %64
}

declare void @_ZN3ruy15PackFloatAvx512EPKfS1_iiiPf(float*, float*, i32, i32, i32, float*) local_unnamed_addr #4

declare void @_ZN3ruy26KernelFloatAvx512SingleColERKNS_17KernelParamsFloatILi16ELi16EEE(%"struct.ruy::KernelParamsFloat"* dereferenceable(1176)) local_unnamed_addr #4

declare void @_ZN3ruy17KernelFloatAvx512ERKNS_17KernelParamsFloatILi16ELi16EEE(%"struct.ruy::KernelParamsFloat"* dereferenceable(1176)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EfffNS_9MulParamsIffEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext, %"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat align 2 {
  switch i8 %0, label %57 [
    i8 8, label %3
    i8 2, label %4
  ]

3:                                                ; preds = %2
  tail call void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EfffNS_9MulParamsIffEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"* %1)
  br label %57

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 0
  store i8 2, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0
  %7 = bitcast %"struct.ruy::PEMat"* %6 to i24*
  store i24 262401, i24* %7, align 8
  %8 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 3
  %9 = bitcast %"struct.ruy::Type"* %8 to i24*
  store i24 262401, i24* %9, align 8
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %19, align 1
  %20 = and i32 %12, 255
  %21 = icmp eq i32 %20, 0
  %22 = add nsw i32 %12, 64
  %23 = select i1 %21, i32 %22, i32 %12
  %24 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = sitofp i32 %26 to float
  %28 = fptosi float %27 to i32
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1
  %31 = bitcast %"struct.ruy::PEMat"* %30 to i24*
  store i24 262401, i24* %31, align 8
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 3
  %33 = bitcast %"struct.ruy::Type"* %32 to i24*
  store i24 262401, i24* %33, align 8
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %43, align 1
  %44 = and i32 %36, 255
  %45 = icmp eq i32 %44, 0
  %46 = add nsw i32 %36, 64
  %47 = select i1 %45, i32 %46, i32 %36
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = sitofp i32 %50 to float
  %52 = fptosi float %51 to i32
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 1, i32 0, i64 0
  %55 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %54 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %55, align 8
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %56, align 8
  br label %57

57:                                               ; preds = %2, %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EfffNS_9MulParamsIffEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 4, i32 3, i32 3
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %1, %5, %9
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 2, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %16 = bitcast %"struct.ruy::PEMat"* %15 to i24*
  store i24 262401, i24* %16, align 8
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %18 = bitcast %"struct.ruy::Type"* %17 to i24*
  store i24 262401, i24* %18, align 8
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %28, align 1
  %29 = and i32 %21, 255
  %30 = icmp eq i32 %29, 0
  %31 = add nsw i32 %21, 64
  %32 = select i1 %30, i32 %31, i32 %21
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = sitofp i32 %35 to float
  %37 = fptosi float %36 to i32
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %40 = bitcast %"struct.ruy::PEMat"* %39 to i24*
  store i24 262401, i24* %40, align 8
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %42 = bitcast %"struct.ruy::Type"* %41 to i24*
  store i24 262401, i24* %42, align 8
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %48 = load i32, i32* %47, align 4
  br label %89

49:                                               ; preds = %9
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 8, i8* %50, align 8
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %52 = bitcast %"struct.ruy::PEMat"* %51 to i24*
  store i24 262401, i24* %52, align 8
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %54 = bitcast %"struct.ruy::Type"* %53 to i24*
  store i24 262401, i24* %54, align 8
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %55, align 4
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, 7
  %62 = and i32 %61, -8
  %63 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 1, i8* %64, align 1
  %65 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %65, align 1
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 8, i8* %66, align 1
  %67 = and i32 %57, 255
  %68 = icmp eq i32 %67, 0
  %69 = add nsw i32 %57, 64
  %70 = select i1 %68, i32 %69, i32 %57
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = sitofp i32 %73 to float
  %75 = fptosi float %74 to i32
  %76 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %78 = bitcast %"struct.ruy::PEMat"* %77 to i24*
  store i24 262401, i24* %78, align 8
  %79 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %80 = bitcast %"struct.ruy::Type"* %79 to i24*
  store i24 262401, i24* %80, align 8
  %81 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %81, align 4
  %82 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 7
  %88 = and i32 %87, -8
  br label %89

89:                                               ; preds = %49, %13
  %90 = phi i32 [ %88, %49 ], [ %48, %13 ]
  %91 = phi i8 [ 1, %49 ], [ 0, %13 ]
  %92 = phi i8 [ 8, %49 ], [ 1, %13 ]
  %93 = phi i32 [ %83, %49 ], [ %45, %13 ]
  %94 = phi void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* [ @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %49 ], [ @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %13 ]
  %95 = phi void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* [ @_ZN3ruy9RunKernelILNS_4PathE8EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %49 ], [ @_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %13 ]
  %96 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %90, i32* %96, align 4
  %97 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 %91, i8* %97, align 1
  %98 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %98, align 1
  %99 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 %92, i8* %99, align 1
  %100 = and i32 %93, 255
  %101 = icmp eq i32 %100, 0
  %102 = add nsw i32 %93, 64
  %103 = select i1 %101, i32 %102, i32 %93
  %104 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %103, i32* %104, align 4
  %105 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 4
  %106 = load i32, i32* %105, align 8
  %107 = sitofp i32 %106 to float
  %108 = fptosi float %107 to i32
  %109 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 0
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %94, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %110, align 8
  %111 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 1
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %94, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %111, align 8
  %112 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* %95, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %112, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %7 = bitcast i8** %6 to float**
  %8 = load float*, float** %7, align 8, !noalias !283
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %14 = bitcast i8** %13 to float**
  %15 = load float*, float** %14, align 8, !noalias !286
  %16 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %3, %4
  br i1 %18, label %19, label %38

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %3 to i64
  %23 = sext i32 %4 to i64
  %24 = sext i32 %12 to i64
  br label %25

25:                                               ; preds = %19, %25
  %26 = phi i64 [ %22, %19 ], [ %36, %25 ]
  %27 = mul nsw i64 %26, %24
  %28 = getelementptr inbounds float, float* %8, i64 %27
  %29 = trunc i64 %26 to i32
  %30 = and i32 %29, -8
  %31 = mul nsw i32 %30, %17
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float, float* %15, i64 %32
  %34 = trunc i64 %26 to i32
  %35 = sub i32 %21, %34
  tail call void @_ZN3ruy13PackFloatAvx2EPKfS1_iiiPf(float* %28, float* getelementptr inbounds ([8 x float], [8 x float]* @_ZZN3ruy8PackImplILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEiiE7zerobuf, i64 0, i64 0), i32 %12, i32 %35, i32 %10, float* %33) #11
  %36 = add i64 %26, 8
  %37 = icmp slt i64 %36, %23
  br i1 %37, label %25, label %38

38:                                               ; preds = %25, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE8EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.35"* dereferenceable(112), i8*, %"class.ruy::SidePair.36"* dereferenceable(8), %"class.ruy::SidePair.36"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParamsFloat.42", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = bitcast i8** %8 to float**
  %10 = load float*, float** %9, align 8, !noalias !289
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 2
  %18 = bitcast i8** %17 to float**
  %19 = load float*, float** %18, align 8, !noalias !292
  %20 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 2
  %25 = bitcast i8** %24 to float**
  %26 = load float*, float** %25, align 8, !noalias !295
  %27 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %"struct.ruy::KernelParamsFloat.42"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 376, i8* nonnull %37) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 bitcast (%"struct.ruy::KernelParamsFloat.42"* @__const._ZNK3ruy6KernelILNS_4PathE8EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE.params to i8*), i64 376, i1 false) #11
  %38 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 18, i64 0
  %39 = bitcast float* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 32, i1 false) #11
  %40 = mul nsw i32 %30, %23
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds float, float* %19, i64 %41
  %43 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 0
  store float* %42, float** %43, align 8
  %44 = mul nsw i32 %32, %28
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float, float* %26, i64 %45
  %47 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 1
  store float* %46, float** %47, align 8
  %48 = mul nsw i32 %32, %16
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, float* %10, i64 %49
  %51 = sext i32 %30 to i64
  %52 = getelementptr inbounds float, float* %50, i64 %51
  %53 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 2
  store float* %52, float** %53, align 8
  %54 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 3
  %55 = bitcast i8* %2 to float**
  %56 = load float*, float** %55, align 8
  %57 = icmp eq float* %56, null
  %58 = select i1 %57, float* %38, float* %56
  store float* %58, float** %54, align 8
  %59 = xor i1 %57, true
  %60 = zext i1 %59 to i8
  %61 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 16
  store i8 %60, i8* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 4
  store i32 %30, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 5
  store i32 %32, i32* %63, align 4
  %64 = add nsw i32 %34, -8
  %65 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 6
  store i32 %64, i32* %65, align 8
  %66 = add nsw i32 %36, -8
  %67 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 7
  store i32 %66, i32* %67, align 4
  %68 = shl i32 %23, 2
  %69 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 10
  store i32 %68, i32* %69, align 8
  %70 = shl i32 %28, 2
  %71 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 11
  store i32 %70, i32* %71, align 4
  %72 = shl i32 %16, 2
  %73 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 12
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 13
  store i32 %21, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %2, i64 32
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 14
  %79 = bitcast float* %78 to i32*
  store i32 %77, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %2, i64 36
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 15
  %84 = bitcast float* %83 to i32*
  store i32 %82, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 8
  store i32 %12, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.42", %"struct.ruy::KernelParamsFloat.42"* %7, i64 0, i32 9
  store i32 %14, i32* %86, align 4
  %87 = icmp eq i32 %14, 1
  br i1 %87, label %88, label %89

88:                                               ; preds = %6
  call void @_ZN3ruy24KernelFloatAvx2SingleColERKNS_17KernelParamsFloatILi8ELi8EEE(%"struct.ruy::KernelParamsFloat.42"* nonnull dereferenceable(376) %7) #11
  br label %90

89:                                               ; preds = %6
  call void @_ZN3ruy15KernelFloatAvx2ERKNS_17KernelParamsFloatILi8ELi8EEE(%"struct.ruy::KernelParamsFloat.42"* nonnull dereferenceable(376) %7) #11
  br label %90

90:                                               ; preds = %88, %89
  call void @llvm.lifetime.end.p0i8(i64 376, i8* nonnull %37) #11
  ret void
}

declare void @_ZN3ruy13PackFloatAvx2EPKfS1_iiiPf(float*, float*, i32, i32, i32, float*) local_unnamed_addr #4

declare void @_ZN3ruy24KernelFloatAvx2SingleColERKNS_17KernelParamsFloatILi8ELi8EEE(%"struct.ruy::KernelParamsFloat.42"* dereferenceable(376)) local_unnamed_addr #4

declare void @_ZN3ruy15KernelFloatAvx2ERKNS_17KernelParamsFloatILi8ELi8EEE(%"struct.ruy::KernelParamsFloat.42"* dereferenceable(376)) local_unnamed_addr #4

declare %"class.ruy::PrepackedCache"* @_ZN3ruy3Ctx17GetPrepackedCacheEv(%"class.ruy::Ctx"*) local_unnamed_addr #4

declare i32 @_ZN3ruy14PrepackedCache3GetEPKvPNS_5PEMatE(%"class.ruy::PrepackedCache"*, i8*, %"struct.ruy::PEMat"*) local_unnamed_addr #4

declare i32 @_ZN3ruy3Ctx19GetMainThreadTuningEv(%"class.ruy::Ctx"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin12batch_matmul10EvalHybridILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodePNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSE_SH_PSF_SI_SI_SI_SI_SI_(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, -2
  %19 = icmp sgt i32 %17, 5
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %19, label %21, label %29

21:                                               ; preds = %13
  %22 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = sext i32 %18 to i64
  %25 = getelementptr inbounds i32, i32* %23, i64 %24
  %26 = add nsw i32 %17, -1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %23, i64 %27
  br label %36

29:                                               ; preds = %13
  %30 = bitcast %union.anon* %20 to [5 x i32]*
  %31 = sext i32 %18 to i64
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %31
  %33 = add nsw i32 %17, -1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %34
  br label %36

36:                                               ; preds = %21, %29
  %37 = phi i32* [ %25, %21 ], [ %32, %29 ]
  %38 = phi i32* [ %28, %21 ], [ %35, %29 ]
  %39 = load i32, i32* %37, align 4
  %40 = load i32, i32* %38, align 4
  %41 = icmp sgt i32 %18, 0
  br i1 %41, label %42, label %69

42:                                               ; preds = %36
  %43 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = bitcast %union.anon* %20 to [5 x i32]*
  %46 = zext i32 %18 to i64
  %47 = add nsw i64 %46, -1
  %48 = and i64 %46, 3
  %49 = icmp ult i64 %47, 3
  br i1 %49, label %52, label %50

50:                                               ; preds = %42
  %51 = sub nsw i64 %46, %48
  br label %116

52:                                               ; preds = %116, %42
  %53 = phi i32 [ undef, %42 ], [ %142, %116 ]
  %54 = phi i64 [ 0, %42 ], [ %143, %116 ]
  %55 = phi i32 [ %40, %42 ], [ %142, %116 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52, %57
  %58 = phi i64 [ %66, %57 ], [ %54, %52 ]
  %59 = phi i32 [ %65, %57 ], [ %55, %52 ]
  %60 = phi i64 [ %67, %57 ], [ %48, %52 ]
  %61 = getelementptr inbounds i32, i32* %44, i64 %58
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %58
  %63 = select i1 %19, i32* %61, i32* %62
  %64 = load i32, i32* %63, align 4
  %65 = mul nsw i32 %64, %59
  %66 = add nuw nsw i64 %58, 1
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %57, !llvm.loop !298

69:                                               ; preds = %52, %57, %36
  %70 = phi i32 [ %40, %36 ], [ %53, %52 ], [ %65, %57 ]
  %71 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %74 = bitcast %union.TfLitePtrUnion* %73 to float**
  %75 = load float*, float** %74, align 8
  br label %76

76:                                               ; preds = %69, %72
  %77 = phi float* [ %75, %72 ], [ null, %69 ]
  %78 = icmp eq %struct.TfLiteTensor* %11, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %11, i64 0, i32 1, i32 0
  %81 = load i32*, i32** %80, align 8
  br label %82

82:                                               ; preds = %76, %79
  %83 = phi i32* [ %81, %79 ], [ null, %76 ]
  %84 = icmp eq %struct.TfLiteTensor* %10, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 0, i32 1, i32 0
  %87 = load i32*, i32** %86, align 8
  br label %88

88:                                               ; preds = %82, %85
  %89 = phi i32* [ %87, %85 ], [ null, %82 ]
  %90 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %88, %91
  %96 = phi i8* [ %94, %91 ], [ null, %88 ]
  %97 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %100 = bitcast %union.TfLitePtrUnion* %99 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %95, %98
  %103 = phi i8* [ %101, %98 ], [ null, %95 ]
  %104 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %107 = bitcast %union.TfLitePtrUnion* %106 to float**
  %108 = load float*, float** %107, align 8
  br label %109

109:                                              ; preds = %102, %105
  %110 = phi float* [ %108, %105 ], [ null, %102 ]
  %111 = icmp sgt i32 %70, 0
  br i1 %111, label %112, label %146

112:                                              ; preds = %109
  %113 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 3, i32 0
  %114 = sext i32 %39 to i64
  %115 = zext i32 %70 to i64
  br label %180

116:                                              ; preds = %116, %50
  %117 = phi i64 [ 0, %50 ], [ %143, %116 ]
  %118 = phi i32 [ %40, %50 ], [ %142, %116 ]
  %119 = phi i64 [ %51, %50 ], [ %144, %116 ]
  %120 = getelementptr inbounds i32, i32* %44, i64 %117
  %121 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %117
  %122 = select i1 %19, i32* %120, i32* %121
  %123 = load i32, i32* %122, align 4
  %124 = mul nsw i32 %123, %118
  %125 = or i64 %117, 1
  %126 = getelementptr inbounds i32, i32* %44, i64 %125
  %127 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %125
  %128 = select i1 %19, i32* %126, i32* %127
  %129 = load i32, i32* %128, align 4
  %130 = mul nsw i32 %129, %124
  %131 = or i64 %117, 2
  %132 = getelementptr inbounds i32, i32* %44, i64 %131
  %133 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %131
  %134 = select i1 %19, i32* %132, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = mul nsw i32 %135, %130
  %137 = or i64 %117, 3
  %138 = getelementptr inbounds i32, i32* %44, i64 %137
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %137
  %140 = select i1 %19, i32* %138, i32* %139
  %141 = load i32, i32* %140, align 4
  %142 = mul nsw i32 %141, %136
  %143 = add nuw nsw i64 %117, 4
  %144 = add i64 %119, -4
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %52, label %116

146:                                              ; preds = %180, %109
  %147 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %147) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 32, i1 false)
  %148 = icmp eq %struct.TfLiteTensor* %12, null
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %150, align 8, !alias.scope !299
  br label %202

151:                                              ; preds = %146
  %152 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 0, i32 2
  %153 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %152, align 8, !noalias !299
  %154 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %153, i64 0, i32 0
  %155 = load i32, i32* %154, align 4, !noalias !299
  %156 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %153, i64 0, i32 1, i64 0
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %155, i32* %157, align 8, !alias.scope !299
  %158 = icmp sgt i32 %155, 5
  br i1 %158, label %159, label %166

159:                                              ; preds = %151
  %160 = sext i32 %155 to i64
  %161 = shl nsw i64 %160, 2
  %162 = tail call i8* @_Znam(i64 %161) #10, !noalias !299
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %164 = bitcast i32** %163 to i8**
  store i8* %162, i8** %164, align 8, !alias.scope !299
  %165 = bitcast i32* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %162, i8* align 4 %165, i64 %161, i1 false) #11
  br label %173

166:                                              ; preds = %151
  %167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %168 = sext i32 %155 to i64
  %169 = shl nsw i64 %168, 2
  %170 = bitcast %union.anon* %167 to i8*
  %171 = bitcast i32* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 4 %171, i64 %169, i1 false) #11
  %172 = icmp sgt i32 %155, 0
  br i1 %172, label %173, label %193

173:                                              ; preds = %159, %166
  %174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %175 = getelementptr inbounds %union.anon, %union.anon* %174, i64 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = bitcast %union.anon* %174 to [5 x i32]*
  %178 = sext i32 %155 to i64
  %179 = icmp sgt i32 %155, 5
  br label %271

180:                                              ; preds = %180, %112
  %181 = phi i64 [ 0, %112 ], [ %190, %180 ]
  %182 = mul nsw i64 %181, %114
  %183 = getelementptr inbounds float, float* %110, i64 %182
  %184 = getelementptr inbounds i8, i8* %96, i64 %182
  %185 = getelementptr inbounds float, float* %77, i64 %181
  %186 = getelementptr inbounds i32, i32* %83, i64 %181
  tail call void @_ZN6tflite12tensor_utils24AsymmetricQuantizeFloatsEPKfiPaPfPi(float* %183, i32 %39, i8* %184, float* %185, i32* %186) #11
  %187 = load float, float* %113, align 8
  %188 = load float, float* %185, align 4
  %189 = fmul float %187, %188
  store float %189, float* %185, align 4
  %190 = add nuw nsw i64 %181, 1
  %191 = icmp eq i64 %190, %115
  br i1 %191, label %146, label %180

192:                                              ; preds = %271
  br i1 %148, label %198, label %193

193:                                              ; preds = %166, %192
  %194 = phi i32 [ %278, %192 ], [ 1, %166 ]
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 0, i32 1
  %196 = bitcast %union.TfLitePtrUnion* %195 to i8**
  %197 = load i8*, i8** %196, align 8
  br label %198

198:                                              ; preds = %192, %193
  %199 = phi i32 [ %194, %193 ], [ %278, %192 ]
  %200 = phi i8* [ %197, %193 ], [ null, %192 ]
  %201 = icmp sgt i32 %199, 0
  br i1 %201, label %202, label %208

202:                                              ; preds = %149, %198
  %203 = phi i8* [ null, %149 ], [ %200, %198 ]
  %204 = phi i32 [ 0, %149 ], [ %155, %198 ]
  %205 = phi i32 [ 1, %149 ], [ %199, %198 ]
  %206 = zext i32 %205 to i64
  %207 = shl nuw nsw i64 %206, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %203, i8 0, i64 %207, i1 false)
  br label %208

208:                                              ; preds = %202, %198
  %209 = phi i32 [ %204, %202 ], [ %155, %198 ]
  %210 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %210) #11
  br i1 %148, label %211, label %213

211:                                              ; preds = %208
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %212, align 8, !alias.scope !302
  br label %238

213:                                              ; preds = %208
  %214 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 0, i32 2
  %215 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %214, align 8, !noalias !302
  %216 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %215, i64 0, i32 0
  %217 = load i32, i32* %216, align 4, !noalias !302
  %218 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %215, i64 0, i32 1, i64 0
  %219 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %217, i32* %219, align 8, !alias.scope !302
  %220 = icmp sgt i32 %217, 5
  br i1 %220, label %221, label %228

221:                                              ; preds = %213
  %222 = sext i32 %217 to i64
  %223 = shl nsw i64 %222, 2
  %224 = tail call i8* @_Znam(i64 %223) #10, !noalias !302
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %226 = bitcast i32** %225 to i8**
  store i8* %224, i8** %226, align 8, !alias.scope !302
  %227 = bitcast i8* %224 to i32*
  br label %233

228:                                              ; preds = %213
  %229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %230 = bitcast %union.anon* %229 to i32*
  %231 = sext i32 %217 to i64
  %232 = shl nsw i64 %231, 2
  br label %233

233:                                              ; preds = %228, %221
  %234 = phi i64 [ %223, %221 ], [ %232, %228 ]
  %235 = phi i32* [ %227, %221 ], [ %230, %228 ]
  %236 = bitcast i32* %235 to i8*
  %237 = bitcast i32* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %236, i8* align 4 %237, i64 %234, i1 false) #11
  br label %238

238:                                              ; preds = %211, %233
  %239 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %239, label %243, label %240

240:                                              ; preds = %238
  %241 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %242 = load i32*, i32** %241, align 8
  br label %243

243:                                              ; preds = %238, %240
  %244 = phi i32* [ %242, %240 ], [ null, %238 ]
  br i1 %148, label %249, label %245

245:                                              ; preds = %243
  %246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 0, i32 1
  %247 = bitcast %union.TfLitePtrUnion* %246 to float**
  %248 = load float*, float** %247, align 8
  br label %249

249:                                              ; preds = %243, %245
  %250 = phi float* [ %248, %245 ], [ null, %243 ]
  %251 = getelementptr inbounds %"struct.tflite::ops::builtin::batch_matmul::OpData", %"struct.tflite::ops::builtin::batch_matmul::OpData"* %2, i64 0, i32 6
  %252 = tail call %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext* %0) #11
  call void @_ZN6tflite13optimized_ops11BatchMatMulERKNS_12RuntimeShapeEPKaS3_S5_PKfPKiPiS3_SA_PfPbPNS_17CpuBackendContextE(%"class.tflite::RuntimeShape"* dereferenceable(32) %5, i8* %103, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %96, float* %77, i32* %83, i32* %89, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i32* %244, float* %250, i8* %251, %"class.tflite::CpuBackendContext"* %252)
  %253 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %254 = load i32, i32* %253, align 8
  %255 = icmp sgt i32 %254, 5
  br i1 %255, label %256, label %262

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = icmp eq i32* %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  %261 = bitcast i32* %258 to i8*
  call void @_ZdaPv(i8* %261) #10
  br label %262

262:                                              ; preds = %249, %256, %260
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %210) #11
  %263 = icmp sgt i32 %209, 5
  br i1 %263, label %264, label %270

264:                                              ; preds = %262
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %266 = load i32*, i32** %265, align 8
  %267 = icmp eq i32* %266, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  %269 = bitcast i32* %266 to i8*
  call void @_ZdaPv(i8* %269) #10
  br label %270

270:                                              ; preds = %262, %264, %268
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %147) #11
  ret i32 0

271:                                              ; preds = %173, %271
  %272 = phi i64 [ 0, %173 ], [ %279, %271 ]
  %273 = phi i32 [ 1, %173 ], [ %278, %271 ]
  %274 = getelementptr inbounds i32, i32* %176, i64 %272
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %177, i64 0, i64 %272
  %276 = select i1 %179, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = mul nsw i32 %277, %273
  %279 = add nuw nsw i64 %272, 1
  %280 = icmp slt i64 %279, %178
  br i1 %280, label %271, label %192
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin12batch_matmul8EvalInt8ILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextPKNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSD_SG_SD_PSE_(%struct.TfLiteContext*, %"struct.tflite::ops::builtin::batch_matmul::OpData"*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %9 = alloca %"struct.tflite::FullyConnectedParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = bitcast %"struct.tflite::FullyConnectedParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 bitcast ({ i32, i32, i32, i32, i32, i32, i32, float, float, i8, i8, i8, [1 x i8] }* @__const._ZN6tflite3ops7builtin12batch_matmul8EvalInt8ILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextPKNS2_6OpDataERKNS_12RuntimeShapeEPK12TfLiteTensorSD_SG_SD_PSE_.op_params to i8*), i64 40, i1 false)
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub nsw i32 0, %13
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 3, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 0, %16
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 3, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 0
  store i32 %14, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 1
  store i32 %17, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 2
  store i32 %19, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 3
  %24 = bitcast %"struct.tflite::ops::builtin::batch_matmul::OpData"* %1 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 4
  %26 = bitcast i32* %23 to <4 x i32>*
  store <4 x i32> %25, <4 x i32>* %26, align 4
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  %30 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 9
  %31 = zext i1 %29 to i8
  store i8 %31, i8* %30, align 4
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 1
  %35 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %9, i64 0, i32 10
  %36 = zext i1 %34 to i8
  store i8 %36, i8* %35, align 1
  %37 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %8
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %40 = bitcast %union.TfLitePtrUnion* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %8, %38
  %43 = phi i8* [ %41, %38 ], [ null, %8 ]
  %44 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %47 = bitcast %union.TfLitePtrUnion* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %45
  %50 = phi i8* [ %48, %45 ], [ null, %42 ]
  %51 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #11
  %52 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %54, align 8, !alias.scope !305
  br label %83

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %57 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %56, align 8, !noalias !305
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !305
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %57, i64 0, i32 1, i64 0
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %59, i32* %61, align 8, !alias.scope !305
  %62 = icmp sgt i32 %59, 5
  br i1 %62, label %63, label %70

63:                                               ; preds = %55
  %64 = sext i32 %59 to i64
  %65 = shl nsw i64 %64, 2
  %66 = tail call i8* @_Znam(i64 %65) #10, !noalias !305
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %68 = bitcast i32** %67 to i8**
  store i8* %66, i8** %68, align 8, !alias.scope !305
  %69 = bitcast i8* %66 to i32*
  br label %75

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %72 = bitcast %union.anon* %71 to i32*
  %73 = sext i32 %59 to i64
  %74 = shl nsw i64 %73, 2
  br label %75

75:                                               ; preds = %70, %63
  %76 = phi i64 [ %65, %63 ], [ %74, %70 ]
  %77 = phi i32* [ %69, %63 ], [ %72, %70 ]
  %78 = bitcast i32* %77 to i8*
  %79 = bitcast i32* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 %76, i1 false) #11
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %81 = bitcast %union.TfLitePtrUnion* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %53, %75
  %84 = phi i8* [ %82, %75 ], [ null, %53 ]
  %85 = tail call %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext* %0) #11
  call void @_ZN6tflite13optimized_ops11BatchMatMulERKNS_20FullyConnectedParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_PaPNS_17CpuBackendContextE(%"struct.tflite::FullyConnectedParams"* nonnull dereferenceable(40) %9, %"class.tflite::RuntimeShape"* dereferenceable(32) %4, i8* %43, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, i8* %50, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %84, %"class.tflite::CpuBackendContext"* %85)
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp sgt i32 %87, 5
  br i1 %88, label %89, label %95

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = icmp eq i32* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = bitcast i32* %91 to i8*
  call void @_ZdaPv(i8* %94) #10
  br label %95

95:                                               ; preds = %83, %89, %93
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  ret i32 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops11BatchMatMulERKNS_12RuntimeShapeEPKaS3_S5_PKfPKiPiS3_SA_PfPbPNS_17CpuBackendContextE(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, float*, i32*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, float*, i8*, %"class.tflite::CpuBackendContext"*) local_unnamed_addr #8 comdat {
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.88", align 4
  %16 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.88", align 4
  %17 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.90", align 4
  %18 = alloca %"struct.tflite::cpu_backend_gemm::GemmParams.92", align 8
  %19 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %20, align 8, !alias.scope !308
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %22 = load i32, i32* %21, align 8, !noalias !308
  %23 = icmp sgt i32 %22, 5
  br i1 %23, label %24, label %25

24:                                               ; preds = %12
  tail call void @abort() #12, !noalias !308
  unreachable

25:                                               ; preds = %12
  store i32 5, i32* %20, align 8, !alias.scope !308
  %26 = sub i32 5, %22
  %27 = icmp sgt i32 %26, 0
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %27, label %29, label %109

29:                                               ; preds = %25
  %30 = bitcast %union.anon* %28 to [5 x i32]*
  %31 = zext i32 %26 to i64
  %32 = icmp ult i32 %26, 8
  br i1 %32, label %102, label %33

33:                                               ; preds = %29
  %34 = and i64 %31, 4294967288
  %35 = add nsw i64 %34, -8
  %36 = lshr exact i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp ult i64 %35, 56
  br i1 %39, label %87, label %40

40:                                               ; preds = %33
  %41 = sub nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %84, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %85, %42 ]
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %43
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !308
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !308
  %49 = or i64 %43, 8
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !308
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !308
  %54 = or i64 %43, 16
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !308
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !308
  %59 = or i64 %43, 24
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !308
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !308
  %64 = or i64 %43, 32
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !308
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !308
  %69 = or i64 %43, 40
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !308
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !308
  %74 = or i64 %43, 48
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %74
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !308
  %77 = getelementptr inbounds i32, i32* %75, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %78, align 8, !alias.scope !308
  %79 = or i64 %43, 56
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %79
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %81, align 8, !alias.scope !308
  %82 = getelementptr inbounds i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %83, align 8, !alias.scope !308
  %84 = add i64 %43, 64
  %85 = add i64 %44, -8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %42, !llvm.loop !311

87:                                               ; preds = %42, %33
  %88 = phi i64 [ 0, %33 ], [ %84, %42 ]
  %89 = icmp eq i64 %38, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %87, %90
  %91 = phi i64 [ %97, %90 ], [ %88, %87 ]
  %92 = phi i64 [ %98, %90 ], [ %38, %87 ]
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %91
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %94, align 8, !alias.scope !308
  %95 = getelementptr inbounds i32, i32* %93, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %96, align 8, !alias.scope !308
  %97 = add i64 %91, 8
  %98 = add i64 %92, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %90, !llvm.loop !312

100:                                              ; preds = %90, %87
  %101 = icmp eq i64 %34, %31
  br i1 %101, label %109, label %102

102:                                              ; preds = %100, %29
  %103 = phi i64 [ 0, %29 ], [ %34, %100 ]
  br label %104

104:                                              ; preds = %102, %104
  %105 = phi i64 [ %107, %104 ], [ %103, %102 ]
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %105
  store i32 1, i32* %106, align 4, !alias.scope !308
  %107 = add nuw nsw i64 %105, 1
  %108 = icmp eq i64 %107, %31
  br i1 %108, label %109, label %104, !llvm.loop !313

109:                                              ; preds = %104, %100, %25
  %110 = getelementptr inbounds %union.anon, %union.anon* %28, i64 0, i32 0
  %111 = bitcast %union.anon* %28 to i32*
  %112 = sext i32 %26 to i64
  %113 = getelementptr inbounds i32, i32* %111, i64 %112
  %114 = bitcast i32* %113 to i8*
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %116 = bitcast %union.anon* %115 to i8*
  %117 = sext i32 %22 to i64
  %118 = shl nsw i64 %117, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* align 4 %116, i64 %118, i1 false) #11
  %119 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 32, i1 false)
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %120, align 8, !alias.scope !314
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %122 = load i32, i32* %121, align 8, !noalias !314
  %123 = icmp sgt i32 %122, 5
  br i1 %123, label %124, label %125

124:                                              ; preds = %109
  tail call void @abort() #12, !noalias !314
  unreachable

125:                                              ; preds = %109
  store i32 5, i32* %120, align 8, !alias.scope !314
  %126 = sub i32 5, %122
  %127 = icmp sgt i32 %126, 0
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %129 = bitcast %union.anon* %128 to [5 x i32]*
  br i1 %127, label %130, label %209

130:                                              ; preds = %125
  %131 = zext i32 %126 to i64
  %132 = icmp ult i32 %126, 8
  br i1 %132, label %202, label %133

133:                                              ; preds = %130
  %134 = and i64 %131, 4294967288
  %135 = add nsw i64 %134, -8
  %136 = lshr exact i64 %135, 3
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, 7
  %139 = icmp ult i64 %135, 56
  br i1 %139, label %187, label %140

140:                                              ; preds = %133
  %141 = sub nsw i64 %137, %138
  br label %142

142:                                              ; preds = %142, %140
  %143 = phi i64 [ 0, %140 ], [ %184, %142 ]
  %144 = phi i64 [ %141, %140 ], [ %185, %142 ]
  %145 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %143
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !314
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !314
  %149 = or i64 %143, 8
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !314
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !314
  %154 = or i64 %143, 16
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !314
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !314
  %159 = or i64 %143, 24
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !314
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !314
  %164 = or i64 %143, 32
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !314
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !314
  %169 = or i64 %143, 40
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !314
  %172 = getelementptr inbounds i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !314
  %174 = or i64 %143, 48
  %175 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !314
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !314
  %179 = or i64 %143, 56
  %180 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %179
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %181, align 8, !alias.scope !314
  %182 = getelementptr inbounds i32, i32* %180, i64 4
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %183, align 8, !alias.scope !314
  %184 = add i64 %143, 64
  %185 = add i64 %144, -8
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %142, !llvm.loop !317

187:                                              ; preds = %142, %133
  %188 = phi i64 [ 0, %133 ], [ %184, %142 ]
  %189 = icmp eq i64 %138, 0
  br i1 %189, label %200, label %190

190:                                              ; preds = %187, %190
  %191 = phi i64 [ %197, %190 ], [ %188, %187 ]
  %192 = phi i64 [ %198, %190 ], [ %138, %187 ]
  %193 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %191
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !314
  %195 = getelementptr inbounds i32, i32* %193, i64 4
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %196, align 8, !alias.scope !314
  %197 = add i64 %191, 8
  %198 = add i64 %192, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %190, !llvm.loop !318

200:                                              ; preds = %190, %187
  %201 = icmp eq i64 %134, %131
  br i1 %201, label %209, label %202

202:                                              ; preds = %200, %130
  %203 = phi i64 [ 0, %130 ], [ %134, %200 ]
  br label %204

204:                                              ; preds = %202, %204
  %205 = phi i64 [ %207, %204 ], [ %203, %202 ]
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %205
  store i32 1, i32* %206, align 4, !alias.scope !314
  %207 = add nuw nsw i64 %205, 1
  %208 = icmp eq i64 %207, %131
  br i1 %208, label %209, label %204, !llvm.loop !319

209:                                              ; preds = %204, %200, %125
  %210 = getelementptr inbounds %union.anon, %union.anon* %128, i64 0, i32 0
  %211 = bitcast %union.anon* %128 to i32*
  %212 = sext i32 %126 to i64
  %213 = getelementptr inbounds i32, i32* %211, i64 %212
  %214 = bitcast i32* %213 to i8*
  %215 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %216 = bitcast %union.anon* %215 to i8*
  %217 = sext i32 %122 to i64
  %218 = shl nsw i64 %217, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %214, i8* align 4 %216, i64 %218, i1 false) #11
  %219 = load i32, i32* %20, align 8
  %220 = icmp sgt i32 %219, 5
  %221 = load i32*, i32** %110, align 8
  %222 = select i1 %220, i32* %221, i32* %111
  %223 = load i32, i32* %222, align 4
  %224 = load i32, i32* %120, align 8
  %225 = icmp sgt i32 %224, 5
  %226 = load i32*, i32** %210, align 8
  %227 = select i1 %225, i32* %226, i32* %211
  %228 = load i32, i32* %227, align 4
  %229 = icmp eq i32 %223, %228
  %230 = icmp eq i32 %223, 1
  %231 = select i1 %230, i32 %228, i32 %223
  %232 = select i1 %229, i32 %223, i32 %231
  %233 = getelementptr inbounds i32, i32* %221, i64 1
  %234 = bitcast %union.anon* %28 to [5 x i32]*
  %235 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 1
  %236 = select i1 %220, i32* %233, i32* %235
  %237 = load i32, i32* %236, align 4
  %238 = getelementptr inbounds i32, i32* %226, i64 1
  %239 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %240 = select i1 %225, i32* %238, i32* %239
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %237, %241
  %243 = icmp eq i32 %237, 1
  %244 = select i1 %243, i32 %241, i32 %237
  %245 = select i1 %242, i32 %237, i32 %244
  %246 = getelementptr inbounds i32, i32* %221, i64 2
  %247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 1
  %248 = bitcast [16 x i8]* %247 to i32*
  %249 = select i1 %220, i32* %246, i32* %248
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds i32, i32* %226, i64 2
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 1
  %253 = bitcast [16 x i8]* %252 to i32*
  %254 = select i1 %225, i32* %251, i32* %253
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %250, %255
  %257 = icmp eq i32 %250, 1
  %258 = select i1 %257, i32 %255, i32 %250
  %259 = select i1 %256, i32 %250, i32 %258
  br i1 %230, label %316, label %260

260:                                              ; preds = %209
  %261 = icmp sgt i32 %219, 1
  br i1 %261, label %262, label %316

262:                                              ; preds = %260
  %263 = add i32 %219, -1
  %264 = add i32 %219, -2
  %265 = and i32 %263, 3
  %266 = icmp ult i32 %264, 3
  br i1 %266, label %299, label %267

267:                                              ; preds = %262
  %268 = sub i32 %263, %265
  br label %269

269:                                              ; preds = %269, %267
  %270 = phi i64 [ 1, %267 ], [ %296, %269 ]
  %271 = phi i32 [ 1, %267 ], [ %295, %269 ]
  %272 = phi i32 [ %268, %267 ], [ %297, %269 ]
  %273 = getelementptr inbounds i32, i32* %221, i64 %270
  %274 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %270
  %275 = select i1 %220, i32* %273, i32* %274
  %276 = load i32, i32* %275, align 4
  %277 = mul nsw i32 %276, %271
  %278 = add nuw nsw i64 %270, 1
  %279 = getelementptr inbounds i32, i32* %221, i64 %278
  %280 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %278
  %281 = select i1 %220, i32* %279, i32* %280
  %282 = load i32, i32* %281, align 4
  %283 = mul nsw i32 %282, %277
  %284 = add nuw nsw i64 %270, 2
  %285 = getelementptr inbounds i32, i32* %221, i64 %284
  %286 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %284
  %287 = select i1 %220, i32* %285, i32* %286
  %288 = load i32, i32* %287, align 4
  %289 = mul nsw i32 %288, %283
  %290 = add nuw nsw i64 %270, 3
  %291 = getelementptr inbounds i32, i32* %221, i64 %290
  %292 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %290
  %293 = select i1 %220, i32* %291, i32* %292
  %294 = load i32, i32* %293, align 4
  %295 = mul nsw i32 %294, %289
  %296 = add nuw nsw i64 %270, 4
  %297 = add i32 %272, -4
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %269

299:                                              ; preds = %269, %262
  %300 = phi i32 [ undef, %262 ], [ %295, %269 ]
  %301 = phi i64 [ 1, %262 ], [ %296, %269 ]
  %302 = phi i32 [ 1, %262 ], [ %295, %269 ]
  %303 = icmp eq i32 %265, 0
  br i1 %303, label %316, label %304

304:                                              ; preds = %299, %304
  %305 = phi i64 [ %313, %304 ], [ %301, %299 ]
  %306 = phi i32 [ %312, %304 ], [ %302, %299 ]
  %307 = phi i32 [ %314, %304 ], [ %265, %299 ]
  %308 = getelementptr inbounds i32, i32* %221, i64 %305
  %309 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %305
  %310 = select i1 %220, i32* %308, i32* %309
  %311 = load i32, i32* %310, align 4
  %312 = mul nsw i32 %311, %306
  %313 = add nuw nsw i64 %305, 1
  %314 = add i32 %307, -1
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %304, !llvm.loop !320

316:                                              ; preds = %299, %304, %209, %260
  %317 = phi i32 [ 0, %209 ], [ 1, %260 ], [ %300, %299 ], [ %312, %304 ]
  br i1 %243, label %374, label %318

318:                                              ; preds = %316
  %319 = icmp sgt i32 %219, 2
  br i1 %319, label %320, label %374

320:                                              ; preds = %318
  %321 = add i32 %219, -2
  %322 = add i32 %219, -3
  %323 = and i32 %321, 3
  %324 = icmp ult i32 %322, 3
  br i1 %324, label %357, label %325

325:                                              ; preds = %320
  %326 = sub i32 %321, %323
  br label %327

327:                                              ; preds = %327, %325
  %328 = phi i64 [ 2, %325 ], [ %354, %327 ]
  %329 = phi i32 [ 1, %325 ], [ %353, %327 ]
  %330 = phi i32 [ %326, %325 ], [ %355, %327 ]
  %331 = getelementptr inbounds i32, i32* %221, i64 %328
  %332 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %328
  %333 = select i1 %220, i32* %331, i32* %332
  %334 = load i32, i32* %333, align 4
  %335 = mul nsw i32 %334, %329
  %336 = or i64 %328, 1
  %337 = getelementptr inbounds i32, i32* %221, i64 %336
  %338 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %336
  %339 = select i1 %220, i32* %337, i32* %338
  %340 = load i32, i32* %339, align 4
  %341 = mul nsw i32 %340, %335
  %342 = add nuw nsw i64 %328, 2
  %343 = getelementptr inbounds i32, i32* %221, i64 %342
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %342
  %345 = select i1 %220, i32* %343, i32* %344
  %346 = load i32, i32* %345, align 4
  %347 = mul nsw i32 %346, %341
  %348 = add nuw nsw i64 %328, 3
  %349 = getelementptr inbounds i32, i32* %221, i64 %348
  %350 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %348
  %351 = select i1 %220, i32* %349, i32* %350
  %352 = load i32, i32* %351, align 4
  %353 = mul nsw i32 %352, %347
  %354 = add nuw nsw i64 %328, 4
  %355 = add i32 %330, -4
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %327

357:                                              ; preds = %327, %320
  %358 = phi i32 [ undef, %320 ], [ %353, %327 ]
  %359 = phi i64 [ 2, %320 ], [ %354, %327 ]
  %360 = phi i32 [ 1, %320 ], [ %353, %327 ]
  %361 = icmp eq i32 %323, 0
  br i1 %361, label %374, label %362

362:                                              ; preds = %357, %362
  %363 = phi i64 [ %371, %362 ], [ %359, %357 ]
  %364 = phi i32 [ %370, %362 ], [ %360, %357 ]
  %365 = phi i32 [ %372, %362 ], [ %323, %357 ]
  %366 = getelementptr inbounds i32, i32* %221, i64 %363
  %367 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %363
  %368 = select i1 %220, i32* %366, i32* %367
  %369 = load i32, i32* %368, align 4
  %370 = mul nsw i32 %369, %364
  %371 = add nuw nsw i64 %363, 1
  %372 = add i32 %365, -1
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %362, !llvm.loop !321

374:                                              ; preds = %357, %362, %316, %318
  %375 = phi i32 [ 0, %316 ], [ 1, %318 ], [ %358, %357 ], [ %370, %362 ]
  br i1 %257, label %432, label %376

376:                                              ; preds = %374
  %377 = icmp sgt i32 %219, 3
  br i1 %377, label %378, label %432

378:                                              ; preds = %376
  %379 = add i32 %219, -3
  %380 = add i32 %219, -4
  %381 = and i32 %379, 3
  %382 = icmp ult i32 %380, 3
  br i1 %382, label %415, label %383

383:                                              ; preds = %378
  %384 = sub i32 %379, %381
  br label %385

385:                                              ; preds = %385, %383
  %386 = phi i64 [ 3, %383 ], [ %412, %385 ]
  %387 = phi i32 [ 1, %383 ], [ %411, %385 ]
  %388 = phi i32 [ %384, %383 ], [ %413, %385 ]
  %389 = getelementptr inbounds i32, i32* %221, i64 %386
  %390 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %386
  %391 = select i1 %220, i32* %389, i32* %390
  %392 = load i32, i32* %391, align 4
  %393 = mul nsw i32 %392, %387
  %394 = add nuw nsw i64 %386, 1
  %395 = getelementptr inbounds i32, i32* %221, i64 %394
  %396 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %394
  %397 = select i1 %220, i32* %395, i32* %396
  %398 = load i32, i32* %397, align 4
  %399 = mul nsw i32 %398, %393
  %400 = add nuw nsw i64 %386, 2
  %401 = getelementptr inbounds i32, i32* %221, i64 %400
  %402 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %400
  %403 = select i1 %220, i32* %401, i32* %402
  %404 = load i32, i32* %403, align 4
  %405 = mul nsw i32 %404, %399
  %406 = add nuw nsw i64 %386, 3
  %407 = getelementptr inbounds i32, i32* %221, i64 %406
  %408 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %406
  %409 = select i1 %220, i32* %407, i32* %408
  %410 = load i32, i32* %409, align 4
  %411 = mul nsw i32 %410, %405
  %412 = add nuw nsw i64 %386, 4
  %413 = add i32 %388, -4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %385

415:                                              ; preds = %385, %378
  %416 = phi i32 [ undef, %378 ], [ %411, %385 ]
  %417 = phi i64 [ 3, %378 ], [ %412, %385 ]
  %418 = phi i32 [ 1, %378 ], [ %411, %385 ]
  %419 = icmp eq i32 %381, 0
  br i1 %419, label %432, label %420

420:                                              ; preds = %415, %420
  %421 = phi i64 [ %429, %420 ], [ %417, %415 ]
  %422 = phi i32 [ %428, %420 ], [ %418, %415 ]
  %423 = phi i32 [ %430, %420 ], [ %381, %415 ]
  %424 = getelementptr inbounds i32, i32* %221, i64 %421
  %425 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %421
  %426 = select i1 %220, i32* %424, i32* %425
  %427 = load i32, i32* %426, align 4
  %428 = mul nsw i32 %427, %422
  %429 = add nuw nsw i64 %421, 1
  %430 = add i32 %423, -1
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %420, !llvm.loop !322

432:                                              ; preds = %415, %420, %374, %376
  %433 = phi i32 [ 0, %374 ], [ 1, %376 ], [ %416, %415 ], [ %428, %420 ]
  %434 = icmp eq i32 %228, 1
  br i1 %434, label %491, label %435

435:                                              ; preds = %432
  %436 = icmp sgt i32 %224, 1
  br i1 %436, label %437, label %491

437:                                              ; preds = %435
  %438 = add i32 %224, -1
  %439 = add i32 %224, -2
  %440 = and i32 %438, 3
  %441 = icmp ult i32 %439, 3
  br i1 %441, label %474, label %442

442:                                              ; preds = %437
  %443 = sub i32 %438, %440
  br label %444

444:                                              ; preds = %444, %442
  %445 = phi i64 [ 1, %442 ], [ %471, %444 ]
  %446 = phi i32 [ 1, %442 ], [ %470, %444 ]
  %447 = phi i32 [ %443, %442 ], [ %472, %444 ]
  %448 = getelementptr inbounds i32, i32* %226, i64 %445
  %449 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %445
  %450 = select i1 %225, i32* %448, i32* %449
  %451 = load i32, i32* %450, align 4
  %452 = mul nsw i32 %451, %446
  %453 = add nuw nsw i64 %445, 1
  %454 = getelementptr inbounds i32, i32* %226, i64 %453
  %455 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %453
  %456 = select i1 %225, i32* %454, i32* %455
  %457 = load i32, i32* %456, align 4
  %458 = mul nsw i32 %457, %452
  %459 = add nuw nsw i64 %445, 2
  %460 = getelementptr inbounds i32, i32* %226, i64 %459
  %461 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %459
  %462 = select i1 %225, i32* %460, i32* %461
  %463 = load i32, i32* %462, align 4
  %464 = mul nsw i32 %463, %458
  %465 = add nuw nsw i64 %445, 3
  %466 = getelementptr inbounds i32, i32* %226, i64 %465
  %467 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %465
  %468 = select i1 %225, i32* %466, i32* %467
  %469 = load i32, i32* %468, align 4
  %470 = mul nsw i32 %469, %464
  %471 = add nuw nsw i64 %445, 4
  %472 = add i32 %447, -4
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %444

474:                                              ; preds = %444, %437
  %475 = phi i32 [ undef, %437 ], [ %470, %444 ]
  %476 = phi i64 [ 1, %437 ], [ %471, %444 ]
  %477 = phi i32 [ 1, %437 ], [ %470, %444 ]
  %478 = icmp eq i32 %440, 0
  br i1 %478, label %491, label %479

479:                                              ; preds = %474, %479
  %480 = phi i64 [ %488, %479 ], [ %476, %474 ]
  %481 = phi i32 [ %487, %479 ], [ %477, %474 ]
  %482 = phi i32 [ %489, %479 ], [ %440, %474 ]
  %483 = getelementptr inbounds i32, i32* %226, i64 %480
  %484 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %480
  %485 = select i1 %225, i32* %483, i32* %484
  %486 = load i32, i32* %485, align 4
  %487 = mul nsw i32 %486, %481
  %488 = add nuw nsw i64 %480, 1
  %489 = add i32 %482, -1
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %479, !llvm.loop !323

491:                                              ; preds = %474, %479, %432, %435
  %492 = phi i32 [ 0, %432 ], [ 1, %435 ], [ %475, %474 ], [ %487, %479 ]
  %493 = icmp eq i32 %241, 1
  br i1 %493, label %550, label %494

494:                                              ; preds = %491
  %495 = icmp sgt i32 %224, 2
  br i1 %495, label %496, label %550

496:                                              ; preds = %494
  %497 = add i32 %224, -2
  %498 = add i32 %224, -3
  %499 = and i32 %497, 3
  %500 = icmp ult i32 %498, 3
  br i1 %500, label %533, label %501

501:                                              ; preds = %496
  %502 = sub i32 %497, %499
  br label %503

503:                                              ; preds = %503, %501
  %504 = phi i64 [ 2, %501 ], [ %530, %503 ]
  %505 = phi i32 [ 1, %501 ], [ %529, %503 ]
  %506 = phi i32 [ %502, %501 ], [ %531, %503 ]
  %507 = getelementptr inbounds i32, i32* %226, i64 %504
  %508 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %504
  %509 = select i1 %225, i32* %507, i32* %508
  %510 = load i32, i32* %509, align 4
  %511 = mul nsw i32 %510, %505
  %512 = or i64 %504, 1
  %513 = getelementptr inbounds i32, i32* %226, i64 %512
  %514 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %512
  %515 = select i1 %225, i32* %513, i32* %514
  %516 = load i32, i32* %515, align 4
  %517 = mul nsw i32 %516, %511
  %518 = add nuw nsw i64 %504, 2
  %519 = getelementptr inbounds i32, i32* %226, i64 %518
  %520 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %518
  %521 = select i1 %225, i32* %519, i32* %520
  %522 = load i32, i32* %521, align 4
  %523 = mul nsw i32 %522, %517
  %524 = add nuw nsw i64 %504, 3
  %525 = getelementptr inbounds i32, i32* %226, i64 %524
  %526 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %524
  %527 = select i1 %225, i32* %525, i32* %526
  %528 = load i32, i32* %527, align 4
  %529 = mul nsw i32 %528, %523
  %530 = add nuw nsw i64 %504, 4
  %531 = add i32 %506, -4
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %503

533:                                              ; preds = %503, %496
  %534 = phi i32 [ undef, %496 ], [ %529, %503 ]
  %535 = phi i64 [ 2, %496 ], [ %530, %503 ]
  %536 = phi i32 [ 1, %496 ], [ %529, %503 ]
  %537 = icmp eq i32 %499, 0
  br i1 %537, label %550, label %538

538:                                              ; preds = %533, %538
  %539 = phi i64 [ %547, %538 ], [ %535, %533 ]
  %540 = phi i32 [ %546, %538 ], [ %536, %533 ]
  %541 = phi i32 [ %548, %538 ], [ %499, %533 ]
  %542 = getelementptr inbounds i32, i32* %226, i64 %539
  %543 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %539
  %544 = select i1 %225, i32* %542, i32* %543
  %545 = load i32, i32* %544, align 4
  %546 = mul nsw i32 %545, %540
  %547 = add nuw nsw i64 %539, 1
  %548 = add i32 %541, -1
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %538, !llvm.loop !324

550:                                              ; preds = %533, %538, %491, %494
  %551 = phi i32 [ 0, %491 ], [ 1, %494 ], [ %534, %533 ], [ %546, %538 ]
  %552 = icmp eq i32 %255, 1
  br i1 %552, label %609, label %553

553:                                              ; preds = %550
  %554 = icmp sgt i32 %224, 3
  br i1 %554, label %555, label %609

555:                                              ; preds = %553
  %556 = add i32 %224, -3
  %557 = add i32 %224, -4
  %558 = and i32 %556, 3
  %559 = icmp ult i32 %557, 3
  br i1 %559, label %592, label %560

560:                                              ; preds = %555
  %561 = sub i32 %556, %558
  br label %562

562:                                              ; preds = %562, %560
  %563 = phi i64 [ 3, %560 ], [ %589, %562 ]
  %564 = phi i32 [ 1, %560 ], [ %588, %562 ]
  %565 = phi i32 [ %561, %560 ], [ %590, %562 ]
  %566 = getelementptr inbounds i32, i32* %226, i64 %563
  %567 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %563
  %568 = select i1 %225, i32* %566, i32* %567
  %569 = load i32, i32* %568, align 4
  %570 = mul nsw i32 %569, %564
  %571 = add nuw nsw i64 %563, 1
  %572 = getelementptr inbounds i32, i32* %226, i64 %571
  %573 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %571
  %574 = select i1 %225, i32* %572, i32* %573
  %575 = load i32, i32* %574, align 4
  %576 = mul nsw i32 %575, %570
  %577 = add nuw nsw i64 %563, 2
  %578 = getelementptr inbounds i32, i32* %226, i64 %577
  %579 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %577
  %580 = select i1 %225, i32* %578, i32* %579
  %581 = load i32, i32* %580, align 4
  %582 = mul nsw i32 %581, %576
  %583 = add nuw nsw i64 %563, 3
  %584 = getelementptr inbounds i32, i32* %226, i64 %583
  %585 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %583
  %586 = select i1 %225, i32* %584, i32* %585
  %587 = load i32, i32* %586, align 4
  %588 = mul nsw i32 %587, %582
  %589 = add nuw nsw i64 %563, 4
  %590 = add i32 %565, -4
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %562

592:                                              ; preds = %562, %555
  %593 = phi i32 [ undef, %555 ], [ %588, %562 ]
  %594 = phi i64 [ 3, %555 ], [ %589, %562 ]
  %595 = phi i32 [ 1, %555 ], [ %588, %562 ]
  %596 = icmp eq i32 %558, 0
  br i1 %596, label %609, label %597

597:                                              ; preds = %592, %597
  %598 = phi i64 [ %606, %597 ], [ %594, %592 ]
  %599 = phi i32 [ %605, %597 ], [ %595, %592 ]
  %600 = phi i32 [ %607, %597 ], [ %558, %592 ]
  %601 = getelementptr inbounds i32, i32* %226, i64 %598
  %602 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %598
  %603 = select i1 %225, i32* %601, i32* %602
  %604 = load i32, i32* %603, align 4
  %605 = mul nsw i32 %604, %599
  %606 = add nuw nsw i64 %598, 1
  %607 = add i32 %600, -1
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %597, !llvm.loop !325

609:                                              ; preds = %592, %597, %550, %553
  %610 = phi i32 [ 0, %550 ], [ 1, %553 ], [ %593, %592 ], [ %605, %597 ]
  %611 = getelementptr inbounds i32, i32* %221, i64 3
  %612 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 1, i64 4
  %613 = bitcast i8* %612 to i32*
  %614 = select i1 %220, i32* %611, i32* %613
  %615 = load i32, i32* %614, align 4
  %616 = getelementptr inbounds i32, i32* %226, i64 4
  %617 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 1, i64 8
  %618 = bitcast i8* %617 to i32*
  %619 = select i1 %225, i32* %616, i32* %618
  %620 = load i32, i32* %619, align 4
  %621 = getelementptr inbounds i32, i32* %221, i64 4
  %622 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 1, i64 8
  %623 = bitcast i8* %622 to i32*
  %624 = select i1 %220, i32* %621, i32* %623
  %625 = load i32, i32* %624, align 4
  %626 = icmp eq i32 %492, 0
  %627 = select i1 %626, i32 0, i32 %620
  %628 = icmp eq i32 %551, 0
  %629 = select i1 %628, i32 0, i32 %620
  %630 = icmp eq i32 %610, 0
  %631 = select i1 %630, i32 0, i32 %620
  %632 = icmp eq i32 %317, 0
  %633 = select i1 %632, i32 0, i32 %615
  %634 = icmp eq i32 %375, 0
  %635 = select i1 %634, i32 0, i32 %615
  %636 = icmp eq i32 %433, 0
  %637 = select i1 %636, i32 0, i32 %615
  %638 = icmp ne i8* %10, null
  br i1 %638, label %639, label %642

639:                                              ; preds = %609
  %640 = load i8, i8* %10, align 1, !range !2
  %641 = icmp eq i8 %640, 0
  br i1 %641, label %721, label %642

642:                                              ; preds = %639, %609
  %643 = add i32 %219, -2
  %644 = icmp sgt i32 %643, 1
  br i1 %644, label %645, label %670

645:                                              ; preds = %642
  %646 = zext i32 %643 to i64
  %647 = add nsw i64 %646, -1
  %648 = add nsw i64 %646, -2
  %649 = and i64 %647, 3
  %650 = icmp ult i64 %648, 3
  br i1 %650, label %653, label %651

651:                                              ; preds = %645
  %652 = sub nsw i64 %647, %649
  br label %681

653:                                              ; preds = %681, %645
  %654 = phi i32 [ undef, %645 ], [ %707, %681 ]
  %655 = phi i64 [ 1, %645 ], [ %708, %681 ]
  %656 = phi i32 [ 1, %645 ], [ %707, %681 ]
  %657 = icmp eq i64 %649, 0
  br i1 %657, label %670, label %658

658:                                              ; preds = %653, %658
  %659 = phi i64 [ %667, %658 ], [ %655, %653 ]
  %660 = phi i32 [ %666, %658 ], [ %656, %653 ]
  %661 = phi i64 [ %668, %658 ], [ %649, %653 ]
  %662 = getelementptr inbounds i32, i32* %221, i64 %659
  %663 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %659
  %664 = select i1 %220, i32* %662, i32* %663
  %665 = load i32, i32* %664, align 4
  %666 = mul nsw i32 %665, %660
  %667 = add nuw nsw i64 %659, 1
  %668 = add i64 %661, -1
  %669 = icmp eq i64 %668, 0
  br i1 %669, label %670, label %658, !llvm.loop !326

670:                                              ; preds = %653, %658, %642
  %671 = phi i32 [ 1, %642 ], [ %654, %653 ], [ %666, %658 ]
  %672 = bitcast i32* %6 to i8*
  %673 = sext i32 %615 to i64
  %674 = shl nsw i64 %673, 2
  %675 = sext i32 %671 to i64
  %676 = mul i64 %674, %675
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %672, i8 0, i64 %676, i1 false)
  %677 = icmp sgt i32 %671, 0
  br i1 %677, label %678, label %711

678:                                              ; preds = %670
  %679 = sext i32 %625 to i64
  %680 = zext i32 %671 to i64
  br label %712

681:                                              ; preds = %681, %651
  %682 = phi i64 [ 1, %651 ], [ %708, %681 ]
  %683 = phi i32 [ 1, %651 ], [ %707, %681 ]
  %684 = phi i64 [ %652, %651 ], [ %709, %681 ]
  %685 = getelementptr inbounds i32, i32* %221, i64 %682
  %686 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %682
  %687 = select i1 %220, i32* %685, i32* %686
  %688 = load i32, i32* %687, align 4
  %689 = mul nsw i32 %688, %683
  %690 = add nuw nsw i64 %682, 1
  %691 = getelementptr inbounds i32, i32* %221, i64 %690
  %692 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %690
  %693 = select i1 %220, i32* %691, i32* %692
  %694 = load i32, i32* %693, align 4
  %695 = mul nsw i32 %694, %689
  %696 = add nuw nsw i64 %682, 2
  %697 = getelementptr inbounds i32, i32* %221, i64 %696
  %698 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %696
  %699 = select i1 %220, i32* %697, i32* %698
  %700 = load i32, i32* %699, align 4
  %701 = mul nsw i32 %700, %695
  %702 = add nuw nsw i64 %682, 3
  %703 = getelementptr inbounds i32, i32* %221, i64 %702
  %704 = getelementptr inbounds [5 x i32], [5 x i32]* %234, i64 0, i64 %702
  %705 = select i1 %220, i32* %703, i32* %704
  %706 = load i32, i32* %705, align 4
  %707 = mul nsw i32 %706, %701
  %708 = add nuw nsw i64 %682, 4
  %709 = add i64 %684, -4
  %710 = icmp eq i64 %709, 0
  br i1 %710, label %653, label %681

711:                                              ; preds = %712, %670
  br i1 %638, label %720, label %721

712:                                              ; preds = %712, %678
  %713 = phi i64 [ 0, %678 ], [ %718, %712 ]
  %714 = mul nsw i64 %713, %673
  %715 = mul nsw i64 %714, %679
  %716 = getelementptr inbounds i8, i8* %1, i64 %715
  %717 = getelementptr inbounds i32, i32* %6, i64 %714
  tail call void @_ZN6tflite12tensor_utils18ReductionSumVectorEPKaPiii(i8* %716, i32* %717, i32 %615, i32 %625) #11
  %718 = add nuw nsw i64 %713, 1
  %719 = icmp eq i64 %718, %680
  br i1 %719, label %711, label %712

720:                                              ; preds = %711
  store i8 0, i8* %10, align 1
  br label %721

721:                                              ; preds = %711, %720, %639
  %722 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %722) #11
  %723 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %15, i64 0, i32 0
  %724 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %15, i64 0, i32 1
  %725 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %15, i64 0, i32 2
  %726 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %726, i8 -86, i64 16, i1 false)
  %727 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %15, i64 0, i32 3
  %728 = bitcast i8* %727 to i16*
  store i16 0, i16* %728, align 4
  store i32 1, i32* %723, align 4
  store i32 %615, i32* %724, align 4
  store i32 %625, i32* %725, align 4
  %729 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %729) #11
  %730 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %16, i64 0, i32 1
  %731 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %16, i64 0, i32 2
  %732 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %732, i8 -86, i64 16, i1 false)
  %733 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %733, i8 0, i64 14, i1 false)
  store i32 %625, i32* %730, align 4
  store i32 %620, i32* %731, align 4
  %734 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %734) #11
  %735 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.90", %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* %17, i64 0, i32 1
  %736 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.90", %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* %17, i64 0, i32 2
  %737 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %737, i8 -86, i64 20, i1 false)
  %738 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %738, i8 0, i64 17, i1 false)
  store i32 %615, i32* %735, align 4
  store i32 %620, i32* %736, align 4
  %739 = icmp sgt i32 %232, 0
  br i1 %739, label %740, label %779

740:                                              ; preds = %721
  %741 = icmp sgt i32 %245, 0
  %742 = icmp sgt i32 %259, 0
  %743 = mul i32 %620, %615
  %744 = bitcast %"struct.tflite::cpu_backend_gemm::GemmParams.92"* %18 to i8*
  %745 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.92", %"struct.tflite::cpu_backend_gemm::GemmParams.92"* %18, i64 0, i32 5
  %746 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.92", %"struct.tflite::cpu_backend_gemm::GemmParams.92"* %18, i64 0, i32 6
  %747 = icmp sgt i32 %620, 0
  %748 = icmp sgt i32 %615, 0
  %749 = sext i32 %615 to i64
  %750 = sext i32 %637 to i64
  %751 = sext i32 %631 to i64
  %752 = sext i32 %610 to i64
  %753 = sext i32 %433 to i64
  %754 = sext i32 %635 to i64
  %755 = sext i32 %629 to i64
  %756 = sext i32 %551 to i64
  %757 = sext i32 %375 to i64
  %758 = sext i32 %633 to i64
  %759 = sext i32 %627 to i64
  %760 = sext i32 %492 to i64
  %761 = sext i32 %317 to i64
  %762 = zext i32 %232 to i64
  %763 = zext i32 %245 to i64
  %764 = zext i32 %259 to i64
  %765 = zext i32 %620 to i64
  %766 = zext i32 %615 to i64
  %767 = mul i32 %245, %259
  %768 = mul i32 %767, %620
  %769 = mul i32 %768, %615
  %770 = zext i32 %769 to i64
  %771 = mul i32 %259, %620
  %772 = mul i32 %771, %615
  %773 = zext i32 %772 to i64
  %774 = mul i32 %620, %615
  %775 = zext i32 %774 to i64
  %776 = icmp ult i32 %615, 4
  %777 = and i64 %766, 4294967292
  %778 = icmp eq i64 %777, %766
  br label %792

779:                                              ; preds = %809, %721
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %734) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %729) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %722) #11
  %780 = xor i1 %225, true
  %781 = icmp eq i32* %226, null
  %782 = or i1 %781, %780
  br i1 %782, label %785, label %783

783:                                              ; preds = %779
  %784 = bitcast i32* %226 to i8*
  call void @_ZdaPv(i8* %784) #10
  br label %785

785:                                              ; preds = %779, %783
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #11
  %786 = xor i1 %220, true
  %787 = icmp eq i32* %221, null
  %788 = or i1 %787, %786
  br i1 %788, label %791, label %789

789:                                              ; preds = %785
  %790 = bitcast i32* %221 to i8*
  call void @_ZdaPv(i8* %790) #10
  br label %791

791:                                              ; preds = %785, %789
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #11
  ret void

792:                                              ; preds = %809, %740
  %793 = phi i64 [ 0, %740 ], [ %810, %809 ]
  %794 = mul i64 %793, %770
  %795 = mul i64 %793, %758
  %796 = add i64 %795, %766
  %797 = mul nsw i64 %793, %761
  %798 = getelementptr inbounds i8, i8* %1, i64 %797
  %799 = mul nsw i64 %793, %760
  %800 = getelementptr inbounds i8, i8* %3, i64 %799
  %801 = mul nsw i64 %793, %759
  %802 = getelementptr inbounds i32, i32* %5, i64 %801
  %803 = getelementptr inbounds float, float* %4, i64 %801
  %804 = mul nsw i64 %793, %758
  %805 = getelementptr inbounds i32, i32* %6, i64 %804
  br i1 %741, label %806, label %809

806:                                              ; preds = %792
  %807 = trunc i64 %793 to i32
  %808 = mul i32 %245, %807
  br label %812

809:                                              ; preds = %832, %792
  %810 = add nuw nsw i64 %793, 1
  %811 = icmp eq i64 %810, %762
  br i1 %811, label %779, label %792

812:                                              ; preds = %832, %806
  %813 = phi i64 [ 0, %806 ], [ %833, %832 ]
  %814 = mul i64 %813, %773
  %815 = add i64 %794, %814
  %816 = mul i64 %813, %754
  %817 = add i64 %795, %816
  %818 = add i64 %796, %816
  %819 = mul nsw i64 %813, %757
  %820 = getelementptr inbounds i8, i8* %798, i64 %819
  %821 = mul nsw i64 %813, %756
  %822 = getelementptr inbounds i8, i8* %800, i64 %821
  %823 = mul nsw i64 %813, %755
  %824 = getelementptr inbounds i32, i32* %802, i64 %823
  %825 = getelementptr inbounds float, float* %803, i64 %823
  %826 = mul nsw i64 %813, %754
  %827 = getelementptr inbounds i32, i32* %805, i64 %826
  br i1 %742, label %828, label %832

828:                                              ; preds = %812
  %829 = trunc i64 %813 to i32
  %830 = add i32 %808, %829
  %831 = mul i32 %830, %259
  br label %835

832:                                              ; preds = %863, %812
  %833 = add nuw nsw i64 %813, 1
  %834 = icmp eq i64 %833, %763
  br i1 %834, label %809, label %812

835:                                              ; preds = %863, %828
  %836 = phi i64 [ 0, %828 ], [ %864, %863 ]
  %837 = mul i64 %836, %775
  %838 = add i64 %815, %837
  %839 = shl i64 %838, 32
  %840 = ashr exact i64 %839, 32
  %841 = add nsw i64 %840, %766
  %842 = mul i64 %836, %750
  %843 = add i64 %817, %842
  %844 = getelementptr i32, i32* %6, i64 %843
  %845 = add i64 %818, %842
  %846 = getelementptr i32, i32* %6, i64 %845
  %847 = mul nsw i64 %836, %753
  %848 = getelementptr inbounds i8, i8* %820, i64 %847
  %849 = mul nsw i64 %836, %752
  %850 = getelementptr inbounds i8, i8* %822, i64 %849
  %851 = mul nsw i64 %836, %751
  %852 = getelementptr inbounds i32, i32* %824, i64 %851
  %853 = getelementptr inbounds float, float* %825, i64 %851
  %854 = mul nsw i64 %836, %750
  %855 = getelementptr inbounds i32, i32* %827, i64 %854
  %856 = trunc i64 %836 to i32
  %857 = add i32 %831, %856
  %858 = mul i32 %743, %857
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds float, float* %9, i64 %859
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %744) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %744, i8 0, i64 32, i1 false) #11
  store i32 -2147483648, i32* %745, align 8
  store i32 2147483647, i32* %746, align 4
  call void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIaaiiLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIaEEPKaS8_SA_RKNS5_IiEEPiRKNS0_10GemmParamsIiiLS3_1EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams.88"* nonnull dereferenceable(16) %15, i8* %848, %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* nonnull dereferenceable(16) %16, i8* %850, %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* nonnull dereferenceable(20) %17, i32* %8, %"struct.tflite::cpu_backend_gemm::GemmParams.92"* nonnull dereferenceable(40) %18, %"class.tflite::CpuBackendContext"* %11) #11
  br i1 %747, label %861, label %863

861:                                              ; preds = %835
  %862 = bitcast i32* %846 to float*
  br label %866

863:                                              ; preds = %949, %835
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %744) #11
  %864 = add nuw nsw i64 %836, 1
  %865 = icmp eq i64 %864, %764
  br i1 %865, label %832, label %835

866:                                              ; preds = %861, %949
  %867 = phi i64 [ %950, %949 ], [ 0, %861 ]
  %868 = mul i64 %867, %749
  %869 = getelementptr i32, i32* %8, i64 %868
  %870 = add i64 %868, %766
  %871 = getelementptr i32, i32* %8, i64 %870
  %872 = add i64 %840, %868
  %873 = getelementptr float, float* %9, i64 %872
  %874 = add i64 %841, %868
  %875 = getelementptr float, float* %9, i64 %874
  %876 = getelementptr inbounds float, float* %853, i64 %867
  %877 = load float, float* %876, align 4
  %878 = getelementptr inbounds i32, i32* %852, i64 %867
  %879 = load i32, i32* %878, align 4
  %880 = sitofp i32 %879 to float
  br i1 %748, label %881, label %949

881:                                              ; preds = %866
  %882 = mul nsw i64 %867, %749
  br i1 %776, label %928, label %883

883:                                              ; preds = %881
  %884 = bitcast float* %875 to i32*
  %885 = icmp ult i32* %869, %884
  %886 = bitcast i32* %871 to float*
  %887 = icmp ult float* %873, %886
  %888 = and i1 %885, %887
  %889 = icmp ult i32* %869, %846
  %890 = icmp ult i32* %844, %871
  %891 = and i1 %889, %890
  %892 = or i1 %888, %891
  %893 = icmp ult float* %873, %862
  %894 = bitcast float* %875 to i32*
  %895 = icmp ult i32* %844, %894
  %896 = and i1 %893, %895
  %897 = or i1 %892, %896
  br i1 %897, label %928, label %898

898:                                              ; preds = %883
  %899 = insertelement <4 x float> undef, float %880, i32 0
  %900 = shufflevector <4 x float> %899, <4 x float> undef, <4 x i32> zeroinitializer
  %901 = insertelement <4 x float> undef, float %877, i32 0
  %902 = shufflevector <4 x float> %901, <4 x float> undef, <4 x i32> zeroinitializer
  br label %903

903:                                              ; preds = %903, %898
  %904 = phi i64 [ 0, %898 ], [ %925, %903 ]
  %905 = add nsw i64 %904, %882
  %906 = getelementptr inbounds i32, i32* %855, i64 %904
  %907 = bitcast i32* %906 to <4 x i32>*
  %908 = load <4 x i32>, <4 x i32>* %907, align 4, !alias.scope !327
  %909 = sitofp <4 x i32> %908 to <4 x float>
  %910 = fmul <4 x float> %900, %909
  %911 = getelementptr inbounds i32, i32* %8, i64 %905
  %912 = bitcast i32* %911 to <4 x i32>*
  %913 = load <4 x i32>, <4 x i32>* %912, align 4, !alias.scope !330, !noalias !332
  %914 = sitofp <4 x i32> %913 to <4 x float>
  %915 = fsub <4 x float> %914, %910
  %916 = fptosi <4 x float> %915 to <4 x i32>
  %917 = bitcast i32* %911 to <4 x i32>*
  store <4 x i32> %916, <4 x i32>* %917, align 4, !alias.scope !330, !noalias !332
  %918 = sitofp <4 x i32> %916 to <4 x float>
  %919 = fmul <4 x float> %902, %918
  %920 = getelementptr inbounds float, float* %860, i64 %905
  %921 = bitcast float* %920 to <4 x float>*
  %922 = load <4 x float>, <4 x float>* %921, align 4, !alias.scope !334, !noalias !327
  %923 = fadd <4 x float> %922, %919
  %924 = bitcast float* %920 to <4 x float>*
  store <4 x float> %923, <4 x float>* %924, align 4, !alias.scope !334, !noalias !327
  %925 = add i64 %904, 4
  %926 = icmp eq i64 %925, %777
  br i1 %926, label %927, label %903, !llvm.loop !335

927:                                              ; preds = %903
  br i1 %778, label %949, label %928

928:                                              ; preds = %927, %883, %881
  %929 = phi i64 [ 0, %883 ], [ 0, %881 ], [ %777, %927 ]
  br label %930

930:                                              ; preds = %928, %930
  %931 = phi i64 [ %947, %930 ], [ %929, %928 ]
  %932 = add nsw i64 %931, %882
  %933 = getelementptr inbounds i32, i32* %855, i64 %931
  %934 = load i32, i32* %933, align 4
  %935 = sitofp i32 %934 to float
  %936 = fmul float %880, %935
  %937 = getelementptr inbounds i32, i32* %8, i64 %932
  %938 = load i32, i32* %937, align 4
  %939 = sitofp i32 %938 to float
  %940 = fsub float %939, %936
  %941 = fptosi float %940 to i32
  store i32 %941, i32* %937, align 4
  %942 = sitofp i32 %941 to float
  %943 = fmul float %877, %942
  %944 = getelementptr inbounds float, float* %860, i64 %932
  %945 = load float, float* %944, align 4
  %946 = fadd float %945, %943
  store float %946, float* %944, align 4
  %947 = add nuw nsw i64 %931, 1
  %948 = icmp eq i64 %947, %766
  br i1 %948, label %949, label %930, !llvm.loop !336

949:                                              ; preds = %930, %927, %866
  %950 = add nuw nsw i64 %867, 1
  %951 = icmp eq i64 %950, %765
  br i1 %951, label %863, label %866
}

declare void @_ZN6tflite12tensor_utils18ReductionSumVectorEPKaPiii(i8*, i32*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIaaiiLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIaEEPKaS8_SA_RKNS5_IiEEPiRKNS0_10GemmParamsIiiLS3_1EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams.88"* dereferenceable(16), i8*, %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* dereferenceable(16), i8*, %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* dereferenceable(20), i32*, %"struct.tflite::cpu_backend_gemm::GemmParams.92"* dereferenceable(40), %"class.tflite::CpuBackendContext"*) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %"struct.ruy::Mat.99", align 8
  %10 = alloca %"struct.ruy::Mat.99", align 8
  %11 = alloca %"struct.ruy::Mat.100", align 8
  %12 = alloca %"class.ruy::MulParams.98", align 8
  %13 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 4
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  %19 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = select i1 %18, i32 %22, i32 %20
  %24 = ptrtoint i8* %1 to i64
  %25 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 3
  %26 = load i8, i8* %25, align 4
  br i1 %15, label %27, label %34

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 4
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 1
  %31 = zext i1 %30 to i8
  %32 = icmp eq i8 %29, 2
  %33 = select i1 %32, i8 3, i8 %31
  br label %34

34:                                               ; preds = %8, %27
  %35 = phi i8 [ %33, %27 ], [ 0, %8 ]
  %36 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp ne i32 %37, 0
  %39 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = select i1 %38, i32 %42, i32 %40
  %44 = ptrtoint i8* %3 to i64
  %45 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 3
  %46 = load i8, i8* %45, align 4
  br i1 %15, label %47, label %54

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 4
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 1
  %51 = zext i1 %50 to i8
  %52 = icmp eq i8 %49, 2
  %53 = select i1 %52, i8 3, i8 %51
  br label %54

54:                                               ; preds = %34, %47
  %55 = phi i8 [ %53, %47 ], [ 0, %34 ]
  %56 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.90", %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* %4, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  %59 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.90", %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* %4, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.90", %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* %4, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = select i1 %58, i32 %62, i32 %60
  %64 = ptrtoint i32* %5 to i64
  %65 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.90", %"struct.tflite::cpu_backend_gemm::MatrixParams.90"* %4, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %"class.ruy::MulParams.98"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #11
  %68 = getelementptr inbounds %"class.ruy::MulParams.98", %"class.ruy::MulParams.98"* %12, i64 0, i32 5
  %69 = getelementptr inbounds %"class.ruy::MulParams.98", %"class.ruy::MulParams.98"* %12, i64 0, i32 6
  %70 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.92", %"struct.tflite::cpu_backend_gemm::GemmParams.92"* %6, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.ruy::MulParams.98", %"class.ruy::MulParams.98"* %12, i64 0, i32 1
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.92", %"struct.tflite::cpu_backend_gemm::GemmParams.92"* %6, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.ruy::MulParams.98", %"class.ruy::MulParams.98"* %12, i64 0, i32 2
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.92", %"struct.tflite::cpu_backend_gemm::GemmParams.92"* %6, i64 0, i32 2
  %77 = getelementptr inbounds %"class.ruy::MulParams.98", %"class.ruy::MulParams.98"* %12, i64 0, i32 3
  %78 = bitcast i32** %76 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8
  %80 = bitcast i32** %77 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %80, align 8
  %81 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.92", %"struct.tflite::cpu_backend_gemm::GemmParams.92"* %6, i64 0, i32 4
  %82 = bitcast i32** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.ruy::MulParams.98"* %12 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.92", %"struct.tflite::cpu_backend_gemm::GemmParams.92"* %6, i64 0, i32 5
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %68, align 8
  %87 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.92", %"struct.tflite::cpu_backend_gemm::GemmParams.92"* %6, i64 0, i32 6
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %69, align 4
  %89 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.ruy::Context"*, %"class.ruy::Context"** %89, align 8
  %91 = bitcast %"struct.ruy::Mat.99"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %9, i64 0, i32 1, i32 2
  %93 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %9, i64 0, i32 2
  %94 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %9, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 32, i1 false) #11
  %95 = bitcast %"struct.ruy::Mat.99"* %9 to i64*
  store i64 %24, i64* %95, align 8, !alias.scope !337
  %96 = zext i32 %23 to i64
  %97 = zext i1 %18 to i64
  %98 = shl nuw nsw i64 %97, 32
  %99 = or i64 %98, %96
  %100 = zext i32 %22 to i64
  %101 = shl nuw i64 %100, 32
  %102 = zext i32 %20 to i64
  %103 = or i64 %101, %102
  %104 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %9, i64 0, i32 1
  %105 = bitcast %"struct.ruy::MatLayout"* %104 to i64*
  store i64 %103, i64* %105, align 8, !alias.scope !337
  %106 = bitcast i32* %92 to i40*
  %107 = trunc i64 %99 to i40
  store i40 %107, i40* %106, align 8, !alias.scope !337
  store i8 %26, i8* %93, align 8, !alias.scope !337
  store i8 %35, i8* %94, align 1, !alias.scope !337
  %108 = bitcast %"struct.ruy::Mat.99"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %10, i64 0, i32 1, i32 2
  %110 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %10, i64 0, i32 2
  %111 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %10, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false) #11
  %112 = bitcast %"struct.ruy::Mat.99"* %10 to i64*
  store i64 %44, i64* %112, align 8, !alias.scope !340
  %113 = zext i32 %43 to i64
  %114 = zext i1 %38 to i64
  %115 = shl nuw nsw i64 %114, 32
  %116 = or i64 %115, %113
  %117 = zext i32 %42 to i64
  %118 = shl nuw i64 %117, 32
  %119 = zext i32 %40 to i64
  %120 = or i64 %118, %119
  %121 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %10, i64 0, i32 1
  %122 = bitcast %"struct.ruy::MatLayout"* %121 to i64*
  store i64 %120, i64* %122, align 8, !alias.scope !340
  %123 = bitcast i32* %109 to i40*
  %124 = trunc i64 %116 to i40
  store i40 %124, i40* %123, align 8, !alias.scope !340
  store i8 %46, i8* %110, align 8, !alias.scope !340
  store i8 %55, i8* %111, align 1, !alias.scope !340
  %125 = bitcast %"struct.ruy::Mat.100"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #11
  %126 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %11, i64 0, i32 1, i32 2
  %127 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %11, i64 0, i32 2
  %128 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 32, i1 false) #11
  %129 = bitcast %"struct.ruy::Mat.100"* %11 to i64*
  store i64 %64, i64* %129, align 8, !alias.scope !343
  %130 = zext i32 %63 to i64
  %131 = zext i1 %58 to i64
  %132 = shl nuw nsw i64 %131, 32
  %133 = or i64 %132, %130
  %134 = zext i32 %62 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %60 to i64
  %137 = or i64 %135, %136
  %138 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %11, i64 0, i32 1
  %139 = bitcast %"struct.ruy::MatLayout"* %138 to i64*
  store i64 %137, i64* %139, align 8, !alias.scope !343
  %140 = bitcast i32* %126 to i40*
  %141 = trunc i64 %133 to i40
  store i40 %141, i40* %140, align 8, !alias.scope !343
  store i32 %66, i32* %127, align 8, !alias.scope !343
  store i8 0, i8* %128, align 4, !alias.scope !343
  %142 = tail call %"class.ruy::Ctx"* @_ZN3ruy7get_ctxEPNS_7ContextE(%"class.ruy::Context"* %90) #11
  call void @_ZN3ruy11DispatchMulILNS_4PathE26EaaiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat.99"* nonnull dereferenceable(32) %9, %"struct.ruy::Mat.99"* nonnull dereferenceable(32) %10, %"class.ruy::MulParams.98"* nonnull dereferenceable(40) %12, %"class.ruy::Ctx"* %142, %"struct.ruy::Mat.100"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy11DispatchMulILNS_4PathE26EaaiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat.99"* dereferenceable(32), %"struct.ruy::Mat.99"* dereferenceable(32), %"class.ruy::MulParams.98"* dereferenceable(40), %"class.ruy::Ctx"*, %"struct.ruy::Mat.100"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.ruy::TrMulParams", align 8
  %7 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 1, i32 1
  %8 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %4, i64 0, i32 2
  %11 = tail call zeroext i8 @_ZN3ruy3Ctx10SelectPathENS_4PathE(%"class.ruy::Ctx"* %3, i8 zeroext 26) #11
  %12 = bitcast %"struct.ruy::Mat.99"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %7, align 4
  %17 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 1, i32 3
  %20 = load i8, i8* %19, align 4
  %21 = load i8, i8* %8, align 8
  %22 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 3
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %20, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 272, i1 false)
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 4
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 5
  %31 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 2
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 4
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 5
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 2
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 2
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 5
  store i8 0, i8* %39, align 4
  %40 = bitcast i8** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 21, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 0
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 1
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 2
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  %47 = bitcast i8** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 11, i1 false) #11
  %48 = bitcast i8** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 22, i1 false) #11
  %49 = bitcast %"class.ruy::SidePair"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %46, align 1
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 0
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 1
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 2
  store i8 0, i8* %54, align 2
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 2
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 5
  %57 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  %58 = bitcast i8** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 11, i1 false) #11
  %59 = bitcast i8** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 22, i1 false) #11
  store i8 1, i8* %57, align 1
  %60 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %60, align 1
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 1
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 7
  %65 = sext i8 %21 to i32
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3
  %67 = bitcast %"class.ruy::SidePair.37"* %66 to i24*
  store i24 65537, i24* %67, align 8
  %68 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 -86, i64 5, i1 false) #11
  %69 = bitcast i8** %28 to i64*
  store i64 %13, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  store i32 %16, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  store i32 %15, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 2
  store i32 %18, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  store i8 %25, i8* %73, align 4
  %74 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %74, i8 -86, i64 3, i1 false) #11
  store i32 %65, i32* %29, align 8
  store i8 %23, i8* %30, align 4
  %75 = bitcast %"struct.ruy::Mat.99"* %1 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !346
  %77 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 1
  %78 = bitcast %"struct.ruy::MatLayout"* %77 to i8*
  %79 = load i8, i8* %9, align 8, !noalias !346
  %80 = sext i8 %79 to i32
  %81 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 3
  %82 = load i8, i8* %81, align 1, !noalias !346
  %83 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1
  %84 = bitcast %"struct.ruy::EMat"* %83 to i24*
  store i24 65537, i24* %84, align 8
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 -86, i64 5, i1 false) #11
  %86 = bitcast i8** %31 to i64*
  store i64 %76, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3
  %88 = bitcast %"struct.ruy::MatLayout"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %78, i64 13, i1 false)
  %89 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %89, i8 -86, i64 3, i1 false) #11
  store i32 %80, i32* %32, align 8
  store i8 %82, i8* %33, align 4
  %90 = bitcast %"struct.ruy::Mat.100"* %4 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !349
  %92 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %4, i64 0, i32 1
  %93 = bitcast %"struct.ruy::MatLayout"* %92 to i8*
  %94 = load i32, i32* %10, align 8, !noalias !349
  %95 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %4, i64 0, i32 3
  %96 = load i8, i8* %95, align 4, !noalias !349
  %97 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4
  %98 = bitcast %"struct.ruy::EMat"* %97 to i24*
  store i24 262145, i24* %98, align 8
  %99 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %99, i8 -86, i64 5, i1 false) #11
  %100 = bitcast i8** %37 to i64*
  store i64 %91, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3
  %102 = bitcast %"struct.ruy::MatLayout"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 4 %93, i64 13, i1 false)
  %103 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %103, i8 -86, i64 3, i1 false) #11
  store i32 %94, i32* %38, align 8
  store i8 %96, i8* %39, align 4
  %104 = bitcast i8** %64 to %"class.ruy::MulParams.98"**
  store %"class.ruy::MulParams.98"* %2, %"class.ruy::MulParams.98"** %104, align 8
  %105 = icmp eq i8 %11, 16
  br i1 %105, label %106, label %191

106:                                              ; preds = %5
  br i1 %24, label %115, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %109 = load i8, i8* %108, align 4
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 3
  %113 = load i8, i8* %112, align 4
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %149, label %115

115:                                              ; preds = %106, %111, %107
  store i8 2, i8* %26, align 8
  %116 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %117 = bitcast %"struct.ruy::PEMat"* %116 to i24*
  store i24 65537, i24* %117, align 8
  %118 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %119 = bitcast %"struct.ruy::Type"* %118 to i24*
  store i24 262145, i24* %119, align 8
  %120 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %120, align 4
  %121 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %16, i32* %121, align 8
  %122 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %122, align 4
  %123 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %123, align 1
  store i8 1, i8* %46, align 1
  store i8 1, i8* %50, align 1
  %124 = and i32 %16, 1023
  %125 = icmp eq i32 %124, 0
  %126 = add nsw i32 %16, 64
  %127 = select i1 %125, i32 %126, i32 %16
  %128 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %127, i32* %128, align 8
  store i32 %65, i32* %51, align 8
  %129 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %130 = bitcast %"struct.ruy::PEMat"* %129 to i24*
  store i24 65537, i24* %130, align 8
  %131 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %132 = bitcast %"struct.ruy::Type"* %131 to i24*
  store i24 262145, i24* %132, align 8
  %133 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %133, align 4
  %134 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %135, i32* %136, align 8
  %137 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %138, i32* %139, align 4
  %140 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %140, align 1
  store i8 1, i8* %57, align 1
  store i8 1, i8* %60, align 1
  %141 = and i32 %135, 1023
  %142 = icmp eq i32 %141, 0
  %143 = add nsw i32 %135, 64
  %144 = select i1 %142, i32 %143, i32 %135
  %145 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %144, i32* %145, align 8
  store i32 %80, i32* %61, align 8
  %146 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %147 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %146 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %147, align 8
  %148 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %148, align 8
  br label %192

149:                                              ; preds = %111
  store i8 16, i8* %26, align 8
  %150 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %151 = bitcast %"struct.ruy::PEMat"* %150 to i24*
  store i24 65537, i24* %151, align 8
  %152 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %153 = bitcast %"struct.ruy::Type"* %152 to i24*
  store i24 262145, i24* %153, align 8
  %154 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %154, align 4
  %155 = add i32 %16, 3
  %156 = and i32 %155, -4
  %157 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %156, i32* %157, align 8
  %158 = add i32 %15, 15
  %159 = and i32 %158, -16
  %160 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %159, i32* %160, align 4
  %161 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %161, align 1
  store i8 4, i8* %46, align 1
  store i8 16, i8* %50, align 1
  %162 = and i32 %155, 1020
  %163 = icmp eq i32 %162, 0
  %164 = add nsw i32 %156, 64
  %165 = select i1 %163, i32 %164, i32 %156
  %166 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %165, i32* %166, align 8
  store i32 %65, i32* %51, align 8
  %167 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %168 = bitcast %"struct.ruy::PEMat"* %167 to i24*
  store i24 65537, i24* %168, align 8
  %169 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %170 = bitcast %"struct.ruy::Type"* %169 to i24*
  store i24 262145, i24* %170, align 8
  %171 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %171, align 4
  %172 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %173 = load i32, i32* %172, align 8
  %174 = add i32 %173, 3
  %175 = and i32 %174, -4
  %176 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %175, i32* %176, align 8
  %177 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = add i32 %178, 15
  %180 = and i32 %179, -16
  %181 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %180, i32* %181, align 4
  %182 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %182, align 1
  store i8 4, i8* %57, align 1
  store i8 16, i8* %60, align 1
  %183 = and i32 %174, 1020
  %184 = icmp eq i32 %183, 0
  %185 = add nsw i32 %175, 64
  %186 = select i1 %184, i32 %185, i32 %175
  %187 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %186, i32* %187, align 8
  store i32 %80, i32* %61, align 8
  %188 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %189 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %188 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %189, align 8
  %190 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE16EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %190, align 8
  br label %192

191:                                              ; preds = %5
  call void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EaaiNS_9MulParamsIiiEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext %11, %"struct.ruy::TrMulParams"* nonnull %6) #11
  br label %192

192:                                              ; preds = %149, %115, %191
  call void @_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3)
  call void @_ZN3ruy5TrMulEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3) #11
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %26) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8, !noalias !352
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8, !noalias !355
  %17 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %18 = bitcast i8** %17 to i32**
  %19 = load i32*, i32** %18, align 8, !noalias !355
  %20 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %23 = load i32, i32* %22, align 8, !noalias !355
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = trunc i32 %23 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 %25, i64 32, i1 false) #11
  %26 = icmp slt i32 %3, %4
  br i1 %26, label %27, label %46

27:                                               ; preds = %5
  %28 = icmp eq i32* %19, null
  %29 = sext i32 %3 to i64
  %30 = sext i32 %4 to i64
  %31 = sext i32 %14 to i64
  br label %32

32:                                               ; preds = %32, %27
  %33 = phi i64 [ %29, %27 ], [ %44, %32 ]
  %34 = getelementptr inbounds i32, i32* %19, i64 %33
  %35 = select i1 %28, i32* null, i32* %34
  %36 = mul nsw i64 %33, %31
  %37 = getelementptr inbounds i8, i8* %8, i64 %36
  %38 = trunc i64 %33 to i32
  %39 = sub nsw i32 %12, %38
  %40 = and i32 %38, -16
  %41 = mul nsw i32 %40, %21
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %16, i64 %42
  call void @_ZN3ruy14Pack8bitAvx512EPKaaS1_iiiPaPi(i8* %37, i8 signext 0, i8* nonnull %24, i32 %14, i32 %39, i32 %10, i8* %43, i32* %35) #11
  %44 = add nsw i64 %33, 16
  %45 = icmp slt i64 %44, %30
  br i1 %45, label %32, label %46

46:                                               ; preds = %32, %5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE16EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.35"* dereferenceable(112), i8*, %"class.ruy::SidePair.36"* dereferenceable(8), %"class.ruy::SidePair.36"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParams8bit", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = bitcast i8** %8 to i32**
  %10 = load i32*, i32** %9, align 8, !noalias !358
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %18 = load i32, i32* %17, align 8, !noalias !358
  %19 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8, !noalias !361
  %21 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 5
  %22 = bitcast i8** %21 to i32**
  %23 = load i32*, i32** %22, align 8, !noalias !361
  %24 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 7
  %29 = load i32, i32* %28, align 8, !noalias !361
  %30 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 2
  %31 = load i8*, i8** %30, align 8, !noalias !364
  %32 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 5
  %33 = bitcast i8** %32 to i32**
  %34 = load i32*, i32** %33, align 8, !noalias !364
  %35 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 7
  %38 = load i32, i32* %37, align 8, !noalias !364
  %39 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = bitcast %"struct.ruy::KernelParams8bit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1352, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 1
  %49 = bitcast i32** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 1344, i1 false) #11
  %50 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 27, i64 0
  %51 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 64, i1 false) #11
  %52 = mul nsw i32 %40, %27
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %20, i64 %53
  %55 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 3
  store i8* %54, i8** %55, align 8
  %56 = mul nsw i32 %42, %36
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %31, i64 %57
  %59 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 6
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 24
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 0
  store i32* %50, i32** %61, align 8
  %62 = bitcast i8* %2 to i32**
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %6
  store i32* %63, i32** %61, align 8
  store i8 1, i8* %60, align 8
  br label %66

66:                                               ; preds = %65, %6
  %67 = phi i8 [ 0, %6 ], [ 1, %65 ]
  %68 = icmp eq i32* %23, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 1
  store i32* %23, i32** %70, align 8
  %71 = or i8 %67, 2
  store i8 %71, i8* %60, align 8
  br label %72

72:                                               ; preds = %69, %66
  %73 = phi i8 [ %67, %66 ], [ %71, %69 ]
  %74 = icmp eq i32* %34, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 2
  store i32* %34, i32** %76, align 8
  %77 = or i8 %73, 4
  store i8 %77, i8* %60, align 8
  br label %78

78:                                               ; preds = %75, %72
  %79 = phi i8 [ %73, %72 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 12
  store i32 %40, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 13
  store i32 %42, i32* %81, align 4
  %82 = add nsw i32 %44, -16
  %83 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 14
  store i32 %82, i32* %83, align 8
  %84 = add nsw i32 %46, -16
  %85 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 15
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 18
  store i32 %27, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 19
  store i32 %36, i32* %87, align 4
  %88 = shl i32 %16, 2
  %89 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 20
  store i32 %88, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 8
  store i32 %29, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 9
  store i32 %38, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 10
  store i32 %18, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 21
  store i32 %25, i32* %93, align 4
  %94 = mul i32 %29, %25
  %95 = mul i32 %94, %38
  %96 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 11
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds i8, i8* %2, i64 16
  %98 = bitcast i8* %97 to i32**
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %78
  %102 = ptrtoint i32* %99 to i64
  %103 = or i8 %79, 24
  store i8 %103, i8* %60, align 8
  %104 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 4
  %105 = bitcast i32** %104 to i64*
  store i64 %102, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %2, i64 24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 5
  %110 = bitcast i32** %109 to i64*
  store i64 %108, i64* %110, align 8
  br label %148

111:                                              ; preds = %78
  %112 = getelementptr inbounds i8, i8* %2, i64 12
  %113 = bitcast i8* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = or i8 %79, 16
  store i8 %117, i8* %60, align 8
  br label %118

118:                                              ; preds = %116, %111
  %119 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 0
  %120 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 4
  store i32* %119, i32** %120, align 8
  %121 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 0
  %122 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 5
  store i32* %121, i32** %122, align 8
  %123 = getelementptr inbounds i8, i8* %2, i64 8
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = insertelement <4 x i32> undef, i32 %125, i32 0
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> zeroinitializer
  %128 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %128, align 4
  %129 = insertelement <4 x i32> undef, i32 %114, i32 0
  %130 = shufflevector <4 x i32> %129, <4 x i32> undef, <4 x i32> zeroinitializer
  %131 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 4
  store i32 %125, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 4
  store i32 %114, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 5
  store i32 %125, i32* %134, align 4
  %135 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 5
  store i32 %114, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 6
  store i32 %125, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 6
  store i32 %114, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 7
  %139 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 7
  %140 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %140, align 4
  %141 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 11
  %143 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 11
  %144 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %144, align 4
  %145 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 15
  store i32 %125, i32* %146, align 4
  %147 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 15
  store i32 %114, i32* %147, align 4
  br label %148

148:                                              ; preds = %101, %118
  %149 = getelementptr inbounds i8, i8* %2, i64 32
  %150 = bitcast i8* %149 to i32*
  %151 = load i32, i32* %150, align 8
  %152 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 22
  store i32 %151, i32* %152, align 8
  %153 = getelementptr inbounds i8, i8* %2, i64 36
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 23
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 16
  store i32 %12, i32* %157, align 8
  %158 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 17
  store i32 %14, i32* %158, align 4
  %159 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 25
  store i8 4, i8* %159, align 1
  %160 = mul nsw i32 %42, %16
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i32, i32* %10, i64 %161
  %163 = sext i32 %40 to i64
  %164 = getelementptr inbounds i32, i32* %162, i64 %163
  %165 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 7
  %166 = bitcast i8** %165 to i32**
  store i32* %164, i32** %166, align 8
  %167 = icmp eq i32 %14, 1
  br i1 %167, label %168, label %169

168:                                              ; preds = %148
  call void @_ZN3ruy25Kernel8bitAvx512SingleColERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* nonnull dereferenceable(1352) %7) #11
  br label %170

169:                                              ; preds = %148
  call void @_ZN3ruy16Kernel8bitAvx512ERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* nonnull dereferenceable(1352) %7) #11
  br label %170

170:                                              ; preds = %168, %169
  call void @llvm.lifetime.end.p0i8(i64 1352, i8* nonnull %47) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca %"struct.ruy::Mat.99", align 8
  %7 = alloca %"struct.ruy::PMat.101", align 8
  %8 = bitcast %"struct.ruy::Mat.99"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %6, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %6, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %13 = bitcast i8** %12 to i64*
  %14 = bitcast %"struct.ruy::Mat.99"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = load i64, i64* %13, align 8, !noalias !367
  %16 = bitcast %"struct.ruy::Mat.99"* %6 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !367
  %17 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3
  %18 = bitcast %"struct.ruy::MatLayout"* %11 to i8*
  %19 = bitcast %"struct.ruy::MatLayout"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 13, i1 false) #11
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !noalias !367
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %9, align 8, !alias.scope !367
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 5
  %24 = load i8, i8* %23, align 4, !noalias !367
  store i8 %24, i8* %10, align 1, !alias.scope !367
  %25 = bitcast %"struct.ruy::PMat.101"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %7, i64 0, i32 3
  %27 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %28 = bitcast i8** %27 to i64*
  %29 = bitcast %"struct.ruy::PMat.101"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 40, i1 false)
  %30 = load i64, i64* %28, align 8, !noalias !370
  %31 = bitcast %"struct.ruy::PMat.101"* %7 to i64*
  store i64 %30, i64* %31, align 8, !alias.scope !370
  %32 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !370
  %35 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %7, i64 0, i32 1
  %36 = bitcast i32** %35 to i64*
  store i64 %34, i64* %36, align 8, !alias.scope !370
  %37 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6
  %38 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %7, i64 0, i32 2
  %39 = bitcast %"struct.ruy::PMatLayout"* %38 to i8*
  %40 = bitcast %"struct.ruy::PMatLayout"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 4 %40, i64 16, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %42 = load i32, i32* %41, align 8, !noalias !370
  store i32 %42, i32* %26, align 8, !alias.scope !370
  call void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaiE3RunENS_6TuningERKNS_3MatIaEEPNS_4PMatIaEEii(i32 %0, %"struct.ruy::Mat.99"* nonnull dereferenceable(32) %6, %"struct.ruy::PMat.101"* nonnull %7, i32 %3, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.35"* dereferenceable(112), i8*, %"class.ruy::SidePair.36"* dereferenceable(8), %"class.ruy::SidePair.36"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::Kernel.102", align 1
  %8 = alloca %"struct.ruy::Mat.100", align 8
  %9 = alloca %"struct.ruy::PMat.101", align 8
  %10 = alloca %"struct.ruy::PMat.101", align 8
  %11 = bitcast %"struct.ruy::Mat.100"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %8, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %8, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  %17 = bitcast %"struct.ruy::Mat.100"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = load i64, i64* %16, align 8, !noalias !373
  %19 = bitcast %"struct.ruy::Mat.100"* %8 to i64*
  store i64 %18, i64* %19, align 8, !alias.scope !373
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3
  %21 = bitcast %"struct.ruy::MatLayout"* %14 to i8*
  %22 = bitcast %"struct.ruy::MatLayout"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 13, i1 false) #11
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %24 = load i32, i32* %23, align 8, !noalias !373
  store i32 %24, i32* %12, align 8, !alias.scope !373
  %25 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 5
  %26 = load i8, i8* %25, align 4, !noalias !373
  store i8 %26, i8* %13, align 4, !alias.scope !373
  %27 = bitcast %"struct.ruy::PMat.101"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 40, i1 false) #11, !alias.scope !376
  %28 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %9, i64 0, i32 3
  %29 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 2
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !376
  %32 = bitcast %"struct.ruy::PMat.101"* %9 to i64*
  store i64 %31, i64* %32, align 8, !alias.scope !376
  %33 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 5
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !376
  %36 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %9, i64 0, i32 1
  %37 = bitcast i32** %36 to i64*
  store i64 %35, i64* %37, align 8, !alias.scope !376
  %38 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6
  %39 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %9, i64 0, i32 2
  %40 = bitcast %"struct.ruy::PMatLayout"* %39 to i8*
  %41 = bitcast %"struct.ruy::PMatLayout"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 4 %41, i64 16, i1 false) #11
  %42 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 7
  %43 = load i32, i32* %42, align 8, !noalias !376
  store i32 %43, i32* %28, align 8, !alias.scope !376
  %44 = bitcast %"struct.ruy::PMat.101"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 40, i1 false) #11, !alias.scope !379
  %45 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %10, i64 0, i32 3
  %46 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 2
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8, !noalias !379
  %49 = bitcast %"struct.ruy::PMat.101"* %10 to i64*
  store i64 %48, i64* %49, align 8, !alias.scope !379
  %50 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 5
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !379
  %53 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %10, i64 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8, !alias.scope !379
  %55 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 6
  %56 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %10, i64 0, i32 2
  %57 = bitcast %"struct.ruy::PMatLayout"* %56 to i8*
  %58 = bitcast %"struct.ruy::PMatLayout"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %58, i64 16, i1 false) #11
  %59 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 7
  %60 = load i32, i32* %59, align 8, !noalias !379
  store i32 %60, i32* %45, align 8, !alias.scope !379
  %61 = bitcast i8* %2 to %"class.ruy::MulParams.98"*
  %62 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.ruy::Kernel.102", %"struct.ruy::Kernel.102"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %70) #11
  store i8 -86, i8* %70, align 1
  call void @_ZNK3ruy6KernelILNS_4PathE2EaaiNS_9MulParamsIiiEEE3RunERKNS_4PMatIaEES8_RKS3_iiiiPNS_3MatIiEE(%"struct.ruy::Kernel.102"* nonnull %7, %"struct.ruy::PMat.101"* nonnull dereferenceable(40) %9, %"struct.ruy::PMat.101"* nonnull dereferenceable(40) %10, %"class.ruy::MulParams.98"* dereferenceable(40) %61, i32 %63, i32 %65, i32 %67, i32 %69, %"struct.ruy::Mat.100"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaiE3RunENS_6TuningERKNS_3MatIaEEPNS_4PMatIaEEii(i32, %"struct.ruy::Mat.99"* dereferenceable(32), %"struct.ruy::PMat.101"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = icmp slt i32 %3, %4
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 1, i32 3
  %16 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 1, i32 2
  %17 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 4, i32 1
  %19 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 4, i32 2
  %20 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 3
  %21 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 2
  %22 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 4, i32 0
  %23 = icmp eq i32* %7, null
  %24 = sext i32 %3 to i64
  %25 = sext i32 %4 to i64
  br label %26

26:                                               ; preds = %107, %9
  %27 = phi i64 [ %24, %9 ], [ %108, %107 ]
  %28 = load i32, i32* %10, align 8
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = trunc i64 %27 to i32
  %32 = trunc i64 %27 to i32
  br label %36

33:                                               ; preds = %107, %5
  ret void

34:                                               ; preds = %64, %26
  %35 = phi i32 [ 0, %26 ], [ %68, %64 ]
  br i1 %23, label %107, label %105

36:                                               ; preds = %30, %64
  %37 = phi i32 [ %102, %64 ], [ 0, %30 ]
  %38 = phi i32 [ %68, %64 ], [ 0, %30 ]
  %39 = load i32, i32* %11, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %27, %40
  br i1 %41, label %42, label %61

42:                                               ; preds = %36
  %43 = load i32, i32* %12, align 8
  %44 = icmp slt i32 %37, %43
  br i1 %44, label %45, label %61

45:                                               ; preds = %42
  %46 = load i8*, i8** %14, align 8
  %47 = load i8, i8* %15, align 4
  %48 = load i32, i32* %16, align 4
  switch i8 %47, label %49 [
    i8 0, label %50
    i8 1, label %52
  ]

49:                                               ; preds = %45
  br label %50

50:                                               ; preds = %49, %45
  %51 = phi i32 [ 1, %45 ], [ %48, %49 ]
  br label %52

52:                                               ; preds = %45, %50
  %53 = phi i32 [ %51, %50 ], [ %48, %45 ]
  %54 = phi i32 [ %48, %50 ], [ 1, %45 ]
  %55 = mul nsw i32 %53, %37
  %56 = mul nsw i32 %54, %32
  %57 = add nsw i32 %56, %55
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %46, i64 %58
  %60 = load i8, i8* %59, align 1
  br label %64

61:                                               ; preds = %42, %36
  %62 = load i32, i32* %13, align 8
  %63 = trunc i32 %62 to i8
  br label %64

64:                                               ; preds = %61, %52
  %65 = phi i32 [ %31, %61 ], [ %32, %52 ]
  %66 = phi i8 [ %63, %61 ], [ %60, %52 ]
  %67 = sext i8 %66 to i32
  %68 = add nsw i32 %38, %67
  %69 = load i8*, i8** %17, align 8
  %70 = load i8, i8* %18, align 1
  %71 = zext i8 %70 to i32
  %72 = sub nsw i32 0, %71
  %73 = and i32 %37, %72
  %74 = load i8, i8* %19, align 1
  %75 = zext i8 %74 to i32
  %76 = sub nsw i32 0, %75
  %77 = and i32 %65, %76
  %78 = load i8, i8* %20, align 4
  %79 = icmp eq i8 %78, 0
  %80 = load i32, i32* %21, align 4
  %81 = select i1 %79, i32 %75, i32 %80
  %82 = icmp eq i8 %78, 1
  %83 = select i1 %82, i32 %71, i32 %80
  %84 = mul nsw i32 %81, %73
  %85 = mul nsw i32 %83, %77
  %86 = sub nsw i32 %37, %73
  %87 = sub nsw i32 %65, %77
  %88 = load i8, i8* %22, align 1
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, i8 1, i8 %74
  %91 = zext i8 %90 to i32
  %92 = icmp eq i8 %88, 1
  %93 = select i1 %92, i8 1, i8 %70
  %94 = zext i8 %93 to i32
  %95 = mul nsw i32 %86, %91
  %96 = mul nsw i32 %87, %94
  %97 = add i32 %84, %85
  %98 = add i32 %97, %96
  %99 = add i32 %98, %95
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %69, i64 %100
  store i8 %66, i8* %101, align 1
  %102 = add nuw nsw i32 %37, 1
  %103 = load i32, i32* %10, align 8
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %36, label %34

105:                                              ; preds = %34
  %106 = getelementptr inbounds i32, i32* %7, i64 %27
  store i32 %35, i32* %106, align 4
  br label %107

107:                                              ; preds = %34, %105
  %108 = add nsw i64 %27, 1
  %109 = icmp eq i64 %108, %25
  br i1 %109, label %33, label %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3ruy6KernelILNS_4PathE2EaaiNS_9MulParamsIiiEEE3RunERKNS_4PMatIaEES8_RKS3_iiiiPNS_3MatIiEE(%"struct.ruy::Kernel.102"*, %"struct.ruy::PMat.101"* dereferenceable(40), %"struct.ruy::PMat.101"* dereferenceable(40), %"class.ruy::MulParams.98"* dereferenceable(40), i32, i32, i32, i32, %"struct.ruy::Mat.100"*) local_unnamed_addr #0 comdat align 2 {
  %10 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %8, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %6
  %13 = select i1 %12, i32 %11, i32 %6
  %14 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %8, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, %7
  %17 = select i1 %16, i32 %15, i32 %7
  %18 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %13, %4
  br i1 %20, label %21, label %56

21:                                               ; preds = %9
  %22 = icmp sgt i32 %17, %5
  %23 = icmp sgt i32 %19, 0
  %24 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 4, i32 1
  %26 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 4, i32 2
  %27 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 3
  %28 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 2
  %29 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 4, i32 0
  %30 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 4, i32 1
  %32 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 4, i32 2
  %33 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 3
  %34 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 2
  %35 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 4, i32 0
  %36 = getelementptr inbounds %"class.ruy::MulParams.98", %"class.ruy::MulParams.98"* %3, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 3
  %38 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %8, i64 0, i32 2
  %42 = getelementptr inbounds %"class.ruy::MulParams.98", %"class.ruy::MulParams.98"* %3, i64 0, i32 6
  %43 = getelementptr inbounds %"class.ruy::MulParams.98", %"class.ruy::MulParams.98"* %3, i64 0, i32 5
  %44 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %8, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %8, i64 0, i32 1, i32 3
  %46 = getelementptr inbounds %"struct.ruy::Mat.100", %"struct.ruy::Mat.100"* %8, i64 0, i32 1, i32 2
  %47 = sext i32 %5 to i64
  %48 = sext i32 %17 to i64
  %49 = sext i32 %4 to i64
  %50 = sext i32 %13 to i64
  br label %51

51:                                               ; preds = %21, %109
  %52 = phi i64 [ %49, %21 ], [ %110, %109 ]
  br i1 %22, label %53, label %109

53:                                               ; preds = %51
  %54 = trunc i64 %52 to i32
  %55 = trunc i64 %52 to i32
  br label %57

56:                                               ; preds = %109, %9
  ret void

57:                                               ; preds = %53, %190
  %58 = phi i64 [ %47, %53 ], [ %199, %190 ]
  br i1 %23, label %59, label %112

59:                                               ; preds = %57
  %60 = load i8*, i8** %24, align 8
  %61 = load i8, i8* %25, align 1
  %62 = zext i8 %61 to i32
  %63 = sub nsw i32 0, %62
  %64 = load i8, i8* %26, align 1
  %65 = zext i8 %64 to i32
  %66 = sub nsw i32 0, %65
  %67 = and i32 %54, %66
  %68 = load i8, i8* %27, align 4
  %69 = icmp eq i8 %68, 0
  %70 = load i32, i32* %28, align 4
  %71 = select i1 %69, i32 %65, i32 %70
  %72 = icmp eq i8 %68, 1
  %73 = select i1 %72, i32 %62, i32 %70
  %74 = mul nsw i32 %73, %67
  %75 = sub nsw i32 %54, %67
  %76 = load i8, i8* %29, align 1
  %77 = icmp eq i8 %76, 0
  %78 = select i1 %77, i8 1, i8 %64
  %79 = zext i8 %78 to i32
  %80 = icmp eq i8 %76, 1
  %81 = select i1 %80, i8 1, i8 %61
  %82 = zext i8 %81 to i32
  %83 = mul nsw i32 %75, %82
  %84 = load i8*, i8** %30, align 8
  %85 = load i8, i8* %31, align 1
  %86 = zext i8 %85 to i32
  %87 = sub nsw i32 0, %86
  %88 = load i8, i8* %32, align 1
  %89 = zext i8 %88 to i32
  %90 = sub nsw i32 0, %89
  %91 = trunc i64 %58 to i32
  %92 = and i32 %91, %90
  %93 = load i8, i8* %33, align 4
  %94 = icmp eq i8 %93, 0
  %95 = load i32, i32* %34, align 4
  %96 = select i1 %94, i32 %89, i32 %95
  %97 = icmp eq i8 %93, 1
  %98 = select i1 %97, i32 %86, i32 %95
  %99 = mul nsw i32 %98, %92
  %100 = sub nsw i32 %91, %92
  %101 = load i8, i8* %35, align 1
  %102 = icmp eq i8 %101, 0
  %103 = select i1 %102, i8 1, i8 %88
  %104 = zext i8 %103 to i32
  %105 = icmp eq i8 %101, 1
  %106 = select i1 %105, i8 1, i8 %85
  %107 = zext i8 %106 to i32
  %108 = mul nsw i32 %100, %107
  br label %116

109:                                              ; preds = %190, %51
  %110 = add nsw i64 %52, 1
  %111 = icmp slt i64 %110, %50
  br i1 %111, label %51, label %56

112:                                              ; preds = %116, %57
  %113 = phi i32 [ 0, %57 ], [ %142, %116 ]
  %114 = load i32*, i32** %36, align 8
  %115 = icmp eq i32* %114, null
  br i1 %115, label %149, label %145

116:                                              ; preds = %116, %59
  %117 = phi i32 [ 0, %59 ], [ %143, %116 ]
  %118 = phi i32 [ 0, %59 ], [ %142, %116 ]
  %119 = and i32 %117, %63
  %120 = mul nsw i32 %71, %119
  %121 = sub nsw i32 %117, %119
  %122 = mul nsw i32 %121, %79
  %123 = add i32 %120, %74
  %124 = add i32 %123, %83
  %125 = add i32 %124, %122
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %60, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = sext i8 %128 to i32
  %130 = and i32 %117, %87
  %131 = mul nsw i32 %96, %130
  %132 = sub nsw i32 %117, %130
  %133 = mul nsw i32 %132, %104
  %134 = add i32 %131, %99
  %135 = add i32 %134, %108
  %136 = add i32 %135, %133
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %84, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = sext i8 %139 to i32
  %141 = mul nsw i32 %140, %129
  %142 = add nsw i32 %141, %118
  %143 = add nuw nsw i32 %117, 1
  %144 = icmp eq i32 %143, %19
  br i1 %144, label %112, label %116

145:                                              ; preds = %112
  %146 = getelementptr inbounds i32, i32* %114, i64 %52
  %147 = load i32, i32* %146, align 4
  %148 = add nsw i32 %147, %113
  br label %149

149:                                              ; preds = %112, %145
  %150 = phi i32 [ %113, %112 ], [ %148, %145 ]
  %151 = load i32, i32* %37, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %149
  %154 = load i32*, i32** %38, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 %58
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = sub nsw i32 %150, %157
  br label %159

159:                                              ; preds = %149, %153
  %160 = phi i32 [ %150, %149 ], [ %158, %153 ]
  %161 = load i32, i32* %39, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %174, label %163

163:                                              ; preds = %159
  %164 = load i32*, i32** %40, align 8
  %165 = getelementptr inbounds i32, i32* %164, i64 %52
  %166 = load i32, i32* %165, align 4
  %167 = mul nsw i32 %166, %161
  %168 = sub nsw i32 %160, %167
  %169 = or i1 %152, %162
  br i1 %169, label %174, label %170

170:                                              ; preds = %163
  %171 = mul i32 %151, %19
  %172 = mul i32 %171, %161
  %173 = add nsw i32 %168, %172
  br label %174

174:                                              ; preds = %159, %163, %170
  %175 = phi i32 [ %168, %163 ], [ %173, %170 ], [ %160, %159 ]
  %176 = load i32, i32* %41, align 8
  %177 = add nsw i32 %176, %175
  %178 = load i32, i32* %42, align 4
  %179 = icmp slt i32 %178, %177
  %180 = select i1 %179, i32 %178, i32 %177
  %181 = load i32, i32* %43, align 8
  %182 = icmp slt i32 %180, %181
  %183 = select i1 %182, i32 %181, i32 %180
  %184 = load i32*, i32** %44, align 8
  %185 = load i8, i8* %45, align 4
  %186 = load i32, i32* %46, align 4
  switch i8 %185, label %187 [
    i8 0, label %188
    i8 1, label %190
  ]

187:                                              ; preds = %174
  br label %188

188:                                              ; preds = %187, %174
  %189 = phi i32 [ 1, %174 ], [ %186, %187 ]
  br label %190

190:                                              ; preds = %174, %188
  %191 = phi i32 [ %189, %188 ], [ %186, %174 ]
  %192 = phi i32 [ %186, %188 ], [ 1, %174 ]
  %193 = mul nsw i32 %191, %55
  %194 = trunc i64 %58 to i32
  %195 = mul nsw i32 %192, %194
  %196 = add nsw i32 %195, %193
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i32, i32* %184, i64 %197
  store i32 %183, i32* %198, align 4
  %199 = add nsw i64 %58, 1
  %200 = icmp slt i64 %199, %48
  br i1 %200, label %57, label %109
}

declare void @_ZN3ruy14Pack8bitAvx512EPKaaS1_iiiPaPi(i8*, i8 signext, i8*, i32, i32, i32, i8*, i32*) local_unnamed_addr #4

declare void @_ZN3ruy25Kernel8bitAvx512SingleColERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* dereferenceable(1352)) local_unnamed_addr #4

declare void @_ZN3ruy16Kernel8bitAvx512ERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* dereferenceable(1352)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EaaiNS_9MulParamsIiiEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext, %"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat align 2 {
  switch i8 %0, label %57 [
    i8 8, label %3
    i8 2, label %4
  ]

3:                                                ; preds = %2
  tail call void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"* %1)
  br label %57

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 0
  store i8 2, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0
  %7 = bitcast %"struct.ruy::PEMat"* %6 to i24*
  store i24 65537, i24* %7, align 8
  %8 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 3
  %9 = bitcast %"struct.ruy::Type"* %8 to i24*
  store i24 262145, i24* %9, align 8
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %19, align 1
  %20 = and i32 %12, 1023
  %21 = icmp eq i32 %20, 0
  %22 = add nsw i32 %12, 64
  %23 = select i1 %21, i32 %22, i32 %12
  %24 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = shl i32 %26, 24
  %28 = ashr exact i32 %27, 24
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1
  %31 = bitcast %"struct.ruy::PEMat"* %30 to i24*
  store i24 65537, i24* %31, align 8
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 3
  %33 = bitcast %"struct.ruy::Type"* %32 to i24*
  store i24 262145, i24* %33, align 8
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %43, align 1
  %44 = and i32 %36, 1023
  %45 = icmp eq i32 %44, 0
  %46 = add nsw i32 %36, 64
  %47 = select i1 %45, i32 %46, i32 %36
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = shl i32 %50, 24
  %52 = ashr exact i32 %51, 24
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 1, i32 0, i64 0
  %55 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %54 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %55, align 8
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %56, align 8
  br label %57

57:                                               ; preds = %2, %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 4, i32 3, i32 3
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %54, label %13

13:                                               ; preds = %1, %5, %9
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 2, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %16 = bitcast %"struct.ruy::PEMat"* %15 to i24*
  store i24 65537, i24* %16, align 8
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %18 = bitcast %"struct.ruy::Type"* %17 to i24*
  store i24 262145, i24* %18, align 8
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %28, align 1
  %29 = and i32 %21, 1023
  %30 = icmp eq i32 %29, 0
  %31 = add nsw i32 %21, 64
  %32 = select i1 %30, i32 %31, i32 %21
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = shl i32 %35, 24
  %37 = ashr exact i32 %36, 24
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %40 = bitcast %"struct.ruy::PEMat"* %39 to i24*
  store i24 65537, i24* %40, align 8
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %42 = bitcast %"struct.ruy::Type"* %41 to i24*
  store i24 262145, i24* %42, align 8
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %52, align 1
  %53 = and i32 %45, 1023
  br label %103

54:                                               ; preds = %9
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 8, i8* %55, align 8
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %57 = bitcast %"struct.ruy::PEMat"* %56 to i24*
  store i24 65537, i24* %57, align 8
  %58 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %59 = bitcast %"struct.ruy::Type"* %58 to i24*
  store i24 262145, i24* %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %60, align 4
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, 3
  %64 = and i32 %63, -4
  %65 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 7
  %69 = and i32 %68, -8
  %70 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %71, align 1
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 4, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 8, i8* %73, align 1
  %74 = and i32 %63, 1020
  %75 = icmp eq i32 %74, 0
  %76 = add nsw i32 %64, 64
  %77 = select i1 %75, i32 %76, i32 %64
  %78 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %77, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = shl i32 %80, 24
  %82 = ashr exact i32 %81, 24
  %83 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %85 = bitcast %"struct.ruy::PEMat"* %84 to i24*
  store i24 65537, i24* %85, align 8
  %86 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %87 = bitcast %"struct.ruy::Type"* %86 to i24*
  store i24 262145, i24* %87, align 8
  %88 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %88, align 4
  %89 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, 3
  %92 = and i32 %91, -4
  %93 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 7
  %97 = and i32 %96, -8
  %98 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 4, i8* %100, align 1
  %101 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 8, i8* %101, align 1
  %102 = and i32 %91, 1020
  br label %103

103:                                              ; preds = %54, %13
  %104 = phi i32 [ %102, %54 ], [ %53, %13 ]
  %105 = phi i32 [ %92, %54 ], [ %45, %13 ]
  %106 = phi void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* [ @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %54 ], [ @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %13 ]
  %107 = phi void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* [ @_ZN3ruy9RunKernelILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %54 ], [ @_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %13 ]
  %108 = icmp eq i32 %104, 0
  %109 = add nsw i32 %105, 64
  %110 = select i1 %108, i32 %109, i32 %105
  %111 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 4
  %113 = load i32, i32* %112, align 8
  %114 = shl i32 %113, 24
  %115 = ashr exact i32 %114, 24
  %116 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %115, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 0
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %106, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %117, align 8
  %118 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 1
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %106, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %118, align 8
  %119 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* %107, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %119, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8, !noalias !382
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8, !noalias !385
  %17 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %18 = bitcast i8** %17 to i32**
  %19 = load i32*, i32** %18, align 8, !noalias !385
  %20 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %23 = load i32, i32* %22, align 8, !noalias !385
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = trunc i32 %23 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 %25, i64 32, i1 false) #11
  %26 = icmp slt i32 %3, %4
  br i1 %26, label %27, label %46

27:                                               ; preds = %5
  %28 = icmp eq i32* %19, null
  %29 = sext i32 %3 to i64
  %30 = sext i32 %4 to i64
  %31 = sext i32 %14 to i64
  br label %32

32:                                               ; preds = %32, %27
  %33 = phi i64 [ %29, %27 ], [ %44, %32 ]
  %34 = getelementptr inbounds i32, i32* %19, i64 %33
  %35 = select i1 %28, i32* null, i32* %34
  %36 = mul nsw i64 %33, %31
  %37 = getelementptr inbounds i8, i8* %8, i64 %36
  %38 = trunc i64 %33 to i32
  %39 = sub nsw i32 %12, %38
  %40 = and i32 %38, -8
  %41 = mul nsw i32 %40, %21
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %16, i64 %42
  call void @_ZN3ruy12Pack8bitAvx2EPKaaS1_iiiPaPi(i8* %37, i8 signext 0, i8* nonnull %24, i32 %14, i32 %39, i32 %10, i8* %43, i32* %35) #11
  %44 = add nsw i64 %33, 8
  %45 = icmp slt i64 %44, %30
  br i1 %45, label %32, label %46

46:                                               ; preds = %32, %5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.35"* dereferenceable(112), i8*, %"class.ruy::SidePair.36"* dereferenceable(8), %"class.ruy::SidePair.36"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParams8bit.106", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = bitcast i8** %8 to i32**
  %10 = load i32*, i32** %9, align 8, !noalias !388
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %18 = load i32, i32* %17, align 8, !noalias !388
  %19 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8, !noalias !391
  %21 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 5
  %22 = bitcast i8** %21 to i32**
  %23 = load i32*, i32** %22, align 8, !noalias !391
  %24 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 7
  %29 = load i32, i32* %28, align 8, !noalias !391
  %30 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 2
  %31 = load i8*, i8** %30, align 8, !noalias !394
  %32 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 5
  %33 = bitcast i8** %32 to i32**
  %34 = load i32*, i32** %33, align 8, !noalias !394
  %35 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 7
  %38 = load i32, i32* %37, align 8, !noalias !394
  %39 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = bitcast %"struct.ruy::KernelParams8bit.106"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 488, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 1
  %49 = bitcast i32** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 480, i1 false) #11
  %50 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 27, i64 0
  %51 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 32, i1 false) #11
  %52 = mul nsw i32 %40, %27
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %20, i64 %53
  %55 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 3
  store i8* %54, i8** %55, align 8
  %56 = mul nsw i32 %42, %36
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %31, i64 %57
  %59 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 6
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 24
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 0
  store i32* %50, i32** %61, align 8
  %62 = bitcast i8* %2 to i32**
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %6
  store i32* %63, i32** %61, align 8
  store i8 1, i8* %60, align 8
  br label %66

66:                                               ; preds = %65, %6
  %67 = phi i8 [ 0, %6 ], [ 1, %65 ]
  %68 = icmp eq i32* %23, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 1
  store i32* %23, i32** %70, align 8
  %71 = or i8 %67, 2
  store i8 %71, i8* %60, align 8
  br label %72

72:                                               ; preds = %69, %66
  %73 = phi i8 [ %67, %66 ], [ %71, %69 ]
  %74 = icmp eq i32* %34, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 2
  store i32* %34, i32** %76, align 8
  %77 = or i8 %73, 4
  store i8 %77, i8* %60, align 8
  br label %78

78:                                               ; preds = %75, %72
  %79 = phi i8 [ %73, %72 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 12
  store i32 %40, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 13
  store i32 %42, i32* %81, align 4
  %82 = add nsw i32 %44, -8
  %83 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 14
  store i32 %82, i32* %83, align 8
  %84 = add nsw i32 %46, -8
  %85 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 15
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 18
  store i32 %27, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 19
  store i32 %36, i32* %87, align 4
  %88 = shl i32 %16, 2
  %89 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 20
  store i32 %88, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 8
  store i32 %29, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 9
  store i32 %38, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 10
  store i32 %18, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 21
  store i32 %25, i32* %93, align 4
  %94 = mul i32 %29, %25
  %95 = mul i32 %94, %38
  %96 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 11
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds i8, i8* %2, i64 16
  %98 = bitcast i8* %97 to i32**
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %78
  %102 = ptrtoint i32* %99 to i64
  %103 = or i8 %79, 24
  store i8 %103, i8* %60, align 8
  %104 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 4
  %105 = bitcast i32** %104 to i64*
  store i64 %102, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %2, i64 24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 5
  %110 = bitcast i32** %109 to i64*
  store i64 %108, i64* %110, align 8
  br label %140

111:                                              ; preds = %78
  %112 = getelementptr inbounds i8, i8* %2, i64 12
  %113 = bitcast i8* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = or i8 %79, 16
  store i8 %117, i8* %60, align 8
  br label %118

118:                                              ; preds = %116, %111
  %119 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 0
  %120 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 4
  store i32* %119, i32** %120, align 8
  %121 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 0
  %122 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 5
  store i32* %121, i32** %122, align 8
  %123 = getelementptr inbounds i8, i8* %2, i64 8
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = insertelement <4 x i32> undef, i32 %125, i32 0
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> zeroinitializer
  %128 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %128, align 4
  %129 = insertelement <4 x i32> undef, i32 %114, i32 0
  %130 = shufflevector <4 x i32> %129, <4 x i32> undef, <4 x i32> zeroinitializer
  %131 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 4
  store i32 %125, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 4
  store i32 %114, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 5
  store i32 %125, i32* %134, align 4
  %135 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 5
  store i32 %114, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 6
  store i32 %125, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 6
  store i32 %114, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 7
  store i32 %125, i32* %138, align 4
  %139 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 7
  store i32 %114, i32* %139, align 4
  br label %140

140:                                              ; preds = %101, %118
  %141 = getelementptr inbounds i8, i8* %2, i64 32
  %142 = bitcast i8* %141 to i32*
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 22
  store i32 %143, i32* %144, align 8
  %145 = getelementptr inbounds i8, i8* %2, i64 36
  %146 = bitcast i8* %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 23
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 16
  store i32 %12, i32* %149, align 8
  %150 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 17
  store i32 %14, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 25
  store i8 4, i8* %151, align 1
  %152 = mul nsw i32 %42, %16
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %10, i64 %153
  %155 = sext i32 %40 to i64
  %156 = getelementptr inbounds i32, i32* %154, i64 %155
  %157 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 7
  %158 = bitcast i8** %157 to i32**
  store i32* %156, i32** %158, align 8
  %159 = icmp eq i32 %14, 1
  br i1 %159, label %160, label %161

160:                                              ; preds = %140
  call void @_ZN3ruy23Kernel8bitAvx2SingleColERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.106"* nonnull dereferenceable(488) %7) #11
  br label %162

161:                                              ; preds = %140
  call void @_ZN3ruy14Kernel8bitAvx2ERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.106"* nonnull dereferenceable(488) %7) #11
  br label %162

162:                                              ; preds = %160, %161
  call void @llvm.lifetime.end.p0i8(i64 488, i8* nonnull %47) #11
  ret void
}

declare void @_ZN3ruy12Pack8bitAvx2EPKaaS1_iiiPaPi(i8*, i8 signext, i8*, i32, i32, i32, i8*, i32*) local_unnamed_addr #4

declare void @_ZN3ruy23Kernel8bitAvx2SingleColERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.106"* dereferenceable(488)) local_unnamed_addr #4

declare void @_ZN3ruy14Kernel8bitAvx2ERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.106"* dereferenceable(488)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops11BatchMatMulERKNS_20FullyConnectedParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_PaPNS_17CpuBackendContextE(%"struct.tflite::FullyConnectedParams"* dereferenceable(40), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::CpuBackendContext"*) local_unnamed_addr #8 comdat {
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.88", align 4
  %12 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.88", align 4
  %13 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.88", align 4
  %14 = alloca %"struct.tflite::cpu_backend_gemm::GemmParams.112", align 8
  %15 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !397
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 8, !noalias !397
  %19 = icmp sgt i32 %18, 5
  br i1 %19, label %20, label %21

20:                                               ; preds = %8
  tail call void @abort() #12, !noalias !397
  unreachable

21:                                               ; preds = %8
  store i32 5, i32* %16, align 8, !alias.scope !397
  %22 = sub i32 5, %18
  %23 = icmp sgt i32 %22, 0
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  br i1 %23, label %25, label %105

25:                                               ; preds = %21
  %26 = bitcast %union.anon* %24 to [5 x i32]*
  %27 = zext i32 %22 to i64
  %28 = icmp ult i32 %22, 8
  br i1 %28, label %98, label %29

29:                                               ; preds = %25
  %30 = and i64 %27, 4294967288
  %31 = add nsw i64 %30, -8
  %32 = lshr exact i64 %31, 3
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 7
  %35 = icmp ult i64 %31, 56
  br i1 %35, label %83, label %36

36:                                               ; preds = %29
  %37 = sub nsw i64 %33, %34
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %80, %38 ]
  %40 = phi i64 [ %37, %36 ], [ %81, %38 ]
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %39
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !397
  %43 = getelementptr inbounds i32, i32* %41, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !397
  %45 = or i64 %39, 8
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %45
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !397
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !397
  %50 = or i64 %39, 16
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !397
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !397
  %55 = or i64 %39, 24
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !397
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !397
  %60 = or i64 %39, 32
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !397
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !397
  %65 = or i64 %39, 40
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !397
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !397
  %70 = or i64 %39, 48
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !397
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !397
  %75 = or i64 %39, 56
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !397
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !397
  %80 = add i64 %39, 64
  %81 = add i64 %40, -8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %38, !llvm.loop !400

83:                                               ; preds = %38, %29
  %84 = phi i64 [ 0, %29 ], [ %80, %38 ]
  %85 = icmp eq i64 %34, 0
  br i1 %85, label %96, label %86

86:                                               ; preds = %83, %86
  %87 = phi i64 [ %93, %86 ], [ %84, %83 ]
  %88 = phi i64 [ %94, %86 ], [ %34, %83 ]
  %89 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %87
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !397
  %91 = getelementptr inbounds i32, i32* %89, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %92, align 8, !alias.scope !397
  %93 = add i64 %87, 8
  %94 = add i64 %88, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %86, !llvm.loop !401

96:                                               ; preds = %86, %83
  %97 = icmp eq i64 %30, %27
  br i1 %97, label %105, label %98

98:                                               ; preds = %96, %25
  %99 = phi i64 [ 0, %25 ], [ %30, %96 ]
  br label %100

100:                                              ; preds = %98, %100
  %101 = phi i64 [ %103, %100 ], [ %99, %98 ]
  %102 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %101
  store i32 1, i32* %102, align 4, !alias.scope !397
  %103 = add nuw nsw i64 %101, 1
  %104 = icmp eq i64 %103, %27
  br i1 %104, label %105, label %100, !llvm.loop !402

105:                                              ; preds = %100, %96, %21
  %106 = getelementptr inbounds %union.anon, %union.anon* %24, i64 0, i32 0
  %107 = bitcast %union.anon* %24 to i32*
  %108 = sext i32 %22 to i64
  %109 = getelementptr inbounds i32, i32* %107, i64 %108
  %110 = bitcast i32* %109 to i8*
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %112 = bitcast %union.anon* %111 to i8*
  %113 = sext i32 %18 to i64
  %114 = shl nsw i64 %113, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %112, i64 %114, i1 false) #11
  %115 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %115) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 32, i1 false)
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %116, align 8, !alias.scope !403
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %118 = load i32, i32* %117, align 8, !noalias !403
  %119 = icmp sgt i32 %118, 5
  br i1 %119, label %120, label %121

120:                                              ; preds = %105
  tail call void @abort() #12, !noalias !403
  unreachable

121:                                              ; preds = %105
  store i32 5, i32* %116, align 8, !alias.scope !403
  %122 = sub i32 5, %118
  %123 = icmp sgt i32 %122, 0
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %125 = bitcast %union.anon* %124 to [5 x i32]*
  br i1 %123, label %126, label %205

126:                                              ; preds = %121
  %127 = zext i32 %122 to i64
  %128 = icmp ult i32 %122, 8
  br i1 %128, label %198, label %129

129:                                              ; preds = %126
  %130 = and i64 %127, 4294967288
  %131 = add nsw i64 %130, -8
  %132 = lshr exact i64 %131, 3
  %133 = add nuw nsw i64 %132, 1
  %134 = and i64 %133, 7
  %135 = icmp ult i64 %131, 56
  br i1 %135, label %183, label %136

136:                                              ; preds = %129
  %137 = sub nsw i64 %133, %134
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i64 [ 0, %136 ], [ %180, %138 ]
  %140 = phi i64 [ %137, %136 ], [ %181, %138 ]
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %139
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !403
  %143 = getelementptr inbounds i32, i32* %141, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !403
  %145 = or i64 %139, 8
  %146 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %145
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !403
  %148 = getelementptr inbounds i32, i32* %146, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !403
  %150 = or i64 %139, 16
  %151 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %150
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !403
  %153 = getelementptr inbounds i32, i32* %151, i64 4
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !403
  %155 = or i64 %139, 24
  %156 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %155
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !403
  %158 = getelementptr inbounds i32, i32* %156, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !403
  %160 = or i64 %139, 32
  %161 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %160
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !403
  %163 = getelementptr inbounds i32, i32* %161, i64 4
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !403
  %165 = or i64 %139, 40
  %166 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %165
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !403
  %168 = getelementptr inbounds i32, i32* %166, i64 4
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !403
  %170 = or i64 %139, 48
  %171 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %170
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !403
  %173 = getelementptr inbounds i32, i32* %171, i64 4
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !403
  %175 = or i64 %139, 56
  %176 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %175
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !403
  %178 = getelementptr inbounds i32, i32* %176, i64 4
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %179, align 8, !alias.scope !403
  %180 = add i64 %139, 64
  %181 = add i64 %140, -8
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %138, !llvm.loop !406

183:                                              ; preds = %138, %129
  %184 = phi i64 [ 0, %129 ], [ %180, %138 ]
  %185 = icmp eq i64 %134, 0
  br i1 %185, label %196, label %186

186:                                              ; preds = %183, %186
  %187 = phi i64 [ %193, %186 ], [ %184, %183 ]
  %188 = phi i64 [ %194, %186 ], [ %134, %183 ]
  %189 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %187
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !403
  %191 = getelementptr inbounds i32, i32* %189, i64 4
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !403
  %193 = add i64 %187, 8
  %194 = add i64 %188, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %186, !llvm.loop !407

196:                                              ; preds = %186, %183
  %197 = icmp eq i64 %130, %127
  br i1 %197, label %205, label %198

198:                                              ; preds = %196, %126
  %199 = phi i64 [ 0, %126 ], [ %130, %196 ]
  br label %200

200:                                              ; preds = %198, %200
  %201 = phi i64 [ %203, %200 ], [ %199, %198 ]
  %202 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %201
  store i32 1, i32* %202, align 4, !alias.scope !403
  %203 = add nuw nsw i64 %201, 1
  %204 = icmp eq i64 %203, %127
  br i1 %204, label %205, label %200, !llvm.loop !408

205:                                              ; preds = %200, %196, %121
  %206 = getelementptr inbounds %union.anon, %union.anon* %124, i64 0, i32 0
  %207 = bitcast %union.anon* %124 to i32*
  %208 = sext i32 %122 to i64
  %209 = getelementptr inbounds i32, i32* %207, i64 %208
  %210 = bitcast i32* %209 to i8*
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %212 = bitcast %union.anon* %211 to i8*
  %213 = sext i32 %118 to i64
  %214 = shl nsw i64 %213, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %212, i64 %214, i1 false) #11
  %215 = load i32, i32* %16, align 8
  %216 = icmp sgt i32 %215, 5
  %217 = load i32*, i32** %106, align 8
  %218 = select i1 %216, i32* %217, i32* %107
  %219 = load i32, i32* %218, align 4
  %220 = load i32, i32* %116, align 8
  %221 = icmp sgt i32 %220, 5
  %222 = load i32*, i32** %206, align 8
  %223 = select i1 %221, i32* %222, i32* %207
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %219, %224
  %226 = icmp eq i32 %219, 1
  %227 = select i1 %226, i32 %224, i32 %219
  %228 = select i1 %225, i32 %219, i32 %227
  %229 = getelementptr inbounds i32, i32* %217, i64 1
  %230 = bitcast %union.anon* %24 to [5 x i32]*
  %231 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 1
  %232 = select i1 %216, i32* %229, i32* %231
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds i32, i32* %222, i64 1
  %235 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 1
  %236 = select i1 %221, i32* %234, i32* %235
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %233, %237
  %239 = icmp eq i32 %233, 1
  %240 = select i1 %239, i32 %237, i32 %233
  %241 = select i1 %238, i32 %233, i32 %240
  %242 = getelementptr inbounds i32, i32* %217, i64 2
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %244 = bitcast [16 x i8]* %243 to i32*
  %245 = select i1 %216, i32* %242, i32* %244
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds i32, i32* %222, i64 2
  %248 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %249 = bitcast [16 x i8]* %248 to i32*
  %250 = select i1 %221, i32* %247, i32* %249
  %251 = load i32, i32* %250, align 4
  %252 = icmp eq i32 %246, %251
  %253 = icmp eq i32 %246, 1
  %254 = select i1 %253, i32 %251, i32 %246
  %255 = select i1 %252, i32 %246, i32 %254
  br i1 %226, label %315, label %256

256:                                              ; preds = %205
  %257 = icmp sgt i32 %215, 1
  br i1 %257, label %258, label %315

258:                                              ; preds = %256
  %259 = add i32 %215, -1
  %260 = add i32 %215, -2
  %261 = and i32 %259, 3
  %262 = icmp ult i32 %260, 3
  br i1 %262, label %295, label %263

263:                                              ; preds = %258
  %264 = sub i32 %259, %261
  br label %265

265:                                              ; preds = %265, %263
  %266 = phi i64 [ 1, %263 ], [ %292, %265 ]
  %267 = phi i32 [ 1, %263 ], [ %291, %265 ]
  %268 = phi i32 [ %264, %263 ], [ %293, %265 ]
  %269 = getelementptr inbounds i32, i32* %217, i64 %266
  %270 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %266
  %271 = select i1 %216, i32* %269, i32* %270
  %272 = load i32, i32* %271, align 4
  %273 = mul nsw i32 %272, %267
  %274 = add nuw nsw i64 %266, 1
  %275 = getelementptr inbounds i32, i32* %217, i64 %274
  %276 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %274
  %277 = select i1 %216, i32* %275, i32* %276
  %278 = load i32, i32* %277, align 4
  %279 = mul nsw i32 %278, %273
  %280 = add nuw nsw i64 %266, 2
  %281 = getelementptr inbounds i32, i32* %217, i64 %280
  %282 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %280
  %283 = select i1 %216, i32* %281, i32* %282
  %284 = load i32, i32* %283, align 4
  %285 = mul nsw i32 %284, %279
  %286 = add nuw nsw i64 %266, 3
  %287 = getelementptr inbounds i32, i32* %217, i64 %286
  %288 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %286
  %289 = select i1 %216, i32* %287, i32* %288
  %290 = load i32, i32* %289, align 4
  %291 = mul nsw i32 %290, %285
  %292 = add nuw nsw i64 %266, 4
  %293 = add i32 %268, -4
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %265

295:                                              ; preds = %265, %258
  %296 = phi i32 [ undef, %258 ], [ %291, %265 ]
  %297 = phi i64 [ 1, %258 ], [ %292, %265 ]
  %298 = phi i32 [ 1, %258 ], [ %291, %265 ]
  %299 = icmp eq i32 %261, 0
  br i1 %299, label %312, label %300

300:                                              ; preds = %295, %300
  %301 = phi i64 [ %309, %300 ], [ %297, %295 ]
  %302 = phi i32 [ %308, %300 ], [ %298, %295 ]
  %303 = phi i32 [ %310, %300 ], [ %261, %295 ]
  %304 = getelementptr inbounds i32, i32* %217, i64 %301
  %305 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %301
  %306 = select i1 %216, i32* %304, i32* %305
  %307 = load i32, i32* %306, align 4
  %308 = mul nsw i32 %307, %302
  %309 = add nuw nsw i64 %301, 1
  %310 = add i32 %303, -1
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %300, !llvm.loop !409

312:                                              ; preds = %300, %295
  %313 = phi i32 [ %296, %295 ], [ %308, %300 ]
  %314 = sext i32 %313 to i64
  br label %315

315:                                              ; preds = %312, %205, %256
  %316 = phi i64 [ 0, %205 ], [ 1, %256 ], [ %314, %312 ]
  br i1 %239, label %376, label %317

317:                                              ; preds = %315
  %318 = icmp sgt i32 %215, 2
  br i1 %318, label %319, label %376

319:                                              ; preds = %317
  %320 = add i32 %215, -2
  %321 = add i32 %215, -3
  %322 = and i32 %320, 3
  %323 = icmp ult i32 %321, 3
  br i1 %323, label %356, label %324

324:                                              ; preds = %319
  %325 = sub i32 %320, %322
  br label %326

326:                                              ; preds = %326, %324
  %327 = phi i64 [ 2, %324 ], [ %353, %326 ]
  %328 = phi i32 [ 1, %324 ], [ %352, %326 ]
  %329 = phi i32 [ %325, %324 ], [ %354, %326 ]
  %330 = getelementptr inbounds i32, i32* %217, i64 %327
  %331 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %327
  %332 = select i1 %216, i32* %330, i32* %331
  %333 = load i32, i32* %332, align 4
  %334 = mul nsw i32 %333, %328
  %335 = or i64 %327, 1
  %336 = getelementptr inbounds i32, i32* %217, i64 %335
  %337 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %335
  %338 = select i1 %216, i32* %336, i32* %337
  %339 = load i32, i32* %338, align 4
  %340 = mul nsw i32 %339, %334
  %341 = add nuw nsw i64 %327, 2
  %342 = getelementptr inbounds i32, i32* %217, i64 %341
  %343 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %341
  %344 = select i1 %216, i32* %342, i32* %343
  %345 = load i32, i32* %344, align 4
  %346 = mul nsw i32 %345, %340
  %347 = add nuw nsw i64 %327, 3
  %348 = getelementptr inbounds i32, i32* %217, i64 %347
  %349 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %347
  %350 = select i1 %216, i32* %348, i32* %349
  %351 = load i32, i32* %350, align 4
  %352 = mul nsw i32 %351, %346
  %353 = add nuw nsw i64 %327, 4
  %354 = add i32 %329, -4
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %326

356:                                              ; preds = %326, %319
  %357 = phi i32 [ undef, %319 ], [ %352, %326 ]
  %358 = phi i64 [ 2, %319 ], [ %353, %326 ]
  %359 = phi i32 [ 1, %319 ], [ %352, %326 ]
  %360 = icmp eq i32 %322, 0
  br i1 %360, label %373, label %361

361:                                              ; preds = %356, %361
  %362 = phi i64 [ %370, %361 ], [ %358, %356 ]
  %363 = phi i32 [ %369, %361 ], [ %359, %356 ]
  %364 = phi i32 [ %371, %361 ], [ %322, %356 ]
  %365 = getelementptr inbounds i32, i32* %217, i64 %362
  %366 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %362
  %367 = select i1 %216, i32* %365, i32* %366
  %368 = load i32, i32* %367, align 4
  %369 = mul nsw i32 %368, %363
  %370 = add nuw nsw i64 %362, 1
  %371 = add i32 %364, -1
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %361, !llvm.loop !410

373:                                              ; preds = %361, %356
  %374 = phi i32 [ %357, %356 ], [ %369, %361 ]
  %375 = sext i32 %374 to i64
  br label %376

376:                                              ; preds = %373, %315, %317
  %377 = phi i64 [ 0, %315 ], [ 1, %317 ], [ %375, %373 ]
  br i1 %253, label %437, label %378

378:                                              ; preds = %376
  %379 = icmp sgt i32 %215, 3
  br i1 %379, label %380, label %437

380:                                              ; preds = %378
  %381 = add i32 %215, -3
  %382 = add i32 %215, -4
  %383 = and i32 %381, 3
  %384 = icmp ult i32 %382, 3
  br i1 %384, label %417, label %385

385:                                              ; preds = %380
  %386 = sub i32 %381, %383
  br label %387

387:                                              ; preds = %387, %385
  %388 = phi i64 [ 3, %385 ], [ %414, %387 ]
  %389 = phi i32 [ 1, %385 ], [ %413, %387 ]
  %390 = phi i32 [ %386, %385 ], [ %415, %387 ]
  %391 = getelementptr inbounds i32, i32* %217, i64 %388
  %392 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %388
  %393 = select i1 %216, i32* %391, i32* %392
  %394 = load i32, i32* %393, align 4
  %395 = mul nsw i32 %394, %389
  %396 = add nuw nsw i64 %388, 1
  %397 = getelementptr inbounds i32, i32* %217, i64 %396
  %398 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %396
  %399 = select i1 %216, i32* %397, i32* %398
  %400 = load i32, i32* %399, align 4
  %401 = mul nsw i32 %400, %395
  %402 = add nuw nsw i64 %388, 2
  %403 = getelementptr inbounds i32, i32* %217, i64 %402
  %404 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %402
  %405 = select i1 %216, i32* %403, i32* %404
  %406 = load i32, i32* %405, align 4
  %407 = mul nsw i32 %406, %401
  %408 = add nuw nsw i64 %388, 3
  %409 = getelementptr inbounds i32, i32* %217, i64 %408
  %410 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %408
  %411 = select i1 %216, i32* %409, i32* %410
  %412 = load i32, i32* %411, align 4
  %413 = mul nsw i32 %412, %407
  %414 = add nuw nsw i64 %388, 4
  %415 = add i32 %390, -4
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %417, label %387

417:                                              ; preds = %387, %380
  %418 = phi i32 [ undef, %380 ], [ %413, %387 ]
  %419 = phi i64 [ 3, %380 ], [ %414, %387 ]
  %420 = phi i32 [ 1, %380 ], [ %413, %387 ]
  %421 = icmp eq i32 %383, 0
  br i1 %421, label %434, label %422

422:                                              ; preds = %417, %422
  %423 = phi i64 [ %431, %422 ], [ %419, %417 ]
  %424 = phi i32 [ %430, %422 ], [ %420, %417 ]
  %425 = phi i32 [ %432, %422 ], [ %383, %417 ]
  %426 = getelementptr inbounds i32, i32* %217, i64 %423
  %427 = getelementptr inbounds [5 x i32], [5 x i32]* %230, i64 0, i64 %423
  %428 = select i1 %216, i32* %426, i32* %427
  %429 = load i32, i32* %428, align 4
  %430 = mul nsw i32 %429, %424
  %431 = add nuw nsw i64 %423, 1
  %432 = add i32 %425, -1
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %422, !llvm.loop !411

434:                                              ; preds = %422, %417
  %435 = phi i32 [ %418, %417 ], [ %430, %422 ]
  %436 = sext i32 %435 to i64
  br label %437

437:                                              ; preds = %434, %376, %378
  %438 = phi i64 [ 0, %376 ], [ 1, %378 ], [ %436, %434 ]
  %439 = icmp eq i32 %224, 1
  br i1 %439, label %499, label %440

440:                                              ; preds = %437
  %441 = icmp sgt i32 %220, 1
  br i1 %441, label %442, label %499

442:                                              ; preds = %440
  %443 = add i32 %220, -1
  %444 = add i32 %220, -2
  %445 = and i32 %443, 3
  %446 = icmp ult i32 %444, 3
  br i1 %446, label %479, label %447

447:                                              ; preds = %442
  %448 = sub i32 %443, %445
  br label %449

449:                                              ; preds = %449, %447
  %450 = phi i64 [ 1, %447 ], [ %476, %449 ]
  %451 = phi i32 [ 1, %447 ], [ %475, %449 ]
  %452 = phi i32 [ %448, %447 ], [ %477, %449 ]
  %453 = getelementptr inbounds i32, i32* %222, i64 %450
  %454 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %450
  %455 = select i1 %221, i32* %453, i32* %454
  %456 = load i32, i32* %455, align 4
  %457 = mul nsw i32 %456, %451
  %458 = add nuw nsw i64 %450, 1
  %459 = getelementptr inbounds i32, i32* %222, i64 %458
  %460 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %458
  %461 = select i1 %221, i32* %459, i32* %460
  %462 = load i32, i32* %461, align 4
  %463 = mul nsw i32 %462, %457
  %464 = add nuw nsw i64 %450, 2
  %465 = getelementptr inbounds i32, i32* %222, i64 %464
  %466 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %464
  %467 = select i1 %221, i32* %465, i32* %466
  %468 = load i32, i32* %467, align 4
  %469 = mul nsw i32 %468, %463
  %470 = add nuw nsw i64 %450, 3
  %471 = getelementptr inbounds i32, i32* %222, i64 %470
  %472 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %470
  %473 = select i1 %221, i32* %471, i32* %472
  %474 = load i32, i32* %473, align 4
  %475 = mul nsw i32 %474, %469
  %476 = add nuw nsw i64 %450, 4
  %477 = add i32 %452, -4
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %479, label %449

479:                                              ; preds = %449, %442
  %480 = phi i32 [ undef, %442 ], [ %475, %449 ]
  %481 = phi i64 [ 1, %442 ], [ %476, %449 ]
  %482 = phi i32 [ 1, %442 ], [ %475, %449 ]
  %483 = icmp eq i32 %445, 0
  br i1 %483, label %496, label %484

484:                                              ; preds = %479, %484
  %485 = phi i64 [ %493, %484 ], [ %481, %479 ]
  %486 = phi i32 [ %492, %484 ], [ %482, %479 ]
  %487 = phi i32 [ %494, %484 ], [ %445, %479 ]
  %488 = getelementptr inbounds i32, i32* %222, i64 %485
  %489 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %485
  %490 = select i1 %221, i32* %488, i32* %489
  %491 = load i32, i32* %490, align 4
  %492 = mul nsw i32 %491, %486
  %493 = add nuw nsw i64 %485, 1
  %494 = add i32 %487, -1
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %484, !llvm.loop !412

496:                                              ; preds = %484, %479
  %497 = phi i32 [ %480, %479 ], [ %492, %484 ]
  %498 = sext i32 %497 to i64
  br label %499

499:                                              ; preds = %496, %437, %440
  %500 = phi i64 [ 0, %437 ], [ 1, %440 ], [ %498, %496 ]
  %501 = icmp eq i32 %237, 1
  br i1 %501, label %561, label %502

502:                                              ; preds = %499
  %503 = icmp sgt i32 %220, 2
  br i1 %503, label %504, label %561

504:                                              ; preds = %502
  %505 = add i32 %220, -2
  %506 = add i32 %220, -3
  %507 = and i32 %505, 3
  %508 = icmp ult i32 %506, 3
  br i1 %508, label %541, label %509

509:                                              ; preds = %504
  %510 = sub i32 %505, %507
  br label %511

511:                                              ; preds = %511, %509
  %512 = phi i64 [ 2, %509 ], [ %538, %511 ]
  %513 = phi i32 [ 1, %509 ], [ %537, %511 ]
  %514 = phi i32 [ %510, %509 ], [ %539, %511 ]
  %515 = getelementptr inbounds i32, i32* %222, i64 %512
  %516 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %512
  %517 = select i1 %221, i32* %515, i32* %516
  %518 = load i32, i32* %517, align 4
  %519 = mul nsw i32 %518, %513
  %520 = or i64 %512, 1
  %521 = getelementptr inbounds i32, i32* %222, i64 %520
  %522 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %520
  %523 = select i1 %221, i32* %521, i32* %522
  %524 = load i32, i32* %523, align 4
  %525 = mul nsw i32 %524, %519
  %526 = add nuw nsw i64 %512, 2
  %527 = getelementptr inbounds i32, i32* %222, i64 %526
  %528 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %526
  %529 = select i1 %221, i32* %527, i32* %528
  %530 = load i32, i32* %529, align 4
  %531 = mul nsw i32 %530, %525
  %532 = add nuw nsw i64 %512, 3
  %533 = getelementptr inbounds i32, i32* %222, i64 %532
  %534 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %532
  %535 = select i1 %221, i32* %533, i32* %534
  %536 = load i32, i32* %535, align 4
  %537 = mul nsw i32 %536, %531
  %538 = add nuw nsw i64 %512, 4
  %539 = add i32 %514, -4
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %511

541:                                              ; preds = %511, %504
  %542 = phi i32 [ undef, %504 ], [ %537, %511 ]
  %543 = phi i64 [ 2, %504 ], [ %538, %511 ]
  %544 = phi i32 [ 1, %504 ], [ %537, %511 ]
  %545 = icmp eq i32 %507, 0
  br i1 %545, label %558, label %546

546:                                              ; preds = %541, %546
  %547 = phi i64 [ %555, %546 ], [ %543, %541 ]
  %548 = phi i32 [ %554, %546 ], [ %544, %541 ]
  %549 = phi i32 [ %556, %546 ], [ %507, %541 ]
  %550 = getelementptr inbounds i32, i32* %222, i64 %547
  %551 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %547
  %552 = select i1 %221, i32* %550, i32* %551
  %553 = load i32, i32* %552, align 4
  %554 = mul nsw i32 %553, %548
  %555 = add nuw nsw i64 %547, 1
  %556 = add i32 %549, -1
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %546, !llvm.loop !413

558:                                              ; preds = %546, %541
  %559 = phi i32 [ %542, %541 ], [ %554, %546 ]
  %560 = sext i32 %559 to i64
  br label %561

561:                                              ; preds = %558, %499, %502
  %562 = phi i64 [ 0, %499 ], [ 1, %502 ], [ %560, %558 ]
  %563 = icmp eq i32 %251, 1
  br i1 %563, label %623, label %564

564:                                              ; preds = %561
  %565 = icmp sgt i32 %220, 3
  br i1 %565, label %566, label %623

566:                                              ; preds = %564
  %567 = add i32 %220, -3
  %568 = add i32 %220, -4
  %569 = and i32 %567, 3
  %570 = icmp ult i32 %568, 3
  br i1 %570, label %603, label %571

571:                                              ; preds = %566
  %572 = sub i32 %567, %569
  br label %573

573:                                              ; preds = %573, %571
  %574 = phi i64 [ 3, %571 ], [ %600, %573 ]
  %575 = phi i32 [ 1, %571 ], [ %599, %573 ]
  %576 = phi i32 [ %572, %571 ], [ %601, %573 ]
  %577 = getelementptr inbounds i32, i32* %222, i64 %574
  %578 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %574
  %579 = select i1 %221, i32* %577, i32* %578
  %580 = load i32, i32* %579, align 4
  %581 = mul nsw i32 %580, %575
  %582 = add nuw nsw i64 %574, 1
  %583 = getelementptr inbounds i32, i32* %222, i64 %582
  %584 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %582
  %585 = select i1 %221, i32* %583, i32* %584
  %586 = load i32, i32* %585, align 4
  %587 = mul nsw i32 %586, %581
  %588 = add nuw nsw i64 %574, 2
  %589 = getelementptr inbounds i32, i32* %222, i64 %588
  %590 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %588
  %591 = select i1 %221, i32* %589, i32* %590
  %592 = load i32, i32* %591, align 4
  %593 = mul nsw i32 %592, %587
  %594 = add nuw nsw i64 %574, 3
  %595 = getelementptr inbounds i32, i32* %222, i64 %594
  %596 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %594
  %597 = select i1 %221, i32* %595, i32* %596
  %598 = load i32, i32* %597, align 4
  %599 = mul nsw i32 %598, %593
  %600 = add nuw nsw i64 %574, 4
  %601 = add i32 %576, -4
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %603, label %573

603:                                              ; preds = %573, %566
  %604 = phi i32 [ undef, %566 ], [ %599, %573 ]
  %605 = phi i64 [ 3, %566 ], [ %600, %573 ]
  %606 = phi i32 [ 1, %566 ], [ %599, %573 ]
  %607 = icmp eq i32 %569, 0
  br i1 %607, label %620, label %608

608:                                              ; preds = %603, %608
  %609 = phi i64 [ %617, %608 ], [ %605, %603 ]
  %610 = phi i32 [ %616, %608 ], [ %606, %603 ]
  %611 = phi i32 [ %618, %608 ], [ %569, %603 ]
  %612 = getelementptr inbounds i32, i32* %222, i64 %609
  %613 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %609
  %614 = select i1 %221, i32* %612, i32* %613
  %615 = load i32, i32* %614, align 4
  %616 = mul nsw i32 %615, %610
  %617 = add nuw nsw i64 %609, 1
  %618 = add i32 %611, -1
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %608, !llvm.loop !414

620:                                              ; preds = %608, %603
  %621 = phi i32 [ %604, %603 ], [ %616, %608 ]
  %622 = sext i32 %621 to i64
  br label %623

623:                                              ; preds = %620, %561, %564
  %624 = phi i64 [ 0, %561 ], [ 1, %564 ], [ %622, %620 ]
  %625 = getelementptr inbounds i32, i32* %217, i64 3
  %626 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1, i64 4
  %627 = bitcast i8* %626 to i32*
  %628 = select i1 %216, i32* %625, i32* %627
  %629 = load i32, i32* %628, align 4
  %630 = getelementptr inbounds i32, i32* %222, i64 4
  %631 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 8
  %632 = bitcast i8* %631 to i32*
  %633 = select i1 %221, i32* %630, i32* %632
  %634 = load i32, i32* %633, align 4
  %635 = getelementptr inbounds i32, i32* %217, i64 4
  %636 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1, i64 8
  %637 = bitcast i8* %636 to i32*
  %638 = select i1 %216, i32* %635, i32* %637
  %639 = load i32, i32* %638, align 4
  %640 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 0
  %641 = load i32, i32* %640, align 4
  %642 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 1
  %643 = load i32, i32* %642, align 4
  %644 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 2
  %645 = load i32, i32* %644, align 4
  %646 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 3
  %647 = load i32, i32* %646, align 4
  %648 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 4
  %649 = load i32, i32* %648, align 4
  %650 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 5
  %651 = load i32, i32* %650, align 4
  %652 = getelementptr inbounds %"struct.tflite::FullyConnectedParams", %"struct.tflite::FullyConnectedParams"* %0, i64 0, i32 6
  %653 = load i32, i32* %652, align 4
  %654 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %654) #11
  %655 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %11, i64 0, i32 0
  %656 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %11, i64 0, i32 1
  %657 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %11, i64 0, i32 2
  %658 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %11, i64 0, i32 3
  %659 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %659, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %654, i8 0, i64 14, i1 false) #11
  store i32 1, i32* %655, align 4
  store i32 %629, i32* %656, align 4
  store i32 %639, i32* %657, align 4
  %660 = trunc i32 %643 to i8
  %661 = sub i8 0, %660
  store i8 %661, i8* %658, align 4
  %662 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %662) #11
  %663 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %12, i64 0, i32 1
  %664 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %12, i64 0, i32 2
  %665 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %12, i64 0, i32 3
  %666 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %666, i8 -86, i64 16, i1 false)
  %667 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %667, i8 0, i64 14, i1 false)
  store i32 %639, i32* %663, align 4
  store i32 %634, i32* %664, align 4
  %668 = trunc i32 %641 to i8
  %669 = sub i8 0, %668
  store i8 %669, i8* %665, align 4
  %670 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %670) #11
  %671 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %13, i64 0, i32 1
  %672 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %13, i64 0, i32 2
  %673 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %13, i64 0, i32 3
  %674 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %674, i8 -86, i64 16, i1 false)
  %675 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %675, i8 0, i64 14, i1 false)
  store i32 %629, i32* %671, align 4
  store i32 %634, i32* %672, align 4
  %676 = trunc i32 %645 to i8
  store i8 %676, i8* %673, align 4
  %677 = icmp sgt i32 %228, 0
  br i1 %677, label %678, label %694

678:                                              ; preds = %623
  %679 = icmp sgt i32 %241, 0
  %680 = icmp sgt i32 %255, 0
  %681 = mul i32 %634, %629
  %682 = bitcast %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %14 to i8*
  %683 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %14, i64 0, i32 5
  %684 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %14, i64 0, i32 6
  %685 = trunc i32 %651 to i8
  %686 = trunc i32 %653 to i8
  %687 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %14, i64 0, i32 0
  %688 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %14, i64 0, i32 1
  %689 = zext i32 %228 to i64
  %690 = zext i32 %241 to i64
  %691 = zext i32 %255 to i64
  %692 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %14, i64 0, i32 2
  %693 = bitcast i32** %692 to i8*
  br label %711

694:                                              ; preds = %720, %623
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %670) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %662) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %654) #11
  br i1 %221, label %695, label %701

695:                                              ; preds = %694
  %696 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %697 = load i32*, i32** %696, align 8
  %698 = icmp eq i32* %697, null
  br i1 %698, label %701, label %699

699:                                              ; preds = %695
  %700 = bitcast i32* %697 to i8*
  call void @_ZdaPv(i8* %700) #10
  br label %701

701:                                              ; preds = %694, %695, %699
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %115) #11
  %702 = load i32, i32* %16, align 8
  %703 = icmp sgt i32 %702, 5
  br i1 %703, label %704, label %710

704:                                              ; preds = %701
  %705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %706 = load i32*, i32** %705, align 8
  %707 = icmp eq i32* %706, null
  br i1 %707, label %710, label %708

708:                                              ; preds = %704
  %709 = bitcast i32* %706 to i8*
  call void @_ZdaPv(i8* %709) #10
  br label %710

710:                                              ; preds = %701, %704, %708
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  ret void

711:                                              ; preds = %720, %678
  %712 = phi i64 [ 0, %678 ], [ %721, %720 ]
  %713 = mul nsw i64 %712, %316
  %714 = getelementptr inbounds i8, i8* %2, i64 %713
  %715 = mul nsw i64 %712, %500
  %716 = getelementptr inbounds i8, i8* %4, i64 %715
  br i1 %679, label %717, label %720

717:                                              ; preds = %711
  %718 = trunc i64 %712 to i32
  %719 = mul i32 %241, %718
  br label %723

720:                                              ; preds = %733, %711
  %721 = add nuw nsw i64 %712, 1
  %722 = icmp eq i64 %721, %689
  br i1 %722, label %694, label %711

723:                                              ; preds = %733, %717
  %724 = phi i64 [ 0, %717 ], [ %734, %733 ]
  %725 = mul nsw i64 %724, %377
  %726 = getelementptr inbounds i8, i8* %714, i64 %725
  %727 = mul nsw i64 %724, %562
  %728 = getelementptr inbounds i8, i8* %716, i64 %727
  br i1 %680, label %729, label %733

729:                                              ; preds = %723
  %730 = trunc i64 %724 to i32
  %731 = add i32 %719, %730
  %732 = mul i32 %731, %255
  br label %736

733:                                              ; preds = %736, %723
  %734 = add nuw nsw i64 %724, 1
  %735 = icmp eq i64 %734, %690
  br i1 %735, label %720, label %723

736:                                              ; preds = %736, %729
  %737 = phi i64 [ 0, %729 ], [ %747, %736 ]
  %738 = mul nsw i64 %737, %438
  %739 = getelementptr inbounds i8, i8* %726, i64 %738
  %740 = mul nsw i64 %737, %624
  %741 = getelementptr inbounds i8, i8* %728, i64 %740
  %742 = trunc i64 %737 to i32
  %743 = add i32 %732, %742
  %744 = mul i32 %681, %743
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds i8, i8* %6, i64 %745
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %682) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %682, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %693, i8 0, i64 24, i1 false) #11
  store i8 %685, i8* %683, align 8
  store i8 %686, i8* %684, align 1
  store i32 %647, i32* %687, align 8
  store i32 %649, i32* %688, align 4
  call void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIaaiaLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIaEEPKaS8_SA_S8_PaRKNS0_10GemmParamsIiaLS3_1EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams.88"* nonnull dereferenceable(16) %11, i8* %739, %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* nonnull dereferenceable(16) %12, i8* %741, %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* nonnull dereferenceable(16) %13, i8* %746, %"struct.tflite::cpu_backend_gemm::GemmParams.112"* nonnull dereferenceable(40) %14, %"class.tflite::CpuBackendContext"* %7) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %682) #11
  %747 = add nuw nsw i64 %737, 1
  %748 = icmp eq i64 %747, %691
  br i1 %748, label %733, label %736
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIaaiaLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIaEEPKaS8_SA_S8_PaRKNS0_10GemmParamsIiaLS3_1EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams.88"* dereferenceable(16), i8*, %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* dereferenceable(16), i8*, %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* dereferenceable(16), i8*, %"struct.tflite::cpu_backend_gemm::GemmParams.112"* dereferenceable(40), %"class.tflite::CpuBackendContext"*) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %"struct.ruy::Mat.99", align 8
  %10 = alloca %"struct.ruy::Mat.99", align 8
  %11 = alloca %"struct.ruy::Mat.99", align 8
  %12 = alloca %"class.ruy::MulParams.114", align 8
  %13 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 4
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  %19 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = select i1 %18, i32 %22, i32 %20
  %24 = ptrtoint i8* %1 to i64
  %25 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 3
  %26 = load i8, i8* %25, align 4
  br i1 %15, label %27, label %34

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %0, i64 0, i32 4
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 1
  %31 = zext i1 %30 to i8
  %32 = icmp eq i8 %29, 2
  %33 = select i1 %32, i8 3, i8 %31
  br label %34

34:                                               ; preds = %8, %27
  %35 = phi i8 [ %33, %27 ], [ 0, %8 ]
  %36 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp ne i32 %37, 0
  %39 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = select i1 %38, i32 %42, i32 %40
  %44 = ptrtoint i8* %3 to i64
  %45 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 3
  %46 = load i8, i8* %45, align 4
  br i1 %15, label %47, label %54

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %2, i64 0, i32 4
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 1
  %51 = zext i1 %50 to i8
  %52 = icmp eq i8 %49, 2
  %53 = select i1 %52, i8 3, i8 %51
  br label %54

54:                                               ; preds = %34, %47
  %55 = phi i8 [ %53, %47 ], [ 0, %34 ]
  %56 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %4, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  %59 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %4, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %4, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = select i1 %58, i32 %62, i32 %60
  %64 = ptrtoint i8* %5 to i64
  %65 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.88", %"struct.tflite::cpu_backend_gemm::MatrixParams.88"* %4, i64 0, i32 3
  %66 = load i8, i8* %65, align 4
  %67 = bitcast %"class.ruy::MulParams.114"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 40, i1 false)
  %68 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %12, i64 0, i32 5
  %69 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %12, i64 0, i32 6
  %70 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %6, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %12, i64 0, i32 1
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %6, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %12, i64 0, i32 2
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %6, i64 0, i32 2
  %77 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %12, i64 0, i32 3
  %78 = bitcast i32** %76 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8
  %80 = bitcast i32** %77 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %80, align 8
  %81 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %6, i64 0, i32 4
  %82 = bitcast i32** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.ruy::MulParams.114"* %12 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %6, i64 0, i32 5
  %86 = load i8, i8* %85, align 8
  store i8 %86, i8* %68, align 8
  %87 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.112", %"struct.tflite::cpu_backend_gemm::GemmParams.112"* %6, i64 0, i32 6
  %88 = load i8, i8* %87, align 1
  store i8 %88, i8* %69, align 1
  %89 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.ruy::Context"*, %"class.ruy::Context"** %89, align 8
  %91 = bitcast %"struct.ruy::Mat.99"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %9, i64 0, i32 1, i32 2
  %93 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %9, i64 0, i32 2
  %94 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %9, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 32, i1 false) #11
  %95 = bitcast %"struct.ruy::Mat.99"* %9 to i64*
  store i64 %24, i64* %95, align 8, !alias.scope !415
  %96 = zext i32 %23 to i64
  %97 = zext i1 %18 to i64
  %98 = shl nuw nsw i64 %97, 32
  %99 = or i64 %98, %96
  %100 = zext i32 %22 to i64
  %101 = shl nuw i64 %100, 32
  %102 = zext i32 %20 to i64
  %103 = or i64 %101, %102
  %104 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %9, i64 0, i32 1
  %105 = bitcast %"struct.ruy::MatLayout"* %104 to i64*
  store i64 %103, i64* %105, align 8, !alias.scope !415
  %106 = bitcast i32* %92 to i40*
  %107 = trunc i64 %99 to i40
  store i40 %107, i40* %106, align 8, !alias.scope !415
  store i8 %26, i8* %93, align 8, !alias.scope !415
  store i8 %35, i8* %94, align 1, !alias.scope !415
  %108 = bitcast %"struct.ruy::Mat.99"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %10, i64 0, i32 1, i32 2
  %110 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %10, i64 0, i32 2
  %111 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %10, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false) #11
  %112 = bitcast %"struct.ruy::Mat.99"* %10 to i64*
  store i64 %44, i64* %112, align 8, !alias.scope !418
  %113 = zext i32 %43 to i64
  %114 = zext i1 %38 to i64
  %115 = shl nuw nsw i64 %114, 32
  %116 = or i64 %115, %113
  %117 = zext i32 %42 to i64
  %118 = shl nuw i64 %117, 32
  %119 = zext i32 %40 to i64
  %120 = or i64 %118, %119
  %121 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %10, i64 0, i32 1
  %122 = bitcast %"struct.ruy::MatLayout"* %121 to i64*
  store i64 %120, i64* %122, align 8, !alias.scope !418
  %123 = bitcast i32* %109 to i40*
  %124 = trunc i64 %116 to i40
  store i40 %124, i40* %123, align 8, !alias.scope !418
  store i8 %46, i8* %110, align 8, !alias.scope !418
  store i8 %55, i8* %111, align 1, !alias.scope !418
  %125 = bitcast %"struct.ruy::Mat.99"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #11
  %126 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %11, i64 0, i32 1, i32 2
  %127 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %11, i64 0, i32 2
  %128 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 32, i1 false) #11
  %129 = bitcast %"struct.ruy::Mat.99"* %11 to i64*
  store i64 %64, i64* %129, align 8, !alias.scope !421
  %130 = zext i32 %63 to i64
  %131 = zext i1 %58 to i64
  %132 = shl nuw nsw i64 %131, 32
  %133 = or i64 %132, %130
  %134 = zext i32 %62 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %60 to i64
  %137 = or i64 %135, %136
  %138 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %11, i64 0, i32 1
  %139 = bitcast %"struct.ruy::MatLayout"* %138 to i64*
  store i64 %137, i64* %139, align 8, !alias.scope !421
  %140 = bitcast i32* %126 to i40*
  %141 = trunc i64 %133 to i40
  store i40 %141, i40* %140, align 8, !alias.scope !421
  store i8 %66, i8* %127, align 8, !alias.scope !421
  store i8 0, i8* %128, align 1, !alias.scope !421
  %142 = tail call %"class.ruy::Ctx"* @_ZN3ruy7get_ctxEPNS_7ContextE(%"class.ruy::Context"* %90) #11
  call void @_ZN3ruy11DispatchMulILNS_4PathE26EaaaNS_9MulParamsIiaEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat.99"* nonnull dereferenceable(32) %9, %"struct.ruy::Mat.99"* nonnull dereferenceable(32) %10, %"class.ruy::MulParams.114"* nonnull dereferenceable(40) %12, %"class.ruy::Ctx"* %142, %"struct.ruy::Mat.99"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy11DispatchMulILNS_4PathE26EaaaNS_9MulParamsIiaEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat.99"* dereferenceable(32), %"struct.ruy::Mat.99"* dereferenceable(32), %"class.ruy::MulParams.114"* dereferenceable(40), %"class.ruy::Ctx"*, %"struct.ruy::Mat.99"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.ruy::TrMulParams", align 8
  %7 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 1, i32 1
  %8 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %4, i64 0, i32 2
  %11 = tail call zeroext i8 @_ZN3ruy3Ctx10SelectPathENS_4PathE(%"class.ruy::Ctx"* %3, i8 zeroext 26) #11
  %12 = bitcast %"struct.ruy::Mat.99"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %7, align 4
  %17 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 1, i32 3
  %20 = load i8, i8* %19, align 4
  %21 = load i8, i8* %8, align 8
  %22 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %0, i64 0, i32 3
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %20, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 272, i1 false)
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 4
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 5
  %31 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 2
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 4
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 5
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 2
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 2
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 5
  store i8 0, i8* %39, align 4
  %40 = bitcast i8** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 21, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 0
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 1
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 2
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  %47 = bitcast i8** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 11, i1 false) #11
  %48 = bitcast i8** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 22, i1 false) #11
  %49 = bitcast %"class.ruy::SidePair"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %46, align 1
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 0
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 1
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 2
  store i8 0, i8* %54, align 2
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 2
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 5
  %57 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  %58 = bitcast i8** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 11, i1 false) #11
  %59 = bitcast i8** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 22, i1 false) #11
  store i8 1, i8* %57, align 1
  %60 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %60, align 1
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 1
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 7
  %65 = sext i8 %21 to i32
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3
  %67 = bitcast %"class.ruy::SidePair.37"* %66 to i24*
  store i24 65537, i24* %67, align 8
  %68 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 -86, i64 5, i1 false) #11
  %69 = bitcast i8** %28 to i64*
  store i64 %13, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  store i32 %16, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  store i32 %15, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 2
  store i32 %18, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  store i8 %25, i8* %73, align 4
  %74 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %74, i8 -86, i64 3, i1 false) #11
  store i32 %65, i32* %29, align 8
  store i8 %23, i8* %30, align 4
  %75 = bitcast %"struct.ruy::Mat.99"* %1 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !424
  %77 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 1
  %78 = bitcast %"struct.ruy::MatLayout"* %77 to i8*
  %79 = load i8, i8* %9, align 8, !noalias !424
  %80 = sext i8 %79 to i32
  %81 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %1, i64 0, i32 3
  %82 = load i8, i8* %81, align 1, !noalias !424
  %83 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1
  %84 = bitcast %"struct.ruy::EMat"* %83 to i24*
  store i24 65537, i24* %84, align 8
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 -86, i64 5, i1 false) #11
  %86 = bitcast i8** %31 to i64*
  store i64 %76, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3
  %88 = bitcast %"struct.ruy::MatLayout"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %78, i64 13, i1 false)
  %89 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %89, i8 -86, i64 3, i1 false) #11
  store i32 %80, i32* %32, align 8
  store i8 %82, i8* %33, align 4
  %90 = bitcast %"struct.ruy::Mat.99"* %4 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !427
  %92 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %4, i64 0, i32 1
  %93 = bitcast %"struct.ruy::MatLayout"* %92 to i8*
  %94 = load i8, i8* %10, align 8, !noalias !427
  %95 = sext i8 %94 to i32
  %96 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %4, i64 0, i32 3
  %97 = load i8, i8* %96, align 1, !noalias !427
  %98 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4
  %99 = bitcast %"struct.ruy::EMat"* %98 to i24*
  store i24 65537, i24* %99, align 8
  %100 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %100, i8 -86, i64 5, i1 false) #11
  %101 = bitcast i8** %37 to i64*
  store i64 %91, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3
  %103 = bitcast %"struct.ruy::MatLayout"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 4 %93, i64 13, i1 false)
  %104 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %104, i8 -86, i64 3, i1 false) #11
  store i32 %95, i32* %38, align 8
  store i8 %97, i8* %39, align 4
  %105 = bitcast i8** %64 to %"class.ruy::MulParams.114"**
  store %"class.ruy::MulParams.114"* %2, %"class.ruy::MulParams.114"** %105, align 8
  %106 = icmp eq i8 %11, 16
  br i1 %106, label %107, label %192

107:                                              ; preds = %5
  br i1 %24, label %116, label %108

108:                                              ; preds = %107
  %109 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %110 = load i8, i8* %109, align 4
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 3
  %114 = load i8, i8* %113, align 4
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %150, label %116

116:                                              ; preds = %107, %112, %108
  store i8 2, i8* %26, align 8
  %117 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %118 = bitcast %"struct.ruy::PEMat"* %117 to i24*
  store i24 65537, i24* %118, align 8
  %119 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %120 = bitcast %"struct.ruy::Type"* %119 to i24*
  store i24 262145, i24* %120, align 8
  %121 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %16, i32* %122, align 8
  %123 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %124, align 1
  store i8 1, i8* %46, align 1
  store i8 1, i8* %50, align 1
  %125 = and i32 %16, 1023
  %126 = icmp eq i32 %125, 0
  %127 = add nsw i32 %16, 64
  %128 = select i1 %126, i32 %127, i32 %16
  %129 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %128, i32* %129, align 8
  store i32 %65, i32* %51, align 8
  %130 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %131 = bitcast %"struct.ruy::PEMat"* %130 to i24*
  store i24 65537, i24* %131, align 8
  %132 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %133 = bitcast %"struct.ruy::Type"* %132 to i24*
  store i24 262145, i24* %133, align 8
  %134 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %134, align 4
  %135 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %136, i32* %137, align 8
  %138 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %139, i32* %140, align 4
  %141 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %141, align 1
  store i8 1, i8* %57, align 1
  store i8 1, i8* %60, align 1
  %142 = and i32 %136, 1023
  %143 = icmp eq i32 %142, 0
  %144 = add nsw i32 %136, 64
  %145 = select i1 %143, i32 %144, i32 %136
  %146 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %145, i32* %146, align 8
  store i32 %80, i32* %61, align 8
  %147 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %148 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %147 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %148, align 8
  %149 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %149, align 8
  br label %193

150:                                              ; preds = %112
  store i8 16, i8* %26, align 8
  %151 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %152 = bitcast %"struct.ruy::PEMat"* %151 to i24*
  store i24 65537, i24* %152, align 8
  %153 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %154 = bitcast %"struct.ruy::Type"* %153 to i24*
  store i24 262145, i24* %154, align 8
  %155 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %155, align 4
  %156 = add i32 %16, 3
  %157 = and i32 %156, -4
  %158 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %157, i32* %158, align 8
  %159 = add i32 %15, 15
  %160 = and i32 %159, -16
  %161 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %162, align 1
  store i8 4, i8* %46, align 1
  store i8 16, i8* %50, align 1
  %163 = and i32 %156, 1020
  %164 = icmp eq i32 %163, 0
  %165 = add nsw i32 %157, 64
  %166 = select i1 %164, i32 %165, i32 %157
  %167 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %166, i32* %167, align 8
  store i32 %65, i32* %51, align 8
  %168 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %169 = bitcast %"struct.ruy::PEMat"* %168 to i24*
  store i24 65537, i24* %169, align 8
  %170 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %171 = bitcast %"struct.ruy::Type"* %170 to i24*
  store i24 262145, i24* %171, align 8
  %172 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %172, align 4
  %173 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = add i32 %174, 3
  %176 = and i32 %175, -4
  %177 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %176, i32* %177, align 8
  %178 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = add i32 %179, 15
  %181 = and i32 %180, -16
  %182 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %183, align 1
  store i8 4, i8* %57, align 1
  store i8 16, i8* %60, align 1
  %184 = and i32 %175, 1020
  %185 = icmp eq i32 %184, 0
  %186 = add nsw i32 %176, 64
  %187 = select i1 %185, i32 %186, i32 %176
  %188 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %187, i32* %188, align 8
  store i32 %80, i32* %61, align 8
  %189 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %190 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %189 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %190, align 8
  %191 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE16EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %191, align 8
  br label %193

192:                                              ; preds = %5
  call void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EaaaNS_9MulParamsIiaEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext %11, %"struct.ruy::TrMulParams"* nonnull %6) #11
  br label %193

193:                                              ; preds = %150, %116, %192
  call void @_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3)
  call void @_ZN3ruy5TrMulEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3) #11
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %26) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE16EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.35"* dereferenceable(112), i8*, %"class.ruy::SidePair.36"* dereferenceable(8), %"class.ruy::SidePair.36"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParams8bit", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8, !noalias !430
  %10 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !430
  %18 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8, !noalias !433
  %20 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 5
  %21 = bitcast i8** %20 to i32**
  %22 = load i32*, i32** %21, align 8, !noalias !433
  %23 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 7
  %28 = load i32, i32* %27, align 8, !noalias !433
  %29 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 2
  %30 = load i8*, i8** %29, align 8, !noalias !436
  %31 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 5
  %32 = bitcast i8** %31 to i32**
  %33 = load i32*, i32** %32, align 8, !noalias !436
  %34 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 7
  %37 = load i32, i32* %36, align 8, !noalias !436
  %38 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %"struct.ruy::KernelParams8bit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1352, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 1
  %48 = bitcast i32** %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 1344, i1 false) #11
  %49 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 27, i64 0
  %50 = bitcast i32* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 64, i1 false) #11
  %51 = mul nsw i32 %39, %26
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %19, i64 %52
  %54 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 3
  store i8* %53, i8** %54, align 8
  %55 = mul nsw i32 %41, %35
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %30, i64 %56
  %58 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 6
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 24
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 0
  store i32* %49, i32** %60, align 8
  %61 = bitcast i8* %2 to i32**
  %62 = load i32*, i32** %61, align 8
  %63 = icmp eq i32* %62, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %6
  store i32* %62, i32** %60, align 8
  store i8 1, i8* %59, align 8
  br label %65

65:                                               ; preds = %64, %6
  %66 = phi i8 [ 0, %6 ], [ 1, %64 ]
  %67 = icmp eq i32* %22, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 1
  store i32* %22, i32** %69, align 8
  %70 = or i8 %66, 2
  store i8 %70, i8* %59, align 8
  br label %71

71:                                               ; preds = %68, %65
  %72 = phi i8 [ %66, %65 ], [ %70, %68 ]
  %73 = icmp eq i32* %33, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 2
  store i32* %33, i32** %75, align 8
  %76 = or i8 %72, 4
  store i8 %76, i8* %59, align 8
  br label %77

77:                                               ; preds = %74, %71
  %78 = phi i8 [ %72, %71 ], [ %76, %74 ]
  %79 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 12
  store i32 %39, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 13
  store i32 %41, i32* %80, align 4
  %81 = add nsw i32 %43, -16
  %82 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 14
  store i32 %81, i32* %82, align 8
  %83 = add nsw i32 %45, -16
  %84 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 15
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 18
  store i32 %26, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 19
  store i32 %35, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 20
  store i32 %15, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 8
  store i32 %28, i32* %88, align 8
  %89 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 9
  store i32 %37, i32* %89, align 4
  %90 = shl i32 %17, 24
  %91 = ashr exact i32 %90, 24
  %92 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 10
  store i32 %91, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 21
  store i32 %24, i32* %93, align 4
  %94 = mul i32 %28, %24
  %95 = mul i32 %94, %37
  %96 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 11
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds i8, i8* %2, i64 16
  %98 = bitcast i8* %97 to i32**
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %77
  %102 = ptrtoint i32* %99 to i64
  %103 = or i8 %78, 24
  store i8 %103, i8* %59, align 8
  %104 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 4
  %105 = bitcast i32** %104 to i64*
  store i64 %102, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %2, i64 24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 5
  %110 = bitcast i32** %109 to i64*
  store i64 %108, i64* %110, align 8
  br label %148

111:                                              ; preds = %77
  %112 = getelementptr inbounds i8, i8* %2, i64 12
  %113 = bitcast i8* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = or i8 %78, 16
  store i8 %117, i8* %59, align 8
  br label %118

118:                                              ; preds = %116, %111
  %119 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 0
  %120 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 4
  store i32* %119, i32** %120, align 8
  %121 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 0
  %122 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 5
  store i32* %121, i32** %122, align 8
  %123 = getelementptr inbounds i8, i8* %2, i64 8
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = insertelement <4 x i32> undef, i32 %125, i32 0
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> zeroinitializer
  %128 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %128, align 4
  %129 = insertelement <4 x i32> undef, i32 %114, i32 0
  %130 = shufflevector <4 x i32> %129, <4 x i32> undef, <4 x i32> zeroinitializer
  %131 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 4
  store i32 %125, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 4
  store i32 %114, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 5
  store i32 %125, i32* %134, align 4
  %135 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 5
  store i32 %114, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 6
  store i32 %125, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 6
  store i32 %114, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 7
  %139 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 7
  %140 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %140, align 4
  %141 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 11
  %143 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 11
  %144 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %144, align 4
  %145 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 15
  store i32 %125, i32* %146, align 4
  %147 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 15
  store i32 %114, i32* %147, align 4
  br label %148

148:                                              ; preds = %101, %118
  %149 = getelementptr inbounds i8, i8* %2, i64 32
  %150 = load i8, i8* %149, align 8
  %151 = sext i8 %150 to i32
  %152 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 22
  store i32 %151, i32* %152, align 8
  %153 = getelementptr inbounds i8, i8* %2, i64 33
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 23
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 16
  store i32 %11, i32* %157, align 8
  %158 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 17
  store i32 %13, i32* %158, align 4
  %159 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 25
  store i8 2, i8* %159, align 1
  %160 = mul nsw i32 %41, %15
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %9, i64 %161
  %163 = sext i32 %39 to i64
  %164 = getelementptr inbounds i8, i8* %162, i64 %163
  %165 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 7
  store i8* %164, i8** %165, align 8
  %166 = icmp eq i32 %13, 1
  br i1 %166, label %167, label %168

167:                                              ; preds = %148
  call void @_ZN3ruy25Kernel8bitAvx512SingleColERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* nonnull dereferenceable(1352) %7) #11
  br label %169

168:                                              ; preds = %148
  call void @_ZN3ruy16Kernel8bitAvx512ERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* nonnull dereferenceable(1352) %7) #11
  br label %169

169:                                              ; preds = %167, %168
  call void @llvm.lifetime.end.p0i8(i64 1352, i8* nonnull %46) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE2EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.35"* dereferenceable(112), i8*, %"class.ruy::SidePair.36"* dereferenceable(8), %"class.ruy::SidePair.36"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::Kernel.115", align 1
  %8 = alloca %"struct.ruy::Mat.99", align 8
  %9 = alloca %"struct.ruy::PMat.101", align 8
  %10 = alloca %"struct.ruy::PMat.101", align 8
  %11 = bitcast %"struct.ruy::Mat.99"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %8, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %8, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  %17 = bitcast %"struct.ruy::Mat.99"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = load i64, i64* %16, align 8, !noalias !439
  %19 = bitcast %"struct.ruy::Mat.99"* %8 to i64*
  store i64 %18, i64* %19, align 8, !alias.scope !439
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3
  %21 = bitcast %"struct.ruy::MatLayout"* %14 to i8*
  %22 = bitcast %"struct.ruy::MatLayout"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 13, i1 false) #11
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %24 = load i32, i32* %23, align 8, !noalias !439
  %25 = trunc i32 %24 to i8
  store i8 %25, i8* %12, align 8, !alias.scope !439
  %26 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 5
  %27 = load i8, i8* %26, align 4, !noalias !439
  store i8 %27, i8* %13, align 1, !alias.scope !439
  %28 = bitcast %"struct.ruy::PMat.101"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false) #11, !alias.scope !442
  %29 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %9, i64 0, i32 3
  %30 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 2
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !442
  %33 = bitcast %"struct.ruy::PMat.101"* %9 to i64*
  store i64 %32, i64* %33, align 8, !alias.scope !442
  %34 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 5
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !442
  %37 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %9, i64 0, i32 1
  %38 = bitcast i32** %37 to i64*
  store i64 %36, i64* %38, align 8, !alias.scope !442
  %39 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6
  %40 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %9, i64 0, i32 2
  %41 = bitcast %"struct.ruy::PMatLayout"* %40 to i8*
  %42 = bitcast %"struct.ruy::PMatLayout"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 4 %42, i64 16, i1 false) #11
  %43 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 7
  %44 = load i32, i32* %43, align 8, !noalias !442
  store i32 %44, i32* %29, align 8, !alias.scope !442
  %45 = bitcast %"struct.ruy::PMat.101"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 40, i1 false) #11, !alias.scope !445
  %46 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %10, i64 0, i32 3
  %47 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 2
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !445
  %50 = bitcast %"struct.ruy::PMat.101"* %10 to i64*
  store i64 %49, i64* %50, align 8, !alias.scope !445
  %51 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 5
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !445
  %54 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %10, i64 0, i32 1
  %55 = bitcast i32** %54 to i64*
  store i64 %53, i64* %55, align 8, !alias.scope !445
  %56 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 6
  %57 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %10, i64 0, i32 2
  %58 = bitcast %"struct.ruy::PMatLayout"* %57 to i8*
  %59 = bitcast %"struct.ruy::PMatLayout"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 4 %59, i64 16, i1 false) #11
  %60 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 7
  %61 = load i32, i32* %60, align 8, !noalias !445
  store i32 %61, i32* %46, align 8, !alias.scope !445
  %62 = bitcast i8* %2 to %"class.ruy::MulParams.114"*
  %63 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.ruy::Kernel.115", %"struct.ruy::Kernel.115"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #11
  store i8 -86, i8* %71, align 1
  call void @_ZNK3ruy6KernelILNS_4PathE2EaaaNS_9MulParamsIiaEEE3RunERKNS_4PMatIaEES8_RKS3_iiiiPNS_3MatIaEE(%"struct.ruy::Kernel.115"* nonnull %7, %"struct.ruy::PMat.101"* nonnull dereferenceable(40) %9, %"struct.ruy::PMat.101"* nonnull dereferenceable(40) %10, %"class.ruy::MulParams.114"* dereferenceable(40) %62, i32 %64, i32 %66, i32 %68, i32 %70, %"struct.ruy::Mat.99"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3ruy6KernelILNS_4PathE2EaaaNS_9MulParamsIiaEEE3RunERKNS_4PMatIaEES8_RKS3_iiiiPNS_3MatIaEE(%"struct.ruy::Kernel.115"*, %"struct.ruy::PMat.101"* dereferenceable(40), %"struct.ruy::PMat.101"* dereferenceable(40), %"class.ruy::MulParams.114"* dereferenceable(40), i32, i32, i32, i32, %"struct.ruy::Mat.99"*) local_unnamed_addr #0 comdat align 2 {
  %10 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %8, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %6
  %13 = select i1 %12, i32 %11, i32 %6
  %14 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %8, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, %7
  %17 = select i1 %16, i32 %15, i32 %7
  %18 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %13, %4
  br i1 %20, label %21, label %60

21:                                               ; preds = %9
  %22 = icmp sgt i32 %17, %5
  %23 = icmp sgt i32 %19, 0
  %24 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 4, i32 1
  %26 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 4, i32 2
  %27 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 3
  %28 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 2
  %29 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 2, i32 4, i32 0
  %30 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 4, i32 1
  %32 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 4, i32 2
  %33 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 3
  %34 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 2
  %35 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 2, i32 4, i32 0
  %36 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %3, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 3
  %38 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %2, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.ruy::PMat.101", %"struct.ruy::PMat.101"* %1, i64 0, i32 1
  %41 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %3, i64 0, i32 3
  %42 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %3, i64 0, i32 1
  %43 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %3, i64 0, i32 4
  %44 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %3, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %8, i64 0, i32 2
  %46 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %3, i64 0, i32 6
  %47 = getelementptr inbounds %"class.ruy::MulParams.114", %"class.ruy::MulParams.114"* %3, i64 0, i32 5
  %48 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %8, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %8, i64 0, i32 1, i32 3
  %50 = getelementptr inbounds %"struct.ruy::Mat.99", %"struct.ruy::Mat.99"* %8, i64 0, i32 1, i32 2
  %51 = sext i32 %5 to i64
  %52 = sext i32 %17 to i64
  %53 = sext i32 %4 to i64
  %54 = sext i32 %13 to i64
  br label %55

55:                                               ; preds = %21, %113
  %56 = phi i64 [ %53, %21 ], [ %114, %113 ]
  br i1 %22, label %57, label %113

57:                                               ; preds = %55
  %58 = trunc i64 %56 to i32
  %59 = trunc i64 %56 to i32
  br label %61

60:                                               ; preds = %113, %9
  ret void

61:                                               ; preds = %57, %209
  %62 = phi i64 [ %51, %57 ], [ %218, %209 ]
  br i1 %23, label %63, label %116

63:                                               ; preds = %61
  %64 = load i8*, i8** %24, align 8
  %65 = load i8, i8* %25, align 1
  %66 = zext i8 %65 to i32
  %67 = sub nsw i32 0, %66
  %68 = load i8, i8* %26, align 1
  %69 = zext i8 %68 to i32
  %70 = sub nsw i32 0, %69
  %71 = and i32 %58, %70
  %72 = load i8, i8* %27, align 4
  %73 = icmp eq i8 %72, 0
  %74 = load i32, i32* %28, align 4
  %75 = select i1 %73, i32 %69, i32 %74
  %76 = icmp eq i8 %72, 1
  %77 = select i1 %76, i32 %66, i32 %74
  %78 = mul nsw i32 %77, %71
  %79 = sub nsw i32 %58, %71
  %80 = load i8, i8* %29, align 1
  %81 = icmp eq i8 %80, 0
  %82 = select i1 %81, i8 1, i8 %68
  %83 = zext i8 %82 to i32
  %84 = icmp eq i8 %80, 1
  %85 = select i1 %84, i8 1, i8 %65
  %86 = zext i8 %85 to i32
  %87 = mul nsw i32 %79, %86
  %88 = load i8*, i8** %30, align 8
  %89 = load i8, i8* %31, align 1
  %90 = zext i8 %89 to i32
  %91 = sub nsw i32 0, %90
  %92 = load i8, i8* %32, align 1
  %93 = zext i8 %92 to i32
  %94 = sub nsw i32 0, %93
  %95 = trunc i64 %62 to i32
  %96 = and i32 %95, %94
  %97 = load i8, i8* %33, align 4
  %98 = icmp eq i8 %97, 0
  %99 = load i32, i32* %34, align 4
  %100 = select i1 %98, i32 %93, i32 %99
  %101 = icmp eq i8 %97, 1
  %102 = select i1 %101, i32 %90, i32 %99
  %103 = mul nsw i32 %102, %96
  %104 = sub nsw i32 %95, %96
  %105 = load i8, i8* %35, align 1
  %106 = icmp eq i8 %105, 0
  %107 = select i1 %106, i8 1, i8 %92
  %108 = zext i8 %107 to i32
  %109 = icmp eq i8 %105, 1
  %110 = select i1 %109, i8 1, i8 %89
  %111 = zext i8 %110 to i32
  %112 = mul nsw i32 %104, %111
  br label %120

113:                                              ; preds = %209, %55
  %114 = add nsw i64 %56, 1
  %115 = icmp slt i64 %114, %54
  br i1 %115, label %55, label %60

116:                                              ; preds = %120, %61
  %117 = phi i32 [ 0, %61 ], [ %146, %120 ]
  %118 = load i32*, i32** %36, align 8
  %119 = icmp eq i32* %118, null
  br i1 %119, label %153, label %149

120:                                              ; preds = %120, %63
  %121 = phi i32 [ 0, %63 ], [ %147, %120 ]
  %122 = phi i32 [ 0, %63 ], [ %146, %120 ]
  %123 = and i32 %121, %67
  %124 = mul nsw i32 %75, %123
  %125 = sub nsw i32 %121, %123
  %126 = mul nsw i32 %125, %83
  %127 = add i32 %124, %78
  %128 = add i32 %127, %87
  %129 = add i32 %128, %126
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %64, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = sext i8 %132 to i32
  %134 = and i32 %121, %91
  %135 = mul nsw i32 %100, %134
  %136 = sub nsw i32 %121, %134
  %137 = mul nsw i32 %136, %108
  %138 = add i32 %135, %103
  %139 = add i32 %138, %112
  %140 = add i32 %139, %137
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %88, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = sext i8 %143 to i32
  %145 = mul nsw i32 %144, %133
  %146 = add nsw i32 %145, %122
  %147 = add nuw nsw i32 %121, 1
  %148 = icmp eq i32 %147, %19
  br i1 %148, label %116, label %120

149:                                              ; preds = %116
  %150 = getelementptr inbounds i32, i32* %118, i64 %56
  %151 = load i32, i32* %150, align 4
  %152 = add nsw i32 %151, %117
  br label %153

153:                                              ; preds = %116, %149
  %154 = phi i32 [ %117, %116 ], [ %152, %149 ]
  %155 = load i32, i32* %37, align 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %163, label %157

157:                                              ; preds = %153
  %158 = load i32*, i32** %38, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 %62
  %160 = load i32, i32* %159, align 4
  %161 = mul nsw i32 %160, %155
  %162 = sub nsw i32 %154, %161
  br label %163

163:                                              ; preds = %153, %157
  %164 = phi i32 [ %154, %153 ], [ %162, %157 ]
  %165 = load i32, i32* %39, align 8
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %178, label %167

167:                                              ; preds = %163
  %168 = load i32*, i32** %40, align 8
  %169 = getelementptr inbounds i32, i32* %168, i64 %56
  %170 = load i32, i32* %169, align 4
  %171 = mul nsw i32 %170, %165
  %172 = sub nsw i32 %164, %171
  %173 = or i1 %156, %166
  br i1 %173, label %178, label %174

174:                                              ; preds = %167
  %175 = mul i32 %155, %19
  %176 = mul i32 %175, %165
  %177 = add nsw i32 %172, %176
  br label %178

178:                                              ; preds = %163, %167, %174
  %179 = phi i32 [ %172, %167 ], [ %177, %174 ], [ %164, %163 ]
  %180 = load i32*, i32** %41, align 8
  %181 = icmp eq i32* %180, null
  %182 = getelementptr inbounds i32, i32* %180, i64 %56
  %183 = select i1 %181, i32* %42, i32* %182
  %184 = load i32, i32* %183, align 4
  %185 = load i32*, i32** %43, align 8
  %186 = icmp eq i32* %185, null
  %187 = getelementptr inbounds i32, i32* %185, i64 %56
  %188 = select i1 %186, i32* %44, i32* %187
  %189 = load i32, i32* %188, align 4
  %190 = tail call i32 @_ZN3ruy6detail29MultiplyByQuantizedMultiplierEiii(i32 %179, i32 %184, i32 %189) #11
  %191 = load i8, i8* %45, align 8
  %192 = sext i8 %191 to i32
  %193 = add nsw i32 %190, %192
  %194 = load i8, i8* %46, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp sgt i32 %193, %195
  %197 = select i1 %196, i32 %195, i32 %193
  %198 = load i8, i8* %47, align 8
  %199 = sext i8 %198 to i32
  %200 = icmp slt i32 %197, %199
  %201 = select i1 %200, i32 %199, i32 %197
  %202 = trunc i32 %201 to i8
  %203 = load i8*, i8** %48, align 8
  %204 = load i8, i8* %49, align 4
  %205 = load i32, i32* %50, align 4
  switch i8 %204, label %206 [
    i8 0, label %207
    i8 1, label %209
  ]

206:                                              ; preds = %178
  br label %207

207:                                              ; preds = %206, %178
  %208 = phi i32 [ 1, %178 ], [ %205, %206 ]
  br label %209

209:                                              ; preds = %178, %207
  %210 = phi i32 [ %208, %207 ], [ %205, %178 ]
  %211 = phi i32 [ %205, %207 ], [ 1, %178 ]
  %212 = mul nsw i32 %210, %59
  %213 = trunc i64 %62 to i32
  %214 = mul nsw i32 %211, %213
  %215 = add nsw i32 %214, %212
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i8, i8* %203, i64 %216
  store i8 %202, i8* %217, align 1
  %218 = add nsw i64 %62, 1
  %219 = icmp slt i64 %218, %52
  br i1 %219, label %61, label %113
}

declare i32 @_ZN3ruy6detail29MultiplyByQuantizedMultiplierEiii(i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EaaaNS_9MulParamsIiaEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext, %"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat align 2 {
  switch i8 %0, label %57 [
    i8 8, label %3
    i8 2, label %4
  ]

3:                                                ; preds = %2
  tail call void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EaaaNS_9MulParamsIiaEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"* %1)
  br label %57

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 0
  store i8 2, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0
  %7 = bitcast %"struct.ruy::PEMat"* %6 to i24*
  store i24 65537, i24* %7, align 8
  %8 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 3
  %9 = bitcast %"struct.ruy::Type"* %8 to i24*
  store i24 262145, i24* %9, align 8
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %19, align 1
  %20 = and i32 %12, 1023
  %21 = icmp eq i32 %20, 0
  %22 = add nsw i32 %12, 64
  %23 = select i1 %21, i32 %22, i32 %12
  %24 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = shl i32 %26, 24
  %28 = ashr exact i32 %27, 24
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1
  %31 = bitcast %"struct.ruy::PEMat"* %30 to i24*
  store i24 65537, i24* %31, align 8
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 3
  %33 = bitcast %"struct.ruy::Type"* %32 to i24*
  store i24 262145, i24* %33, align 8
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %43, align 1
  %44 = and i32 %36, 1023
  %45 = icmp eq i32 %44, 0
  %46 = add nsw i32 %36, 64
  %47 = select i1 %45, i32 %46, i32 %36
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = shl i32 %50, 24
  %52 = ashr exact i32 %51, 24
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 1, i32 0, i64 0
  %55 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %54 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %55, align 8
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %56, align 8
  br label %57

57:                                               ; preds = %2, %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EaaaNS_9MulParamsIiaEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 4, i32 3, i32 3
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %54, label %13

13:                                               ; preds = %1, %5, %9
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 2, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %16 = bitcast %"struct.ruy::PEMat"* %15 to i24*
  store i24 65537, i24* %16, align 8
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %18 = bitcast %"struct.ruy::Type"* %17 to i24*
  store i24 262145, i24* %18, align 8
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %28, align 1
  %29 = and i32 %21, 1023
  %30 = icmp eq i32 %29, 0
  %31 = add nsw i32 %21, 64
  %32 = select i1 %30, i32 %31, i32 %21
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = shl i32 %35, 24
  %37 = ashr exact i32 %36, 24
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %40 = bitcast %"struct.ruy::PEMat"* %39 to i24*
  store i24 65537, i24* %40, align 8
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %42 = bitcast %"struct.ruy::Type"* %41 to i24*
  store i24 262145, i24* %42, align 8
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %52, align 1
  %53 = and i32 %45, 1023
  br label %103

54:                                               ; preds = %9
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 8, i8* %55, align 8
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %57 = bitcast %"struct.ruy::PEMat"* %56 to i24*
  store i24 65537, i24* %57, align 8
  %58 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %59 = bitcast %"struct.ruy::Type"* %58 to i24*
  store i24 262145, i24* %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %60, align 4
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, 3
  %64 = and i32 %63, -4
  %65 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 7
  %69 = and i32 %68, -8
  %70 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %71, align 1
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 4, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 8, i8* %73, align 1
  %74 = and i32 %63, 1020
  %75 = icmp eq i32 %74, 0
  %76 = add nsw i32 %64, 64
  %77 = select i1 %75, i32 %76, i32 %64
  %78 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %77, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = shl i32 %80, 24
  %82 = ashr exact i32 %81, 24
  %83 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %85 = bitcast %"struct.ruy::PEMat"* %84 to i24*
  store i24 65537, i24* %85, align 8
  %86 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %87 = bitcast %"struct.ruy::Type"* %86 to i24*
  store i24 262145, i24* %87, align 8
  %88 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %88, align 4
  %89 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, 3
  %92 = and i32 %91, -4
  %93 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 7
  %97 = and i32 %96, -8
  %98 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 4, i8* %100, align 1
  %101 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 8, i8* %101, align 1
  %102 = and i32 %91, 1020
  br label %103

103:                                              ; preds = %54, %13
  %104 = phi i32 [ %102, %54 ], [ %53, %13 ]
  %105 = phi i32 [ %92, %54 ], [ %45, %13 ]
  %106 = phi void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* [ @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %54 ], [ @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %13 ]
  %107 = phi void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* [ @_ZN3ruy9RunKernelILNS_4PathE8EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %54 ], [ @_ZN3ruy9RunKernelILNS_4PathE2EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %13 ]
  %108 = icmp eq i32 %104, 0
  %109 = add nsw i32 %105, 64
  %110 = select i1 %108, i32 %109, i32 %105
  %111 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 4
  %113 = load i32, i32* %112, align 8
  %114 = shl i32 %113, 24
  %115 = ashr exact i32 %114, 24
  %116 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %115, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 0
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %106, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %117, align 8
  %118 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 1
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %106, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %118, align 8
  %119 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)* %107, void (i32, %"class.ruy::SidePair.35"*, i8*, %"class.ruy::SidePair.36"*, %"class.ruy::SidePair.36"*, %"struct.ruy::EMat"*)** %119, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE8EaaaNS_9MulParamsIiaEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.35"* dereferenceable(112), i8*, %"class.ruy::SidePair.36"* dereferenceable(8), %"class.ruy::SidePair.36"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParams8bit.106", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8, !noalias !448
  %10 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !448
  %18 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8, !noalias !451
  %20 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 5
  %21 = bitcast i8** %20 to i32**
  %22 = load i32*, i32** %21, align 8, !noalias !451
  %23 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 0, i32 7
  %28 = load i32, i32* %27, align 8, !noalias !451
  %29 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 2
  %30 = load i8*, i8** %29, align 8, !noalias !454
  %31 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 5
  %32 = bitcast i8** %31 to i32**
  %33 = load i32*, i32** %32, align 8, !noalias !454
  %34 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.ruy::SidePair.35", %"class.ruy::SidePair.35"* %1, i64 0, i32 0, i64 1, i32 7
  %37 = load i32, i32* %36, align 8, !noalias !454
  %38 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %3, i64 0, i32 0, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.ruy::SidePair.36", %"class.ruy::SidePair.36"* %4, i64 0, i32 0, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %"struct.ruy::KernelParams8bit.106"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 488, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 1
  %48 = bitcast i32** %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 480, i1 false) #11
  %49 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 27, i64 0
  %50 = bitcast i32* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 32, i1 false) #11
  %51 = mul nsw i32 %39, %26
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %19, i64 %52
  %54 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 3
  store i8* %53, i8** %54, align 8
  %55 = mul nsw i32 %41, %35
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %30, i64 %56
  %58 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 6
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 24
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 0
  store i32* %49, i32** %60, align 8
  %61 = bitcast i8* %2 to i32**
  %62 = load i32*, i32** %61, align 8
  %63 = icmp eq i32* %62, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %6
  store i32* %62, i32** %60, align 8
  store i8 1, i8* %59, align 8
  br label %65

65:                                               ; preds = %64, %6
  %66 = phi i8 [ 0, %6 ], [ 1, %64 ]
  %67 = icmp eq i32* %22, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 1
  store i32* %22, i32** %69, align 8
  %70 = or i8 %66, 2
  store i8 %70, i8* %59, align 8
  br label %71

71:                                               ; preds = %68, %65
  %72 = phi i8 [ %66, %65 ], [ %70, %68 ]
  %73 = icmp eq i32* %33, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 2
  store i32* %33, i32** %75, align 8
  %76 = or i8 %72, 4
  store i8 %76, i8* %59, align 8
  br label %77

77:                                               ; preds = %74, %71
  %78 = phi i8 [ %72, %71 ], [ %76, %74 ]
  %79 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 12
  store i32 %39, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 13
  store i32 %41, i32* %80, align 4
  %81 = add nsw i32 %43, -8
  %82 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 14
  store i32 %81, i32* %82, align 8
  %83 = add nsw i32 %45, -8
  %84 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 15
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 18
  store i32 %26, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 19
  store i32 %35, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 20
  store i32 %15, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 8
  store i32 %28, i32* %88, align 8
  %89 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 9
  store i32 %37, i32* %89, align 4
  %90 = shl i32 %17, 24
  %91 = ashr exact i32 %90, 24
  %92 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 10
  store i32 %91, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 21
  store i32 %24, i32* %93, align 4
  %94 = mul i32 %28, %24
  %95 = mul i32 %94, %37
  %96 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 11
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds i8, i8* %2, i64 16
  %98 = bitcast i8* %97 to i32**
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %77
  %102 = ptrtoint i32* %99 to i64
  %103 = or i8 %78, 24
  store i8 %103, i8* %59, align 8
  %104 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 4
  %105 = bitcast i32** %104 to i64*
  store i64 %102, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %2, i64 24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 5
  %110 = bitcast i32** %109 to i64*
  store i64 %108, i64* %110, align 8
  br label %140

111:                                              ; preds = %77
  %112 = getelementptr inbounds i8, i8* %2, i64 12
  %113 = bitcast i8* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = or i8 %78, 16
  store i8 %117, i8* %59, align 8
  br label %118

118:                                              ; preds = %116, %111
  %119 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 0
  %120 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 4
  store i32* %119, i32** %120, align 8
  %121 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 0
  %122 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 5
  store i32* %121, i32** %122, align 8
  %123 = getelementptr inbounds i8, i8* %2, i64 8
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = insertelement <4 x i32> undef, i32 %125, i32 0
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> zeroinitializer
  %128 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %128, align 4
  %129 = insertelement <4 x i32> undef, i32 %114, i32 0
  %130 = shufflevector <4 x i32> %129, <4 x i32> undef, <4 x i32> zeroinitializer
  %131 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 4
  store i32 %125, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 4
  store i32 %114, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 5
  store i32 %125, i32* %134, align 4
  %135 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 5
  store i32 %114, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 6
  store i32 %125, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 6
  store i32 %114, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 29, i64 7
  store i32 %125, i32* %138, align 4
  %139 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 30, i64 7
  store i32 %114, i32* %139, align 4
  br label %140

140:                                              ; preds = %101, %118
  %141 = getelementptr inbounds i8, i8* %2, i64 32
  %142 = load i8, i8* %141, align 8
  %143 = sext i8 %142 to i32
  %144 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 22
  store i32 %143, i32* %144, align 8
  %145 = getelementptr inbounds i8, i8* %2, i64 33
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 %146 to i32
  %148 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 23
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 16
  store i32 %11, i32* %149, align 8
  %150 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 17
  store i32 %13, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 25
  store i8 2, i8* %151, align 1
  %152 = mul nsw i32 %41, %15
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %9, i64 %153
  %155 = sext i32 %39 to i64
  %156 = getelementptr inbounds i8, i8* %154, i64 %155
  %157 = getelementptr inbounds %"struct.ruy::KernelParams8bit.106", %"struct.ruy::KernelParams8bit.106"* %7, i64 0, i32 7
  store i8* %156, i8** %157, align 8
  %158 = icmp eq i32 %13, 1
  br i1 %158, label %159, label %160

159:                                              ; preds = %140
  call void @_ZN3ruy23Kernel8bitAvx2SingleColERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.106"* nonnull dereferenceable(488) %7) #11
  br label %161

160:                                              ; preds = %140
  call void @_ZN3ruy14Kernel8bitAvx2ERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.106"* nonnull dereferenceable(488) %7) #11
  br label %161

161:                                              ; preds = %159, %160
  call void @llvm.lifetime.end.p0i8(i64 488, i8* nonnull %46) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inaccessiblemem_or_argmemonly nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !4}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !4}
!11 = distinct !{!11, !12, !7}
!12 = !{!"llvm.loop.unroll.runtime.disable"}
!13 = distinct !{!13, !12, !7}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !4}
!19 = distinct !{!19, !12, !7}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!26 = distinct !{!26, !7}
!27 = distinct !{!27, !4}
!28 = distinct !{!28, !12, !7}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!35 = distinct !{!35, !7}
!36 = distinct !{!36, !4}
!37 = distinct !{!37, !12, !7}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!43 = distinct !{!43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!44 = distinct !{!44, !7}
!45 = distinct !{!45, !4}
!46 = distinct !{!46, !12, !7}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!49 = distinct !{!49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6tflite3ops7builtin12batch_matmul17SwapRowColumnDimsERKNS_12RuntimeShapeE: argument 0"}
!55 = distinct !{!55, !"_ZN6tflite3ops7builtin12batch_matmul17SwapRowColumnDimsERKNS_12RuntimeShapeE"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6tflite3ops7builtin12batch_matmul17SwapRowColumnDimsERKNS_12RuntimeShapeE: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite3ops7builtin12batch_matmul17SwapRowColumnDimsERKNS_12RuntimeShapeE"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!61 = distinct !{!61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!64 = distinct !{!64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!67 = distinct !{!67, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN6tflite3ops7builtin12batch_matmul17SwapRowColumnDimsERKNS_12RuntimeShapeE: argument 0"}
!70 = distinct !{!70, !"_ZN6tflite3ops7builtin12batch_matmul17SwapRowColumnDimsERKNS_12RuntimeShapeE"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN6tflite3ops7builtin12batch_matmul17SwapRowColumnDimsERKNS_12RuntimeShapeE: argument 0"}
!73 = distinct !{!73, !"_ZN6tflite3ops7builtin12batch_matmul17SwapRowColumnDimsERKNS_12RuntimeShapeE"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!76 = distinct !{!76, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!77 = distinct !{!77, !7}
!78 = distinct !{!78, !4}
!79 = distinct !{!79, !12, !7}
!80 = distinct !{!80, !7}
!81 = distinct !{!81, !4}
!82 = distinct !{!82, !12, !7}
!83 = distinct !{!83, !4}
!84 = distinct !{!84, !4}
!85 = distinct !{!85, !4}
!86 = distinct !{!86, !4}
!87 = distinct !{!87, !4}
!88 = distinct !{!88, !4}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!91 = distinct !{!91, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!92 = distinct !{!92, !7}
!93 = distinct !{!93, !4}
!94 = distinct !{!94, !12, !7}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!97 = distinct !{!97, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!98 = distinct !{!98, !7}
!99 = distinct !{!99, !4}
!100 = distinct !{!100, !12, !7}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !7}
!107 = distinct !{!107, !7}
!108 = distinct !{!108, !7}
!109 = distinct !{!109, !4}
!110 = distinct !{!110, !12, !7}
!111 = distinct !{!111, !7}
!112 = distinct !{!112, !4}
!113 = distinct !{!113, !12, !7}
!114 = !{!115}
!115 = distinct !{!115, !116}
!116 = distinct !{!116, !"LVerDomain"}
!117 = !{!118}
!118 = distinct !{!118, !116}
!119 = distinct !{!119, !7}
!120 = distinct !{!120, !7}
!121 = distinct !{!121, !4}
!122 = distinct !{!122, !4}
!123 = distinct !{!123, !4}
!124 = distinct !{!124, !4}
!125 = distinct !{!125, !4}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!128 = distinct !{!128, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!129 = distinct !{!129, !7}
!130 = distinct !{!130, !4}
!131 = distinct !{!131, !12, !7}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!134 = distinct !{!134, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!135 = distinct !{!135, !7}
!136 = distinct !{!136, !4}
!137 = distinct !{!137, !12, !7}
!138 = !{!139}
!139 = distinct !{!139, !140}
!140 = distinct !{!140, !"LVerDomain"}
!141 = !{!142}
!142 = distinct !{!142, !140}
!143 = distinct !{!143, !7}
!144 = distinct !{!144, !7}
!145 = !{!146}
!146 = distinct !{!146, !147, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!147 = distinct !{!147, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!148 = distinct !{!148, !7}
!149 = distinct !{!149, !4}
!150 = distinct !{!150, !12, !7}
!151 = !{!152}
!152 = distinct !{!152, !153, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!153 = distinct !{!153, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!154 = distinct !{!154, !7}
!155 = distinct !{!155, !4}
!156 = distinct !{!156, !12, !7}
!157 = distinct !{!157, !4}
!158 = distinct !{!158, !4}
!159 = distinct !{!159, !4}
!160 = distinct !{!160, !4}
!161 = distinct !{!161, !4}
!162 = distinct !{!162, !4}
!163 = !{!164}
!164 = distinct !{!164, !165, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!165 = distinct !{!165, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!166 = distinct !{!166, !4}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!169 = distinct !{!169, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!172 = distinct !{!172, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!175 = distinct !{!175, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!176 = !{!177}
!177 = distinct !{!177, !178, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!178 = distinct !{!178, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!179 = distinct !{!179, !7}
!180 = distinct !{!180, !4}
!181 = distinct !{!181, !12, !7}
!182 = !{!183}
!183 = distinct !{!183, !184, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!184 = distinct !{!184, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!185 = distinct !{!185, !7}
!186 = distinct !{!186, !4}
!187 = distinct !{!187, !12, !7}
!188 = distinct !{!188, !4}
!189 = distinct !{!189, !4}
!190 = distinct !{!190, !4}
!191 = distinct !{!191, !4}
!192 = distinct !{!192, !4}
!193 = distinct !{!193, !4}
!194 = distinct !{!194, !4}
!195 = distinct !{!195, !7}
!196 = distinct !{!196, !12, !7}
!197 = !{!198}
!198 = distinct !{!198, !199, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!199 = distinct !{!199, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!200 = distinct !{!200, !7}
!201 = distinct !{!201, !4}
!202 = distinct !{!202, !12, !7}
!203 = !{!204}
!204 = distinct !{!204, !205, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!205 = distinct !{!205, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!206 = distinct !{!206, !7}
!207 = distinct !{!207, !4}
!208 = distinct !{!208, !12, !7}
!209 = distinct !{!209, !4}
!210 = distinct !{!210, !4}
!211 = distinct !{!211, !4}
!212 = distinct !{!212, !4}
!213 = distinct !{!213, !4}
!214 = distinct !{!214, !4}
!215 = distinct !{!215, !7}
!216 = distinct !{!216, !12, !7}
!217 = !{!218}
!218 = distinct !{!218, !219, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!219 = distinct !{!219, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!220 = distinct !{!220, !7}
!221 = distinct !{!221, !4}
!222 = distinct !{!222, !12, !7}
!223 = !{!224}
!224 = distinct !{!224, !225, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!225 = distinct !{!225, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!226 = distinct !{!226, !7}
!227 = distinct !{!227, !4}
!228 = distinct !{!228, !12, !7}
!229 = distinct !{!229, !4}
!230 = distinct !{!230, !4}
!231 = distinct !{!231, !4}
!232 = distinct !{!232, !4}
!233 = distinct !{!233, !4}
!234 = distinct !{!234, !4}
!235 = !{!236}
!236 = distinct !{!236, !237, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!237 = distinct !{!237, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!238 = !{!239}
!239 = distinct !{!239, !240, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!240 = distinct !{!240, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!241 = !{!242}
!242 = distinct !{!242, !243, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!243 = distinct !{!243, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!244 = !{!245}
!245 = distinct !{!245, !246, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERNS_6MatrixIS2_EE: argument 0"}
!246 = distinct !{!246, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERNS_6MatrixIS2_EE"}
!247 = !{!248}
!248 = distinct !{!248, !249, !"_ZN3ruy9EraseTypeIfEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!249 = distinct !{!249, !"_ZN3ruy9EraseTypeIfEENS_4EMatERKNS_3MatIT_EE"}
!250 = !{!251}
!251 = distinct !{!251, !252, !"_ZN3ruy9EraseTypeIfEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!252 = distinct !{!252, !"_ZN3ruy9EraseTypeIfEENS_4EMatERKNS_3MatIT_EE"}
!253 = !{!254}
!254 = distinct !{!254, !255, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!255 = distinct !{!255, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!256 = !{!257}
!257 = distinct !{!257, !258, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!258 = distinct !{!258, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!259 = !{!260}
!260 = distinct !{!260, !261, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!261 = distinct !{!261, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!262 = !{!263}
!263 = distinct !{!263, !264, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!264 = distinct !{!264, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!265 = !{!266}
!266 = distinct !{!266, !267, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!267 = distinct !{!267, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!268 = !{!269}
!269 = distinct !{!269, !270, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!270 = distinct !{!270, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!271 = !{!272}
!272 = distinct !{!272, !273, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!273 = distinct !{!273, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!274 = !{!275}
!275 = distinct !{!275, !276, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!276 = distinct !{!276, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!277 = !{!278}
!278 = distinct !{!278, !279, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!279 = distinct !{!279, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!280 = !{!281}
!281 = distinct !{!281, !282, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!282 = distinct !{!282, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!283 = !{!284}
!284 = distinct !{!284, !285, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!285 = distinct !{!285, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!286 = !{!287}
!287 = distinct !{!287, !288, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!288 = distinct !{!288, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!289 = !{!290}
!290 = distinct !{!290, !291, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!291 = distinct !{!291, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!292 = !{!293}
!293 = distinct !{!293, !294, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!294 = distinct !{!294, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!295 = !{!296}
!296 = distinct !{!296, !297, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!297 = distinct !{!297, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!298 = distinct !{!298, !4}
!299 = !{!300}
!300 = distinct !{!300, !301, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!301 = distinct !{!301, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!302 = !{!303}
!303 = distinct !{!303, !304, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!304 = distinct !{!304, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!305 = !{!306}
!306 = distinct !{!306, !307, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!307 = distinct !{!307, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!308 = !{!309}
!309 = distinct !{!309, !310, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!310 = distinct !{!310, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!311 = distinct !{!311, !7}
!312 = distinct !{!312, !4}
!313 = distinct !{!313, !12, !7}
!314 = !{!315}
!315 = distinct !{!315, !316, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!316 = distinct !{!316, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!317 = distinct !{!317, !7}
!318 = distinct !{!318, !4}
!319 = distinct !{!319, !12, !7}
!320 = distinct !{!320, !4}
!321 = distinct !{!321, !4}
!322 = distinct !{!322, !4}
!323 = distinct !{!323, !4}
!324 = distinct !{!324, !4}
!325 = distinct !{!325, !4}
!326 = distinct !{!326, !4}
!327 = !{!328}
!328 = distinct !{!328, !329}
!329 = distinct !{!329, !"LVerDomain"}
!330 = !{!331}
!331 = distinct !{!331, !329}
!332 = !{!333, !328}
!333 = distinct !{!333, !329}
!334 = !{!333}
!335 = distinct !{!335, !7}
!336 = distinct !{!336, !7}
!337 = !{!338}
!338 = distinct !{!338, !339, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!339 = distinct !{!339, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!340 = !{!341}
!341 = distinct !{!341, !342, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!342 = distinct !{!342, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!343 = !{!344}
!344 = distinct !{!344, !345, !"_ZN3ruy10ToInternalIiEENS_3MatIT_EERNS_6MatrixIS2_EE: argument 0"}
!345 = distinct !{!345, !"_ZN3ruy10ToInternalIiEENS_3MatIT_EERNS_6MatrixIS2_EE"}
!346 = !{!347}
!347 = distinct !{!347, !348, !"_ZN3ruy9EraseTypeIaEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!348 = distinct !{!348, !"_ZN3ruy9EraseTypeIaEENS_4EMatERKNS_3MatIT_EE"}
!349 = !{!350}
!350 = distinct !{!350, !351, !"_ZN3ruy9EraseTypeIiEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!351 = distinct !{!351, !"_ZN3ruy9EraseTypeIiEENS_4EMatERKNS_3MatIT_EE"}
!352 = !{!353}
!353 = distinct !{!353, !354, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!354 = distinct !{!354, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE"}
!355 = !{!356}
!356 = distinct !{!356, !357, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!357 = distinct !{!357, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!358 = !{!359}
!359 = distinct !{!359, !360, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!360 = distinct !{!360, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE"}
!361 = !{!362}
!362 = distinct !{!362, !363, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!363 = distinct !{!363, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!364 = !{!365}
!365 = distinct !{!365, !366, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!366 = distinct !{!366, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!367 = !{!368}
!368 = distinct !{!368, !369, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!369 = distinct !{!369, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE"}
!370 = !{!371}
!371 = distinct !{!371, !372, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!372 = distinct !{!372, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!373 = !{!374}
!374 = distinct !{!374, !375, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!375 = distinct !{!375, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE"}
!376 = !{!377}
!377 = distinct !{!377, !378, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!378 = distinct !{!378, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!379 = !{!380}
!380 = distinct !{!380, !381, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!381 = distinct !{!381, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!382 = !{!383}
!383 = distinct !{!383, !384, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!384 = distinct !{!384, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE"}
!385 = !{!386}
!386 = distinct !{!386, !387, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!387 = distinct !{!387, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!388 = !{!389}
!389 = distinct !{!389, !390, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!390 = distinct !{!390, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE"}
!391 = !{!392}
!392 = distinct !{!392, !393, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!393 = distinct !{!393, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!394 = !{!395}
!395 = distinct !{!395, !396, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!396 = distinct !{!396, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!397 = !{!398}
!398 = distinct !{!398, !399, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!399 = distinct !{!399, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!400 = distinct !{!400, !7}
!401 = distinct !{!401, !4}
!402 = distinct !{!402, !12, !7}
!403 = !{!404}
!404 = distinct !{!404, !405, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!405 = distinct !{!405, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!406 = distinct !{!406, !7}
!407 = distinct !{!407, !4}
!408 = distinct !{!408, !12, !7}
!409 = distinct !{!409, !4}
!410 = distinct !{!410, !4}
!411 = distinct !{!411, !4}
!412 = distinct !{!412, !4}
!413 = distinct !{!413, !4}
!414 = distinct !{!414, !4}
!415 = !{!416}
!416 = distinct !{!416, !417, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!417 = distinct !{!417, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!418 = !{!419}
!419 = distinct !{!419, !420, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!420 = distinct !{!420, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!421 = !{!422}
!422 = distinct !{!422, !423, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERNS_6MatrixIS2_EE: argument 0"}
!423 = distinct !{!423, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERNS_6MatrixIS2_EE"}
!424 = !{!425}
!425 = distinct !{!425, !426, !"_ZN3ruy9EraseTypeIaEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!426 = distinct !{!426, !"_ZN3ruy9EraseTypeIaEENS_4EMatERKNS_3MatIT_EE"}
!427 = !{!428}
!428 = distinct !{!428, !429, !"_ZN3ruy9EraseTypeIaEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!429 = distinct !{!429, !"_ZN3ruy9EraseTypeIaEENS_4EMatERKNS_3MatIT_EE"}
!430 = !{!431}
!431 = distinct !{!431, !432, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!432 = distinct !{!432, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE"}
!433 = !{!434}
!434 = distinct !{!434, !435, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!435 = distinct !{!435, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!436 = !{!437}
!437 = distinct !{!437, !438, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!438 = distinct !{!438, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!439 = !{!440}
!440 = distinct !{!440, !441, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!441 = distinct !{!441, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE"}
!442 = !{!443}
!443 = distinct !{!443, !444, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!444 = distinct !{!444, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!445 = !{!446}
!446 = distinct !{!446, !447, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!447 = distinct !{!447, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!448 = !{!449}
!449 = distinct !{!449, !450, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!450 = distinct !{!450, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE"}
!451 = !{!452}
!452 = distinct !{!452, !453, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!453 = distinct !{!453, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!454 = !{!455}
!455 = distinct !{!455, !456, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!456 = distinct !{!456, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
