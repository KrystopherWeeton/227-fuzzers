; ModuleID = '../../third_party/skia/src/core/SkRecorder.cpp'
source_filename = "../../third_party/skia/src/core/SkRecorder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRecords::Flush" = type { i8 }
%"struct.SkRecords::Save" = type { i8 }
%class.SkDrawableList = type { %class.SkTDArray }
%class.SkTDArray = type { %class.SkDrawable**, i32, i32 }
%class.SkDrawable = type { %class.SkFlattenable.base, i32 }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkRecorder = type { %class.SkCanvasVirtualEnforcer, i64, %class.SkRecord*, %"class.std::__1::unique_ptr.51", %class.SkMiniRecorder* }
%class.SkCanvasVirtualEnforcer = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer.6 }
%class.SkCanvasVirtualEnforcer.6 = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.7, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.8", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.12" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.7 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc.15, i32, %class.SkAutoTMalloc.15, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.37" }
%class.SkAutoTMalloc.15 = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.28" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.20, %class.SkSpan.21, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.19" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.19" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.20 = type { i32*, i64 }
%class.SkSpan.21 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.22, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.22 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i8 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.31, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.31 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt, %struct.SkRect, i32, %"struct.std::__1::atomic.32" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i32 }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i16*, i16*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i16* }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.SkDrawableList* }
%class.SkRecord = type { %class.SkRefCnt.base, i32, i32, %class.SkAutoTMalloc.47, %class.SkArenaAlloc, i64 }
%class.SkAutoTMalloc.47 = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.SkRecord::Record"* }
%"struct.SkRecord::Record" = type { i32, i8* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkMiniRecorder = type { i32, [4 x i8], [88 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.SkBigPicture::SnapshotArray" = type <{ %class.SkAutoTMalloc, i32, [4 x i8] }>
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkPicture** }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1", [7 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%struct.RawBytes = type { [1 x i8] }
%class.SkPaint = type <{ %class.sk_sp.57, %class.sk_sp.58, %class.sk_sp.59, %class.sk_sp.60, %class.sk_sp.61, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.57 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.58 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.59 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.60 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.61 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkPath = type <{ %class.sk_sp.62, i32, %"struct.std::__1::atomic.23", %"struct.std::__1::atomic.23", i8, i8 }>
%class.sk_sp.62 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.63, %struct.SkRect, [4 x i8], %class.SkTDArray.64, %class.SkTDArray.65, %class.SkTDArray.66, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.63 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.64 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.65 = type { i8*, i32, i32 }
%class.SkTDArray.66 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.67 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.67 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.1", [3 x i8] }
%"struct.SkRecords::PreCachedPath" = type { %class.SkPath.base, i8 }
%class.SkPath.base = type <{ %class.sk_sp.62, i32, %"struct.std::__1::atomic.23", %"struct.std::__1::atomic.23", i8 }>
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.68, i32, i32 }
%class.sk_sp.68 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.69, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.69 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.sk_sp.70 = type { %class.SkImage* }
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%struct.RawBytes.106 = type { [1 x i8] }
%class.sk_sp.71 = type { %class.SkTextBlob* }
%class.sk_sp.72 = type { %class.SkPicture* }
%"struct.SkRecords::TypedMatrix" = type { %class.SkMatrix }
%class.SkVertices = type <{ %class.SkNVRefCnt.73, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt.73 = type { %"struct.std::__1::atomic" }
%class.sk_sp.74 = type { %class.SkVertices* }
%struct.SkRSXform = type { float, float, float, float }
%struct.SkDrawShadowRec = type { %struct.SkPoint3, %struct.SkPoint3, float, i32, i32, i32 }
%struct.SkPoint3 = type { float, float, float }
%class.SkData = type { %class.SkNVRefCnt.75, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.75 = type { %"struct.std::__1::atomic" }
%class.SkString = type { %class.sk_sp.76 }
%class.sk_sp.76 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.sk_sp.77 = type { %class.SkData* }
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.78, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.78 = type { %class.SkImage* }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.79" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.SkCanvas::ImageSetEntry"* }
%"struct.SkCanvas::SaveLayerRec" = type <{ %struct.SkRect*, %class.SkPaint*, %class.SkImageFilter*, i32, [4 x i8] }>
%class.SkM44 = type { [16 x float] }
%"struct.SkRecords::ClipOpAndAA" = type { i32 }
%class.sk_sp.85 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.GrRecordingContext = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.GrSurfaceDrawContext = type opaque
%class.SkPaintFilterCanvas = type opaque

$_ZN10SkRecorder6appendIN9SkRecords10DrawPointsEJRK7SkPaintRN8SkCanvas9PointModeEjP7SkPointEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords8DrawRectEJRK7SkPaintRK6SkRectEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords10DrawRegionEJRK7SkPaintRK8SkRegionEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords8DrawOvalEJRK7SkPaintRK6SkRectEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords7DrawArcEJRK7SkPaintRK6SkRectRfS9_RbEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords9DrawRRectEJRK7SkPaintRK7SkRRectEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords10DrawDRRectEJRK7SkPaintRK7SkRRectS8_EEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords12DrawDrawableEJP8SkMatrix6SkRectiEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords8DrawPathEJRK7SkPaintRK6SkPathEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords9DrawImageEJP7SkPaint5sk_spI7SkImageERfS8_RK17SkSamplingOptionsEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords13DrawImageRectEJP7SkPaint5sk_spI7SkImageERK6SkRectSA_RK17SkSamplingOptionsRN8SkCanvas17SrcRectConstraintEEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords16DrawImageLatticeEJP7SkPaint5sk_spI7SkImageERKiPiS9_SA_RiPN8SkCanvas7Lattice8RectTypeEPjRK7SkIRectRK6SkRectR12SkFilterModeEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords12DrawTextBlobEJRK7SkPaint5sk_spI10SkTextBlobERfS9_EEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords11DrawPictureEJP7SkPaint5sk_spI9SkPictureERK8SkMatrixEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords12DrawVerticesEJRK7SkPaint5sk_spI10SkVerticesER11SkBlendModeEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords9DrawPatchEJRK7SkPaintP7SkPointPjS7_R11SkBlendModeEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords9DrawAtlasEJP7SkPaint5sk_spI7SkImageEP9SkRSXformP6SkRectPjRiR11SkBlendModeRK17SkSamplingOptionsSB_EEEvDpOT0_ = comdat any

$_ZN10SkRecorder4copyI9SkRSXformEEPT_PKS2_m = comdat any

$_ZN10SkRecorder4copyI6SkRectEEPT_PKS2_m = comdat any

$_ZN10SkRecorder6appendIN9SkRecords13DrawShadowRecEJRK6SkPathRK15SkDrawShadowRecEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords14DrawAnnotationEJRK6SkRect8SkString5sk_spI6SkDataEEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords14DrawEdgeAAQuadEJRK6SkRectP7SkPointRN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EER11SkBlendModeEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords18DrawEdgeAAImageSetEJP7SkPaint12SkAutoTArrayIN8SkCanvas13ImageSetEntryEERiP7SkPointP8SkMatrixRK17SkSamplingOptionsRNS6_17SrcRectConstraintEEEEvDpOT0_ = comdat any

$_ZN10SkRecorder4copyI8SkMatrixEEPT_PKS2_m = comdat any

$_ZN10SkRecorder6appendIN9SkRecords9SaveLayerEJP6SkRectP7SkPaint5sk_spI13SkImageFilterERKjEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords8ClipPathEJRK6SkPathRNS1_11ClipOpAndAAEEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords10ClipShaderEJ5sk_spI8SkShaderER8SkClipOpEEEvDpOT0_ = comdat any

$_ZN10SkRecorder6appendIN9SkRecords10ClipRegionEJRK8SkRegionR8SkClipOpEEEvDpOT0_ = comdat any

$_ZN10SkRecorderD2Ev = comdat any

$_ZN10SkRecorderD0Ev = comdat any

$_ZN10SkRecorder11willRestoreEv = comdat any

$_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv = comdat any

$_ZZN8SkRecord12allocCommandIN9SkRecords5FlushEEENSt3__19enable_ifIXsr3std8is_emptyIT_EE5valueEPS5_E4typeEvE9singleton = comdat any

$_ZZN8SkRecord12allocCommandIN9SkRecords4SaveEEENSt3__19enable_ifIXsr3std8is_emptyIT_EE5valueEPS5_E4typeEvE9singleton = comdat any

@_ZTV10SkRecorder = hidden unnamed_addr constant { [56 x i8*] } { [56 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRecorder*)* @_ZN10SkRecorderD2Ev to i8*), i8* bitcast (void (%class.SkRecorder*)* @_ZN10SkRecorderD0Ev to i8*), i8* bitcast (i64 (%class.SkCanvas*)* @_ZNK8SkCanvas16getBaseLayerSizeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkCanvas*)* @_ZN8SkCanvas16recordingContextEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas11isClipEmptyEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas10isClipRectEv to i8*), i8* bitcast (void (%class.sk_sp.85*, %class.SkRecorder*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN10SkRecorder12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap to i8*), i8* bitcast (void (%struct.SkImageInfo*, %class.SkCanvas*)* @_ZNK8SkCanvas11onImageInfoEv to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkSurfaceProps*)* @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps to i8*), i8* bitcast (void (%class.SkRecorder*)* @_ZN10SkRecorder7onFlushEv to i8*), i8* bitcast (void (%class.SkRecorder*)* @_ZN10SkRecorder8willSaveEv to i8*), i8* bitcast (i32 (%class.SkRecorder*, %"struct.SkCanvas::SaveLayerRec"*)* @_ZN10SkRecorder20getSaveLayerStrategyERKN8SkCanvas12SaveLayerRecE to i8*), i8* bitcast (i1 (%class.SkRecorder*, %struct.SkRect*)* @_ZN10SkRecorder14onDoSaveBehindEPK6SkRect to i8*), i8* bitcast (void (%class.SkRecorder*)* @_ZN10SkRecorder11willRestoreEv to i8*), i8* bitcast (void (%class.SkRecorder*)* @_ZN10SkRecorder10didRestoreEv to i8*), i8* bitcast (void (%class.SkRecorder*, i8*)* @_ZN10SkRecorder9onMarkCTMEPKc to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkM44*)* @_ZN10SkRecorder11didConcat44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkM44*)* @_ZN10SkRecorder9didSetM44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkRecorder*, float, float)* @_ZN10SkRecorder12didTranslateEff to i8*), i8* bitcast (void (%class.SkRecorder*, float, float)* @_ZN10SkRecorder8didScaleEff to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkPaint*)* @_ZN10SkRecorder11onDrawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkPaint*)* @_ZN10SkRecorder12onDrawBehindERK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %struct.SkRect*, %class.SkPaint*)* @_ZN10SkRecorder10onDrawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkRRect*, %class.SkPaint*)* @_ZN10SkRecorder11onDrawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN10SkRecorder12onDrawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %struct.SkRect*, %class.SkPaint*)* @_ZN10SkRecorder10onDrawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN10SkRecorder9onDrawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkPath*, %class.SkPaint*)* @_ZN10SkRecorder10onDrawPathERK6SkPathRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkRegion*, %class.SkPaint*)* @_ZN10SkRecorder12onDrawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkTextBlob*, float, float, %class.SkPaint*)* @_ZN10SkRecorder14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN10SkRecorder18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN10SkRecorder11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN10SkRecorder12onDrawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN10SkRecorder12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN10SkRecorder16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN10SkRecorder19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)* @_ZN10SkRecorder12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN10SkRecorder21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN10SkRecorder20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN10SkRecorder16onDrawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN10SkRecorder15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkDrawable*, %class.SkMatrix*)* @_ZN10SkRecorder14onDrawDrawableEP10SkDrawablePK8SkMatrix to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)* @_ZN10SkRecorder13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint to i8*), i8* bitcast (void (%class.SkRecorder*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN10SkRecorder16onDrawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkRecorder*, %struct.SkRect*, i32, i32)* @_ZN10SkRecorder10onClipRectERK6SkRect8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkRRect*, i32, i32)* @_ZN10SkRecorder11onClipRRectERK7SkRRect8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkPath*, i32, i32)* @_ZN10SkRecorder10onClipPathERK6SkPath8SkClipOpN8SkCanvas13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkRecorder*, %class.sk_sp.58*, i32)* @_ZN10SkRecorder12onClipShaderE5sk_spI8SkShaderE8SkClipOp to i8*), i8* bitcast (void (%class.SkRecorder*, %class.SkRegion*, i32)* @_ZN10SkRecorder12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas9onDiscardEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkCanvas*)* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv to i8*), i8* bitcast (%class.SkPaintFilterCanvas* (%class.SkCanvas*)* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv to i8*)] }, align 8
@_ZZL19safe_picture_boundsRK6SkRectE11kSafeBounds = internal constant %struct.SkIRect { i32 -1073741759, i32 -1073741759, i32 1073741759, i32 1073741759 }, align 4
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1
@_ZZN8SkRecord12allocCommandIN9SkRecords5FlushEEENSt3__19enable_ifIXsr3std8is_emptyIT_EE5valueEPS5_E4typeEvE9singleton = linkonce_odr hidden global %"struct.SkRecords::Flush" undef, comdat, align 1
@_ZZN8SkRecord12allocCommandIN9SkRecords4SaveEEENSt3__19enable_ifIXsr3std8is_emptyIT_EE5valueEPS5_E4typeEvE9singleton = linkonce_odr hidden global %"struct.SkRecords::Save" undef, comdat, align 1

@_ZN14SkDrawableListD1Ev = hidden unnamed_addr alias void (%class.SkDrawableList*), void (%class.SkDrawableList*)* @_ZN14SkDrawableListD2Ev
@_ZN10SkRecorderC1EP8SkRecordiiP14SkMiniRecorder = hidden unnamed_addr alias void (%class.SkRecorder*, %class.SkRecord*, i32, i32, %class.SkMiniRecorder*), void (%class.SkRecorder*, %class.SkRecord*, i32, i32, %class.SkMiniRecorder*)* @_ZN10SkRecorderC2EP8SkRecordiiP14SkMiniRecorder
@_ZN10SkRecorderC1EP8SkRecordRK6SkRectP14SkMiniRecorder = hidden unnamed_addr alias void (%class.SkRecorder*, %class.SkRecord*, %struct.SkRect*, %class.SkMiniRecorder*), void (%class.SkRecorder*, %class.SkRecord*, %struct.SkRect*, %class.SkMiniRecorder*)* @_ZN10SkRecorderC2EP8SkRecordRK6SkRectP14SkMiniRecorder

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkDrawableListD2Ev(%class.SkDrawableList* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkDrawable**, %class.SkDrawable*** %2, align 8
  %4 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %3, i64 %6
  %8 = icmp sgt i32 %5, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %1, %21
  %10 = phi %class.SkDrawable** [ %22, %21 ], [ %3, %1 ]
  %11 = bitcast %class.SkDrawable** %10 to %class.SkRefCntBase**
  %12 = load %class.SkRefCntBase*, %class.SkRefCntBase** %11, align 8
  %13 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %21

16:                                               ; preds = %9
  %17 = bitcast %class.SkRefCntBase* %12 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* %12) #13
  br label %21

21:                                               ; preds = %16, %9
  %22 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %10, i64 1
  %23 = icmp ult %class.SkDrawable** %22, %7
  br i1 %23, label %9, label %24

24:                                               ; preds = %21
  %25 = load %class.SkDrawable**, %class.SkDrawable*** %2, align 8
  br label %26

26:                                               ; preds = %24, %1
  %27 = phi %class.SkDrawable** [ %25, %24 ], [ %3, %1 ]
  %28 = bitcast %class.SkDrawable** %27 to i8*
  %29 = icmp eq %class.SkDrawable** %27, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = bitcast %class.SkDrawable** %27 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %31) #13
  %32 = bitcast %class.SkDrawableList* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #13
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi i8* [ %28, %26 ], [ null, %30 ]
  tail call void @_Z7sk_freePv(i8* %34) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.SkBigPicture::SnapshotArray"* @_ZN14SkDrawableList19newDrawableSnapshotEv(%class.SkDrawableList* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = tail call i8* @_Z15sk_malloc_throwmm(i64 %6, i64 8) #13
  %8 = ptrtoint i8* %7 to i64
  %9 = icmp sgt i32 %3, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %0, i64 0, i32 0, i32 0
  %12 = bitcast i8* %7 to %class.SkPicture**
  %13 = zext i32 %3 to i64
  br label %20

14:                                               ; preds = %20, %5
  %15 = tail call i8* @_Znwm(i64 16) #14
  %16 = bitcast i8* %15 to %"class.SkBigPicture::SnapshotArray"*
  %17 = bitcast i8* %15 to i64*
  store i64 %8, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %3, i32* %19, align 8
  br label %29

20:                                               ; preds = %20, %10
  %21 = phi i64 [ 0, %10 ], [ %27, %20 ]
  %22 = load %class.SkDrawable**, %class.SkDrawable*** %11, align 8
  %23 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %22, i64 %21
  %24 = load %class.SkDrawable*, %class.SkDrawable** %23, align 8
  %25 = tail call %class.SkPicture* @_ZN10SkDrawable18newPictureSnapshotEv(%class.SkDrawable* %24) #13
  %26 = getelementptr inbounds %class.SkPicture*, %class.SkPicture** %12, i64 %21
  store %class.SkPicture* %25, %class.SkPicture** %26, align 8
  %27 = add nuw nsw i64 %21, 1
  %28 = icmp eq i64 %27, %13
  br i1 %28, label %14, label %20

29:                                               ; preds = %1, %14
  %30 = phi %"class.SkBigPicture::SnapshotArray"* [ %16, %14 ], [ null, %1 ]
  ret %"class.SkBigPicture::SnapshotArray"* %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %class.SkPicture* @_ZN10SkDrawable18newPictureSnapshotEv(%class.SkDrawable*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkDrawableList6appendEP10SkDrawable(%class.SkDrawableList* nocapture, %class.SkDrawable*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkDrawable, %class.SkDrawable* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i32* %3, i32 1 monotonic
  %5 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, 1
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, %7
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %0, i64 0, i32 0, i32 0
  %16 = load %class.SkDrawable**, %class.SkDrawable*** %15, align 8
  br label %30

17:                                               ; preds = %10
  %18 = add i32 %6, 5
  %19 = lshr i32 %18, 2
  %20 = add nuw i32 %19, %18
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

23:                                               ; preds = %17
  store i32 %20, i32* %11, align 8
  %24 = bitcast %class.SkDrawableList* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = sext i32 %20 to i64
  %27 = shl nsw i64 %26, 3
  %28 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %25, i64 %27) #13
  store i8* %28, i8** %24, align 8
  %29 = bitcast i8* %28 to %class.SkDrawable**
  br label %30

30:                                               ; preds = %14, %23
  %31 = phi %class.SkDrawable** [ %16, %14 ], [ %29, %23 ]
  store i32 %7, i32* %5, align 4
  %32 = sext i32 %6 to i64
  %33 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %31, i64 %32
  store %class.SkDrawable* %1, %class.SkDrawable** %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorderC2EP8SkRecordiiP14SkMiniRecorder(%class.SkRecorder*, %class.SkRecord*, i32, i32, %class.SkMiniRecorder*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0
  tail call void @_ZN14SkNoDrawCanvasC2Eii(%class.SkNoDrawCanvas* %6, i32 %2, i32 %3) #13
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV10SkRecorder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 1
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  store %class.SkRecord* %1, %class.SkRecord** %9, align 8
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::unique_ptr.51"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  store %class.SkMiniRecorder* %4, %class.SkMiniRecorder** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorderC2EP8SkRecordRK6SkRectP14SkMiniRecorder(%class.SkRecorder*, %class.SkRecord*, %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkMiniRecorder*) unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %struct.SkIRect*
  %9 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = bitcast <2 x i64>* %5 to %struct.SkIRect*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = tail call float @llvm.floor.f32(float %14) #13
  %16 = fcmp olt float %15, 0x41DFFFFFE0000000
  %17 = select i1 %16, float %15, float 0x41DFFFFFE0000000
  %18 = fcmp ogt float %17, 0xC1DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0xC1DFFFFFE0000000
  %20 = fptosi float %19 to i32
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = tail call float @llvm.floor.f32(float %22) #13
  %24 = fcmp olt float %23, 0x41DFFFFFE0000000
  %25 = select i1 %24, float %23, float 0x41DFFFFFE0000000
  %26 = fcmp ogt float %25, 0xC1DFFFFFE0000000
  %27 = select i1 %26, float %25, float 0xC1DFFFFFE0000000
  %28 = fptosi float %27 to i32
  %29 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %30 = load float, float* %29, align 4
  %31 = tail call float @llvm.ceil.f32(float %30) #13
  %32 = fcmp olt float %31, 0x41DFFFFFE0000000
  %33 = select i1 %32, float %31, float 0x41DFFFFFE0000000
  %34 = fcmp ogt float %33, 0xC1DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0xC1DFFFFFE0000000
  %36 = fptosi float %35 to i32
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %38 = load float, float* %37, align 4
  %39 = tail call float @llvm.ceil.f32(float %38) #13
  %40 = fcmp olt float %39, 0x41DFFFFFE0000000
  %41 = select i1 %40, float %39, float 0x41DFFFFFE0000000
  %42 = fcmp ogt float %41, 0xC1DFFFFFE0000000
  %43 = select i1 %42, float %41, float 0xC1DFFFFFE0000000
  %44 = fptosi float %43 to i32
  %45 = zext i32 %28 to i64
  %46 = shl nuw i64 %45, 32
  %47 = zext i32 %20 to i64
  %48 = or i64 %46, %47
  %49 = zext i32 %44 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %36 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds <2 x i64>, <2 x i64>* %5, i64 0, i64 0
  store i64 %48, i64* %53, align 16
  store i64 %52, i64* %12, align 8
  %54 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %11, %struct.SkIRect* nonnull dereferenceable(16) %11, %struct.SkIRect* nonnull dereferenceable(16) @_ZZL19safe_picture_boundsRK6SkRectE11kSafeBounds) #13
  br i1 %54, label %55, label %57

55:                                               ; preds = %4
  %56 = load <2 x i64>, <2 x i64>* %5, align 16
  br label %58

57:                                               ; preds = %4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 16, i1 false) #13
  br label %58

58:                                               ; preds = %55, %57
  %59 = phi <2 x i64> [ %56, %55 ], [ zeroinitializer, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  store <2 x i64> %59, <2 x i64>* %7, align 16
  %60 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0
  call void @_ZN14SkNoDrawCanvasC2ERK7SkIRect(%class.SkNoDrawCanvas* %60, %struct.SkIRect* nonnull dereferenceable(16) %8) #13
  %61 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV10SkRecorder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 1
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  store %class.SkRecord* %1, %class.SkRecord** %63, align 8
  %64 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 3
  %65 = bitcast %"class.std::__1::unique_ptr.51"* %64 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  store %class.SkMiniRecorder* %3, %class.SkMiniRecorder** %66, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder5resetEP8SkRecordRK6SkRectP14SkMiniRecorder(%class.SkRecorder*, %class.SkRecord*, %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkMiniRecorder*) local_unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %struct.SkIRect*
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %class.SkDrawableList*, %class.SkDrawableList** %9, align 8
  store %class.SkDrawableList* null, %class.SkDrawableList** %9, align 8
  %11 = icmp eq %class.SkDrawableList* %10, null
  br i1 %11, label %48, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %10, i64 0, i32 0, i32 0
  %14 = load %class.SkDrawable**, %class.SkDrawable*** %13, align 8
  %15 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %10, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %14, i64 %17
  %19 = icmp sgt i32 %16, 0
  br i1 %19, label %20, label %37

20:                                               ; preds = %12, %32
  %21 = phi %class.SkDrawable** [ %33, %32 ], [ %14, %12 ]
  %22 = bitcast %class.SkDrawable** %21 to %class.SkRefCntBase**
  %23 = load %class.SkRefCntBase*, %class.SkRefCntBase** %22, align 8
  %24 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %32

27:                                               ; preds = %20
  %28 = bitcast %class.SkRefCntBase* %23 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  tail call void %31(%class.SkRefCntBase* %23) #13
  br label %32

32:                                               ; preds = %27, %20
  %33 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %21, i64 1
  %34 = icmp ult %class.SkDrawable** %33, %18
  br i1 %34, label %20, label %35

35:                                               ; preds = %32
  %36 = load %class.SkDrawable**, %class.SkDrawable*** %13, align 8
  br label %37

37:                                               ; preds = %35, %12
  %38 = phi %class.SkDrawable** [ %36, %35 ], [ %14, %12 ]
  %39 = bitcast %class.SkDrawable** %38 to i8*
  %40 = icmp eq %class.SkDrawable** %38, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkDrawableList* %10 to i8*
  br label %45

43:                                               ; preds = %37
  tail call void @_Z7sk_freePv(i8* nonnull %39) #13
  %44 = bitcast %class.SkDrawableList* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #13
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i8* [ %42, %41 ], [ %44, %43 ]
  %47 = phi i8* [ %39, %41 ], [ null, %43 ]
  tail call void @_Z7sk_freePv(i8* %47) #13
  tail call void @_ZdlPv(i8* %46) #14
  br label %48

48:                                               ; preds = %4, %45
  %49 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 1
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  store %class.SkRecord* %1, %class.SkRecord** %50, align 8
  %51 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast <2 x i64>* %5 to %struct.SkIRect*
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %55 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %56 = load float, float* %55, align 4
  %57 = tail call float @llvm.floor.f32(float %56) #13
  %58 = fcmp olt float %57, 0x41DFFFFFE0000000
  %59 = select i1 %58, float %57, float 0x41DFFFFFE0000000
  %60 = fcmp ogt float %59, 0xC1DFFFFFE0000000
  %61 = select i1 %60, float %59, float 0xC1DFFFFFE0000000
  %62 = fptosi float %61 to i32
  %63 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %64 = load float, float* %63, align 4
  %65 = tail call float @llvm.floor.f32(float %64) #13
  %66 = fcmp olt float %65, 0x41DFFFFFE0000000
  %67 = select i1 %66, float %65, float 0x41DFFFFFE0000000
  %68 = fcmp ogt float %67, 0xC1DFFFFFE0000000
  %69 = select i1 %68, float %67, float 0xC1DFFFFFE0000000
  %70 = fptosi float %69 to i32
  %71 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %72 = load float, float* %71, align 4
  %73 = tail call float @llvm.ceil.f32(float %72) #13
  %74 = fcmp olt float %73, 0x41DFFFFFE0000000
  %75 = select i1 %74, float %73, float 0x41DFFFFFE0000000
  %76 = fcmp ogt float %75, 0xC1DFFFFFE0000000
  %77 = select i1 %76, float %75, float 0xC1DFFFFFE0000000
  %78 = fptosi float %77 to i32
  %79 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %80 = load float, float* %79, align 4
  %81 = tail call float @llvm.ceil.f32(float %80) #13
  %82 = fcmp olt float %81, 0x41DFFFFFE0000000
  %83 = select i1 %82, float %81, float 0x41DFFFFFE0000000
  %84 = fcmp ogt float %83, 0xC1DFFFFFE0000000
  %85 = select i1 %84, float %83, float 0xC1DFFFFFE0000000
  %86 = fptosi float %85 to i32
  %87 = zext i32 %70 to i64
  %88 = shl nuw i64 %87, 32
  %89 = zext i32 %62 to i64
  %90 = or i64 %88, %89
  %91 = zext i32 %86 to i64
  %92 = shl nuw i64 %91, 32
  %93 = zext i32 %78 to i64
  %94 = or i64 %92, %93
  %95 = getelementptr inbounds <2 x i64>, <2 x i64>* %5, i64 0, i64 0
  store i64 %90, i64* %95, align 16
  store i64 %94, i64* %54, align 8
  %96 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %53, %struct.SkIRect* nonnull dereferenceable(16) %53, %struct.SkIRect* nonnull dereferenceable(16) @_ZZL19safe_picture_boundsRK6SkRectE11kSafeBounds) #13
  br i1 %96, label %97, label %99

97:                                               ; preds = %48
  %98 = load <2 x i64>, <2 x i64>* %5, align 16
  br label %100

99:                                               ; preds = %48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %52, i8 0, i64 16, i1 false) #13
  br label %100

100:                                              ; preds = %97, %99
  %101 = phi <2 x i64> [ %98, %97 ], [ zeroinitializer, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  store <2 x i64> %101, <2 x i64>* %7, align 16
  %102 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN8SkCanvas19resetForNextPictureERK7SkIRect(%class.SkCanvas* %102, %struct.SkIRect* nonnull dereferenceable(16) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  %103 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  store %class.SkMiniRecorder* %3, %class.SkMiniRecorder** %103, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12forgetRecordEv(%class.SkRecorder* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %class.SkDrawableList*, %class.SkDrawableList** %2, align 8
  store %class.SkDrawableList* null, %class.SkDrawableList** %2, align 8
  %4 = icmp eq %class.SkDrawableList* %3, null
  br i1 %4, label %41, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %3, i64 0, i32 0, i32 0
  %7 = load %class.SkDrawable**, %class.SkDrawable*** %6, align 8
  %8 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %3, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %7, i64 %10
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %30

13:                                               ; preds = %5, %25
  %14 = phi %class.SkDrawable** [ %26, %25 ], [ %7, %5 ]
  %15 = bitcast %class.SkDrawable** %14 to %class.SkRefCntBase**
  %16 = load %class.SkRefCntBase*, %class.SkRefCntBase** %15, align 8
  %17 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = bitcast %class.SkRefCntBase* %16 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* %16) #13
  br label %25

25:                                               ; preds = %20, %13
  %26 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %14, i64 1
  %27 = icmp ult %class.SkDrawable** %26, %11
  br i1 %27, label %13, label %28

28:                                               ; preds = %25
  %29 = load %class.SkDrawable**, %class.SkDrawable*** %6, align 8
  br label %30

30:                                               ; preds = %28, %5
  %31 = phi %class.SkDrawable** [ %29, %28 ], [ %7, %5 ]
  %32 = bitcast %class.SkDrawable** %31 to i8*
  %33 = icmp eq %class.SkDrawable** %31, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkDrawableList* %3 to i8*
  br label %38

36:                                               ; preds = %30
  tail call void @_Z7sk_freePv(i8* nonnull %32) #13
  %37 = bitcast %class.SkDrawableList* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 16, i1 false) #13
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i8* [ %35, %34 ], [ %37, %36 ]
  %40 = phi i8* [ %32, %34 ], [ null, %36 ]
  tail call void @_Z7sk_freePv(i8* %40) #13
  tail call void @_ZdlPv(i8* %39) #14
  br label %41

41:                                               ; preds = %1, %38
  %42 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 1
  %43 = bitcast i64* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN10SkRecorder4copyIcEEPT_PKS1_m(%class.SkRecorder* nocapture readonly, i8* readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %7 = load %class.SkRecord*, %class.SkRecord** %6, align 8
  %8 = add i64 %2, 1
  %9 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %8, %10
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4
  %13 = icmp ult i64 %2, 4294967296
  br i1 %13, label %15, label %14

14:                                               ; preds = %5
  tail call void @abort() #15
  unreachable

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %2, 4294967295
  %20 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4, i32 2
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %18
  %24 = icmp ugt i64 %19, %23
  br i1 %24, label %25, label %28

25:                                               ; preds = %15
  %26 = trunc i64 %2 to i32
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %12, i32 %26, i32 1) #13
  %27 = load i64, i64* %17, align 8
  br label %28

28:                                               ; preds = %15, %25
  %29 = phi i64 [ %27, %25 ], [ %18, %15 ]
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %19
  store i8* %31, i8** %16, align 8
  %32 = inttoptr i64 %29 to %struct.RawBytes*
  %33 = getelementptr inbounds %struct.RawBytes, %struct.RawBytes* %32, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* nonnull align 1 %1, i64 %2, i1 false)
  br label %34

34:                                               ; preds = %3, %28
  %35 = phi i8* [ %33, %28 ], [ null, %3 ]
  ret i8* %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN10SkRecorder4copyIcEEPT_PKS1_(%class.SkRecorder* nocapture readonly, i8* readonly) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @strlen(i8* %1) #16
  %4 = add i64 %3, 1
  %5 = icmp eq i8* %1, null
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %8 = load %class.SkRecord*, %class.SkRecord** %7, align 8
  %9 = add i64 %3, 2
  %10 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %8, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %9, %11
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %8, i64 0, i32 4
  %14 = icmp ult i64 %4, 4294967296
  br i1 %14, label %16, label %15

15:                                               ; preds = %6
  tail call void @abort() #15
  unreachable

16:                                               ; preds = %6
  %17 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %8, i64 0, i32 4, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %4, 4294967295
  %21 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %8, i64 0, i32 4, i32 2
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %19
  %25 = icmp ugt i64 %20, %24
  br i1 %25, label %26, label %29

26:                                               ; preds = %16
  %27 = trunc i64 %4 to i32
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 %27, i32 1) #13
  %28 = load i64, i64* %18, align 8
  br label %29

29:                                               ; preds = %26, %16
  %30 = phi i64 [ %28, %26 ], [ %19, %16 ]
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %20
  store i8* %32, i8** %17, align 8
  %33 = inttoptr i64 %30 to %struct.RawBytes*
  %34 = getelementptr inbounds %struct.RawBytes, %struct.RawBytes* %33, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* nonnull align 1 %1, i64 %4, i1 false) #13
  br label %35

35:                                               ; preds = %2, %29
  %36 = phi i8* [ %34, %29 ], [ null, %2 ]
  ret i8* %36
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder17flushMiniRecorderEv(%class.SkRecorder*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %3 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %2, align 8
  %4 = icmp eq %class.SkMiniRecorder* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %2, align 8
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %3, %class.SkCanvas* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder*, %class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder11onDrawPaintERK7SkPaint(%class.SkRecorder*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %4 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %3, align 8
  %5 = icmp eq %class.SkMiniRecorder* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %3, align 8
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %4, %class.SkCanvas* %7) #13
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %10 = load %class.SkRecord*, %class.SkRecord** %9, align 8
  %11 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %10) #13
  %17 = load i32, i32* %11, align 4
  br label %18

18:                                               ; preds = %16, %8
  %19 = phi i32 [ %17, %16 ], [ %12, %8 ]
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %11, align 4
  %21 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %21, align 8
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 80
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 0, %29
  %31 = and i64 %30, 7
  %32 = or i64 %31, 72
  %33 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4, i32 2
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %29
  %37 = icmp ugt i64 %32, %36
  br i1 %37, label %38, label %43

38:                                               ; preds = %18
  %39 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %39, i32 72, i32 8) #13
  %40 = load i64, i64* %28, align 8
  %41 = sub i64 0, %40
  %42 = and i64 %41, 7
  br label %43

43:                                               ; preds = %18, %38
  %44 = phi i64 [ %40, %38 ], [ %29, %18 ]
  %45 = phi i64 [ %42, %38 ], [ %31, %18 ]
  %46 = inttoptr i64 %44 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  %48 = getelementptr inbounds i8, i8* %47, i64 72
  store i8* %48, i8** %27, align 8
  %49 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %22, i64 %23, i32 0
  store i32 26, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %22, i64 %23, i32 1
  store i8* %47, i8** %50, align 8
  %51 = bitcast i8* %47 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %51, %class.SkPaint* dereferenceable(72) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12onDrawBehindERK7SkPaint(%class.SkRecorder*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %4 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %3, align 8
  %5 = icmp eq %class.SkMiniRecorder* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %3, align 8
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %4, %class.SkCanvas* %7) #13
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %10 = load %class.SkRecord*, %class.SkRecord** %9, align 8
  %11 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %10) #13
  %17 = load i32, i32* %11, align 4
  br label %18

18:                                               ; preds = %16, %8
  %19 = phi i32 [ %17, %16 ], [ %12, %8 ]
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %11, align 4
  %21 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %21, align 8
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 80
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 0, %29
  %31 = and i64 %30, 7
  %32 = or i64 %31, 72
  %33 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4, i32 2
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %29
  %37 = icmp ugt i64 %32, %36
  br i1 %37, label %38, label %43

38:                                               ; preds = %18
  %39 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %39, i32 72, i32 8) #13
  %40 = load i64, i64* %28, align 8
  %41 = sub i64 0, %40
  %42 = and i64 %41, 7
  br label %43

43:                                               ; preds = %18, %38
  %44 = phi i64 [ %40, %38 ], [ %29, %18 ]
  %45 = phi i64 [ %42, %38 ], [ %31, %18 ]
  %46 = inttoptr i64 %44 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  %48 = getelementptr inbounds i8, i8* %47, i64 72
  store i8* %48, i8** %27, align 8
  %49 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %22, i64 %23, i32 0
  store i32 25, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %22, i64 %23, i32 1
  store i8* %47, i8** %50, align 8
  %51 = bitcast i8* %47 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %51, %class.SkPaint* dereferenceable(72) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12onDrawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint(%class.SkRecorder*, i32, i64, %struct.SkPoint* readonly, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = bitcast %struct.SkPoint* %3 to i8*
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.SkPoint*, align 8
  store i32 %1, i32* %7, align 4
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  %11 = trunc i64 %2 to i32
  store i32 %11, i32* %8, align 4
  %12 = bitcast %struct.SkPoint** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = icmp eq %struct.SkPoint* %3, null
  br i1 %13, label %216, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %16 = load %class.SkRecord*, %class.SkRecord** %15, align 8
  %17 = shl i64 %2, 3
  %18 = or i64 %17, 4
  %19 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 4
  %23 = icmp ult i64 %2, 4294967296
  br i1 %23, label %25, label %24

24:                                               ; preds = %14
  tail call void @abort() #15
  unreachable

25:                                               ; preds = %14
  %26 = icmp ult i32 %11, 536870912
  br i1 %26, label %28, label %27

27:                                               ; preds = %25
  tail call void @abort() #15
  unreachable

28:                                               ; preds = %25
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 4, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 0, %31
  %33 = and i64 %32, 3
  %34 = and i64 %17, 4294967288
  %35 = or i64 %33, %34
  %36 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 4, i32 2
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %38, %31
  %40 = icmp ugt i64 %35, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %28
  %42 = trunc i64 %17 to i32
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %22, i32 %42, i32 4) #13
  %43 = load i64, i64* %30, align 8
  %44 = sub i64 0, %43
  %45 = and i64 %44, 3
  br label %46

46:                                               ; preds = %41, %28
  %47 = phi i64 [ %43, %41 ], [ %31, %28 ]
  %48 = phi i64 [ %45, %41 ], [ %33, %28 ]
  %49 = inttoptr i64 %47 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 %48
  %51 = getelementptr inbounds i8, i8* %50, i64 %34
  store i8* %51, i8** %29, align 8
  %52 = bitcast i8* %50 to %struct.SkPoint*
  %53 = icmp eq i64 %2, 0
  br i1 %53, label %216, label %54

54:                                               ; preds = %46
  %55 = icmp ult i64 %2, 4
  br i1 %55, label %144, label %56

56:                                               ; preds = %54
  %57 = shl i64 %2, 3
  %58 = or i64 %48, %57
  %59 = getelementptr i8, i8* %49, i64 %58
  %60 = getelementptr %struct.SkPoint, %struct.SkPoint* %3, i64 %2
  %61 = bitcast %struct.SkPoint* %60 to i8*
  %62 = icmp ult i8* %50, %61
  %63 = icmp ugt i8* %59, %6
  %64 = and i1 %62, %63
  br i1 %64, label %144, label %65

65:                                               ; preds = %56
  %66 = and i64 %2, -4
  %67 = add i64 %66, -4
  %68 = lshr exact i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = and i64 %69, 3
  %71 = icmp ult i64 %67, 12
  br i1 %71, label %123, label %72

72:                                               ; preds = %65
  %73 = sub nsw i64 %69, %70
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i64 [ 0, %72 ], [ %120, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %121, %74 ]
  %77 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %75
  %78 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %75
  %79 = bitcast %struct.SkPoint* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 4, !alias.scope !2
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 2
  %82 = bitcast %struct.SkPoint* %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 4, !alias.scope !2
  %84 = bitcast %struct.SkPoint* %77 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %84, align 4, !alias.scope !5, !noalias !2
  %85 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %77, i64 2
  %86 = bitcast %struct.SkPoint* %85 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %86, align 4, !alias.scope !5, !noalias !2
  %87 = or i64 %75, 4
  %88 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %87
  %89 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %87
  %90 = bitcast %struct.SkPoint* %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 4, !alias.scope !2
  %92 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %89, i64 2
  %93 = bitcast %struct.SkPoint* %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 4, !alias.scope !2
  %95 = bitcast %struct.SkPoint* %88 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %95, align 4, !alias.scope !5, !noalias !2
  %96 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %88, i64 2
  %97 = bitcast %struct.SkPoint* %96 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 4, !alias.scope !5, !noalias !2
  %98 = or i64 %75, 8
  %99 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %98
  %100 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %98
  %101 = bitcast %struct.SkPoint* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 4, !alias.scope !2
  %103 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %100, i64 2
  %104 = bitcast %struct.SkPoint* %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 4, !alias.scope !2
  %106 = bitcast %struct.SkPoint* %99 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %106, align 4, !alias.scope !5, !noalias !2
  %107 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %99, i64 2
  %108 = bitcast %struct.SkPoint* %107 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %108, align 4, !alias.scope !5, !noalias !2
  %109 = or i64 %75, 12
  %110 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %109
  %111 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %109
  %112 = bitcast %struct.SkPoint* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 4, !alias.scope !2
  %114 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %111, i64 2
  %115 = bitcast %struct.SkPoint* %114 to <2 x i64>*
  %116 = load <2 x i64>, <2 x i64>* %115, align 4, !alias.scope !2
  %117 = bitcast %struct.SkPoint* %110 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %117, align 4, !alias.scope !5, !noalias !2
  %118 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %110, i64 2
  %119 = bitcast %struct.SkPoint* %118 to <2 x i64>*
  store <2 x i64> %116, <2 x i64>* %119, align 4, !alias.scope !5, !noalias !2
  %120 = add i64 %75, 16
  %121 = add i64 %76, -4
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %74, !llvm.loop !7

123:                                              ; preds = %74, %65
  %124 = phi i64 [ 0, %65 ], [ %120, %74 ]
  %125 = icmp eq i64 %70, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %123, %126
  %127 = phi i64 [ %139, %126 ], [ %124, %123 ]
  %128 = phi i64 [ %140, %126 ], [ %70, %123 ]
  %129 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %127
  %130 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %127
  %131 = bitcast %struct.SkPoint* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 4, !alias.scope !2
  %133 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %130, i64 2
  %134 = bitcast %struct.SkPoint* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 4, !alias.scope !2
  %136 = bitcast %struct.SkPoint* %129 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %136, align 4, !alias.scope !5, !noalias !2
  %137 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 2
  %138 = bitcast %struct.SkPoint* %137 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %138, align 4, !alias.scope !5, !noalias !2
  %139 = add i64 %127, 4
  %140 = add i64 %128, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %126, !llvm.loop !9

142:                                              ; preds = %126, %123
  %143 = icmp eq i64 %66, %2
  br i1 %143, label %216, label %144

144:                                              ; preds = %142, %56, %54
  %145 = phi i64 [ 0, %56 ], [ 0, %54 ], [ %66, %142 ]
  %146 = sub i64 %2, %145
  %147 = xor i64 %145, -1
  %148 = add i64 %147, %2
  %149 = and i64 %146, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %162, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %159, %151 ], [ %145, %144 ]
  %153 = phi i64 [ %160, %151 ], [ %149, %144 ]
  %154 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %152
  %155 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %152
  %156 = bitcast %struct.SkPoint* %155 to i64*
  %157 = bitcast %struct.SkPoint* %154 to i64*
  %158 = load i64, i64* %156, align 4
  store i64 %158, i64* %157, align 4
  %159 = add nuw i64 %152, 1
  %160 = add i64 %153, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %151, !llvm.loop !11

162:                                              ; preds = %151, %144
  %163 = phi i64 [ %145, %144 ], [ %159, %151 ]
  %164 = icmp ult i64 %148, 7
  br i1 %164, label %216, label %165

165:                                              ; preds = %162, %165
  %166 = phi i64 [ %214, %165 ], [ %163, %162 ]
  %167 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %166
  %168 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %166
  %169 = bitcast %struct.SkPoint* %168 to i64*
  %170 = bitcast %struct.SkPoint* %167 to i64*
  %171 = load i64, i64* %169, align 4
  store i64 %171, i64* %170, align 4
  %172 = add nuw i64 %166, 1
  %173 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %172
  %174 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %172
  %175 = bitcast %struct.SkPoint* %174 to i64*
  %176 = bitcast %struct.SkPoint* %173 to i64*
  %177 = load i64, i64* %175, align 4
  store i64 %177, i64* %176, align 4
  %178 = add nuw i64 %166, 2
  %179 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %178
  %180 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %178
  %181 = bitcast %struct.SkPoint* %180 to i64*
  %182 = bitcast %struct.SkPoint* %179 to i64*
  %183 = load i64, i64* %181, align 4
  store i64 %183, i64* %182, align 4
  %184 = add nuw i64 %166, 3
  %185 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %184
  %186 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %184
  %187 = bitcast %struct.SkPoint* %186 to i64*
  %188 = bitcast %struct.SkPoint* %185 to i64*
  %189 = load i64, i64* %187, align 4
  store i64 %189, i64* %188, align 4
  %190 = add nuw i64 %166, 4
  %191 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %190
  %192 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %190
  %193 = bitcast %struct.SkPoint* %192 to i64*
  %194 = bitcast %struct.SkPoint* %191 to i64*
  %195 = load i64, i64* %193, align 4
  store i64 %195, i64* %194, align 4
  %196 = add nuw i64 %166, 5
  %197 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %196
  %198 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %196
  %199 = bitcast %struct.SkPoint* %198 to i64*
  %200 = bitcast %struct.SkPoint* %197 to i64*
  %201 = load i64, i64* %199, align 4
  store i64 %201, i64* %200, align 4
  %202 = add nuw i64 %166, 6
  %203 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %202
  %204 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %202
  %205 = bitcast %struct.SkPoint* %204 to i64*
  %206 = bitcast %struct.SkPoint* %203 to i64*
  %207 = load i64, i64* %205, align 4
  store i64 %207, i64* %206, align 4
  %208 = add nuw i64 %166, 7
  %209 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %208
  %210 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %208
  %211 = bitcast %struct.SkPoint* %210 to i64*
  %212 = bitcast %struct.SkPoint* %209 to i64*
  %213 = load i64, i64* %211, align 4
  store i64 %213, i64* %212, align 4
  %214 = add nuw i64 %166, 8
  %215 = icmp eq i64 %214, %2
  br i1 %215, label %216, label %165, !llvm.loop !12

216:                                              ; preds = %162, %165, %142, %5, %46
  %217 = phi %struct.SkPoint* [ null, %5 ], [ %52, %46 ], [ %52, %142 ], [ %52, %165 ], [ %52, %162 ]
  store %struct.SkPoint* %217, %struct.SkPoint** %9, align 8
  call void @_ZN10SkRecorder6appendIN9SkRecords10DrawPointsEJRK7SkPaintRN8SkCanvas9PointModeEjP7SkPointEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %4, i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8, %struct.SkPoint** nonnull dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords10DrawPointsEJRK7SkPaintRN8SkCanvas9PointModeEjP7SkPointEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), i32* dereferenceable(4), i32* dereferenceable(4), %struct.SkPoint** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %7 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %6, align 8
  %8 = icmp eq %class.SkMiniRecorder* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %6, align 8
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %7, %class.SkCanvas* %10) #13
  br label %11

11:                                               ; preds = %5, %9
  %12 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %13 = load %class.SkRecord*, %class.SkRecord** %12, align 8
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %11
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %13) #13
  %20 = load i32, i32* %14, align 4
  br label %21

21:                                               ; preds = %19, %11
  %22 = phi i32 [ %20, %19 ], [ %15, %11 ]
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %14, align 4
  %24 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %24, align 8
  %26 = sext i32 %22 to i64
  %27 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 5
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 96
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 4, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 0, %32
  %34 = and i64 %33, 7
  %35 = or i64 %34, 88
  %36 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 4, i32 2
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %38, %32
  %40 = icmp ugt i64 %35, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %21
  %42 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %42, i32 88, i32 8) #13
  %43 = load i64, i64* %31, align 8
  %44 = sub i64 0, %43
  %45 = and i64 %44, 7
  br label %46

46:                                               ; preds = %21, %41
  %47 = phi i64 [ %43, %41 ], [ %32, %21 ]
  %48 = phi i64 [ %45, %41 ], [ %34, %21 ]
  %49 = inttoptr i64 %47 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 %48
  %51 = getelementptr inbounds i8, i8* %50, i64 88
  store i8* %51, i8** %30, align 8
  %52 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %25, i64 %26, i32 0
  store i32 30, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %25, i64 %26, i32 1
  store i8* %50, i8** %53, align 8
  %54 = bitcast i8* %50 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %54, %class.SkPaint* dereferenceable(72) %1) #13
  %55 = getelementptr inbounds i8, i8* %50, i64 72
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %2, align 4
  store i32 %57, i32* %56, align 8
  %58 = getelementptr inbounds i8, i8* %50, i64 76
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %3, align 4
  store i32 %60, i32* %59, align 4
  %61 = getelementptr inbounds i8, i8* %50, i64 80
  %62 = bitcast %struct.SkPoint** %4 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8* %61 to i64*
  store i64 %63, i64* %64, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder10onDrawRectERK6SkRectRK7SkPaint(%class.SkRecorder*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN14SkMiniRecorder8drawRectERK6SkRectRK7SkPaint(%class.SkMiniRecorder* nonnull %5, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2) #13
  br i1 %8, label %10, label %9

9:                                                ; preds = %3, %7
  tail call void @_ZN10SkRecorder6appendIN9SkRecords8DrawRectEJRK7SkPaintRK6SkRectEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %2, %struct.SkRect* dereferenceable(16) %1)
  br label %10

10:                                               ; preds = %7, %9
  ret void
}

declare zeroext i1 @_ZN14SkMiniRecorder8drawRectERK6SkRectRK7SkPaint(%class.SkMiniRecorder*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords8DrawRectEJRK7SkPaintRK6SkRectEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 96
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 88
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 88, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 88
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 32, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %52, %class.SkPaint* dereferenceable(72) %1) #13
  %53 = getelementptr inbounds i8, i8* %48, i64 72
  %54 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 4 %54, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12onDrawRegionERK8SkRegionRK7SkPaint(%class.SkRecorder*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  tail call void @_ZN10SkRecorder6appendIN9SkRecords10DrawRegionEJRK7SkPaintRK8SkRegionEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %2, %class.SkRegion* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords10DrawRegionEJRK7SkPaintRK8SkRegionEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 104
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 96
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 96, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 96
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 33, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %52, %class.SkPaint* dereferenceable(72) %1) #13
  %53 = getelementptr inbounds i8, i8* %48, i64 72
  %54 = bitcast i8* %53 to %class.SkRegion*
  tail call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %54, %class.SkRegion* dereferenceable(24) %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder10onDrawOvalERK6SkRectRK7SkPaint(%class.SkRecorder*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  tail call void @_ZN10SkRecorder6appendIN9SkRecords8DrawOvalEJRK7SkPaintRK6SkRectEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %2, %struct.SkRect* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords8DrawOvalEJRK7SkPaintRK6SkRectEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 96
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 88
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 88, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 88
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 24, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %52, %class.SkPaint* dereferenceable(72) %1) #13
  %53 = getelementptr inbounds i8, i8* %48, i64 72
  %54 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 4 %54, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder9onDrawArcERK6SkRectffbRK7SkPaint(%class.SkRecorder*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca i8, align 1
  store float %2, float* %7, align 4
  store float %3, float* %8, align 4
  %10 = zext i1 %4 to i8
  store i8 %10, i8* %9, align 1
  call void @_ZN10SkRecorder6appendIN9SkRecords7DrawArcEJRK7SkPaintRK6SkRectRfS9_RbEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %5, %struct.SkRect* dereferenceable(16) %1, float* nonnull dereferenceable(4) %7, float* nonnull dereferenceable(4) %8, i8* nonnull dereferenceable(1) %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords7DrawArcEJRK7SkPaintRK6SkRectRfS9_RbEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %struct.SkRect* dereferenceable(16), float* dereferenceable(4), float* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %8 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %7, align 8
  %9 = icmp eq %class.SkMiniRecorder* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %7, align 8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %8, %class.SkCanvas* %11) #13
  br label %12

12:                                               ; preds = %6, %10
  %13 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %14 = load %class.SkRecord*, %class.SkRecord** %13, align 8
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %12
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %14) #13
  %21 = load i32, i32* %15, align 4
  br label %22

22:                                               ; preds = %20, %12
  %23 = phi i32 [ %21, %20 ], [ %16, %12 ]
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %15, align 4
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %25, align 8
  %27 = sext i32 %23 to i64
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 112
  store i64 %30, i64* %28, align 8
  %31 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 0, %33
  %35 = and i64 %34, 7
  %36 = or i64 %35, 104
  %37 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 2
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %33
  %41 = icmp ugt i64 %36, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %22
  %43 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %43, i32 104, i32 8) #13
  %44 = load i64, i64* %32, align 8
  %45 = sub i64 0, %44
  %46 = and i64 %45, 7
  br label %47

47:                                               ; preds = %22, %42
  %48 = phi i64 [ %44, %42 ], [ %33, %22 ]
  %49 = phi i64 [ %46, %42 ], [ %35, %22 ]
  %50 = inttoptr i64 %48 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = getelementptr inbounds i8, i8* %51, i64 104
  store i8* %52, i8** %31, align 8
  %53 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %26, i64 %27, i32 0
  store i32 18, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %26, i64 %27, i32 1
  store i8* %51, i8** %54, align 8
  %55 = bitcast i8* %51 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %55, %class.SkPaint* dereferenceable(72) %1) #13
  %56 = getelementptr inbounds i8, i8* %51, i64 72
  %57 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 4 %57, i64 16, i1 false)
  %58 = getelementptr inbounds i8, i8* %51, i64 88
  %59 = bitcast float* %3 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = bitcast i8* %58 to i32*
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %51, i64 92
  %63 = bitcast float* %4 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = bitcast i8* %62 to i32*
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %51, i64 96
  %67 = bitcast i8* %66 to i32*
  %68 = load i8, i8* %5, align 1, !range !13
  %69 = zext i8 %68 to i32
  store i32 %69, i32* %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder11onDrawRRectERK7SkRRectRK7SkPaint(%class.SkRecorder*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  tail call void @_ZN10SkRecorder6appendIN9SkRecords9DrawRRectEJRK7SkPaintRK7SkRRectEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %2, %class.SkRRect* dereferenceable(52) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords9DrawRRectEJRK7SkPaintRK7SkRRectEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %class.SkRRect* dereferenceable(52)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 136
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 128
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 128, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 128
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 31, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %52, %class.SkPaint* dereferenceable(72) %1) #13
  %53 = getelementptr inbounds i8, i8* %48, i64 72
  %54 = bitcast %class.SkRRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 4 %54, i64 52, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12onDrawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkRecorder*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  tail call void @_ZN10SkRecorder6appendIN9SkRecords10DrawDRRectEJRK7SkPaintRK7SkRRectS8_EEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %3, %class.SkRRect* dereferenceable(52) %1, %class.SkRRect* dereferenceable(52) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords10DrawDRRectEJRK7SkPaintRK7SkRRectS8_EEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %6 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %5, align 8
  %7 = icmp eq %class.SkMiniRecorder* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %5, align 8
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %6, %class.SkCanvas* %9) #13
  br label %10

10:                                               ; preds = %4, %8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %12 = load %class.SkRecord*, %class.SkRecord** %11, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %12) #13
  %19 = load i32, i32* %13, align 4
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi i32 [ %19, %18 ], [ %14, %10 ]
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %13, align 4
  %23 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %23, align 8
  %25 = sext i32 %21 to i64
  %26 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 184
  store i64 %28, i64* %26, align 8
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 0, %31
  %33 = and i64 %32, 7
  %34 = or i64 %33, 176
  %35 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 2
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %31
  %39 = icmp ugt i64 %34, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %20
  %41 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %41, i32 176, i32 8) #13
  %42 = load i64, i64* %30, align 8
  %43 = sub i64 0, %42
  %44 = and i64 %43, 7
  br label %45

45:                                               ; preds = %20, %40
  %46 = phi i64 [ %42, %40 ], [ %31, %20 ]
  %47 = phi i64 [ %44, %40 ], [ %33, %20 ]
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = getelementptr inbounds i8, i8* %49, i64 176
  store i8* %50, i8** %29, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 0
  store i32 23, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 1
  store i8* %49, i8** %52, align 8
  %53 = bitcast i8* %49 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %53, %class.SkPaint* dereferenceable(72) %1) #13
  %54 = getelementptr inbounds i8, i8* %49, i64 72
  %55 = bitcast %class.SkRRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 4 %55, i64 52, i1 false)
  %56 = getelementptr inbounds i8, i8* %49, i64 124
  %57 = bitcast %class.SkRRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 52, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder14onDrawDrawableEP10SkDrawablePK8SkMatrix(%class.SkRecorder*, %class.SkDrawable*, %class.SkMatrix* readonly) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix*, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %class.SkDrawableList*, %class.SkDrawableList** %9, align 8
  %11 = icmp eq %class.SkDrawableList* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = tail call i8* @_Znwm(i64 16) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #13
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr.51"* %8 to i64*
  store i64 %14, i64* %15, align 8
  %16 = bitcast i8* %13 to %class.SkDrawableList*
  br label %17

17:                                               ; preds = %3, %12
  %18 = phi %class.SkDrawableList* [ %10, %3 ], [ %16, %12 ]
  %19 = getelementptr inbounds %class.SkDrawable, %class.SkDrawable* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  %21 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %18, i64 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, 1
  %24 = icmp sgt i32 %23, -1
  br i1 %24, label %26, label %25

25:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #15
  unreachable

26:                                               ; preds = %17
  %27 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %18, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %28, %23
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %18, i64 0, i32 0, i32 0
  %32 = load %class.SkDrawable**, %class.SkDrawable*** %31, align 8
  br label %46

33:                                               ; preds = %26
  %34 = add i32 %22, 5
  %35 = lshr i32 %34, 2
  %36 = add nuw i32 %35, %34
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

39:                                               ; preds = %33
  store i32 %36, i32* %27, align 8
  %40 = bitcast %class.SkDrawableList* %18 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = sext i32 %36 to i64
  %43 = shl nsw i64 %42, 3
  %44 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %41, i64 %43) #13
  store i8* %44, i8** %40, align 8
  %45 = bitcast i8* %44 to %class.SkDrawable**
  br label %46

46:                                               ; preds = %30, %39
  %47 = phi %class.SkDrawable** [ %32, %30 ], [ %45, %39 ]
  store i32 %23, i32* %21, align 4
  %48 = sext i32 %22 to i64
  %49 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %47, i64 %48
  store %class.SkDrawable* %1, %class.SkDrawable** %49, align 8
  %50 = bitcast %class.SkMatrix** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  %51 = icmp eq %class.SkMatrix* %2, null
  br i1 %51, label %82, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %54 = load %class.SkRecord*, %class.SkRecord** %53, align 8
  %55 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %54, i64 0, i32 5
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 44
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %54, i64 0, i32 4, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 0, %60
  %62 = and i64 %61, 3
  %63 = or i64 %62, 40
  %64 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %54, i64 0, i32 4, i32 2
  %65 = bitcast i8** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %60
  %68 = icmp ugt i64 %63, %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %52
  %70 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %54, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %70, i32 40, i32 4) #13
  %71 = load i64, i64* %59, align 8
  %72 = sub i64 0, %71
  %73 = and i64 %72, 3
  br label %74

74:                                               ; preds = %69, %52
  %75 = phi i64 [ %71, %69 ], [ %60, %52 ]
  %76 = phi i64 [ %73, %69 ], [ %62, %52 ]
  %77 = inttoptr i64 %75 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %76
  %79 = getelementptr inbounds i8, i8* %78, i64 40
  store i8* %79, i8** %58, align 8
  %80 = bitcast i8* %78 to %class.SkMatrix*
  %81 = bitcast %class.SkMatrix* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* nonnull align 4 %81, i64 40, i1 false) #13
  br label %82

82:                                               ; preds = %46, %74
  %83 = phi %class.SkMatrix* [ %80, %74 ], [ null, %46 ]
  store %class.SkMatrix* %83, %class.SkMatrix** %4, align 8
  %84 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #13
  %85 = tail call { <2 x float>, <2 x float> } @_ZN10SkDrawable9getBoundsEv(%class.SkDrawable* %1) #13
  %86 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %87 = extractvalue { <2 x float>, <2 x float> } %85, 0
  store <2 x float> %87, <2 x float>* %86, align 8
  %88 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %89 = extractvalue { <2 x float>, <2 x float> } %85, 1
  store <2 x float> %89, <2 x float>* %88, align 8
  %90 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #13
  %91 = load %class.SkDrawableList*, %class.SkDrawableList** %9, align 8
  %92 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %91, i64 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add nsw i32 %93, -1
  store i32 %94, i32* %7, align 4
  call void @_ZN10SkRecorder6appendIN9SkRecords12DrawDrawableEJP8SkMatrix6SkRectiEEEvDpOT0_(%class.SkRecorder* %0, %class.SkMatrix** nonnull dereferenceable(8) %4, %struct.SkRect* nonnull dereferenceable(16) %6, i32* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords12DrawDrawableEJP8SkMatrix6SkRectiEEEvDpOT0_(%class.SkRecorder*, %class.SkMatrix** dereferenceable(8), %struct.SkRect* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %6 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %5, align 8
  %7 = icmp eq %class.SkMiniRecorder* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %5, align 8
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %6, %class.SkCanvas* %9) #13
  br label %10

10:                                               ; preds = %4, %8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %12 = load %class.SkRecord*, %class.SkRecord** %11, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %12) #13
  %19 = load i32, i32* %13, align 4
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi i32 [ %19, %18 ], [ %14, %10 ]
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %13, align 4
  %23 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %23, align 8
  %25 = sext i32 %21 to i64
  %26 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 40
  store i64 %28, i64* %26, align 8
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 0, %31
  %33 = and i64 %32, 7
  %34 = or i64 %33, 32
  %35 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 2
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %31
  %39 = icmp ugt i64 %34, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %20
  %41 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %41, i32 32, i32 8) #13
  %42 = load i64, i64* %30, align 8
  %43 = sub i64 0, %42
  %44 = and i64 %43, 7
  br label %45

45:                                               ; preds = %20, %40
  %46 = phi i64 [ %42, %40 ], [ %31, %20 ]
  %47 = phi i64 [ %44, %40 ], [ %33, %20 ]
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = getelementptr inbounds i8, i8* %49, i64 32
  store i8* %50, i8** %29, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 0
  store i32 19, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 1
  store i8* %49, i8** %52, align 8
  %53 = bitcast %class.SkMatrix** %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast i8* %49 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %49, i64 8
  %57 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 4 %57, i64 16, i1 false)
  %58 = getelementptr inbounds i8, i8* %49, i64 24
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %3, align 4
  store i32 %60, i32* %59, align 8
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN10SkDrawable9getBoundsEv(%class.SkDrawable*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder10onDrawPathERK6SkPathRK7SkPaint(%class.SkRecorder*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN14SkMiniRecorder8drawPathERK6SkPathRK7SkPaint(%class.SkMiniRecorder* nonnull %5, %class.SkPath* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2) #13
  br i1 %8, label %10, label %9

9:                                                ; preds = %3, %7
  tail call void @_ZN10SkRecorder6appendIN9SkRecords8DrawPathEJRK7SkPaintRK6SkPathEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %2, %class.SkPath* dereferenceable(16) %1)
  br label %10

10:                                               ; preds = %7, %9
  ret void
}

declare zeroext i1 @_ZN14SkMiniRecorder8drawPathERK6SkPathRK7SkPaint(%class.SkMiniRecorder*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords8DrawPathEJRK7SkPaintRK6SkPathEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %class.SkPath* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 96
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 88
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 88, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 88
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 27, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %52, %class.SkPaint* dereferenceable(72) %1) #13
  %53 = getelementptr inbounds i8, i8* %48, i64 72
  %54 = bitcast i8* %53 to %"struct.SkRecords::PreCachedPath"*
  tail call void @_ZN9SkRecords13PreCachedPathC1ERK6SkPath(%"struct.SkRecords::PreCachedPath"* %54, %class.SkPath* dereferenceable(16) %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkRecorder*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #0 align 2 {
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca %class.SkPaint*, align 8
  %10 = alloca %class.sk_sp.70, align 8
  store float %2, float* %7, align 4
  store float %3, float* %8, align 4
  %11 = bitcast %class.SkPaint** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = icmp eq %class.SkPaint* %5, null
  br i1 %12, label %42, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %15 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 80
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 0, %21
  %23 = and i64 %22, 7
  %24 = or i64 %23, 72
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4, i32 2
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %21
  %29 = icmp ugt i64 %24, %28
  br i1 %29, label %30, label %35

30:                                               ; preds = %13
  %31 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %31, i32 72, i32 8) #13
  %32 = load i64, i64* %20, align 8
  %33 = sub i64 0, %32
  %34 = and i64 %33, 7
  br label %35

35:                                               ; preds = %30, %13
  %36 = phi i64 [ %32, %30 ], [ %21, %13 ]
  %37 = phi i64 [ %34, %30 ], [ %23, %13 ]
  %38 = inttoptr i64 %36 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 %37
  %40 = getelementptr inbounds i8, i8* %39, i64 72
  store i8* %40, i8** %19, align 8
  %41 = bitcast i8* %39 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %41, %class.SkPaint* nonnull dereferenceable(72) %5) #13
  br label %42

42:                                               ; preds = %6, %35
  %43 = phi %class.SkPaint* [ %41, %35 ], [ null, %6 ]
  store %class.SkPaint* %43, %class.SkPaint** %9, align 8
  %44 = bitcast %class.sk_sp.70* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  %45 = icmp eq %class.SkImage* %1, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic, !noalias !14
  br label %49

49:                                               ; preds = %42, %46
  %50 = getelementptr inbounds %class.sk_sp.70, %class.sk_sp.70* %10, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %50, align 8, !alias.scope !14
  call void @_ZN10SkRecorder6appendIN9SkRecords9DrawImageEJP7SkPaint5sk_spI7SkImageERfS8_RK17SkSamplingOptionsEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint** nonnull dereferenceable(8) %9, %class.sk_sp.70* nonnull dereferenceable(8) %10, float* nonnull dereferenceable(4) %7, float* nonnull dereferenceable(4) %8, %struct.SkSamplingOptions* dereferenceable(20) %4)
  %51 = load %class.SkImage*, %class.SkImage** %50, align 8
  %52 = icmp eq %class.SkImage* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkImage, %class.SkImage* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkImage* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkImage* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #13
  br label %63

63:                                               ; preds = %49, %53, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords9DrawImageEJP7SkPaint5sk_spI7SkImageERfS8_RK17SkSamplingOptionsEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint** dereferenceable(8), %class.sk_sp.70* dereferenceable(8), float* dereferenceable(4), float* dereferenceable(4), %struct.SkSamplingOptions* dereferenceable(20)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %8 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %7, align 8
  %9 = icmp eq %class.SkMiniRecorder* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %7, align 8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %8, %class.SkCanvas* %11) #13
  br label %12

12:                                               ; preds = %6, %10
  %13 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %14 = load %class.SkRecord*, %class.SkRecord** %13, align 8
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %12
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %14) #13
  %21 = load i32, i32* %15, align 4
  br label %22

22:                                               ; preds = %20, %12
  %23 = phi i32 [ %21, %20 ], [ %16, %12 ]
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %15, align 4
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %25, align 8
  %27 = sext i32 %23 to i64
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 56
  store i64 %30, i64* %28, align 8
  %31 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 0, %33
  %35 = and i64 %34, 7
  %36 = or i64 %35, 48
  %37 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 2
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %33
  %41 = icmp ugt i64 %36, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %22
  %43 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %43, i32 48, i32 8) #13
  %44 = load i64, i64* %32, align 8
  %45 = sub i64 0, %44
  %46 = and i64 %45, 7
  br label %47

47:                                               ; preds = %22, %42
  %48 = phi i64 [ %44, %42 ], [ %33, %22 ]
  %49 = phi i64 [ %46, %42 ], [ %35, %22 ]
  %50 = inttoptr i64 %48 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = getelementptr inbounds i8, i8* %51, i64 48
  store i8* %52, i8** %31, align 8
  %53 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %26, i64 %27, i32 0
  store i32 20, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %26, i64 %27, i32 1
  store i8* %51, i8** %54, align 8
  %55 = bitcast %class.SkPaint** %1 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast i8* %51 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %51, i64 8
  %59 = getelementptr inbounds %class.sk_sp.70, %class.sk_sp.70* %2, i64 0, i32 0
  %60 = bitcast %class.sk_sp.70* %2 to i64*
  %61 = load i64, i64* %60, align 8
  store %class.SkImage* null, %class.SkImage** %59, align 8
  %62 = bitcast i8* %58 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %51, i64 16
  %64 = bitcast float* %3 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = bitcast i8* %63 to i32*
  store i32 %65, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %51, i64 20
  %68 = bitcast float* %4 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = bitcast i8* %67 to i32*
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds i8, i8* %51, i64 24
  %72 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 4 %72, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkRecorder*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #0 align 2 {
  %8 = alloca i32, align 4
  %9 = alloca %class.SkPaint*, align 8
  %10 = alloca %class.sk_sp.70, align 8
  store i32 %6, i32* %8, align 4
  %11 = bitcast %class.SkPaint** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = icmp eq %class.SkPaint* %5, null
  br i1 %12, label %42, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %15 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 80
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 0, %21
  %23 = and i64 %22, 7
  %24 = or i64 %23, 72
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4, i32 2
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %21
  %29 = icmp ugt i64 %24, %28
  br i1 %29, label %30, label %35

30:                                               ; preds = %13
  %31 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %31, i32 72, i32 8) #13
  %32 = load i64, i64* %20, align 8
  %33 = sub i64 0, %32
  %34 = and i64 %33, 7
  br label %35

35:                                               ; preds = %30, %13
  %36 = phi i64 [ %32, %30 ], [ %21, %13 ]
  %37 = phi i64 [ %34, %30 ], [ %23, %13 ]
  %38 = inttoptr i64 %36 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 %37
  %40 = getelementptr inbounds i8, i8* %39, i64 72
  store i8* %40, i8** %19, align 8
  %41 = bitcast i8* %39 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %41, %class.SkPaint* nonnull dereferenceable(72) %5) #13
  br label %42

42:                                               ; preds = %7, %35
  %43 = phi %class.SkPaint* [ %41, %35 ], [ null, %7 ]
  store %class.SkPaint* %43, %class.SkPaint** %9, align 8
  %44 = bitcast %class.sk_sp.70* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  %45 = icmp eq %class.SkImage* %1, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic, !noalias !17
  br label %49

49:                                               ; preds = %42, %46
  %50 = getelementptr inbounds %class.sk_sp.70, %class.sk_sp.70* %10, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %50, align 8, !alias.scope !17
  call void @_ZN10SkRecorder6appendIN9SkRecords13DrawImageRectEJP7SkPaint5sk_spI7SkImageERK6SkRectSA_RK17SkSamplingOptionsRN8SkCanvas17SrcRectConstraintEEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint** nonnull dereferenceable(8) %9, %class.sk_sp.70* nonnull dereferenceable(8) %10, %struct.SkRect* dereferenceable(16) %2, %struct.SkRect* dereferenceable(16) %3, %struct.SkSamplingOptions* dereferenceable(20) %4, i32* nonnull dereferenceable(4) %8)
  %51 = load %class.SkImage*, %class.SkImage** %50, align 8
  %52 = icmp eq %class.SkImage* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkImage, %class.SkImage* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkImage* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkImage* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #13
  br label %63

63:                                               ; preds = %49, %53, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords13DrawImageRectEJP7SkPaint5sk_spI7SkImageERK6SkRectSA_RK17SkSamplingOptionsRN8SkCanvas17SrcRectConstraintEEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint** dereferenceable(8), %class.sk_sp.70* dereferenceable(8), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %9 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %8, align 8
  %10 = icmp eq %class.SkMiniRecorder* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %8, align 8
  %12 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %9, %class.SkCanvas* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %15 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %13
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %15) #13
  %22 = load i32, i32* %16, align 4
  br label %23

23:                                               ; preds = %21, %13
  %24 = phi i32 [ %22, %21 ], [ %17, %13 ]
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %16, align 4
  %26 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %26, align 8
  %28 = sext i32 %24 to i64
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 5
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 80
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4, i32 1
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 0, %34
  %36 = and i64 %35, 7
  %37 = or i64 %36, 72
  %38 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4, i32 2
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %34
  %42 = icmp ugt i64 %37, %41
  br i1 %42, label %43, label %48

43:                                               ; preds = %23
  %44 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %44, i32 72, i32 8) #13
  %45 = load i64, i64* %33, align 8
  %46 = sub i64 0, %45
  %47 = and i64 %46, 7
  br label %48

48:                                               ; preds = %23, %43
  %49 = phi i64 [ %45, %43 ], [ %34, %23 ]
  %50 = phi i64 [ %47, %43 ], [ %36, %23 ]
  %51 = inttoptr i64 %49 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  %53 = getelementptr inbounds i8, i8* %52, i64 72
  store i8* %53, i8** %32, align 8
  %54 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %27, i64 %28, i32 0
  store i32 22, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %27, i64 %28, i32 1
  store i8* %52, i8** %55, align 8
  %56 = bitcast %class.SkPaint** %1 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %52 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %52, i64 8
  %60 = getelementptr inbounds %class.sk_sp.70, %class.sk_sp.70* %2, i64 0, i32 0
  %61 = bitcast %class.sk_sp.70* %2 to i64*
  %62 = load i64, i64* %61, align 8
  store %class.SkImage* null, %class.SkImage** %60, align 8
  %63 = bitcast i8* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds i8, i8* %52, i64 16
  %65 = bitcast %struct.SkRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 4 %65, i64 16, i1 false)
  %66 = getelementptr inbounds i8, i8* %52, i64 32
  %67 = bitcast %struct.SkRect* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 4 %67, i64 16, i1 false)
  %68 = getelementptr inbounds i8, i8* %52, i64 48
  %69 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 4 %69, i64 20, i1 false)
  %70 = getelementptr inbounds i8, i8* %52, i64 68
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %6, align 4
  store i32 %72, i32* %71, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkRecorder*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint*) unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %class.SkPaint*, align 8
  %10 = alloca %class.sk_sp.70, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32*, align 8
  store i32 %4, i32* %7, align 4
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #13
  store i32 -1431655766, i32* %8, align 4
  %16 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, 1
  %23 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, 1
  %26 = mul nsw i32 %25, %22
  br label %27

27:                                               ; preds = %6, %19
  %28 = phi i32 [ %26, %19 ], [ 0, %6 ]
  store i32 %28, i32* %8, align 4
  %29 = bitcast %class.SkPaint** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = icmp eq %class.SkPaint* %5, null
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %33 = load %class.SkRecord*, %class.SkRecord** %32, align 8
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %33, i64 0, i32 5
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 80
  store i64 %36, i64* %34, align 8
  %37 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %33, i64 0, i32 4, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 0, %39
  %41 = and i64 %40, 7
  %42 = or i64 %41, 72
  %43 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %33, i64 0, i32 4, i32 2
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %39
  %47 = icmp ugt i64 %42, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %31
  %49 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %33, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %49, i32 72, i32 8) #13
  %50 = load i64, i64* %38, align 8
  %51 = sub i64 0, %50
  %52 = and i64 %51, 7
  br label %53

53:                                               ; preds = %48, %31
  %54 = phi i64 [ %50, %48 ], [ %39, %31 ]
  %55 = phi i64 [ %52, %48 ], [ %41, %31 ]
  %56 = inttoptr i64 %54 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  %58 = getelementptr inbounds i8, i8* %57, i64 72
  store i8* %58, i8** %37, align 8
  %59 = bitcast i8* %57 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %59, %class.SkPaint* nonnull dereferenceable(72) %5) #13
  br label %60

60:                                               ; preds = %27, %53
  %61 = phi %class.SkPaint* [ %59, %53 ], [ null, %27 ]
  store %class.SkPaint* %61, %class.SkPaint** %9, align 8
  %62 = bitcast %class.sk_sp.70* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #13
  %63 = icmp eq %class.SkImage* %1, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic, !noalias !20
  br label %67

67:                                               ; preds = %60, %64
  %68 = getelementptr inbounds %class.sk_sp.70, %class.sk_sp.70* %10, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %68, align 8, !alias.scope !20
  %69 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 3
  %70 = bitcast i32** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #13
  %71 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = bitcast i32* %72 to i8*
  %74 = load i32, i32* %69, align 8
  %75 = sext i32 %74 to i64
  %76 = icmp eq i32* %72, null
  br i1 %76, label %244, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %79 = load %class.SkRecord*, %class.SkRecord** %78, align 8
  %80 = shl nsw i64 %75, 2
  %81 = add nsw i64 %80, 4
  %82 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %79, i64 0, i32 5
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %81, %83
  store i64 %84, i64* %82, align 8
  %85 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %79, i64 0, i32 4
  %86 = icmp sgt i32 %74, -1
  br i1 %86, label %88, label %87

87:                                               ; preds = %77
  tail call void @abort() #15
  unreachable

88:                                               ; preds = %77
  %89 = icmp ult i32 %74, 1073741824
  br i1 %89, label %91, label %90

90:                                               ; preds = %88
  tail call void @abort() #15
  unreachable

91:                                               ; preds = %88
  %92 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %79, i64 0, i32 4, i32 1
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 0, %94
  %96 = and i64 %95, 3
  %97 = and i64 %80, 4294967292
  %98 = or i64 %96, %97
  %99 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %79, i64 0, i32 4, i32 2
  %100 = bitcast i8** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %101, %94
  %103 = icmp ugt i64 %98, %102
  br i1 %103, label %104, label %109

104:                                              ; preds = %91
  %105 = trunc i64 %80 to i32
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %85, i32 %105, i32 4) #13
  %106 = load i64, i64* %93, align 8
  %107 = sub i64 0, %106
  %108 = and i64 %107, 3
  br label %109

109:                                              ; preds = %104, %91
  %110 = phi i64 [ %106, %104 ], [ %94, %91 ]
  %111 = phi i64 [ %108, %104 ], [ %96, %91 ]
  %112 = inttoptr i64 %110 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 %111
  %114 = getelementptr inbounds i8, i8* %113, i64 %97
  store i8* %114, i8** %92, align 8
  %115 = bitcast i8* %113 to i32*
  %116 = icmp eq i32 %74, 0
  br i1 %116, label %244, label %117

117:                                              ; preds = %109
  %118 = icmp ult i32 %74, 8
  br i1 %118, label %207, label %119

119:                                              ; preds = %117
  %120 = shl nsw i64 %75, 2
  %121 = or i64 %111, %120
  %122 = getelementptr i8, i8* %112, i64 %121
  %123 = getelementptr i32, i32* %72, i64 %75
  %124 = bitcast i32* %123 to i8*
  %125 = icmp ult i8* %113, %124
  %126 = icmp ugt i8* %122, %73
  %127 = and i1 %125, %126
  br i1 %127, label %207, label %128

128:                                              ; preds = %119
  %129 = and i64 %75, -8
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 3
  %134 = icmp ult i64 %130, 24
  br i1 %134, label %186, label %135

135:                                              ; preds = %128
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %183, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %184, %137 ]
  %140 = getelementptr inbounds i32, i32* %115, i64 %138
  %141 = getelementptr inbounds i32, i32* %72, i64 %138
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4, !alias.scope !23
  %144 = getelementptr inbounds i32, i32* %141, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4, !alias.scope !23
  %147 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %143, <4 x i32>* %147, align 4, !alias.scope !26, !noalias !23
  %148 = getelementptr inbounds i32, i32* %140, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %146, <4 x i32>* %149, align 4, !alias.scope !26, !noalias !23
  %150 = or i64 %138, 8
  %151 = getelementptr inbounds i32, i32* %115, i64 %150
  %152 = getelementptr inbounds i32, i32* %72, i64 %150
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4, !alias.scope !23
  %155 = getelementptr inbounds i32, i32* %152, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  %157 = load <4 x i32>, <4 x i32>* %156, align 4, !alias.scope !23
  %158 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %158, align 4, !alias.scope !26, !noalias !23
  %159 = getelementptr inbounds i32, i32* %151, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %157, <4 x i32>* %160, align 4, !alias.scope !26, !noalias !23
  %161 = or i64 %138, 16
  %162 = getelementptr inbounds i32, i32* %115, i64 %161
  %163 = getelementptr inbounds i32, i32* %72, i64 %161
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4, !alias.scope !23
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4, !alias.scope !23
  %169 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %165, <4 x i32>* %169, align 4, !alias.scope !26, !noalias !23
  %170 = getelementptr inbounds i32, i32* %162, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %168, <4 x i32>* %171, align 4, !alias.scope !26, !noalias !23
  %172 = or i64 %138, 24
  %173 = getelementptr inbounds i32, i32* %115, i64 %172
  %174 = getelementptr inbounds i32, i32* %72, i64 %172
  %175 = bitcast i32* %174 to <4 x i32>*
  %176 = load <4 x i32>, <4 x i32>* %175, align 4, !alias.scope !23
  %177 = getelementptr inbounds i32, i32* %174, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  %179 = load <4 x i32>, <4 x i32>* %178, align 4, !alias.scope !23
  %180 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %176, <4 x i32>* %180, align 4, !alias.scope !26, !noalias !23
  %181 = getelementptr inbounds i32, i32* %173, i64 4
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %179, <4 x i32>* %182, align 4, !alias.scope !26, !noalias !23
  %183 = add i64 %138, 32
  %184 = add i64 %139, -4
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %137, !llvm.loop !28

186:                                              ; preds = %137, %128
  %187 = phi i64 [ 0, %128 ], [ %183, %137 ]
  %188 = icmp eq i64 %133, 0
  br i1 %188, label %205, label %189

189:                                              ; preds = %186, %189
  %190 = phi i64 [ %202, %189 ], [ %187, %186 ]
  %191 = phi i64 [ %203, %189 ], [ %133, %186 ]
  %192 = getelementptr inbounds i32, i32* %115, i64 %190
  %193 = getelementptr inbounds i32, i32* %72, i64 %190
  %194 = bitcast i32* %193 to <4 x i32>*
  %195 = load <4 x i32>, <4 x i32>* %194, align 4, !alias.scope !23
  %196 = getelementptr inbounds i32, i32* %193, i64 4
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4, !alias.scope !23
  %199 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %195, <4 x i32>* %199, align 4, !alias.scope !26, !noalias !23
  %200 = getelementptr inbounds i32, i32* %192, i64 4
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %198, <4 x i32>* %201, align 4, !alias.scope !26, !noalias !23
  %202 = add i64 %190, 8
  %203 = add i64 %191, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %189, !llvm.loop !29

205:                                              ; preds = %189, %186
  %206 = icmp eq i64 %129, %75
  br i1 %206, label %244, label %207

207:                                              ; preds = %205, %119, %117
  %208 = phi i64 [ 0, %119 ], [ 0, %117 ], [ %129, %205 ]
  %209 = xor i64 %208, -1
  %210 = add nsw i64 %209, %75
  %211 = and i64 %75, 3
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %222, label %213

213:                                              ; preds = %207, %213
  %214 = phi i64 [ %219, %213 ], [ %208, %207 ]
  %215 = phi i64 [ %220, %213 ], [ %211, %207 ]
  %216 = getelementptr inbounds i32, i32* %115, i64 %214
  %217 = getelementptr inbounds i32, i32* %72, i64 %214
  %218 = load i32, i32* %217, align 4
  store i32 %218, i32* %216, align 4
  %219 = add nuw i64 %214, 1
  %220 = add i64 %215, -1
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %213, !llvm.loop !30

222:                                              ; preds = %213, %207
  %223 = phi i64 [ %208, %207 ], [ %219, %213 ]
  %224 = icmp ult i64 %210, 3
  br i1 %224, label %244, label %225

225:                                              ; preds = %222, %225
  %226 = phi i64 [ %242, %225 ], [ %223, %222 ]
  %227 = getelementptr inbounds i32, i32* %115, i64 %226
  %228 = getelementptr inbounds i32, i32* %72, i64 %226
  %229 = load i32, i32* %228, align 4
  store i32 %229, i32* %227, align 4
  %230 = add nuw i64 %226, 1
  %231 = getelementptr inbounds i32, i32* %115, i64 %230
  %232 = getelementptr inbounds i32, i32* %72, i64 %230
  %233 = load i32, i32* %232, align 4
  store i32 %233, i32* %231, align 4
  %234 = add nuw i64 %226, 2
  %235 = getelementptr inbounds i32, i32* %115, i64 %234
  %236 = getelementptr inbounds i32, i32* %72, i64 %234
  %237 = load i32, i32* %236, align 4
  store i32 %237, i32* %235, align 4
  %238 = add nuw i64 %226, 3
  %239 = getelementptr inbounds i32, i32* %115, i64 %238
  %240 = getelementptr inbounds i32, i32* %72, i64 %238
  %241 = load i32, i32* %240, align 4
  store i32 %241, i32* %239, align 4
  %242 = add nuw i64 %226, 4
  %243 = icmp eq i64 %242, %75
  br i1 %243, label %244, label %225, !llvm.loop !31

244:                                              ; preds = %222, %225, %205, %67, %109
  %245 = phi i32* [ null, %67 ], [ %115, %109 ], [ %115, %205 ], [ %115, %225 ], [ %115, %222 ]
  store i32* %245, i32** %11, align 8
  %246 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 4
  %247 = bitcast i32** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247) #13
  %248 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 1
  %249 = load i32*, i32** %248, align 8
  %250 = bitcast i32* %249 to i8*
  %251 = load i32, i32* %246, align 4
  %252 = sext i32 %251 to i64
  %253 = icmp eq i32* %249, null
  br i1 %253, label %421, label %254

254:                                              ; preds = %244
  %255 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %256 = load %class.SkRecord*, %class.SkRecord** %255, align 8
  %257 = shl nsw i64 %252, 2
  %258 = add nsw i64 %257, 4
  %259 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %256, i64 0, i32 5
  %260 = load i64, i64* %259, align 8
  %261 = add i64 %258, %260
  store i64 %261, i64* %259, align 8
  %262 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %256, i64 0, i32 4
  %263 = icmp sgt i32 %251, -1
  br i1 %263, label %265, label %264

264:                                              ; preds = %254
  tail call void @abort() #15
  unreachable

265:                                              ; preds = %254
  %266 = icmp ult i32 %251, 1073741824
  br i1 %266, label %268, label %267

267:                                              ; preds = %265
  tail call void @abort() #15
  unreachable

268:                                              ; preds = %265
  %269 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %256, i64 0, i32 4, i32 1
  %270 = bitcast i8** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = sub i64 0, %271
  %273 = and i64 %272, 3
  %274 = and i64 %257, 4294967292
  %275 = or i64 %273, %274
  %276 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %256, i64 0, i32 4, i32 2
  %277 = bitcast i8** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = sub i64 %278, %271
  %280 = icmp ugt i64 %275, %279
  br i1 %280, label %281, label %286

281:                                              ; preds = %268
  %282 = trunc i64 %257 to i32
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %262, i32 %282, i32 4) #13
  %283 = load i64, i64* %270, align 8
  %284 = sub i64 0, %283
  %285 = and i64 %284, 3
  br label %286

286:                                              ; preds = %281, %268
  %287 = phi i64 [ %283, %281 ], [ %271, %268 ]
  %288 = phi i64 [ %285, %281 ], [ %273, %268 ]
  %289 = inttoptr i64 %287 to i8*
  %290 = getelementptr inbounds i8, i8* %289, i64 %288
  %291 = getelementptr inbounds i8, i8* %290, i64 %274
  store i8* %291, i8** %269, align 8
  %292 = bitcast i8* %290 to i32*
  %293 = icmp eq i32 %251, 0
  br i1 %293, label %421, label %294

294:                                              ; preds = %286
  %295 = icmp ult i32 %251, 8
  br i1 %295, label %384, label %296

296:                                              ; preds = %294
  %297 = shl nsw i64 %252, 2
  %298 = or i64 %288, %297
  %299 = getelementptr i8, i8* %289, i64 %298
  %300 = getelementptr i32, i32* %249, i64 %252
  %301 = bitcast i32* %300 to i8*
  %302 = icmp ult i8* %290, %301
  %303 = icmp ugt i8* %299, %250
  %304 = and i1 %302, %303
  br i1 %304, label %384, label %305

305:                                              ; preds = %296
  %306 = and i64 %252, -8
  %307 = add nsw i64 %306, -8
  %308 = lshr exact i64 %307, 3
  %309 = add nuw nsw i64 %308, 1
  %310 = and i64 %309, 3
  %311 = icmp ult i64 %307, 24
  br i1 %311, label %363, label %312

312:                                              ; preds = %305
  %313 = sub nsw i64 %309, %310
  br label %314

314:                                              ; preds = %314, %312
  %315 = phi i64 [ 0, %312 ], [ %360, %314 ]
  %316 = phi i64 [ %313, %312 ], [ %361, %314 ]
  %317 = getelementptr inbounds i32, i32* %292, i64 %315
  %318 = getelementptr inbounds i32, i32* %249, i64 %315
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4, !alias.scope !32
  %321 = getelementptr inbounds i32, i32* %318, i64 4
  %322 = bitcast i32* %321 to <4 x i32>*
  %323 = load <4 x i32>, <4 x i32>* %322, align 4, !alias.scope !32
  %324 = bitcast i32* %317 to <4 x i32>*
  store <4 x i32> %320, <4 x i32>* %324, align 4, !alias.scope !35, !noalias !32
  %325 = getelementptr inbounds i32, i32* %317, i64 4
  %326 = bitcast i32* %325 to <4 x i32>*
  store <4 x i32> %323, <4 x i32>* %326, align 4, !alias.scope !35, !noalias !32
  %327 = or i64 %315, 8
  %328 = getelementptr inbounds i32, i32* %292, i64 %327
  %329 = getelementptr inbounds i32, i32* %249, i64 %327
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4, !alias.scope !32
  %332 = getelementptr inbounds i32, i32* %329, i64 4
  %333 = bitcast i32* %332 to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 4, !alias.scope !32
  %335 = bitcast i32* %328 to <4 x i32>*
  store <4 x i32> %331, <4 x i32>* %335, align 4, !alias.scope !35, !noalias !32
  %336 = getelementptr inbounds i32, i32* %328, i64 4
  %337 = bitcast i32* %336 to <4 x i32>*
  store <4 x i32> %334, <4 x i32>* %337, align 4, !alias.scope !35, !noalias !32
  %338 = or i64 %315, 16
  %339 = getelementptr inbounds i32, i32* %292, i64 %338
  %340 = getelementptr inbounds i32, i32* %249, i64 %338
  %341 = bitcast i32* %340 to <4 x i32>*
  %342 = load <4 x i32>, <4 x i32>* %341, align 4, !alias.scope !32
  %343 = getelementptr inbounds i32, i32* %340, i64 4
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4, !alias.scope !32
  %346 = bitcast i32* %339 to <4 x i32>*
  store <4 x i32> %342, <4 x i32>* %346, align 4, !alias.scope !35, !noalias !32
  %347 = getelementptr inbounds i32, i32* %339, i64 4
  %348 = bitcast i32* %347 to <4 x i32>*
  store <4 x i32> %345, <4 x i32>* %348, align 4, !alias.scope !35, !noalias !32
  %349 = or i64 %315, 24
  %350 = getelementptr inbounds i32, i32* %292, i64 %349
  %351 = getelementptr inbounds i32, i32* %249, i64 %349
  %352 = bitcast i32* %351 to <4 x i32>*
  %353 = load <4 x i32>, <4 x i32>* %352, align 4, !alias.scope !32
  %354 = getelementptr inbounds i32, i32* %351, i64 4
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4, !alias.scope !32
  %357 = bitcast i32* %350 to <4 x i32>*
  store <4 x i32> %353, <4 x i32>* %357, align 4, !alias.scope !35, !noalias !32
  %358 = getelementptr inbounds i32, i32* %350, i64 4
  %359 = bitcast i32* %358 to <4 x i32>*
  store <4 x i32> %356, <4 x i32>* %359, align 4, !alias.scope !35, !noalias !32
  %360 = add i64 %315, 32
  %361 = add i64 %316, -4
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %314, !llvm.loop !37

363:                                              ; preds = %314, %305
  %364 = phi i64 [ 0, %305 ], [ %360, %314 ]
  %365 = icmp eq i64 %310, 0
  br i1 %365, label %382, label %366

366:                                              ; preds = %363, %366
  %367 = phi i64 [ %379, %366 ], [ %364, %363 ]
  %368 = phi i64 [ %380, %366 ], [ %310, %363 ]
  %369 = getelementptr inbounds i32, i32* %292, i64 %367
  %370 = getelementptr inbounds i32, i32* %249, i64 %367
  %371 = bitcast i32* %370 to <4 x i32>*
  %372 = load <4 x i32>, <4 x i32>* %371, align 4, !alias.scope !32
  %373 = getelementptr inbounds i32, i32* %370, i64 4
  %374 = bitcast i32* %373 to <4 x i32>*
  %375 = load <4 x i32>, <4 x i32>* %374, align 4, !alias.scope !32
  %376 = bitcast i32* %369 to <4 x i32>*
  store <4 x i32> %372, <4 x i32>* %376, align 4, !alias.scope !35, !noalias !32
  %377 = getelementptr inbounds i32, i32* %369, i64 4
  %378 = bitcast i32* %377 to <4 x i32>*
  store <4 x i32> %375, <4 x i32>* %378, align 4, !alias.scope !35, !noalias !32
  %379 = add i64 %367, 8
  %380 = add i64 %368, -1
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %366, !llvm.loop !38

382:                                              ; preds = %366, %363
  %383 = icmp eq i64 %306, %252
  br i1 %383, label %421, label %384

384:                                              ; preds = %382, %296, %294
  %385 = phi i64 [ 0, %296 ], [ 0, %294 ], [ %306, %382 ]
  %386 = xor i64 %385, -1
  %387 = add nsw i64 %386, %252
  %388 = and i64 %252, 3
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %399, label %390

390:                                              ; preds = %384, %390
  %391 = phi i64 [ %396, %390 ], [ %385, %384 ]
  %392 = phi i64 [ %397, %390 ], [ %388, %384 ]
  %393 = getelementptr inbounds i32, i32* %292, i64 %391
  %394 = getelementptr inbounds i32, i32* %249, i64 %391
  %395 = load i32, i32* %394, align 4
  store i32 %395, i32* %393, align 4
  %396 = add nuw i64 %391, 1
  %397 = add i64 %392, -1
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %399, label %390, !llvm.loop !39

399:                                              ; preds = %390, %384
  %400 = phi i64 [ %385, %384 ], [ %396, %390 ]
  %401 = icmp ult i64 %387, 3
  br i1 %401, label %421, label %402

402:                                              ; preds = %399, %402
  %403 = phi i64 [ %419, %402 ], [ %400, %399 ]
  %404 = getelementptr inbounds i32, i32* %292, i64 %403
  %405 = getelementptr inbounds i32, i32* %249, i64 %403
  %406 = load i32, i32* %405, align 4
  store i32 %406, i32* %404, align 4
  %407 = add nuw i64 %403, 1
  %408 = getelementptr inbounds i32, i32* %292, i64 %407
  %409 = getelementptr inbounds i32, i32* %249, i64 %407
  %410 = load i32, i32* %409, align 4
  store i32 %410, i32* %408, align 4
  %411 = add nuw i64 %403, 2
  %412 = getelementptr inbounds i32, i32* %292, i64 %411
  %413 = getelementptr inbounds i32, i32* %249, i64 %411
  %414 = load i32, i32* %413, align 4
  store i32 %414, i32* %412, align 4
  %415 = add nuw i64 %403, 3
  %416 = getelementptr inbounds i32, i32* %292, i64 %415
  %417 = getelementptr inbounds i32, i32* %249, i64 %415
  %418 = load i32, i32* %417, align 4
  store i32 %418, i32* %416, align 4
  %419 = add nuw i64 %403, 4
  %420 = icmp eq i64 %419, %252
  br i1 %420, label %421, label %402, !llvm.loop !40

421:                                              ; preds = %399, %402, %382, %244, %286
  %422 = phi i32* [ null, %244 ], [ %292, %286 ], [ %292, %382 ], [ %292, %402 ], [ %292, %399 ]
  store i32* %422, i32** %12, align 8
  %423 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423) #13
  %424 = load i8*, i8** %16, align 8
  %425 = load i32, i32* %8, align 4
  %426 = sext i32 %425 to i64
  %427 = icmp eq i8* %424, null
  br i1 %427, label %587, label %428

428:                                              ; preds = %421
  %429 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %430 = load %class.SkRecord*, %class.SkRecord** %429, align 8
  %431 = add nsw i64 %426, 1
  %432 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %430, i64 0, i32 5
  %433 = load i64, i64* %432, align 8
  %434 = add i64 %431, %433
  store i64 %434, i64* %432, align 8
  %435 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %430, i64 0, i32 4
  %436 = icmp sgt i32 %425, -1
  br i1 %436, label %438, label %437

437:                                              ; preds = %428
  tail call void @abort() #15
  unreachable

438:                                              ; preds = %428
  %439 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %430, i64 0, i32 4, i32 1
  %440 = bitcast i8** %439 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = and i64 %426, 4294967295
  %443 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %430, i64 0, i32 4, i32 2
  %444 = bitcast i8** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = sub i64 %445, %441
  %447 = icmp ugt i64 %442, %446
  br i1 %447, label %448, label %450

448:                                              ; preds = %438
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %435, i32 %425, i32 1) #13
  %449 = load i64, i64* %440, align 8
  br label %450

450:                                              ; preds = %448, %438
  %451 = phi i64 [ %449, %448 ], [ %441, %438 ]
  %452 = inttoptr i64 %451 to i8*
  %453 = getelementptr inbounds i8, i8* %452, i64 %442
  store i8* %453, i8** %439, align 8
  %454 = inttoptr i64 %451 to %struct.RawBytes.106*
  %455 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 0
  %456 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 0
  %457 = icmp eq i32 %425, 0
  br i1 %457, label %584, label %458

458:                                              ; preds = %450
  %459 = icmp ult i32 %425, 32
  br i1 %459, label %545, label %460

460:                                              ; preds = %458
  %461 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 %426, i32 0, i64 0
  %462 = getelementptr i8, i8* %424, i64 %426
  %463 = icmp ult i8* %455, %462
  %464 = icmp ult i8* %424, %461
  %465 = and i1 %463, %464
  br i1 %465, label %545, label %466

466:                                              ; preds = %460
  %467 = and i64 %426, -32
  %468 = add nsw i64 %467, -32
  %469 = lshr exact i64 %468, 5
  %470 = add nuw nsw i64 %469, 1
  %471 = and i64 %470, 3
  %472 = icmp ult i64 %468, 96
  br i1 %472, label %524, label %473

473:                                              ; preds = %466
  %474 = sub nsw i64 %470, %471
  br label %475

475:                                              ; preds = %475, %473
  %476 = phi i64 [ 0, %473 ], [ %521, %475 ]
  %477 = phi i64 [ %474, %473 ], [ %522, %475 ]
  %478 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %476
  %479 = getelementptr inbounds i8, i8* %424, i64 %476
  %480 = bitcast i8* %479 to <16 x i8>*
  %481 = load <16 x i8>, <16 x i8>* %480, align 1, !alias.scope !41
  %482 = getelementptr inbounds i8, i8* %479, i64 16
  %483 = bitcast i8* %482 to <16 x i8>*
  %484 = load <16 x i8>, <16 x i8>* %483, align 1, !alias.scope !41
  %485 = bitcast i8* %478 to <16 x i8>*
  store <16 x i8> %481, <16 x i8>* %485, align 1, !alias.scope !44, !noalias !41
  %486 = getelementptr inbounds i8, i8* %478, i64 16
  %487 = bitcast i8* %486 to <16 x i8>*
  store <16 x i8> %484, <16 x i8>* %487, align 1, !alias.scope !44, !noalias !41
  %488 = or i64 %476, 32
  %489 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %488
  %490 = getelementptr inbounds i8, i8* %424, i64 %488
  %491 = bitcast i8* %490 to <16 x i8>*
  %492 = load <16 x i8>, <16 x i8>* %491, align 1, !alias.scope !41
  %493 = getelementptr inbounds i8, i8* %490, i64 16
  %494 = bitcast i8* %493 to <16 x i8>*
  %495 = load <16 x i8>, <16 x i8>* %494, align 1, !alias.scope !41
  %496 = bitcast i8* %489 to <16 x i8>*
  store <16 x i8> %492, <16 x i8>* %496, align 1, !alias.scope !44, !noalias !41
  %497 = getelementptr inbounds i8, i8* %489, i64 16
  %498 = bitcast i8* %497 to <16 x i8>*
  store <16 x i8> %495, <16 x i8>* %498, align 1, !alias.scope !44, !noalias !41
  %499 = or i64 %476, 64
  %500 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %499
  %501 = getelementptr inbounds i8, i8* %424, i64 %499
  %502 = bitcast i8* %501 to <16 x i8>*
  %503 = load <16 x i8>, <16 x i8>* %502, align 1, !alias.scope !41
  %504 = getelementptr inbounds i8, i8* %501, i64 16
  %505 = bitcast i8* %504 to <16 x i8>*
  %506 = load <16 x i8>, <16 x i8>* %505, align 1, !alias.scope !41
  %507 = bitcast i8* %500 to <16 x i8>*
  store <16 x i8> %503, <16 x i8>* %507, align 1, !alias.scope !44, !noalias !41
  %508 = getelementptr inbounds i8, i8* %500, i64 16
  %509 = bitcast i8* %508 to <16 x i8>*
  store <16 x i8> %506, <16 x i8>* %509, align 1, !alias.scope !44, !noalias !41
  %510 = or i64 %476, 96
  %511 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %510
  %512 = getelementptr inbounds i8, i8* %424, i64 %510
  %513 = bitcast i8* %512 to <16 x i8>*
  %514 = load <16 x i8>, <16 x i8>* %513, align 1, !alias.scope !41
  %515 = getelementptr inbounds i8, i8* %512, i64 16
  %516 = bitcast i8* %515 to <16 x i8>*
  %517 = load <16 x i8>, <16 x i8>* %516, align 1, !alias.scope !41
  %518 = bitcast i8* %511 to <16 x i8>*
  store <16 x i8> %514, <16 x i8>* %518, align 1, !alias.scope !44, !noalias !41
  %519 = getelementptr inbounds i8, i8* %511, i64 16
  %520 = bitcast i8* %519 to <16 x i8>*
  store <16 x i8> %517, <16 x i8>* %520, align 1, !alias.scope !44, !noalias !41
  %521 = add i64 %476, 128
  %522 = add i64 %477, -4
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %524, label %475, !llvm.loop !46

524:                                              ; preds = %475, %466
  %525 = phi i64 [ 0, %466 ], [ %521, %475 ]
  %526 = icmp eq i64 %471, 0
  br i1 %526, label %543, label %527

527:                                              ; preds = %524, %527
  %528 = phi i64 [ %540, %527 ], [ %525, %524 ]
  %529 = phi i64 [ %541, %527 ], [ %471, %524 ]
  %530 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %528
  %531 = getelementptr inbounds i8, i8* %424, i64 %528
  %532 = bitcast i8* %531 to <16 x i8>*
  %533 = load <16 x i8>, <16 x i8>* %532, align 1, !alias.scope !41
  %534 = getelementptr inbounds i8, i8* %531, i64 16
  %535 = bitcast i8* %534 to <16 x i8>*
  %536 = load <16 x i8>, <16 x i8>* %535, align 1, !alias.scope !41
  %537 = bitcast i8* %530 to <16 x i8>*
  store <16 x i8> %533, <16 x i8>* %537, align 1, !alias.scope !44, !noalias !41
  %538 = getelementptr inbounds i8, i8* %530, i64 16
  %539 = bitcast i8* %538 to <16 x i8>*
  store <16 x i8> %536, <16 x i8>* %539, align 1, !alias.scope !44, !noalias !41
  %540 = add i64 %528, 32
  %541 = add i64 %529, -1
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %527, !llvm.loop !47

543:                                              ; preds = %527, %524
  %544 = icmp eq i64 %467, %426
  br i1 %544, label %582, label %545

545:                                              ; preds = %543, %460, %458
  %546 = phi i64 [ 0, %460 ], [ 0, %458 ], [ %467, %543 ]
  %547 = xor i64 %546, -1
  %548 = add nsw i64 %547, %426
  %549 = and i64 %426, 3
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %560, label %551

551:                                              ; preds = %545, %551
  %552 = phi i64 [ %557, %551 ], [ %546, %545 ]
  %553 = phi i64 [ %558, %551 ], [ %549, %545 ]
  %554 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %552
  %555 = getelementptr inbounds i8, i8* %424, i64 %552
  %556 = load i8, i8* %555, align 1
  store i8 %556, i8* %554, align 1
  %557 = add nuw i64 %552, 1
  %558 = add i64 %553, -1
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %551, !llvm.loop !48

560:                                              ; preds = %551, %545
  %561 = phi i64 [ %546, %545 ], [ %557, %551 ]
  %562 = icmp ult i64 %548, 3
  br i1 %562, label %582, label %563

563:                                              ; preds = %560, %563
  %564 = phi i64 [ %580, %563 ], [ %561, %560 ]
  %565 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %564
  %566 = getelementptr inbounds i8, i8* %424, i64 %564
  %567 = load i8, i8* %566, align 1
  store i8 %567, i8* %565, align 1
  %568 = add nuw i64 %564, 1
  %569 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %568
  %570 = getelementptr inbounds i8, i8* %424, i64 %568
  %571 = load i8, i8* %570, align 1
  store i8 %571, i8* %569, align 1
  %572 = add nuw i64 %564, 2
  %573 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %572
  %574 = getelementptr inbounds i8, i8* %424, i64 %572
  %575 = load i8, i8* %574, align 1
  store i8 %575, i8* %573, align 1
  %576 = add nuw i64 %564, 3
  %577 = getelementptr inbounds %struct.RawBytes.106, %struct.RawBytes.106* %454, i64 0, i32 0, i64 %576
  %578 = getelementptr inbounds i8, i8* %424, i64 %576
  %579 = load i8, i8* %578, align 1
  store i8 %579, i8* %577, align 1
  %580 = add nuw i64 %564, 4
  %581 = icmp eq i64 %580, %426
  br i1 %581, label %582, label %563, !llvm.loop !49

582:                                              ; preds = %560, %563, %543
  %583 = load i32, i32* %8, align 4
  br label %584

584:                                              ; preds = %582, %450
  %585 = phi i32 [ %583, %582 ], [ 0, %450 ]
  %586 = sext i32 %585 to i64
  br label %587

587:                                              ; preds = %584, %421
  %588 = phi i64 [ %586, %584 ], [ %426, %421 ]
  %589 = phi i32 [ %585, %584 ], [ %425, %421 ]
  %590 = phi i8* [ %456, %584 ], [ null, %421 ]
  store i8* %590, i8** %13, align 8
  %591 = bitcast i32** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %591) #13
  %592 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 6
  %593 = load i32*, i32** %592, align 8
  %594 = bitcast i32* %593 to i8*
  %595 = icmp eq i32* %593, null
  br i1 %595, label %763, label %596

596:                                              ; preds = %587
  %597 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %598 = load %class.SkRecord*, %class.SkRecord** %597, align 8
  %599 = shl nsw i64 %588, 2
  %600 = add nsw i64 %599, 4
  %601 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %598, i64 0, i32 5
  %602 = load i64, i64* %601, align 8
  %603 = add i64 %600, %602
  store i64 %603, i64* %601, align 8
  %604 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %598, i64 0, i32 4
  %605 = icmp sgt i32 %589, -1
  br i1 %605, label %607, label %606

606:                                              ; preds = %596
  tail call void @abort() #15
  unreachable

607:                                              ; preds = %596
  %608 = icmp ult i32 %589, 1073741824
  br i1 %608, label %610, label %609

609:                                              ; preds = %607
  tail call void @abort() #15
  unreachable

610:                                              ; preds = %607
  %611 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %598, i64 0, i32 4, i32 1
  %612 = bitcast i8** %611 to i64*
  %613 = load i64, i64* %612, align 8
  %614 = sub i64 0, %613
  %615 = and i64 %614, 3
  %616 = and i64 %599, 4294967292
  %617 = or i64 %615, %616
  %618 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %598, i64 0, i32 4, i32 2
  %619 = bitcast i8** %618 to i64*
  %620 = load i64, i64* %619, align 8
  %621 = sub i64 %620, %613
  %622 = icmp ugt i64 %617, %621
  br i1 %622, label %623, label %628

623:                                              ; preds = %610
  %624 = trunc i64 %599 to i32
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %604, i32 %624, i32 4) #13
  %625 = load i64, i64* %612, align 8
  %626 = sub i64 0, %625
  %627 = and i64 %626, 3
  br label %628

628:                                              ; preds = %623, %610
  %629 = phi i64 [ %625, %623 ], [ %613, %610 ]
  %630 = phi i64 [ %627, %623 ], [ %615, %610 ]
  %631 = inttoptr i64 %629 to i8*
  %632 = getelementptr inbounds i8, i8* %631, i64 %630
  %633 = getelementptr inbounds i8, i8* %632, i64 %616
  store i8* %633, i8** %611, align 8
  %634 = bitcast i8* %632 to i32*
  %635 = icmp eq i32 %589, 0
  br i1 %635, label %763, label %636

636:                                              ; preds = %628
  %637 = icmp ult i64 %588, 8
  br i1 %637, label %726, label %638

638:                                              ; preds = %636
  %639 = shl nsw i64 %588, 2
  %640 = or i64 %630, %639
  %641 = getelementptr i8, i8* %631, i64 %640
  %642 = getelementptr i32, i32* %593, i64 %588
  %643 = bitcast i32* %642 to i8*
  %644 = icmp ult i8* %632, %643
  %645 = icmp ugt i8* %641, %594
  %646 = and i1 %644, %645
  br i1 %646, label %726, label %647

647:                                              ; preds = %638
  %648 = and i64 %588, -8
  %649 = add nsw i64 %648, -8
  %650 = lshr exact i64 %649, 3
  %651 = add nuw nsw i64 %650, 1
  %652 = and i64 %651, 3
  %653 = icmp ult i64 %649, 24
  br i1 %653, label %705, label %654

654:                                              ; preds = %647
  %655 = sub nsw i64 %651, %652
  br label %656

656:                                              ; preds = %656, %654
  %657 = phi i64 [ 0, %654 ], [ %702, %656 ]
  %658 = phi i64 [ %655, %654 ], [ %703, %656 ]
  %659 = getelementptr inbounds i32, i32* %634, i64 %657
  %660 = getelementptr inbounds i32, i32* %593, i64 %657
  %661 = bitcast i32* %660 to <4 x i32>*
  %662 = load <4 x i32>, <4 x i32>* %661, align 4, !alias.scope !50
  %663 = getelementptr inbounds i32, i32* %660, i64 4
  %664 = bitcast i32* %663 to <4 x i32>*
  %665 = load <4 x i32>, <4 x i32>* %664, align 4, !alias.scope !50
  %666 = bitcast i32* %659 to <4 x i32>*
  store <4 x i32> %662, <4 x i32>* %666, align 4, !alias.scope !53, !noalias !50
  %667 = getelementptr inbounds i32, i32* %659, i64 4
  %668 = bitcast i32* %667 to <4 x i32>*
  store <4 x i32> %665, <4 x i32>* %668, align 4, !alias.scope !53, !noalias !50
  %669 = or i64 %657, 8
  %670 = getelementptr inbounds i32, i32* %634, i64 %669
  %671 = getelementptr inbounds i32, i32* %593, i64 %669
  %672 = bitcast i32* %671 to <4 x i32>*
  %673 = load <4 x i32>, <4 x i32>* %672, align 4, !alias.scope !50
  %674 = getelementptr inbounds i32, i32* %671, i64 4
  %675 = bitcast i32* %674 to <4 x i32>*
  %676 = load <4 x i32>, <4 x i32>* %675, align 4, !alias.scope !50
  %677 = bitcast i32* %670 to <4 x i32>*
  store <4 x i32> %673, <4 x i32>* %677, align 4, !alias.scope !53, !noalias !50
  %678 = getelementptr inbounds i32, i32* %670, i64 4
  %679 = bitcast i32* %678 to <4 x i32>*
  store <4 x i32> %676, <4 x i32>* %679, align 4, !alias.scope !53, !noalias !50
  %680 = or i64 %657, 16
  %681 = getelementptr inbounds i32, i32* %634, i64 %680
  %682 = getelementptr inbounds i32, i32* %593, i64 %680
  %683 = bitcast i32* %682 to <4 x i32>*
  %684 = load <4 x i32>, <4 x i32>* %683, align 4, !alias.scope !50
  %685 = getelementptr inbounds i32, i32* %682, i64 4
  %686 = bitcast i32* %685 to <4 x i32>*
  %687 = load <4 x i32>, <4 x i32>* %686, align 4, !alias.scope !50
  %688 = bitcast i32* %681 to <4 x i32>*
  store <4 x i32> %684, <4 x i32>* %688, align 4, !alias.scope !53, !noalias !50
  %689 = getelementptr inbounds i32, i32* %681, i64 4
  %690 = bitcast i32* %689 to <4 x i32>*
  store <4 x i32> %687, <4 x i32>* %690, align 4, !alias.scope !53, !noalias !50
  %691 = or i64 %657, 24
  %692 = getelementptr inbounds i32, i32* %634, i64 %691
  %693 = getelementptr inbounds i32, i32* %593, i64 %691
  %694 = bitcast i32* %693 to <4 x i32>*
  %695 = load <4 x i32>, <4 x i32>* %694, align 4, !alias.scope !50
  %696 = getelementptr inbounds i32, i32* %693, i64 4
  %697 = bitcast i32* %696 to <4 x i32>*
  %698 = load <4 x i32>, <4 x i32>* %697, align 4, !alias.scope !50
  %699 = bitcast i32* %692 to <4 x i32>*
  store <4 x i32> %695, <4 x i32>* %699, align 4, !alias.scope !53, !noalias !50
  %700 = getelementptr inbounds i32, i32* %692, i64 4
  %701 = bitcast i32* %700 to <4 x i32>*
  store <4 x i32> %698, <4 x i32>* %701, align 4, !alias.scope !53, !noalias !50
  %702 = add i64 %657, 32
  %703 = add i64 %658, -4
  %704 = icmp eq i64 %703, 0
  br i1 %704, label %705, label %656, !llvm.loop !55

705:                                              ; preds = %656, %647
  %706 = phi i64 [ 0, %647 ], [ %702, %656 ]
  %707 = icmp eq i64 %652, 0
  br i1 %707, label %724, label %708

708:                                              ; preds = %705, %708
  %709 = phi i64 [ %721, %708 ], [ %706, %705 ]
  %710 = phi i64 [ %722, %708 ], [ %652, %705 ]
  %711 = getelementptr inbounds i32, i32* %634, i64 %709
  %712 = getelementptr inbounds i32, i32* %593, i64 %709
  %713 = bitcast i32* %712 to <4 x i32>*
  %714 = load <4 x i32>, <4 x i32>* %713, align 4, !alias.scope !50
  %715 = getelementptr inbounds i32, i32* %712, i64 4
  %716 = bitcast i32* %715 to <4 x i32>*
  %717 = load <4 x i32>, <4 x i32>* %716, align 4, !alias.scope !50
  %718 = bitcast i32* %711 to <4 x i32>*
  store <4 x i32> %714, <4 x i32>* %718, align 4, !alias.scope !53, !noalias !50
  %719 = getelementptr inbounds i32, i32* %711, i64 4
  %720 = bitcast i32* %719 to <4 x i32>*
  store <4 x i32> %717, <4 x i32>* %720, align 4, !alias.scope !53, !noalias !50
  %721 = add i64 %709, 8
  %722 = add i64 %710, -1
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %724, label %708, !llvm.loop !56

724:                                              ; preds = %708, %705
  %725 = icmp eq i64 %588, %648
  br i1 %725, label %763, label %726

726:                                              ; preds = %724, %638, %636
  %727 = phi i64 [ 0, %638 ], [ 0, %636 ], [ %648, %724 ]
  %728 = xor i64 %727, -1
  %729 = add nsw i64 %588, %728
  %730 = and i64 %588, 3
  %731 = icmp eq i64 %730, 0
  br i1 %731, label %741, label %732

732:                                              ; preds = %726, %732
  %733 = phi i64 [ %738, %732 ], [ %727, %726 ]
  %734 = phi i64 [ %739, %732 ], [ %730, %726 ]
  %735 = getelementptr inbounds i32, i32* %634, i64 %733
  %736 = getelementptr inbounds i32, i32* %593, i64 %733
  %737 = load i32, i32* %736, align 4
  store i32 %737, i32* %735, align 4
  %738 = add nuw i64 %733, 1
  %739 = add i64 %734, -1
  %740 = icmp eq i64 %739, 0
  br i1 %740, label %741, label %732, !llvm.loop !57

741:                                              ; preds = %732, %726
  %742 = phi i64 [ %727, %726 ], [ %738, %732 ]
  %743 = icmp ult i64 %729, 3
  br i1 %743, label %763, label %744

744:                                              ; preds = %741, %744
  %745 = phi i64 [ %761, %744 ], [ %742, %741 ]
  %746 = getelementptr inbounds i32, i32* %634, i64 %745
  %747 = getelementptr inbounds i32, i32* %593, i64 %745
  %748 = load i32, i32* %747, align 4
  store i32 %748, i32* %746, align 4
  %749 = add nuw i64 %745, 1
  %750 = getelementptr inbounds i32, i32* %634, i64 %749
  %751 = getelementptr inbounds i32, i32* %593, i64 %749
  %752 = load i32, i32* %751, align 4
  store i32 %752, i32* %750, align 4
  %753 = add nuw i64 %745, 2
  %754 = getelementptr inbounds i32, i32* %634, i64 %753
  %755 = getelementptr inbounds i32, i32* %593, i64 %753
  %756 = load i32, i32* %755, align 4
  store i32 %756, i32* %754, align 4
  %757 = add nuw i64 %745, 3
  %758 = getelementptr inbounds i32, i32* %634, i64 %757
  %759 = getelementptr inbounds i32, i32* %593, i64 %757
  %760 = load i32, i32* %759, align 4
  store i32 %760, i32* %758, align 4
  %761 = add nuw i64 %745, 4
  %762 = icmp eq i64 %761, %588
  br i1 %762, label %763, label %744, !llvm.loop !58

763:                                              ; preds = %741, %744, %724, %587, %628
  %764 = phi i32* [ null, %587 ], [ %634, %628 ], [ %634, %724 ], [ %634, %744 ], [ %634, %741 ]
  store i32* %764, i32** %14, align 8
  %765 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 5
  %766 = load %struct.SkIRect*, %struct.SkIRect** %765, align 8
  call void @_ZN10SkRecorder6appendIN9SkRecords16DrawImageLatticeEJP7SkPaint5sk_spI7SkImageERKiPiS9_SA_RiPN8SkCanvas7Lattice8RectTypeEPjRK7SkIRectRK6SkRectR12SkFilterModeEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint** nonnull dereferenceable(8) %9, %class.sk_sp.70* nonnull dereferenceable(8) %10, i32* dereferenceable(4) %69, i32** nonnull dereferenceable(8) %11, i32* dereferenceable(4) %246, i32** nonnull dereferenceable(8) %12, i32* nonnull dereferenceable(4) %8, i8** nonnull dereferenceable(8) %13, i32** nonnull dereferenceable(8) %14, %struct.SkIRect* dereferenceable(16) %766, %struct.SkRect* dereferenceable(16) %3, i32* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %591) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #13
  %767 = load %class.SkImage*, %class.SkImage** %68, align 8
  %768 = icmp eq %class.SkImage* %767, null
  br i1 %768, label %779, label %769

769:                                              ; preds = %763
  %770 = getelementptr inbounds %class.SkImage, %class.SkImage* %767, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %771 = atomicrmw add i32* %770, i32 -1 acq_rel
  %772 = icmp eq i32 %771, 1
  br i1 %772, label %773, label %779

773:                                              ; preds = %769
  %774 = bitcast %class.SkImage* %767 to %class.SkRefCntBase*
  %775 = bitcast %class.SkImage* %767 to void (%class.SkRefCntBase*)***
  %776 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %775, align 8
  %777 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %776, i64 2
  %778 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %777, align 8
  call void %778(%class.SkRefCntBase* nonnull %774) #13
  br label %779

779:                                              ; preds = %763, %769, %773
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords16DrawImageLatticeEJP7SkPaint5sk_spI7SkImageERKiPiS9_SA_RiPN8SkCanvas7Lattice8RectTypeEPjRK7SkIRectRK6SkRectR12SkFilterModeEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint** dereferenceable(8), %class.sk_sp.70* dereferenceable(8), i32* dereferenceable(4), i32** dereferenceable(8), i32* dereferenceable(4), i32** dereferenceable(8), i32* dereferenceable(4), i8** dereferenceable(8), i32** dereferenceable(8), %struct.SkIRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %14 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %15 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %14, align 8
  %16 = icmp eq %class.SkMiniRecorder* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %14, align 8
  %18 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %15, %class.SkCanvas* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %21 = load %class.SkRecord*, %class.SkRecord** %20, align 8
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %21, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %19
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %21) #13
  %28 = load i32, i32* %22, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %23, %19 ]
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %22, align 4
  %32 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %32, align 8
  %34 = sext i32 %30 to i64
  %35 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %21, i64 0, i32 5
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 120
  store i64 %37, i64* %35, align 8
  %38 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %21, i64 0, i32 4, i32 1
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 0, %40
  %42 = and i64 %41, 7
  %43 = or i64 %42, 112
  %44 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %21, i64 0, i32 4, i32 2
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %40
  %48 = icmp ugt i64 %43, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %29
  %50 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %21, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %50, i32 112, i32 8) #13
  %51 = load i64, i64* %39, align 8
  %52 = sub i64 0, %51
  %53 = and i64 %52, 7
  br label %54

54:                                               ; preds = %29, %49
  %55 = phi i64 [ %51, %49 ], [ %40, %29 ]
  %56 = phi i64 [ %53, %49 ], [ %42, %29 ]
  %57 = inttoptr i64 %55 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  %59 = getelementptr inbounds i8, i8* %58, i64 112
  store i8* %59, i8** %38, align 8
  %60 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %33, i64 %34, i32 0
  store i32 21, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %33, i64 %34, i32 1
  store i8* %58, i8** %61, align 8
  %62 = bitcast %class.SkPaint** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8* %58 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %58, i64 8
  %66 = getelementptr inbounds %class.sk_sp.70, %class.sk_sp.70* %2, i64 0, i32 0
  %67 = bitcast %class.sk_sp.70* %2 to i64*
  %68 = load i64, i64* %67, align 8
  store %class.SkImage* null, %class.SkImage** %66, align 8
  %69 = bitcast i8* %65 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds i8, i8* %58, i64 16
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %3, align 4
  store i32 %72, i32* %71, align 8
  %73 = getelementptr inbounds i8, i8* %58, i64 24
  %74 = bitcast i32** %4 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast i8* %73 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i8, i8* %58, i64 32
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %5, align 4
  store i32 %79, i32* %78, align 8
  %80 = getelementptr inbounds i8, i8* %58, i64 40
  %81 = bitcast i32** %6 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast i8* %80 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds i8, i8* %58, i64 48
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %7, align 4
  store i32 %86, i32* %85, align 8
  %87 = getelementptr inbounds i8, i8* %58, i64 56
  %88 = bitcast i8** %8 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast i8* %87 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds i8, i8* %58, i64 64
  %92 = bitcast i32** %9 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast i8* %91 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %58, i64 72
  %96 = bitcast %struct.SkIRect* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 4 %96, i64 16, i1 false)
  %97 = getelementptr inbounds i8, i8* %58, i64 88
  %98 = bitcast %struct.SkRect* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 4 %98, i64 16, i1 false)
  %99 = getelementptr inbounds i8, i8* %58, i64 104
  %100 = bitcast i8* %99 to i32*
  %101 = load i32, i32* %12, align 4
  store i32 %101, i32* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkRecorder*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca %class.sk_sp.71, align 8
  store float %2, float* %6, align 4
  store float %3, float* %7, align 4
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %10 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %9, align 8
  %11 = icmp eq %class.SkMiniRecorder* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZN14SkMiniRecorder12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkMiniRecorder* nonnull %10, %class.SkTextBlob* %1, float %2, float %3, %class.SkPaint* dereferenceable(72) %4) #13
  br i1 %13, label %31, label %14

14:                                               ; preds = %5, %12
  %15 = bitcast %class.sk_sp.71* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = icmp eq %class.SkTextBlob* %1, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic, !noalias !59
  br label %20

20:                                               ; preds = %14, %17
  %21 = getelementptr inbounds %class.sk_sp.71, %class.sk_sp.71* %8, i64 0, i32 0
  store %class.SkTextBlob* %1, %class.SkTextBlob** %21, align 8, !alias.scope !59
  call void @_ZN10SkRecorder6appendIN9SkRecords12DrawTextBlobEJRK7SkPaint5sk_spI10SkTextBlobERfS9_EEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %4, %class.sk_sp.71* nonnull dereferenceable(8) %8, float* nonnull dereferenceable(4) %6, float* nonnull dereferenceable(4) %7)
  %22 = load %class.SkTextBlob*, %class.SkTextBlob** %21, align 8
  %23 = icmp eq %class.SkTextBlob* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %22) #13
  %29 = bitcast %class.SkTextBlob* %22 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %29) #13
  br label %30

30:                                               ; preds = %20, %24, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  br label %31

31:                                               ; preds = %12, %30
  ret void
}

declare zeroext i1 @_ZN14SkMiniRecorder12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkMiniRecorder*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords12DrawTextBlobEJRK7SkPaint5sk_spI10SkTextBlobERfS9_EEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %class.sk_sp.71* dereferenceable(8), float* dereferenceable(4), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %7 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %6, align 8
  %8 = icmp eq %class.SkMiniRecorder* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %6, align 8
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %7, %class.SkCanvas* %10) #13
  br label %11

11:                                               ; preds = %5, %9
  %12 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %13 = load %class.SkRecord*, %class.SkRecord** %12, align 8
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %11
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %13) #13
  %20 = load i32, i32* %14, align 4
  br label %21

21:                                               ; preds = %19, %11
  %22 = phi i32 [ %20, %19 ], [ %15, %11 ]
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %14, align 4
  %24 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %24, align 8
  %26 = sext i32 %22 to i64
  %27 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 5
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 96
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 4, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 0, %32
  %34 = and i64 %33, 7
  %35 = or i64 %34, 88
  %36 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 4, i32 2
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %38, %32
  %40 = icmp ugt i64 %35, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %21
  %42 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %42, i32 88, i32 8) #13
  %43 = load i64, i64* %31, align 8
  %44 = sub i64 0, %43
  %45 = and i64 %44, 7
  br label %46

46:                                               ; preds = %21, %41
  %47 = phi i64 [ %43, %41 ], [ %32, %21 ]
  %48 = phi i64 [ %45, %41 ], [ %34, %21 ]
  %49 = inttoptr i64 %47 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 %48
  %51 = getelementptr inbounds i8, i8* %50, i64 88
  store i8* %51, i8** %30, align 8
  %52 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %25, i64 %26, i32 0
  store i32 34, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %25, i64 %26, i32 1
  store i8* %50, i8** %53, align 8
  %54 = bitcast i8* %50 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %54, %class.SkPaint* dereferenceable(72) %1) #13
  %55 = getelementptr inbounds i8, i8* %50, i64 72
  %56 = getelementptr inbounds %class.sk_sp.71, %class.sk_sp.71* %2, i64 0, i32 0
  %57 = bitcast %class.sk_sp.71* %2 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %56, align 8
  %59 = bitcast i8* %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %50, i64 80
  %61 = bitcast float* %3 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = bitcast i8* %60 to i32*
  store i32 %62, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %50, i64 84
  %65 = bitcast float* %4 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = bitcast i8* %64 to i32*
  store i32 %66, i32* %67, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkRecorder*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #5 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca %class.sk_sp.71, align 8
  %7 = alloca %class.sk_sp.71, align 8
  %8 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 1
  %9 = load %class.SkTextBlob*, %class.SkTextBlob** %8, align 8
  %10 = icmp eq %class.SkTextBlob* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic, !noalias !62
  %14 = load %class.SkTextBlob*, %class.SkTextBlob** %8, align 8
  %15 = icmp eq %class.SkTextBlob* %14, null
  br i1 %15, label %16, label %36

16:                                               ; preds = %3, %11
  %17 = bitcast %class.sk_sp.71* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZNK14SkGlyphRunList8makeBlobEv(%class.sk_sp.71* nonnull sret %7, %class.SkGlyphRunList* %1) #13
  %18 = getelementptr inbounds %class.sk_sp.71, %class.sk_sp.71* %7, i64 0, i32 0
  %19 = load %class.SkTextBlob*, %class.SkTextBlob** %18, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %18, align 8
  br i1 %10, label %35, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %9) #13
  %25 = bitcast %class.SkTextBlob* %9 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %25) #13
  br label %26

26:                                               ; preds = %20, %24
  %27 = load %class.SkTextBlob*, %class.SkTextBlob** %18, align 8
  %28 = icmp eq %class.SkTextBlob* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %27) #13
  %34 = bitcast %class.SkTextBlob* %27 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %34) #13
  br label %35

35:                                               ; preds = %16, %26, %29, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %36

36:                                               ; preds = %35, %11
  %37 = phi %class.SkTextBlob* [ %19, %35 ], [ %9, %11 ]
  %38 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 3
  %39 = bitcast %struct.SkPoint* %38 to <2 x float>*
  %40 = load <2 x float>, <2 x float>* %39, align 8
  %41 = extractelement <2 x float> %40, i32 0
  %42 = extractelement <2 x float> %40, i32 1
  %43 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  %44 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44)
  store float %41, float* %4, align 4
  store float %42, float* %5, align 4
  %45 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %46 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %45, align 8
  %47 = icmp eq %class.SkMiniRecorder* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %36
  %49 = call zeroext i1 @_ZN14SkMiniRecorder12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkMiniRecorder* nonnull %46, %class.SkTextBlob* %37, float %41, float %42, %class.SkPaint* dereferenceable(72) %2) #13
  br i1 %49, label %67, label %50

50:                                               ; preds = %48, %36
  %51 = bitcast %class.sk_sp.71* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  %52 = icmp eq %class.SkTextBlob* %37, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic, !noalias !65
  br label %56

56:                                               ; preds = %53, %50
  %57 = getelementptr inbounds %class.sk_sp.71, %class.sk_sp.71* %6, i64 0, i32 0
  store %class.SkTextBlob* %37, %class.SkTextBlob** %57, align 8, !alias.scope !65
  call void @_ZN10SkRecorder6appendIN9SkRecords12DrawTextBlobEJRK7SkPaint5sk_spI10SkTextBlobERfS9_EEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %2, %class.sk_sp.71* nonnull dereferenceable(8) %6, float* nonnull dereferenceable(4) %4, float* nonnull dereferenceable(4) %5) #13
  %58 = load %class.SkTextBlob*, %class.SkTextBlob** %57, align 8
  %59 = icmp eq %class.SkTextBlob* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %58) #13
  %65 = bitcast %class.SkTextBlob* %58 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %65) #13
  br label %66

66:                                               ; preds = %64, %60, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %67

67:                                               ; preds = %48, %66
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44)
  %68 = icmp eq %class.SkTextBlob* %37, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %37) #13
  %74 = bitcast %class.SkTextBlob* %37 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %74) #13
  br label %75

75:                                               ; preds = %67, %69, %73
  ret void
}

declare void @_ZNK14SkGlyphRunList8makeBlobEv(%class.sk_sp.71* sret, %class.SkGlyphRunList*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkRecorder*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPaint*, align 8
  %6 = alloca %class.sk_sp.72, align 8
  %7 = bitcast %class.SkPicture* %1 to i64 (%class.SkPicture*)***
  %8 = load i64 (%class.SkPicture*)**, i64 (%class.SkPicture*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%class.SkPicture*)*, i64 (%class.SkPicture*)** %8, i64 6
  %10 = load i64 (%class.SkPicture*)*, i64 (%class.SkPicture*)** %9, align 8
  %11 = tail call i64 %10(%class.SkPicture* %1) #13
  %12 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  store i64 %14, i64* %12, align 8
  %15 = bitcast %class.SkPaint** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = icmp eq %class.SkPaint* %3, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %19 = load %class.SkRecord*, %class.SkRecord** %18, align 8
  %20 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %19, i64 0, i32 5
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 80
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %19, i64 0, i32 4, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 0, %25
  %27 = and i64 %26, 7
  %28 = or i64 %27, 72
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %19, i64 0, i32 4, i32 2
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %25
  %33 = icmp ugt i64 %28, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %17
  %35 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %19, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %35, i32 72, i32 8) #13
  %36 = load i64, i64* %24, align 8
  %37 = sub i64 0, %36
  %38 = and i64 %37, 7
  br label %39

39:                                               ; preds = %34, %17
  %40 = phi i64 [ %36, %34 ], [ %25, %17 ]
  %41 = phi i64 [ %38, %34 ], [ %27, %17 ]
  %42 = inttoptr i64 %40 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = getelementptr inbounds i8, i8* %43, i64 72
  store i8* %44, i8** %23, align 8
  %45 = bitcast i8* %43 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %45, %class.SkPaint* nonnull dereferenceable(72) %3) #13
  br label %46

46:                                               ; preds = %4, %39
  %47 = phi %class.SkPaint* [ %45, %39 ], [ null, %4 ]
  store %class.SkPaint* %47, %class.SkPaint** %5, align 8
  %48 = bitcast %class.sk_sp.72* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  %49 = icmp eq %class.SkPicture* %1, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic, !noalias !68
  br label %53

53:                                               ; preds = %46, %50
  %54 = getelementptr inbounds %class.sk_sp.72, %class.sk_sp.72* %6, i64 0, i32 0
  store %class.SkPicture* %1, %class.SkPicture** %54, align 8, !alias.scope !68
  %55 = icmp eq %class.SkMatrix* %2, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  br label %58

58:                                               ; preds = %53, %56
  %59 = phi %class.SkMatrix* [ %57, %56 ], [ %2, %53 ]
  call void @_ZN10SkRecorder6appendIN9SkRecords11DrawPictureEJP7SkPaint5sk_spI9SkPictureERK8SkMatrixEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint** nonnull dereferenceable(8) %5, %class.sk_sp.72* nonnull dereferenceable(8) %6, %class.SkMatrix* dereferenceable(40) %59)
  %60 = load %class.SkPicture*, %class.SkPicture** %54, align 8
  %61 = icmp eq %class.SkPicture* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkPicture* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkPicture* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #13
  br label %72

72:                                               ; preds = %58, %62, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords11DrawPictureEJP7SkPaint5sk_spI9SkPictureERK8SkMatrixEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint** dereferenceable(8), %class.sk_sp.72* dereferenceable(8), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %6 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %5, align 8
  %7 = icmp eq %class.SkMiniRecorder* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %5, align 8
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %6, %class.SkCanvas* %9) #13
  br label %10

10:                                               ; preds = %4, %8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %12 = load %class.SkRecord*, %class.SkRecord** %11, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %12) #13
  %19 = load i32, i32* %13, align 4
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi i32 [ %19, %18 ], [ %14, %10 ]
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %13, align 4
  %23 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %23, align 8
  %25 = sext i32 %21 to i64
  %26 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 64
  store i64 %28, i64* %26, align 8
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 0, %31
  %33 = and i64 %32, 7
  %34 = or i64 %33, 56
  %35 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 2
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %31
  %39 = icmp ugt i64 %34, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %20
  %41 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %41, i32 56, i32 8) #13
  %42 = load i64, i64* %30, align 8
  %43 = sub i64 0, %42
  %44 = and i64 %43, 7
  br label %45

45:                                               ; preds = %20, %40
  %46 = phi i64 [ %42, %40 ], [ %31, %20 ]
  %47 = phi i64 [ %44, %40 ], [ %33, %20 ]
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = getelementptr inbounds i8, i8* %49, i64 56
  store i8* %50, i8** %29, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 0
  store i32 29, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 1
  store i8* %49, i8** %52, align 8
  %53 = bitcast %class.SkPaint** %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast i8* %49 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %49, i64 8
  %57 = getelementptr inbounds %class.sk_sp.72, %class.sk_sp.72* %2, i64 0, i32 0
  %58 = bitcast %class.sk_sp.72* %2 to i64*
  %59 = load i64, i64* %58, align 8
  store %class.SkPicture* null, %class.SkPicture** %57, align 8
  %60 = bitcast i8* %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %49, i64 16
  %62 = bitcast i8* %61 to %"struct.SkRecords::TypedMatrix"*
  tail call void @_ZN9SkRecords11TypedMatrixC1ERK8SkMatrix(%"struct.SkRecords::TypedMatrix"* %62, %class.SkMatrix* dereferenceable(40) %3) #13
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkRecorder*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %class.sk_sp.74, align 8
  store i32 %2, i32* %5, align 4
  %7 = bitcast %class.sk_sp.74* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = icmp eq %class.SkVertices* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !71
  br label %12

12:                                               ; preds = %4, %9
  %13 = getelementptr inbounds %class.sk_sp.74, %class.sk_sp.74* %6, i64 0, i32 0
  store %class.SkVertices* %1, %class.SkVertices** %13, align 8, !alias.scope !71
  call void @_ZN10SkRecorder6appendIN9SkRecords12DrawVerticesEJRK7SkPaint5sk_spI10SkVerticesER11SkBlendModeEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %3, %class.sk_sp.74* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %5)
  %14 = load %class.SkVertices*, %class.SkVertices** %13, align 8
  %15 = icmp eq %class.SkVertices* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %class.SkVertices* %14 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %21) #13
  br label %22

22:                                               ; preds = %12, %16, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords12DrawVerticesEJRK7SkPaint5sk_spI10SkVerticesER11SkBlendModeEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %class.sk_sp.74* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %6 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %5, align 8
  %7 = icmp eq %class.SkMiniRecorder* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %5, align 8
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %6, %class.SkCanvas* %9) #13
  br label %10

10:                                               ; preds = %4, %8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %12 = load %class.SkRecord*, %class.SkRecord** %11, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %12) #13
  %19 = load i32, i32* %13, align 4
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi i32 [ %19, %18 ], [ %14, %10 ]
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %13, align 4
  %23 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %23, align 8
  %25 = sext i32 %21 to i64
  %26 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 96
  store i64 %28, i64* %26, align 8
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 0, %31
  %33 = and i64 %32, 7
  %34 = or i64 %33, 88
  %35 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 2
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %31
  %39 = icmp ugt i64 %34, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %20
  %41 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %41, i32 88, i32 8) #13
  %42 = load i64, i64* %30, align 8
  %43 = sub i64 0, %42
  %44 = and i64 %43, 7
  br label %45

45:                                               ; preds = %20, %40
  %46 = phi i64 [ %42, %40 ], [ %31, %20 ]
  %47 = phi i64 [ %44, %40 ], [ %33, %20 ]
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = getelementptr inbounds i8, i8* %49, i64 88
  store i8* %50, i8** %29, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 0
  store i32 36, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 1
  store i8* %49, i8** %52, align 8
  %53 = bitcast i8* %49 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %53, %class.SkPaint* dereferenceable(72) %1) #13
  %54 = getelementptr inbounds i8, i8* %49, i64 72
  %55 = getelementptr inbounds %class.sk_sp.74, %class.sk_sp.74* %2, i64 0, i32 0
  %56 = bitcast %class.sk_sp.74* %2 to i64*
  %57 = load i64, i64* %56, align 8
  store %class.SkVertices* null, %class.SkVertices** %55, align 8
  %58 = bitcast i8* %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %49, i64 80
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %3, align 4
  store i32 %61, i32* %60, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkRecorder*, %struct.SkPoint* readonly, i32* readonly, %struct.SkPoint* readonly, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.SkPoint*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %struct.SkPoint*, align 8
  store i32 %4, i32* %7, align 4
  %11 = bitcast %struct.SkPoint** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = icmp eq %struct.SkPoint* %1, null
  br i1 %12, label %100, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %15 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 100
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 0, %21
  %23 = and i64 %22, 3
  %24 = or i64 %23, 96
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4, i32 2
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %21
  %29 = icmp ugt i64 %24, %28
  br i1 %29, label %30, label %35

30:                                               ; preds = %13
  %31 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %31, i32 96, i32 4) #13
  %32 = load i64, i64* %20, align 8
  %33 = sub i64 0, %32
  %34 = and i64 %33, 3
  br label %35

35:                                               ; preds = %30, %13
  %36 = phi i64 [ %32, %30 ], [ %21, %13 ]
  %37 = phi i64 [ %34, %30 ], [ %23, %13 ]
  %38 = inttoptr i64 %36 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 %37
  %40 = getelementptr inbounds i8, i8* %39, i64 96
  store i8* %40, i8** %19, align 8
  %41 = bitcast i8* %39 to %struct.SkPoint*
  %42 = bitcast %struct.SkPoint* %1 to i64*
  %43 = bitcast i8* %39 to i64*
  %44 = load i64, i64* %42, align 4
  store i64 %44, i64* %43, align 4
  %45 = getelementptr inbounds i8, i8* %39, i64 8
  %46 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %47 = bitcast %struct.SkPoint* %46 to i64*
  %48 = bitcast i8* %45 to i64*
  %49 = load i64, i64* %47, align 4
  store i64 %49, i64* %48, align 4
  %50 = getelementptr inbounds i8, i8* %39, i64 16
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  %52 = bitcast %struct.SkPoint* %51 to i64*
  %53 = bitcast i8* %50 to i64*
  %54 = load i64, i64* %52, align 4
  store i64 %54, i64* %53, align 4
  %55 = getelementptr inbounds i8, i8* %39, i64 24
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3
  %57 = bitcast %struct.SkPoint* %56 to i64*
  %58 = bitcast i8* %55 to i64*
  %59 = load i64, i64* %57, align 4
  store i64 %59, i64* %58, align 4
  %60 = getelementptr inbounds i8, i8* %39, i64 32
  %61 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 4
  %62 = bitcast %struct.SkPoint* %61 to i64*
  %63 = bitcast i8* %60 to i64*
  %64 = load i64, i64* %62, align 4
  store i64 %64, i64* %63, align 4
  %65 = getelementptr inbounds i8, i8* %39, i64 40
  %66 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 5
  %67 = bitcast %struct.SkPoint* %66 to i64*
  %68 = bitcast i8* %65 to i64*
  %69 = load i64, i64* %67, align 4
  store i64 %69, i64* %68, align 4
  %70 = getelementptr inbounds i8, i8* %39, i64 48
  %71 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 6
  %72 = bitcast %struct.SkPoint* %71 to i64*
  %73 = bitcast i8* %70 to i64*
  %74 = load i64, i64* %72, align 4
  store i64 %74, i64* %73, align 4
  %75 = getelementptr inbounds i8, i8* %39, i64 56
  %76 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 7
  %77 = bitcast %struct.SkPoint* %76 to i64*
  %78 = bitcast i8* %75 to i64*
  %79 = load i64, i64* %77, align 4
  store i64 %79, i64* %78, align 4
  %80 = getelementptr inbounds i8, i8* %39, i64 64
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 8
  %82 = bitcast %struct.SkPoint* %81 to i64*
  %83 = bitcast i8* %80 to i64*
  %84 = load i64, i64* %82, align 4
  store i64 %84, i64* %83, align 4
  %85 = getelementptr inbounds i8, i8* %39, i64 72
  %86 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 9
  %87 = bitcast %struct.SkPoint* %86 to i64*
  %88 = bitcast i8* %85 to i64*
  %89 = load i64, i64* %87, align 4
  store i64 %89, i64* %88, align 4
  %90 = getelementptr inbounds i8, i8* %39, i64 80
  %91 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 10
  %92 = bitcast %struct.SkPoint* %91 to i64*
  %93 = bitcast i8* %90 to i64*
  %94 = load i64, i64* %92, align 4
  store i64 %94, i64* %93, align 4
  %95 = getelementptr inbounds i8, i8* %39, i64 88
  %96 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 11
  %97 = bitcast %struct.SkPoint* %96 to i64*
  %98 = bitcast i8* %95 to i64*
  %99 = load i64, i64* %97, align 4
  store i64 %99, i64* %98, align 4
  br label %100

100:                                              ; preds = %35, %6
  %101 = phi %struct.SkPoint* [ null, %6 ], [ %41, %35 ]
  store %struct.SkPoint* %101, %struct.SkPoint** %8, align 8
  %102 = bitcast i32** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  %103 = icmp eq i32* %2, null
  br i1 %103, label %146, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %106 = load %class.SkRecord*, %class.SkRecord** %105, align 8
  %107 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %106, i64 0, i32 5
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 20
  store i64 %109, i64* %107, align 8
  %110 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %106, i64 0, i32 4, i32 1
  %111 = bitcast i8** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 0, %112
  %114 = and i64 %113, 3
  %115 = or i64 %114, 16
  %116 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %106, i64 0, i32 4, i32 2
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %118, %112
  %120 = icmp ugt i64 %115, %119
  br i1 %120, label %121, label %126

121:                                              ; preds = %104
  %122 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %106, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %122, i32 16, i32 4) #13
  %123 = load i64, i64* %111, align 8
  %124 = sub i64 0, %123
  %125 = and i64 %124, 3
  br label %126

126:                                              ; preds = %121, %104
  %127 = phi i64 [ %123, %121 ], [ %112, %104 ]
  %128 = phi i64 [ %125, %121 ], [ %114, %104 ]
  %129 = inttoptr i64 %127 to i8*
  %130 = getelementptr inbounds i8, i8* %129, i64 %128
  %131 = getelementptr inbounds i8, i8* %130, i64 16
  store i8* %131, i8** %110, align 8
  %132 = bitcast i8* %130 to i32*
  %133 = load i32, i32* %2, align 4
  store i32 %133, i32* %132, align 4
  %134 = getelementptr inbounds i8, i8* %130, i64 4
  %135 = bitcast i8* %134 to i32*
  %136 = getelementptr inbounds i32, i32* %2, i64 1
  %137 = load i32, i32* %136, align 4
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds i8, i8* %130, i64 8
  %139 = bitcast i8* %138 to i32*
  %140 = getelementptr inbounds i32, i32* %2, i64 2
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %139, align 4
  %142 = getelementptr inbounds i8, i8* %130, i64 12
  %143 = bitcast i8* %142 to i32*
  %144 = getelementptr inbounds i32, i32* %2, i64 3
  %145 = load i32, i32* %144, align 4
  store i32 %145, i32* %143, align 4
  br label %146

146:                                              ; preds = %126, %100
  %147 = phi i32* [ null, %100 ], [ %132, %126 ]
  store i32* %147, i32** %9, align 8
  %148 = bitcast %struct.SkPoint** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #13
  %149 = icmp eq %struct.SkPoint* %3, null
  br i1 %149, label %197, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %152 = load %class.SkRecord*, %class.SkRecord** %151, align 8
  %153 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %152, i64 0, i32 5
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, 36
  store i64 %155, i64* %153, align 8
  %156 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %152, i64 0, i32 4, i32 1
  %157 = bitcast i8** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 0, %158
  %160 = and i64 %159, 3
  %161 = or i64 %160, 32
  %162 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %152, i64 0, i32 4, i32 2
  %163 = bitcast i8** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = sub i64 %164, %158
  %166 = icmp ugt i64 %161, %165
  br i1 %166, label %167, label %172

167:                                              ; preds = %150
  %168 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %152, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %168, i32 32, i32 4) #13
  %169 = load i64, i64* %157, align 8
  %170 = sub i64 0, %169
  %171 = and i64 %170, 3
  br label %172

172:                                              ; preds = %167, %150
  %173 = phi i64 [ %169, %167 ], [ %158, %150 ]
  %174 = phi i64 [ %171, %167 ], [ %160, %150 ]
  %175 = inttoptr i64 %173 to i8*
  %176 = getelementptr inbounds i8, i8* %175, i64 %174
  %177 = getelementptr inbounds i8, i8* %176, i64 32
  store i8* %177, i8** %156, align 8
  %178 = bitcast i8* %176 to %struct.SkPoint*
  %179 = bitcast %struct.SkPoint* %3 to i64*
  %180 = bitcast i8* %176 to i64*
  %181 = load i64, i64* %179, align 4
  store i64 %181, i64* %180, align 4
  %182 = getelementptr inbounds i8, i8* %176, i64 8
  %183 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 1
  %184 = bitcast %struct.SkPoint* %183 to i64*
  %185 = bitcast i8* %182 to i64*
  %186 = load i64, i64* %184, align 4
  store i64 %186, i64* %185, align 4
  %187 = getelementptr inbounds i8, i8* %176, i64 16
  %188 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 2
  %189 = bitcast %struct.SkPoint* %188 to i64*
  %190 = bitcast i8* %187 to i64*
  %191 = load i64, i64* %189, align 4
  store i64 %191, i64* %190, align 4
  %192 = getelementptr inbounds i8, i8* %176, i64 24
  %193 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 3
  %194 = bitcast %struct.SkPoint* %193 to i64*
  %195 = bitcast i8* %192 to i64*
  %196 = load i64, i64* %194, align 4
  store i64 %196, i64* %195, align 4
  br label %197

197:                                              ; preds = %172, %146
  %198 = phi %struct.SkPoint* [ null, %146 ], [ %178, %172 ]
  store %struct.SkPoint* %198, %struct.SkPoint** %10, align 8
  call void @_ZN10SkRecorder6appendIN9SkRecords9DrawPatchEJRK7SkPaintP7SkPointPjS7_R11SkBlendModeEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint* dereferenceable(72) %5, %struct.SkPoint** nonnull dereferenceable(8) %8, i32** nonnull dereferenceable(8) %9, %struct.SkPoint** nonnull dereferenceable(8) %10, i32* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords9DrawPatchEJRK7SkPaintP7SkPointPjS7_R11SkBlendModeEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint* dereferenceable(72), %struct.SkPoint** dereferenceable(8), i32** dereferenceable(8), %struct.SkPoint** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %8 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %7, align 8
  %9 = icmp eq %class.SkMiniRecorder* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %7, align 8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %8, %class.SkCanvas* %11) #13
  br label %12

12:                                               ; preds = %6, %10
  %13 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %14 = load %class.SkRecord*, %class.SkRecord** %13, align 8
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %12
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %14) #13
  %21 = load i32, i32* %15, align 4
  br label %22

22:                                               ; preds = %20, %12
  %23 = phi i32 [ %21, %20 ], [ %16, %12 ]
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %15, align 4
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %25, align 8
  %27 = sext i32 %23 to i64
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 112
  store i64 %30, i64* %28, align 8
  %31 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 0, %33
  %35 = and i64 %34, 7
  %36 = or i64 %35, 104
  %37 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 2
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %33
  %41 = icmp ugt i64 %36, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %22
  %43 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %43, i32 104, i32 8) #13
  %44 = load i64, i64* %32, align 8
  %45 = sub i64 0, %44
  %46 = and i64 %45, 7
  br label %47

47:                                               ; preds = %22, %42
  %48 = phi i64 [ %44, %42 ], [ %33, %22 ]
  %49 = phi i64 [ %46, %42 ], [ %35, %22 ]
  %50 = inttoptr i64 %48 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = getelementptr inbounds i8, i8* %51, i64 104
  store i8* %52, i8** %31, align 8
  %53 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %26, i64 %27, i32 0
  store i32 28, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %26, i64 %27, i32 1
  store i8* %51, i8** %54, align 8
  %55 = bitcast i8* %51 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %55, %class.SkPaint* dereferenceable(72) %1) #13
  %56 = getelementptr inbounds i8, i8* %51, i64 72
  %57 = bitcast %struct.SkPoint** %2 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8* %56 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %51, i64 80
  %61 = bitcast i32** %3 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast i8* %60 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds i8, i8* %51, i64 88
  %65 = bitcast %struct.SkPoint** %4 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast i8* %64 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds i8, i8* %51, i64 96
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %5, align 4
  store i32 %70, i32* %69, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint(%class.SkRecorder*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32* readonly, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %struct.SkRect* readonly, %class.SkPaint*) unnamed_addr #0 align 2 {
  %11 = bitcast i32* %4 to i8*
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %class.SkPaint*, align 8
  %15 = alloca %class.sk_sp.70, align 8
  %16 = alloca %struct.SkRSXform*, align 8
  %17 = alloca %struct.SkRect*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca %struct.SkRect*, align 8
  store i32 %5, i32* %12, align 4
  store i32 %6, i32* %13, align 4
  %20 = bitcast %class.SkPaint** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = icmp eq %class.SkPaint* %9, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %24 = load %class.SkRecord*, %class.SkRecord** %23, align 8
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %24, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 80
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %24, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 72
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %24, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %22
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %24, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 72, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %39, %22
  %45 = phi i64 [ %41, %39 ], [ %30, %22 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %22 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 72
  store i8* %49, i8** %28, align 8
  %50 = bitcast i8* %48 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %50, %class.SkPaint* nonnull dereferenceable(72) %9) #13
  br label %51

51:                                               ; preds = %10, %44
  %52 = phi %class.SkPaint* [ %50, %44 ], [ null, %10 ]
  store %class.SkPaint* %52, %class.SkPaint** %14, align 8
  %53 = bitcast %class.sk_sp.70* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  %54 = icmp eq %class.SkImage* %1, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic, !noalias !74
  br label %58

58:                                               ; preds = %51, %55
  %59 = getelementptr inbounds %class.sk_sp.70, %class.sk_sp.70* %15, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %59, align 8, !alias.scope !74
  %60 = bitcast %struct.SkRSXform** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  %61 = sext i32 %5 to i64
  %62 = tail call %struct.SkRSXform* @_ZN10SkRecorder4copyI9SkRSXformEEPT_PKS2_m(%class.SkRecorder* %0, %struct.SkRSXform* %2, i64 %61)
  store %struct.SkRSXform* %62, %struct.SkRSXform** %16, align 8
  %63 = bitcast %struct.SkRect** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  %64 = tail call %struct.SkRect* @_ZN10SkRecorder4copyI6SkRectEEPT_PKS2_m(%class.SkRecorder* %0, %struct.SkRect* %3, i64 %61)
  store %struct.SkRect* %64, %struct.SkRect** %17, align 8
  %65 = bitcast i32** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  %66 = icmp eq i32* %4, null
  br i1 %66, label %234, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %69 = load %class.SkRecord*, %class.SkRecord** %68, align 8
  %70 = shl nsw i64 %61, 2
  %71 = add nsw i64 %70, 4
  %72 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %69, i64 0, i32 5
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %71, %73
  store i64 %74, i64* %72, align 8
  %75 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %69, i64 0, i32 4
  %76 = icmp sgt i32 %5, -1
  br i1 %76, label %78, label %77

77:                                               ; preds = %67
  tail call void @abort() #15
  unreachable

78:                                               ; preds = %67
  %79 = icmp ult i32 %5, 1073741824
  br i1 %79, label %81, label %80

80:                                               ; preds = %78
  tail call void @abort() #15
  unreachable

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %69, i64 0, i32 4, i32 1
  %83 = bitcast i8** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 0, %84
  %86 = and i64 %85, 3
  %87 = and i64 %70, 4294967292
  %88 = or i64 %86, %87
  %89 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %69, i64 0, i32 4, i32 2
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %91, %84
  %93 = icmp ugt i64 %88, %92
  br i1 %93, label %94, label %99

94:                                               ; preds = %81
  %95 = trunc i64 %70 to i32
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %75, i32 %95, i32 4) #13
  %96 = load i64, i64* %83, align 8
  %97 = sub i64 0, %96
  %98 = and i64 %97, 3
  br label %99

99:                                               ; preds = %94, %81
  %100 = phi i64 [ %96, %94 ], [ %84, %81 ]
  %101 = phi i64 [ %98, %94 ], [ %86, %81 ]
  %102 = inttoptr i64 %100 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 %101
  %104 = getelementptr inbounds i8, i8* %103, i64 %87
  store i8* %104, i8** %82, align 8
  %105 = bitcast i8* %103 to i32*
  %106 = icmp eq i32 %5, 0
  br i1 %106, label %234, label %107

107:                                              ; preds = %99
  %108 = icmp ult i32 %5, 8
  br i1 %108, label %197, label %109

109:                                              ; preds = %107
  %110 = shl nsw i64 %61, 2
  %111 = or i64 %101, %110
  %112 = getelementptr i8, i8* %102, i64 %111
  %113 = getelementptr i32, i32* %4, i64 %61
  %114 = bitcast i32* %113 to i8*
  %115 = icmp ult i8* %103, %114
  %116 = icmp ugt i8* %112, %11
  %117 = and i1 %115, %116
  br i1 %117, label %197, label %118

118:                                              ; preds = %109
  %119 = and i64 %61, -8
  %120 = add nsw i64 %119, -8
  %121 = lshr exact i64 %120, 3
  %122 = add nuw nsw i64 %121, 1
  %123 = and i64 %122, 3
  %124 = icmp ult i64 %120, 24
  br i1 %124, label %176, label %125

125:                                              ; preds = %118
  %126 = sub nsw i64 %122, %123
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i64 [ 0, %125 ], [ %173, %127 ]
  %129 = phi i64 [ %126, %125 ], [ %174, %127 ]
  %130 = getelementptr inbounds i32, i32* %105, i64 %128
  %131 = getelementptr inbounds i32, i32* %4, i64 %128
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !77
  %134 = getelementptr inbounds i32, i32* %131, i64 4
  %135 = bitcast i32* %134 to <4 x i32>*
  %136 = load <4 x i32>, <4 x i32>* %135, align 4, !alias.scope !77
  %137 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %137, align 4, !alias.scope !80, !noalias !77
  %138 = getelementptr inbounds i32, i32* %130, i64 4
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %136, <4 x i32>* %139, align 4, !alias.scope !80, !noalias !77
  %140 = or i64 %128, 8
  %141 = getelementptr inbounds i32, i32* %105, i64 %140
  %142 = getelementptr inbounds i32, i32* %4, i64 %140
  %143 = bitcast i32* %142 to <4 x i32>*
  %144 = load <4 x i32>, <4 x i32>* %143, align 4, !alias.scope !77
  %145 = getelementptr inbounds i32, i32* %142, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4, !alias.scope !77
  %148 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %144, <4 x i32>* %148, align 4, !alias.scope !80, !noalias !77
  %149 = getelementptr inbounds i32, i32* %141, i64 4
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %147, <4 x i32>* %150, align 4, !alias.scope !80, !noalias !77
  %151 = or i64 %128, 16
  %152 = getelementptr inbounds i32, i32* %105, i64 %151
  %153 = getelementptr inbounds i32, i32* %4, i64 %151
  %154 = bitcast i32* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4, !alias.scope !77
  %156 = getelementptr inbounds i32, i32* %153, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4, !alias.scope !77
  %159 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %155, <4 x i32>* %159, align 4, !alias.scope !80, !noalias !77
  %160 = getelementptr inbounds i32, i32* %152, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %158, <4 x i32>* %161, align 4, !alias.scope !80, !noalias !77
  %162 = or i64 %128, 24
  %163 = getelementptr inbounds i32, i32* %105, i64 %162
  %164 = getelementptr inbounds i32, i32* %4, i64 %162
  %165 = bitcast i32* %164 to <4 x i32>*
  %166 = load <4 x i32>, <4 x i32>* %165, align 4, !alias.scope !77
  %167 = getelementptr inbounds i32, i32* %164, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  %169 = load <4 x i32>, <4 x i32>* %168, align 4, !alias.scope !77
  %170 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %166, <4 x i32>* %170, align 4, !alias.scope !80, !noalias !77
  %171 = getelementptr inbounds i32, i32* %163, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %169, <4 x i32>* %172, align 4, !alias.scope !80, !noalias !77
  %173 = add i64 %128, 32
  %174 = add i64 %129, -4
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %127, !llvm.loop !82

176:                                              ; preds = %127, %118
  %177 = phi i64 [ 0, %118 ], [ %173, %127 ]
  %178 = icmp eq i64 %123, 0
  br i1 %178, label %195, label %179

179:                                              ; preds = %176, %179
  %180 = phi i64 [ %192, %179 ], [ %177, %176 ]
  %181 = phi i64 [ %193, %179 ], [ %123, %176 ]
  %182 = getelementptr inbounds i32, i32* %105, i64 %180
  %183 = getelementptr inbounds i32, i32* %4, i64 %180
  %184 = bitcast i32* %183 to <4 x i32>*
  %185 = load <4 x i32>, <4 x i32>* %184, align 4, !alias.scope !77
  %186 = getelementptr inbounds i32, i32* %183, i64 4
  %187 = bitcast i32* %186 to <4 x i32>*
  %188 = load <4 x i32>, <4 x i32>* %187, align 4, !alias.scope !77
  %189 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %185, <4 x i32>* %189, align 4, !alias.scope !80, !noalias !77
  %190 = getelementptr inbounds i32, i32* %182, i64 4
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %188, <4 x i32>* %191, align 4, !alias.scope !80, !noalias !77
  %192 = add i64 %180, 8
  %193 = add i64 %181, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %179, !llvm.loop !83

195:                                              ; preds = %179, %176
  %196 = icmp eq i64 %119, %61
  br i1 %196, label %234, label %197

197:                                              ; preds = %195, %109, %107
  %198 = phi i64 [ 0, %109 ], [ 0, %107 ], [ %119, %195 ]
  %199 = xor i64 %198, -1
  %200 = add nsw i64 %199, %61
  %201 = and i64 %61, 3
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %212, label %203

203:                                              ; preds = %197, %203
  %204 = phi i64 [ %209, %203 ], [ %198, %197 ]
  %205 = phi i64 [ %210, %203 ], [ %201, %197 ]
  %206 = getelementptr inbounds i32, i32* %105, i64 %204
  %207 = getelementptr inbounds i32, i32* %4, i64 %204
  %208 = load i32, i32* %207, align 4
  store i32 %208, i32* %206, align 4
  %209 = add nuw i64 %204, 1
  %210 = add i64 %205, -1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %203, !llvm.loop !84

212:                                              ; preds = %203, %197
  %213 = phi i64 [ %198, %197 ], [ %209, %203 ]
  %214 = icmp ult i64 %200, 3
  br i1 %214, label %234, label %215

215:                                              ; preds = %212, %215
  %216 = phi i64 [ %232, %215 ], [ %213, %212 ]
  %217 = getelementptr inbounds i32, i32* %105, i64 %216
  %218 = getelementptr inbounds i32, i32* %4, i64 %216
  %219 = load i32, i32* %218, align 4
  store i32 %219, i32* %217, align 4
  %220 = add nuw i64 %216, 1
  %221 = getelementptr inbounds i32, i32* %105, i64 %220
  %222 = getelementptr inbounds i32, i32* %4, i64 %220
  %223 = load i32, i32* %222, align 4
  store i32 %223, i32* %221, align 4
  %224 = add nuw i64 %216, 2
  %225 = getelementptr inbounds i32, i32* %105, i64 %224
  %226 = getelementptr inbounds i32, i32* %4, i64 %224
  %227 = load i32, i32* %226, align 4
  store i32 %227, i32* %225, align 4
  %228 = add nuw i64 %216, 3
  %229 = getelementptr inbounds i32, i32* %105, i64 %228
  %230 = getelementptr inbounds i32, i32* %4, i64 %228
  %231 = load i32, i32* %230, align 4
  store i32 %231, i32* %229, align 4
  %232 = add nuw i64 %216, 4
  %233 = icmp eq i64 %232, %61
  br i1 %233, label %234, label %215, !llvm.loop !85

234:                                              ; preds = %212, %215, %195, %58, %99
  %235 = phi i32* [ null, %58 ], [ %105, %99 ], [ %105, %195 ], [ %105, %215 ], [ %105, %212 ]
  store i32* %235, i32** %18, align 8
  %236 = bitcast %struct.SkRect** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #13
  %237 = icmp eq %struct.SkRect* %8, null
  br i1 %237, label %268, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %240 = load %class.SkRecord*, %class.SkRecord** %239, align 8
  %241 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %240, i64 0, i32 5
  %242 = load i64, i64* %241, align 8
  %243 = add i64 %242, 20
  store i64 %243, i64* %241, align 8
  %244 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %240, i64 0, i32 4, i32 1
  %245 = bitcast i8** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = sub i64 0, %246
  %248 = and i64 %247, 3
  %249 = or i64 %248, 16
  %250 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %240, i64 0, i32 4, i32 2
  %251 = bitcast i8** %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = sub i64 %252, %246
  %254 = icmp ugt i64 %249, %253
  br i1 %254, label %255, label %260

255:                                              ; preds = %238
  %256 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %240, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %256, i32 16, i32 4) #13
  %257 = load i64, i64* %245, align 8
  %258 = sub i64 0, %257
  %259 = and i64 %258, 3
  br label %260

260:                                              ; preds = %255, %238
  %261 = phi i64 [ %257, %255 ], [ %246, %238 ]
  %262 = phi i64 [ %259, %255 ], [ %248, %238 ]
  %263 = inttoptr i64 %261 to i8*
  %264 = getelementptr inbounds i8, i8* %263, i64 %262
  %265 = getelementptr inbounds i8, i8* %264, i64 16
  store i8* %265, i8** %244, align 8
  %266 = bitcast i8* %264 to %struct.SkRect*
  %267 = bitcast %struct.SkRect* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %264, i8* nonnull align 4 %267, i64 16, i1 false) #13
  br label %268

268:                                              ; preds = %234, %260
  %269 = phi %struct.SkRect* [ %266, %260 ], [ null, %234 ]
  store %struct.SkRect* %269, %struct.SkRect** %19, align 8
  call void @_ZN10SkRecorder6appendIN9SkRecords9DrawAtlasEJP7SkPaint5sk_spI7SkImageEP9SkRSXformP6SkRectPjRiR11SkBlendModeRK17SkSamplingOptionsSB_EEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint** nonnull dereferenceable(8) %14, %class.sk_sp.70* nonnull dereferenceable(8) %15, %struct.SkRSXform** nonnull dereferenceable(8) %16, %struct.SkRect** nonnull dereferenceable(8) %17, i32** nonnull dereferenceable(8) %18, i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %13, %struct.SkSamplingOptions* dereferenceable(20) %7, %struct.SkRect** nonnull dereferenceable(8) %19)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  %270 = load %class.SkImage*, %class.SkImage** %59, align 8
  %271 = icmp eq %class.SkImage* %270, null
  br i1 %271, label %282, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %class.SkImage, %class.SkImage* %270, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = atomicrmw add i32* %273, i32 -1 acq_rel
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %282

276:                                              ; preds = %272
  %277 = bitcast %class.SkImage* %270 to %class.SkRefCntBase*
  %278 = bitcast %class.SkImage* %270 to void (%class.SkRefCntBase*)***
  %279 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %278, align 8
  %280 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %279, i64 2
  %281 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %280, align 8
  call void %281(%class.SkRefCntBase* nonnull %277) #13
  br label %282

282:                                              ; preds = %268, %272, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords9DrawAtlasEJP7SkPaint5sk_spI7SkImageEP9SkRSXformP6SkRectPjRiR11SkBlendModeRK17SkSamplingOptionsSB_EEEvDpOT0_(%class.SkRecorder*, %class.SkPaint** dereferenceable(8), %class.sk_sp.70* dereferenceable(8), %struct.SkRSXform** dereferenceable(8), %struct.SkRect** dereferenceable(8), i32** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), %struct.SkSamplingOptions* dereferenceable(20), %struct.SkRect** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %12 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %11, align 8
  %13 = icmp eq %class.SkMiniRecorder* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %11, align 8
  %15 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %12, %class.SkCanvas* %15) #13
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %18 = load %class.SkRecord*, %class.SkRecord** %17, align 8
  %19 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %18, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %18) #13
  %25 = load i32, i32* %19, align 4
  br label %26

26:                                               ; preds = %24, %16
  %27 = phi i32 [ %25, %24 ], [ %20, %16 ]
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %19, align 4
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %18, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %29, align 8
  %31 = sext i32 %27 to i64
  %32 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %18, i64 0, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 88
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %18, i64 0, i32 4, i32 1
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 0, %37
  %39 = and i64 %38, 7
  %40 = or i64 %39, 80
  %41 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %18, i64 0, i32 4, i32 2
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %43, %37
  %45 = icmp ugt i64 %40, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %26
  %47 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %18, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %47, i32 80, i32 8) #13
  %48 = load i64, i64* %36, align 8
  %49 = sub i64 0, %48
  %50 = and i64 %49, 7
  br label %51

51:                                               ; preds = %26, %46
  %52 = phi i64 [ %48, %46 ], [ %37, %26 ]
  %53 = phi i64 [ %50, %46 ], [ %39, %26 ]
  %54 = inttoptr i64 %52 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  %56 = getelementptr inbounds i8, i8* %55, i64 80
  store i8* %56, i8** %35, align 8
  %57 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %30, i64 %31, i32 0
  store i32 35, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %30, i64 %31, i32 1
  store i8* %55, i8** %58, align 8
  %59 = bitcast %class.SkPaint** %1 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8* %55 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %55, i64 8
  %63 = getelementptr inbounds %class.sk_sp.70, %class.sk_sp.70* %2, i64 0, i32 0
  %64 = bitcast %class.sk_sp.70* %2 to i64*
  %65 = load i64, i64* %64, align 8
  store %class.SkImage* null, %class.SkImage** %63, align 8
  %66 = bitcast i8* %62 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %55, i64 16
  %68 = bitcast %struct.SkRSXform** %3 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast i8* %67 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %55, i64 24
  %72 = bitcast %struct.SkRect** %4 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast i8* %71 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %55, i64 32
  %76 = bitcast i32** %5 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast i8* %75 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %55, i64 40
  %80 = bitcast i8* %79 to i32*
  %81 = load i32, i32* %6, align 4
  store i32 %81, i32* %80, align 8
  %82 = getelementptr inbounds i8, i8* %55, i64 44
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %7, align 4
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds i8, i8* %55, i64 48
  %86 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %8, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 4 %86, i64 20, i1 false)
  %87 = getelementptr inbounds i8, i8* %55, i64 72
  %88 = bitcast %struct.SkRect** %9 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast i8* %87 to i64*
  store i64 %89, i64* %90, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.SkRSXform* @_ZN10SkRecorder4copyI9SkRSXformEEPT_PKS2_m(%class.SkRecorder*, %struct.SkRSXform*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %struct.SkRSXform* %1, null
  br i1 %4, label %74, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %7 = load %class.SkRecord*, %class.SkRecord** %6, align 8
  %8 = shl i64 %2, 4
  %9 = or i64 %8, 4
  %10 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4
  %14 = icmp ult i64 %2, 4294967296
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  tail call void @abort() #15
  unreachable

16:                                               ; preds = %5
  %17 = trunc i64 %2 to i32
  %18 = icmp ult i32 %17, 268435456
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @abort() #15
  unreachable

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 0, %23
  %25 = and i64 %24, 3
  %26 = and i64 %8, 4294967280
  %27 = or i64 %25, %26
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4, i32 2
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %30, %23
  %32 = icmp ugt i64 %27, %31
  br i1 %32, label %33, label %38

33:                                               ; preds = %20
  %34 = trunc i64 %8 to i32
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 %34, i32 4) #13
  %35 = load i64, i64* %22, align 8
  %36 = sub i64 0, %35
  %37 = and i64 %36, 3
  br label %38

38:                                               ; preds = %20, %33
  %39 = phi i64 [ %35, %33 ], [ %23, %20 ]
  %40 = phi i64 [ %37, %33 ], [ %25, %20 ]
  %41 = inttoptr i64 %39 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %40
  %43 = getelementptr inbounds i8, i8* %42, i64 %26
  store i8* %43, i8** %21, align 8
  %44 = bitcast i8* %42 to %struct.SkRSXform*
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %74, label %46

46:                                               ; preds = %38
  %47 = and i64 %2, 1
  %48 = icmp eq i64 %2, 1
  br i1 %48, label %66, label %49

49:                                               ; preds = %46
  %50 = sub i64 %2, %47
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %63, %51 ]
  %53 = phi i64 [ %50, %49 ], [ %64, %51 ]
  %54 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %44, i64 %52
  %55 = bitcast %struct.SkRSXform* %54 to i8*
  %56 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %1, i64 %52
  %57 = bitcast %struct.SkRSXform* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %57, i64 16, i1 false)
  %58 = or i64 %52, 1
  %59 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %44, i64 %58
  %60 = bitcast %struct.SkRSXform* %59 to i8*
  %61 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %1, i64 %58
  %62 = bitcast %struct.SkRSXform* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %62, i64 16, i1 false)
  %63 = add nuw i64 %52, 2
  %64 = add i64 %53, -2
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %51

66:                                               ; preds = %51, %46
  %67 = phi i64 [ 0, %46 ], [ %63, %51 ]
  %68 = icmp eq i64 %47, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %44, i64 %67
  %71 = bitcast %struct.SkRSXform* %70 to i8*
  %72 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %1, i64 %67
  %73 = bitcast %struct.SkRSXform* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %73, i64 16, i1 false)
  br label %74

74:                                               ; preds = %69, %66, %38, %3
  %75 = phi %struct.SkRSXform* [ null, %3 ], [ %44, %38 ], [ %44, %66 ], [ %44, %69 ]
  ret %struct.SkRSXform* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.SkRect* @_ZN10SkRecorder4copyI6SkRectEEPT_PKS2_m(%class.SkRecorder*, %struct.SkRect*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %struct.SkRect* %1, null
  br i1 %4, label %74, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %7 = load %class.SkRecord*, %class.SkRecord** %6, align 8
  %8 = shl i64 %2, 4
  %9 = or i64 %8, 4
  %10 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4
  %14 = icmp ult i64 %2, 4294967296
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  tail call void @abort() #15
  unreachable

16:                                               ; preds = %5
  %17 = trunc i64 %2 to i32
  %18 = icmp ult i32 %17, 268435456
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @abort() #15
  unreachable

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 0, %23
  %25 = and i64 %24, 3
  %26 = and i64 %8, 4294967280
  %27 = or i64 %25, %26
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4, i32 2
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %30, %23
  %32 = icmp ugt i64 %27, %31
  br i1 %32, label %33, label %38

33:                                               ; preds = %20
  %34 = trunc i64 %8 to i32
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 %34, i32 4) #13
  %35 = load i64, i64* %22, align 8
  %36 = sub i64 0, %35
  %37 = and i64 %36, 3
  br label %38

38:                                               ; preds = %20, %33
  %39 = phi i64 [ %35, %33 ], [ %23, %20 ]
  %40 = phi i64 [ %37, %33 ], [ %25, %20 ]
  %41 = inttoptr i64 %39 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %40
  %43 = getelementptr inbounds i8, i8* %42, i64 %26
  store i8* %43, i8** %21, align 8
  %44 = bitcast i8* %42 to %struct.SkRect*
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %74, label %46

46:                                               ; preds = %38
  %47 = and i64 %2, 1
  %48 = icmp eq i64 %2, 1
  br i1 %48, label %66, label %49

49:                                               ; preds = %46
  %50 = sub i64 %2, %47
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %63, %51 ]
  %53 = phi i64 [ %50, %49 ], [ %64, %51 ]
  %54 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %44, i64 %52
  %55 = bitcast %struct.SkRect* %54 to i8*
  %56 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 %52
  %57 = bitcast %struct.SkRect* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %57, i64 16, i1 false)
  %58 = or i64 %52, 1
  %59 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %44, i64 %58
  %60 = bitcast %struct.SkRect* %59 to i8*
  %61 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 %58
  %62 = bitcast %struct.SkRect* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %62, i64 16, i1 false)
  %63 = add nuw i64 %52, 2
  %64 = add i64 %53, -2
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %51

66:                                               ; preds = %51, %46
  %67 = phi i64 [ 0, %46 ], [ %63, %51 ]
  %68 = icmp eq i64 %47, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %44, i64 %67
  %71 = bitcast %struct.SkRect* %70 to i8*
  %72 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 %67
  %73 = bitcast %struct.SkRect* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %73, i64 16, i1 false)
  br label %74

74:                                               ; preds = %69, %66, %38, %3
  %75 = phi %struct.SkRect* [ null, %3 ], [ %44, %38 ], [ %44, %66 ], [ %44, %69 ]
  ret %struct.SkRect* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec(%class.SkRecorder*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec* dereferenceable(40)) unnamed_addr #0 align 2 {
  tail call void @_ZN10SkRecorder6appendIN9SkRecords13DrawShadowRecEJRK6SkPathRK15SkDrawShadowRecEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPath* dereferenceable(16) %1, %struct.SkDrawShadowRec* dereferenceable(40) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords13DrawShadowRecEJRK6SkPathRK15SkDrawShadowRecEEEvDpOT0_(%class.SkRecorder*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 64
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 56
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 56, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 56
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 37, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to %"struct.SkRecords::PreCachedPath"*
  tail call void @_ZN9SkRecords13PreCachedPathC1ERK6SkPath(%"struct.SkRecords::PreCachedPath"* %52, %class.SkPath* dereferenceable(16) %1) #13
  %53 = getelementptr inbounds i8, i8* %48, i64 16
  %54 = bitcast %struct.SkDrawShadowRec* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 4 %54, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder16onDrawAnnotationERK6SkRectPKcP6SkData(%class.SkRecorder*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.sk_sp.77, align 8
  %7 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* %2) #13
  %8 = bitcast %class.sk_sp.77* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = icmp eq %class.SkData* %3, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkData, %class.SkData* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic, !noalias !86
  br label %13

13:                                               ; preds = %4, %10
  %14 = getelementptr inbounds %class.sk_sp.77, %class.sk_sp.77* %6, i64 0, i32 0
  store %class.SkData* %3, %class.SkData** %14, align 8, !alias.scope !86
  call void @_ZN10SkRecorder6appendIN9SkRecords14DrawAnnotationEJRK6SkRect8SkString5sk_spI6SkDataEEEEvDpOT0_(%class.SkRecorder* %0, %struct.SkRect* dereferenceable(16) %1, %class.SkString* nonnull dereferenceable(8) %5, %class.sk_sp.77* nonnull dereferenceable(8) %6)
  %15 = load %class.SkData*, %class.SkData** %14, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %15) #13
  %22 = bitcast %class.SkData* %15 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %22) #13
  br label %23

23:                                               ; preds = %13, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords14DrawAnnotationEJRK6SkRect8SkString5sk_spI6SkDataEEEEvDpOT0_(%class.SkRecorder*, %struct.SkRect* dereferenceable(16), %class.SkString* dereferenceable(8), %class.sk_sp.77* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %6 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %5, align 8
  %7 = icmp eq %class.SkMiniRecorder* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %5, align 8
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %6, %class.SkCanvas* %9) #13
  br label %10

10:                                               ; preds = %4, %8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %12 = load %class.SkRecord*, %class.SkRecord** %11, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %12) #13
  %19 = load i32, i32* %13, align 4
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi i32 [ %19, %18 ], [ %14, %10 ]
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %13, align 4
  %23 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %23, align 8
  %25 = sext i32 %21 to i64
  %26 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 40
  store i64 %28, i64* %26, align 8
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 0, %31
  %33 = and i64 %32, 7
  %34 = or i64 %33, 32
  %35 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 2
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %31
  %39 = icmp ugt i64 %34, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %20
  %41 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %41, i32 32, i32 8) #13
  %42 = load i64, i64* %30, align 8
  %43 = sub i64 0, %42
  %44 = and i64 %43, 7
  br label %45

45:                                               ; preds = %20, %40
  %46 = phi i64 [ %42, %40 ], [ %31, %20 ]
  %47 = phi i64 [ %44, %40 ], [ %33, %20 ]
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = getelementptr inbounds i8, i8* %49, i64 32
  store i8* %50, i8** %29, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 0
  store i32 38, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 1
  store i8* %49, i8** %52, align 8
  %53 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 4 %53, i64 16, i1 false)
  %54 = getelementptr inbounds i8, i8* %49, i64 16
  %55 = bitcast i8* %54 to %class.SkString*
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %55, %class.SkString* dereferenceable(8) %2) #13
  %56 = getelementptr inbounds i8, i8* %49, i64 24
  %57 = getelementptr inbounds %class.sk_sp.77, %class.sk_sp.77* %3, i64 0, i32 0
  %58 = bitcast %class.sk_sp.77* %3 to i64*
  %59 = load i64, i64* %58, align 8
  store %class.SkData* null, %class.SkData** %57, align 8
  %60 = bitcast i8* %56 to i64*
  store i64 %59, i64* %60, align 8
  ret void
}

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder16onDrawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkRecorder*, %struct.SkRect* dereferenceable(16), %struct.SkPoint* readonly, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.SkPoint*, align 8
  store i32 %3, i32* %7, align 4
  store i32 %5, i32* %8, align 4
  %10 = bitcast %struct.SkPoint** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = icmp eq %struct.SkPoint* %2, null
  br i1 %11, label %59, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %14 = load %class.SkRecord*, %class.SkRecord** %13, align 8
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 36
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 0, %20
  %22 = and i64 %21, 3
  %23 = or i64 %22, 32
  %24 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 2
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %20
  %28 = icmp ugt i64 %23, %27
  br i1 %28, label %29, label %34

29:                                               ; preds = %12
  %30 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %30, i32 32, i32 4) #13
  %31 = load i64, i64* %19, align 8
  %32 = sub i64 0, %31
  %33 = and i64 %32, 3
  br label %34

34:                                               ; preds = %29, %12
  %35 = phi i64 [ %31, %29 ], [ %20, %12 ]
  %36 = phi i64 [ %33, %29 ], [ %22, %12 ]
  %37 = inttoptr i64 %35 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  %39 = getelementptr inbounds i8, i8* %38, i64 32
  store i8* %39, i8** %18, align 8
  %40 = bitcast i8* %38 to %struct.SkPoint*
  %41 = bitcast %struct.SkPoint* %2 to i64*
  %42 = bitcast i8* %38 to i64*
  %43 = load i64, i64* %41, align 4
  store i64 %43, i64* %42, align 4
  %44 = getelementptr inbounds i8, i8* %38, i64 8
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1
  %46 = bitcast %struct.SkPoint* %45 to i64*
  %47 = bitcast i8* %44 to i64*
  %48 = load i64, i64* %46, align 4
  store i64 %48, i64* %47, align 4
  %49 = getelementptr inbounds i8, i8* %38, i64 16
  %50 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2
  %51 = bitcast %struct.SkPoint* %50 to i64*
  %52 = bitcast i8* %49 to i64*
  %53 = load i64, i64* %51, align 4
  store i64 %53, i64* %52, align 4
  %54 = getelementptr inbounds i8, i8* %38, i64 24
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 3
  %56 = bitcast %struct.SkPoint* %55 to i64*
  %57 = bitcast i8* %54 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 4
  br label %59

59:                                               ; preds = %34, %6
  %60 = phi %struct.SkPoint* [ null, %6 ], [ %40, %34 ]
  store %struct.SkPoint* %60, %struct.SkPoint** %9, align 8
  call void @_ZN10SkRecorder6appendIN9SkRecords14DrawEdgeAAQuadEJRK6SkRectP7SkPointRN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EER11SkBlendModeEEEvDpOT0_(%class.SkRecorder* %0, %struct.SkRect* dereferenceable(16) %1, %struct.SkPoint** nonnull dereferenceable(8) %9, i32* nonnull dereferenceable(4) %7, %struct.SkRGBA4f* dereferenceable(16) %4, i32* nonnull dereferenceable(4) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords14DrawEdgeAAQuadEJRK6SkRectP7SkPointRN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EER11SkBlendModeEEEvDpOT0_(%class.SkRecorder*, %struct.SkRect* dereferenceable(16), %struct.SkPoint** dereferenceable(8), i32* dereferenceable(4), %struct.SkRGBA4f* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %8 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %7, align 8
  %9 = icmp eq %class.SkMiniRecorder* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %7, align 8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %8, %class.SkCanvas* %11) #13
  br label %12

12:                                               ; preds = %6, %10
  %13 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %14 = load %class.SkRecord*, %class.SkRecord** %13, align 8
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %12
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %14) #13
  %21 = load i32, i32* %15, align 4
  br label %22

22:                                               ; preds = %20, %12
  %23 = phi i32 [ %21, %20 ], [ %16, %12 ]
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %15, align 4
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %25, align 8
  %27 = sext i32 %23 to i64
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 56
  store i64 %30, i64* %28, align 8
  %31 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 0, %33
  %35 = and i64 %34, 7
  %36 = or i64 %35, 48
  %37 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4, i32 2
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %33
  %41 = icmp ugt i64 %36, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %22
  %43 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %14, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %43, i32 48, i32 8) #13
  %44 = load i64, i64* %32, align 8
  %45 = sub i64 0, %44
  %46 = and i64 %45, 7
  br label %47

47:                                               ; preds = %22, %42
  %48 = phi i64 [ %44, %42 ], [ %33, %22 ]
  %49 = phi i64 [ %46, %42 ], [ %35, %22 ]
  %50 = inttoptr i64 %48 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = getelementptr inbounds i8, i8* %51, i64 48
  store i8* %52, i8** %31, align 8
  %53 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %26, i64 %27, i32 0
  store i32 39, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %26, i64 %27, i32 1
  store i8* %51, i8** %54, align 8
  %55 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 4 %55, i64 16, i1 false)
  %56 = getelementptr inbounds i8, i8* %51, i64 16
  %57 = bitcast %struct.SkPoint** %2 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8* %56 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %51, i64 24
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %3, align 4
  store i32 %62, i32* %61, align 8
  %63 = getelementptr inbounds i8, i8* %51, i64 28
  %64 = bitcast %struct.SkRGBA4f* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 16, i1 false)
  %65 = getelementptr inbounds i8, i8* %51, i64 44
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %5, align 4
  store i32 %67, i32* %66, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE(%class.SkRecorder*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint* readonly, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #0 align 2 {
  %9 = bitcast %struct.SkPoint* %3 to i8*
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %class.SkAutoTArray, align 8
  %15 = alloca %class.SkPaint*, align 8
  %16 = alloca %struct.SkPoint*, align 8
  %17 = alloca %class.SkMatrix*, align 8
  store i32 %2, i32* %10, align 4
  store i32 %7, i32* %11, align 4
  %18 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #13
  store i32 -1431655766, i32* %12, align 4
  %19 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13
  store i32 -1431655766, i32* %13, align 4
  call void @_ZN12SkCanvasPriv25GetDstClipAndMatrixCountsEPKN8SkCanvas13ImageSetEntryEiPiS4_(%"struct.SkCanvas::ImageSetEntry"* %1, i32 %2, i32* nonnull %12, i32* nonnull %13) #13
  %20 = bitcast %class.SkAutoTArray* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %class.SkAutoTArray* %14 to i64*
  store i64 0, i64* %22, align 8
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %60, label %24

24:                                               ; preds = %8
  %25 = sext i32 %2 to i64
  %26 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %25, i64 56) #13
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %28, i64 8) #13
  %30 = extractvalue { i64, i1 } %29, 1
  %31 = or i1 %27, %30
  %32 = extractvalue { i64, i1 } %29, 0
  %33 = select i1 %31, i64 -1, i64 %32
  %34 = call i8* @_Znam(i64 %33) #14
  %35 = bitcast i8* %34 to i64*
  store i64 %25, i64* %35, align 16
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to %"struct.SkCanvas::ImageSetEntry"*
  %38 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %37, i64 %25
  br label %39

39:                                               ; preds = %39, %24
  %40 = phi %"struct.SkCanvas::ImageSetEntry"* [ %37, %24 ], [ %41, %39 ]
  call void @_ZN8SkCanvas13ImageSetEntryC1Ev(%"struct.SkCanvas::ImageSetEntry"* %40) #13
  %41 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %40, i64 1
  %42 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %41, %38
  br i1 %42, label %43, label %39

43:                                               ; preds = %39
  %44 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %21, align 8
  %45 = bitcast %class.SkAutoTArray* %14 to i8**
  store i8* %36, i8** %45, align 8
  %46 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %44, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %44, i64 -1, i32 5
  %49 = bitcast i32* %48 to i8*
  %50 = bitcast i32* %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %44, i64 %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi %"struct.SkCanvas::ImageSetEntry"* [ %57, %55 ], [ %54, %53 ]
  %57 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %56, i64 -1
  call void @_ZN8SkCanvas13ImageSetEntryD1Ev(%"struct.SkCanvas::ImageSetEntry"* %57) #13
  %58 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %57, %44
  br i1 %58, label %59, label %55

59:                                               ; preds = %55, %47
  call void @_ZdaPv(i8* %49) #14
  br label %60

60:                                               ; preds = %8, %43, %59
  %61 = load i32, i32* %10, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %325, label %63

63:                                               ; preds = %325, %60
  %64 = bitcast %class.SkPaint** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  %65 = icmp eq %class.SkPaint* %6, null
  br i1 %65, label %95, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %68 = load %class.SkRecord*, %class.SkRecord** %67, align 8
  %69 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %68, i64 0, i32 5
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 80
  store i64 %71, i64* %69, align 8
  %72 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %68, i64 0, i32 4, i32 1
  %73 = bitcast i8** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 0, %74
  %76 = and i64 %75, 7
  %77 = or i64 %76, 72
  %78 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %68, i64 0, i32 4, i32 2
  %79 = bitcast i8** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %80, %74
  %82 = icmp ugt i64 %77, %81
  br i1 %82, label %83, label %88

83:                                               ; preds = %66
  %84 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %68, i64 0, i32 4
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %84, i32 72, i32 8) #13
  %85 = load i64, i64* %73, align 8
  %86 = sub i64 0, %85
  %87 = and i64 %86, 7
  br label %88

88:                                               ; preds = %83, %66
  %89 = phi i64 [ %85, %83 ], [ %74, %66 ]
  %90 = phi i64 [ %87, %83 ], [ %76, %66 ]
  %91 = inttoptr i64 %89 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 %90
  %93 = getelementptr inbounds i8, i8* %92, i64 72
  store i8* %93, i8** %72, align 8
  %94 = bitcast i8* %92 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %94, %class.SkPaint* nonnull dereferenceable(72) %6) #13
  br label %95

95:                                               ; preds = %63, %88
  %96 = phi %class.SkPaint* [ %94, %88 ], [ null, %63 ]
  store %class.SkPaint* %96, %class.SkPaint** %15, align 8
  %97 = bitcast %struct.SkPoint** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #13
  %98 = load i32, i32* %12, align 4
  %99 = sext i32 %98 to i64
  %100 = icmp eq %struct.SkPoint* %3, null
  br i1 %100, label %303, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %103 = load %class.SkRecord*, %class.SkRecord** %102, align 8
  %104 = shl nsw i64 %99, 3
  %105 = or i64 %104, 4
  %106 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %103, i64 0, i32 5
  %107 = load i64, i64* %106, align 8
  %108 = add i64 %107, %105
  store i64 %108, i64* %106, align 8
  %109 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %103, i64 0, i32 4
  %110 = icmp sgt i32 %98, -1
  br i1 %110, label %112, label %111

111:                                              ; preds = %101
  call void @abort() #15
  unreachable

112:                                              ; preds = %101
  %113 = icmp ult i32 %98, 536870912
  br i1 %113, label %115, label %114

114:                                              ; preds = %112
  call void @abort() #15
  unreachable

115:                                              ; preds = %112
  %116 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %103, i64 0, i32 4, i32 1
  %117 = bitcast i8** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 0, %118
  %120 = and i64 %119, 3
  %121 = and i64 %104, 4294967288
  %122 = or i64 %120, %121
  %123 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %103, i64 0, i32 4, i32 2
  %124 = bitcast i8** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %125, %118
  %127 = icmp ugt i64 %122, %126
  br i1 %127, label %128, label %133

128:                                              ; preds = %115
  %129 = trunc i64 %104 to i32
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %109, i32 %129, i32 4) #13
  %130 = load i64, i64* %117, align 8
  %131 = sub i64 0, %130
  %132 = and i64 %131, 3
  br label %133

133:                                              ; preds = %128, %115
  %134 = phi i64 [ %130, %128 ], [ %118, %115 ]
  %135 = phi i64 [ %132, %128 ], [ %120, %115 ]
  %136 = inttoptr i64 %134 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 %135
  %138 = getelementptr inbounds i8, i8* %137, i64 %121
  store i8* %138, i8** %116, align 8
  %139 = bitcast i8* %137 to %struct.SkPoint*
  %140 = icmp eq i32 %98, 0
  br i1 %140, label %303, label %141

141:                                              ; preds = %133
  %142 = icmp ult i32 %98, 4
  br i1 %142, label %231, label %143

143:                                              ; preds = %141
  %144 = shl nsw i64 %99, 3
  %145 = or i64 %135, %144
  %146 = getelementptr i8, i8* %136, i64 %145
  %147 = getelementptr %struct.SkPoint, %struct.SkPoint* %3, i64 %99
  %148 = bitcast %struct.SkPoint* %147 to i8*
  %149 = icmp ult i8* %137, %148
  %150 = icmp ugt i8* %146, %9
  %151 = and i1 %149, %150
  br i1 %151, label %231, label %152

152:                                              ; preds = %143
  %153 = and i64 %99, -4
  %154 = add nsw i64 %153, -4
  %155 = lshr exact i64 %154, 2
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp ult i64 %154, 12
  br i1 %158, label %210, label %159

159:                                              ; preds = %152
  %160 = sub nsw i64 %156, %157
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi i64 [ 0, %159 ], [ %207, %161 ]
  %163 = phi i64 [ %160, %159 ], [ %208, %161 ]
  %164 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %162
  %165 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %162
  %166 = bitcast %struct.SkPoint* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 4, !alias.scope !89
  %168 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %165, i64 2
  %169 = bitcast %struct.SkPoint* %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 4, !alias.scope !89
  %171 = bitcast %struct.SkPoint* %164 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %171, align 4, !alias.scope !92, !noalias !89
  %172 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %164, i64 2
  %173 = bitcast %struct.SkPoint* %172 to <2 x i64>*
  store <2 x i64> %170, <2 x i64>* %173, align 4, !alias.scope !92, !noalias !89
  %174 = or i64 %162, 4
  %175 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %174
  %176 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %174
  %177 = bitcast %struct.SkPoint* %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 4, !alias.scope !89
  %179 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %176, i64 2
  %180 = bitcast %struct.SkPoint* %179 to <2 x i64>*
  %181 = load <2 x i64>, <2 x i64>* %180, align 4, !alias.scope !89
  %182 = bitcast %struct.SkPoint* %175 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %182, align 4, !alias.scope !92, !noalias !89
  %183 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %175, i64 2
  %184 = bitcast %struct.SkPoint* %183 to <2 x i64>*
  store <2 x i64> %181, <2 x i64>* %184, align 4, !alias.scope !92, !noalias !89
  %185 = or i64 %162, 8
  %186 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %185
  %187 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %185
  %188 = bitcast %struct.SkPoint* %187 to <2 x i64>*
  %189 = load <2 x i64>, <2 x i64>* %188, align 4, !alias.scope !89
  %190 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %187, i64 2
  %191 = bitcast %struct.SkPoint* %190 to <2 x i64>*
  %192 = load <2 x i64>, <2 x i64>* %191, align 4, !alias.scope !89
  %193 = bitcast %struct.SkPoint* %186 to <2 x i64>*
  store <2 x i64> %189, <2 x i64>* %193, align 4, !alias.scope !92, !noalias !89
  %194 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %186, i64 2
  %195 = bitcast %struct.SkPoint* %194 to <2 x i64>*
  store <2 x i64> %192, <2 x i64>* %195, align 4, !alias.scope !92, !noalias !89
  %196 = or i64 %162, 12
  %197 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %196
  %198 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %196
  %199 = bitcast %struct.SkPoint* %198 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 4, !alias.scope !89
  %201 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %198, i64 2
  %202 = bitcast %struct.SkPoint* %201 to <2 x i64>*
  %203 = load <2 x i64>, <2 x i64>* %202, align 4, !alias.scope !89
  %204 = bitcast %struct.SkPoint* %197 to <2 x i64>*
  store <2 x i64> %200, <2 x i64>* %204, align 4, !alias.scope !92, !noalias !89
  %205 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %197, i64 2
  %206 = bitcast %struct.SkPoint* %205 to <2 x i64>*
  store <2 x i64> %203, <2 x i64>* %206, align 4, !alias.scope !92, !noalias !89
  %207 = add i64 %162, 16
  %208 = add i64 %163, -4
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %161, !llvm.loop !94

210:                                              ; preds = %161, %152
  %211 = phi i64 [ 0, %152 ], [ %207, %161 ]
  %212 = icmp eq i64 %157, 0
  br i1 %212, label %229, label %213

213:                                              ; preds = %210, %213
  %214 = phi i64 [ %226, %213 ], [ %211, %210 ]
  %215 = phi i64 [ %227, %213 ], [ %157, %210 ]
  %216 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %214
  %217 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %214
  %218 = bitcast %struct.SkPoint* %217 to <2 x i64>*
  %219 = load <2 x i64>, <2 x i64>* %218, align 4, !alias.scope !89
  %220 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %217, i64 2
  %221 = bitcast %struct.SkPoint* %220 to <2 x i64>*
  %222 = load <2 x i64>, <2 x i64>* %221, align 4, !alias.scope !89
  %223 = bitcast %struct.SkPoint* %216 to <2 x i64>*
  store <2 x i64> %219, <2 x i64>* %223, align 4, !alias.scope !92, !noalias !89
  %224 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %216, i64 2
  %225 = bitcast %struct.SkPoint* %224 to <2 x i64>*
  store <2 x i64> %222, <2 x i64>* %225, align 4, !alias.scope !92, !noalias !89
  %226 = add i64 %214, 4
  %227 = add i64 %215, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %213, !llvm.loop !95

229:                                              ; preds = %213, %210
  %230 = icmp eq i64 %153, %99
  br i1 %230, label %303, label %231

231:                                              ; preds = %229, %143, %141
  %232 = phi i64 [ 0, %143 ], [ 0, %141 ], [ %153, %229 ]
  %233 = sub nsw i64 %99, %232
  %234 = xor i64 %232, -1
  %235 = add nsw i64 %234, %99
  %236 = and i64 %233, 7
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %249, label %238

238:                                              ; preds = %231, %238
  %239 = phi i64 [ %246, %238 ], [ %232, %231 ]
  %240 = phi i64 [ %247, %238 ], [ %236, %231 ]
  %241 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %239
  %242 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %239
  %243 = bitcast %struct.SkPoint* %242 to i64*
  %244 = bitcast %struct.SkPoint* %241 to i64*
  %245 = load i64, i64* %243, align 4
  store i64 %245, i64* %244, align 4
  %246 = add nuw i64 %239, 1
  %247 = add i64 %240, -1
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %238, !llvm.loop !96

249:                                              ; preds = %238, %231
  %250 = phi i64 [ %232, %231 ], [ %246, %238 ]
  %251 = icmp ult i64 %235, 7
  br i1 %251, label %303, label %252

252:                                              ; preds = %249, %252
  %253 = phi i64 [ %301, %252 ], [ %250, %249 ]
  %254 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %253
  %255 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %253
  %256 = bitcast %struct.SkPoint* %255 to i64*
  %257 = bitcast %struct.SkPoint* %254 to i64*
  %258 = load i64, i64* %256, align 4
  store i64 %258, i64* %257, align 4
  %259 = add nuw i64 %253, 1
  %260 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %259
  %261 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %259
  %262 = bitcast %struct.SkPoint* %261 to i64*
  %263 = bitcast %struct.SkPoint* %260 to i64*
  %264 = load i64, i64* %262, align 4
  store i64 %264, i64* %263, align 4
  %265 = add nuw i64 %253, 2
  %266 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %265
  %267 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %265
  %268 = bitcast %struct.SkPoint* %267 to i64*
  %269 = bitcast %struct.SkPoint* %266 to i64*
  %270 = load i64, i64* %268, align 4
  store i64 %270, i64* %269, align 4
  %271 = add nuw i64 %253, 3
  %272 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %271
  %273 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %271
  %274 = bitcast %struct.SkPoint* %273 to i64*
  %275 = bitcast %struct.SkPoint* %272 to i64*
  %276 = load i64, i64* %274, align 4
  store i64 %276, i64* %275, align 4
  %277 = add nuw i64 %253, 4
  %278 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %277
  %279 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %277
  %280 = bitcast %struct.SkPoint* %279 to i64*
  %281 = bitcast %struct.SkPoint* %278 to i64*
  %282 = load i64, i64* %280, align 4
  store i64 %282, i64* %281, align 4
  %283 = add nuw i64 %253, 5
  %284 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %283
  %285 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %283
  %286 = bitcast %struct.SkPoint* %285 to i64*
  %287 = bitcast %struct.SkPoint* %284 to i64*
  %288 = load i64, i64* %286, align 4
  store i64 %288, i64* %287, align 4
  %289 = add nuw i64 %253, 6
  %290 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %289
  %291 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %289
  %292 = bitcast %struct.SkPoint* %291 to i64*
  %293 = bitcast %struct.SkPoint* %290 to i64*
  %294 = load i64, i64* %292, align 4
  store i64 %294, i64* %293, align 4
  %295 = add nuw i64 %253, 7
  %296 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %295
  %297 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %295
  %298 = bitcast %struct.SkPoint* %297 to i64*
  %299 = bitcast %struct.SkPoint* %296 to i64*
  %300 = load i64, i64* %298, align 4
  store i64 %300, i64* %299, align 4
  %301 = add nuw i64 %253, 8
  %302 = icmp eq i64 %301, %99
  br i1 %302, label %303, label %252, !llvm.loop !97

303:                                              ; preds = %249, %252, %229, %95, %133
  %304 = phi %struct.SkPoint* [ null, %95 ], [ %139, %133 ], [ %139, %229 ], [ %139, %252 ], [ %139, %249 ]
  store %struct.SkPoint* %304, %struct.SkPoint** %16, align 8
  %305 = bitcast %class.SkMatrix** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #13
  %306 = load i32, i32* %13, align 4
  %307 = sext i32 %306 to i64
  %308 = call %class.SkMatrix* @_ZN10SkRecorder4copyI8SkMatrixEEPT_PKS2_m(%class.SkRecorder* %0, %class.SkMatrix* %4, i64 %307)
  store %class.SkMatrix* %308, %class.SkMatrix** %17, align 8
  call void @_ZN10SkRecorder6appendIN9SkRecords18DrawEdgeAAImageSetEJP7SkPaint12SkAutoTArrayIN8SkCanvas13ImageSetEntryEERiP7SkPointP8SkMatrixRK17SkSamplingOptionsRNS6_17SrcRectConstraintEEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPaint** nonnull dereferenceable(8) %15, %class.SkAutoTArray* nonnull dereferenceable(8) %14, i32* nonnull dereferenceable(4) %10, %struct.SkPoint** nonnull dereferenceable(8) %16, %class.SkMatrix** nonnull dereferenceable(8) %17, %struct.SkSamplingOptions* dereferenceable(20) %5, i32* nonnull dereferenceable(4) %11)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  %309 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %21, align 8
  store %"struct.SkCanvas::ImageSetEntry"* null, %"struct.SkCanvas::ImageSetEntry"** %21, align 8
  %310 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %303
  %312 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %309, i64 -1, i32 5
  %313 = bitcast i32* %312 to i8*
  %314 = bitcast i32* %312 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %323, label %317

317:                                              ; preds = %311
  %318 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %309, i64 %315
  br label %319

319:                                              ; preds = %319, %317
  %320 = phi %"struct.SkCanvas::ImageSetEntry"* [ %321, %319 ], [ %318, %317 ]
  %321 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %320, i64 -1
  call void @_ZN8SkCanvas13ImageSetEntryD1Ev(%"struct.SkCanvas::ImageSetEntry"* %321) #13
  %322 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %321, %309
  br i1 %322, label %323, label %319

323:                                              ; preds = %319, %311
  call void @_ZdaPv(i8* %313) #14
  br label %324

324:                                              ; preds = %303, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #13
  ret void

325:                                              ; preds = %60, %325
  %326 = phi i64 [ %331, %325 ], [ 0, %60 ]
  %327 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %326
  %328 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %21, align 8
  %329 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %328, i64 %326
  %330 = call dereferenceable(56) %"struct.SkCanvas::ImageSetEntry"* @_ZN8SkCanvas13ImageSetEntryaSERKS0_(%"struct.SkCanvas::ImageSetEntry"* %329, %"struct.SkCanvas::ImageSetEntry"* dereferenceable(56) %327) #13
  %331 = add nuw nsw i64 %326, 1
  %332 = load i32, i32* %10, align 4
  %333 = sext i32 %332 to i64
  %334 = icmp slt i64 %331, %333
  br i1 %334, label %325, label %63
}

declare void @_ZN12SkCanvasPriv25GetDstClipAndMatrixCountsEPKN8SkCanvas13ImageSetEntryEiPiS4_(%"struct.SkCanvas::ImageSetEntry"*, i32, i32*, i32*) local_unnamed_addr #2

declare dereferenceable(56) %"struct.SkCanvas::ImageSetEntry"* @_ZN8SkCanvas13ImageSetEntryaSERKS0_(%"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords18DrawEdgeAAImageSetEJP7SkPaint12SkAutoTArrayIN8SkCanvas13ImageSetEntryEERiP7SkPointP8SkMatrixRK17SkSamplingOptionsRNS6_17SrcRectConstraintEEEEvDpOT0_(%class.SkRecorder*, %class.SkPaint** dereferenceable(8), %class.SkAutoTArray* dereferenceable(8), i32* dereferenceable(4), %struct.SkPoint** dereferenceable(8), %class.SkMatrix** dereferenceable(8), %struct.SkSamplingOptions* dereferenceable(20), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %10 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %9, align 8
  %11 = icmp eq %class.SkMiniRecorder* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %9, align 8
  %13 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %10, %class.SkCanvas* %13) #13
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %16 = load %class.SkRecord*, %class.SkRecord** %15, align 8
  %17 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %16) #13
  %23 = load i32, i32* %17, align 4
  br label %24

24:                                               ; preds = %22, %14
  %25 = phi i32 [ %23, %22 ], [ %18, %14 ]
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %17, align 4
  %27 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %27, align 8
  %29 = sext i32 %25 to i64
  %30 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 5
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 72
  store i64 %32, i64* %30, align 8
  %33 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 4, i32 1
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 0, %35
  %37 = and i64 %36, 7
  %38 = or i64 %37, 64
  %39 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 4, i32 2
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %41, %35
  %43 = icmp ugt i64 %38, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %24
  %45 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %45, i32 64, i32 8) #13
  %46 = load i64, i64* %34, align 8
  %47 = sub i64 0, %46
  %48 = and i64 %47, 7
  br label %49

49:                                               ; preds = %24, %44
  %50 = phi i64 [ %46, %44 ], [ %35, %24 ]
  %51 = phi i64 [ %48, %44 ], [ %37, %24 ]
  %52 = inttoptr i64 %50 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  %54 = getelementptr inbounds i8, i8* %53, i64 64
  store i8* %54, i8** %33, align 8
  %55 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %28, i64 %29, i32 0
  store i32 40, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %28, i64 %29, i32 1
  store i8* %53, i8** %56, align 8
  %57 = bitcast %class.SkPaint** %1 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 8
  %61 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %class.SkAutoTArray* %2 to i64*
  %63 = load i64, i64* %62, align 8
  store %"struct.SkCanvas::ImageSetEntry"* null, %"struct.SkCanvas::ImageSetEntry"** %61, align 8
  %64 = bitcast i8* %60 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %53, i64 16
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %3, align 4
  store i32 %67, i32* %66, align 8
  %68 = getelementptr inbounds i8, i8* %53, i64 24
  %69 = bitcast %struct.SkPoint** %4 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast i8* %68 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %53, i64 32
  %73 = bitcast %class.SkMatrix** %5 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast i8* %72 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %53, i64 40
  %77 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %6, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 4 %77, i64 20, i1 false)
  %78 = getelementptr inbounds i8, i8* %53, i64 60
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %7, align 4
  store i32 %80, i32* %79, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkMatrix* @_ZN10SkRecorder4copyI8SkMatrixEEPT_PKS2_m(%class.SkRecorder*, %class.SkMatrix*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %class.SkMatrix* %1, null
  br i1 %4, label %74, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %7 = load %class.SkRecord*, %class.SkRecord** %6, align 8
  %8 = mul i64 %2, 40
  %9 = or i64 %8, 4
  %10 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4
  %14 = icmp ult i64 %2, 4294967296
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  tail call void @abort() #15
  unreachable

16:                                               ; preds = %5
  %17 = trunc i64 %2 to i32
  %18 = icmp ult i32 %17, 107374183
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @abort() #15
  unreachable

20:                                               ; preds = %16
  %21 = mul i32 %17, 40
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4, i32 1
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 0, %24
  %26 = and i64 %25, 3
  %27 = zext i32 %21 to i64
  %28 = or i64 %26, %27
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %7, i64 0, i32 4, i32 2
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %24
  %33 = icmp ugt i64 %28, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %20
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %13, i32 %21, i32 4) #13
  %35 = load i64, i64* %23, align 8
  %36 = sub i64 0, %35
  %37 = and i64 %36, 3
  br label %38

38:                                               ; preds = %20, %34
  %39 = phi i64 [ %35, %34 ], [ %24, %20 ]
  %40 = phi i64 [ %37, %34 ], [ %26, %20 ]
  %41 = inttoptr i64 %39 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %40
  %43 = getelementptr inbounds i8, i8* %42, i64 %27
  store i8* %43, i8** %22, align 8
  %44 = bitcast i8* %42 to %class.SkMatrix*
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %74, label %46

46:                                               ; preds = %38
  %47 = and i64 %2, 1
  %48 = icmp eq i64 %2, 1
  br i1 %48, label %66, label %49

49:                                               ; preds = %46
  %50 = sub i64 %2, %47
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i64 [ 0, %49 ], [ %63, %51 ]
  %53 = phi i64 [ %50, %49 ], [ %64, %51 ]
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 %52
  %55 = bitcast %class.SkMatrix* %54 to i8*
  %56 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 %52
  %57 = bitcast %class.SkMatrix* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %57, i64 40, i1 false)
  %58 = or i64 %52, 1
  %59 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 %58
  %60 = bitcast %class.SkMatrix* %59 to i8*
  %61 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 %58
  %62 = bitcast %class.SkMatrix* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %62, i64 40, i1 false)
  %63 = add nuw i64 %52, 2
  %64 = add i64 %53, -2
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %51

66:                                               ; preds = %51, %46
  %67 = phi i64 [ 0, %46 ], [ %63, %51 ]
  %68 = icmp eq i64 %47, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %44, i64 %67
  %71 = bitcast %class.SkMatrix* %70 to i8*
  %72 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 %67
  %73 = bitcast %class.SkMatrix* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %73, i64 40, i1 false)
  br label %74

74:                                               ; preds = %69, %66, %38, %3
  %75 = phi %class.SkMatrix* [ null, %3 ], [ %44, %38 ], [ %44, %66 ], [ %44, %69 ]
  ret %class.SkMatrix* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder7onFlushEv(%class.SkRecorder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %3 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %2, align 8
  %4 = icmp eq %class.SkMiniRecorder* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %2, align 8
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %3, %class.SkCanvas* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %9 = load %class.SkRecord*, %class.SkRecord** %8, align 8
  %10 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %9, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %7
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %9) #13
  %16 = load i32, i32* %10, align 4
  br label %17

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %11, %7 ]
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %10, align 4
  %20 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %9, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %20, align 8
  %22 = sext i32 %18 to i64
  %23 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %21, i64 %22, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %21, i64 %22, i32 1
  store i8* getelementptr inbounds (%"struct.SkRecords::Flush", %"struct.SkRecords::Flush"* @_ZZN8SkRecord12allocCommandIN9SkRecords5FlushEEENSt3__19enable_ifIXsr3std8is_emptyIT_EE5valueEPS5_E4typeEvE9singleton, i64 0, i32 0), i8** %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder8willSaveEv(%class.SkRecorder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %3 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %2, align 8
  %4 = icmp eq %class.SkMiniRecorder* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %2, align 8
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %3, %class.SkCanvas* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %9 = load %class.SkRecord*, %class.SkRecord** %8, align 8
  %10 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %9, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %7
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %9) #13
  %16 = load i32, i32* %10, align 4
  br label %17

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %11, %7 ]
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %10, align 4
  %20 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %9, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %20, align 8
  %22 = sext i32 %18 to i64
  %23 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %21, i64 %22, i32 0
  store i32 3, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %21, i64 %22, i32 1
  store i8* getelementptr inbounds (%"struct.SkRecords::Save", %"struct.SkRecords::Save"* @_ZZN8SkRecord12allocCommandIN9SkRecords4SaveEEENSt3__19enable_ifIXsr3std8is_emptyIT_EE5valueEPS5_E4typeEvE9singleton, i64 0, i32 0), i8** %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkRecorder20getSaveLayerStrategyERKN8SkCanvas12SaveLayerRecE(%class.SkRecorder*, %"struct.SkCanvas::SaveLayerRec"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRect*, align 8
  %4 = alloca %class.SkPaint*, align 8
  %5 = alloca %class.sk_sp.61, align 8
  %6 = bitcast %struct.SkRect** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 0
  %8 = load %struct.SkRect*, %struct.SkRect** %7, align 8
  %9 = icmp eq %struct.SkRect* %8, null
  br i1 %9, label %40, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %12 = load %class.SkRecord*, %class.SkRecord** %11, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 20
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 0, %18
  %20 = and i64 %19, 3
  %21 = or i64 %20, 16
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 2
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %18
  %26 = icmp ugt i64 %21, %25
  br i1 %26, label %27, label %32

27:                                               ; preds = %10
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %28, i32 16, i32 4) #13
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 0, %29
  %31 = and i64 %30, 3
  br label %32

32:                                               ; preds = %27, %10
  %33 = phi i64 [ %29, %27 ], [ %18, %10 ]
  %34 = phi i64 [ %31, %27 ], [ %20, %10 ]
  %35 = inttoptr i64 %33 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %34
  %37 = getelementptr inbounds i8, i8* %36, i64 16
  store i8* %37, i8** %16, align 8
  %38 = bitcast i8* %36 to %struct.SkRect*
  %39 = bitcast %struct.SkRect* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* nonnull align 4 %39, i64 16, i1 false) #13
  br label %40

40:                                               ; preds = %2, %32
  %41 = phi %struct.SkRect* [ %38, %32 ], [ null, %2 ]
  store %struct.SkRect* %41, %struct.SkRect** %3, align 8
  %42 = bitcast %class.SkPaint** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 1
  %44 = load %class.SkPaint*, %class.SkPaint** %43, align 8
  %45 = icmp eq %class.SkPaint* %44, null
  br i1 %45, label %75, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %48 = load %class.SkRecord*, %class.SkRecord** %47, align 8
  %49 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %48, i64 0, i32 5
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 80
  store i64 %51, i64* %49, align 8
  %52 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %48, i64 0, i32 4, i32 1
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 0, %54
  %56 = and i64 %55, 7
  %57 = or i64 %56, 72
  %58 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %48, i64 0, i32 4, i32 2
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %60, %54
  %62 = icmp ugt i64 %57, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %46
  %64 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %48, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %64, i32 72, i32 8) #13
  %65 = load i64, i64* %53, align 8
  %66 = sub i64 0, %65
  %67 = and i64 %66, 7
  br label %68

68:                                               ; preds = %63, %46
  %69 = phi i64 [ %65, %63 ], [ %54, %46 ]
  %70 = phi i64 [ %67, %63 ], [ %56, %46 ]
  %71 = inttoptr i64 %69 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 %70
  %73 = getelementptr inbounds i8, i8* %72, i64 72
  store i8* %73, i8** %52, align 8
  %74 = bitcast i8* %72 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %74, %class.SkPaint* nonnull dereferenceable(72) %44) #13
  br label %75

75:                                               ; preds = %40, %68
  %76 = phi %class.SkPaint* [ %74, %68 ], [ null, %40 ]
  store %class.SkPaint* %76, %class.SkPaint** %4, align 8
  %77 = bitcast %class.sk_sp.61* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  %78 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 2
  %79 = load %class.SkImageFilter*, %class.SkImageFilter** %78, align 8
  %80 = icmp eq %class.SkImageFilter* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic, !noalias !98
  br label %84

84:                                               ; preds = %75, %81
  %85 = getelementptr inbounds %class.sk_sp.61, %class.sk_sp.61* %5, i64 0, i32 0
  store %class.SkImageFilter* %79, %class.SkImageFilter** %85, align 8, !alias.scope !98
  %86 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 3
  call void @_ZN10SkRecorder6appendIN9SkRecords9SaveLayerEJP6SkRectP7SkPaint5sk_spI13SkImageFilterERKjEEEvDpOT0_(%class.SkRecorder* %0, %struct.SkRect** nonnull dereferenceable(8) %3, %class.SkPaint** nonnull dereferenceable(8) %4, %class.sk_sp.61* nonnull dereferenceable(8) %5, i32* dereferenceable(4) %86)
  %87 = load %class.SkImageFilter*, %class.SkImageFilter** %85, align 8
  %88 = icmp eq %class.SkImageFilter* %87, null
  br i1 %88, label %99, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = bitcast %class.SkImageFilter* %87 to %class.SkRefCntBase*
  %95 = bitcast %class.SkImageFilter* %87 to void (%class.SkRefCntBase*)***
  %96 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, i64 2
  %98 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, align 8
  call void %98(%class.SkRefCntBase* nonnull %94) #13
  br label %99

99:                                               ; preds = %84, %89, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords9SaveLayerEJP6SkRectP7SkPaint5sk_spI13SkImageFilterERKjEEEvDpOT0_(%class.SkRecorder*, %struct.SkRect** dereferenceable(8), %class.SkPaint** dereferenceable(8), %class.sk_sp.61* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %7 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %6, align 8
  %8 = icmp eq %class.SkMiniRecorder* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %6, align 8
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %7, %class.SkCanvas* %10) #13
  br label %11

11:                                               ; preds = %5, %9
  %12 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %13 = load %class.SkRecord*, %class.SkRecord** %12, align 8
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %11
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %13) #13
  %20 = load i32, i32* %14, align 4
  br label %21

21:                                               ; preds = %19, %11
  %22 = phi i32 [ %20, %19 ], [ %15, %11 ]
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %14, align 4
  %24 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %24, align 8
  %26 = sext i32 %22 to i64
  %27 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 5
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 40
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 4, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 0, %32
  %34 = and i64 %33, 7
  %35 = or i64 %34, 32
  %36 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 4, i32 2
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %38, %32
  %40 = icmp ugt i64 %35, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %21
  %42 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %13, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %42, i32 32, i32 8) #13
  %43 = load i64, i64* %31, align 8
  %44 = sub i64 0, %43
  %45 = and i64 %44, 7
  br label %46

46:                                               ; preds = %21, %41
  %47 = phi i64 [ %43, %41 ], [ %32, %21 ]
  %48 = phi i64 [ %45, %41 ], [ %34, %21 ]
  %49 = inttoptr i64 %47 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 %48
  %51 = getelementptr inbounds i8, i8* %50, i64 32
  store i8* %51, i8** %30, align 8
  %52 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %25, i64 %26, i32 0
  store i32 4, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %25, i64 %26, i32 1
  store i8* %50, i8** %53, align 8
  %54 = bitcast %struct.SkRect** %1 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast i8* %50 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %50, i64 8
  %58 = bitcast %class.SkPaint** %2 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8* %57 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %50, i64 16
  %62 = getelementptr inbounds %class.sk_sp.61, %class.sk_sp.61* %3, i64 0, i32 0
  %63 = bitcast %class.sk_sp.61* %3 to i64*
  %64 = load i64, i64* %63, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %62, align 8
  %65 = bitcast i8* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds i8, i8* %50, i64 24
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %4, align 4
  store i32 %68, i32* %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkRecorder14onDoSaveBehindEPK6SkRect(%class.SkRecorder*, %struct.SkRect* readonly) unnamed_addr #0 align 2 {
  %3 = icmp eq %struct.SkRect* %1, null
  br i1 %3, label %34, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %6 = load %class.SkRecord*, %class.SkRecord** %5, align 8
  %7 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %6, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 20
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %6, i64 0, i32 4, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 0, %12
  %14 = and i64 %13, 3
  %15 = or i64 %14, 16
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %6, i64 0, i32 4, i32 2
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %12
  %20 = icmp ugt i64 %15, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %6, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %22, i32 16, i32 4) #13
  %23 = load i64, i64* %11, align 8
  %24 = sub i64 0, %23
  %25 = and i64 %24, 3
  br label %26

26:                                               ; preds = %21, %4
  %27 = phi i64 [ %23, %21 ], [ %12, %4 ]
  %28 = phi i64 [ %25, %21 ], [ %14, %4 ]
  %29 = inttoptr i64 %27 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = getelementptr inbounds i8, i8* %30, i64 16
  store i8* %31, i8** %10, align 8
  %32 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* nonnull align 4 %32, i64 16, i1 false) #13
  %33 = ptrtoint i8* %30 to i64
  br label %34

34:                                               ; preds = %2, %26
  %35 = phi i64 [ %33, %26 ], [ 0, %2 ]
  %36 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %37 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %36, align 8
  %38 = icmp eq %class.SkMiniRecorder* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %36, align 8
  %40 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %37, %class.SkCanvas* %40) #13
  br label %41

41:                                               ; preds = %34, %39
  %42 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %43 = load %class.SkRecord*, %class.SkRecord** %42, align 8
  %44 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %43, i64 0, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %41
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %43) #13
  %50 = load i32, i32* %44, align 4
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi i32 [ %50, %49 ], [ %45, %41 ]
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %44, align 4
  %54 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %43, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %54, align 8
  %56 = sext i32 %52 to i64
  %57 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %43, i64 0, i32 5
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 16
  store i64 %59, i64* %57, align 8
  %60 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %43, i64 0, i32 4, i32 1
  %61 = bitcast i8** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 0, %62
  %64 = and i64 %63, 7
  %65 = or i64 %64, 8
  %66 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %43, i64 0, i32 4, i32 2
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %68, %62
  %70 = icmp ugt i64 %65, %69
  br i1 %70, label %71, label %76

71:                                               ; preds = %51
  %72 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %43, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %72, i32 8, i32 8) #13
  %73 = load i64, i64* %61, align 8
  %74 = sub i64 0, %73
  %75 = and i64 %74, 7
  br label %76

76:                                               ; preds = %51, %71
  %77 = phi i64 [ %73, %71 ], [ %62, %51 ]
  %78 = phi i64 [ %75, %71 ], [ %64, %51 ]
  %79 = inttoptr i64 %77 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 %78
  %81 = getelementptr inbounds i8, i8* %80, i64 8
  store i8* %81, i8** %60, align 8
  %82 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %55, i64 %56, i32 0
  store i32 5, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %55, i64 %56, i32 1
  store i8* %80, i8** %83, align 8
  %84 = bitcast i8* %80 to i64*
  store i64 %35, i64* %84, align 8
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder10didRestoreEv(%class.SkRecorder*) unnamed_addr #0 align 2 {
  %2 = alloca %class.SkMatrix, align 4
  %3 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #13
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %2, %class.SkCanvas* %4) #13
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %6 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %5, align 8
  %7 = icmp eq %class.SkMiniRecorder* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %5, align 8
  call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %6, %class.SkCanvas* %4) #13
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 44
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 3
  %33 = or i64 %32, 40
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 40, i32 4) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 3
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 40
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 2, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to %"struct.SkRecords::TypedMatrix"*
  call void @_ZN9SkRecords11TypedMatrixC1ERK8SkMatrix(%"struct.SkRecords::TypedMatrix"* %52, %class.SkMatrix* nonnull dereferenceable(40) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #13
  ret void
}

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder9onMarkCTMEPKc(%class.SkRecorder*, i8*) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %3, i8* %1) #13
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %6 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %5, align 8
  %7 = icmp eq %class.SkMiniRecorder* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %5, align 8
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %6, %class.SkCanvas* %9) #13
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %12 = load %class.SkRecord*, %class.SkRecord** %11, align 8
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  call void @_ZN8SkRecord4growEv(%class.SkRecord* %12) #13
  %19 = load i32, i32* %13, align 4
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi i32 [ %19, %18 ], [ %14, %10 ]
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %13, align 4
  %23 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %23, align 8
  %25 = sext i32 %21 to i64
  %26 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 16
  store i64 %28, i64* %26, align 8
  %29 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 0, %31
  %33 = and i64 %32, 7
  %34 = or i64 %33, 8
  %35 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4, i32 2
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %31
  %39 = icmp ugt i64 %34, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %20
  %41 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %12, i64 0, i32 4
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %41, i32 8, i32 8) #13
  %42 = load i64, i64* %30, align 8
  %43 = sub i64 0, %42
  %44 = and i64 %43, 7
  br label %45

45:                                               ; preds = %20, %40
  %46 = phi i64 [ %42, %40 ], [ %31, %20 ]
  %47 = phi i64 [ %44, %40 ], [ %33, %20 ]
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = getelementptr inbounds i8, i8* %49, i64 8
  store i8* %50, i8** %29, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 0
  store i32 6, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %24, i64 %25, i32 1
  store i8* %49, i8** %52, align 8
  %53 = bitcast i8* %49 to %class.SkString*
  call void @_ZN8SkStringC1EOS_(%class.SkString* %53, %class.SkString* nonnull dereferenceable(8) %3) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder11didConcat44ERK5SkM44(%class.SkRecorder*, %class.SkM44* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %4 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %3, align 8
  %5 = icmp eq %class.SkMiniRecorder* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %3, align 8
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %4, %class.SkCanvas* %7) #13
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %10 = load %class.SkRecord*, %class.SkRecord** %9, align 8
  %11 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %10) #13
  %17 = load i32, i32* %11, align 4
  br label %18

18:                                               ; preds = %16, %8
  %19 = phi i32 [ %17, %16 ], [ %12, %8 ]
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %11, align 4
  %21 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %21, align 8
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 68
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 0, %29
  %31 = and i64 %30, 3
  %32 = or i64 %31, 64
  %33 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4, i32 2
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %29
  %37 = icmp ugt i64 %32, %36
  br i1 %37, label %38, label %43

38:                                               ; preds = %18
  %39 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %39, i32 64, i32 4) #13
  %40 = load i64, i64* %28, align 8
  %41 = sub i64 0, %40
  %42 = and i64 %41, 3
  br label %43

43:                                               ; preds = %18, %38
  %44 = phi i64 [ %40, %38 ], [ %29, %18 ]
  %45 = phi i64 [ %42, %38 ], [ %31, %18 ]
  %46 = inttoptr i64 %44 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  %48 = getelementptr inbounds i8, i8* %47, i64 64
  store i8* %48, i8** %27, align 8
  %49 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %22, i64 %23, i32 0
  store i32 12, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %22, i64 %23, i32 1
  store i8* %47, i8** %50, align 8
  %51 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %51, i64 64, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder9didSetM44ERK5SkM44(%class.SkRecorder*, %class.SkM44* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %4 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %3, align 8
  %5 = icmp eq %class.SkMiniRecorder* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %3, align 8
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %4, %class.SkCanvas* %7) #13
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %10 = load %class.SkRecord*, %class.SkRecord** %9, align 8
  %11 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %10) #13
  %17 = load i32, i32* %11, align 4
  br label %18

18:                                               ; preds = %16, %8
  %19 = phi i32 [ %17, %16 ], [ %12, %8 ]
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %11, align 4
  %21 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %21, align 8
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 68
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 0, %29
  %31 = and i64 %30, 3
  %32 = or i64 %31, 64
  %33 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4, i32 2
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %29
  %37 = icmp ugt i64 %32, %36
  br i1 %37, label %38, label %43

38:                                               ; preds = %18
  %39 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %10, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %39, i32 64, i32 4) #13
  %40 = load i64, i64* %28, align 8
  %41 = sub i64 0, %40
  %42 = and i64 %41, 3
  br label %43

43:                                               ; preds = %18, %38
  %44 = phi i64 [ %40, %38 ], [ %29, %18 ]
  %45 = phi i64 [ %42, %38 ], [ %31, %18 ]
  %46 = inttoptr i64 %44 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  %48 = getelementptr inbounds i8, i8* %47, i64 64
  store i8* %48, i8** %27, align 8
  %49 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %22, i64 %23, i32 0
  store i32 8, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %22, i64 %23, i32 1
  store i8* %47, i8** %50, align 8
  %51 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %51, i64 64, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder8didScaleEff(%class.SkRecorder*, float, float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 12
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 3
  %33 = or i64 %32, 8
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 8, i32 4) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 3
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 8
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 10, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to float*
  store float %1, float* %52, align 4
  %53 = getelementptr inbounds i8, i8* %48, i64 4
  %54 = bitcast i8* %53 to float*
  store float %2, float* %54, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12didTranslateEff(%class.SkRecorder*, float, float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 12
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 3
  %33 = or i64 %32, 8
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 8, i32 4) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 3
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 8
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 9, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to float*
  store float %1, float* %52, align 4
  %53 = getelementptr inbounds i8, i8* %48, i64 4
  %54 = bitcast i8* %53 to float*
  store float %2, float* %54, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder10onClipRectERK6SkRect8SkClipOpN8SkCanvas13ClipEdgeStyleE(%class.SkRecorder*, %struct.SkRect* dereferenceable(16), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas10onClipRectERK6SkRect8SkClipOpNS_13ClipEdgeStyleE(%class.SkCanvas* %5, %struct.SkRect* dereferenceable(16) %1, i32 %2, i32 %3) #13
  %6 = icmp eq i32 %3, 1
  %7 = and i32 %2, 2147483647
  %8 = zext i1 %6 to i32
  %9 = shl nuw i32 %8, 31
  %10 = or i32 %9, %7
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %12 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %11, align 8
  %13 = icmp eq %class.SkMiniRecorder* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %11, align 8
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %12, %class.SkCanvas* %5) #13
  br label %15

15:                                               ; preds = %4, %14
  %16 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %17 = load %class.SkRecord*, %class.SkRecord** %16, align 8
  %18 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %15
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %17) #13
  %24 = load i32, i32* %18, align 4
  br label %25

25:                                               ; preds = %23, %15
  %26 = phi i32 [ %24, %23 ], [ %19, %15 ]
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %18, align 4
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %28, align 8
  %30 = sext i32 %26 to i64
  %31 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 5
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 24
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 4, i32 1
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 0, %36
  %38 = and i64 %37, 3
  %39 = or i64 %38, 20
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 4, i32 2
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %42, %36
  %44 = icmp ugt i64 %39, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %25
  %46 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %46, i32 20, i32 4) #13
  %47 = load i64, i64* %35, align 8
  %48 = sub i64 0, %47
  %49 = and i64 %48, 3
  br label %50

50:                                               ; preds = %25, %45
  %51 = phi i64 [ %47, %45 ], [ %36, %25 ]
  %52 = phi i64 [ %49, %45 ], [ %38, %25 ]
  %53 = inttoptr i64 %51 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  %55 = getelementptr inbounds i8, i8* %54, i64 20
  store i8* %55, i8** %34, align 8
  %56 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %29, i64 %30, i32 0
  store i32 15, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %29, i64 %30, i32 1
  store i8* %54, i8** %57, align 8
  %58 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %58, i64 16, i1 false) #13
  %59 = getelementptr inbounds i8, i8* %54, i64 16
  %60 = bitcast i8* %59 to i32*
  store i32 %10, i32* %60, align 4
  ret void
}

declare void @_ZN8SkCanvas10onClipRectERK6SkRect8SkClipOpNS_13ClipEdgeStyleE(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder11onClipRRectERK7SkRRect8SkClipOpN8SkCanvas13ClipEdgeStyleE(%class.SkRecorder*, %class.SkRRect* dereferenceable(52), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas11onClipRRectERK7SkRRect8SkClipOpNS_13ClipEdgeStyleE(%class.SkCanvas* %5, %class.SkRRect* dereferenceable(52) %1, i32 %2, i32 %3) #13
  %6 = icmp eq i32 %3, 1
  %7 = and i32 %2, 2147483647
  %8 = zext i1 %6 to i32
  %9 = shl nuw i32 %8, 31
  %10 = or i32 %9, %7
  %11 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %12 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %11, align 8
  %13 = icmp eq %class.SkMiniRecorder* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %11, align 8
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %12, %class.SkCanvas* %5) #13
  br label %15

15:                                               ; preds = %4, %14
  %16 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %17 = load %class.SkRecord*, %class.SkRecord** %16, align 8
  %18 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %15
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %17) #13
  %24 = load i32, i32* %18, align 4
  br label %25

25:                                               ; preds = %23, %15
  %26 = phi i32 [ %24, %23 ], [ %19, %15 ]
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %18, align 4
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %28, align 8
  %30 = sext i32 %26 to i64
  %31 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 5
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 60
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 4, i32 1
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 0, %36
  %38 = and i64 %37, 3
  %39 = or i64 %38, 56
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 4, i32 2
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %42, %36
  %44 = icmp ugt i64 %39, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %25
  %46 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %17, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %46, i32 56, i32 4) #13
  %47 = load i64, i64* %35, align 8
  %48 = sub i64 0, %47
  %49 = and i64 %48, 3
  br label %50

50:                                               ; preds = %25, %45
  %51 = phi i64 [ %47, %45 ], [ %36, %25 ]
  %52 = phi i64 [ %49, %45 ], [ %38, %25 ]
  %53 = inttoptr i64 %51 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  %55 = getelementptr inbounds i8, i8* %54, i64 56
  store i8* %55, i8** %34, align 8
  %56 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %29, i64 %30, i32 0
  store i32 14, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %29, i64 %30, i32 1
  store i8* %54, i8** %57, align 8
  %58 = bitcast %class.SkRRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %58, i64 52, i1 false) #13
  %59 = getelementptr inbounds i8, i8* %54, i64 52
  %60 = bitcast i8* %59 to i32*
  store i32 %10, i32* %60, align 4
  ret void
}

declare void @_ZN8SkCanvas11onClipRRectERK7SkRRect8SkClipOpNS_13ClipEdgeStyleE(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder10onClipPathERK6SkPath8SkClipOpN8SkCanvas13ClipEdgeStyleE(%class.SkRecorder*, %class.SkPath* dereferenceable(16), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.SkRecords::ClipOpAndAA", align 4
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas10onClipPathERK6SkPath8SkClipOpNS_13ClipEdgeStyleE(%class.SkCanvas* %6, %class.SkPath* dereferenceable(16) %1, i32 %2, i32 %3) #13
  %7 = bitcast %"struct.SkRecords::ClipOpAndAA"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"struct.SkRecords::ClipOpAndAA", %"struct.SkRecords::ClipOpAndAA"* %5, i64 0, i32 0
  %9 = icmp eq i32 %3, 1
  %10 = and i32 %2, 2147483647
  %11 = zext i1 %9 to i32
  %12 = shl nuw i32 %11, 31
  %13 = or i32 %12, %10
  store i32 %13, i32* %8, align 4
  call void @_ZN10SkRecorder6appendIN9SkRecords8ClipPathEJRK6SkPathRNS1_11ClipOpAndAAEEEEvDpOT0_(%class.SkRecorder* %0, %class.SkPath* dereferenceable(16) %1, %"struct.SkRecords::ClipOpAndAA"* nonnull dereferenceable(4) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  ret void
}

declare void @_ZN8SkCanvas10onClipPathERK6SkPath8SkClipOpNS_13ClipEdgeStyleE(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords8ClipPathEJRK6SkPathRNS1_11ClipOpAndAAEEEEvDpOT0_(%class.SkRecorder*, %class.SkPath* dereferenceable(16), %"struct.SkRecords::ClipOpAndAA"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 32
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 24
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 24, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 24
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 13, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to %"struct.SkRecords::PreCachedPath"*
  tail call void @_ZN9SkRecords13PreCachedPathC1ERK6SkPath(%"struct.SkRecords::PreCachedPath"* %52, %class.SkPath* dereferenceable(16) %1) #13
  %53 = getelementptr inbounds %"struct.SkRecords::ClipOpAndAA", %"struct.SkRecords::ClipOpAndAA"* %2, i64 0, i32 0
  %54 = getelementptr inbounds i8, i8* %48, i64 16
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %53, align 4
  store i32 %56, i32* %55, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12onClipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkRecorder*, %class.sk_sp.58*, i32) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %class.sk_sp.58, align 8
  store i32 %2, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %5, i64 0, i32 0
  %8 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %1, i64 0, i32 0
  %9 = load %class.SkShader*, %class.SkShader** %8, align 8
  %10 = icmp eq %class.SkShader* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkShader, %class.SkShader* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  br label %14

14:                                               ; preds = %3, %11
  store %class.SkShader* %9, %class.SkShader** %7, align 8
  call void @_ZN8SkCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkCanvas* %6, %class.sk_sp.58* nonnull %5, i32 %2) #13
  %15 = load %class.SkShader*, %class.SkShader** %7, align 8
  %16 = icmp eq %class.SkShader* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.SkShader, %class.SkShader* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkShader* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkShader* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #13
  br label %27

27:                                               ; preds = %14, %17, %21
  call void @_ZN10SkRecorder6appendIN9SkRecords10ClipShaderEJ5sk_spI8SkShaderER8SkClipOpEEEvDpOT0_(%class.SkRecorder* %0, %class.sk_sp.58* dereferenceable(8) %1, i32* nonnull dereferenceable(4) %4)
  ret void
}

declare void @_ZN8SkCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkCanvas*, %class.sk_sp.58*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords10ClipShaderEJ5sk_spI8SkShaderER8SkClipOpEEEvDpOT0_(%class.SkRecorder*, %class.sk_sp.58* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 24
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 16
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 16, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 16
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 17, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %1, i64 0, i32 0
  %53 = bitcast %class.sk_sp.58* %1 to i64*
  %54 = load i64, i64* %53, align 8
  store %class.SkShader* null, %class.SkShader** %52, align 8
  %55 = bitcast i8* %48 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %48, i64 8
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4
  store i32 %58, i32* %57, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRecorder12onClipRegionERK8SkRegion8SkClipOp(%class.SkRecorder*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  store i32 %2, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas12onClipRegionERK8SkRegion8SkClipOp(%class.SkCanvas* %5, %class.SkRegion* dereferenceable(24) %1, i32 %2) #13
  call void @_ZN10SkRecorder6appendIN9SkRecords10ClipRegionEJRK8SkRegionR8SkClipOpEEEvDpOT0_(%class.SkRecorder* %0, %class.SkRegion* dereferenceable(24) %1, i32* nonnull dereferenceable(4) %4)
  ret void
}

declare void @_ZN8SkCanvas12onClipRegionERK8SkRegion8SkClipOp(%class.SkCanvas*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder6appendIN9SkRecords10ClipRegionEJRK8SkRegionR8SkClipOpEEEvDpOT0_(%class.SkRecorder*, %class.SkRegion* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 4
  %5 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %4, align 8
  %6 = icmp eq %class.SkMiniRecorder* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %4, align 8
  %8 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN14SkMiniRecorder13flushAndResetEP8SkCanvas(%class.SkMiniRecorder* nonnull %5, %class.SkCanvas* %8) #13
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 2
  %11 = load %class.SkRecord*, %class.SkRecord** %10, align 8
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  tail call void @_ZN8SkRecord4growEv(%class.SkRecord* %11) #13
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %13, %9 ]
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %12, align 4
  %22 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.SkRecord::Record"*, %"struct.SkRecord::Record"** %22, align 8
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 40
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, %30
  %32 = and i64 %31, 7
  %33 = or i64 %32, 32
  %34 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %30
  %38 = icmp ugt i64 %33, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %19
  %40 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %11, i64 0, i32 4
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %40, i32 32, i32 8) #13
  %41 = load i64, i64* %29, align 8
  %42 = sub i64 0, %41
  %43 = and i64 %42, 7
  br label %44

44:                                               ; preds = %19, %39
  %45 = phi i64 [ %41, %39 ], [ %30, %19 ]
  %46 = phi i64 [ %43, %39 ], [ %32, %19 ]
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  store i8* %49, i8** %28, align 8
  %50 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 0
  store i32 16, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkRecord::Record", %"struct.SkRecord::Record"* %23, i64 %24, i32 1
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to %class.SkRegion*
  tail call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %52, %class.SkRegion* dereferenceable(24) %1) #13
  %53 = getelementptr inbounds i8, i8* %48, i64 24
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %2, align 4
  store i32 %55, i32* %54, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10SkRecorder12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.85* noalias nocapture sret, %class.SkRecorder* nocapture readnone, %struct.SkImageInfo* nocapture readnone dereferenceable(24), %class.SkSurfaceProps* nocapture readnone dereferenceable(8)) unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %class.sk_sp.85, %class.sk_sp.85* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %5, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorderD2Ev(%class.SkRecorder*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV10SkRecorder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %class.SkDrawableList*, %class.SkDrawableList** %3, align 8
  store %class.SkDrawableList* null, %class.SkDrawableList** %3, align 8
  %5 = icmp eq %class.SkDrawableList* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %4, i64 0, i32 0, i32 0
  %8 = load %class.SkDrawable**, %class.SkDrawable*** %7, align 8
  %9 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %4, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %8, i64 %11
  %13 = icmp sgt i32 %10, 0
  br i1 %13, label %14, label %31

14:                                               ; preds = %6, %26
  %15 = phi %class.SkDrawable** [ %27, %26 ], [ %8, %6 ]
  %16 = bitcast %class.SkDrawable** %15 to %class.SkRefCntBase**
  %17 = load %class.SkRefCntBase*, %class.SkRefCntBase** %16, align 8
  %18 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = bitcast %class.SkRefCntBase* %17 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* %17) #13
  br label %26

26:                                               ; preds = %21, %14
  %27 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %15, i64 1
  %28 = icmp ult %class.SkDrawable** %27, %12
  br i1 %28, label %14, label %29

29:                                               ; preds = %26
  %30 = load %class.SkDrawable**, %class.SkDrawable*** %7, align 8
  br label %31

31:                                               ; preds = %29, %6
  %32 = phi %class.SkDrawable** [ %30, %29 ], [ %8, %6 ]
  %33 = bitcast %class.SkDrawable** %32 to i8*
  %34 = icmp eq %class.SkDrawable** %32, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = bitcast %class.SkDrawableList* %4 to i8*
  br label %39

37:                                               ; preds = %31
  tail call void @_Z7sk_freePv(i8* nonnull %33) #13
  %38 = bitcast %class.SkDrawableList* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i8* [ %36, %35 ], [ %38, %37 ]
  %41 = phi i8* [ %33, %35 ], [ null, %37 ]
  tail call void @_Z7sk_freePv(i8* %41) #13
  tail call void @_ZdlPv(i8* %40) #14
  br label %42

42:                                               ; preds = %1, %39
  %43 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvasD2Ev(%class.SkCanvas* %43) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorderD0Ev(%class.SkRecorder*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV10SkRecorder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %class.SkDrawableList*, %class.SkDrawableList** %3, align 8
  store %class.SkDrawableList* null, %class.SkDrawableList** %3, align 8
  %5 = icmp eq %class.SkDrawableList* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %4, i64 0, i32 0, i32 0
  %8 = load %class.SkDrawable**, %class.SkDrawable*** %7, align 8
  %9 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %4, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %8, i64 %11
  %13 = icmp sgt i32 %10, 0
  br i1 %13, label %14, label %31

14:                                               ; preds = %6, %26
  %15 = phi %class.SkDrawable** [ %27, %26 ], [ %8, %6 ]
  %16 = bitcast %class.SkDrawable** %15 to %class.SkRefCntBase**
  %17 = load %class.SkRefCntBase*, %class.SkRefCntBase** %16, align 8
  %18 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = bitcast %class.SkRefCntBase* %17 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  tail call void %25(%class.SkRefCntBase* %17) #13
  br label %26

26:                                               ; preds = %21, %14
  %27 = getelementptr inbounds %class.SkDrawable*, %class.SkDrawable** %15, i64 1
  %28 = icmp ult %class.SkDrawable** %27, %12
  br i1 %28, label %14, label %29

29:                                               ; preds = %26
  %30 = load %class.SkDrawable**, %class.SkDrawable*** %7, align 8
  br label %31

31:                                               ; preds = %29, %6
  %32 = phi %class.SkDrawable** [ %30, %29 ], [ %8, %6 ]
  %33 = bitcast %class.SkDrawable** %32 to i8*
  %34 = icmp eq %class.SkDrawable** %32, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = bitcast %class.SkDrawableList* %4 to i8*
  br label %39

37:                                               ; preds = %31
  tail call void @_Z7sk_freePv(i8* nonnull %33) #13
  %38 = bitcast %class.SkDrawableList* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false) #13
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i8* [ %36, %35 ], [ %38, %37 ]
  %41 = phi i8* [ %33, %35 ], [ null, %37 ]
  tail call void @_Z7sk_freePv(i8* %41) #13
  tail call void @_ZdlPv(i8* %40) #14
  br label %42

42:                                               ; preds = %1, %39
  %43 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvasD2Ev(%class.SkCanvas* %43) #13
  %44 = bitcast %class.SkRecorder* %0 to i8*
  tail call void @_ZdlPv(i8* %44) #14
  ret void
}

declare i64 @_ZNK8SkCanvas16getBaseLayerSizeEv(%class.SkCanvas*) unnamed_addr #2

declare %class.GrRecordingContext* @_ZN8SkCanvas16recordingContextEv(%class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas11isClipEmptyEv(%class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas10isClipRectEv(%class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) unnamed_addr #2

declare zeroext i1 @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) unnamed_addr #2

declare void @_ZNK8SkCanvas11onImageInfoEv(%struct.SkImageInfo* sret, %class.SkCanvas*) unnamed_addr #2

declare zeroext i1 @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps(%class.SkCanvas*, %class.SkSurfaceProps*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRecorder11willRestoreEv(%class.SkRecorder*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN8SkCanvas9onDiscardEv(%class.SkCanvas*) unnamed_addr #2

declare %class.GrSurfaceDrawContext* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv(%class.SkCanvas*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkPaintFilterCanvas* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv(%class.SkCanvas*) unnamed_addr #0 comdat align 2 {
  ret %class.SkPaintFilterCanvas* null
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZN14SkNoDrawCanvasC2Eii(%class.SkNoDrawCanvas*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD2Ev(%class.SkCanvas*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN14SkNoDrawCanvasC2ERK7SkIRect(%class.SkNoDrawCanvas*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

declare void @_ZN8SkCanvas19resetForNextPictureERK7SkIRect(%class.SkCanvas*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkCanvas13ImageSetEntryD1Ev(%"struct.SkCanvas::ImageSetEntry"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN10SkVerticesdlEPv(i8*) local_unnamed_addr #6

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #11

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN8SkRecord4growEv(%class.SkRecord*) local_unnamed_addr #2

declare void @_ZN8SkRegionC1ERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) unnamed_addr #2

declare void @_ZN9SkRecords13PreCachedPathC1ERK6SkPath(%"struct.SkRecords::PreCachedPath"*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare void @_ZN9SkRecords11TypedMatrixC1ERK8SkMatrix(%"struct.SkRecords::TypedMatrix"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

declare void @_ZN8SkCanvas13ImageSetEntryC1Ev(%"struct.SkCanvas::ImageSetEntry"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_: argument 0"}
!16 = distinct !{!16, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_: argument 0"}
!19 = distinct !{!19, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_: argument 0"}
!22 = distinct !{!22, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_"}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !8}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !8}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !8}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !8}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !8}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_Z9sk_ref_spI10SkTextBlobE5sk_spIT_EPKS2_: argument 0"}
!61 = distinct !{!61, !"_Z9sk_ref_spI10SkTextBlobE5sk_spIT_EPKS2_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_Z9sk_ref_spI10SkTextBlobE5sk_spIT_EPKS2_: argument 0"}
!64 = distinct !{!64, !"_Z9sk_ref_spI10SkTextBlobE5sk_spIT_EPKS2_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_Z9sk_ref_spI10SkTextBlobE5sk_spIT_EPKS2_: argument 0"}
!67 = distinct !{!67, !"_Z9sk_ref_spI10SkTextBlobE5sk_spIT_EPKS2_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_Z9sk_ref_spI9SkPictureE5sk_spIT_EPKS2_: argument 0"}
!70 = distinct !{!70, !"_Z9sk_ref_spI9SkPictureE5sk_spIT_EPKS2_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_Z9sk_ref_spI10SkVerticesE5sk_spIT_EPS2_: argument 0"}
!73 = distinct !{!73, !"_Z9sk_ref_spI10SkVerticesE5sk_spIT_EPS2_"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_: argument 0"}
!76 = distinct !{!76, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPKS2_"}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !8}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !8}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!88 = distinct !{!88, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !8}
!95 = distinct !{!95, !10}
!96 = distinct !{!96, !10}
!97 = distinct !{!97, !8}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_Z9sk_ref_spI13SkImageFilterE5sk_spIT_EPKS2_: argument 0"}
!100 = distinct !{!100, !"_Z9sk_ref_spI13SkImageFilterE5sk_spIT_EPKS2_"}
