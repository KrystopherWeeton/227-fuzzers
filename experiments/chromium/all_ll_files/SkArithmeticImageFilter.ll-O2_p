; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkArithmeticImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkArithmeticImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.107, %class.sk_sp.108, %class.sk_sp.109, %class.sk_sp.110, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.107 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.108 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.109 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.110 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray.309 = type { %class.SkAlignedSTStorage.310, %class.SkTArray.311 }
%class.SkAlignedSTStorage.310 = type { [16 x i8] }
%class.SkTArray.311 = type { %class.sk_sp*, i64 }
%"struct.SkRuntimeEffect::Result" = type { %class.sk_sp.22, %class.SkString }
%class.sk_sp.22 = type { %class.SkRuntimeEffect* }
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr.24", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector", %"class.std::__1::vector.33", %"class.std::__1::vector.40", %"class.std::__1::unique_ptr.47", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.30" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.35" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.42" }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type opaque
%class.SkString = type { %class.sk_sp.23 }
%class.sk_sp.23 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray.309 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.16"*, i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.GrFragmentProcessor* }
%struct.SkV4 = type { float, float, float, float }
%"struct.SkRuntimeEffect::Options" = type { i8, i8 }
%class.GrRuntimeFPBuilder = type { %class.SkRuntimeEffectBuilder }
%class.SkRuntimeEffectBuilder = type { %class.sk_sp.22, %class.sk_sp.53, %"class.std::__1::vector.55" }
%class.sk_sp.53 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.54, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.54 = type { %"struct.std::__1::atomic" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::unique_ptr.16"* }
%"class.(anonymous namespace)::SkArithmeticImageFilter" = type <{ %class.SkImageFilter_Base.base, %struct.SkV4, i8, [3 x i8] }>
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.53*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.53*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.53*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.62 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.62, %"class.skif::LayerSpace.63" }
%"class.skif::LayerSpace.63" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.184, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.184 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.185, %class.sk_sp.186, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.224" }
%class.SkNVRefCnt.185 = type { %"struct.std::__1::atomic" }
%class.sk_sp.186 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.188 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.187, [4 x i8] }>
%union.anon.187 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.53, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.188 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.189, void (i8*)*, i8* }
%class.SkNVRefCnt.189 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.190, i32, [4 x i8] }
%union.anon.190 = type { %struct.anon.191 }
%struct.anon.191 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.186, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.221, %class.sk_sp.223, %class.sk_sp.223 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.201, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.212, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.193 }
%class.SkTHashTable.193 = type { i32, i32, %class.SkAutoTArray.194 }
%class.SkAutoTArray.194 = type { %"class.std::__1::unique_ptr.195" }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.201 = type { %class.SkTHashTable.202 }
%class.SkTHashTable.202 = type { i32, i32, %class.SkAutoTArray.203 }
%class.SkAutoTArray.203 = type { %"class.std::__1::unique_ptr.204" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.210, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.210 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.211, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.211 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.212 = type { %class.SkTHashTable.213 }
%class.SkTHashTable.213 = type { i32, i32, %class.SkAutoTArray.214 }
%class.SkAutoTArray.214 = type { %"class.std::__1::unique_ptr.215" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.221 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.222, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.222 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.223 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.224" = type { %"struct.std::__1::__atomic_base.225" }
%"struct.std::__1::__atomic_base.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__cxx_atomic_impl.227" }
%"struct.std::__1::__cxx_atomic_impl.227" = type { %"struct.std::__1::__cxx_atomic_base_impl.228" }
%"struct.std::__1::__cxx_atomic_base_impl.228" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp.14, %class.sk_sp.295, i32, i32 }
%class.sk_sp.295 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.SkBitmap = type { %class.sk_sp.303, %class.SkPixmap, %class.sk_sp.304 }
%class.sk_sp.303 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.304 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%class.sk_sp.64 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.112", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.288" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.111 }
%class.sk_sp.111 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.115, %class.SkTHashMap.123, %class.SkTHashMap.133, %class.SkTArray.144, %class.SkTArray.119, i32, i8, [3 x i8] }>
%class.SkTArray.115 = type { %"class.std::__1::unique_ptr.116"*, i64 }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.119, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkTHashMap.123 = type { %class.SkTHashTable.124 }
%class.SkTHashTable.124 = type { i32, i32, %class.SkAutoTArray.125 }
%class.SkAutoTArray.125 = type { %"class.std::__1::unique_ptr.126" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.129" }
%"struct.std::__1::pair.129" = type { i32, i32 }
%class.SkTHashMap.133 = type { %class.SkTHashTable.134 }
%class.SkTHashTable.134 = type { i32, i32, %class.SkAutoTArray.135 }
%class.SkAutoTArray.135 = type { %"class.std::__1::unique_ptr.136" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.139" }
%"struct.std::__1::pair.139" = type { i32, %class.SkTArray.140* }
%class.SkTArray.140 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.144 = type { %"class.std::__1::unique_ptr.145"*, i64 }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.140, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.119 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.163 }
%class.SkFibBlockSizes.163 = type { i32 }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.170, %class.SkTArray.179, %class.GrOpsTask*, %class.SkSTArray.253, %class.SkSTArray.256, %"class.std::__1::unique_ptr.258", %class.sk_sp.274, %class.GrTokenTracker, i8, i8, %class.SkTArray.275, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.170 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.171", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.174, i8, [7 x i8] }>
%class.sk_sp.174 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.175, i8*, i64 }
%class.GrNonAtomicRef.175 = type { i32 }
%class.SkTArray.179 = type { %class.sk_sp.180*, i64 }
%class.sk_sp.180 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.181, %class.SkTArray.229, i32, i32, %class.SkSTArray.236, %class.SkSTArray.236, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.181 = type { %class.SkAlignedSTStorage.182, %class.SkTArray.183 }
%class.SkAlignedSTStorage.182 = type { [8 x i8] }
%class.SkTArray.183 = type { %class.sk_sp.184*, i64 }
%class.SkTArray.229 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.230", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.236 = type { %class.SkAlignedSTStorage.237, %class.SkTArray.238 }
%class.SkAlignedSTStorage.237 = type { [8 x i8] }
%class.SkTArray.238 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.239, %class.sk_sp.250, %class.SkTArray.252, %struct.SkRect, %struct.SkIRect }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.239 = type { %class.SkAlignedSTStorage.240, %class.SkTArray.241 }
%class.SkAlignedSTStorage.240 = type { [2000 x i8] }
%class.SkTArray.241 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.242", %class.GrOp* }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.242", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.16" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.248 }
%union.anon.248 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.249, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.249 = type { i32 }
%class.sk_sp.250 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.251, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.251 = type { %"struct.std::__1::atomic" }
%class.SkTArray.252 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.253 = type { %class.SkAlignedSTStorage.254, %class.SkTArray.255 }
%class.SkAlignedSTStorage.254 = type { [32 x i8] }
%class.SkTArray.255 = type { i32*, i64 }
%class.SkSTArray.256 = type { %class.SkAlignedSTStorage.257, %class.SkTArray.179 }
%class.SkAlignedSTStorage.257 = type { [32 x i8] }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.261, %"class.std::__1::unique_ptr.265", %class.GrPathRenderer* }
%class.SkSTArray.261 = type { %class.SkAlignedSTStorage.262, %class.SkTArray.263 }
%class.SkAlignedSTStorage.262 = type { [64 x i8] }
%class.SkTArray.263 = type { %class.sk_sp.264*, i64 }
%class.sk_sp.264 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.274 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.275 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.276, i32, %class.GrRenderTask** }
%class.SkTHashMap.276 = type { %class.SkTHashTable.277 }
%class.SkTHashTable.277 = type { i32, i32, %class.SkAutoTArray.278 }
%class.SkAutoTArray.278 = type { %"class.std::__1::unique_ptr.279" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %class.GrProxyProvider* }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.299, i8, [7 x i8] }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.sk_sp.299 = type { %class.GrOpsTask* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.65, [384 x i64], %class.sk_sp.66, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.67", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.73" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.65 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.66 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector.80", %class.SkGlyphRunList, %"class.std::__1::vector.97" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.85" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.83, %class.SkSpan.84, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.82" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.82" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.83 = type { i32*, i64 }
%class.SkSpan.84 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.2, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.90, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.90 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.91, %struct.SkRect, i32, %"struct.std::__1::atomic.92" }
%class.SkNVRefCnt.91 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i32 }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { i16*, i16*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i16* }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_Z10arith_spanILb1EEvRK4SkV4PjPKji = comdat any

$_Z10arith_spanILb0EEvRK4SkV4PjPKji = comdat any

$_Z17arith_transparentILb1EEvRK4SkV4Pji = comdat any

$_Z17arith_transparentILb0EEvRK4SkV4Pji = comdat any

$_ZN15SkRuntimeEffect6ResultD2Ev = comdat any

$_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE19writableUniformDataEv = comdat any

$_ZN15GrTextureEffect14kDefaultBorderE = comdat any

@.str = private unnamed_addr constant [24 x i8] c"SkArithmeticImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"ArithmeticImageFilterImpl\00", align 1
@_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS_14default_deleteIS1_EEEES4_RK4SkV4bE5kCode = internal constant [526 x i8] c"\0A        uniform shader srcFP;\0A        uniform shader dstFP;\0A        uniform half4 k;\0A        uniform half pmClamp;\0A        half4 main(float2 xy) {\0A            half4 src = sample(srcFP, xy);\0A            half4 dst = sample(dstFP, xy);\0A            half4 color = saturate(k.x * src * dst +\0A                                   k.y * src +\0A                                   k.z * dst +\0A                                   k.w);\0A            color.rgb = min(color.rgb, max(color.a, pmClamp));\0A            return color;\0A        }\0A    \00", align 16
@.str.2 = private unnamed_addr constant [6 x i8] c"srcFP\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"dstFP\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"k\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"pmClamp\00", align 1
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@_ZTVN12_GLOBAL__N_123SkArithmeticImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkArithmeticImageFilter"*)* @_ZN12_GLOBAL__N_123SkArithmeticImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkArithmeticImageFilter"*)* @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkArithmeticImageFilter"*)* @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkArithmeticImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.62*, %"class.(anonymous namespace)::SkArithmeticImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkArithmeticImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkArithmeticImageFilter"*)* @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZNK12_GLOBAL__N_123SkArithmeticImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.107 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.108 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.109 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.110 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN15GrTextureEffect14kDefaultBorderE = linkonce_odr hidden constant [4 x float] zeroinitializer, comdat, align 16
@.str.6 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@__const._ZN12_GLOBAL__N_123SkArithmeticImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.309 } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray.309 { %class.SkAlignedSTStorage.310 { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.311 { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8
@_ZZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_vE7gResult = internal global %"struct.SkRuntimeEffect::Result" zeroinitializer, align 8
@_ZGVZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_vE7gResult = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@switch.table._ZNK12_GLOBAL__N_123SkArithmeticImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters10ArithmeticEffffb5sk_spI13SkImageFilterES2_RKNS_8CropRectE(%class.sk_sp* noalias sret, float, float, float, float, i1 zeroext, %class.sk_sp* nocapture, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca [2 x %class.sk_sp], align 16
  %13 = bitcast float %1 to i32
  %14 = and i32 %13, 2139095040
  %15 = icmp eq i32 %14, 2139095040
  br i1 %15, label %28, label %16

16:                                               ; preds = %9
  %17 = bitcast float %2 to i32
  %18 = and i32 %17, 2139095040
  %19 = icmp eq i32 %18, 2139095040
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = bitcast float %3 to i32
  %22 = and i32 %21, 2139095040
  %23 = icmp eq i32 %22, 2139095040
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = bitcast float %4 to i32
  %26 = and i32 %25, 2139095040
  %27 = icmp eq i32 %26, 2139095040
  br i1 %27, label %28, label %30

28:                                               ; preds = %24, %20, %16, %9
  %29 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %29, align 8
  br label %154

30:                                               ; preds = %24
  %31 = tail call float @llvm.fabs.f32(float %1) #15
  %32 = fcmp ugt float %31, 0x3F30000000000000
  br i1 %32, label %92, label %33

33:                                               ; preds = %30
  %34 = fadd float %2, -1.000000e+00
  %35 = tail call float @llvm.fabs.f32(float %34) #15
  %36 = fcmp ole float %35, 0x3F30000000000000
  %37 = tail call float @llvm.fabs.f32(float %3) #15
  %38 = fcmp ole float %37, 0x3F30000000000000
  %39 = and i1 %36, %38
  %40 = tail call float @llvm.fabs.f32(float %4) #15
  %41 = fcmp ole float %40, 0x3F30000000000000
  %42 = and i1 %39, %41
  br i1 %42, label %55, label %43

43:                                               ; preds = %33
  %44 = tail call float @llvm.fabs.f32(float %2) #15
  %45 = fcmp ugt float %44, 0x3F30000000000000
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = fadd float %3, -1.000000e+00
  %48 = tail call float @llvm.fabs.f32(float %47) #15
  %49 = fcmp ole float %48, 0x3F30000000000000
  %50 = and i1 %49, %41
  br i1 %50, label %55, label %51

51:                                               ; preds = %43, %46
  %52 = fcmp ole float %44, 0x3F30000000000000
  %53 = and i1 %52, %38
  %54 = and i1 %53, %41
  br i1 %54, label %55, label %92

55:                                               ; preds = %51, %46, %33
  %56 = phi i32 [ 1, %33 ], [ 2, %46 ], [ 0, %51 ]
  %57 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %58 = bitcast %class.sk_sp* %6 to i64*
  %59 = load i64, i64* %58, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %57, align 8
  %60 = bitcast %class.sk_sp* %10 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %62 = bitcast %class.sk_sp* %7 to i64*
  %63 = load i64, i64* %62, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %61, align 8
  %64 = bitcast %class.sk_sp* %11 to i64*
  store i64 %63, i64* %64, align 8
  call void @_ZN14SkImageFilters5BlendE11SkBlendMode5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp* sret %0, i32 %56, %class.sk_sp* nonnull %10, %class.sk_sp* nonnull %11, %"struct.SkImageFilters::CropRect"* dereferenceable(16) %8) #15
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %66 = load %class.SkImageFilter*, %class.SkImageFilter** %65, align 8
  %67 = icmp eq %class.SkImageFilter* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %55
  %69 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkImageFilter* %66 to %class.SkRefCntBase*
  %74 = bitcast %class.SkImageFilter* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #15
  br label %78

78:                                               ; preds = %55, %68, %72
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %80 = load %class.SkImageFilter*, %class.SkImageFilter** %79, align 8
  %81 = icmp eq %class.SkImageFilter* %80, null
  br i1 %81, label %154, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %80, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %154

86:                                               ; preds = %82
  %87 = bitcast %class.SkImageFilter* %80 to %class.SkRefCntBase*
  %88 = bitcast %class.SkImageFilter* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #15
  br label %154

92:                                               ; preds = %30, %51
  %93 = bitcast [2 x %class.sk_sp]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #15
  %94 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %12, i64 0, i64 0
  %95 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %96 = bitcast %class.sk_sp* %6 to i64*
  %97 = load i64, i64* %96, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %95, align 8
  %98 = bitcast [2 x %class.sk_sp]* %12 to i64*
  store i64 %97, i64* %98, align 16
  %99 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %12, i64 0, i64 1
  %100 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %101 = bitcast %class.sk_sp* %7 to i64*
  %102 = load i64, i64* %101, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %100, align 8
  %103 = bitcast %class.sk_sp* %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = tail call i8* @_Znwm(i64 96) #16
  %105 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %8, i64 0, i32 0
  %106 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %8, i64 0, i32 0, i32 0
  %107 = load float, float* %106, align 4
  %108 = fcmp une float %107, 0xFFF0000000000000
  br i1 %108, label %121, label %109

109:                                              ; preds = %92
  %110 = getelementptr inbounds float, float* %106, i64 1
  %111 = load float, float* %110, align 4
  %112 = fcmp une float %111, 0xFFF0000000000000
  br i1 %112, label %121, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds float, float* %106, i64 2
  %115 = load float, float* %114, align 4
  %116 = fcmp une float %115, 0x7FF0000000000000
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds float, float* %106, i64 3
  %119 = load float, float* %118, align 4
  %120 = fcmp une float %119, 0x7FF0000000000000
  br i1 %120, label %121, label %122

121:                                              ; preds = %117, %113, %109, %92
  br label %122

122:                                              ; preds = %117, %121
  %123 = phi %struct.SkRect* [ %105, %121 ], [ null, %117 ]
  %124 = zext i1 %5 to i8
  %125 = bitcast i8* %104 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %125, %class.sk_sp* nonnull %94, i32 2, %struct.SkRect* %123) #15
  %126 = bitcast i8* %104 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_123SkArithmeticImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds i8, i8* %104, i64 76
  %128 = bitcast i8* %127 to float*
  store float %1, float* %128, align 4
  %129 = getelementptr inbounds i8, i8* %104, i64 80
  %130 = bitcast i8* %129 to float*
  store float %2, float* %130, align 4
  %131 = getelementptr inbounds i8, i8* %104, i64 84
  %132 = bitcast i8* %131 to float*
  store float %3, float* %132, align 4
  %133 = getelementptr inbounds i8, i8* %104, i64 88
  %134 = bitcast i8* %133 to float*
  store float %4, float* %134, align 4
  %135 = getelementptr inbounds i8, i8* %104, i64 92
  store i8 %124, i8* %135, align 4
  %136 = bitcast %class.sk_sp* %0 to i8**
  store i8* %104, i8** %136, align 8
  %137 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %12, i64 0, i64 1, i32 0
  %138 = load %class.SkImageFilter*, %class.SkImageFilter** %137, align 8
  %139 = icmp eq %class.SkImageFilter* %138, null
  br i1 %139, label %150, label %140

140:                                              ; preds = %122
  %141 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %138, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 -1 acq_rel
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %150

144:                                              ; preds = %140
  %145 = bitcast %class.SkImageFilter* %138 to %class.SkRefCntBase*
  %146 = bitcast %class.SkImageFilter* %138 to void (%class.SkRefCntBase*)***
  %147 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %147, i64 2
  %149 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %148, align 8
  call void %149(%class.SkRefCntBase* nonnull %145) #15
  br label %150

150:                                              ; preds = %122, %140, %144
  %151 = getelementptr inbounds [2 x %class.sk_sp], [2 x %class.sk_sp]* %12, i64 0, i64 0, i32 0
  %152 = load %class.SkImageFilter*, %class.SkImageFilter** %151, align 16
  %153 = icmp eq %class.SkImageFilter* %152, null
  br i1 %153, label %165, label %155

154:                                              ; preds = %86, %82, %78, %165, %28
  ret void

155:                                              ; preds = %150
  %156 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %152, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw add i32* %156, i32 -1 acq_rel
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %165

159:                                              ; preds = %155
  %160 = bitcast %class.SkImageFilter* %152 to %class.SkRefCntBase*
  %161 = bitcast %class.SkImageFilter* %152 to void (%class.SkRefCntBase*)***
  %162 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %161, align 8
  %163 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %162, i64 2
  %164 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %163, align 8
  call void %164(%class.SkRefCntBase* nonnull %160) #15
  br label %165

165:                                              ; preds = %159, %155, %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #15
  br label %154
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN14SkImageFilters5BlendE11SkBlendMode5sk_spI13SkImageFilterES3_RKNS_8CropRectE(%class.sk_sp* sret, i32, %class.sk_sp*, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z42SkRegisterArithmeticImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_123SkArithmeticImageFilter10CreateProcER12SkReadBuffer) #15
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_123SkArithmeticImageFilter10CreateProcER12SkReadBuffer) #15
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123SkArithmeticImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %"class.SkImageFilter_Base::Common", align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %"struct.SkImageFilters::CropRect", align 4
  %8 = bitcast %"class.SkImageFilter_Base::Common"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.309 }* @__const._ZN12_GLOBAL__N_123SkArithmeticImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 0
  %12 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %10 to i8**
  store i8* %11, i8** %14, align 8
  store i64 17179869184, i64* %13, align 8
  %15 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %3, %class.SkReadBuffer* dereferenceable(136) %1, i32 2) #15
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %17, align 8
  br label %85

18:                                               ; preds = %2
  %19 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #15
  %20 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #15
  %21 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #15
  %22 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #15
  %23 = call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #15
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %28, align 8
  br label %85

29:                                               ; preds = %18
  %30 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  %31 = bitcast i8* %10 to %class.sk_sp**
  %32 = load %class.sk_sp*, %class.sk_sp** %31, align 8, !noalias !3
  %33 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %34 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %32, i64 0, i32 0
  %35 = load %class.SkImageFilter*, %class.SkImageFilter** %34, align 8, !noalias !3
  %36 = icmp eq %class.SkImageFilter* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic, !noalias !3
  %40 = load %class.sk_sp*, %class.sk_sp** %31, align 8, !noalias !6
  br label %41

41:                                               ; preds = %29, %37
  %42 = phi %class.sk_sp* [ %32, %29 ], [ %40, %37 ]
  store %class.SkImageFilter* %35, %class.SkImageFilter** %33, align 8, !alias.scope !3
  %43 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %42, i64 1, i32 0
  %45 = load %class.SkImageFilter*, %class.SkImageFilter** %44, align 8, !noalias !6
  %46 = icmp eq %class.SkImageFilter* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic, !noalias !6
  br label %50

50:                                               ; preds = %47, %41
  store %class.SkImageFilter* %45, %class.SkImageFilter** %43, align 8, !alias.scope !6
  %51 = bitcast %"struct.SkImageFilters::CropRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #15
  %52 = load i32, i32* %9, align 8
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %54, i64 16, i1 false) #15
  call void @_ZN14SkImageFilters10ArithmeticEffffb5sk_spI13SkImageFilterES2_RKNS_8CropRectE(%class.sk_sp* nonnull sret %4, float %19, float %20, float %21, float %22, i1 zeroext %23, %class.sk_sp* nonnull %5, %class.sk_sp* nonnull %6, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %7)
  %55 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %56 = bitcast %class.sk_sp* %4 to i64*
  %57 = load i64, i64* %56, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %55, align 8
  %58 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %57, i64* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #15
  %59 = load %class.SkImageFilter*, %class.SkImageFilter** %43, align 8
  %60 = icmp eq %class.SkImageFilter* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %50
  %62 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %59, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkImageFilter* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.SkImageFilter* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  call void %70(%class.SkRefCntBase* nonnull %66) #15
  br label %71

71:                                               ; preds = %50, %61, %65
  %72 = load %class.SkImageFilter*, %class.SkImageFilter** %33, align 8
  %73 = icmp eq %class.SkImageFilter* %72, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = bitcast %class.SkImageFilter* %72 to %class.SkRefCntBase*
  %80 = bitcast %class.SkImageFilter* %72 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8
  call void %83(%class.SkRefCntBase* nonnull %79) #15
  br label %84

84:                                               ; preds = %71, %74, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  br label %85

85:                                               ; preds = %27, %84, %16
  %86 = load i64, i64* %13, align 8
  %87 = and i64 %86, 4294967294
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = bitcast i8* %10 to %class.sk_sp**
  br label %95

91:                                               ; preds = %111, %85
  %92 = phi i64 [ %86, %85 ], [ %113, %111 ]
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %119, label %117

95:                                               ; preds = %111, %89
  %96 = phi i64 [ 0, %89 ], [ %112, %111 ]
  %97 = load %class.sk_sp*, %class.sk_sp** %90, align 8
  %98 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %97, i64 %96, i32 0
  %99 = load %class.SkImageFilter*, %class.SkImageFilter** %98, align 8
  %100 = icmp eq %class.SkImageFilter* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %99, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = bitcast %class.SkImageFilter* %99 to %class.SkRefCntBase*
  %107 = bitcast %class.SkImageFilter* %99 to void (%class.SkRefCntBase*)***
  %108 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, i64 2
  %110 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, align 8
  call void %110(%class.SkRefCntBase* nonnull %106) #15
  br label %111

111:                                              ; preds = %105, %101, %95
  %112 = add nuw nsw i64 %96, 1
  %113 = load i64, i64* %13, align 8
  %114 = lshr i64 %113, 1
  %115 = and i64 %114, 2147483647
  %116 = icmp ult i64 %112, %115
  br i1 %116, label %95, label %91

117:                                              ; preds = %91
  %118 = load i8*, i8** %14, align 8
  call void @_Z7sk_freePv(i8* %118) #15
  br label %119

119:                                              ; preds = %91, %117
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_Z18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS_14default_deleteIS1_EEEES4_RK4SkV4b(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, %struct.SkV4* nocapture readonly dereferenceable(16), i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"struct.SkRuntimeEffect::Options", align 1
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.sk_sp.22, align 8
  %9 = alloca %class.GrRuntimeFPBuilder, align 8
  %10 = ptrtoint %class.GrFragmentProcessor* %0 to i64
  %11 = ptrtoint %class.GrFragmentProcessor* %1 to i64
  %12 = bitcast %class.GrRuntimeFPBuilder* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #15
  %13 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %9, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %class.SkString* %7 to i8*
  %16 = bitcast %class.GrRuntimeFPBuilder* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %17 = bitcast %class.sk_sp.22* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = load atomic i8, i8* bitcast (i64* @_ZGVZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_vE7gResult to i8*) acquire, align 8, !noalias !9
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %28, !prof !12

20:                                               ; preds = %4
  %21 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_vE7gResult) #15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %20
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([526 x i8], [526 x i8]* @_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS_14default_deleteIS1_EEEES4_RK4SkV4bE5kCode, i64 0, i64 0)) #15
  %24 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15, !noalias !9
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %5, %class.SkString* nonnull dereferenceable(8) %7) #15, !noalias !13
  %25 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %25) #15, !noalias !16
  store i8 0, i8* %25, align 1, !noalias !16
  %26 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %6, i64 0, i32 1
  store i8 1, i8* %26, align 1, !noalias !16
  call void @_ZN15SkRuntimeEffect13MakeForShaderE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* nonnull sret @_ZZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_vE7gResult, %class.SkString* nonnull %5, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %25) #15, !noalias !16
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15, !noalias !9
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #15
  %27 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.SkRuntimeEffect::Result"*)* @_ZN15SkRuntimeEffect6ResultD2Ev to void (i8*)*), i8* bitcast (%"struct.SkRuntimeEffect::Result"* @_ZZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_vE7gResult to i8*), i8* nonnull @__dso_handle) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_vE7gResult) #15
  br label %28

28:                                               ; preds = %23, %20, %4
  %29 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %8, i64 0, i32 0
  %30 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** getelementptr inbounds (%"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* @_ZZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_vE7gResult, i64 0, i32 0, i32 0), align 8, !noalias !9
  %31 = icmp eq %class.SkRuntimeEffect* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %32, %28
  store %class.SkRuntimeEffect* %30, %class.SkRuntimeEffect** %29, align 8, !noalias !9
  call void @_ZN18GrRuntimeFPBuilderC1E5sk_spI15SkRuntimeEffectE(%class.GrRuntimeFPBuilder* nonnull %9, %class.sk_sp.22* nonnull %8) #15
  %36 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %29, align 8, !noalias !9
  %37 = icmp eq %class.SkRuntimeEffect* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %class.SkRuntimeEffect* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkRuntimeEffect* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  call void %47(%class.SkRefCntBase* nonnull %43) #15
  br label %48

48:                                               ; preds = %35, %38, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %49 = getelementptr inbounds %class.GrRuntimeFPBuilder, %class.GrRuntimeFPBuilder* %9, i64 0, i32 0
  %50 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %13, align 8, !noalias !17
  %51 = call %"struct.SkRuntimeEffect::Child"* @_ZNK15SkRuntimeEffect9findChildEPKc(%class.SkRuntimeEffect* %50, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #15, !noalias !17
  %52 = icmp eq %"struct.SkRuntimeEffect::Child"* %51, null
  br i1 %52, label %68, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %51, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %14, align 8
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %57, i64 %56
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %59, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.16"* %58 to i64*
  store i64 %10, i64* %61, align 8
  %62 = icmp eq %class.GrFragmentProcessor* %60, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %53
  %64 = bitcast %class.GrFragmentProcessor* %60 to void (%class.GrFragmentProcessor*)***
  %65 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %65, i64 1
  %67 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %66, align 8
  call void %67(%class.GrFragmentProcessor* nonnull %60) #15
  br label %68

68:                                               ; preds = %48, %53, %63
  %69 = phi i64 [ 0, %53 ], [ 0, %63 ], [ %10, %48 ]
  %70 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %13, align 8, !noalias !20
  %71 = call %"struct.SkRuntimeEffect::Child"* @_ZNK15SkRuntimeEffect9findChildEPKc(%class.SkRuntimeEffect* %70, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #15, !noalias !20
  %72 = icmp eq %"struct.SkRuntimeEffect::Child"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %71, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %14, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %77, i64 %76
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %79, align 8
  %81 = bitcast %"class.std::__1::unique_ptr.16"* %78 to i64*
  store i64 %11, i64* %81, align 8
  %82 = icmp eq %class.GrFragmentProcessor* %80, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %73
  %84 = bitcast %class.GrFragmentProcessor* %80 to void (%class.GrFragmentProcessor*)***
  %85 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %85, i64 1
  %87 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %86, align 8
  call void %87(%class.GrFragmentProcessor* nonnull %80) #15
  br label %88

88:                                               ; preds = %68, %73, %83
  %89 = phi i64 [ 0, %73 ], [ 0, %83 ], [ %11, %68 ]
  %90 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %13, align 8
  %91 = call %"struct.SkRuntimeEffect::Uniform"* @_ZNK15SkRuntimeEffect11findUniformEPKc(%class.SkRuntimeEffect* %90, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #15
  %92 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %91, null
  br i1 %92, label %102, label %93

93:                                               ; preds = %88
  %94 = call i64 @_ZNK15SkRuntimeEffect7Uniform11sizeInBytesEv(%"struct.SkRuntimeEffect::Uniform"* nonnull %91) #15
  %95 = icmp eq i64 %94, 16
  br i1 %95, label %96, label %102

96:                                               ; preds = %93
  %97 = call i8* @_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE19writableUniformDataEv(%class.SkRuntimeEffectBuilder* nonnull %49) #15
  %98 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %91, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds i8, i8* %97, i64 %99
  %101 = bitcast %struct.SkV4* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 4 %101, i64 16, i1 false) #15
  br label %102

102:                                              ; preds = %88, %93, %96
  %103 = select i1 %3, i32 0, i32 1065353216
  %104 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %13, align 8
  %105 = call %"struct.SkRuntimeEffect::Uniform"* @_ZNK15SkRuntimeEffect11findUniformEPKc(%class.SkRuntimeEffect* %104, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #15
  %106 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %105, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %102
  %108 = call i64 @_ZNK15SkRuntimeEffect7Uniform11sizeInBytesEv(%"struct.SkRuntimeEffect::Uniform"* nonnull %105) #15
  %109 = icmp eq i64 %108, 4
  br i1 %109, label %110, label %116

110:                                              ; preds = %107
  %111 = call i8* @_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE19writableUniformDataEv(%class.SkRuntimeEffectBuilder* nonnull %49) #15
  %112 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %105, i64 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds i8, i8* %111, i64 %113
  %115 = bitcast i8* %114 to i32*
  store i32 %103, i32* %115, align 1
  br label %116

116:                                              ; preds = %102, %107, %110
  %117 = call %class.GrFragmentProcessor* @_ZN18GrRuntimeFPBuilder6makeFPEv(%class.GrRuntimeFPBuilder* nonnull %9) #15
  call void @_ZN18GrRuntimeFPBuilderD1Ev(%class.GrRuntimeFPBuilder* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #15
  %118 = icmp eq i64 %89, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %116
  %120 = inttoptr i64 %89 to %class.GrFragmentProcessor*
  %121 = inttoptr i64 %89 to void (%class.GrFragmentProcessor*)***
  %122 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %122, i64 1
  %124 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %123, align 8
  call void %124(%class.GrFragmentProcessor* nonnull %120) #15
  br label %125

125:                                              ; preds = %116, %119
  %126 = icmp eq i64 %69, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %69 to %class.GrFragmentProcessor*
  %129 = inttoptr i64 %69 to void (%class.GrFragmentProcessor*)***
  %130 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %129, align 8
  %131 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %130, i64 1
  %132 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %131, align 8
  call void %132(%class.GrFragmentProcessor* nonnull %128) #15
  br label %133

133:                                              ; preds = %125, %127
  ret %class.GrFragmentProcessor* %117
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %class.GrFragmentProcessor* @_ZN18GrRuntimeFPBuilder6makeFPEv(%class.GrRuntimeFPBuilder*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18GrRuntimeFPBuilderD1Ev(%class.GrRuntimeFPBuilder*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #5

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123SkArithmeticImageFilterD0Ev(%"class.(anonymous namespace)::SkArithmeticImageFilter"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkArithmeticImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #15
  %3 = bitcast %"class.(anonymous namespace)::SkArithmeticImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #15
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkArithmeticImageFilter"* nocapture readnone) unnamed_addr #7 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_123SkArithmeticImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkArithmeticImageFilter"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkArithmeticImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkArithmeticImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #15
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %0, i64 0, i32 1, i32 0
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %6 = load float, float* %4, align 4
  %7 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, i64 5
  %9 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, float %6) #15
  %10 = getelementptr inbounds float, float* %4, i64 1
  %11 = load float, float* %10, align 4
  %12 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, i64 5
  %14 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, float %11) #15
  %15 = getelementptr inbounds float, float* %4, i64 2
  %16 = load float, float* %15, align 4
  %17 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %18 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %17, i64 5
  %19 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %18, align 8
  tail call void %19(%class.SkWriteBuffer* %1, float %16) #15
  %20 = getelementptr inbounds float, float* %4, i64 3
  %21 = load float, float* %20, align 4
  %22 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %23 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %22, i64 5
  %24 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %23, align 8
  tail call void %24(%class.SkWriteBuffer* %1, float %21) #15
  %25 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %0, i64 0, i32 2
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp ne i8 %26, 0
  %28 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i1)***
  %29 = load void (%class.SkWriteBuffer*, i1)**, void (%class.SkWriteBuffer*, i1)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %29, i64 4
  %31 = load void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %30, align 8
  tail call void %31(%class.SkWriteBuffer* %1, i1 zeroext %27) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { <2 x float>, <2 x float> } @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect(%class.SkImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.62* noalias sret, %"class.(anonymous namespace)::SkArithmeticImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #8 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %class.sk_sp.14, align 8
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.GrSurfaceProxyView, align 8
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = alloca %class.GrSurfaceProxyView, align 8
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = alloca %class.SkMatrix, align 16
  %16 = alloca %class.GrSurfaceProxyView, align 8
  %17 = alloca { <2 x float>, <2 x float> }, align 8
  %18 = alloca %class.SkMatrix, align 16
  %19 = alloca %class.GrSurfaceProxyView, align 8
  %20 = alloca %class.GrImageInfo, align 8
  %21 = alloca %class.GrImageInfo, align 8
  %22 = alloca { i64, i64 }, align 8
  %23 = alloca { i64, i64 }, align 8
  %24 = alloca %class.GrSurfaceProxyView, align 8
  %25 = alloca %class.sk_sp.14, align 8
  %26 = alloca { i64, i64 }, align 8
  %27 = alloca { i64, i64 }, align 8
  %28 = alloca %struct.SkIRect, align 4
  %29 = alloca %class.SkPixmap, align 8
  %30 = alloca %class.SkMatrix, align 4
  %31 = alloca { i64, i64 }, align 8
  %32 = alloca %class.SkBitmap, align 8
  %33 = alloca %class.SkPixmap, align 8
  %34 = alloca %class.SkPixmap, align 8
  %35 = alloca %class.SkRegion, align 8
  %36 = alloca { i64, i64 }, align 8
  %37 = alloca %"class.SkRegion::Iterator", align 8
  %38 = alloca %"class.skif::FilterResult", align 8
  %39 = alloca %"class.skif::FilterResult", align 8
  %40 = alloca %struct.SkIRect, align 8
  %41 = alloca %struct.SkIRect, align 8
  %42 = alloca %struct.SkIRect, align 4
  %43 = alloca %class.sk_sp.64, align 8
  %44 = alloca i64, align 8
  %45 = bitcast i64* %44 to %struct.SkISize*
  %46 = alloca %class.SkPaint, align 8
  %47 = alloca %struct.SkSamplingOptions, align 4
  %48 = bitcast %"class.(anonymous namespace)::SkArithmeticImageFilter"* %1 to %class.SkImageFilter_Base*
  %49 = bitcast %"class.skif::FilterResult"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #15, !noalias !23
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %39, %class.SkImageFilter_Base* %48, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #15, !noalias !23
  %50 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %39, i64 0, i32 0, i32 0
  %51 = load %class.SkSpecialImage*, %class.SkSpecialImage** %50, align 8, !noalias !26
  %52 = icmp eq %class.SkSpecialImage* %51, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %4
  %54 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %39, i64 0, i32 1, i32 0
  %55 = bitcast %struct.SkIPoint* %54 to i64*
  %56 = load i64, i64* %55, align 8, !noalias !26
  %57 = trunc i64 %56 to i32
  %58 = lshr i64 %56, 32
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 1 monotonic, !noalias !26
  %62 = atomicrmw add i32* %60, i32 -1 acq_rel, !noalias !23
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %53
  %65 = bitcast %class.SkSpecialImage* %51 to %class.SkRefCntBase*
  %66 = bitcast %class.SkSpecialImage* %51 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8, !noalias !23
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8, !noalias !23
  call void %69(%class.SkRefCntBase* nonnull %65) #15, !noalias !23
  br label %70

70:                                               ; preds = %4, %53, %64
  %71 = phi i32 [ %57, %64 ], [ %57, %53 ], [ 0, %4 ]
  %72 = phi i32 [ %59, %64 ], [ %59, %53 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #15, !noalias !23
  %73 = bitcast %"class.skif::FilterResult"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #15, !noalias !29
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %38, %class.SkImageFilter_Base* %48, i32 1, %"class.skif::Context"* dereferenceable(136) %2) #15, !noalias !29
  %74 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %38, i64 0, i32 0, i32 0
  %75 = load %class.SkSpecialImage*, %class.SkSpecialImage** %74, align 8, !noalias !32
  %76 = icmp eq %class.SkSpecialImage* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %38, i64 0, i32 1, i32 0
  %79 = bitcast %struct.SkIPoint* %78 to i64*
  %80 = load i64, i64* %79, align 8, !noalias !32
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  %84 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 1 monotonic, !noalias !32
  %86 = atomicrmw add i32* %84, i32 -1 acq_rel, !noalias !29
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %96

88:                                               ; preds = %77
  %89 = bitcast %class.SkSpecialImage* %75 to %class.SkRefCntBase*
  %90 = bitcast %class.SkSpecialImage* %75 to void (%class.SkRefCntBase*)***
  %91 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %90, align 8, !noalias !29
  %92 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, i64 2
  %93 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, align 8, !noalias !29
  call void %93(%class.SkRefCntBase* nonnull %89) #15, !noalias !29
  br label %96

94:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #15, !noalias !29
  %95 = bitcast %struct.SkIRect* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 16, i1 false)
  br label %129

96:                                               ; preds = %77, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #15, !noalias !29
  %97 = bitcast %struct.SkIRect* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #15
  %98 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 2, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 2, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = sub i32 %99, %101
  %103 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 2, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 2, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sub i32 %104, %106
  %108 = shl i64 %80, 32
  %109 = ashr exact i64 %108, 32
  %110 = sext i32 %102 to i64
  %111 = add nsw i64 %109, %110
  %112 = icmp slt i64 %111, 2147483647
  %113 = select i1 %112, i64 %111, i64 2147483647
  %114 = icmp sgt i64 %113, -2147483647
  %115 = select i1 %114, i64 %113, i64 -2147483647
  %116 = ashr i64 %80, 32
  %117 = sext i32 %107 to i64
  %118 = add nsw i64 %116, %117
  %119 = icmp slt i64 %118, 2147483647
  %120 = select i1 %119, i64 %118, i64 2147483647
  %121 = icmp sgt i64 %120, -2147483647
  %122 = select i1 %121, i64 %120, i64 -2147483647
  %123 = shl nsw i64 %122, 32
  %124 = and i64 %115, 4294967295
  %125 = or i64 %123, %124
  %126 = bitcast %struct.SkIRect* %40 to i64*
  store i64 %80, i64* %126, align 8
  %127 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %40, i64 0, i32 2
  %128 = bitcast i32* %127 to i64*
  store i64 %125, i64* %128, align 8
  br label %129

129:                                              ; preds = %94, %96
  %130 = phi i8* [ %95, %94 ], [ %97, %96 ]
  %131 = phi i32 [ 0, %94 ], [ %81, %96 ]
  %132 = phi i32 [ 0, %94 ], [ %83, %96 ]
  %133 = bitcast %struct.SkIRect* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 16, i1 false)
  %134 = icmp ne %class.SkSpecialImage* %51, null
  br i1 %134, label %135, label %170

135:                                              ; preds = %129
  %136 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 2, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 2, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = sub i32 %137, %139
  %141 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 2, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 2, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = sub i32 %142, %144
  %146 = sext i32 %71 to i64
  %147 = sext i32 %140 to i64
  %148 = add nsw i64 %147, %146
  %149 = icmp slt i64 %148, 2147483647
  %150 = select i1 %149, i64 %148, i64 2147483647
  %151 = icmp sgt i64 %150, -2147483647
  %152 = select i1 %151, i64 %150, i64 -2147483647
  %153 = sext i32 %72 to i64
  %154 = sext i32 %145 to i64
  %155 = add nsw i64 %154, %153
  %156 = icmp slt i64 %155, 2147483647
  %157 = select i1 %156, i64 %155, i64 2147483647
  %158 = icmp sgt i64 %157, -2147483647
  %159 = select i1 %158, i64 %157, i64 -2147483647
  %160 = zext i32 %72 to i64
  %161 = shl nuw i64 %160, 32
  %162 = zext i32 %71 to i64
  %163 = or i64 %161, %162
  %164 = shl nsw i64 %159, 32
  %165 = and i64 %152, 4294967295
  %166 = or i64 %164, %165
  %167 = bitcast %struct.SkIRect* %41 to i64*
  store i64 %163, i64* %167, align 8
  %168 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %41, i64 0, i32 2
  %169 = bitcast i32* %168 to i64*
  store i64 %166, i64* %169, align 8
  br label %170

170:                                              ; preds = %135, %129
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %41, %struct.SkIRect* nonnull dereferenceable(16) %40) #15
  %171 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %41, i64 0, i32 2
  %172 = load i32, i32* %171, align 8
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %41, i64 0, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = sext i32 %175 to i64
  %177 = sub nsw i64 %173, %176
  %178 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %41, i64 0, i32 3
  %179 = load i32, i32* %178, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %41, i64 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = sub nsw i64 %180, %183
  %185 = icmp slt i64 %177, 1
  %186 = icmp slt i64 %184, 1
  %187 = or i1 %185, %186
  br i1 %187, label %192, label %188

188:                                              ; preds = %170
  %189 = or i64 %184, %177
  %190 = add nsw i64 %189, 2147483648
  %191 = icmp ugt i64 %190, 4294967295
  br i1 %191, label %192, label %194

192:                                              ; preds = %170, %188
  %193 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %193, align 8
  br label %1196

194:                                              ; preds = %188
  %195 = bitcast %struct.SkIRect* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195) #15
  %196 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %42, i64 0, i32 0
  %197 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %42, i64 0, i32 1
  %198 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %42, i64 0, i32 2
  %199 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %42, i64 0, i32 3
  %200 = bitcast %struct.SkIRect* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %200, i8 -86, i64 16, i1 false)
  %201 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %48, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %41, %struct.SkIRect* nonnull %42) #15
  br i1 %201, label %204, label %202

202:                                              ; preds = %194
  %203 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %203, align 8
  br label %1195

204:                                              ; preds = %194
  %205 = load i32, i32* %196, align 4
  %206 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %205, i32* %206, align 4
  %207 = load i32, i32* %197, align 4
  %208 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %207, i32* %208, align 4
  %209 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %210 = load %class.SkSpecialImage*, %class.SkSpecialImage** %209, align 8
  %211 = call zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage* %210) #15
  br i1 %211, label %212, label %758

212:                                              ; preds = %204
  br i1 %52, label %216, label %213

213:                                              ; preds = %212
  %214 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 1 monotonic
  br label %216

216:                                              ; preds = %212, %213
  br i1 %76, label %220, label %217

217:                                              ; preds = %216
  %218 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = atomicrmw add i32* %218, i32 1 monotonic
  br label %220

220:                                              ; preds = %216, %217
  %221 = bitcast %class.GrSurfaceProxyView* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %221)
  %222 = bitcast %class.GrSurfaceProxyView* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %222)
  %223 = bitcast %class.GrImageInfo* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %223)
  %224 = bitcast %class.GrSurfaceProxyView* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224)
  %225 = bitcast %class.sk_sp.14* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225)
  %226 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %227 = bitcast { <2 x float>, <2 x float> }* %17 to %struct.SkRect*
  %228 = bitcast { i64, i64 }* %22 to %struct.SkIRect*
  %229 = bitcast { i64, i64 }* %23 to %struct.SkIRect*
  %230 = load %class.SkSpecialImage*, %class.SkSpecialImage** %209, align 8, !noalias !35
  %231 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %230) #15, !noalias !35
  %232 = bitcast %class.GrSurfaceProxyView* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %232) #15, !noalias !35
  %233 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %234 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %235 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 16, i1 false) #15, !noalias !35
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %233, align 8, !noalias !35
  store i32 0, i32* %234, align 8, !noalias !35
  %236 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %236, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #15, !noalias !35
  %237 = bitcast %class.GrSurfaceProxyView* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #15, !noalias !35
  %238 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 0, i32 0
  %239 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 1
  %240 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %237, i8 -86, i64 16, i1 false) #15, !noalias !35
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %238, align 8, !noalias !35
  store i32 0, i32* %239, align 8, !noalias !35
  %241 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %241, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #15, !noalias !35
  br i1 %52, label %288, label %242

242:                                              ; preds = %220
  %243 = bitcast %class.GrSurfaceProxyView* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %243) #15, !noalias !35
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %12, %class.SkSpecialImage* nonnull %51, %class.GrRecordingContext* %231) #15
  %244 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %245 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  %246 = load i64, i64* %245, align 8, !noalias !35
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %244, align 8, !noalias !35
  %247 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %233, align 8, !noalias !35
  %248 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %246, i64* %248, align 8, !noalias !35
  %249 = icmp eq %class.GrSurfaceProxy* %247, null
  br i1 %249, label %264, label %250

250:                                              ; preds = %242
  %251 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %247, i64 0, i32 1
  %252 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = atomicrmw add i32* %252, i32 -1 acq_rel
  %254 = icmp eq i32 %253, 1
  br i1 %254, label %255, label %262

255:                                              ; preds = %250
  %256 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %251, i64 -2
  %257 = bitcast %class.SkNVRefCnt.185* %256 to %class.GrSurfaceProxy*
  %258 = bitcast %class.SkNVRefCnt.185* %256 to void (%class.GrSurfaceProxy*)***
  %259 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %258, align 8
  %260 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %259, i64 1
  %261 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %260, align 8
  call void %261(%class.GrSurfaceProxy* nonnull %257) #15
  br label %262

262:                                              ; preds = %255, %250
  %263 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %244, align 8, !noalias !35
  br label %264

264:                                              ; preds = %262, %242
  %265 = phi %class.GrSurfaceProxy* [ %263, %262 ], [ null, %242 ]
  %266 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  %267 = load i32, i32* %266, align 8, !noalias !35
  store i32 %267, i32* %234, align 8, !noalias !35
  %268 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  %269 = load i16, i16* %268, align 4, !noalias !35
  store i16 %269, i16* %235, align 4, !noalias !35
  %270 = icmp eq %class.GrSurfaceProxy* %265, null
  br i1 %270, label %283, label %271

271:                                              ; preds = %264
  %272 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %265, i64 0, i32 1
  %273 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %272, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = atomicrmw add i32* %273, i32 -1 acq_rel
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %283

276:                                              ; preds = %271
  %277 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %272, i64 -2
  %278 = bitcast %class.SkNVRefCnt.185* %277 to %class.GrSurfaceProxy*
  %279 = bitcast %class.SkNVRefCnt.185* %277 to void (%class.GrSurfaceProxy*)***
  %280 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %279, align 8
  %281 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %280, i64 1
  %282 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %281, align 8
  call void %282(%class.GrSurfaceProxy* nonnull %278) #15
  br label %283

283:                                              ; preds = %276, %271, %264
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %243) #15, !noalias !35
  %284 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %233, align 8, !noalias !35
  %285 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %284, i64 0, i32 15
  %286 = load i8, i8* %285, align 1, !range !2
  %287 = icmp ne i8 %286, 0
  br label %288

288:                                              ; preds = %283, %220
  %289 = phi i1 [ %287, %283 ], [ false, %220 ]
  br i1 %76, label %336, label %290

290:                                              ; preds = %288
  %291 = bitcast %class.GrSurfaceProxyView* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %291) #15, !noalias !35
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %13, %class.SkSpecialImage* nonnull %75, %class.GrRecordingContext* %231) #15
  %292 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 0, i32 0
  %293 = bitcast %class.GrSurfaceProxyView* %13 to i64*
  %294 = load i64, i64* %293, align 8, !noalias !35
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %292, align 8, !noalias !35
  %295 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %238, align 8, !noalias !35
  %296 = bitcast %class.GrSurfaceProxyView* %11 to i64*
  store i64 %294, i64* %296, align 8, !noalias !35
  %297 = icmp eq %class.GrSurfaceProxy* %295, null
  br i1 %297, label %312, label %298

298:                                              ; preds = %290
  %299 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %295, i64 0, i32 1
  %300 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %299, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = atomicrmw add i32* %300, i32 -1 acq_rel
  %302 = icmp eq i32 %301, 1
  br i1 %302, label %303, label %310

303:                                              ; preds = %298
  %304 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %299, i64 -2
  %305 = bitcast %class.SkNVRefCnt.185* %304 to %class.GrSurfaceProxy*
  %306 = bitcast %class.SkNVRefCnt.185* %304 to void (%class.GrSurfaceProxy*)***
  %307 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %306, align 8
  %308 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %307, i64 1
  %309 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %308, align 8
  call void %309(%class.GrSurfaceProxy* nonnull %305) #15
  br label %310

310:                                              ; preds = %303, %298
  %311 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %292, align 8, !noalias !35
  br label %312

312:                                              ; preds = %310, %290
  %313 = phi %class.GrSurfaceProxy* [ %311, %310 ], [ null, %290 ]
  %314 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 1
  %315 = load i32, i32* %314, align 8, !noalias !35
  store i32 %315, i32* %239, align 8, !noalias !35
  %316 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 2, i32 0
  %317 = load i16, i16* %316, align 4, !noalias !35
  store i16 %317, i16* %240, align 4, !noalias !35
  %318 = icmp eq %class.GrSurfaceProxy* %313, null
  br i1 %318, label %331, label %319

319:                                              ; preds = %312
  %320 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %313, i64 0, i32 1
  %321 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %320, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = atomicrmw add i32* %321, i32 -1 acq_rel
  %323 = icmp eq i32 %322, 1
  br i1 %323, label %324, label %331

324:                                              ; preds = %319
  %325 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %320, i64 -2
  %326 = bitcast %class.SkNVRefCnt.185* %325 to %class.GrSurfaceProxy*
  %327 = bitcast %class.SkNVRefCnt.185* %325 to void (%class.GrSurfaceProxy*)***
  %328 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %327, align 8
  %329 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %328, i64 1
  %330 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %329, align 8
  call void %330(%class.GrSurfaceProxy* nonnull %326) #15
  br label %331

331:                                              ; preds = %324, %319, %312
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %291) #15, !noalias !35
  %332 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %238, align 8, !noalias !35
  %333 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %332, i64 0, i32 15
  %334 = load i8, i8* %333, align 1, !range !2
  %335 = icmp ne i8 %334, 0
  br label %336

336:                                              ; preds = %331, %288
  %337 = phi i1 [ %335, %331 ], [ %289, %288 ]
  %338 = load %class.SkSpecialImage*, %class.SkSpecialImage** %209, align 8, !noalias !35
  %339 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %338) #15, !noalias !35
  %340 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %339, i64 0, i32 0, i32 0
  %341 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %340) #15, !noalias !35
  br i1 %52, label %410, label %342

342:                                              ; preds = %336
  %343 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %343) #15, !noalias !35
  %344 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 2, i32 0
  %345 = load i32, i32* %344, align 4
  %346 = sitofp i32 %345 to float
  %347 = insertelement <2 x float> undef, float %346, i32 0
  %348 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 2, i32 1
  %349 = load i32, i32* %348, align 4
  %350 = sitofp i32 %349 to float
  %351 = insertelement <2 x float> %347, float %350, i32 1
  %352 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 2, i32 2
  %353 = load i32, i32* %352, align 4
  %354 = sitofp i32 %353 to float
  %355 = insertelement <2 x float> undef, float %354, i32 0
  %356 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 2, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = sitofp i32 %357 to float
  %359 = insertelement <2 x float> %355, float %358, i32 1
  %360 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  store <2 x float> %351, <2 x float>* %360, align 8, !noalias !35
  %361 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  store <2 x float> %359, <2 x float>* %361, align 8, !noalias !35
  %362 = bitcast %class.SkMatrix* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %362) #15, !noalias !35
  %363 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 1
  %364 = sitofp i32 %71 to float
  %365 = fsub float %346, %364
  %366 = sitofp i32 %72 to float
  %367 = fsub float %350, %366
  %368 = bitcast %class.SkMatrix* %15 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %368, align 16, !alias.scope !38, !noalias !35
  %369 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 4
  %370 = bitcast float* %369 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %370, align 16, !alias.scope !38, !noalias !35
  %371 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %371, align 16, !alias.scope !38, !noalias !35
  store i32 16, i32* %363, align 4, !alias.scope !38, !noalias !35
  %372 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %15, float %365, float %367) #15
  %373 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  %374 = load i64, i64* %373, align 8, !noalias !35
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %233, align 8, !noalias !35
  %375 = bitcast %class.GrSurfaceProxyView* %16 to i64*
  store i64 %374, i64* %375, align 8, !noalias !35
  %376 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 1
  %377 = load i32, i32* %234, align 8, !noalias !35
  store i32 %377, i32* %376, align 8, !noalias !35
  %378 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 2, i32 0
  %379 = load i16, i16* %235, align 4, !noalias !35
  store i16 %379, i16* %378, align 4, !noalias !35
  %380 = bitcast %class.SkSpecialImage* %51 to i32 (%class.SkSpecialImage*)***
  %381 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %380, align 8
  %382 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %381, i64 3
  %383 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %382, align 8
  %384 = call i32 %383(%class.SkSpecialImage* nonnull %51) #15
  %385 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView* nonnull %16, i32 %384, %class.SkMatrix* nonnull dereferenceable(40) %15, i64 2863268611, i32 0, %struct.SkRect* nonnull dereferenceable(16) %226, %class.GrCaps* dereferenceable(232) %341, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0), i1 zeroext false) #15
  %386 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 0, i32 0
  %387 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %386, align 8, !noalias !35
  %388 = icmp eq %class.GrSurfaceProxy* %387, null
  br i1 %388, label %401, label %389

389:                                              ; preds = %342
  %390 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %387, i64 0, i32 1
  %391 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %390, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = atomicrmw add i32* %391, i32 -1 acq_rel
  %393 = icmp eq i32 %392, 1
  br i1 %393, label %394, label %401

394:                                              ; preds = %389
  %395 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %390, i64 -2
  %396 = bitcast %class.SkNVRefCnt.185* %395 to %class.GrSurfaceProxy*
  %397 = bitcast %class.SkNVRefCnt.185* %395 to void (%class.GrSurfaceProxy*)***
  %398 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %397, align 8
  %399 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %398, i64 1
  %400 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %399, align 8
  call void %400(%class.GrSurfaceProxy* nonnull %396) #15
  br label %401

401:                                              ; preds = %394, %389, %342
  %402 = call %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage* nonnull %51) #15
  %403 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %380, align 8
  %404 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %403, i64 3
  %405 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %404, align 8
  %406 = call i32 %405(%class.SkSpecialImage* nonnull %51) #15
  %407 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %408 = load %class.SkColorSpace*, %class.SkColorSpace** %407, align 8, !noalias !35
  %409 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %385, %class.SkColorSpace* %402, i32 %406, %class.SkColorSpace* %408, i32 2) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %362) #15, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %343) #15, !noalias !35
  br label %412

410:                                              ; preds = %336
  %411 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor9MakeColorE8SkRGBA4fIL11SkAlphaType2EE(<2 x float> zeroinitializer, <2 x float> zeroinitializer) #15
  br label %412

412:                                              ; preds = %410, %401
  %413 = phi %class.GrFragmentProcessor* [ %409, %401 ], [ %411, %410 ]
  br i1 %76, label %487, label %414

414:                                              ; preds = %412
  %415 = bitcast { <2 x float>, <2 x float> }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %415) #15, !noalias !35
  %416 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 2, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = sitofp i32 %417 to float
  %419 = insertelement <2 x float> undef, float %418, i32 0
  %420 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 2, i32 1
  %421 = load i32, i32* %420, align 4
  %422 = sitofp i32 %421 to float
  %423 = insertelement <2 x float> %419, float %422, i32 1
  %424 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 2, i32 2
  %425 = load i32, i32* %424, align 4
  %426 = sitofp i32 %425 to float
  %427 = insertelement <2 x float> undef, float %426, i32 0
  %428 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 2, i32 3
  %429 = load i32, i32* %428, align 4
  %430 = sitofp i32 %429 to float
  %431 = insertelement <2 x float> %427, float %430, i32 1
  %432 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %17, i64 0, i32 0
  store <2 x float> %423, <2 x float>* %432, align 8, !noalias !35
  %433 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %17, i64 0, i32 1
  store <2 x float> %431, <2 x float>* %433, align 8, !noalias !35
  %434 = bitcast %class.SkMatrix* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %434) #15, !noalias !35
  %435 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 1
  %436 = sitofp i32 %131 to float
  %437 = fsub float %418, %436
  %438 = sitofp i32 %132 to float
  %439 = fsub float %422, %438
  %440 = bitcast %class.SkMatrix* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %440, align 16, !alias.scope !41, !noalias !35
  %441 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 4
  %442 = bitcast float* %441 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %442, align 16, !alias.scope !41, !noalias !35
  %443 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %443, align 16, !alias.scope !41, !noalias !35
  store i32 16, i32* %435, align 4, !alias.scope !41, !noalias !35
  %444 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %18, float %437, float %439) #15
  %445 = bitcast %class.GrSurfaceProxyView* %11 to i64*
  %446 = load i64, i64* %445, align 8, !noalias !35
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %238, align 8, !noalias !35
  %447 = bitcast %class.GrSurfaceProxyView* %19 to i64*
  store i64 %446, i64* %447, align 8, !noalias !35
  %448 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 1
  %449 = load i32, i32* %239, align 8, !noalias !35
  store i32 %449, i32* %448, align 8, !noalias !35
  %450 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 2, i32 0
  %451 = load i16, i16* %240, align 4, !noalias !35
  store i16 %451, i16* %450, align 4, !noalias !35
  %452 = bitcast %class.SkSpecialImage* %75 to i32 (%class.SkSpecialImage*)***
  %453 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %452, align 8
  %454 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %453, i64 3
  %455 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %454, align 8
  %456 = call i32 %455(%class.SkSpecialImage* nonnull %75) #15
  %457 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView* nonnull %19, i32 %456, %class.SkMatrix* nonnull dereferenceable(40) %18, i64 2863268611, i32 0, %struct.SkRect* nonnull dereferenceable(16) %227, %class.GrCaps* dereferenceable(232) %341, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0), i1 zeroext false) #15
  %458 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 0, i32 0
  %459 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %458, align 8, !noalias !35
  %460 = icmp eq %class.GrSurfaceProxy* %459, null
  br i1 %460, label %473, label %461

461:                                              ; preds = %414
  %462 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %459, i64 0, i32 1
  %463 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %462, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %464 = atomicrmw add i32* %463, i32 -1 acq_rel
  %465 = icmp eq i32 %464, 1
  br i1 %465, label %466, label %473

466:                                              ; preds = %461
  %467 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %462, i64 -2
  %468 = bitcast %class.SkNVRefCnt.185* %467 to %class.GrSurfaceProxy*
  %469 = bitcast %class.SkNVRefCnt.185* %467 to void (%class.GrSurfaceProxy*)***
  %470 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %469, align 8
  %471 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %470, i64 1
  %472 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %471, align 8
  call void %472(%class.GrSurfaceProxy* nonnull %468) #15
  br label %473

473:                                              ; preds = %466, %461, %414
  %474 = call %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage* nonnull %75) #15
  %475 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %452, align 8
  %476 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %475, i64 3
  %477 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %476, align 8
  %478 = call i32 %477(%class.SkSpecialImage* nonnull %75) #15
  %479 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %480 = load %class.SkColorSpace*, %class.SkColorSpace** %479, align 8, !noalias !35
  %481 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %457, %class.SkColorSpace* %474, i32 %478, %class.SkColorSpace* %480, i32 2) #15
  %482 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %1, i64 0, i32 1
  %483 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %1, i64 0, i32 2
  %484 = load i8, i8* %483, align 4, !range !2, !noalias !35
  %485 = icmp ne i8 %484, 0
  %486 = call %class.GrFragmentProcessor* @_Z18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS_14default_deleteIS1_EEEES4_RK4SkV4b(%class.GrFragmentProcessor* %481, %class.GrFragmentProcessor* %413, %struct.SkV4* dereferenceable(16) %482, i1 zeroext %485) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %434) #15, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %415) #15, !noalias !35
  br label %487

487:                                              ; preds = %473, %412
  %488 = phi %class.GrFragmentProcessor* [ %486, %473 ], [ %413, %412 ]
  %489 = ptrtoint %class.GrFragmentProcessor* %488 to i64
  %490 = bitcast %class.GrImageInfo* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %490) #15, !noalias !35
  %491 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %20, i64 0, i32 0, i32 0, i32 0
  %492 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %20, i64 0, i32 0, i32 1, i32 0
  %493 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %490, i8 -86, i64 32, i1 false) #15, !noalias !35
  %494 = load i32, i32* %493, align 8, !noalias !35
  %495 = icmp ult i32 %494, 21
  br i1 %495, label %497, label %496

496:                                              ; preds = %487
  call void @llvm.trap() #15
  unreachable

497:                                              ; preds = %487
  %498 = sext i32 %494 to i64
  %499 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK12_GLOBAL__N_123SkArithmeticImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint, i64 0, i64 %498
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %502 = load %class.SkColorSpace*, %class.SkColorSpace** %501, align 8, !noalias !44
  %503 = icmp eq %class.SkColorSpace* %502, null
  br i1 %503, label %507, label %504

504:                                              ; preds = %497
  %505 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %502, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %506 = atomicrmw add i32* %505, i32 1 monotonic, !noalias !47
  br label %507

507:                                              ; preds = %504, %497
  %508 = ptrtoint %class.SkColorSpace* %502 to i64
  %509 = load i32, i32* %198, align 4, !noalias !35
  %510 = load i32, i32* %196, align 4, !noalias !35
  %511 = sub i32 %509, %510
  %512 = load i32, i32* %199, align 4, !noalias !35
  %513 = load i32, i32* %197, align 4, !noalias !35
  %514 = sub i32 %512, %513
  %515 = zext i32 %514 to i64
  %516 = shl nuw i64 %515, 32
  %517 = zext i32 %511 to i64
  %518 = or i64 %516, %517
  %519 = bitcast %class.sk_sp.14* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %519) #15, !noalias !35
  %520 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %20, i64 0, i32 0
  %521 = bitcast %class.sk_sp.14* %6 to i64*
  store i64 %508, i64* %521, align 8, !noalias !35
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %520, i32 %500, i32 2, %class.sk_sp.14* nonnull %6) #15, !noalias !35
  %522 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %6, i64 0, i32 0
  %523 = load %class.SkColorSpace*, %class.SkColorSpace** %522, align 8, !noalias !35
  %524 = icmp eq %class.SkColorSpace* %523, null
  br i1 %524, label %531, label %525

525:                                              ; preds = %507
  %526 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %523, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = atomicrmw add i32* %526, i32 -1 acq_rel
  %528 = icmp eq i32 %527, 1
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = bitcast %class.SkColorSpace* %523 to i8*
  call void @_ZdlPv(i8* %530) #16
  br label %531

531:                                              ; preds = %529, %525, %507
  %532 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %20, i64 0, i32 1
  %533 = bitcast %struct.SkISize* %532 to i64*
  store i64 %518, i64* %533, align 8, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %519) #15, !noalias !35
  %534 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %21, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %534, %class.GrColorInfo* nonnull dereferenceable(24) %520) #15, !noalias !35
  %535 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %21, i64 0, i32 1
  %536 = bitcast %struct.SkISize* %535 to i64*
  %537 = load i64, i64* %533, align 8, !noalias !35
  store i64 %537, i64* %536, align 8, !noalias !35
  %538 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %231, %class.GrImageInfo* nonnull %21, i32 0, i32 1, i1 zeroext false, i1 zeroext %337, i32 1, i1 zeroext true) #15, !noalias !35
  %539 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %21, i64 0, i32 0, i32 1, i32 0
  %540 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %539, align 8, !noalias !35
  %541 = icmp eq %class.GrColorSpaceXform* %540, null
  br i1 %541, label %552, label %542

542:                                              ; preds = %531
  %543 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %540, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = atomicrmw add i32* %543, i32 -1 acq_rel
  %545 = icmp eq i32 %544, 1
  br i1 %545, label %546, label %552

546:                                              ; preds = %542
  %547 = bitcast %class.GrColorSpaceXform* %540 to %class.SkRefCntBase*
  %548 = bitcast %class.GrColorSpaceXform* %540 to void (%class.SkRefCntBase*)***
  %549 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %548, align 8
  %550 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %549, i64 2
  %551 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %550, align 8
  call void %551(%class.SkRefCntBase* nonnull %547) #15
  br label %552

552:                                              ; preds = %546, %542, %531
  %553 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %21, i64 0, i32 0, i32 0, i32 0
  %554 = load %class.SkColorSpace*, %class.SkColorSpace** %553, align 8, !noalias !35
  %555 = icmp eq %class.SkColorSpace* %554, null
  br i1 %555, label %562, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %554, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = atomicrmw add i32* %557, i32 -1 acq_rel
  %559 = icmp eq i32 %558, 1
  br i1 %559, label %560, label %562

560:                                              ; preds = %556
  %561 = bitcast %class.SkColorSpace* %554 to i8*
  call void @_ZdlPv(i8* %561) #16
  br label %562

562:                                              ; preds = %560, %556, %552
  %563 = icmp eq %class.GrSurfaceFillContext* %538, null
  br i1 %563, label %564, label %566

564:                                              ; preds = %562
  %565 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %565, align 8, !alias.scope !35
  br label %675

566:                                              ; preds = %562
  %567 = bitcast { i64, i64 }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %567) #15, !noalias !35
  %568 = load i32, i32* %198, align 4, !noalias !35
  %569 = load i32, i32* %196, align 4, !noalias !35
  %570 = sub i32 %568, %569
  %571 = load i32, i32* %199, align 4, !noalias !35
  %572 = load i32, i32* %197, align 4, !noalias !35
  %573 = sub i32 %571, %572
  %574 = zext i32 %573 to i64
  %575 = shl nuw i64 %574, 32
  %576 = zext i32 %570 to i64
  %577 = or i64 %575, %576
  %578 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 0
  store i64 0, i64* %578, align 8, !noalias !35
  %579 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 1
  store i64 %577, i64* %579, align 8, !noalias !35
  %580 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %581 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %581) #15, !noalias !35
  %582 = sitofp i32 %569 to float
  %583 = insertelement <2 x float> undef, float %582, i32 0
  %584 = sitofp i32 %572 to float
  %585 = insertelement <2 x float> %583, float %584, i32 1
  %586 = sitofp i32 %568 to float
  %587 = insertelement <2 x float> undef, float %586, i32 0
  %588 = sitofp i32 %571 to float
  %589 = insertelement <2 x float> %587, float %588, i32 1
  %590 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %585, <2 x float>* %590, align 8, !noalias !35
  %591 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %589, <2 x float>* %591, align 8, !noalias !35
  %592 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %593 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %593) #15, !noalias !35
  %594 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %595 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %595) #15, !noalias !35
  %596 = sitofp i32 %570 to float
  %597 = insertelement <2 x float> undef, float %596, i32 0
  %598 = sitofp i32 %573 to float
  %599 = insertelement <2 x float> %597, float %598, i32 1
  %600 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %600, align 8, !noalias !35
  %601 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %599, <2 x float>* %601, align 8, !noalias !35
  %602 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %602, align 16, !alias.scope !50, !noalias !35
  %603 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %604 = bitcast float* %603 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %604, align 16, !alias.scope !50, !noalias !35
  %605 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %605, align 16, !alias.scope !50, !noalias !35
  store i32 16, i32* %594, align 4, !alias.scope !50, !noalias !35
  %606 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %7, %struct.SkRect* nonnull dereferenceable(16) %592, %struct.SkRect* nonnull dereferenceable(16) %580, i32 0) #15, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %595) #15, !noalias !35
  %607 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %7, %class.GrFragmentProcessor* %488) #15, !noalias !35
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %538, %struct.SkIRect* nonnull dereferenceable(16) %228, %class.GrFragmentProcessor* %607) #15, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %593) #15, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %581) #15, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %567) #15, !noalias !35
  %608 = bitcast { i64, i64 }* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %608) #15, !noalias !35
  %609 = load i32, i32* %198, align 4, !noalias !35
  %610 = load i32, i32* %196, align 4, !noalias !35
  %611 = sub i32 %609, %610
  %612 = load i32, i32* %199, align 4, !noalias !35
  %613 = load i32, i32* %197, align 4, !noalias !35
  %614 = sub i32 %612, %613
  %615 = zext i32 %614 to i64
  %616 = shl nuw i64 %615, 32
  %617 = zext i32 %611 to i64
  %618 = or i64 %616, %617
  %619 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 0
  store i64 0, i64* %619, align 8, !noalias !35
  %620 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 1
  store i64 %618, i64* %620, align 8, !noalias !35
  %621 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %24, i64 0, i32 0, i32 0
  %622 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %538, i64 0, i32 0, i32 2, i32 0, i32 0
  %623 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %622, align 8, !noalias !55
  %624 = icmp eq %class.GrSurfaceProxy* %623, null
  br i1 %624, label %628, label %625

625:                                              ; preds = %566
  %626 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %623, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %627 = atomicrmw add i32* %626, i32 1 monotonic, !noalias !58
  br label %628

628:                                              ; preds = %625, %566
  store %class.GrSurfaceProxy* %623, %class.GrSurfaceProxy** %621, align 8, !alias.scope !58, !noalias !35
  %629 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %24, i64 0, i32 1
  %630 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %538, i64 0, i32 0, i32 2, i32 1
  %631 = load i32, i32* %630, align 8, !noalias !55
  store i32 %631, i32* %629, align 8, !alias.scope !58, !noalias !35
  %632 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %24, i64 0, i32 2, i32 0
  %633 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %538, i64 0, i32 0, i32 2, i32 2, i32 0
  %634 = load i16, i16* %633, align 2, !noalias !55
  store i16 %634, i16* %632, align 4, !alias.scope !58, !noalias !35
  %635 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %538, i64 0, i32 0, i32 3, i32 2
  %636 = load i32, i32* %635, align 8, !noalias !35
  %637 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %25, i64 0, i32 0
  %638 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %538, i64 0, i32 0, i32 3, i32 0, i32 0
  %639 = load %class.SkColorSpace*, %class.SkColorSpace** %638, align 8, !noalias !59
  %640 = icmp eq %class.SkColorSpace* %639, null
  br i1 %640, label %644, label %641

641:                                              ; preds = %628
  %642 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %639, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %643 = atomicrmw add i32* %642, i32 1 monotonic, !noalias !62
  br label %644

644:                                              ; preds = %641, %628
  store %class.SkColorSpace* %639, %class.SkColorSpace** %637, align 8, !alias.scope !62, !noalias !35
  %645 = load %class.SkSpecialImage*, %class.SkSpecialImage** %209, align 8, !noalias !35
  %646 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %645, i64 0, i32 1
  call void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.62* sret %0, %class.GrRecordingContext* %231, %struct.SkIRect* nonnull dereferenceable(16) %229, i32 0, %class.GrSurfaceProxyView* nonnull %24, i32 %636, %class.sk_sp.14* nonnull %25, %class.SkSurfaceProps* dereferenceable(8) %646, i32 2) #15
  %647 = load %class.SkColorSpace*, %class.SkColorSpace** %637, align 8, !noalias !35
  %648 = icmp eq %class.SkColorSpace* %647, null
  br i1 %648, label %655, label %649

649:                                              ; preds = %644
  %650 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %647, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %651 = atomicrmw add i32* %650, i32 -1 acq_rel
  %652 = icmp eq i32 %651, 1
  br i1 %652, label %653, label %655

653:                                              ; preds = %649
  %654 = bitcast %class.SkColorSpace* %647 to i8*
  call void @_ZdlPv(i8* %654) #16
  br label %655

655:                                              ; preds = %653, %649, %644
  %656 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %621, align 8, !noalias !35
  %657 = icmp eq %class.GrSurfaceProxy* %656, null
  br i1 %657, label %670, label %658

658:                                              ; preds = %655
  %659 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %656, i64 0, i32 1
  %660 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %659, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = atomicrmw add i32* %660, i32 -1 acq_rel
  %662 = icmp eq i32 %661, 1
  br i1 %662, label %663, label %670

663:                                              ; preds = %658
  %664 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %659, i64 -2
  %665 = bitcast %class.SkNVRefCnt.185* %664 to %class.GrSurfaceProxy*
  %666 = bitcast %class.SkNVRefCnt.185* %664 to void (%class.GrSurfaceProxy*)***
  %667 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %666, align 8
  %668 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %667, i64 1
  %669 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %668, align 8
  call void %669(%class.GrSurfaceProxy* nonnull %665) #15
  br label %670

670:                                              ; preds = %663, %658, %655
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %608) #15, !noalias !35
  %671 = bitcast %class.GrSurfaceFillContext* %538 to void (%class.GrSurfaceFillContext*)***
  %672 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %671, align 8
  %673 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %672, i64 1
  %674 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %673, align 8
  call void %674(%class.GrSurfaceFillContext* nonnull %538) #15
  br label %675

675:                                              ; preds = %670, %564
  %676 = phi i64 [ %489, %564 ], [ 0, %670 ]
  %677 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %492, align 8, !noalias !35
  %678 = icmp eq %class.GrColorSpaceXform* %677, null
  br i1 %678, label %689, label %679

679:                                              ; preds = %675
  %680 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %677, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %681 = atomicrmw add i32* %680, i32 -1 acq_rel
  %682 = icmp eq i32 %681, 1
  br i1 %682, label %683, label %689

683:                                              ; preds = %679
  %684 = bitcast %class.GrColorSpaceXform* %677 to %class.SkRefCntBase*
  %685 = bitcast %class.GrColorSpaceXform* %677 to void (%class.SkRefCntBase*)***
  %686 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %685, align 8
  %687 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %686, i64 2
  %688 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %687, align 8
  call void %688(%class.SkRefCntBase* nonnull %684) #15
  br label %689

689:                                              ; preds = %683, %679, %675
  %690 = load %class.SkColorSpace*, %class.SkColorSpace** %491, align 8, !noalias !35
  %691 = icmp eq %class.SkColorSpace* %690, null
  br i1 %691, label %698, label %692

692:                                              ; preds = %689
  %693 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %690, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %694 = atomicrmw add i32* %693, i32 -1 acq_rel
  %695 = icmp eq i32 %694, 1
  br i1 %695, label %696, label %698

696:                                              ; preds = %692
  %697 = bitcast %class.SkColorSpace* %690 to i8*
  call void @_ZdlPv(i8* %697) #16
  br label %698

698:                                              ; preds = %696, %692, %689
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %490) #15, !noalias !35
  %699 = icmp eq i64 %676, 0
  br i1 %699, label %706, label %700

700:                                              ; preds = %698
  %701 = inttoptr i64 %676 to %class.GrFragmentProcessor*
  %702 = inttoptr i64 %676 to void (%class.GrFragmentProcessor*)***
  %703 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %702, align 8
  %704 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %703, i64 1
  %705 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %704, align 8
  call void %705(%class.GrFragmentProcessor* nonnull %701) #15
  br label %706

706:                                              ; preds = %700, %698
  %707 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %238, align 8, !noalias !35
  %708 = icmp eq %class.GrSurfaceProxy* %707, null
  br i1 %708, label %721, label %709

709:                                              ; preds = %706
  %710 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %707, i64 0, i32 1
  %711 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %710, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %712 = atomicrmw add i32* %711, i32 -1 acq_rel
  %713 = icmp eq i32 %712, 1
  br i1 %713, label %714, label %721

714:                                              ; preds = %709
  %715 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %710, i64 -2
  %716 = bitcast %class.SkNVRefCnt.185* %715 to %class.GrSurfaceProxy*
  %717 = bitcast %class.SkNVRefCnt.185* %715 to void (%class.GrSurfaceProxy*)***
  %718 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %717, align 8
  %719 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %718, i64 1
  %720 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %719, align 8
  call void %720(%class.GrSurfaceProxy* nonnull %716) #15
  br label %721

721:                                              ; preds = %714, %709, %706
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #15, !noalias !35
  %722 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %233, align 8, !noalias !35
  %723 = icmp eq %class.GrSurfaceProxy* %722, null
  br i1 %723, label %736, label %724

724:                                              ; preds = %721
  %725 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %722, i64 0, i32 1
  %726 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %725, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %727 = atomicrmw add i32* %726, i32 -1 acq_rel
  %728 = icmp eq i32 %727, 1
  br i1 %728, label %729, label %736

729:                                              ; preds = %724
  %730 = getelementptr inbounds %class.SkNVRefCnt.185, %class.SkNVRefCnt.185* %725, i64 -2
  %731 = bitcast %class.SkNVRefCnt.185* %730 to %class.GrSurfaceProxy*
  %732 = bitcast %class.SkNVRefCnt.185* %730 to void (%class.GrSurfaceProxy*)***
  %733 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %732, align 8
  %734 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %733, i64 1
  %735 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %734, align 8
  call void %735(%class.GrSurfaceProxy* nonnull %731) #15
  br label %736

736:                                              ; preds = %721, %724, %729
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %232) #15, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %221)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %222)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %223)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225)
  br i1 %76, label %747, label %737

737:                                              ; preds = %736
  %738 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %739 = atomicrmw add i32* %738, i32 -1 acq_rel
  %740 = icmp eq i32 %739, 1
  br i1 %740, label %741, label %747

741:                                              ; preds = %737
  %742 = bitcast %class.SkSpecialImage* %75 to %class.SkRefCntBase*
  %743 = bitcast %class.SkSpecialImage* %75 to void (%class.SkRefCntBase*)***
  %744 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %743, align 8
  %745 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %744, i64 2
  %746 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %745, align 8
  call void %746(%class.SkRefCntBase* nonnull %742) #15
  br label %747

747:                                              ; preds = %736, %737, %741
  br i1 %52, label %1195, label %748

748:                                              ; preds = %747
  %749 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %750 = atomicrmw add i32* %749, i32 -1 acq_rel
  %751 = icmp eq i32 %750, 1
  br i1 %751, label %752, label %1195

752:                                              ; preds = %748
  %753 = bitcast %class.SkSpecialImage* %51 to %class.SkRefCntBase*
  %754 = bitcast %class.SkSpecialImage* %51 to void (%class.SkRefCntBase*)***
  %755 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %754, align 8
  %756 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %755, i64 2
  %757 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %756, align 8
  call void %757(%class.SkRefCntBase* nonnull %753) #15
  br label %1195

758:                                              ; preds = %204
  %759 = bitcast %class.sk_sp.64* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %759) #15
  %760 = getelementptr inbounds %class.sk_sp.64, %class.sk_sp.64* %43, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %760, align 8
  %761 = bitcast i64* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %761) #15
  %762 = load i32, i32* %198, align 4
  %763 = load i32, i32* %196, align 4
  %764 = sub i32 %762, %763
  %765 = load i32, i32* %199, align 4
  %766 = load i32, i32* %197, align 4
  %767 = sub i32 %765, %766
  %768 = zext i32 %767 to i64
  %769 = shl nuw i64 %768, 32
  %770 = zext i32 %764 to i64
  %771 = or i64 %769, %770
  store i64 %771, i64* %44, align 8
  %772 = load %class.SkSpecialImage*, %class.SkSpecialImage** %209, align 8, !noalias !63
  %773 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %772, i64 0, i32 1
  %774 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %775 = load i32, i32* %774, align 8, !noalias !63
  %776 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %777 = load %class.SkColorSpace*, %class.SkColorSpace** %776, align 8, !noalias !63
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.64* nonnull sret %43, %class.SkSpecialImage* %772, i32 %775, %class.SkColorSpace* %777, %struct.SkISize* nonnull dereferenceable(8) %45, i32 2, %class.SkSurfaceProps* dereferenceable(8) %773) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %761) #15
  %778 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %760, align 8
  %779 = icmp eq %class.SkSpecialSurface* %778, null
  br i1 %779, label %780, label %782

780:                                              ; preds = %758
  %781 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %781, align 8
  br label %1194

782:                                              ; preds = %758
  %783 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %778) #15
  %784 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %785 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %785) #15
  %786 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #15
  %787 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %788 = extractvalue { <2 x float>, <2 x float> } %786, 0
  store <2 x float> %788, <2 x float>* %787, align 8
  %789 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %790 = extractvalue { <2 x float>, <2 x float> } %786, 1
  store <2 x float> %790, <2 x float>* %789, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %783, %struct.SkRGBA4f* nonnull dereferenceable(16) %784, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %785) #15
  %791 = load i32, i32* %196, align 4
  %792 = sub nsw i32 0, %791
  %793 = sitofp i32 %792 to float
  %794 = load i32, i32* %197, align 4
  %795 = sub nsw i32 0, %794
  %796 = sitofp i32 %795 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %783, float %793, float %796) #15
  br i1 %134, label %797, label %806

797:                                              ; preds = %782
  %798 = bitcast %class.SkPaint* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %798) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %798, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_123SkArithmeticImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %46) #15
  %799 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %46, i64 0, i32 8, i32 0, i32 0
  %800 = load i32, i32* %799, align 8
  %801 = and i32 %800, -261121
  %802 = or i32 %801, 1024
  store i32 %802, i32* %799, align 8
  %803 = sitofp i32 %71 to float
  %804 = sitofp i32 %72 to float
  %805 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %47, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %805) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %805, i8 0, i64 20, i1 false)
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %51, %class.SkCanvas* %783, float %803, float %804, %struct.SkSamplingOptions* nonnull dereferenceable(20) %47, %class.SkPaint* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %805) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %798) #15
  br label %806

806:                                              ; preds = %797, %782
  %807 = bitcast { i64, i64 }* %31 to %struct.SkIRect*
  %808 = bitcast { i64, i64 }* %36 to %struct.SkIRect*
  %809 = bitcast %class.SkPixmap* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %809) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %809, i8 0, i64 40, i1 false) #15
  %810 = call zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas* %783, %class.SkPixmap* nonnull %29) #15
  br i1 %810, label %811, label %1170

811:                                              ; preds = %806
  %812 = bitcast %class.SkMatrix* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %812) #15
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %30, %class.SkCanvas* %783) #15
  %813 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %30, i64 0, i32 0, i64 2
  %814 = load float, float* %813, align 4
  %815 = fadd float %814, 5.000000e-01
  %816 = call float @llvm.floor.f32(float %815) #15
  %817 = fcmp olt float %816, 0x41DFFFFFE0000000
  %818 = select i1 %817, float %816, float 0x41DFFFFFE0000000
  %819 = fcmp ogt float %818, 0xC1DFFFFFE0000000
  %820 = select i1 %819, float %818, float 0xC1DFFFFFE0000000
  %821 = fptosi float %820 to i32
  %822 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %30, i64 0, i32 0, i64 5
  %823 = load float, float* %822, align 4
  %824 = fadd float %823, 5.000000e-01
  %825 = call float @llvm.floor.f32(float %824) #15
  %826 = fcmp olt float %825, 0x41DFFFFFE0000000
  %827 = select i1 %826, float %825, float 0x41DFFFFFE0000000
  %828 = fcmp ogt float %827, 0xC1DFFFFFE0000000
  %829 = select i1 %828, float %827, float 0xC1DFFFFFE0000000
  %830 = fptosi float %829 to i32
  %831 = bitcast { i64, i64 }* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %831) #15
  %832 = bitcast { i64, i64 }* %31 to i32*
  %833 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %807, i64 0, i32 1
  %834 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i64 0, i32 1
  %835 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %40, i64 0, i32 0
  %836 = load i32, i32* %835, align 8
  %837 = sext i32 %836 to i64
  %838 = sext i32 %821 to i64
  %839 = add nsw i64 %838, %837
  %840 = icmp slt i64 %839, 2147483647
  %841 = select i1 %840, i64 %839, i64 2147483647
  %842 = icmp sgt i64 %841, -2147483647
  %843 = select i1 %842, i64 %841, i64 -2147483647
  %844 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %40, i64 0, i32 1
  %845 = load i32, i32* %844, align 4
  %846 = sext i32 %845 to i64
  %847 = sext i32 %830 to i64
  %848 = add nsw i64 %847, %846
  %849 = icmp slt i64 %848, 2147483647
  %850 = select i1 %849, i64 %848, i64 2147483647
  %851 = icmp sgt i64 %850, -2147483647
  %852 = select i1 %851, i64 %850, i64 -2147483647
  %853 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %40, i64 0, i32 2
  %854 = load i32, i32* %853, align 8
  %855 = sext i32 %854 to i64
  %856 = add nsw i64 %838, %855
  %857 = icmp slt i64 %856, 2147483647
  %858 = select i1 %857, i64 %856, i64 2147483647
  %859 = icmp sgt i64 %858, -2147483647
  %860 = select i1 %859, i64 %858, i64 -2147483647
  %861 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %40, i64 0, i32 3
  %862 = load i32, i32* %861, align 4
  %863 = sext i32 %862 to i64
  %864 = add nsw i64 %847, %863
  %865 = icmp slt i64 %864, 2147483647
  %866 = select i1 %865, i64 %864, i64 2147483647
  %867 = icmp sgt i64 %866, -2147483647
  %868 = select i1 %867, i64 %866, i64 -2147483647
  %869 = shl nsw i64 %852, 32
  %870 = and i64 %843, 4294967295
  %871 = or i64 %869, %870
  %872 = shl nsw i64 %868, 32
  %873 = and i64 %860, 4294967295
  %874 = or i64 %872, %873
  %875 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i64 0, i32 0
  store i64 %871, i64* %875, align 8
  store i64 %874, i64* %834, align 8
  br i1 %76, label %1113, label %876

876:                                              ; preds = %811
  %877 = bitcast %class.SkBitmap* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %877) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %877, i8 -86, i64 56, i1 false) #15
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %32) #15
  %878 = bitcast %class.SkPixmap* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %878) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %878, i8 0, i64 40, i1 false) #15
  %879 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* nonnull %75, %class.SkBitmap* nonnull %32) #15
  br i1 %879, label %880, label %1102

880:                                              ; preds = %876
  %881 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* nonnull %32, %class.SkPixmap* nonnull %33) #15
  br i1 %881, label %882, label %1102

882:                                              ; preds = %880
  %883 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %1, i64 0, i32 2
  %884 = load i8, i8* %883, align 4, !range !2
  %885 = icmp eq i8 %884, 0
  %886 = select i1 %885, void (%struct.SkV4*, i32*, i32*, i32)* @_Z10arith_spanILb0EEvRK4SkV4PjPKji, void (%struct.SkV4*, i32*, i32*, i32)* @_Z10arith_spanILb1EEvRK4SkV4PjPKji
  %887 = bitcast %class.SkPixmap* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %887) #15
  %888 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 2
  %889 = bitcast %struct.SkImageInfo* %888 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %889, i8 -86, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %887, i8* nonnull align 8 %809, i64 16, i1 false) #15
  %890 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 2, i32 0, i32 0, i32 0
  %891 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %29, i64 0, i32 2, i32 0, i32 0, i32 0
  %892 = load %class.SkColorSpace*, %class.SkColorSpace** %891, align 8
  %893 = icmp eq %class.SkColorSpace* %892, null
  br i1 %893, label %897, label %894

894:                                              ; preds = %882
  %895 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %892, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %896 = atomicrmw add i32* %895, i32 1 monotonic
  br label %897

897:                                              ; preds = %894, %882
  store %class.SkColorSpace* %892, %class.SkColorSpace** %890, align 8
  %898 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 2, i32 0, i32 1
  %899 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %29, i64 0, i32 2, i32 0, i32 1
  %900 = bitcast i32* %898 to i64*
  %901 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 2, i32 1
  %902 = bitcast %struct.SkISize* %901 to i64*
  %903 = bitcast i32* %899 to <2 x i64>*
  %904 = load <2 x i64>, <2 x i64>* %903, align 8
  %905 = bitcast i32* %898 to <2 x i64>*
  store <2 x i64> %904, <2 x i64>* %905, align 8
  %906 = load i32, i32* %832, align 8
  %907 = load i32, i32* %833, align 4
  %908 = bitcast { i64, i64 }* %26 to %struct.SkIRect*
  %909 = bitcast { i64, i64 }* %27 to %struct.SkIRect*
  %910 = bitcast { i64, i64 }* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %910) #15
  %911 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i64 0, i32 1
  %912 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 2, i32 1, i32 0
  %913 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 2, i32 1, i32 1
  %914 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i64 0, i32 0
  store i64 0, i64* %914, align 8
  %915 = extractelement <2 x i64> %904, i32 1
  store i64 %915, i64* %911, align 8
  %916 = bitcast { i64, i64 }* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %916) #15
  %917 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 1
  %918 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %33, i64 0, i32 2, i32 1, i32 0
  %919 = load i32, i32* %918, align 8
  %920 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %33, i64 0, i32 2, i32 1, i32 1
  %921 = load i32, i32* %920, align 4
  %922 = sext i32 %906 to i64
  %923 = sext i32 %919 to i64
  %924 = add nsw i64 %923, %922
  %925 = icmp slt i64 %924, 2147483647
  %926 = select i1 %925, i64 %924, i64 2147483647
  %927 = icmp sgt i64 %926, -2147483647
  %928 = select i1 %927, i64 %926, i64 -2147483647
  %929 = sext i32 %907 to i64
  %930 = sext i32 %921 to i64
  %931 = add nsw i64 %930, %929
  %932 = icmp slt i64 %931, 2147483647
  %933 = select i1 %932, i64 %931, i64 2147483647
  %934 = icmp sgt i64 %933, -2147483647
  %935 = select i1 %934, i64 %933, i64 -2147483647
  %936 = zext i32 %907 to i64
  %937 = shl nuw i64 %936, 32
  %938 = zext i32 %906 to i64
  %939 = or i64 %937, %938
  %940 = shl nsw i64 %935, 32
  %941 = and i64 %928, 4294967295
  %942 = or i64 %940, %941
  %943 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 0
  store i64 %939, i64* %943, align 8
  store i64 %942, i64* %917, align 8
  %944 = bitcast %struct.SkIRect* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %944) #15
  %945 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 0
  %946 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 1
  %947 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 2
  %948 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %944, i8 -86, i64 16, i1 false) #15
  %949 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %28, %struct.SkIRect* nonnull dereferenceable(16) %908, %struct.SkIRect* nonnull dereferenceable(16) %909) #15
  br i1 %949, label %951, label %950

950:                                              ; preds = %897
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %944) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %916) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %910) #15
  br label %1082

951:                                              ; preds = %897
  %952 = load i32, i32* %947, align 4
  %953 = load i32, i32* %945, align 4
  %954 = sub i32 %952, %953
  %955 = load i32, i32* %948, align 4
  %956 = load i32, i32* %946, align 4
  %957 = sub i32 %955, %956
  %958 = zext i32 %957 to i64
  %959 = shl nuw i64 %958, 32
  %960 = zext i32 %954 to i64
  %961 = or i64 %959, %960
  %962 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %888, i64 0, i32 0, i32 0, i32 0
  %963 = load %class.SkColorSpace*, %class.SkColorSpace** %962, align 8, !noalias !66
  %964 = icmp eq %class.SkColorSpace* %963, null
  br i1 %964, label %970, label %965

965:                                              ; preds = %951
  %966 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %963, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %967 = atomicrmw add i32* %966, i32 1 monotonic, !noalias !66
  %968 = load i32, i32* %945, align 4
  %969 = load i32, i32* %946, align 4
  br label %970

970:                                              ; preds = %965, %951
  %971 = phi i32 [ %956, %951 ], [ %969, %965 ]
  %972 = phi i32 [ %953, %951 ], [ %968, %965 ]
  %973 = load i64, i64* %900, align 8, !noalias !66
  %974 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 0
  %975 = load i8*, i8** %974, align 8
  %976 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 1
  %977 = load i64, i64* %976, align 8
  %978 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %888, i32 %972, i32 %971, i64 %977) #15
  %979 = getelementptr inbounds i8, i8* %975, i64 %978
  %980 = load i64, i64* %976, align 8
  br i1 %964, label %984, label %981

981:                                              ; preds = %970
  %982 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %963, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %983 = atomicrmw add i32* %982, i32 1 monotonic
  br label %984

984:                                              ; preds = %981, %970
  %985 = ptrtoint %class.SkColorSpace* %963 to i64
  store i8* %979, i8** %974, align 8
  store i64 %980, i64* %976, align 8
  %986 = load %class.SkColorSpace*, %class.SkColorSpace** %962, align 8
  %987 = bitcast %struct.SkImageInfo* %888 to i64*
  store i64 %985, i64* %987, align 8
  %988 = icmp eq %class.SkColorSpace* %986, null
  br i1 %988, label %995, label %989

989:                                              ; preds = %984
  %990 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %986, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %991 = atomicrmw add i32* %990, i32 -1 acq_rel
  %992 = icmp eq i32 %991, 1
  br i1 %992, label %993, label %995

993:                                              ; preds = %989
  %994 = bitcast %class.SkColorSpace* %986 to i8*
  call void @_ZdlPv(i8* %994) #16
  br label %995

995:                                              ; preds = %993, %989, %984
  store i64 %973, i64* %900, align 8
  store i64 %961, i64* %902, align 8
  br i1 %964, label %1002, label %996

996:                                              ; preds = %995
  %997 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %963, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %998 = atomicrmw add i32* %997, i32 -1 acq_rel
  %999 = icmp eq i32 %998, 1
  br i1 %999, label %1000, label %1002

1000:                                             ; preds = %996
  %1001 = bitcast %class.SkColorSpace* %963 to i8*
  call void @_ZdlPv(i8* %1001) #16
  br label %1002

1002:                                             ; preds = %1000, %996, %995
  %1003 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %33, i64 0, i32 2
  %1004 = load i32, i32* %947, align 4
  %1005 = load i32, i32* %945, align 4
  %1006 = sub i32 %1004, %1005
  %1007 = load i32, i32* %948, align 4
  %1008 = load i32, i32* %946, align 4
  %1009 = sub i32 %1007, %1008
  %1010 = zext i32 %1009 to i64
  %1011 = shl nuw i64 %1010, 32
  %1012 = zext i32 %1006 to i64
  %1013 = or i64 %1011, %1012
  %1014 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1003, i64 0, i32 0, i32 0, i32 0
  %1015 = load %class.SkColorSpace*, %class.SkColorSpace** %1014, align 8, !noalias !71
  %1016 = icmp eq %class.SkColorSpace* %1015, null
  br i1 %1016, label %1020, label %1017

1017:                                             ; preds = %1002
  %1018 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1015, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1019 = atomicrmw add i32* %1018, i32 1 monotonic, !noalias !71
  br label %1020

1020:                                             ; preds = %1017, %1002
  %1021 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %33, i64 0, i32 2, i32 0, i32 1
  %1022 = bitcast i32* %1021 to i64*
  %1023 = load i64, i64* %1022, align 8, !noalias !71
  %1024 = sub nsw i32 0, %906
  %1025 = icmp sgt i32 %1024, 0
  %1026 = select i1 %1025, i32 %1024, i32 0
  %1027 = sub nsw i32 0, %907
  %1028 = icmp sgt i32 %1027, 0
  %1029 = select i1 %1028, i32 %1027, i32 0
  %1030 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %33, i64 0, i32 0
  %1031 = load i8*, i8** %1030, align 8
  %1032 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %33, i64 0, i32 1
  %1033 = load i64, i64* %1032, align 8
  %1034 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %1003, i32 %1026, i32 %1029, i64 %1033) #15
  %1035 = getelementptr inbounds i8, i8* %1031, i64 %1034
  %1036 = load i64, i64* %1032, align 8
  br i1 %1016, label %1040, label %1037

1037:                                             ; preds = %1020
  %1038 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1015, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1039 = atomicrmw add i32* %1038, i32 1 monotonic
  br label %1040

1040:                                             ; preds = %1037, %1020
  %1041 = ptrtoint %class.SkColorSpace* %1015 to i64
  store i8* %1035, i8** %1030, align 8
  store i64 %1036, i64* %1032, align 8
  %1042 = load %class.SkColorSpace*, %class.SkColorSpace** %1014, align 8
  %1043 = bitcast %struct.SkImageInfo* %1003 to i64*
  store i64 %1041, i64* %1043, align 8
  %1044 = icmp eq %class.SkColorSpace* %1042, null
  br i1 %1044, label %1051, label %1045

1045:                                             ; preds = %1040
  %1046 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1042, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1047 = atomicrmw add i32* %1046, i32 -1 acq_rel
  %1048 = icmp eq i32 %1047, 1
  br i1 %1048, label %1049, label %1051

1049:                                             ; preds = %1045
  %1050 = bitcast %class.SkColorSpace* %1042 to i8*
  call void @_ZdlPv(i8* %1050) #16
  br label %1051

1051:                                             ; preds = %1049, %1045, %1040
  store i64 %1023, i64* %1022, align 8
  %1052 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %33, i64 0, i32 2, i32 1
  %1053 = bitcast %struct.SkISize* %1052 to i64*
  store i64 %1013, i64* %1053, align 8
  br i1 %1016, label %1060, label %1054

1054:                                             ; preds = %1051
  %1055 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1015, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1056 = atomicrmw add i32* %1055, i32 -1 acq_rel
  %1057 = icmp eq i32 %1056, 1
  br i1 %1057, label %1058, label %1060

1058:                                             ; preds = %1054
  %1059 = bitcast %class.SkColorSpace* %1015 to i8*
  call void @_ZdlPv(i8* %1059) #16
  br label %1060

1060:                                             ; preds = %1058, %1054, %1051
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %944) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %916) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %910) #15
  %1061 = load i32, i32* %913, align 4
  %1062 = icmp sgt i32 %1061, 0
  br i1 %1062, label %1063, label %1082

1063:                                             ; preds = %1060
  %1064 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %1, i64 0, i32 1
  br label %1065

1065:                                             ; preds = %1065, %1063
  %1066 = phi i64 [ 0, %1063 ], [ %1078, %1065 ]
  %1067 = load i8*, i8** %974, align 8
  %1068 = load i64, i64* %976, align 8
  %1069 = mul i64 %1068, %1066
  %1070 = getelementptr inbounds i8, i8* %1067, i64 %1069
  %1071 = bitcast i8* %1070 to i32*
  %1072 = load i8*, i8** %1030, align 8
  %1073 = load i64, i64* %1032, align 8
  %1074 = mul i64 %1073, %1066
  %1075 = getelementptr inbounds i8, i8* %1072, i64 %1074
  %1076 = bitcast i8* %1075 to i32*
  %1077 = load i32, i32* %912, align 8
  call void %886(%struct.SkV4* dereferenceable(16) %1064, i32* %1071, i32* %1076, i32 %1077) #15, !callees !76
  %1078 = add nuw nsw i64 %1066, 1
  %1079 = load i32, i32* %913, align 4
  %1080 = sext i32 %1079 to i64
  %1081 = icmp slt i64 %1078, %1080
  br i1 %1081, label %1065, label %1082

1082:                                             ; preds = %1065, %1060, %950
  %1083 = load %class.SkColorSpace*, %class.SkColorSpace** %890, align 8
  %1084 = icmp eq %class.SkColorSpace* %1083, null
  br i1 %1084, label %1091, label %1085

1085:                                             ; preds = %1082
  %1086 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1083, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1087 = atomicrmw add i32* %1086, i32 -1 acq_rel
  %1088 = icmp eq i32 %1087, 1
  br i1 %1088, label %1089, label %1091

1089:                                             ; preds = %1085
  %1090 = bitcast %class.SkColorSpace* %1083 to i8*
  call void @_ZdlPv(i8* %1090) #16
  br label %1091

1091:                                             ; preds = %1089, %1085, %1082
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %887) #15
  %1092 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %33, i64 0, i32 2, i32 0, i32 0, i32 0
  %1093 = load %class.SkColorSpace*, %class.SkColorSpace** %1092, align 8
  %1094 = icmp eq %class.SkColorSpace* %1093, null
  br i1 %1094, label %1101, label %1095

1095:                                             ; preds = %1091
  %1096 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1093, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1097 = atomicrmw add i32* %1096, i32 -1 acq_rel
  %1098 = icmp eq i32 %1097, 1
  br i1 %1098, label %1099, label %1101

1099:                                             ; preds = %1095
  %1100 = bitcast %class.SkColorSpace* %1093 to i8*
  call void @_ZdlPv(i8* %1100) #16
  br label %1101

1101:                                             ; preds = %1099, %1095, %1091
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %878) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %32) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %877) #15
  br label %1113

1102:                                             ; preds = %880, %876
  %1103 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %33, i64 0, i32 2, i32 0, i32 0, i32 0
  %1104 = load %class.SkColorSpace*, %class.SkColorSpace** %1103, align 8
  %1105 = icmp eq %class.SkColorSpace* %1104, null
  br i1 %1105, label %1112, label %1106

1106:                                             ; preds = %1102
  %1107 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1108 = atomicrmw add i32* %1107, i32 -1 acq_rel
  %1109 = icmp eq i32 %1108, 1
  br i1 %1109, label %1110, label %1112

1110:                                             ; preds = %1106
  %1111 = bitcast %class.SkColorSpace* %1104 to i8*
  call void @_ZdlPv(i8* %1111) #16
  br label %1112

1112:                                             ; preds = %1110, %1106, %1102
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %878) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %32) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %877) #15
  br label %1169

1113:                                             ; preds = %1101, %811
  %1114 = bitcast %class.SkRegion* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1114) #15
  %1115 = bitcast { i64, i64 }* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1114, i8 -86, i64 24, i1 false) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1115) #15
  %1116 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %29, i64 0, i32 2, i32 1, i32 0
  %1117 = load i32, i32* %1116, align 8
  %1118 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %29, i64 0, i32 2, i32 1, i32 1
  %1119 = load i32, i32* %1118, align 4
  %1120 = zext i32 %1119 to i64
  %1121 = shl nuw i64 %1120, 32
  %1122 = zext i32 %1117 to i64
  %1123 = or i64 %1121, %1122
  %1124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i64 0, i32 0
  store i64 0, i64* %1124, align 8
  %1125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i64 0, i32 1
  store i64 %1123, i64* %1125, align 8
  call void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion* nonnull %35, %struct.SkIRect* nonnull dereferenceable(16) %808) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1115) #15
  %1126 = call zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion* nonnull %35, %class.SkRegion* nonnull dereferenceable(24) %35, %struct.SkIRect* nonnull dereferenceable(16) %807, i32 0) #15
  %1127 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %1, i64 0, i32 2
  %1128 = load i8, i8* %1127, align 4, !range !2
  %1129 = icmp eq i8 %1128, 0
  %1130 = select i1 %1129, void (%struct.SkV4*, i32*, i32)* @_Z17arith_transparentILb0EEvRK4SkV4Pji, void (%struct.SkV4*, i32*, i32)* @_Z17arith_transparentILb1EEvRK4SkV4Pji
  %1131 = bitcast %"class.SkRegion::Iterator"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1131) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1131, i8 -86, i64 40, i1 false) #15
  call void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"* nonnull %37, %class.SkRegion* nonnull dereferenceable(24) %35) #15
  %1132 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %37, i64 0, i32 3
  %1133 = load i8, i8* %1132, align 8, !range !2
  %1134 = icmp eq i8 %1133, 0
  br i1 %1134, label %1135, label %1143

1135:                                             ; preds = %1113
  %1136 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %37, i64 0, i32 2, i32 0
  %1137 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %37, i64 0, i32 2, i32 1
  %1138 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %37, i64 0, i32 2, i32 2
  %1139 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %37, i64 0, i32 2, i32 3
  %1140 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %1, i64 0, i32 1
  %1141 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %29, i64 0, i32 0
  %1142 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %29, i64 0, i32 1
  br label %1144

1143:                                             ; preds = %1155, %1113
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1131) #15
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %35) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1114) #15
  br label %1169

1144:                                             ; preds = %1155, %1135
  %1145 = load i32, i32* %1136, align 8
  %1146 = load i32, i32* %1137, align 4
  %1147 = load i32, i32* %1139, align 4
  %1148 = icmp slt i32 %1146, %1147
  br i1 %1148, label %1149, label %1155

1149:                                             ; preds = %1144
  %1150 = load i32, i32* %1138, align 8
  %1151 = shl i32 %1145, 2
  %1152 = sext i32 %1151 to i64
  %1153 = sub i32 %1150, %1145
  %1154 = sext i32 %1146 to i64
  br label %1158

1155:                                             ; preds = %1158, %1144
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %37) #15
  %1156 = load i8, i8* %1132, align 8, !range !2
  %1157 = icmp eq i8 %1156, 0
  br i1 %1157, label %1144, label %1143

1158:                                             ; preds = %1158, %1149
  %1159 = phi i64 [ %1154, %1149 ], [ %1166, %1158 ]
  %1160 = load i8*, i8** %1141, align 8
  %1161 = load i64, i64* %1142, align 8
  %1162 = mul i64 %1161, %1159
  %1163 = getelementptr inbounds i8, i8* %1160, i64 %1152
  %1164 = getelementptr inbounds i8, i8* %1163, i64 %1162
  %1165 = bitcast i8* %1164 to i32*
  call void %1130(%struct.SkV4* dereferenceable(16) %1140, i32* %1165, i32 %1153) #15, !callees !77
  %1166 = add nsw i64 %1159, 1
  %1167 = trunc i64 %1166 to i32
  %1168 = icmp eq i32 %1147, %1167
  br i1 %1168, label %1155, label %1158

1169:                                             ; preds = %1143, %1112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %831) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %812) #15
  br label %1170

1170:                                             ; preds = %1169, %806
  %1171 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %29, i64 0, i32 2, i32 0, i32 0, i32 0
  %1172 = load %class.SkColorSpace*, %class.SkColorSpace** %1171, align 8
  %1173 = icmp eq %class.SkColorSpace* %1172, null
  br i1 %1173, label %1180, label %1174

1174:                                             ; preds = %1170
  %1175 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1176 = atomicrmw add i32* %1175, i32 -1 acq_rel
  %1177 = icmp eq i32 %1176, 1
  br i1 %1177, label %1178, label %1180

1178:                                             ; preds = %1174
  %1179 = bitcast %class.SkColorSpace* %1172 to i8*
  call void @_ZdlPv(i8* %1179) #16
  br label %1180

1180:                                             ; preds = %1178, %1174, %1170
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %809) #15
  %1181 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %760, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.62* sret %0, %class.SkSpecialSurface* %1181) #15
  %1182 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %760, align 8
  %1183 = icmp eq %class.SkSpecialSurface* %1182, null
  br i1 %1183, label %1194, label %1184

1184:                                             ; preds = %1180
  %1185 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %1182, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1186 = atomicrmw add i32* %1185, i32 -1 acq_rel
  %1187 = icmp eq i32 %1186, 1
  br i1 %1187, label %1188, label %1194

1188:                                             ; preds = %1184
  %1189 = bitcast %class.SkSpecialSurface* %1182 to %class.SkRefCntBase*
  %1190 = bitcast %class.SkSpecialSurface* %1182 to void (%class.SkRefCntBase*)***
  %1191 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1190, align 8
  %1192 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1191, i64 2
  %1193 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1192, align 8
  call void %1193(%class.SkRefCntBase* nonnull %1189) #15
  br label %1194

1194:                                             ; preds = %780, %1180, %1184, %1188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %759) #15
  br label %1195

1195:                                             ; preds = %752, %748, %747, %1194, %202
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #15
  br label %1196

1196:                                             ; preds = %1195, %192
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #15
  br i1 %76, label %1207, label %1197

1197:                                             ; preds = %1196
  %1198 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1199 = atomicrmw add i32* %1198, i32 -1 acq_rel
  %1200 = icmp eq i32 %1199, 1
  br i1 %1200, label %1201, label %1207

1201:                                             ; preds = %1197
  %1202 = bitcast %class.SkSpecialImage* %75 to %class.SkRefCntBase*
  %1203 = bitcast %class.SkSpecialImage* %75 to void (%class.SkRefCntBase*)***
  %1204 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1203, align 8
  %1205 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1204, i64 2
  %1206 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1205, align 8
  call void %1206(%class.SkRefCntBase* nonnull %1202) #15
  br label %1207

1207:                                             ; preds = %1196, %1197, %1201
  br i1 %52, label %1218, label %1208

1208:                                             ; preds = %1207
  %1209 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1210 = atomicrmw add i32* %1209, i32 -1 acq_rel
  %1211 = icmp eq i32 %1210, 1
  br i1 %1211, label %1212, label %1218

1212:                                             ; preds = %1208
  %1213 = bitcast %class.SkSpecialImage* %51 to %class.SkRefCntBase*
  %1214 = bitcast %class.SkSpecialImage* %51 to void (%class.SkRefCntBase*)***
  %1215 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1214, align 8
  %1216 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1215, i64 2
  %1217 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1216, align 8
  call void %1217(%class.SkRefCntBase* nonnull %1213) #15
  br label %1218

1218:                                             ; preds = %1207, %1208, %1212
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkArithmeticImageFilter"*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #0 align 2 {
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to { i64, i64 }*
  %8 = bitcast <2 x i64>* %6 to %struct.SkIRect*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to { i64, i64 }*
  %11 = bitcast <2 x i64>* %9 to %struct.SkIRect*
  %12 = icmp eq i32 %3, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %5
  %14 = bitcast %"class.(anonymous namespace)::SkArithmeticImageFilter"* %0 to %class.SkImageFilter_Base*
  %15 = tail call { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base* %14, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 1, %struct.SkIRect* %4) #15
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = insertelement <2 x i64> undef, i64 %16, i32 0
  %19 = insertelement <2 x i64> %18, i64 %17, i32 1
  br label %84

20:                                               ; preds = %5
  %21 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  %22 = bitcast %"class.(anonymous namespace)::SkArithmeticImageFilter"* %0 to %class.SkImageFilter*
  %23 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 16, i1 false)
  %24 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %22, i32 0) #15
  %25 = icmp eq %class.SkImageFilter* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %28 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %22, i32 0) #15
  %29 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %28, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* null) #15
  %30 = getelementptr inbounds <2 x i64>, <2 x i64>* %6, i64 0, i64 0
  %31 = extractvalue { i64, i64 } %29, 0
  store i64 %31, i64* %30, align 16
  %32 = extractvalue { i64, i64 } %29, 1
  store i64 %32, i64* %27, align 8
  br label %35

33:                                               ; preds = %20
  %34 = bitcast %struct.SkIRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %21, i8* align 4 %34, i64 16, i1 false)
  br label %35

35:                                               ; preds = %33, %26
  %36 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #15
  %37 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 16, i1 false)
  %38 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %22, i32 1) #15
  %39 = icmp eq %class.SkImageFilter* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %42 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %22, i32 1) #15
  %43 = tail call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* %42, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, %struct.SkIRect* null) #15
  %44 = getelementptr inbounds <2 x i64>, <2 x i64>* %9, i64 0, i64 0
  %45 = extractvalue { i64, i64 } %43, 0
  store i64 %45, i64* %44, align 16
  %46 = extractvalue { i64, i64 } %43, 1
  store i64 %46, i64* %41, align 8
  br label %49

47:                                               ; preds = %35
  %48 = bitcast %struct.SkIRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %36, i8* align 4 %48, i64 16, i1 false)
  br label %49

49:                                               ; preds = %47, %40
  %50 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %0, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds float, float* %50, i64 3
  %52 = load float, float* %51, align 4
  %53 = tail call float @llvm.fabs.f32(float %52) #15
  %54 = fcmp ugt float %53, 0x3F30000000000000
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %11, %struct.SkIRect* nonnull dereferenceable(16) %8) #15
  %56 = load <2 x i64>, <2 x i64>* %9, align 16
  br label %82

57:                                               ; preds = %49
  %58 = getelementptr inbounds float, float* %50, i64 1
  %59 = load float, float* %58, align 4
  %60 = tail call float @llvm.fabs.f32(float %59) #15
  %61 = fcmp ugt float %60, 0x3F30000000000000
  %62 = getelementptr inbounds float, float* %50, i64 2
  %63 = load float, float* %62, align 4
  %64 = tail call float @llvm.fabs.f32(float %63) #15
  %65 = fcmp ole float %64, 0x3F30000000000000
  br i1 %61, label %66, label %71

66:                                               ; preds = %57
  br i1 %65, label %69, label %67

67:                                               ; preds = %66
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %11, %struct.SkIRect* nonnull dereferenceable(16) %8) #15
  %68 = load <2 x i64>, <2 x i64>* %9, align 16
  br label %82

69:                                               ; preds = %66
  %70 = load <2 x i64>, <2 x i64>* %9, align 16
  br label %82

71:                                               ; preds = %57
  br i1 %65, label %74, label %72

72:                                               ; preds = %71
  %73 = load <2 x i64>, <2 x i64>* %6, align 16
  br label %82

74:                                               ; preds = %71
  %75 = load float, float* %50, align 4
  %76 = tail call float @llvm.fabs.f32(float %75) #15
  %77 = fcmp ugt float %76, 0x3F30000000000000
  br i1 %77, label %78, label %82

78:                                               ; preds = %74
  %79 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %11, %struct.SkIRect* nonnull dereferenceable(16) %11, %struct.SkIRect* nonnull dereferenceable(16) %8) #15
  %80 = load <2 x i64>, <2 x i64>* %9, align 16
  %81 = select i1 %79, <2 x i64> %80, <2 x i64> zeroinitializer
  br label %82

82:                                               ; preds = %78, %74, %72, %69, %67, %55
  %83 = phi <2 x i64> [ %73, %72 ], [ %70, %69 ], [ %68, %67 ], [ %56, %55 ], [ zeroinitializer, %74 ], [ %81, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  br label %84

84:                                               ; preds = %82, %13
  %85 = phi <2 x i64> [ %19, %13 ], [ %83, %82 ]
  %86 = extractelement <2 x i64> %85, i32 0
  %87 = insertvalue { i64, i64 } undef, i64 %86, 0
  %88 = extractelement <2 x i64> %85, i32 1
  %89 = insertvalue { i64, i64 } %87, i64 %88, 1
  ret { i64, i64 } %89
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_123SkArithmeticImageFilter23affectsTransparentBlackEv(%"class.(anonymous namespace)::SkArithmeticImageFilter"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkArithmeticImageFilter", %"class.(anonymous namespace)::SkArithmeticImageFilter"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds float, float* %2, i64 3
  %4 = load float, float* %3, align 4
  %5 = tail call float @llvm.fabs.f32(float %4) #15
  %6 = fcmp ugt float %5, 0x3F30000000000000
  ret i1 %6
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7SkIRect4joinERKS_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.62* sret, %class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #2

declare zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage*) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* sret, %class.SkSpecialImage*, %class.GrRecordingContext*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*, i1 zeroext) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #2

declare %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor9MakeColorE8SkRGBA4fIL11SkAlphaType2EE(<2 x float>, <2 x float>) local_unnamed_addr #2

declare %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, %class.GrImageInfo*, i32, i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN14SkSpecialImage19MakeDeferredFromGpuEP18GrRecordingContextRK7SkIRectj18GrSurfaceProxyView11GrColorType5sk_spI12SkColorSpaceERK14SkSurfaceProps11SkAlphaType(%class.sk_sp.62* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), i32, %class.GrSurfaceProxyView*, i32, %class.sk_sp.14*, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #2

declare %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #15
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #15
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp.14*) unnamed_addr #2

declare void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #2

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.64* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) local_unnamed_addr #2

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #5

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage*, %class.SkBitmap*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z10arith_spanILb1EEvRK4SkV4PjPKji(%struct.SkV4* dereferenceable(16), i32*, i32*, i32) local_unnamed_addr #12 comdat {
  %5 = getelementptr inbounds %struct.SkV4, %struct.SkV4* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fmul float %6, 0x3F70101020000000
  %8 = insertelement <4 x float> undef, float %7, i32 0
  %9 = shufflevector <4 x float> %8, <4 x float> undef, <4 x i32> zeroinitializer
  %10 = getelementptr inbounds float, float* %5, i64 1
  %11 = load float, float* %10, align 4
  %12 = insertelement <4 x float> undef, float %11, i32 0
  %13 = shufflevector <4 x float> %12, <4 x float> undef, <4 x i32> zeroinitializer
  %14 = getelementptr inbounds float, float* %5, i64 2
  %15 = load float, float* %14, align 4
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = getelementptr inbounds float, float* %5, i64 3
  %19 = load float, float* %18, align 4
  %20 = fmul float %19, 2.550000e+02
  %21 = fadd float %20, 5.000000e-01
  %22 = insertelement <4 x float> undef, float %21, i32 0
  %23 = shufflevector <4 x float> %22, <4 x float> undef, <4 x i32> zeroinitializer
  %24 = icmp sgt i32 %3, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %4
  %26 = zext i32 %3 to i64
  br label %28

27:                                               ; preds = %28, %4
  ret void

28:                                               ; preds = %28, %25
  %29 = phi i64 [ 0, %25 ], [ %66, %28 ]
  %30 = getelementptr inbounds i32, i32* %2, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = insertelement <4 x i32> undef, i32 %31, i32 0
  %33 = bitcast <4 x i32> %32 to <16 x i8>
  %34 = shufflevector <16 x i8> %33, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %35 = bitcast <16 x i8> %34 to <8 x i16>
  %36 = shufflevector <8 x i16> %35, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %37 = bitcast <8 x i16> %36 to <4 x i32>
  %38 = sitofp <4 x i32> %37 to <4 x float>
  %39 = getelementptr inbounds i32, i32* %1, i64 %29
  %40 = load i32, i32* %39, align 4
  %41 = insertelement <4 x i32> undef, i32 %40, i32 0
  %42 = bitcast <4 x i32> %41 to <16 x i8>
  %43 = shufflevector <16 x i8> %42, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %44 = bitcast <16 x i8> %43 to <8 x i16>
  %45 = shufflevector <8 x i16> %44, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %46 = bitcast <8 x i16> %45 to <4 x i32>
  %47 = sitofp <4 x i32> %46 to <4 x float>
  %48 = fmul <4 x float> %9, %38
  %49 = fmul <4 x float> %48, %47
  %50 = fmul <4 x float> %13, %38
  %51 = fadd <4 x float> %50, %49
  %52 = fmul <4 x float> %17, %47
  %53 = fadd <4 x float> %52, %51
  %54 = fadd <4 x float> %23, %53
  %55 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %54, <4 x float> <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>) #15
  %56 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %55) #15
  %57 = shufflevector <4 x float> %56, <4 x float> undef, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %58 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %57, <4 x float> %56) #15
  %59 = tail call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %58) #15
  %60 = bitcast <4 x i32> %59 to <8 x i16>
  %61 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %60, <8 x i16> undef) #15
  %62 = bitcast <16 x i8> %61 to <8 x i16>
  %63 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %62, <8 x i16> undef) #15
  %64 = bitcast <16 x i8> %63 to <4 x i32>
  %65 = extractelement <4 x i32> %64, i32 0
  store i32 %65, i32* %39, align 4
  %66 = add nuw nsw i64 %29, 1
  %67 = icmp eq i64 %66, %26
  br i1 %67, label %27, label %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z10arith_spanILb0EEvRK4SkV4PjPKji(%struct.SkV4* dereferenceable(16), i32*, i32*, i32) local_unnamed_addr #12 comdat {
  %5 = getelementptr inbounds %struct.SkV4, %struct.SkV4* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fmul float %6, 0x3F70101020000000
  %8 = insertelement <4 x float> undef, float %7, i32 0
  %9 = shufflevector <4 x float> %8, <4 x float> undef, <4 x i32> zeroinitializer
  %10 = getelementptr inbounds float, float* %5, i64 1
  %11 = load float, float* %10, align 4
  %12 = insertelement <4 x float> undef, float %11, i32 0
  %13 = shufflevector <4 x float> %12, <4 x float> undef, <4 x i32> zeroinitializer
  %14 = getelementptr inbounds float, float* %5, i64 2
  %15 = load float, float* %14, align 4
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = getelementptr inbounds float, float* %5, i64 3
  %19 = load float, float* %18, align 4
  %20 = fmul float %19, 2.550000e+02
  %21 = fadd float %20, 5.000000e-01
  %22 = insertelement <4 x float> undef, float %21, i32 0
  %23 = shufflevector <4 x float> %22, <4 x float> undef, <4 x i32> zeroinitializer
  %24 = icmp sgt i32 %3, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %4
  %26 = zext i32 %3 to i64
  br label %28

27:                                               ; preds = %28, %4
  ret void

28:                                               ; preds = %28, %25
  %29 = phi i64 [ 0, %25 ], [ %64, %28 ]
  %30 = getelementptr inbounds i32, i32* %2, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = insertelement <4 x i32> undef, i32 %31, i32 0
  %33 = bitcast <4 x i32> %32 to <16 x i8>
  %34 = shufflevector <16 x i8> %33, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %35 = bitcast <16 x i8> %34 to <8 x i16>
  %36 = shufflevector <8 x i16> %35, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %37 = bitcast <8 x i16> %36 to <4 x i32>
  %38 = sitofp <4 x i32> %37 to <4 x float>
  %39 = getelementptr inbounds i32, i32* %1, i64 %29
  %40 = load i32, i32* %39, align 4
  %41 = insertelement <4 x i32> undef, i32 %40, i32 0
  %42 = bitcast <4 x i32> %41 to <16 x i8>
  %43 = shufflevector <16 x i8> %42, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %44 = bitcast <16 x i8> %43 to <8 x i16>
  %45 = shufflevector <8 x i16> %44, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %46 = bitcast <8 x i16> %45 to <4 x i32>
  %47 = sitofp <4 x i32> %46 to <4 x float>
  %48 = fmul <4 x float> %9, %38
  %49 = fmul <4 x float> %48, %47
  %50 = fmul <4 x float> %13, %38
  %51 = fadd <4 x float> %50, %49
  %52 = fmul <4 x float> %17, %47
  %53 = fadd <4 x float> %52, %51
  %54 = fadd <4 x float> %23, %53
  %55 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %54, <4 x float> <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>) #15
  %56 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %55) #15
  %57 = tail call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %56) #15
  %58 = bitcast <4 x i32> %57 to <8 x i16>
  %59 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %58, <8 x i16> undef) #15
  %60 = bitcast <16 x i8> %59 to <8 x i16>
  %61 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %60, <8 x i16> undef) #15
  %62 = bitcast <16 x i8> %61 to <4 x i32>
  %63 = extractelement <4 x i32> %62, i32 0
  store i32 %63, i32* %39, align 4
  %64 = add nuw nsw i64 %29, 1
  %65 = icmp eq i64 %64, %26
  br i1 %65, label %27, label %28
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

declare void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z17arith_transparentILb1EEvRK4SkV4Pji(%struct.SkV4* dereferenceable(16), i32*, i32) local_unnamed_addr #12 comdat {
  %4 = getelementptr inbounds %struct.SkV4, %struct.SkV4* %0, i64 0, i32 0
  %5 = getelementptr inbounds float, float* %4, i64 2
  %6 = load float, float* %5, align 4
  %7 = insertelement <4 x float> undef, float %6, i32 0
  %8 = shufflevector <4 x float> %7, <4 x float> undef, <4 x i32> zeroinitializer
  %9 = getelementptr inbounds float, float* %4, i64 3
  %10 = load float, float* %9, align 4
  %11 = fmul float %10, 2.550000e+02
  %12 = fadd float %11, 5.000000e-01
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = icmp sgt i32 %2, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = zext i32 %2 to i64
  br label %19

18:                                               ; preds = %19, %3
  ret void

19:                                               ; preds = %19, %16
  %20 = phi i64 [ 0, %16 ], [ %43, %19 ]
  %21 = getelementptr inbounds i32, i32* %1, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = insertelement <4 x i32> undef, i32 %22, i32 0
  %24 = bitcast <4 x i32> %23 to <16 x i8>
  %25 = shufflevector <16 x i8> %24, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %26 = bitcast <16 x i8> %25 to <8 x i16>
  %27 = shufflevector <8 x i16> %26, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %28 = bitcast <8 x i16> %27 to <4 x i32>
  %29 = sitofp <4 x i32> %28 to <4 x float>
  %30 = fmul <4 x float> %8, %29
  %31 = fadd <4 x float> %14, %30
  %32 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %31, <4 x float> <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>) #15
  %33 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %32) #15
  %34 = shufflevector <4 x float> %33, <4 x float> undef, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %35 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %34, <4 x float> %33) #15
  %36 = tail call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %35) #15
  %37 = bitcast <4 x i32> %36 to <8 x i16>
  %38 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %37, <8 x i16> undef) #15
  %39 = bitcast <16 x i8> %38 to <8 x i16>
  %40 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %39, <8 x i16> undef) #15
  %41 = bitcast <16 x i8> %40 to <4 x i32>
  %42 = extractelement <4 x i32> %41, i32 0
  store i32 %42, i32* %21, align 4
  %43 = add nuw nsw i64 %20, 1
  %44 = icmp eq i64 %43, %17
  br i1 %44, label %18, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z17arith_transparentILb0EEvRK4SkV4Pji(%struct.SkV4* dereferenceable(16), i32*, i32) local_unnamed_addr #12 comdat {
  %4 = getelementptr inbounds %struct.SkV4, %struct.SkV4* %0, i64 0, i32 0
  %5 = getelementptr inbounds float, float* %4, i64 2
  %6 = load float, float* %5, align 4
  %7 = insertelement <4 x float> undef, float %6, i32 0
  %8 = shufflevector <4 x float> %7, <4 x float> undef, <4 x i32> zeroinitializer
  %9 = getelementptr inbounds float, float* %4, i64 3
  %10 = load float, float* %9, align 4
  %11 = fmul float %10, 2.550000e+02
  %12 = fadd float %11, 5.000000e-01
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = icmp sgt i32 %2, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = zext i32 %2 to i64
  br label %19

18:                                               ; preds = %19, %3
  ret void

19:                                               ; preds = %19, %16
  %20 = phi i64 [ 0, %16 ], [ %41, %19 ]
  %21 = getelementptr inbounds i32, i32* %1, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = insertelement <4 x i32> undef, i32 %22, i32 0
  %24 = bitcast <4 x i32> %23 to <16 x i8>
  %25 = shufflevector <16 x i8> %24, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %26 = bitcast <16 x i8> %25 to <8 x i16>
  %27 = shufflevector <8 x i16> %26, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %28 = bitcast <8 x i16> %27 to <4 x i32>
  %29 = sitofp <4 x i32> %28 to <4 x float>
  %30 = fmul <4 x float> %8, %29
  %31 = fadd <4 x float> %14, %30
  %32 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %31, <4 x float> <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>) #15
  %33 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> zeroinitializer, <4 x float> %32) #15
  %34 = tail call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %33) #15
  %35 = bitcast <4 x i32> %34 to <8 x i16>
  %36 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %35, <8 x i16> undef) #15
  %37 = bitcast <16 x i8> %36 to <8 x i16>
  %38 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %37, <8 x i16> undef) #15
  %39 = bitcast <16 x i8> %38 to <4 x i32>
  %40 = extractelement <4 x i32> %39, i32 0
  store i32 %40, i32* %21, align 4
  %41 = add nuw nsw i64 %20, 1
  %42 = icmp eq i64 %41, %17
  br i1 %42, label %18, label %19
}

declare void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"*, %class.SkRegion* dereferenceable(24)) unnamed_addr #2

declare void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #4

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.max.ps(<4 x float>, <4 x float>) #13

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.min.ps(<4 x float>, <4 x float>) #13

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float>) #13

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16>, <8 x i16>) #13

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo*, i32, i32, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #2

declare { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) local_unnamed_addr #2

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #2

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #14

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRuntimeEffect6ResultD2Ev(%"struct.SkRuntimeEffect::Result"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %2) #15
  %3 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %3, align 8
  %5 = icmp eq %class.SkRuntimeEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkRuntimeEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkRuntimeEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #15
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #14

declare void @_ZN18GrRuntimeFPBuilderC1E5sk_spI15SkRuntimeEffectE(%class.GrRuntimeFPBuilder*, %class.sk_sp.22*) unnamed_addr #2

declare void @_ZN15SkRuntimeEffect13MakeForShaderE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

declare %"struct.SkRuntimeEffect::Child"* @_ZNK15SkRuntimeEffect9findChildEPKc(%class.SkRuntimeEffect*, i8*) local_unnamed_addr #2

declare %"struct.SkRuntimeEffect::Uniform"* @_ZNK15SkRuntimeEffect11findUniformEPKc(%class.SkRuntimeEffect*, i8*) local_unnamed_addr #2

declare i64 @_ZNK15SkRuntimeEffect7Uniform11sizeInBytesEv(%"struct.SkRuntimeEffect::Uniform"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE19writableUniformDataEv(%class.SkRuntimeEffectBuilder*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.sk_sp.53, align 8
  %3 = getelementptr inbounds %class.SkRuntimeEffectBuilder, %class.SkRuntimeEffectBuilder* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.sk_sp.53, %class.sk_sp.53* %3, i64 0, i32 0
  %5 = load %class.SkData*, %class.SkData** %4, align 8
  %6 = getelementptr inbounds %class.SkData, %class.SkData* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %38, label %9

9:                                                ; preds = %1
  %10 = bitcast %class.sk_sp.53* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = load %class.SkData*, %class.SkData** %4, align 8
  %12 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.53* nonnull sret %2, i8* %13, i64 %15) #15
  %16 = getelementptr inbounds %class.sk_sp.53, %class.sk_sp.53* %2, i64 0, i32 0
  %17 = bitcast %class.sk_sp.53* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.SkData* null, %class.SkData** %16, align 8
  %19 = load %class.SkData*, %class.SkData** %4, align 8
  %20 = bitcast %class.sk_sp.53* %3 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %class.SkData* %19, null
  br i1 %21, label %37, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %19) #15
  %27 = bitcast %class.SkData* %19 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %27) #15
  br label %28

28:                                               ; preds = %22, %26
  %29 = load %class.SkData*, %class.SkData** %16, align 8
  %30 = icmp eq %class.SkData* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkData, %class.SkData* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %29) #15
  %36 = bitcast %class.SkData* %29 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %36) #15
  br label %37

37:                                               ; preds = %9, %28, %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  br label %38

38:                                               ; preds = %37, %1
  %39 = load %class.SkData*, %class.SkData** %4, align 8
  %40 = getelementptr inbounds %class.SkData, %class.SkData* %39, i64 0, i32 3
  %41 = load i8*, i8** %40, align 8
  ret i8* %41
}

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.53* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { nofree nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!5 = distinct !{!5, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!8 = distinct !{!8, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_v: argument 0"}
!11 = distinct !{!11, !"_ZN18GrRuntimeFPBuilder4MakeIXadL_ZZ18make_arithmetic_fpNSt3__110unique_ptrI19GrFragmentProcessorNS1_14default_deleteIS3_EEEES6_RK4SkV4bE5kCodeEEXadL_ZN15SkRuntimeEffect13MakeForShaderE8SkStringEEEES_v"}
!12 = !{!"branch_weights", i32 1, i32 1048575}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN15SkRuntimeEffect13MakeForShaderE8SkString: argument 0"}
!15 = distinct !{!15, !"_ZN15SkRuntimeEffect13MakeForShaderE8SkString"}
!16 = !{!14, !10}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE5childEPKc: argument 0"}
!19 = distinct !{!19, !"_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE5childEPKc"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE5childEPKc: argument 0"}
!22 = distinct !{!22, !"_ZN22SkRuntimeEffectBuilderINSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEE5childEPKc"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!25 = distinct !{!25, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!26 = !{!27, !24}
!27 = distinct !{!27, !28, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!28 = distinct !{!28, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!31 = distinct !{!31, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!34 = distinct !{!34, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK12_GLOBAL__N_123SkArithmeticImageFilter14filterImageGPUERKN4skif7ContextE5sk_spI14SkSpecialImageERK8SkIPointS7_SA_RK7SkIRect: argument 0"}
!37 = distinct !{!37, !"_ZNK12_GLOBAL__N_123SkArithmeticImageFilter14filterImageGPUERKN4skif7ContextE5sk_spI14SkSpecialImageERK8SkIPointS7_SA_RK7SkIRect"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!40 = distinct !{!40, !"_ZN8SkMatrix9TranslateEff"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!43 = distinct !{!43, !"_ZN8SkMatrix9TranslateEff"}
!44 = !{!45, !36}
!45 = distinct !{!45, !46, !"_ZNK4skif7Context13refColorSpaceEv: argument 0"}
!46 = distinct !{!46, !"_ZNK4skif7Context13refColorSpaceEv"}
!47 = !{!48, !45}
!48 = distinct !{!48, !49, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!49 = distinct !{!49, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!52 = distinct !{!52, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!53 = distinct !{!53, !54, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!54 = distinct !{!54, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!55 = !{!56, !36}
!56 = distinct !{!56, !57, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!57 = distinct !{!57, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!58 = !{!56}
!59 = !{!60, !36}
!60 = distinct !{!60, !61, !"_ZNK11GrColorInfo13refColorSpaceEv: argument 0"}
!61 = distinct !{!61, !"_ZNK11GrColorInfo13refColorSpaceEv"}
!62 = !{!60}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!65 = distinct !{!65, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
!66 = !{!67, !69}
!67 = distinct !{!67, !68, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!68 = distinct !{!68, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!69 = distinct !{!69, !70, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!70 = distinct !{!70, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!71 = !{!72, !74}
!72 = distinct !{!72, !73, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!73 = distinct !{!73, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!74 = distinct !{!74, !75, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!75 = distinct !{!75, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!76 = !{void (%struct.SkV4*, i32*, i32*, i32)* @_Z10arith_spanILb0EEvRK4SkV4PjPKji, void (%struct.SkV4*, i32*, i32*, i32)* @_Z10arith_spanILb1EEvRK4SkV4PjPKji}
!77 = !{void (%struct.SkV4*, i32*, i32)* @_Z17arith_transparentILb0EEvRK4SkV4Pji, void (%struct.SkV4*, i32*, i32)* @_Z17arith_transparentILb1EEvRK4SkV4Pji}
