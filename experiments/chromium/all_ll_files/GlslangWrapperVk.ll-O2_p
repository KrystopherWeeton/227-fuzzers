; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/GlslangWrapperVk.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/GlslangWrapperVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.199", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.188" }
%"class.std::__1::map.188" = type { %"class.std::__1::__tree.189" }
%"class.std::__1::__tree.189" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { i64 }
%"struct.std::__1::array.199" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"struct.rx::GlslangProgramInterfaceInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap", i32, %"class.std::__1::vector.46", %"class.std::__1::vector.53", %"class.std::__1::vector.60", %"class.gl::Range", %"class.angle::BitSetT.68", %"class.std::__1::vector", %"class.angle::BitSetT.69", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.40", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.13", %"class.std::__1::vector.13", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.6", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.20, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.15" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.8" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.6", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional = type { i8, i8 }
%struct.Optional.20 = type { i8, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.24", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.31" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.30", %"struct.std::__1::array.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.30" = type { [3 x i32] }
%"class.angle::PackedEnumMap.31" = type { %"struct.std::__1::array.32" }
%"struct.std::__1::array.32" = type { [6 x %"class.std::__1::vector.33"] }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.35" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.gl::ShaderProgramManager" = type opaque
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.55" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.63" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.62" }>
%"class.angle::BitSetT.62" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.68" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.angle::BitSetT.69" = type { i64 }
%"class.angle::BitSetT" = type { i32 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.62", %"class.angle::BitSetT.62", [6 x i8], %"class.angle::BitSetT.83", i32, [4 x i8], %"class.angle::BitSetT.69", %"class.angle::BitSetT.83", %"class.angle::BitSetArray", %"struct.std::__1::array.86", %"struct.std::__1::array.87", %"class.angle::BitSetArray", %"struct.std::__1::array.88", %"struct.std::__1::array.89", %"class.angle::BitSetArray", %"struct.std::__1::array.89", i8, [7 x i8], %"class.std::__1::vector.6", %"class.std::__1::vector.53", %"class.std::__1::vector.53", i8, [7 x i8], %"class.std::__1::vector.6", %"class.std::__1::vector.90", %"class.std::__1::vector.97", i32, [4 x i8], %"class.std::__1::vector.104", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.111", %"class.angle::BitSetT.118", %"class.std::__1::vector.119", %"class.gl::Range", %"class.std::__1::vector.111", %"class.std::__1::vector.111", %"class.gl::Range", %"class.std::__1::vector.126", %"class.std::__1::vector.133", %"class.std::__1::vector.133", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.140", %"class.angle::PackedEnumMap.140", %"class.angle::PackedEnumMap.142", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.144, [6 x i8] }>
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array.76", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array.76" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.angle::BitSetT.83" = type { i64 }
%"struct.std::__1::array.86" = type { [96 x i32] }
%"struct.std::__1::array.87" = type { [96 x i8] }
%"struct.std::__1::array.88" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.84" }
%"struct.std::__1::array.84" = type { [2 x %"class.angle::BitSetT.85"] }
%"class.angle::BitSetT.85" = type { i64 }
%"struct.std::__1::array.89" = type { [96 x %"class.angle::BitSetT.62"] }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.92" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { i32*, i32*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i32* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.106" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.gl::LinkedUniform"* }
%"class.angle::BitSetT.118" = type { i64 }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.121" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.113" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.128" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.135" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.140" = type { %"struct.std::__1::array.141" }
%"struct.std::__1::array.141" = type { [6 x %"class.std::__1::vector.6"] }
%"class.angle::PackedEnumMap.142" = type { %"struct.std::__1::array.143" }
%"struct.std::__1::array.143" = type { [6 x i32] }
%struct.Optional.144 = type { i8, i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.gl::ProgramLinkedResources" = type { %"class.gl::ProgramVaryingPacking", %"class.gl::UniformBlockLinker", %"class.gl::ShaderStorageBlockLinker", %"class.gl::AtomicCounterBufferLinker", %"class.std::__1::vector.229", %"class.std::__1::vector.46" }
%"class.gl::ProgramVaryingPacking" = type <{ [8 x i8], %"class.angle::PackedEnumMap.200", %"class.angle::PackedEnumMap.225", [2 x i8] }>
%"class.angle::PackedEnumMap.200" = type { %"struct.std::__1::array.201" }
%"struct.std::__1::array.201" = type { [6 x %"class.gl::VaryingPacking"] }
%"class.gl::VaryingPacking" = type { %"class.std::__1::vector.202", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223" }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::VaryingPacking::Register"*, %"struct.gl::VaryingPacking::Register"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::VaryingPacking::Register" = type { [4 x i8] }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::VaryingPacking::Register"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::PackedVaryingRegister"*, %"struct.gl::PackedVaryingRegister"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::PackedVaryingRegister" = type { %"struct.gl::PackedVarying"*, i32, i32, i32, i32 }
%"struct.gl::PackedVarying" = type <{ [8 x i8], %"struct.gl::VaryingInShaderRef", %"struct.gl::VaryingInShaderRef", i32, i32, i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.gl::VaryingInShaderRef" = type { %"struct.sh::ShaderVariable"*, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::PackedVaryingRegister"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::PackedVarying"*, %"struct.gl::PackedVarying"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::PackedVarying"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.46"] }
%"class.angle::PackedEnumMap.225" = type { %"struct.std::__1::array.226" }
%"struct.std::__1::array.226" = type { [6 x i8] }
%"class.gl::UniformBlockLinker" = type { %"class.gl::InterfaceBlockLinker", %"class.std::__1::vector.104"* }
%"class.gl::InterfaceBlockLinker" = type { i32 (...)**, %"class.angle::PackedEnumMap.227", %"class.std::__1::vector.111"*, %"class.std::__1::vector.46"* }
%"class.angle::PackedEnumMap.227" = type { %"struct.std::__1::array.228" }
%"struct.std::__1::array.228" = type { [6 x %"class.std::__1::vector.13"*] }
%"class.gl::ShaderStorageBlockLinker" = type { %"class.gl::InterfaceBlockLinker", %"class.std::__1::vector.60"* }
%"class.gl::AtomicCounterBufferLinker" = type { %"class.std::__1::vector.119"* }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"struct.gl::UnusedUniform"*, %"struct.gl::UnusedUniform"*, %"class.std::__1::__compressed_pair.231" }
%"struct.gl::UnusedUniform" = type <{ %"class.std::__1::basic_string", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.gl::UnusedUniform"* }
%"class.angle::PackedEnumMap.236" = type { %"struct.std::__1::array.237" }
%"struct.std::__1::array.237" = type { [6 x %"class.std::__1::vector"*] }
%"class.rx::ShaderInterfaceVariableInfoMap" = type { %"class.angle::PackedEnumMap.238" }
%"class.angle::PackedEnumMap.238" = type { %"struct.std::__1::array.239" }
%"struct.std::__1::array.239" = type { [6 x %"class.absl::flat_hash_map.240"] }
%"class.absl::flat_hash_map.240" = type { %"class.absl::container_internal::raw_hash_map.241" }
%"class.absl::container_internal::raw_hash_map.241" = type { %"class.absl::container_internal::raw_hash_set.242" }
%"class.absl::container_internal::raw_hash_set.242" = type { i8*, %"union.absl::container_internal::map_slot_type.243"*, i64, i64, %"class.absl::container_internal::CompressedTuple.244" }
%"union.absl::container_internal::map_slot_type.243" = type opaque
%"class.absl::container_internal::CompressedTuple.244" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.245" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.rx::GlslangSourceOptions" = type { i8, i8, i8, i8 }
%"struct.rx::GlslangSpirvOptions" = type <{ i8, [3 x i8], i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2rx16GlslangWrapperVk19CreateSourceOptionsERKN5angle10FeaturesVkE(%"struct.angle::FeaturesVk"* nocapture readonly dereferenceable(3672)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %0, i64 0, i32 27, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %0, i64 0, i32 26, i32 4
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %0, i64 0, i32 1, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = zext i8 %7 to i32
  %9 = shl nuw nsw i32 %8, 24
  %10 = zext i8 %5 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = shl nuw nsw i32 %10, 8
  %13 = zext i8 %3 to i32
  %14 = or i32 %11, %13
  %15 = or i32 %14, %12
  %16 = or i32 %15, %9
  ret i32 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx16GlslangWrapperVk32ResetGlslangProgramInterfaceInfoEPNS_27GlslangProgramInterfaceInfoE(%"struct.rx::GlslangProgramInterfaceInfo"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.rx::GlslangProgramInterfaceInfo"* %0 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 2, i32 0>, <4 x i32>* %2, align 4
  %3 = getelementptr inbounds %"struct.rx::GlslangProgramInterfaceInfo", %"struct.rx::GlslangProgramInterfaceInfo"* %0, i64 0, i32 4
  %4 = bitcast i32* %3 to <4 x i32>*
  store <4 x i32> <i32 3, i32 0, i32 0, i32 0>, <4 x i32>* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx16GlslangWrapperVk13GetShaderCodeERKN5angle10FeaturesVkERKN2gl12ProgramStateERKNS5_22ProgramLinkedResourcesEPNS_27GlslangProgramInterfaceInfoEPNS1_13PackedEnumMapINS5_10ShaderTypeEPKNSt3__16vectorIjNSG_9allocatorIjEEEELm6EEEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.angle::FeaturesVk"* nocapture readonly dereferenceable(3672), %"class.gl::ProgramState"* dereferenceable(304), %"struct.gl::ProgramLinkedResources"* dereferenceable(2392), %"struct.rx::GlslangProgramInterfaceInfo"*, %"class.angle::PackedEnumMap.236"*, %"class.rx::ShaderInterfaceVariableInfoMap"*) local_unnamed_addr #2 align 2 {
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to %"struct.rx::GlslangSourceOptions"*
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %0, i64 0, i32 27, i32 4
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %0, i64 0, i32 26, i32 4
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = getelementptr inbounds %"struct.angle::FeaturesVk", %"struct.angle::FeaturesVk"* %0, i64 0, i32 1, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 24
  %18 = zext i8 %13 to i32
  %19 = shl nuw nsw i32 %18, 16
  %20 = shl nuw nsw i32 %18, 8
  %21 = zext i8 %11 to i32
  %22 = or i32 %19, %21
  %23 = or i32 %22, %20
  %24 = or i32 %23, %17
  store i32 %24, i32* %7, align 4
  call void @_ZN2rx25GlslangGetShaderSpirvCodeERKNS_20GlslangSourceOptionsERKN2gl12ProgramStateERKNS3_22ProgramLinkedResourcesEPNS_27GlslangProgramInterfaceInfoEPN5angle13PackedEnumMapINS3_10ShaderTypeEPKNSt3__16vectorIjNSF_9allocatorIjEEEELm6EEEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* nonnull dereferenceable(4) %8, %"class.gl::ProgramState"* dereferenceable(304) %1, %"struct.gl::ProgramLinkedResources"* dereferenceable(2392) %2, %"struct.rx::GlslangProgramInterfaceInfo"* %3, %"class.angle::PackedEnumMap.236"* %4, %"class.rx::ShaderInterfaceVariableInfoMap"* %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN2rx25GlslangGetShaderSpirvCodeERKNS_20GlslangSourceOptionsERKN2gl12ProgramStateERKNS3_22ProgramLinkedResourcesEPNS_27GlslangProgramInterfaceInfoEPN5angle13PackedEnumMapINS3_10ShaderTypeEPKNSt3__16vectorIjNSF_9allocatorIjEEEELm6EEEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* dereferenceable(4), %"class.gl::ProgramState"* dereferenceable(304), %"struct.gl::ProgramLinkedResources"* dereferenceable(2392), %"struct.rx::GlslangProgramInterfaceInfo"*, %"class.angle::PackedEnumMap.236"*, %"class.rx::ShaderInterfaceVariableInfoMap"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx16GlslangWrapperVk14TransformSpirVERKNS_19GlslangSpirvOptionsERKNS_30ShaderInterfaceVariableInfoMapERKNSt3__16vectorIjNS7_9allocatorIjEEEEPSB_(%"struct.rx::GlslangSpirvOptions"* dereferenceable(16), %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #2 align 2 {
  %5 = tail call i32 @_ZN2rx25GlslangTransformSpirvCodeERKNS_19GlslangSpirvOptionsERKNS_30ShaderInterfaceVariableInfoMapERKNSt3__16vectorIjNS6_9allocatorIjEEEEPSA_(%"struct.rx::GlslangSpirvOptions"* dereferenceable(16) %0, %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240) %1, %"class.std::__1::vector"* dereferenceable(24) %2, %"class.std::__1::vector"* %3) #5
  ret i32 %5
}

declare i32 @_ZN2rx25GlslangTransformSpirvCodeERKNS_19GlslangSpirvOptionsERKNS_30ShaderInterfaceVariableInfoMapERKNSt3__16vectorIjNS6_9allocatorIjEEEEPSA_(%"struct.rx::GlslangSpirvOptions"* dereferenceable(16), %"class.rx::ShaderInterfaceVariableInfoMap"* dereferenceable(240), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
