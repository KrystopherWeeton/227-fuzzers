; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_html_source_element.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_html_source_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::MemorySpan" = type { %"class.v8::CFunction"*, i64 }
%"class.v8::CFunction" = type { i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::CFunctionInfo" = type { %"class.v8::CTypeInfo", i32, %"class.v8::CTypeInfo"* }
%"class.v8::CTypeInfo" = type { i8, i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.blink::QualifiedName" = type { %class.scoped_refptr.329 }
%class.scoped_refptr.329 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.330", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.330" = type { %"class.base::RefCounted.331" }
%"class.base::RefCounted.331" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.182 }
%class.scoped_refptr.182 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.183" }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i32 }
%"class.blink::CEReactionsScope" = type <{ %"class.blink::CEReactionsScope"*, i8, [7 x i8] }>
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.188" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.188" = type { %"class.v8::TracedReference.189" }
%"class.v8::TracedReference.189" = type { %"class.v8::BasicTracedReference.190" }
%"class.v8::BasicTracedReference.190" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.209", %"class.WTF::HashMap.209", %"class.WTF::HashMap.214", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.266", %"class.blink::Persistent.277", i8, i8, i8, %"class.WTF::Vector.279", %"class.std::__1::unique_ptr.290", %"class.blink::Persistent.296", %"class.blink::Persistent.300", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.191", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", i32, i32 }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.209" = type { %"class.WTF::HashTable.210" }
%"class.WTF::HashTable.210" = type <{ %"struct.WTF::KeyValuePair.213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.213" = type opaque
%"class.WTF::HashMap.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"struct.WTF::KeyValuePair.218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.218" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.227", %class.scoped_refptr.182 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.222", i8* }
%"class.WTF::HashMap.222" = type { %"class.WTF::HashTable.223" }
%"class.WTF::HashTable.223" = type <{ %"struct.WTF::KeyValuePair.226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.226" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.227" = type { %"class.v8::PersistentValueMapBase.228" }
%"class.v8::PersistentValueMapBase.228" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.229", i8* }
%"class.WTF::HashMap.229" = type { %"class.WTF::HashTable.230" }
%"class.WTF::HashTable.230" = type <{ %"struct.WTF::KeyValuePair.233"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.233" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.234", %"class.WTF::String", %"class.std::__1::unique_ptr.236" }
%"class.WTF::RefCounted.234" = type { %"class.base::RefCounted.235" }
%"class.base::RefCounted.235" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.250", %"class.WTF::Vector.256", i8, i32 }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.WTF::Vector.242"* }
%"class.WTF::Vector.242" = type { %"class.WTF::VectorBuffer.243" }
%"class.WTF::VectorBuffer.243" = type { %"class.WTF::VectorBufferBase.244" }
%"class.WTF::VectorBufferBase.244" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.256" = type { %"class.WTF::VectorBuffer.257" }
%"class.WTF::VectorBuffer.257" = type { %"class.WTF::VectorBufferBase.244", [32 x i8] }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.269" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.269" = type { %"class.WTF::HashTable.270" }
%"class.WTF::HashTable.270" = type <{ %"struct.WTF::KeyValuePair.273"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.273" = type opaque
%"class.blink::Persistent.277" = type { %"class.blink::PersistentBase.278" }
%"class.blink::PersistentBase.278" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.315", %class.scoped_refptr.318, %"class.blink::Member.319", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.315" = type { %"class.v8::Persistent.316" }
%"class.v8::Persistent.316" = type { %"class.v8::PersistentBase.317" }
%"class.v8::PersistentBase.317" = type { %"class.v8::Context"* }
%class.scoped_refptr.318 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.277" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.282 }
%class.scoped_refptr.282 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.283" }
%"struct.std::__1::atomic.283" = type { %"struct.std::__1::__atomic_base.284" }
%"struct.std::__1::__atomic_base.284" = type { %"struct.std::__1::__atomic_base.285" }
%"struct.std::__1::__atomic_base.285" = type { %"struct.std::__1::__cxx_atomic_impl.286" }
%"struct.std::__1::__cxx_atomic_impl.286" = type { %"struct.std::__1::__cxx_atomic_base_impl.287" }
%"struct.std::__1::__cxx_atomic_base_impl.287" = type { i32 }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.296" = type { %"class.blink::PersistentBase.297" }
%"class.blink::PersistentBase.297" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.300" = type { %"class.blink::PersistentBase.301" }
%"class.blink::PersistentBase.301" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.306" }
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { %"struct.std::__1::pair.309"*, i32, i32 }
%"struct.std::__1::pair.309" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.456" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.blink::KURL"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.332" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.321", %"class.blink::Member.321" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.321", %"class.blink::Member.323", %"class.blink::Member.321", %"class.blink::Member.321", %"class.blink::Member.325" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.389", %"class.blink::Member.391", %"class.blink::Member.323", %"class.blink::Member.393", %"class.blink::Member.393", %"class.blink::Member.417", %"class.blink::Member.419", %"class.blink::Member.421", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.426", %"class.blink::HeapVector.428" }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.279", %"class.WTF::Vector.279", i8, i32, %"class.blink::Member.444", %"class.blink::Member.446", %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.462", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.468", %"class.blink::Member.470", %"class.blink::Member.434", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.472", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.410", %"class.blink::Member.408", %"class.blink::Member.488", %"class.blink::Member.408", %"class.blink::Member.408", %"class.blink::Member.408", %"class.blink::UserActionElementSet", %"class.blink::Member.497", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.504", i16, i8, %"class.blink::Member.511", %"class.blink::Member.513", %"class.blink::Member.515", %"class.blink::Member.517", %"class.blink::TextLinkColors", %"class.blink::Member.519", i8, [7 x i8], %"class.blink::HeapHashMap.521", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.408", %"class.WTF::Vector.528", %"class.blink::Member.533", %"class.blink::Member.535", i8, %"class.blink::Member.408", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.537", %"class.blink::HeapVector.539", %"class.std::__1::unique_ptr.547", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.553", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.566", %"class.WTF::Vector.568", i8, i8, %"class.std::__1::unique_ptr.573", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.410", %"class.blink::HeapVector.579", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.373", i8, i32, %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::Member.591", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.593", %"class.WTF::HashMap.595", %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::Member.604", %"class.blink::Member.606", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.608", i8, i32, %"class.blink::Member.615", %"class.blink::Member.617", i32, %"class.blink::Member.619", %"class.blink::Member.621", %"class.blink::Member.623", %"class.std::__1::unique_ptr.625", i64, %"class.std::__1::unique_ptr.631", i32, i32, %"class.blink::Member.637", %"class.blink::Member.639", %"class.blink::Member.641", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.643", %"class.WTF::Vector.645", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.650", %"class.blink::Member.657", %"class.std::__1::unique_ptr.659", %"class.blink::Member.665", i8, i8, %"class.WTF::String", %"class.blink::Member.667", i8, [7 x i8], %"class.blink::HeapHashMap.669", %"class.blink::HeapObserverSet", %"class.blink::Member.683", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.685", i32, i8, i8, %"class.blink::WeakMember.687", %"class.blink::Member.688" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.437" }
%"class.blink::HeapHashMap.437" = type { %"class.WTF::HashMap.440" }
%"class.WTF::HashMap.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"struct.WTF::KeyValuePair.443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.443" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.388 }
%class.scoped_refptr.388 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.472" = type { %"class.WTF::VectorBuffer.473" }
%"class.WTF::VectorBuffer.473" = type { %"class.WTF::VectorBufferBase.474" }
%"class.WTF::VectorBufferBase.474" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.475 }
%class.scoped_refptr.475 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.490" }
%"class.blink::HeapHashMap.490" = type { %"class.WTF::HashMap.493" }
%"class.WTF::HashMap.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.501" }
%"class.WTF::HashTable.501" = type <{ %"class.blink::WeakMember.503"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.503" = type opaque
%"class.blink::HeapHashSet.504" = type { %"class.WTF::HashSet.507" }
%"class.WTF::HashSet.507" = type { %"class.WTF::HashTable.508" }
%"class.WTF::HashTable.508" = type <{ %"class.blink::WeakMember.510"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.510" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.521" = type { %"class.WTF::HashMap.524" }
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type opaque
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.539" = type { %"class.WTF::Vector.542" }
%"class.WTF::Vector.542" = type { %"class.WTF::VectorBuffer.543" }
%"class.WTF::VectorBuffer.543" = type { %"class.WTF::VectorBufferBase.544" }
%"class.WTF::VectorBufferBase.544" = type { %"class.blink::Member.545"*, i32, i32 }
%"class.blink::Member.545" = type opaque
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.553" = type { %"class.WTF::HashSet.556" }
%"class.WTF::HashSet.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"class.blink::WeakMember.559"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.559" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.560", i32, [4 x i8] }>
%"class.WTF::Vector.560" = type { %"class.WTF::VectorBuffer.561" }
%"class.WTF::VectorBuffer.561" = type { %"class.WTF::VectorBufferBase.562" }
%"class.WTF::VectorBufferBase.562" = type { %"struct.std::__1::pair.563"*, i32, i32 }
%"struct.std::__1::pair.563" = type opaque
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.568" = type { %"class.WTF::VectorBuffer.569" }
%"class.WTF::VectorBuffer.569" = type { %"class.WTF::VectorBufferBase.570" }
%"class.WTF::VectorBufferBase.570" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.410" = type { %"class.WTF::Vector.413" }
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"class.blink::Member.408"*, i32, i32 }
%"class.blink::HeapVector.579" = type { %"class.WTF::Vector.582" }
%"class.WTF::Vector.582" = type { %"class.WTF::VectorBuffer.583" }
%"class.WTF::VectorBuffer.583" = type { %"class.WTF::VectorBufferBase.584" }
%"class.WTF::VectorBufferBase.584" = type { %"class.blink::Member.585"*, i32, i32 }
%"class.blink::Member.585" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.391" }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.487", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.478, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.478 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.479" }>
%"class.base::RefCountedThreadSafe.479" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.480 }
%class.scoped_refptr.480 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.481", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.481" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.482" }
%"struct.std::__1::atomic.482" = type { %"struct.std::__1::__atomic_base.483" }
%"struct.std::__1::__atomic_base.483" = type { %"struct.std::__1::__atomic_base.484" }
%"struct.std::__1::__atomic_base.484" = type { %"struct.std::__1::__cxx_atomic_impl.485" }
%"struct.std::__1::__cxx_atomic_impl.485" = type { %"struct.std::__1::__cxx_atomic_base_impl.486" }
%"struct.std::__1::__cxx_atomic_base_impl.486" = type { i8 }
%"class.blink::WeakMember.487" = type { %"class.blink::MemberBase.392" }
%"class.blink::HeapHashSet.608" = type { %"class.WTF::HashSet.611" }
%"class.WTF::HashSet.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"class.blink::Member.614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.614" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.645" = type { %"class.WTF::VectorBuffer.646" }
%"class.WTF::VectorBuffer.646" = type { %"class.WTF::VectorBufferBase.647" }
%"class.WTF::VectorBufferBase.647" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.650" = type { %"class.WTF::HashMap.653" }
%"class.WTF::HashMap.653" = type { %"class.WTF::HashTable.654" }
%"class.WTF::HashTable.654" = type <{ %"struct.WTF::KeyValuePair.656"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.656" = type opaque
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.669" = type { %"class.WTF::HashMap.672" }
%"class.WTF::HashMap.672" = type { %"class.WTF::HashTable.673" }
%"class.WTF::HashTable.673" = type <{ %"struct.WTF::KeyValuePair.675"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.675" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.676" }
%"class.blink::HeapHashSet.676" = type { %"class.WTF::HashSet.679" }
%"class.WTF::HashSet.679" = type { %"class.WTF::HashTable.680" }
%"class.WTF::HashTable.680" = type <{ %"class.blink::WeakMember.682"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.682" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.391", %"class.blink::HeapHashSet.692", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.699", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.692" = type { %"class.WTF::HashSet.695" }
%"class.WTF::HashSet.695" = type { %"class.WTF::HashTable.696" }
%"class.WTF::HashTable.696" = type <{ %"class.blink::Member.698"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.698" = type opaque
%"class.blink::HeapTaskRunnerTimer.699" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.700", { i64, i64 } }
%"class.blink::WeakMember.700" = type { %"class.blink::MemberBase.686" }
%"class.blink::WeakMember.687" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::Node"* }
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.397" }
%"class.blink::HeapHashMap.397" = type { %"class.WTF::HashMap.400" }
%"class.WTF::HashMap.400" = type { %"class.WTF::HashTable.401" }
%"class.WTF::HashTable.401" = type <{ %"struct.WTF::KeyValuePair.403"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.403" = type { %"class.WTF::AtomicString", %"class.blink::Member.404" }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.408", i32, %"class.blink::HeapVector.410" }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.423" }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::HeapHashMap.425"* }
%"class.blink::HeapHashMap.425" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.428" = type { %"class.WTF::Vector.431" }
%"class.WTF::Vector.431" = type { %"class.WTF::VectorBuffer.432" }
%"class.WTF::VectorBuffer.432" = type { %"class.WTF::VectorBufferBase.433" }
%"class.WTF::VectorBufferBase.433" = type { %"class.blink::Member.434"*, i32, i32 }
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.336", %"class.blink::Member.338", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.336" = type { %"class.WTF::SingleThreadedBitField.337" }
%"class.WTF::SingleThreadedBitField.337" = type { i32 }
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.341", %"class.WTF::AtomicString", %"class.WTF::Vector.343" }
%"class.WTF::RefCounted.341" = type { %"class.base::RefCounted.342" }
%"class.base::RefCounted.342" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.343" = type { %"class.WTF::VectorBuffer.344" }
%"class.WTF::VectorBuffer.344" = type { %"class.WTF::VectorBufferBase.345", [32 x i8] }
%"class.WTF::VectorBufferBase.345" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.701", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.701" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.702" }
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { i8* }
%"class.blink::HTMLSourceElement" = type { %"class.blink::HTMLElement", %"class.blink::Member.348", %"class.blink::Member.386", %"class.blink::TaskHandle" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::MediaQueryList"* }
%"class.blink::MediaQueryList" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::Member.373", %class.scoped_refptr.375, %"class.blink::HeapLinkedHashSet", i8, i8, [6 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.364" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.352" }
%"class.blink::HeapVector.352" = type { %"class.WTF::Vector.355" }
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357", [32 x i8] }
%"class.WTF::VectorBufferBase.357" = type { %"struct.std::__1::pair.358"*, i32, i32 }
%"struct.std::__1::pair.358" = type { %"class.WTF::AtomicString", %"class.blink::Member.359" }
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::HeapVector.361"* }
%"class.blink::HeapVector.361" = type opaque
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.WTF::Vector.367"* }
%"class.WTF::Vector.367" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.371" }
%"class.blink::WeakMember.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type opaque
%class.scoped_refptr.375 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.378", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.378" = type { %"class.WTF::HashTable.379" }
%"class.WTF::HashTable.379" = type <{ %"struct.WTF::KeyValuePair.381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.381" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.382", i32, i32 }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::HTMLSourceElement::Listener"* }
%"class.blink::HTMLSourceElement::Listener" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.338", %"class.WTF::Vector.708" }
%"class.WTF::Vector.708" = type { %"class.WTF::VectorBuffer.709" }
%"class.WTF::VectorBuffer.709" = type { %"class.WTF::VectorBufferBase.710", [64 x i8] }
%"class.WTF::VectorBufferBase.710" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.v8::Integer" = type { i8 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>

$_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"HTMLSourceElement\00", align 1
@_ZN5blink13V8HTMLElement18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink19V8HTMLSourceElement18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink19V8HTMLSourceElement24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* @_ZN5blink13V8HTMLElement18wrapper_type_info_E, i8 4 }, align 8
@_ZN5blink17HTMLSourceElement18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink19V8HTMLSourceElement18wrapper_type_info_E, align 8
@.ref.tmp = private constant %"class.v8::MemorySpan" zeroinitializer, align 8
@_ZZN5blink19V8HTMLSourceElement30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [7 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element23SrcAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element23SrcAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element24TypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element24TypeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element26SrcsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element26SrcsetAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element25SizesAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element25SizesAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element25MediaAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element25MediaAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element25WidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element25WidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element26HeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_html_source_element26HeightAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"srcset\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"sizes\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"media\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16CEReactionsScope13top_of_stack_E = external local_unnamed_addr global %"class.blink::CEReactionsScope"*, align 8
@_ZN5blink10html_names11kSrcsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names10kSizesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kMediaAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8HTMLSourceElement24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %6 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %5) #6
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %5) #6
  %8 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8HTMLElement18wrapper_type_info_E, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #6
  %9 = bitcast %"class.v8::Template"* %8 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink19V8HTMLSourceElement18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %6, %"class.v8::ObjectTemplate"* %7, %"class.v8::FunctionTemplate"* %5, %"class.v8::FunctionTemplate"* %9) #6
  tail call void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"* %5, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink12_GLOBAL__N_122v8_html_source_element19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* null, i32 0, %"class.v8::MemorySpan"* nonnull dereferenceable(16) @.ref.tmp) #6
  tail call void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"* %5, i32 0) #6
  %10 = bitcast %"class.v8::ObjectTemplate"* %6 to %"class.v8::Template"*
  %11 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %12 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %5) #6
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 7, i64* %14, align 8
  %15 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([7 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8HTMLSourceElement30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %15, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %10, %"class.v8::Template"* %11, %"class.v8::Template"* %2, %"class.v8::Signature"* %13, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i32, %"class.v8::MemorySpan"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = getelementptr inbounds i64, i64* %5, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %90

13:                                               ; preds = %1
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %90

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -2
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %90

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 5, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 3
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %38 = bitcast i8** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #6
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #6
  %42 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  %43 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() #6
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %30
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #6
  br label %60

60:                                               ; preds = %30, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %62, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %66 = bitcast %"class.v8::Isolate"* %65 to %"class.v8::internal::Isolate"*
  %67 = load i64, i64* %62, align 8
  %68 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %66, i64 %67) #6
  %69 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %65) #6
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = bitcast i64* %68 to %"class.v8::Value"*
  %72 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %65, %"class.v8::Value"* %71) #6
  br label %73

73:                                               ; preds = %70, %64, %60
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #6
  br label %89

89:                                               ; preds = %73, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #6
  br label %108

90:                                               ; preds = %24, %13, %1
  %91 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %92 = add i64 %91, 8
  %93 = inttoptr i64 %92 to %"class.blink::V8PerIsolateData"**
  %94 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %94, i64 0, i32 8
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %107

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %100 = load i64*, i64** %99, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 -1
  %102 = getelementptr inbounds i64, i64* %5, i64 3
  %103 = icmp eq i64* %101, null
  %104 = getelementptr inbounds i64, i64* %5, i64 2
  %105 = select i1 %103, i64* %104, i64* %101, !prof !3
  %106 = load i64, i64* %105, align 8
  store i64 %106, i64* %102, align 8
  br label %108

107:                                              ; preds = %90
  tail call void @_ZN5blink17V8HTMLConstructor15HtmlConstructorERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_15WrapperTypeInfoENS_15HTMLElementTypeE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"struct.blink::WrapperTypeInfo"* nonnull dereferenceable(48) @_ZN5blink19V8HTMLSourceElement18wrapper_type_info_E, i32 57) #6
  br label %108

108:                                              ; preds = %107, %98, %89
  ret void
}

declare void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8HTMLSourceElement30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #6
  %9 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([7 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8HTMLSourceElement30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %10, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %8, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element23SrcAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #6
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #6
  %26 = bitcast i8* %24 to %"class.blink::Element"*
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  call void @_ZNK5blink7Element15GetURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Element"* %26, %"class.blink::QualifiedName"* dereferenceable(8) %27) #6
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 1
  %31 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %23
  %35 = getelementptr inbounds i64, i64* %29, i64 3
  %36 = load i64, i64* %30, align 8
  %37 = add i64 %36, 200
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %35, align 8
  br label %59

40:                                               ; preds = %23
  %41 = load i64, i64* %30, align 8
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to %"class.blink::V8PerIsolateData"**
  %44 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %44, i64 0, i32 5, i32 0, i32 0, i32 0
  %46 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %45, align 8
  %47 = getelementptr inbounds i64, i64* %29, i64 3
  %48 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %46, i64 0, i32 3, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, %32
  br i1 %50, label %51, label %58

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %46, i64 0, i32 1, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = inttoptr i64 %53 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %47, align 8
  br label %59

58:                                               ; preds = %40
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %46, i64* %47, %"class.WTF::StringImpl"* nonnull %32) #6
  br label %59

59:                                               ; preds = %34, %51, %55, %58
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element23SrcAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #6
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #6
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #6
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = load i64*, i64** %6, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 160
  %57 = inttoptr i64 %56 to %"class.v8::Value"*
  br label %61

58:                                               ; preds = %47
  %59 = bitcast i64** %27 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.v8::Value"* [ %57, %52 ], [ %60, %58 ]
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #6
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %62, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %64 = load i32, i32* %19, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %121

66:                                               ; preds = %61
  %67 = bitcast i8* %48 to %"class.blink::Element"*
  %68 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %69 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #6
  %70 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %71 = load %"class.v8::String"*, %"class.v8::String"** %70, align 8
  %72 = icmp eq %"class.v8::String"* %71, null
  br i1 %72, label %75, label %73, !prof !3

73:                                               ; preds = %66
  %74 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %71, i32 0) #6
  br label %102

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %102, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = and i32 %81, 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %100, label %84

84:                                               ; preds = %79
  %85 = load atomic i32, i32* %80 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %102

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #6
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  call void @llvm.trap() #6
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %102

100:                                              ; preds = %79
  %101 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %77) #6
  br label %102

102:                                              ; preds = %73, %75, %84, %98, %100
  %103 = phi %"class.WTF::StringImpl"* [ %74, %73 ], [ %101, %100 ], [ %77, %84 ], [ %77, %98 ], [ null, %75 ]
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %67, %"class.blink::QualifiedName"* dereferenceable(8) %68, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #6
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %102, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #6
  br label %121

121:                                              ; preds = %61, %120
  %122 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  store i8* null, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %123) #6
  br label %126

126:                                              ; preds = %125, %121
  %127 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #6
  br label %143

143:                                              ; preds = %126, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %63) #6
  %144 = load i8, i8* %23, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %147, label %146

146:                                              ; preds = %143
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #6
  br label %147

147:                                              ; preds = %143, %146
  %148 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %149 = load i64, i64* %148, align 8
  store i64 %149, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %150 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = icmp eq i64* %151, null
  br i1 %152, label %162, label %153

153:                                              ; preds = %147
  %154 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %155 = bitcast %"class.v8::Isolate"* %154 to %"class.v8::internal::Isolate"*
  %156 = load i64, i64* %151, align 8
  %157 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %155, i64 %156) #6
  %158 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %154) #6
  br i1 %158, label %162, label %159

159:                                              ; preds = %153
  %160 = bitcast i64* %157 to %"class.v8::Value"*
  %161 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %154, %"class.v8::Value"* %160) #6
  br label %162

162:                                              ; preds = %159, %153, %147
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #6
  br label %178

178:                                              ; preds = %162, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element24TypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::HTMLSourceElement"*
  %25 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17HTMLSourceElement4typeEv(%"class.blink::HTMLSourceElement"* %24) #6
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %27, i64 3
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 200
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %33, align 8
  br label %57

38:                                               ; preds = %22
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 8
  %41 = inttoptr i64 %40 to %"class.blink::V8PerIsolateData"**
  %42 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %42, i64 0, i32 5, i32 0, i32 0, i32 0
  %44 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %43, align 8
  %45 = getelementptr inbounds i64, i64* %27, i64 3
  %46 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %44, i64 0, i32 3, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, %30
  br i1 %48, label %49, label %56

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %44, i64 0, i32 1, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = inttoptr i64 %51 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %45, align 8
  br label %57

56:                                               ; preds = %38
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %44, i64* %45, %"class.WTF::StringImpl"* nonnull %30) #6
  br label %57

57:                                               ; preds = %32, %49, %53, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element24TypeAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #6
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #6
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #6
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = bitcast i8* %48 to %"class.blink::HTMLSourceElement"*
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %47
  %54 = load i64*, i64** %6, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 1
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 160
  %58 = inttoptr i64 %57 to %"class.v8::Value"*
  br label %62

59:                                               ; preds = %47
  %60 = bitcast i64** %27 to %"class.v8::Value"**
  %61 = load %"class.v8::Value"*, %"class.v8::Value"** %60, align 8
  br label %62

62:                                               ; preds = %53, %59
  %63 = phi %"class.v8::Value"* [ %58, %53 ], [ %61, %59 ]
  %64 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %64) #6
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %63, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %65 = load i32, i32* %19, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %120

67:                                               ; preds = %62
  %68 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #6
  %69 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %70 = load %"class.v8::String"*, %"class.v8::String"** %69, align 8
  %71 = icmp eq %"class.v8::String"* %70, null
  br i1 %71, label %74, label %72, !prof !3

72:                                               ; preds = %67
  %73 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %70, i32 0) #6
  br label %101

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 acquire, align 4
  %81 = and i32 %80, 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %99, label %83

83:                                               ; preds = %78
  %84 = load atomic i32, i32* %79 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %101

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #6
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  call void @llvm.trap() #6
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %101

99:                                               ; preds = %78
  %100 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %76) #6
  br label %101

101:                                              ; preds = %72, %74, %83, %97, %99
  %102 = phi %"class.WTF::StringImpl"* [ %73, %72 ], [ %100, %99 ], [ %76, %83 ], [ %76, %97 ], [ null, %74 ]
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %103, align 8
  call void @_ZN5blink17HTMLSourceElement7setTypeERKN3WTF12AtomicStringE(%"class.blink::HTMLSourceElement"* %49, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #6
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #6
  br label %119

119:                                              ; preds = %101, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #6
  br label %120

120:                                              ; preds = %62, %119
  %121 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  store i8* null, i8** %121, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %120
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %122) #6
  br label %125

125:                                              ; preds = %124, %120
  %126 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #6
  br label %142

142:                                              ; preds = %125, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %64) #6
  %143 = load i8, i8* %23, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #6
  br label %146

146:                                              ; preds = %142, %145
  %147 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %149 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %150 = load i64*, i64** %149, align 8
  %151 = icmp eq i64* %150, null
  br i1 %151, label %161, label %152

152:                                              ; preds = %146
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %154 = bitcast %"class.v8::Isolate"* %153 to %"class.v8::internal::Isolate"*
  %155 = load i64, i64* %150, align 8
  %156 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %154, i64 %155) #6
  %157 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %153) #6
  br i1 %157, label %161, label %158

158:                                              ; preds = %152
  %159 = bitcast i64* %156 to %"class.v8::Value"*
  %160 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %159) #6
  br label %161

161:                                              ; preds = %158, %152, %146
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #6
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element26SrcsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.338"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #6
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element26SrcsetAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #6
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #6
  %23 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %26 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store i8 0, i8* %23, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 -1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %1, %1, %1
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %1
  %45 = bitcast i64* %29 to %"class.v8::Object"*
  %46 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #6
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = load i64*, i64** %6, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 160
  %57 = inttoptr i64 %56 to %"class.v8::Value"*
  br label %61

58:                                               ; preds = %47
  %59 = bitcast i64** %27 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"class.v8::Value"* [ %57, %52 ], [ %60, %58 ]
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #6
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %62, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %64 = load i32, i32* %19, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %121

66:                                               ; preds = %61
  %67 = bitcast i8* %48 to %"class.blink::Element"*
  %68 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %69 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #6
  %70 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %71 = load %"class.v8::String"*, %"class.v8::String"** %70, align 8
  %72 = icmp eq %"class.v8::String"* %71, null
  br i1 %72, label %75, label %73, !prof !3

73:                                               ; preds = %66
  %74 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %71, i32 0) #6
  br label %102

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %102, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = and i32 %81, 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %100, label %84

84:                                               ; preds = %79
  %85 = load atomic i32, i32* %80 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %102

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #6
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  call void @llvm.trap() #6
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %102

100:                                              ; preds = %79
  %101 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %77) #6
  br label %102

102:                                              ; preds = %73, %75, %84, %98, %100
  %103 = phi %"class.WTF::StringImpl"* [ %74, %73 ], [ %101, %100 ], [ %77, %84 ], [ %77, %98 ], [ null, %75 ]
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %67, %"class.blink::QualifiedName"* dereferenceable(8) %68, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #6
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #6
  br label %120

120:                                              ; preds = %102, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #6
  br label %121

121:                                              ; preds = %61, %120
  %122 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  store i8* null, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %123) #6
  br label %126

126:                                              ; preds = %125, %121
  %127 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #6
  br label %143

143:                                              ; preds = %126, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %63) #6
  %144 = load i8, i8* %23, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %147, label %146

146:                                              ; preds = %143
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #6
  br label %147

147:                                              ; preds = %143, %146
  %148 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %149 = load i64, i64* %148, align 8
  store i64 %149, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %150 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = icmp eq i64* %151, null
  br i1 %152, label %162, label %153

153:                                              ; preds = %147
  %154 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %155 = bitcast %"class.v8::Isolate"* %154 to %"class.v8::internal::Isolate"*
  %156 = load i64, i64* %151, align 8
  %157 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %155, i64 %156) #6
  %158 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %154) #6
  br i1 %158, label %162, label %159

159:                                              ; preds = %153
  %160 = bitcast i64* %157 to %"class.v8::Value"*
  %161 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %154, %"class.v8::Value"* %160) #6
  br label %162

162:                                              ; preds = %159, %153, %147
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #6
  br label %178

178:                                              ; preds = %162, %174, %177
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element25SizesAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.338"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #6
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element25SizesAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element25MediaAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kMediaAttrE, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 96
  %26 = bitcast i8* %25 to %"class.blink::ElementData"**
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.338"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %22
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = getelementptr inbounds i64, i64* %84, i64 3
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 200
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %90, align 8
  br label %114

95:                                               ; preds = %81
  %96 = load i64, i64* %85, align 8
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to %"class.blink::V8PerIsolateData"**
  %99 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %99, i64 0, i32 5, i32 0, i32 0, i32 0
  %101 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %100, align 8
  %102 = getelementptr inbounds i64, i64* %84, i64 3
  %103 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 3, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  br i1 %105, label %106, label %113

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %101, i64 0, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = inttoptr i64 %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %102, align 8
  br label %114

113:                                              ; preds = %95
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %101, i64* %102, %"class.WTF::StringImpl"* nonnull %87) #6
  br label %114

114:                                              ; preds = %89, %106, %110, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element25MediaAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kMediaAttrE, align 8
  tail call void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, %"class.blink::QualifiedName"* dereferenceable(8) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element25WidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Element"*
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %26 = tail call i32 @_ZNK5blink7Element28GetUnsignedIntegralAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %24, %"class.blink::QualifiedName"* dereferenceable(8) %25) #6
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = icmp sgt i32 %26, -1
  br i1 %30, label %31, label %48, !prof !4

31:                                               ; preds = %22
  %32 = icmp ult i32 %26, 1073741824
  br i1 %32, label %33, label %36, !prof !4

33:                                               ; preds = %31
  %34 = sext i32 %26 to i64
  %35 = shl nsw i64 %34, 1
  br label %60

36:                                               ; preds = %31
  %37 = getelementptr inbounds i64, i64* %28, i64 1
  %38 = bitcast i64* %37 to %"class.v8::Isolate"**
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %40 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %39, i32 %26) #6
  %41 = icmp eq %"class.v8::Integer"* %40, null
  br i1 %41, label %42, label %45, !prof !3

42:                                               ; preds = %36
  %43 = getelementptr inbounds i64, i64* %28, i64 2
  %44 = load i64, i64* %43, align 8
  br label %60

45:                                               ; preds = %36
  %46 = bitcast %"class.v8::Integer"* %40 to i64*
  %47 = load i64, i64* %46, align 8
  br label %60

48:                                               ; preds = %22
  %49 = getelementptr inbounds i64, i64* %28, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Isolate"**
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %52 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %51, i32 %26) #6
  %53 = icmp eq %"class.v8::Integer"* %52, null
  br i1 %53, label %54, label %57, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds i64, i64* %28, i64 2
  %56 = load i64, i64* %55, align 8
  br label %60

57:                                               ; preds = %48
  %58 = bitcast %"class.v8::Integer"* %52 to i64*
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %33, %42, %45, %54, %57
  %61 = phi i64 [ %35, %33 ], [ %44, %42 ], [ %47, %45 ], [ %56, %54 ], [ %59, %57 ]
  store i64 %61, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element25WidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #6
  %20 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %1, %1, %1
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %1
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #6
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = load i64*, i64** %4, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 160
  %55 = inttoptr i64 %54 to %"class.v8::Value"*
  br label %59

56:                                               ; preds = %45
  %57 = bitcast i64** %25 to %"class.v8::Value"**
  %58 = load %"class.v8::Value"*, %"class.v8::Value"** %57, align 8
  br label %59

59:                                               ; preds = %50, %56
  %60 = phi %"class.v8::Value"* [ %55, %50 ], [ %58, %56 ]
  %61 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %60) #6
  br i1 %61, label %62, label %65, !prof !4

62:                                               ; preds = %59
  %63 = bitcast %"class.v8::Value"* %60 to %"class.v8::Uint32"*
  %64 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %63) #6
  br label %72

65:                                               ; preds = %59
  %66 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %60) #6
  br i1 %66, label %67, label %70, !prof !4

67:                                               ; preds = %65
  %68 = bitcast %"class.v8::Value"* %60 to %"class.v8::Int32"*
  %69 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %68) #6
  br label %72

70:                                               ; preds = %65
  %71 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %60, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %72

72:                                               ; preds = %62, %67, %70
  %73 = phi i32 [ %64, %62 ], [ %69, %67 ], [ %71, %70 ]
  %74 = load i32, i32* %17, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = bitcast i8* %46 to %"class.blink::Element"*
  %78 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %77, %"class.blink::QualifiedName"* dereferenceable(8) %78, i32 %73, i32 0) #6
  br label %79

79:                                               ; preds = %72, %76
  %80 = load i8, i8* %21, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #6
  br label %83

83:                                               ; preds = %79, %82
  %84 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %86 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = icmp eq i64* %87, null
  br i1 %88, label %98, label %89

89:                                               ; preds = %83
  %90 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %91 = bitcast %"class.v8::Isolate"* %90 to %"class.v8::internal::Isolate"*
  %92 = load i64, i64* %87, align 8
  %93 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %91, i64 %92) #6
  %94 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %90) #6
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = bitcast i64* %93 to %"class.v8::Value"*
  %97 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %90, %"class.v8::Value"* %96) #6
  br label %98

98:                                               ; preds = %95, %89, %83
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #6
  br label %114

114:                                              ; preds = %98, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element26HeightAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Element"*
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %26 = tail call i32 @_ZNK5blink7Element28GetUnsignedIntegralAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %24, %"class.blink::QualifiedName"* dereferenceable(8) %25) #6
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = icmp sgt i32 %26, -1
  br i1 %30, label %31, label %48, !prof !4

31:                                               ; preds = %22
  %32 = icmp ult i32 %26, 1073741824
  br i1 %32, label %33, label %36, !prof !4

33:                                               ; preds = %31
  %34 = sext i32 %26 to i64
  %35 = shl nsw i64 %34, 1
  br label %60

36:                                               ; preds = %31
  %37 = getelementptr inbounds i64, i64* %28, i64 1
  %38 = bitcast i64* %37 to %"class.v8::Isolate"**
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %40 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %39, i32 %26) #6
  %41 = icmp eq %"class.v8::Integer"* %40, null
  br i1 %41, label %42, label %45, !prof !3

42:                                               ; preds = %36
  %43 = getelementptr inbounds i64, i64* %28, i64 2
  %44 = load i64, i64* %43, align 8
  br label %60

45:                                               ; preds = %36
  %46 = bitcast %"class.v8::Integer"* %40 to i64*
  %47 = load i64, i64* %46, align 8
  br label %60

48:                                               ; preds = %22
  %49 = getelementptr inbounds i64, i64* %28, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Isolate"**
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %52 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %51, i32 %26) #6
  %53 = icmp eq %"class.v8::Integer"* %52, null
  br i1 %53, label %54, label %57, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds i64, i64* %28, i64 2
  %56 = load i64, i64* %55, align 8
  br label %60

57:                                               ; preds = %48
  %58 = bitcast %"class.v8::Integer"* %52 to i64*
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %33, %42, %45, %54, %57
  %61 = phi i64 [ %35, %33 ], [ %44, %42 ], [ %47, %45 ], [ %56, %54 ], [ %59, %57 ]
  store i64 %61, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_html_source_element26HeightAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #6
  %20 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %1, %1, %1
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %1
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #6
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = load i64*, i64** %4, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 160
  %55 = inttoptr i64 %54 to %"class.v8::Value"*
  br label %59

56:                                               ; preds = %45
  %57 = bitcast i64** %25 to %"class.v8::Value"**
  %58 = load %"class.v8::Value"*, %"class.v8::Value"** %57, align 8
  br label %59

59:                                               ; preds = %50, %56
  %60 = phi %"class.v8::Value"* [ %55, %50 ], [ %58, %56 ]
  %61 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %60) #6
  br i1 %61, label %62, label %65, !prof !4

62:                                               ; preds = %59
  %63 = bitcast %"class.v8::Value"* %60 to %"class.v8::Uint32"*
  %64 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %63) #6
  br label %72

65:                                               ; preds = %59
  %66 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %60) #6
  br i1 %66, label %67, label %70, !prof !4

67:                                               ; preds = %65
  %68 = bitcast %"class.v8::Value"* %60 to %"class.v8::Int32"*
  %69 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %68) #6
  br label %72

70:                                               ; preds = %65
  %71 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %60, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %72

72:                                               ; preds = %62, %67, %70
  %73 = phi i32 [ %64, %62 ], [ %69, %67 ], [ %71, %70 ]
  %74 = load i32, i32* %17, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = bitcast i8* %46 to %"class.blink::Element"*
  %78 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %77, %"class.blink::QualifiedName"* dereferenceable(8) %78, i32 %73, i32 0) #6
  br label %79

79:                                               ; preds = %72, %76
  %80 = load i8, i8* %21, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #6
  br label %83

83:                                               ; preds = %79, %82
  %84 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %86 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = icmp eq i64* %87, null
  br i1 %88, label %98, label %89

89:                                               ; preds = %83
  %90 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %91 = bitcast %"class.v8::Isolate"* %90 to %"class.v8::internal::Isolate"*
  %92 = load i64, i64* %87, align 8
  %93 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %91, i64 %92) #6
  %94 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %90) #6
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = bitcast i64* %93 to %"class.v8::Value"*
  %97 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %90, %"class.v8::Value"* %96) #6
  br label %98

98:                                               ; preds = %95, %89, %83
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #6
  br label %114

114:                                              ; preds = %98, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #6
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() local_unnamed_addr #2

declare void @_ZN5blink17V8HTMLConstructor15HtmlConstructorERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_15WrapperTypeInfoENS_15HTMLElementTypeE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"struct.blink::WrapperTypeInfo"* dereferenceable(48), i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZNK5blink7Element15GetURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* sret, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %6) #6
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %7 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.v8::String"*, %"class.v8::String"** %7, align 8
  %9 = icmp eq %"class.v8::String"* %8, null
  br i1 %9, label %12, label %10, !prof !3

10:                                               ; preds = %4
  %11 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %8, i32 0) #6
  br label %33

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #6
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  call void @llvm.trap() #6
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %10, %12, %16, %31
  %34 = phi %"class.WTF::StringImpl"* [ %11, %10 ], [ null, %12 ], [ %14, %16 ], [ %14, %31 ]
  %35 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  store i8* null, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %36) #6
  br label %39

39:                                               ; preds = %38, %33
  %40 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #6
  br label %56

56:                                               ; preds = %39, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %6) #6
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 152, i1 false)
  br label %120

62:                                               ; preds = %56
  %63 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #6
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %69
  call void @llvm.trap() #6
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %62, %64, %79
  %82 = call %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"* %34) #6
  %83 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %83, align 8
  %84 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %106

93:                                               ; preds = %86
  %94 = zext i32 %92 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #6
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %93
  call void @llvm.trap() #6
  unreachable

101:                                              ; preds = %93
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %91, align 4
  br label %106

103:                                              ; preds = %81
  %104 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %105 = bitcast %"class.std::__1::unique_ptr.702"* %104 to i64*
  store i64 0, i64* %105, align 8
  br label %120

106:                                              ; preds = %86, %101
  %107 = phi i32 [ %102, %101 ], [ %92, %86 ]
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %109 = bitcast %"class.std::__1::unique_ptr.702"* %108 to i64*
  store i64 0, i64* %109, align 8
  %110 = load atomic i32, i32* %87 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %115 = add i32 %107, -1
  store i32 %115, i32* %114, align 4
  br label %116

116:                                              ; preds = %113, %106
  %117 = phi i32 [ %115, %113 ], [ %107, %106 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #6
  br label %120

120:                                              ; preds = %119, %116, %103, %60
  %121 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #6
  br label %135

135:                                              ; preds = %120, %131, %134
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.702"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.702"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #6
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #6
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.702"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #6
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17HTMLSourceElement4typeEv(%"class.blink::HTMLSourceElement"*) local_unnamed_addr #2

declare void @_ZN5blink17HTMLSourceElement7setTypeERKN3WTF12AtomicStringE(%"class.blink::HTMLSourceElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink8bindings47PerformAttributeSetCEReactionsReflectTypeStringERKN2v820FunctionCallbackInfoINS1_5ValueEEERKNS_13QualifiedNameEPKcSB_(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), %"class.blink::QualifiedName"* dereferenceable(8), i8*, i8*) local_unnamed_addr #2

declare i32 @_ZNK5blink7Element28GetUnsignedIntegralAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
