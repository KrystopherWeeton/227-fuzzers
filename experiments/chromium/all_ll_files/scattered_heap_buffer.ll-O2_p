; ModuleID = '../../third_party/perfetto/src/protozero/scattered_heap_buffer.cc'
source_filename = "../../third_party/perfetto/src/protozero/scattered_heap_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { i8*, i8*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.protozero::ContiguousMemoryRange"* }

$_ZN8perfetto4base8BasenameEPKc = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_ = comdat any

$_ZNSt3__16vectorIN9protozero19ScatteredHeapBuffer5SliceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN9protozero19ScatteredHeapBuffer5SliceENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRmEEEvDpOT_ = comdat any

@_ZTVN9protozero19ScatteredHeapBufferE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.protozero::ScatteredHeapBuffer"*)* @_ZN9protozero19ScatteredHeapBufferD2Ev to i8*), i8* bitcast (void (%"class.protozero::ScatteredHeapBuffer"*)* @_ZN9protozero19ScatteredHeapBufferD0Ev to i8*), i8* bitcast ({ i8*, i8* } (%"class.protozero::ScatteredHeapBuffer"*)* @_ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv to i8*)] }, align 8
@.str = private unnamed_addr constant [66 x i8] c"../../third_party/perfetto/src/protozero/scattered_heap_buffer.cc\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"%s (errno: %d, %s)\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"PERFETTO_CHECK(writer_)\00", align 1

@_ZN9protozero19ScatteredHeapBuffer5SliceC1Ev = hidden unnamed_addr alias void (%"class.protozero::ScatteredHeapBuffer::Slice"*), void (%"class.protozero::ScatteredHeapBuffer::Slice"*)* @_ZN9protozero19ScatteredHeapBuffer5SliceC2Ev
@_ZN9protozero19ScatteredHeapBuffer5SliceC1Em = hidden unnamed_addr alias void (%"class.protozero::ScatteredHeapBuffer::Slice"*, i64), void (%"class.protozero::ScatteredHeapBuffer::Slice"*, i64)* @_ZN9protozero19ScatteredHeapBuffer5SliceC2Em
@_ZN9protozero19ScatteredHeapBuffer5SliceC1EOS1_ = hidden unnamed_addr alias void (%"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*), void (%"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*)* @_ZN9protozero19ScatteredHeapBuffer5SliceC2EOS1_
@_ZN9protozero19ScatteredHeapBuffer5SliceD1Ev = hidden unnamed_addr alias void (%"class.protozero::ScatteredHeapBuffer::Slice"*), void (%"class.protozero::ScatteredHeapBuffer::Slice"*)* @_ZN9protozero19ScatteredHeapBuffer5SliceD2Ev
@_ZN9protozero19ScatteredHeapBufferC1Emm = hidden unnamed_addr alias void (%"class.protozero::ScatteredHeapBuffer"*, i64, i64), void (%"class.protozero::ScatteredHeapBuffer"*, i64, i64)* @_ZN9protozero19ScatteredHeapBufferC2Emm
@_ZN9protozero19ScatteredHeapBufferD1Ev = hidden unnamed_addr alias void (%"class.protozero::ScatteredHeapBuffer"*), void (%"class.protozero::ScatteredHeapBuffer"*)* @_ZN9protozero19ScatteredHeapBufferD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9protozero19ScatteredHeapBuffer5SliceC2Ev(%"class.protozero::ScatteredHeapBuffer::Slice"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBuffer5SliceC2Em(%"class.protozero::ScatteredHeapBuffer::Slice"* nocapture, i64) unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znam(i64 %1) #15
  %4 = ptrtoint i8* %3 to i64
  %5 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %0, i64 0, i32 1
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %0, i64 0, i32 2
  store i64 %1, i64* %7, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBuffer5Slice5ClearEv(%"class.protozero::ScatteredHeapBuffer::Slice"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %0, i64 0, i32 2
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBuffer5SliceC2EOS1_(%"class.protozero::ScatteredHeapBuffer::Slice"* nocapture, %"class.protozero::ScatteredHeapBuffer::Slice"* nocapture dereferenceable(24)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store i8* null, i8** %3, align 8
  %6 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %1, i64 0, i32 1
  %9 = bitcast i64* %7 to i8*
  %10 = bitcast i64* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBuffer5SliceD2Ev(%"class.protozero::ScatteredHeapBuffer::Slice"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  store i8* null, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #15
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.protozero::ScatteredHeapBuffer::Slice"* @_ZN9protozero19ScatteredHeapBuffer5SliceaSEOS1_(%"class.protozero::ScatteredHeapBuffer::Slice"* returned, %"class.protozero::ScatteredHeapBuffer::Slice"* nocapture dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store i8* null, i8** %3, align 8
  %6 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq i8* %7, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %7) #15
  br label %11

11:                                               ; preds = %2, %10
  %12 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %1, i64 0, i32 1
  %14 = bitcast i64* %12 to i8*
  %15 = bitcast i64* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  ret %"class.protozero::ScatteredHeapBuffer::Slice"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBufferC2Emm(%"class.protozero::ScatteredHeapBuffer"* nocapture, i64, i64) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9protozero19ScatteredHeapBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 2
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 3
  %8 = bitcast %"class.protozero::ScatteredStreamWriter"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBufferD2Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9protozero19ScatteredHeapBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #15
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %9, align 8
  %11 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %10 to i8*
  %14 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 1
  %15 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %14, align 8
  %16 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %15, %10
  br i1 %16, label %29, label %17

17:                                               ; preds = %12, %24
  %18 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %19, %24 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %18, i64 -1
  %20 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  store i8* null, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  tail call void @_ZdaPv(i8* nonnull %21) #15
  br label %24

24:                                               ; preds = %23, %17
  %25 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %19, %10
  br i1 %25, label %26, label %17

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %8 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %12
  %30 = phi i8* [ %28, %26 ], [ %13, %12 ]
  store %"class.protozero::ScatteredHeapBuffer::Slice"* %10, %"class.protozero::ScatteredHeapBuffer::Slice"** %14, align 8
  tail call void @_ZdlPv(i8* %30) #15
  br label %31

31:                                               ; preds = %7, %29
  %32 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 0
  tail call void @_ZN9protozero21ScatteredStreamWriter8DelegateD2Ev(%"class.protozero::ScatteredStreamWriter::Delegate"* %32) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriter8DelegateD2Ev(%"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBufferD0Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9protozero19ScatteredHeapBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #15
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %9, align 8
  %11 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %10 to i8*
  %14 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 1
  %15 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %14, align 8
  %16 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %15, %10
  br i1 %16, label %29, label %17

17:                                               ; preds = %12, %24
  %18 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %19, %24 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %18, i64 -1
  %20 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  store i8* null, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  tail call void @_ZdaPv(i8* nonnull %21) #15
  br label %24

24:                                               ; preds = %23, %17
  %25 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %19, %10
  br i1 %25, label %26, label %17

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %8 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %12
  %30 = phi i8* [ %28, %26 ], [ %13, %12 ]
  store %"class.protozero::ScatteredHeapBuffer::Slice"* %10, %"class.protozero::ScatteredHeapBuffer::Slice"** %14, align 8
  tail call void @_ZdlPv(i8* %30) #15
  br label %31

31:                                               ; preds = %7, %29
  %32 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 0
  tail call void @_ZN9protozero21ScatteredStreamWriter8DelegateD2Ev(%"class.protozero::ScatteredStreamWriter::Delegate"* %32) #16
  %33 = bitcast %"class.protozero::ScatteredHeapBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i8* } @_ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 3
  %3 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %2, align 8
  %4 = icmp eq %"class.protozero::ScatteredStreamWriter"* %3, null
  br i1 %4, label %5, label %10, !prof !2

5:                                                ; preds = %1
  %6 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0))
  %7 = tail call i32* @__errno_location() #17
  %8 = load i32, i32* %7, align 4
  %9 = tail call i8* @strerror(i32 %8) #16
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %6, i32 59, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i32 %8, i8* %9) #16
  tail call void @llvm.trap()
  unreachable

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %11, align 8
  %13 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %13, align 8
  %15 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %12, %14
  br i1 %15, label %25, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %3, i64 0, i32 1, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %3, i64 0, i32 2
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %14, i64 -1, i32 2
  store i64 %23, i64* %24, align 8
  br label %25

25:                                               ; preds = %10, %16
  %26 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 5
  %27 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  %30 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4
  %31 = ptrtoint i8* %28 to i64
  br i1 %29, label %47, label %32

32:                                               ; preds = %25
  %33 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %13, align 8
  %34 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %35 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %34, align 8
  %36 = icmp ult %"class.protozero::ScatteredHeapBuffer::Slice"* %33, %35
  br i1 %36, label %37, label %46

37:                                               ; preds = %32
  store i8* null, i8** %27, align 8
  %38 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %33 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %33, i64 0, i32 1
  %40 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 5, i32 1
  %41 = bitcast i64* %39 to i8*
  %42 = bitcast i64* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false) #16
  %43 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %33, i64 1
  %44 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %43 to i64
  %45 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"** %13 to i64*
  store i64 %44, i64* %45, align 8
  br label %64

46:                                               ; preds = %32
  tail call void @_ZNSt3__16vectorIN9protozero19ScatteredHeapBuffer5SliceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %30, %"class.protozero::ScatteredHeapBuffer::Slice"* dereferenceable(24) %26) #16
  br label %64

47:                                               ; preds = %25
  %48 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 1
  %49 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %13, align 8
  %50 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %51 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %50, align 8
  %52 = icmp ult %"class.protozero::ScatteredHeapBuffer::Slice"* %49, %51
  br i1 %52, label %53, label %63

53:                                               ; preds = %47
  %54 = load i64, i64* %48, align 8
  %55 = tail call i8* @_Znam(i64 %54) #15
  %56 = ptrtoint i8* %55 to i64
  %57 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %49 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %49, i64 0, i32 1
  store i64 %54, i64* %58, align 8
  %59 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %49, i64 0, i32 2
  store i64 %54, i64* %59, align 8
  %60 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %49, i64 1
  %61 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %60 to i64
  %62 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"** %13 to i64*
  store i64 %61, i64* %62, align 8
  br label %64

63:                                               ; preds = %47
  tail call void @_ZNSt3__16vectorIN9protozero19ScatteredHeapBuffer5SliceENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRmEEEvDpOT_(%"class.std::__1::vector"* %30, i64* dereferenceable(8) %48) #16
  br label %64

64:                                               ; preds = %63, %53, %46, %37
  %65 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 2
  %66 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = shl i64 %67, 1
  %69 = load i64, i64* %65, align 8
  %70 = icmp ult i64 %68, %69
  %71 = select i1 %70, i64 %68, i64 %69
  store i64 %71, i64* %66, align 8
  %72 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %13, align 8
  %73 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %72, i64 -1, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %72, i64 -1, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = insertvalue { i8*, i8* } undef, i8* %74, 0
  %79 = insertvalue { i8*, i8* } %78, i8* %77, 1
  ret { i8*, i8* } %79
}

declare void @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN8perfetto4base8BasenameEPKc(i8*) local_unnamed_addr #4 comdat {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i8* [ %0, %1 ], [ %6, %2 ]
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds i8, i8* %3, i64 1
  br i1 %5, label %7, label %2

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7, %15
  %13 = phi i8* [ %16, %15 ], [ %3, %7 ]
  %14 = icmp ugt i8* %13, %0
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8, i8* %13, i64 -1
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 47
  %19 = icmp ult i8* %16, %8
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %12

21:                                               ; preds = %12, %15
  ret i8* %13
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #9

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBuffer28AdjustUsedSizeOfCurrentSliceEv(%"class.protozero::ScatteredHeapBuffer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %2, align 8
  %4 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %4, align 8
  %6 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 3
  %9 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %8, align 8
  %10 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %9, i64 0, i32 1, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %9, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %12, %15
  %17 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %5, i64 -1, i32 2
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN9protozero19ScatteredHeapBuffer9GetSlicesEv(%"class.protozero::ScatteredHeapBuffer"* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %2, align 8
  %4 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %4, align 8
  %6 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 3
  %9 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %8, align 8
  %10 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %9, i64 0, i32 1, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %9, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %12, %15
  %17 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %5, i64 -1, i32 2
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %1, %7
  %19 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4
  ret %"class.std::__1::vector"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBuffer12StitchSlicesEv(%"class.std::__1::vector.4"* noalias sret, %"class.protozero::ScatteredHeapBuffer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %1, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %3, align 8
  %5 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %1, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %5, align 8
  %7 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %4, %6
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %1, i64 0, i32 3
  %10 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %9, align 8
  %11 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %10, i64 0, i32 1, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %10, i64 0, i32 2
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %13, %16
  %18 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %6, i64 -1, i32 2
  store i64 %17, i64* %18, align 8
  %19 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %3, align 8
  %20 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %5, align 8
  %21 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %19, %20
  br i1 %21, label %22, label %54

22:                                               ; preds = %54, %2, %8
  %23 = phi i1 [ true, %8 ], [ true, %2 ], [ %21, %54 ]
  %24 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %19, %8 ], [ %4, %2 ], [ %19, %54 ]
  %25 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %20, %8 ], [ %4, %2 ], [ %20, %54 ]
  %26 = phi i64 [ 0, %8 ], [ 0, %2 ], [ %62, %54 ]
  %27 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::vector.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #16
  %29 = icmp eq i64 %26, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %22
  %31 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %32 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i8** %32 to i64*
  %34 = bitcast i8** %27 to i64*
  %35 = tail call i8* @_Znwm(i64 %26) #15
  %36 = ptrtoint i8* %35 to i64
  %37 = getelementptr inbounds i8, i8* %35, i64 %26
  %38 = ptrtoint i8* %37 to i64
  store i64 %36, i64* %31, align 8
  store i64 %36, i64* %34, align 8
  store i64 %38, i64* %33, align 8
  br label %39

39:                                               ; preds = %30, %22
  %40 = phi i8* [ null, %22 ], [ %35, %30 ]
  br i1 %23, label %65, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %24, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %24, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = tail call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector.4"* %0, i8* %40, i8* %43, i8* %50)
  %52 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %24, i64 1
  %53 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %52, %25
  br i1 %53, label %65, label %66

54:                                               ; preds = %8, %54
  %55 = phi i64 [ %62, %54 ], [ 0, %8 ]
  %56 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %63, %54 ], [ %19, %8 ]
  %57 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %56, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %56, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %58, %55
  %62 = sub i64 %61, %60
  %63 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %56, i64 1
  %64 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %63, %20
  br i1 %64, label %22, label %54

65:                                               ; preds = %66, %41, %39
  ret void

66:                                               ; preds = %41, %66
  %67 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %79, %66 ], [ %52, %41 ]
  %68 = load i8*, i8** %27, align 8
  %69 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %67, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds i8, i8* %70, i64 %72
  %74 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %67, i64 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 0, %75
  %77 = getelementptr inbounds i8, i8* %73, i64 %76
  %78 = tail call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector.4"* %0, i8* %68, i8* %70, i8* %77)
  %79 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %67, i64 1
  %80 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %79, %25
  br i1 %80, label %65, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector.4"*, i8*, i8*, i8*) local_unnamed_addr #4 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #16
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !3
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !3
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !6, !noalias !3
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !6, !noalias !3
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !3
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !3
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !6, !noalias !3
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !6, !noalias !3
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !3
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !3
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !6, !noalias !3
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !6, !noalias !3
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !3
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !3
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !6, !noalias !3
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !6, !noalias !3
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !8

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !3
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !3
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !6, !noalias !3
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !6, !noalias !3
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !10

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #16
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !12

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #16
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #18
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #15
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !13
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !13
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !16, !noalias !13
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !16, !noalias !13
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !13
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !13
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !16, !noalias !13
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !16, !noalias !13
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !13
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !13
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !16, !noalias !13
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !16, !noalias !13
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !13
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !13
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !16, !noalias !13
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !16, !noalias !13
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !18

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !13
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !13
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !16, !noalias !13
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !16, !noalias !13
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !19

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !20

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #16
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !21
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !21
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !24, !noalias !21
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !24, !noalias !21
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !21
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !21
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !24, !noalias !21
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !24, !noalias !21
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !21
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !21
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !24, !noalias !21
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !24, !noalias !21
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !21
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !21
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !24, !noalias !21
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !24, !noalias !21
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !26

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !21
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !21
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !24, !noalias !21
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !24, !noalias !21
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !27

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !28

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #15
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBuffer9GetRangesEv(%"class.std::__1::vector.12"* noalias sret, %"class.protozero::ScatteredHeapBuffer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.12"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #16
  %6 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %1, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %6, align 8
  %8 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %1, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %8, align 8
  %10 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %7, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %1, i64 0, i32 3
  %13 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %12, align 8
  %14 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %13, i64 0, i32 1, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %13, i64 0, i32 2
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %9, i64 -1, i32 2
  store i64 %20, i64* %21, align 8
  %22 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %6, align 8
  %23 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %8, align 8
  %24 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %22, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %11
  %26 = bitcast %"struct.protozero::ContiguousMemoryRange"** %3 to i64*
  %27 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %28 = bitcast %"struct.protozero::ContiguousMemoryRange"** %4 to i64*
  br label %30

29:                                               ; preds = %95, %2, %11
  ret void

30:                                               ; preds = %25, %95
  %31 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %22, %25 ], [ %96, %95 ]
  %32 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %31, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %31, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 0, %38
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  %41 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %3, align 8
  %42 = load %"struct.protozero::ContiguousMemoryRange"*, %"struct.protozero::ContiguousMemoryRange"** %4, align 8
  %43 = icmp ult %"struct.protozero::ContiguousMemoryRange"* %41, %42
  %44 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %42 to i64
  br i1 %43, label %45, label %50

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %41, i64 0, i32 0
  store i8* %33, i8** %46, align 8
  %47 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %41, i64 0, i32 1
  store i8* %40, i8** %47, align 8
  %48 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %41, i64 1
  %49 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %48 to i64
  store i64 %49, i64* %26, align 8
  br label %95

50:                                               ; preds = %30
  %51 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %41 to i64
  %52 = load i64, i64* %27, align 8
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 4
  %55 = add nsw i64 %54, 1
  %56 = icmp ugt i64 %55, 1152921504606846975
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #18
  unreachable

59:                                               ; preds = %50
  %60 = sub i64 %44, %52
  %61 = ashr exact i64 %60, 4
  %62 = icmp ult i64 %61, 576460752303423487
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = ashr exact i64 %60, 3
  %65 = icmp ult i64 %64, %55
  %66 = select i1 %65, i64 %55, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = icmp ugt i64 %66, 1152921504606846975
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @abort() #18
  unreachable

71:                                               ; preds = %68, %59
  %72 = phi i64 [ %66, %68 ], [ 1152921504606846975, %59 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #15
  %75 = bitcast i8* %74 to %"struct.protozero::ContiguousMemoryRange"*
  br label %76

76:                                               ; preds = %71, %63
  %77 = phi i64 [ %72, %71 ], [ 0, %63 ]
  %78 = phi i8* [ %74, %71 ], [ null, %63 ]
  %79 = phi %"struct.protozero::ContiguousMemoryRange"* [ %75, %71 ], [ null, %63 ]
  %80 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %79, i64 %54
  %81 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %79, i64 %77
  %82 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %81 to i64
  %83 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %80, i64 0, i32 0
  store i8* %33, i8** %83, align 8
  %84 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %79, i64 %54, i32 1
  store i8* %40, i8** %84, align 8
  %85 = getelementptr inbounds %"struct.protozero::ContiguousMemoryRange", %"struct.protozero::ContiguousMemoryRange"* %80, i64 1
  %86 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %85 to i64
  %87 = ptrtoint %"struct.protozero::ContiguousMemoryRange"* %79 to i64
  %88 = icmp sgt i64 %53, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %76
  %90 = inttoptr i64 %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %90, i64 %53, i1 false) #16
  br label %91

91:                                               ; preds = %89, %76
  store i64 %87, i64* %27, align 8
  store i64 %86, i64* %26, align 8
  store i64 %82, i64* %28, align 8
  %92 = icmp eq i64 %52, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = inttoptr i64 %52 to i8*
  tail call void @_ZdlPv(i8* %94) #15
  br label %95

95:                                               ; preds = %45, %91, %93
  %96 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %31, i64 1
  %97 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %96, %23
  br i1 %97, label %29, label %30
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN9protozero19ScatteredHeapBuffer12GetTotalSizeEv(%"class.protozero::ScatteredHeapBuffer"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %2, align 8
  %4 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %4, align 8
  %6 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %3, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %9, %1
  %8 = phi i64 [ 0, %1 ], [ %14, %9 ]
  ret i64 %8

9:                                                ; preds = %1, %9
  %10 = phi i64 [ %14, %9 ], [ 0, %1 ]
  %11 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %15, %9 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %11, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %10
  %15 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %11, i64 1
  %16 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %15, %5
  br i1 %16, label %7, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero19ScatteredHeapBuffer5ResetEv(%"class.protozero::ScatteredHeapBuffer"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %2, align 8
  %4 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %4, align 8
  %6 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %3, %5
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  store i8* null, i8** %9, align 8
  %12 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %8 to i64*
  store i64 %11, i64* %14, align 8
  %15 = icmp eq i8* %13, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %7
  tail call void @_ZdaPv(i8* nonnull %13) #15
  br label %17

17:                                               ; preds = %7, %16
  %18 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 5, i32 1
  %19 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %3, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %18, align 8
  %21 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredHeapBuffer"* %0, i64 0, i32 5, i32 2
  store i64 %20, i64* %21, align 8
  %22 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %2, align 8
  %23 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %4, align 8
  %24 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %23, %22
  br i1 %24, label %34, label %25

25:                                               ; preds = %17, %32
  %26 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %27, %32 ], [ %23, %17 ]
  %27 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %26, i64 -1
  %28 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  store i8* null, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %25
  tail call void @_ZdaPv(i8* nonnull %29) #15
  br label %32

32:                                               ; preds = %31, %25
  %33 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %27, %22
  br i1 %33, label %34, label %25

34:                                               ; preds = %32, %17
  store %"class.protozero::ScatteredHeapBuffer::Slice"* %22, %"class.protozero::ScatteredHeapBuffer::Slice"** %4, align 8
  br label %35

35:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN9protozero19ScatteredHeapBuffer5SliceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"class.protozero::ScatteredHeapBuffer::Slice"* dereferenceable(24)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.protozero::ScatteredHeapBuffer::Slice"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %33, i64 %9
  %35 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %33, i64 %32
  %36 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %35 to i64
  %37 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  store i8* null, i8** %37, align 8
  %40 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %33, i64 %9, i32 1
  %42 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %1, i64 0, i32 1
  %43 = bitcast i64* %41 to i8*
  %44 = bitcast i64* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false) #16
  %45 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %34, i64 1
  %46 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %48 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %47, align 8
  %49 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %3, align 8
  %50 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %49, %48
  br i1 %50, label %51, label %53

51:                                               ; preds = %31
  %52 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %48 to i64
  br label %70

53:                                               ; preds = %31, %53
  %54 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %56, %53 ], [ %34, %31 ]
  %55 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %57, %53 ], [ %49, %31 ]
  %56 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %54, i64 -1
  %57 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %55, i64 -1
  %58 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %57 to i64*
  %60 = load i64, i64* %59, align 8
  store i8* null, i8** %58, align 8
  %61 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %56 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %54, i64 -1, i32 1
  %63 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %55, i64 -1, i32 1
  %64 = bitcast i64* %62 to i8*
  %65 = bitcast i64* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false) #16
  %66 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %57, %48
  br i1 %66, label %67, label %53

67:                                               ; preds = %53
  %68 = load i64, i64* %6, align 8
  %69 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %3, align 8
  br label %70

70:                                               ; preds = %51, %67
  %71 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %48, %51 ], [ %69, %67 ]
  %72 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %34, %51 ], [ %56, %67 ]
  %73 = phi i64 [ %52, %51 ], [ %68, %67 ]
  %74 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %72 to i64
  store i64 %74, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %75 = inttoptr i64 %73 to %"class.protozero::ScatteredHeapBuffer::Slice"*
  %76 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %71, %75
  br i1 %76, label %86, label %77

77:                                               ; preds = %70, %84
  %78 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %79, %84 ], [ %71, %70 ]
  %79 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %78, i64 -1
  %80 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  store i8* null, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %77
  tail call void @_ZdaPv(i8* nonnull %81) #15
  br label %84

84:                                               ; preds = %83, %77
  %85 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %79, %75
  br i1 %85, label %86, label %77

86:                                               ; preds = %84, %70
  %87 = icmp eq i64 %73, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %89) #15
  br label %90

90:                                               ; preds = %86, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN9protozero19ScatteredHeapBuffer5SliceENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRmEEEvDpOT_(%"class.std::__1::vector"*, i64* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.protozero::ScatteredHeapBuffer::Slice"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %33, i64 %9
  %35 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %33, i64 %32
  %36 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %35 to i64
  %37 = load i64, i64* %1, align 8
  %38 = tail call i8* @_Znam(i64 %37) #15
  %39 = ptrtoint i8* %38 to i64
  %40 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %33, i64 %9, i32 1
  store i64 %37, i64* %41, align 8
  %42 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %33, i64 %9, i32 2
  store i64 %37, i64* %42, align 8
  %43 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %34, i64 1
  %44 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %45, align 8
  %47 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %3, align 8
  %48 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %46 to i64
  br label %68

51:                                               ; preds = %31, %51
  %52 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %54, %51 ], [ %34, %31 ]
  %53 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %55, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %52, i64 -1
  %55 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %53, i64 -1
  %56 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store i8* null, i8** %56, align 8
  %59 = bitcast %"class.protozero::ScatteredHeapBuffer::Slice"* %54 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %52, i64 -1, i32 1
  %61 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %53, i64 -1, i32 1
  %62 = bitcast i64* %60 to i8*
  %63 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false) #16
  %64 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %55, %46
  br i1 %64, label %65, label %51

65:                                               ; preds = %51
  %66 = load i64, i64* %6, align 8
  %67 = load %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"** %3, align 8
  br label %68

68:                                               ; preds = %49, %65
  %69 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %46, %49 ], [ %67, %65 ]
  %70 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %34, %49 ], [ %54, %65 ]
  %71 = phi i64 [ %50, %49 ], [ %66, %65 ]
  %72 = ptrtoint %"class.protozero::ScatteredHeapBuffer::Slice"* %70 to i64
  store i64 %72, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %73 = inttoptr i64 %71 to %"class.protozero::ScatteredHeapBuffer::Slice"*
  %74 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %69, %73
  br i1 %74, label %84, label %75

75:                                               ; preds = %68, %82
  %76 = phi %"class.protozero::ScatteredHeapBuffer::Slice"* [ %77, %82 ], [ %69, %68 ]
  %77 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %76, i64 -1
  %78 = getelementptr inbounds %"class.protozero::ScatteredHeapBuffer::Slice", %"class.protozero::ScatteredHeapBuffer::Slice"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  store i8* null, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %75
  tail call void @_ZdaPv(i8* nonnull %79) #15
  br label %82

82:                                               ; preds = %81, %75
  %83 = icmp eq %"class.protozero::ScatteredHeapBuffer::Slice"* %77, %73
  br i1 %83, label %84, label %75

84:                                               ; preds = %82, %68
  %85 = icmp eq i64 %71, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = inttoptr i64 %71 to i8*
  tail call void @_ZdlPv(i8* %87) #15
  br label %88

88:                                               ; preds = %84, %86
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }
attributes #17 = { nounwind readnone }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
