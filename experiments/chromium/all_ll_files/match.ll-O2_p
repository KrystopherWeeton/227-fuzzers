; ModuleID = '../../third_party/unrar/src/match.cpp'
source_filename = "../../third_party/unrar/src/match.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

@.str = private unnamed_addr constant [3 x i32] [i32 42, i32 63, i32 0], align 4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z7CmpNamePKwS0_i(i32*, i32*, i32) local_unnamed_addr #0 {
  %4 = alloca [2048 x i32], align 16
  %5 = alloca [2048 x i32], align 16
  %6 = icmp slt i32 %2, 0
  %7 = and i32 %2, 65535
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %68, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @wcslen(i32* %0) #5
  %11 = add nsw i32 %7, -2
  %12 = icmp ult i32 %11, 3
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = tail call i32 @wcsncmp(i32* %0, i32* %1, i64 %10) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = getelementptr inbounds i32, i32* %1, i64 %10
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %19 [
    i32 92, label %82
    i32 47, label %82
    i32 0, label %82
  ]

19:                                               ; preds = %16, %13
  %20 = icmp eq i32 %7, 1
  br i1 %20, label %82, label %21

21:                                               ; preds = %9, %19
  %22 = bitcast [2048 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %22) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 8192, i1 false)
  %23 = bitcast [2048 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %23) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 8192, i1 false)
  %24 = getelementptr inbounds [2048 x i32], [2048 x i32]* %4, i64 0, i64 0
  call void @_Z11GetFilePathPKwPwm(i32* %0, i32* nonnull %24, i64 2048) #6
  %25 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 0
  call void @_Z11GetFilePathPKwPwm(i32* %1, i32* nonnull %25, i64 2048) #6
  %26 = trunc i32 %2 to i16
  switch i16 %26, label %39 [
    i16 4, label %27
    i16 2, label %27
    i16 3, label %37
  ]

27:                                               ; preds = %21, %21
  br i1 %6, label %28, label %30

28:                                               ; preds = %27
  %29 = call i32 @wcscmp(i32* nonnull %24, i32* nonnull %25) #5
  br label %32

30:                                               ; preds = %27
  %31 = call i32 @_Z9wcsicompcPKwS0_(i32* nonnull %24, i32* nonnull %25) #6
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %65

35:                                               ; preds = %32
  %36 = icmp eq i32 %7, 3
  br i1 %36, label %37, label %67

37:                                               ; preds = %21, %35
  %38 = call fastcc zeroext i1 @_ZL5matchPKwS0_b(i32* %0, i32* %1, i1 zeroext %6)
  br label %65

39:                                               ; preds = %21
  %40 = icmp eq i32 %7, 5
  %41 = add nsw i32 %7, -5
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %43, label %67

43:                                               ; preds = %39
  %44 = call zeroext i1 @_Z10IsWildcardPKw(i32* nonnull %24) #6
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = call fastcc zeroext i1 @_ZL5matchPKwS0_b(i32* %0, i32* %1, i1 zeroext %6)
  br label %65

47:                                               ; preds = %43
  br i1 %40, label %50, label %48

48:                                               ; preds = %47
  %49 = call zeroext i1 @_Z10IsWildcardPKw(i32* %0) #6
  br i1 %49, label %50, label %57

50:                                               ; preds = %48, %47
  %51 = load i32, i32* %24, align 16
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %67, label %53

53:                                               ; preds = %50
  %54 = call i64 @wcslen(i32* nonnull %24) #5
  %55 = call i32 @wcsncmp(i32* nonnull %24, i32* nonnull %25, i64 %54) #5
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %67, label %65

57:                                               ; preds = %48
  br i1 %6, label %58, label %60

58:                                               ; preds = %57
  %59 = call i32 @wcscmp(i32* nonnull %24, i32* nonnull %25) #5
  br label %62

60:                                               ; preds = %57
  %61 = call i32 @_Z9wcsicompcPKwS0_(i32* nonnull %24, i32* nonnull %25) #6
  br label %62

62:                                               ; preds = %58, %60
  %63 = phi i32 [ %59, %58 ], [ %61, %60 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %37, %45, %32, %53, %62
  %66 = phi i1 [ false, %62 ], [ false, %53 ], [ false, %32 ], [ %46, %45 ], [ %38, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %23) #6
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %22) #6
  br label %82

67:                                               ; preds = %35, %39, %62, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %23) #6
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %22) #6
  br label %68

68:                                               ; preds = %67, %3
  %69 = call i32* @_Z11PointToNamePKw(i32* %0) #6
  %70 = call i32* @_Z11PointToNamePKw(i32* %1) #6
  %71 = icmp eq i32 %7, 2
  br i1 %71, label %72, label %80

72:                                               ; preds = %68
  br i1 %6, label %73, label %75

73:                                               ; preds = %72
  %74 = call i32 @wcscmp(i32* %69, i32* %70) #5
  br label %77

75:                                               ; preds = %72
  %76 = call i32 @_Z9wcsicompcPKwS0_(i32* %69, i32* %70) #6
  br label %77

77:                                               ; preds = %73, %75
  %78 = phi i32 [ %74, %73 ], [ %76, %75 ]
  %79 = icmp eq i32 %78, 0
  br label %82

80:                                               ; preds = %68
  %81 = call fastcc zeroext i1 @_ZL5matchPKwS0_b(i32* %69, i32* %70, i1 zeroext %6)
  br label %82

82:                                               ; preds = %16, %16, %16, %19, %65, %77, %80
  %83 = phi i1 [ %79, %77 ], [ %81, %80 ], [ %66, %65 ], [ true, %16 ], [ true, %16 ], [ true, %16 ], [ false, %19 ]
  ret i1 %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_Z11GetFilePathPKwPwm(i32*, i32*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL5matchPKwS0_b(i32*, i32*, i1 zeroext) unnamed_addr #0 {
  br label %4

4:                                                ; preds = %3, %70
  %5 = phi i32* [ %0, %3 ], [ %10, %70 ]
  %6 = phi i32* [ %1, %3 ], [ %71, %70 ]
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %69, %4
  %9 = phi i32* [ %5, %4 ], [ %10, %69 ]
  %10 = getelementptr inbounds i32, i32* %9, i64 1
  %11 = load i32, i32* %9, align 4
  switch i32 %11, label %64 [
    i32 0, label %12
    i32 63, label %14
    i32 42, label %16
  ]

12:                                               ; preds = %8
  %13 = icmp eq i32 %7, 0
  br label %72

14:                                               ; preds = %8
  %15 = icmp eq i32 %7, 0
  br i1 %15, label %72, label %70

16:                                               ; preds = %8
  %17 = load i32, i32* %10, align 4
  switch i32 %17, label %18 [
    i32 0, label %72
    i32 46, label %20
  ]

18:                                               ; preds = %28, %45, %41, %40, %16
  %19 = phi i32* [ %42, %45 ], [ %42, %41 ], [ %6, %40 ], [ %6, %28 ], [ %6, %16 ]
  br label %57

20:                                               ; preds = %16
  %21 = getelementptr inbounds i32, i32* %9, i64 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 42
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds i32, i32* %9, i64 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %72, label %28

28:                                               ; preds = %24
  %29 = tail call i32* @wcschr(i32* %6, i32 signext 46) #5
  %30 = icmp eq i32* %29, null
  br i1 %30, label %18, label %41

31:                                               ; preds = %20
  %32 = tail call i32* @wcschr(i32* %6, i32 signext 46) #5
  %33 = icmp eq i32 %22, 0
  %34 = icmp eq i32* %32, null
  br i1 %33, label %35, label %40

35:                                               ; preds = %31
  br i1 %34, label %72, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds i32, i32* %32, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br label %72

40:                                               ; preds = %31
  br i1 %34, label %18, label %41

41:                                               ; preds = %28, %40
  %42 = phi i32* [ %29, %28 ], [ %32, %40 ]
  %43 = tail call i32* @wcspbrk(i32* %10, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str, i64 0, i64 0)) #5
  %44 = icmp eq i32* %43, null
  br i1 %44, label %45, label %18

45:                                               ; preds = %41
  %46 = getelementptr inbounds i32, i32* %42, i64 1
  %47 = tail call i32* @wcschr(i32* %46, i32 signext 46) #5
  %48 = icmp eq i32* %47, null
  br i1 %48, label %49, label %18

49:                                               ; preds = %45
  br i1 %2, label %50, label %52

50:                                               ; preds = %49
  %51 = tail call i32 @wcscmp(i32* %21, i32* %46) #5
  br label %54

52:                                               ; preds = %49
  %53 = tail call i32 @_Z9wcsicompcPKwS0_(i32* %21, i32* %46) #6
  br label %54

54:                                               ; preds = %50, %52
  %55 = phi i32 [ %51, %50 ], [ %53, %52 ]
  %56 = icmp eq i32 %55, 0
  br label %72

57:                                               ; preds = %18, %61
  %58 = phi i32* [ %62, %61 ], [ %19, %18 ]
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds i32, i32* %58, i64 1
  %63 = tail call fastcc zeroext i1 @_ZL5matchPKwS0_b(i32* %10, i32* %58, i1 zeroext %2)
  br i1 %63, label %72, label %57

64:                                               ; preds = %8
  %65 = icmp eq i32 %11, %7
  br i1 %65, label %70, label %66

66:                                               ; preds = %64
  %67 = icmp eq i32 %11, 46
  br i1 %67, label %68, label %72

68:                                               ; preds = %66
  switch i32 %7, label %72 [
    i32 92, label %69
    i32 46, label %69
    i32 0, label %69
  ]

69:                                               ; preds = %68, %68, %68
  br label %8

70:                                               ; preds = %64, %14
  %71 = getelementptr inbounds i32, i32* %6, i64 1
  br label %4

72:                                               ; preds = %68, %66, %14, %61, %57, %12, %16, %24, %54, %36, %35
  %73 = phi i1 [ %39, %36 ], [ true, %35 ], [ %56, %54 ], [ true, %24 ], [ true, %16 ], [ %13, %12 ], [ true, %61 ], [ false, %57 ], [ false, %14 ], [ false, %66 ], [ false, %68 ]
  ret i1 %73
}

declare zeroext i1 @_Z10IsWildcardPKw(i32*) local_unnamed_addr #3

declare i32* @_Z11PointToNamePKw(i32*) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32* @wcschr(i32*, i32 signext) local_unnamed_addr #4

; Function Attrs: nounwind readonly
declare i32* @wcspbrk(i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind readonly
declare i32 @wcscmp(i32*, i32*) local_unnamed_addr #4

declare i32 @_Z9wcsicompcPKwS0_(i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @wcsncmp(i32*, i32*, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
