; ModuleID = '../../extensions/common/extensions_client.cc'
source_filename = "../../extensions/common/extensions_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ExtensionsClient" = type <{ i32 (...)**, %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.extensions::ExtensionsAPIProvider"* }
%"class.extensions::ExtensionsAPIProvider" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.extensions::PermissionsInfo" = type { i32 (...)**, %"class.std::__1::unordered_map", %"class.std::__1::map.163", i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.144", %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.159", [4 x i8] }>
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146", %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { float }
%"class.std::__1::map.163" = type { %"class.std::__1::__tree.164" }
%"class.std::__1::__tree.164" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.165", %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.178", [4 x i8] }>
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i32 }
%"class.extensions::FeatureProvider" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.extensions::JSONFeatureProviderSource" = type { %"class.std::__1::basic_string", %"class.base::DictionaryValue" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.26" }
%"union.absl::variant_internal::DestructibleUnionImpl.26" = type { %"union.absl::variant_internal::DestructibleUnionImpl.27" }
%"union.absl::variant_internal::DestructibleUnionImpl.27" = type { %"union.absl::variant_internal::DestructibleUnionImpl.28" }
%"union.absl::variant_internal::DestructibleUnionImpl.28" = type { %"union.absl::variant_internal::DestructibleUnionImpl.29" }
%"union.absl::variant_internal::DestructibleUnionImpl.29" = type { %"class.std::__1::basic_string" }
%"class.std::__1::set.121" = type { %"class.std::__1::__tree.122" }
%"class.std::__1::__tree.122" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::vector.80", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.100", %"class.std::__1::map.112", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.59" }
%"class.std::__1::__tree.59" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.60", %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.82" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.87" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.93" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { i32*, i32*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i32* }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.103", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.base::DictionaryValue"* }
%"class.std::__1::map.112" = type { %"class.std::__1::__tree.113" }
%"class.std::__1::__tree.113" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%class.ExtensionIconSet = type { %"class.std::__1::map.131" }
%"class.std::__1::map.131" = type { %"class.std::__1::__tree.132" }
%"class.std::__1::__tree.132" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.133", %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::vector.142" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN10extensions21ExtensionsAPIProviderENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZN10extensions12_GLOBAL__N_18g_clientE = internal unnamed_addr global %"class.extensions::ExtensionsClient"* null, align 8
@_ZTVN10extensions16ExtensionsClientE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ExtensionsClient"*)* @_ZN10extensions16ExtensionsClientD2Ev to i8*), i8* bitcast (void (%"class.extensions::ExtensionsClient"*)* @_ZN10extensions16ExtensionsClientD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.std::__1::set.121"*, %"class.extensions::ExtensionsClient"*, %"class.extensions::Extension"*)* @_ZN10extensions16ExtensionsClient20GetBrowserImagePathsEPKNS_9ExtensionE to i8*), i8* bitcast (void (%"class.extensions::ExtensionsClient"*, %"class.extensions::Extension"*, i1, %"class.std::__1::vector.142"*)* @_ZNK10extensions16ExtensionsClient26AddOriginAccessPermissionsERKNS_9ExtensionEbPNSt3__16vectorIN4mojo9StructPtrIN7network5mojom17CorsOriginPatternEEENS4_9allocatorISB_EEEE to i8*), i8* bitcast (i64 (%"class.extensions::ExtensionsClient"*)* @_ZNK10extensions16ExtensionsClient29GetExtensionExtendedErrorCodeEv to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"api\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"manifest\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"permission\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"behavior\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"Extensions.ChromeExtensionsClientInitTime2\00", align 1
@_ZZN10extensions16ExtensionsClient12DoInitializeEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN10extensions16ExtensionsClientD1Ev = hidden unnamed_addr alias void (%"class.extensions::ExtensionsClient"*), void (%"class.extensions::ExtensionsClient"*)* @_ZN10extensions16ExtensionsClientD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.extensions::ExtensionsClient"*, %"class.extensions::ExtensionsClient"** @_ZN10extensions12_GLOBAL__N_18g_clientE, align 8
  ret %"class.extensions::ExtensionsClient"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16ExtensionsClient3SetEPS0_(%"class.extensions::ExtensionsClient"*) local_unnamed_addr #1 align 2 {
  %2 = load %"class.extensions::ExtensionsClient"*, %"class.extensions::ExtensionsClient"** @_ZN10extensions12_GLOBAL__N_18g_clientE, align 8
  %3 = icmp eq %"class.extensions::ExtensionsClient"* %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  store %"class.extensions::ExtensionsClient"* %0, %"class.extensions::ExtensionsClient"** @_ZN10extensions12_GLOBAL__N_18g_clientE, align 8
  tail call void @_ZN10extensions16ExtensionsClient12DoInitializeEv(%"class.extensions::ExtensionsClient"* %0)
  br label %5

5:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16ExtensionsClient12DoInitializeEv(%"class.extensions::ExtensionsClient"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::ElapsedTimer", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 2
  store i8 1, i8* %4, align 8
  %5 = tail call %"class.extensions::PermissionsInfo"* @_ZN10extensions15PermissionsInfo11GetInstanceEv() #12
  %6 = bitcast %"class.base::ElapsedTimer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %2, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %7, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %2) #12
  %8 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr"* %9, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %21, %1
  call void @_ZN10extensions15ManifestHandler20FinalizeRegistrationEv() #12
  %14 = bitcast %"class.extensions::ExtensionsClient"* %0 to void (%"class.extensions::ExtensionsClient"*)***
  %15 = load void (%"class.extensions::ExtensionsClient"*)**, void (%"class.extensions::ExtensionsClient"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.extensions::ExtensionsClient"*)*, void (%"class.extensions::ExtensionsClient"*)** %15, i64 2
  %17 = load void (%"class.extensions::ExtensionsClient"*)*, void (%"class.extensions::ExtensionsClient"*)** %16, align 8
  call void %17(%"class.extensions::ExtensionsClient"* %0) #12
  %18 = load atomic i64, i64* @_ZZN10extensions16ExtensionsClient12DoInitializeEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %19 = inttoptr i64 %18 to %"class.base::HistogramBase"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %36, label %39

21:                                               ; preds = %1, %21
  %22 = phi %"class.std::__1::unique_ptr"* [ %34, %21 ], [ %9, %1 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::ExtensionsAPIProvider"** %23, align 8
  %25 = bitcast %"class.extensions::ExtensionsAPIProvider"* %24 to void (%"class.extensions::ExtensionsAPIProvider"*)***
  %26 = load void (%"class.extensions::ExtensionsAPIProvider"*)**, void (%"class.extensions::ExtensionsAPIProvider"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.extensions::ExtensionsAPIProvider"*)*, void (%"class.extensions::ExtensionsAPIProvider"*)** %26, i64 10
  %28 = load void (%"class.extensions::ExtensionsAPIProvider"*)*, void (%"class.extensions::ExtensionsAPIProvider"*)** %27, align 8
  call void %28(%"class.extensions::ExtensionsAPIProvider"* %24) #12
  %29 = load %"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::ExtensionsAPIProvider"** %23, align 8
  %30 = bitcast %"class.extensions::ExtensionsAPIProvider"* %29 to void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::PermissionsInfo"*)***
  %31 = load void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::PermissionsInfo"*)**, void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::PermissionsInfo"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::PermissionsInfo"*)*, void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::PermissionsInfo"*)** %31, i64 9
  %33 = load void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::PermissionsInfo"*)*, void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::PermissionsInfo"*)** %32, align 8
  call void %33(%"class.extensions::ExtensionsAPIProvider"* %29, %"class.extensions::PermissionsInfo"* %5) #12
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 1
  %35 = icmp eq %"class.std::__1::unique_ptr"* %34, %11
  br i1 %35, label %13, label %21

36:                                               ; preds = %13
  %37 = call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i64 1, i64 10000000, i32 50, i32 1) #12
  %38 = ptrtoint %"class.base::HistogramBase"* %37 to i64
  store atomic i64 %38, i64* @_ZZN10extensions16ExtensionsClient12DoInitializeEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %39

39:                                               ; preds = %13, %36
  %40 = phi %"class.base::HistogramBase"* [ %19, %13 ], [ %37, %36 ]
  %41 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  %42 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %2) #12
  %43 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %42, i64* %43, align 8
  call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %40, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16ExtensionsClientC2Ev(%"class.extensions::ExtensionsClient"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN10extensions16ExtensionsClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16ExtensionsClientD2Ev(%"class.extensions::ExtensionsClient"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN10extensions16ExtensionsClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::ExtensionsAPIProvider"** %15, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %15, align 8
  %17 = icmp eq %"class.extensions::ExtensionsAPIProvider"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.extensions::ExtensionsAPIProvider"* %16 to void (%"class.extensions::ExtensionsAPIProvider"*)***
  %20 = load void (%"class.extensions::ExtensionsAPIProvider"*)**, void (%"class.extensions::ExtensionsAPIProvider"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.extensions::ExtensionsAPIProvider"*)*, void (%"class.extensions::ExtensionsAPIProvider"*)** %20, i64 1
  %22 = load void (%"class.extensions::ExtensionsAPIProvider"*)*, void (%"class.extensions::ExtensionsAPIProvider"*)** %21, align 8
  tail call void %22(%"class.extensions::ExtensionsAPIProvider"* nonnull %16) #12
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10extensions16ExtensionsClientD0Ev(%"class.extensions::ExtensionsClient"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::FeatureProvider"* @_ZNK10extensions16ExtensionsClient21CreateFeatureProviderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionsClient"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #13
  %4 = bitcast i8* %3 to %"class.extensions::FeatureProvider"*
  tail call void @_ZN10extensions15FeatureProviderC1Ev(%"class.extensions::FeatureProvider"* nonnull %4) #12
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, 3
  br i1 %13, label %14, label %21

14:                                               ; preds = %2
  %15 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %60, label %17

17:                                               ; preds = %14
  %18 = load i8, i8* %6, align 1
  %19 = load i64, i64* %9, align 8
  %20 = zext i8 %18 to i64
  br label %21

21:                                               ; preds = %17, %2
  %22 = phi i64 [ %20, %17 ], [ %11, %2 ]
  %23 = phi i64 [ %19, %17 ], [ %10, %2 ]
  %24 = phi i8 [ %18, %17 ], [ %7, %2 ]
  %25 = icmp slt i8 %24, 0
  %26 = select i1 %25, i64 %23, i64 %22
  %27 = icmp eq i64 %26, 8
  br i1 %27, label %28, label %35

28:                                               ; preds = %21
  %29 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8) #12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %60, label %31

31:                                               ; preds = %28
  %32 = load i8, i8* %6, align 1
  %33 = load i64, i64* %9, align 8
  %34 = zext i8 %32 to i64
  br label %35

35:                                               ; preds = %31, %21
  %36 = phi i64 [ %34, %31 ], [ %22, %21 ]
  %37 = phi i64 [ %33, %31 ], [ %23, %21 ]
  %38 = phi i8 [ %32, %31 ], [ %24, %21 ]
  %39 = icmp slt i8 %38, 0
  %40 = select i1 %39, i64 %37, i64 %36
  %41 = icmp eq i64 %40, 10
  br i1 %41, label %42, label %49

42:                                               ; preds = %35
  %43 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i64 10) #12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %42
  %46 = load i8, i8* %6, align 1
  %47 = load i64, i64* %9, align 8
  %48 = zext i8 %46 to i64
  br label %49

49:                                               ; preds = %45, %35
  %50 = phi i64 [ %48, %45 ], [ %36, %35 ]
  %51 = phi i64 [ %47, %45 ], [ %37, %35 ]
  %52 = phi i8 [ %46, %45 ], [ %38, %35 ]
  %53 = icmp slt i8 %52, 0
  %54 = select i1 %53, i64 %51, i64 %50
  %55 = icmp eq i64 %54, 8
  br i1 %55, label %56, label %60

56:                                               ; preds = %49
  %57 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 8) #12
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, i64 41, i64 0
  br label %60

60:                                               ; preds = %56, %49, %42, %28, %14
  %61 = phi i64 [ 17, %14 ], [ 25, %28 ], [ 33, %42 ], [ 0, %49 ], [ %59, %56 ]
  %62 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %62, align 8
  %64 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 1
  %65 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %64, align 8
  %66 = icmp eq %"class.std::__1::unique_ptr"* %63, %65
  br i1 %66, label %72, label %67

67:                                               ; preds = %60
  %68 = and i64 %61, 1
  %69 = icmp eq i64 %68, 0
  %70 = add nsw i64 %61, -1
  %71 = inttoptr i64 %61 to void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::FeatureProvider"*)*
  br label %73

72:                                               ; preds = %83, %60
  ret %"class.extensions::FeatureProvider"* %4

73:                                               ; preds = %67, %83
  %74 = phi %"class.std::__1::unique_ptr"* [ %63, %67 ], [ %85, %83 ]
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::ExtensionsAPIProvider"** %75, align 8
  br i1 %69, label %83, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.extensions::ExtensionsAPIProvider"* %76 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr i8, i8* %79, i64 %70
  %81 = bitcast i8* %80 to void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::FeatureProvider"*)**
  %82 = load void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::FeatureProvider"*)*, void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::FeatureProvider"*)** %81, align 8
  br label %83

83:                                               ; preds = %73, %77
  %84 = phi void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::FeatureProvider"*)* [ %82, %77 ], [ %71, %73 ]
  tail call void %84(%"class.extensions::ExtensionsAPIProvider"* %76, %"class.extensions::FeatureProvider"* nonnull %4) #12
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 1
  %86 = icmp eq %"class.std::__1::unique_ptr"* %85, %65
  br i1 %86, label %72, label %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::JSONFeatureProviderSource"* @_ZNK10extensions16ExtensionsClient22CreateAPIFeatureSourceEv(%"class.extensions::ExtensionsClient"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call i8* @_Znwm(i64 56) #13
  %4 = bitcast i8* %3 to %"class.extensions::JSONFeatureProviderSource"*
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 3, i8* %7, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #12
  %8 = getelementptr inbounds i8, i8* %5, i64 3
  store i8 0, i8* %8, align 1
  call void @_ZN10extensions25JSONFeatureProviderSourceC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::JSONFeatureProviderSource"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #12
  %9 = load i8, i8* %7, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  %15 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %17 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr"* %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %21, %14
  ret %"class.extensions::JSONFeatureProviderSource"* %4

21:                                               ; preds = %14, %21
  %22 = phi %"class.std::__1::unique_ptr"* [ %29, %21 ], [ %16, %14 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::ExtensionsAPIProvider"** %23, align 8
  %25 = bitcast %"class.extensions::ExtensionsAPIProvider"* %24 to void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::JSONFeatureProviderSource"*)***
  %26 = load void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::JSONFeatureProviderSource"*)**, void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::JSONFeatureProviderSource"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::JSONFeatureProviderSource"*)*, void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::JSONFeatureProviderSource"*)** %26, i64 6
  %28 = load void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::JSONFeatureProviderSource"*)*, void (%"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::JSONFeatureProviderSource"*)** %27, align 8
  call void %28(%"class.extensions::ExtensionsAPIProvider"* %24, %"class.extensions::JSONFeatureProviderSource"* nonnull %4) #12
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 1
  %30 = icmp eq %"class.std::__1::unique_ptr"* %29, %18
  br i1 %30, label %20, label %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions16ExtensionsClient20IsAPISchemaGeneratedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionsClient"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %4, %6
  br i1 %7, label %20, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"class.std::__1::unique_ptr"* %19, %6
  br i1 %9, label %20, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"class.std::__1::unique_ptr"* [ %19, %8 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::ExtensionsAPIProvider"** %12, align 8
  %14 = bitcast %"class.extensions::ExtensionsAPIProvider"* %13 to i1 (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)***
  %15 = load i1 (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)**, i1 (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)*, i1 (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)** %15, i64 7
  %17 = load i1 (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)*, i1 (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.extensions::ExtensionsAPIProvider"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 1
  br i1 %18, label %20, label %8

20:                                               ; preds = %8, %10, %2
  %21 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %8 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZNK10extensions16ExtensionsClient12GetAPISchemaERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionsClient"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %4, %6
  br i1 %7, label %24, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"class.std::__1::unique_ptr"* %21, %6
  br i1 %9, label %24, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"class.std::__1::unique_ptr"* [ %21, %8 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::ExtensionsAPIProvider"** %12, align 8
  %14 = bitcast %"class.extensions::ExtensionsAPIProvider"* %13 to { i8*, i64 } (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)***
  %15 = load { i8*, i64 } (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)**, { i8*, i64 } (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)*** %14, align 8
  %16 = getelementptr inbounds { i8*, i64 } (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)*, { i8*, i64 } (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)** %15, i64 8
  %17 = load { i8*, i64 } (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)*, { i8*, i64 } (%"class.extensions::ExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)** %16, align 8
  %18 = tail call { i8*, i64 } %17(%"class.extensions::ExtensionsAPIProvider"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  %19 = extractvalue { i8*, i64 } %18, 1
  %20 = icmp eq i64 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 1
  br i1 %20, label %8, label %22

22:                                               ; preds = %10
  %23 = extractvalue { i8*, i64 } %18, 0
  br label %24

24:                                               ; preds = %8, %22, %2
  %25 = phi i8* [ %23, %22 ], [ null, %2 ], [ null, %8 ]
  %26 = phi i64 [ %19, %22 ], [ 0, %2 ], [ 0, %8 ]
  %27 = insertvalue { i8*, i64 } undef, i8* %25, 0
  %28 = insertvalue { i8*, i64 } %27, i64 %26, 1
  ret { i8*, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16ExtensionsClient14AddAPIProviderENSt3__110unique_ptrINS_21ExtensionsAPIProviderENS1_14default_deleteIS3_EEEE(%"class.extensions::ExtensionsClient"*, %"class.extensions::ExtensionsAPIProvider"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.extensions::ExtensionsAPIProvider"* %1, %"class.extensions::ExtensionsAPIProvider"** %4, align 8
  %5 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp ult %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = ptrtoint %"class.extensions::ExtensionsAPIProvider"* %1 to i64
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 1
  %14 = ptrtoint %"class.std::__1::unique_ptr"* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.extensions::ExtensionsClient", %"class.extensions::ExtensionsClient"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions21ExtensionsAPIProviderENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %17, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #12
  br label %18

18:                                               ; preds = %10, %16
  %19 = load %"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::ExtensionsAPIProvider"** %4, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %4, align 8
  %20 = icmp eq %"class.extensions::ExtensionsAPIProvider"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.extensions::ExtensionsAPIProvider"* %19 to void (%"class.extensions::ExtensionsAPIProvider"*)***
  %23 = load void (%"class.extensions::ExtensionsAPIProvider"*)**, void (%"class.extensions::ExtensionsAPIProvider"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.extensions::ExtensionsAPIProvider"*)*, void (%"class.extensions::ExtensionsAPIProvider"*)** %23, i64 1
  %25 = load void (%"class.extensions::ExtensionsAPIProvider"*)*, void (%"class.extensions::ExtensionsAPIProvider"*)** %24, align 8
  call void %25(%"class.extensions::ExtensionsAPIProvider"* nonnull %19) #12
  br label %26

26:                                               ; preds = %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16ExtensionsClient20GetBrowserImagePathsEPKNS_9ExtensionE(%"class.std::__1::set.121"* noalias sret, %"class.extensions::ExtensionsClient"* nocapture readnone, %"class.extensions::Extension"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set.121", %"class.std::__1::set.121"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::set.121", %"class.std::__1::set.121"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::set.121", %"class.std::__1::set.121"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %4, align 8
  %8 = tail call dereferenceable(24) %class.ExtensionIconSet* @_ZN10extensions9IconsInfo8GetIconsEPKNS_9ExtensionE(%"class.extensions::Extension"* %2) #12
  tail call void @_ZNK16ExtensionIconSet8GetPathsEPNSt3__13setIN4base8FilePathENS0_4lessIS3_EENS0_9allocatorIS3_EEEE(%class.ExtensionIconSet* %8, %"class.std::__1::set.121"* %0) #12
  ret void
}

declare dereferenceable(24) %class.ExtensionIconSet* @_ZN10extensions9IconsInfo8GetIconsEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #5

declare void @_ZNK16ExtensionIconSet8GetPathsEPNSt3__13setIN4base8FilePathENS0_4lessIS3_EENS0_9allocatorIS3_EEEE(%class.ExtensionIconSet*, %"class.std::__1::set.121"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK10extensions16ExtensionsClient26AddOriginAccessPermissionsERKNS_9ExtensionEbPNSt3__16vectorIN4mojo9StructPtrIN7network5mojom17CorsOriginPatternEEENS4_9allocatorISB_EEEE(%"class.extensions::ExtensionsClient"* nocapture, %"class.extensions::Extension"* nocapture dereferenceable(472), i1 zeroext, %"class.std::__1::vector.142"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK10extensions16ExtensionsClient29GetExtensionExtendedErrorCodeEv(%"class.extensions::ExtensionsClient"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i64 0
}

declare %"class.extensions::PermissionsInfo"* @_ZN10extensions15PermissionsInfo11GetInstanceEv() local_unnamed_addr #5

declare void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"*) unnamed_addr #5

declare void @_ZN10extensions15ManifestHandler20FinalizeRegistrationEv() local_unnamed_addr #5

declare %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #5

declare void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #5

declare i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"*) local_unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN10extensions15FeatureProviderC1Ev(%"class.extensions::FeatureProvider"*) unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #5

declare void @_ZN10extensions25JSONFeatureProviderSourceC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::JSONFeatureProviderSource"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions21ExtensionsAPIProviderENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.extensions::ExtensionsAPIProvider"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.extensions::ExtensionsAPIProvider"*, %"class.extensions::ExtensionsAPIProvider"** %142, align 8
  store %"class.extensions::ExtensionsAPIProvider"* null, %"class.extensions::ExtensionsAPIProvider"** %142, align 8
  %144 = icmp eq %"class.extensions::ExtensionsAPIProvider"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.extensions::ExtensionsAPIProvider"* %143 to void (%"class.extensions::ExtensionsAPIProvider"*)***
  %147 = load void (%"class.extensions::ExtensionsAPIProvider"*)**, void (%"class.extensions::ExtensionsAPIProvider"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.extensions::ExtensionsAPIProvider"*)*, void (%"class.extensions::ExtensionsAPIProvider"*)** %147, i64 1
  %149 = load void (%"class.extensions::ExtensionsAPIProvider"*)*, void (%"class.extensions::ExtensionsAPIProvider"*)** %148, align 8
  tail call void %149(%"class.extensions::ExtensionsAPIProvider"* nonnull %143) #12
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
