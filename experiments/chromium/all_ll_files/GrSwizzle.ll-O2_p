; ModuleID = '../../third_party/skia/src/gpu/GrSwizzle.cpp'
source_filename = "../../third_party/skia/src/gpu/GrSwizzle.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrSwizzle = type { i16 }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9GrSwizzle5applyEP16SkRasterPipeline(%class.GrSwizzle* nocapture readonly, %class.SkRasterPipeline*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %5 = load i16, i16* %4, align 2
  switch i16 %5, label %9 [
    i16 12816, label %18
    i16 12306, label %6
    i16 21299, label %7
    i16 21008, label %8
  ]

6:                                                ; preds = %2
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %1, i32 14, i8* null) #5
  br label %18

7:                                                ; preds = %2
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %1, i32 77, i8* null) #5
  br label %18

8:                                                ; preds = %2
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %1, i32 10, i8* null) #5
  br label %18

9:                                                ; preds = %2
  %10 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  call void @_ZNK9GrSwizzle8asStringEv(%class.SkString* nonnull sret %3, %class.GrSwizzle* %0)
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  %12 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %12, i64 0, i32 2
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 1
  %16 = zext i32 %15 to i64
  %17 = or i64 %16, -6148914694099828736
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEm(%class.SkRasterPipeline* %1, i32 186, i64 %17) #5
  br label %18

18:                                               ; preds = %2, %9, %8, %7, %6
  ret void
}

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9GrSwizzle8asStringEv(%class.SkString* noalias sret, %class.GrSwizzle* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [5 x i8], align 1
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %4) #5
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 1
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 2
  %7 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 3
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 4
  %9 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 5, i1 false)
  %10 = load i16, i16* %9, align 2
  %11 = and i16 %10, 15
  %12 = icmp ult i16 %11, 6
  br i1 %12, label %14, label %13

13:                                               ; preds = %30, %14, %22, %2
  tail call void @llvm.trap() #5
  unreachable

14:                                               ; preds = %2
  %15 = shl nuw nsw i16 %11, 3
  %16 = zext i16 %15 to i48
  %17 = lshr i48 54083862030194, %16
  %18 = trunc i48 %17 to i8
  store i8 %18, i8* %4, align 1
  %19 = lshr i16 %10, 4
  %20 = and i16 %19, 15
  %21 = icmp ult i16 %20, 6
  br i1 %21, label %22, label %13

22:                                               ; preds = %14
  %23 = shl nuw nsw i16 %20, 3
  %24 = zext i16 %23 to i48
  %25 = lshr i48 54083862030194, %24
  %26 = trunc i48 %25 to i8
  store i8 %26, i8* %5, align 1
  %27 = lshr i16 %10, 8
  %28 = and i16 %27, 15
  %29 = icmp ult i16 %28, 6
  br i1 %29, label %30, label %13

30:                                               ; preds = %22
  %31 = shl nuw nsw i16 %28, 3
  %32 = zext i16 %31 to i48
  %33 = lshr i48 54083862030194, %32
  %34 = trunc i48 %33 to i8
  store i8 %34, i8* %6, align 1
  %35 = icmp ult i16 %10, 24576
  br i1 %35, label %36, label %13

36:                                               ; preds = %30
  %37 = lshr i16 %10, 12
  %38 = shl nuw nsw i16 %37, 3
  %39 = zext i16 %38 to i48
  %40 = lshr i48 54083862030194, %39
  %41 = trunc i48 %40 to i8
  store i8 %41, i8* %7, align 1
  store i8 0, i8* %8, align 1
  call void @_ZN8SkStringC1EPKc(%class.SkString* %0, i8* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEm(%class.SkRasterPipeline*, i32, i64) local_unnamed_addr #1

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
