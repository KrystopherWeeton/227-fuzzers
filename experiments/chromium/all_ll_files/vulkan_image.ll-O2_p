; ModuleID = '../../gpu/vulkan/vulkan_image.cc'
source_filename = "../../gpu/vulkan/vulkan_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::VulkanImage" = type { %"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size", i32, i32, i32, i64, i32, i32, i32, i32, %"class.absl::optional", %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i32, %class.scoped_refptr, i64, i64, %"struct.std::__1::array" }
%"class.gpu::VulkanDeviceQueue" = type { %"class.base::internal::flat_tree", %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %struct.VkInstance_T*, %struct.VmaAllocator_T*, %"class.std::__1::unique_ptr.3", %struct.VkPhysicalDeviceFeatures2, i8, %struct.VkPhysicalDeviceProtectedMemoryFeatures }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.0" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.base::BasicStringPiece"* }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VkInstance_T = type opaque
%struct.VmaAllocator_T = type opaque
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gpu::VulkanFenceHelper"* }
%"class.gpu::VulkanFenceHelper" = type opaque
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProtectedMemoryFeatures = type { i32, i8*, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkImage_T = type opaque
%struct.VkDeviceMemory_T = type opaque
%class.scoped_refptr = type { %"class.gfx::NativePixmap"* }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::array" = type { [4 x %struct.VkSubresourceLayout] }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkMemoryDedicatedAllocateInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkBuffer_T* }
%struct.VkBuffer_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.23", %"class.gpu::VulkanFunctionPointers::VulkanFunction.24", %"class.gpu::VulkanFunctionPointers::VulkanFunction.25", %"class.gpu::VulkanFunctionPointers::VulkanFunction.26", %"class.gpu::VulkanFunctionPointers::VulkanFunction.27", %"class.gpu::VulkanFunctionPointers::VulkanFunction.28", %"class.gpu::VulkanFunctionPointers::VulkanFunction.29", %"class.gpu::VulkanFunctionPointers::VulkanFunction.30", %"class.gpu::VulkanFunctionPointers::VulkanFunction.31", %"class.gpu::VulkanFunctionPointers::VulkanFunction.32", %"class.gpu::VulkanFunctionPointers::VulkanFunction.33", %"class.gpu::VulkanFunctionPointers::VulkanFunction.34", %"class.gpu::VulkanFunctionPointers::VulkanFunction.35", %"class.gpu::VulkanFunctionPointers::VulkanFunction.36", %"class.gpu::VulkanFunctionPointers::VulkanFunction.37", %"class.gpu::VulkanFunctionPointers::VulkanFunction.38", %"class.gpu::VulkanFunctionPointers::VulkanFunction.39", %"class.gpu::VulkanFunctionPointers::VulkanFunction.40", %"class.gpu::VulkanFunctionPointers::VulkanFunction.41", %"class.gpu::VulkanFunctionPointers::VulkanFunction.42", %"class.gpu::VulkanFunctionPointers::VulkanFunction.43", %"class.gpu::VulkanFunctionPointers::VulkanFunction.44", %"class.gpu::VulkanFunctionPointers::VulkanFunction.45", %"class.gpu::VulkanFunctionPointers::VulkanFunction.46", %"class.gpu::VulkanFunctionPointers::VulkanFunction.47", %"class.gpu::VulkanFunctionPointers::VulkanFunction.48", %"class.gpu::VulkanFunctionPointers::VulkanFunction.49", %"class.gpu::VulkanFunctionPointers::VulkanFunction.50", %"class.gpu::VulkanFunctionPointers::VulkanFunction.51", %"class.gpu::VulkanFunctionPointers::VulkanFunction.52", %"class.gpu::VulkanFunctionPointers::VulkanFunction.53", %"class.gpu::VulkanFunctionPointers::VulkanFunction.54", %"class.gpu::VulkanFunctionPointers::VulkanFunction.55", %"class.gpu::VulkanFunctionPointers::VulkanFunction.56", %"class.gpu::VulkanFunctionPointers::VulkanFunction.57", %"class.gpu::VulkanFunctionPointers::VulkanFunction.58", %"class.gpu::VulkanFunctionPointers::VulkanFunction.59", %"class.gpu::VulkanFunctionPointers::VulkanFunction.60", %"class.gpu::VulkanFunctionPointers::VulkanFunction.61", %"class.gpu::VulkanFunctionPointers::VulkanFunction.62", %"class.gpu::VulkanFunctionPointers::VulkanFunction.63", %"class.gpu::VulkanFunctionPointers::VulkanFunction.64", %"class.gpu::VulkanFunctionPointers::VulkanFunction.65", %"class.gpu::VulkanFunctionPointers::VulkanFunction.66", %"class.gpu::VulkanFunctionPointers::VulkanFunction.67", %"class.gpu::VulkanFunctionPointers::VulkanFunction.68", %"class.gpu::VulkanFunctionPointers::VulkanFunction.69", %"class.gpu::VulkanFunctionPointers::VulkanFunction.70", %"class.gpu::VulkanFunctionPointers::VulkanFunction.71", %"class.gpu::VulkanFunctionPointers::VulkanFunction.72", %"class.gpu::VulkanFunctionPointers::VulkanFunction.73", %"class.gpu::VulkanFunctionPointers::VulkanFunction.74", %"class.gpu::VulkanFunctionPointers::VulkanFunction.75", %"class.gpu::VulkanFunctionPointers::VulkanFunction.76", %"class.gpu::VulkanFunctionPointers::VulkanFunction.77", %"class.gpu::VulkanFunctionPointers::VulkanFunction.78", %"class.gpu::VulkanFunctionPointers::VulkanFunction.79", %"class.gpu::VulkanFunctionPointers::VulkanFunction.80", %"class.gpu::VulkanFunctionPointers::VulkanFunction.81", %"class.gpu::VulkanFunctionPointers::VulkanFunction.82", %"class.gpu::VulkanFunctionPointers::VulkanFunction.83", %"class.gpu::VulkanFunctionPointers::VulkanFunction.84", %"class.gpu::VulkanFunctionPointers::VulkanFunction.85", %"class.gpu::VulkanFunctionPointers::VulkanFunction.86", %"class.gpu::VulkanFunctionPointers::VulkanFunction.87", %"class.gpu::VulkanFunctionPointers::VulkanFunction.88", %"class.gpu::VulkanFunctionPointers::VulkanFunction.89", %"class.gpu::VulkanFunctionPointers::VulkanFunction.90", %"class.gpu::VulkanFunctionPointers::VulkanFunction.91", %"class.gpu::VulkanFunctionPointers::VulkanFunction.92", %"class.gpu::VulkanFunctionPointers::VulkanFunction.93", %"class.gpu::VulkanFunctionPointers::VulkanFunction.94", %"class.gpu::VulkanFunctionPointers::VulkanFunction.90", %"class.gpu::VulkanFunctionPointers::VulkanFunction.95", %"class.gpu::VulkanFunctionPointers::VulkanFunction.96", %"class.gpu::VulkanFunctionPointers::VulkanFunction.97", %"class.gpu::VulkanFunctionPointers::VulkanFunction.98", %"class.gpu::VulkanFunctionPointers::VulkanFunction.99", %"class.gpu::VulkanFunctionPointers::VulkanFunction.100", %"class.gpu::VulkanFunctionPointers::VulkanFunction.101", %"class.gpu::VulkanFunctionPointers::VulkanFunction.102", %"class.gpu::VulkanFunctionPointers::VulkanFunction.103", %"class.gpu::VulkanFunctionPointers::VulkanFunction.104", %"class.gpu::VulkanFunctionPointers::VulkanFunction.105", %"class.gpu::VulkanFunctionPointers::VulkanFunction.106", %"class.gpu::VulkanFunctionPointers::VulkanFunction.107", %"class.gpu::VulkanFunctionPointers::VulkanFunction.108", %"class.gpu::VulkanFunctionPointers::VulkanFunction.109", %"class.gpu::VulkanFunctionPointers::VulkanFunction.110", %"class.gpu::VulkanFunctionPointers::VulkanFunction.111", %"class.gpu::VulkanFunctionPointers::VulkanFunction.112", %"class.gpu::VulkanFunctionPointers::VulkanFunction.113", %"class.gpu::VulkanFunctionPointers::VulkanFunction.114", %"class.gpu::VulkanFunctionPointers::VulkanFunction.115", %"class.gpu::VulkanFunctionPointers::VulkanFunction.116", %"class.gpu::VulkanFunctionPointers::VulkanFunction.117", %"class.gpu::VulkanFunctionPointers::VulkanFunction.118", %"class.gpu::VulkanFunctionPointers::VulkanFunction.119", %"class.gpu::VulkanFunctionPointers::VulkanFunction.120" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.23" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.24" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.25" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.26" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.27" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.28" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.29" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.30" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.31" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.32" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.33" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.34" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.35" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.36" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.37" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.38" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.39" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.40" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.41" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.42" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%struct.VkSurfaceKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.43" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.44" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.45" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.46" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.47" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.48" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.49" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.50" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.51" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.52" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.53" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.54" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.55" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.56" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.57" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.58" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.59" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.60" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.61" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.62" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.63" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.64" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.65" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.66" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.67" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.68" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.69" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.70" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.71" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.72" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.73" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.74" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.75" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.76" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.77" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.78" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.79" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.80" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.81" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.82" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.83" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.84" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.85" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.86" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.87" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.88" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.89" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.91" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.92" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.93" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.94" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.90" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.95" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.96" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.97" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.98" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.99" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.100" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.101" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.102" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.103" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.104" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.105" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.106" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.107" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.108" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.109" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.110" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.111" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.112" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.113" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.114" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.115" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%struct.VkSwapchainKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.116" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.117" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.118" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.119" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.120" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceExternalImageFormatInfo = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT = type { i32, i8*, i64, i32, i32, i32* }
%struct.VkExternalImageFormatProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryImageCreateInfo = type { i32, i8*, i32 }
%struct.VkExportMemoryAllocateInfo = type { i32, i8*, i32 }
%"struct.gfx::GpuMemoryBufferHandle" = type { i32, %"class.gfx::GenericSharedMemoryId", %"class.base::UnsafeSharedMemoryRegion", i32, i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector.11", i64 }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair.13" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.gfx::NativePixmapPlane"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.123 }
%union.anon.123 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@_ZZN3gpu11VulkanImage10InitializeEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_PK20VkMemoryRequirementsE17image_subresource = internal constant %struct.VkImageSubresource { i32 1, i32 0, i32 0 }, align 4
@__const._ZN3gpu11VulkanImage28InitializeWithExternalMemoryEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_.external_info = private unnamed_addr constant { i32, [4 x i8], i8*, i32, [4 x i8] } { i32 1000071000, [4 x i8] zeroinitializer, i8* null, i32 1, [4 x i8] zeroinitializer }, align 8
@__const._ZN3gpu11VulkanImage28InitializeWithExternalMemoryEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_.external_image_format_properties = private unnamed_addr constant { i32, [4 x i8], i8*, %struct.VkExternalMemoryProperties, [4 x i8] } { i32 1000071001, [4 x i8] zeroinitializer, i8* null, %struct.VkExternalMemoryProperties zeroinitializer, [4 x i8] zeroinitializer }, align 8
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3gpu11VulkanImageC1EN4base7PassKeyIS0_EE = hidden unnamed_addr alias void (%"class.gpu::VulkanImage"*), void (%"class.gpu::VulkanImage"*)* @_ZN3gpu11VulkanImageC2EN4base7PassKeyIS0_EE
@_ZN3gpu11VulkanImageD1Ev = hidden unnamed_addr alias void (%"class.gpu::VulkanImage"*), void (%"class.gpu::VulkanImage"*)* @_ZN3gpu11VulkanImageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::VulkanImage"* @_ZN3gpu11VulkanImage6CreateEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_(%"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i32, i32, i32, i8*, i8*) local_unnamed_addr #0 align 2 {
  %9 = tail call i8* @_Znwm(i64 312) #6
  %10 = bitcast i8* %9 to %"class.gpu::VulkanImage"*
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = getelementptr inbounds i8, i8* %9, i64 52
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 28, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #7
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %9, i64 56
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 64
  %16 = getelementptr inbounds i8, i8* %9, i64 128
  %17 = bitcast i8* %16 to %"class.gfx::NativePixmap"**
  store %"class.gfx::NativePixmap"* null, %"class.gfx::NativePixmap"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 136
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 60, i1 false) #7
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 72057594037927935, i64 1>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 152
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 160, i1 false) #7
  %21 = ptrtoint i8* %9 to i64
  %22 = tail call zeroext i1 @_ZN3gpu11VulkanImage10InitializeEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_PK20VkMemoryRequirements(%"class.gpu::VulkanImage"* nonnull %10, %"class.gpu::VulkanDeviceQueue"* %0, %"class.gfx::Size"* dereferenceable(8) %1, i32 %2, i32 %3, i32 %4, i32 %5, i8* %6, i8* %7, %struct.VkMemoryRequirements* null)
  br i1 %22, label %39, label %23

23:                                               ; preds = %8
  %24 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %17, align 8
  %25 = icmp eq %"class.gfx::NativePixmap"* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %24, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to %"class.gfx::NativePixmap"*
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %32 to void (%"class.gfx::NativePixmap"*)***
  %35 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %35, i64 13
  %37 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %36, align 8
  tail call void %37(%"class.gfx::NativePixmap"* nonnull %33) #7
  br label %38

38:                                               ; preds = %31, %26, %23
  tail call void @_ZdlPv(i8* nonnull %9) #6
  br label %39

39:                                               ; preds = %8, %38
  %40 = phi i64 [ 0, %38 ], [ %21, %8 ]
  %41 = inttoptr i64 %40 to %"class.gpu::VulkanImage"*
  ret %"class.gpu::VulkanImage"* %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu11VulkanImage10InitializeEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_PK20VkMemoryRequirements(%"class.gpu::VulkanImage"*, %"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i32, i32, i32, i8*, i8*, %struct.VkMemoryRequirements* readonly) local_unnamed_addr #0 align 2 {
  %11 = alloca %struct.VkPhysicalDeviceMemoryProperties, align 8
  %12 = alloca %struct.VkImageCreateInfo, align 8
  %13 = alloca %struct.VkMemoryRequirements, align 8
  %14 = alloca %struct.VkMemoryDedicatedAllocateInfo, align 8
  %15 = alloca %struct.VkMemoryAllocateInfo, align 8
  %16 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 0
  store %"class.gpu::VulkanDeviceQueue"* %1, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  %17 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 1
  %18 = bitcast %"class.gfx::Size"* %2 to i64*
  %19 = bitcast %"class.gfx::Size"* %17 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 2
  store i32 %3, i32* %21, align 8
  %22 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 4
  store i32 %4, i32* %22, align 8
  %23 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 3
  store i32 %5, i32* %23, align 4
  %24 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 7
  store i32 %6, i32* %24, align 4
  %25 = bitcast %struct.VkImageCreateInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %25) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 88, i1 false)
  %26 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 0
  store i32 14, i32* %26, align 8
  %27 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 1
  store i8* %7, i8** %27, align 8
  %28 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 2
  store i32 %5, i32* %28, align 8
  %29 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 3
  store i32 1, i32* %29, align 4
  %30 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 4
  store i32 %3, i32* %30, align 8
  %31 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 5, i32 0
  %32 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %31, align 4
  %34 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 5, i32 1
  %35 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %34, align 4
  %37 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 5, i32 2
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 4
  %39 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 9
  store i32 %6, i32* %39, align 4
  %40 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 10
  store i32 %4, i32* %40, align 8
  %41 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 11
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 12
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 13
  store i32* null, i32** %43, align 8
  %44 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %12, i64 0, i32 14
  %45 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 8
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 5
  %48 = load %struct.VkDevice_T*, %struct.VkDevice_T** %47, align 8
  %49 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 11
  %50 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %51 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %50, i64 0, i32 49, i32 0
  %52 = load i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)** %51, align 8
  %53 = call i32 %52(%struct.VkDevice_T* %48, %struct.VkImageCreateInfo* nonnull %12, %struct.VkAllocationCallbacks* null, %struct.VkImage_T** %49) #7
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %10
  store %"class.gpu::VulkanDeviceQueue"* null, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  br label %231

56:                                               ; preds = %10
  %57 = bitcast %struct.VkMemoryRequirements* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false)
  %58 = icmp eq %struct.VkMemoryRequirements* %9, null
  br i1 %58, label %59, label %88

59:                                               ; preds = %56
  %60 = load %struct.VkImage_T*, %struct.VkImage_T** %49, align 8
  %61 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %62 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %61, i64 0, i32 80, i32 0
  %63 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)** %62, align 8
  call void %63(%struct.VkDevice_T* %48, %struct.VkImage_T* %60, %struct.VkMemoryRequirements* nonnull %13) #7
  %64 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %13, i64 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %88

67:                                               ; preds = %59
  %68 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  %69 = icmp eq %"class.gpu::VulkanDeviceQueue"* %68, null
  br i1 %69, label %229, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %68, i64 0, i32 5
  %72 = load %struct.VkDevice_T*, %struct.VkDevice_T** %71, align 8
  %73 = load %struct.VkImage_T*, %struct.VkImage_T** %49, align 8
  %74 = icmp eq %struct.VkImage_T* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %70
  %76 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %77 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %76, i64 0, i32 62, i32 0
  %78 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %77, align 8
  call void %78(%struct.VkDevice_T* %72, %struct.VkImage_T* nonnull %73, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkImage_T* null, %struct.VkImage_T** %49, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 12
  %81 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %80, align 8
  %82 = icmp eq %struct.VkDeviceMemory_T* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %85 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %84, i64 0, i32 73, i32 0
  %86 = load void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %85, align 8
  call void %86(%struct.VkDevice_T* %72, %struct.VkDeviceMemory_T* nonnull %81, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %80, align 8
  br label %87

87:                                               ; preds = %83, %79
  store %"class.gpu::VulkanDeviceQueue"* null, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  br label %229

88:                                               ; preds = %59, %56
  %89 = phi %struct.VkMemoryRequirements* [ %9, %56 ], [ %13, %59 ]
  %90 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %89, i64 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 5
  store i64 %91, i64* %92, align 8
  %93 = bitcast %struct.VkMemoryDedicatedAllocateInfo* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #7
  %94 = bitcast %struct.VkMemoryDedicatedAllocateInfo* %14 to i64*
  store i64 -6148914691236517206, i64* %94, align 8
  %95 = getelementptr inbounds %struct.VkMemoryDedicatedAllocateInfo, %struct.VkMemoryDedicatedAllocateInfo* %14, i64 0, i32 0
  store i32 1000127001, i32* %95, align 8
  %96 = getelementptr inbounds %struct.VkMemoryDedicatedAllocateInfo, %struct.VkMemoryDedicatedAllocateInfo* %14, i64 0, i32 1
  store i8* %8, i8** %96, align 8
  %97 = getelementptr inbounds %struct.VkMemoryDedicatedAllocateInfo, %struct.VkMemoryDedicatedAllocateInfo* %14, i64 0, i32 2
  %98 = bitcast %struct.VkImage_T** %49 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %struct.VkImage_T** %97 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %struct.VkMemoryDedicatedAllocateInfo, %struct.VkMemoryDedicatedAllocateInfo* %14, i64 0, i32 3
  store %struct.VkBuffer_T* null, %struct.VkBuffer_T** %101, align 8
  %102 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 1
  %103 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %102, align 8
  %104 = bitcast %struct.VkPhysicalDeviceMemoryProperties* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 520, i8* nonnull %104) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 520, i1 false) #7
  %105 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %106 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %105, i64 0, i32 16, i32 0
  %107 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %106, align 8
  call void %107(%struct.VkPhysicalDevice_T* %103, %struct.VkPhysicalDeviceMemoryProperties* nonnull %11) #7
  %108 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %89, i64 0, i32 2
  %109 = load i32, i32* %108, align 8
  br label %110

110:                                              ; preds = %238, %88
  %111 = phi i64 [ 0, %88 ], [ %239, %238 ]
  %112 = trunc i64 %111 to i32
  %113 = shl i32 1, %112
  %114 = and i32 %113, %109
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %11, i64 0, i32 1, i64 %111, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %148

121:                                              ; preds = %116, %110
  %122 = or i64 %111, 1
  %123 = trunc i64 %122 to i32
  %124 = shl i32 1, %123
  %125 = and i32 %124, %109
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %238, label %233

127:                                              ; preds = %238
  call void @llvm.lifetime.end.p0i8(i64 520, i8* nonnull %104) #7
  %128 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  %129 = icmp eq %"class.gpu::VulkanDeviceQueue"* %128, null
  br i1 %129, label %227, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %128, i64 0, i32 5
  %132 = load %struct.VkDevice_T*, %struct.VkDevice_T** %131, align 8
  %133 = load %struct.VkImage_T*, %struct.VkImage_T** %49, align 8
  %134 = icmp eq %struct.VkImage_T* %133, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %137 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %136, i64 0, i32 62, i32 0
  %138 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %137, align 8
  call void %138(%struct.VkDevice_T* %132, %struct.VkImage_T* nonnull %133, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkImage_T* null, %struct.VkImage_T** %49, align 8
  br label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 12
  %141 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %140, align 8
  %142 = icmp eq %struct.VkDeviceMemory_T* %141, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %139
  %144 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %145 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %144, i64 0, i32 73, i32 0
  %146 = load void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %145, align 8
  call void %146(%struct.VkDevice_T* %132, %struct.VkDeviceMemory_T* nonnull %141, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %140, align 8
  br label %147

147:                                              ; preds = %143, %139
  store %"class.gpu::VulkanDeviceQueue"* null, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  br label %227

148:                                              ; preds = %233, %116
  %149 = phi i64 [ %111, %116 ], [ %122, %233 ]
  %150 = trunc i64 %149 to i32
  call void @llvm.lifetime.end.p0i8(i64 520, i8* nonnull %104) #7
  %151 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 6
  store i32 %150, i32* %151, align 8
  %152 = bitcast %struct.VkMemoryAllocateInfo* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %152) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 32, i1 false)
  %153 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %15, i64 0, i32 0
  store i32 5, i32* %153, align 8
  %154 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %15, i64 0, i32 1
  %155 = bitcast i8** %154 to %struct.VkMemoryDedicatedAllocateInfo**
  store %struct.VkMemoryDedicatedAllocateInfo* %14, %struct.VkMemoryDedicatedAllocateInfo** %155, align 8
  %156 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %15, i64 0, i32 2
  %157 = load i64, i64* %92, align 8
  store i64 %157, i64* %156, align 8
  %158 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %15, i64 0, i32 3
  store i32 %150, i32* %158, align 8
  %159 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 12
  %160 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %161 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %160, i64 0, i32 29, i32 0
  %162 = load i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)** %161, align 8
  %163 = call i32 %162(%struct.VkDevice_T* %48, %struct.VkMemoryAllocateInfo* nonnull %15, %struct.VkAllocationCallbacks* null, %struct.VkDeviceMemory_T** %159) #7
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %185, label %165

165:                                              ; preds = %148
  %166 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  %167 = icmp eq %"class.gpu::VulkanDeviceQueue"* %166, null
  br i1 %167, label %225, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %166, i64 0, i32 5
  %170 = load %struct.VkDevice_T*, %struct.VkDevice_T** %169, align 8
  %171 = load %struct.VkImage_T*, %struct.VkImage_T** %49, align 8
  %172 = icmp eq %struct.VkImage_T* %171, null
  br i1 %172, label %177, label %173

173:                                              ; preds = %168
  %174 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %175 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %174, i64 0, i32 62, i32 0
  %176 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %175, align 8
  call void %176(%struct.VkDevice_T* %170, %struct.VkImage_T* nonnull %171, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkImage_T* null, %struct.VkImage_T** %49, align 8
  br label %177

177:                                              ; preds = %173, %168
  %178 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %159, align 8
  %179 = icmp eq %struct.VkDeviceMemory_T* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %182 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %181, i64 0, i32 73, i32 0
  %183 = load void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %182, align 8
  call void %183(%struct.VkDevice_T* %170, %struct.VkDeviceMemory_T* nonnull %178, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %159, align 8
  br label %184

184:                                              ; preds = %180, %177
  store %"class.gpu::VulkanDeviceQueue"* null, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  br label %225

185:                                              ; preds = %148
  %186 = load %struct.VkImage_T*, %struct.VkImage_T** %49, align 8
  %187 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %159, align 8
  %188 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %189 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %188, i64 0, i32 33, i32 0
  %190 = load i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)** %189, align 8
  %191 = call i32 %190(%struct.VkDevice_T* %48, %struct.VkImage_T* %186, %struct.VkDeviceMemory_T* %187, i64 0) #7
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %213, label %193

193:                                              ; preds = %185
  %194 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  %195 = icmp eq %"class.gpu::VulkanDeviceQueue"* %194, null
  br i1 %195, label %225, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %194, i64 0, i32 5
  %198 = load %struct.VkDevice_T*, %struct.VkDevice_T** %197, align 8
  %199 = load %struct.VkImage_T*, %struct.VkImage_T** %49, align 8
  %200 = icmp eq %struct.VkImage_T* %199, null
  br i1 %200, label %205, label %201

201:                                              ; preds = %196
  %202 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %203 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %202, i64 0, i32 62, i32 0
  %204 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %203, align 8
  call void %204(%struct.VkDevice_T* %198, %struct.VkImage_T* nonnull %199, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkImage_T* null, %struct.VkImage_T** %49, align 8
  br label %205

205:                                              ; preds = %201, %196
  %206 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %159, align 8
  %207 = icmp eq %struct.VkDeviceMemory_T* %206, null
  br i1 %207, label %212, label %208

208:                                              ; preds = %205
  %209 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %210 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %209, i64 0, i32 73, i32 0
  %211 = load void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %210, align 8
  call void %211(%struct.VkDevice_T* %198, %struct.VkDeviceMemory_T* nonnull %206, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %159, align 8
  br label %212

212:                                              ; preds = %208, %205
  store %"class.gpu::VulkanDeviceQueue"* null, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  br label %225

213:                                              ; preds = %185
  %214 = load i32, i32* %24, align 4
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %225

216:                                              ; preds = %213
  %217 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %16, align 8
  %218 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %217, i64 0, i32 5
  %219 = load %struct.VkDevice_T*, %struct.VkDevice_T** %218, align 8
  %220 = load %struct.VkImage_T*, %struct.VkImage_T** %49, align 8
  %221 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 17, i32 0, i64 0
  %222 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %223 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %222, i64 0, i32 82, i32 0
  %224 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)** %223, align 8
  call void %224(%struct.VkDevice_T* %219, %struct.VkImage_T* %220, %struct.VkImageSubresource* nonnull @_ZZN3gpu11VulkanImage10InitializeEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_PK20VkMemoryRequirementsE17image_subresource, %struct.VkSubresourceLayout* %221) #7
  br label %225

225:                                              ; preds = %212, %193, %184, %165, %213, %216
  %226 = phi i1 [ true, %216 ], [ true, %213 ], [ false, %165 ], [ false, %184 ], [ false, %193 ], [ false, %212 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %152) #7
  br label %227

227:                                              ; preds = %147, %127, %225
  %228 = phi i1 [ %226, %225 ], [ false, %127 ], [ false, %147 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #7
  br label %229

229:                                              ; preds = %87, %67, %227
  %230 = phi i1 [ %228, %227 ], [ false, %67 ], [ false, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #7
  br label %231

231:                                              ; preds = %229, %55
  %232 = phi i1 [ false, %55 ], [ %230, %229 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %25) #7
  ret i1 %232

233:                                              ; preds = %121
  %234 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %11, i64 0, i32 1, i64 %122, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %148

238:                                              ; preds = %233, %121
  %239 = add nuw nsw i64 %111, 2
  %240 = icmp eq i64 %239, 32
  br i1 %240, label %127, label %110
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::VulkanImage"* @_ZN3gpu11VulkanImage24CreateWithExternalMemoryEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_(%"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i32, i32, i32, i8*, i8*) local_unnamed_addr #0 align 2 {
  %9 = tail call i8* @_Znwm(i64 312) #6
  %10 = bitcast i8* %9 to %"class.gpu::VulkanImage"*
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = getelementptr inbounds i8, i8* %9, i64 52
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 28, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #7
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %9, i64 56
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 64
  %16 = getelementptr inbounds i8, i8* %9, i64 128
  %17 = bitcast i8* %16 to %"class.gfx::NativePixmap"**
  store %"class.gfx::NativePixmap"* null, %"class.gfx::NativePixmap"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 136
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 60, i1 false) #7
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 72057594037927935, i64 1>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 152
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 160, i1 false) #7
  %21 = ptrtoint i8* %9 to i64
  %22 = tail call zeroext i1 @_ZN3gpu11VulkanImage28InitializeWithExternalMemoryEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_(%"class.gpu::VulkanImage"* nonnull %10, %"class.gpu::VulkanDeviceQueue"* %0, %"class.gfx::Size"* dereferenceable(8) %1, i32 %2, i32 %3, i32 %4, i32 %5, i8* %6, i8* %7)
  br i1 %22, label %39, label %23

23:                                               ; preds = %8
  %24 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %17, align 8
  %25 = icmp eq %"class.gfx::NativePixmap"* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %24, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to %"class.gfx::NativePixmap"*
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %32 to void (%"class.gfx::NativePixmap"*)***
  %35 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %35, i64 13
  %37 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %36, align 8
  tail call void %37(%"class.gfx::NativePixmap"* nonnull %33) #7
  br label %38

38:                                               ; preds = %31, %26, %23
  tail call void @_ZdlPv(i8* nonnull %9) #6
  br label %39

39:                                               ; preds = %8, %38
  %40 = phi i64 [ 0, %38 ], [ %21, %8 ]
  %41 = inttoptr i64 %40 to %"class.gpu::VulkanImage"*
  ret %"class.gpu::VulkanImage"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu11VulkanImage28InitializeWithExternalMemoryEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_(%"class.gpu::VulkanImage"*, %"class.gpu::VulkanDeviceQueue"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i32, i32, i32, i8*, i8*) local_unnamed_addr #0 align 2 {
  %10 = alloca %struct.VkPhysicalDeviceImageFormatInfo2, align 8
  %11 = alloca %struct.VkPhysicalDeviceExternalImageFormatInfo, align 8
  %12 = alloca %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, align 8
  %13 = alloca %struct.VkImageFormatProperties2, align 8
  %14 = alloca %struct.VkExternalImageFormatProperties, align 8
  %15 = alloca %struct.VkExternalMemoryImageCreateInfo, align 8
  %16 = alloca %struct.VkExportMemoryAllocateInfo, align 8
  %17 = bitcast %struct.VkPhysicalDeviceImageFormatInfo2* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 40, i1 false)
  %18 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %10, i64 0, i32 0
  store i32 1000059004, i32* %18, align 8
  %19 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %10, i64 0, i32 1
  %20 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %10, i64 0, i32 2
  store i32 %3, i32* %20, align 8
  %21 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %10, i64 0, i32 3
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %10, i64 0, i32 4
  store i32 %6, i32* %22, align 8
  %23 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %10, i64 0, i32 5
  store i32 %4, i32* %23, align 4
  %24 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %10, i64 0, i32 6
  store i32 %5, i32* %24, align 8
  %25 = bitcast %struct.VkPhysicalDeviceExternalImageFormatInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, [4 x i8] }* @__const._ZN3gpu11VulkanImage28InitializeWithExternalMemoryEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_.external_info to i8*), i64 24, i1 false)
  %26 = bitcast i8** %19 to %struct.VkPhysicalDeviceExternalImageFormatInfo**
  store %struct.VkPhysicalDeviceExternalImageFormatInfo* %11, %struct.VkPhysicalDeviceExternalImageFormatInfo** %26, align 8
  %27 = bitcast %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 40, i1 false)
  %28 = getelementptr inbounds %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %12, i64 0, i32 0
  store i32 1000158002, i32* %28, align 8
  %29 = icmp eq i32 %6, 1000158000
  br i1 %29, label %30, label %33

30:                                               ; preds = %9
  %31 = getelementptr inbounds %struct.VkPhysicalDeviceExternalImageFormatInfo, %struct.VkPhysicalDeviceExternalImageFormatInfo* %11, i64 0, i32 1
  %32 = bitcast i8** %31 to %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT**
  store %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT* %12, %struct.VkPhysicalDeviceImageDrmFormatModifierInfoEXT** %32, align 8
  br label %33

33:                                               ; preds = %30, %9
  %34 = bitcast %struct.VkImageFormatProperties2* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %34) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 48, i1 false)
  %35 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %13, i64 0, i32 0
  store i32 1000059003, i32* %35, align 8
  %36 = bitcast %struct.VkExternalImageFormatProperties* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 bitcast ({ i32, [4 x i8], i8*, %struct.VkExternalMemoryProperties, [4 x i8] }* @__const._ZN3gpu11VulkanImage28InitializeWithExternalMemoryEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_.external_image_format_properties to i8*), i64 32, i1 false)
  %37 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %13, i64 0, i32 1
  %38 = bitcast i8** %37 to %struct.VkExternalImageFormatProperties**
  store %struct.VkExternalImageFormatProperties* %14, %struct.VkExternalImageFormatProperties** %38, align 8
  %39 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 1
  %40 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %39, align 8
  %41 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %42 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %41, i64 0, i32 15, i32 0
  %43 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)** %42, align 8
  %44 = call i32 %43(%struct.VkPhysicalDevice_T* %40, %struct.VkPhysicalDeviceImageFormatInfo2* nonnull %10, %struct.VkImageFormatProperties2* nonnull %13) #7
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %64

46:                                               ; preds = %33
  %47 = getelementptr inbounds %struct.VkExternalImageFormatProperties, %struct.VkExternalImageFormatProperties* %14, i64 0, i32 2, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.VkExternalImageFormatProperties, %struct.VkExternalImageFormatProperties* %14, i64 0, i32 2, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 13
  store i32 %53, i32* %54, align 8
  %55 = bitcast %struct.VkExternalMemoryImageCreateInfo* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  %56 = getelementptr inbounds %struct.VkExternalMemoryImageCreateInfo, %struct.VkExternalMemoryImageCreateInfo* %15, i64 0, i32 0
  store i32 1000072001, i32* %56, align 8
  %57 = getelementptr inbounds %struct.VkExternalMemoryImageCreateInfo, %struct.VkExternalMemoryImageCreateInfo* %15, i64 0, i32 1
  store i8* %7, i8** %57, align 8
  %58 = getelementptr inbounds %struct.VkExternalMemoryImageCreateInfo, %struct.VkExternalMemoryImageCreateInfo* %15, i64 0, i32 2
  store i32 %53, i32* %58, align 8
  %59 = bitcast %struct.VkExportMemoryAllocateInfo* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 24, i1 false)
  %60 = getelementptr inbounds %struct.VkExportMemoryAllocateInfo, %struct.VkExportMemoryAllocateInfo* %16, i64 0, i32 0
  store i32 1000072002, i32* %60, align 8
  %61 = getelementptr inbounds %struct.VkExportMemoryAllocateInfo, %struct.VkExportMemoryAllocateInfo* %16, i64 0, i32 1
  store i8* %8, i8** %61, align 8
  %62 = getelementptr inbounds %struct.VkExportMemoryAllocateInfo, %struct.VkExportMemoryAllocateInfo* %16, i64 0, i32 2
  store i32 %53, i32* %62, align 8
  %63 = call zeroext i1 @_ZN3gpu11VulkanImage10InitializeEPNS_17VulkanDeviceQueueERKN3gfx4SizeE8VkFormatjj13VkImageTilingPvS9_PK20VkMemoryRequirements(%"class.gpu::VulkanImage"* %0, %"class.gpu::VulkanDeviceQueue"* %1, %"class.gfx::Size"* dereferenceable(8) %2, i32 %3, i32 %4, i32 %5, i32 %6, i8* nonnull %55, i8* nonnull %59, %struct.VkMemoryRequirements* null)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #7
  br label %64

64:                                               ; preds = %51, %46, %33
  %65 = phi i1 [ false, %33 ], [ %63, %51 ], [ false, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #7
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::VulkanImage"* @_ZN3gpu11VulkanImage31CreateFromGpuMemoryBufferHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleERKNS3_4SizeE8VkFormatjj13VkImageTiling(%"class.gpu::VulkanDeviceQueue"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"* dereferenceable(8), i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.gfx::GpuMemoryBufferHandle", align 8
  %9 = tail call i8* @_Znwm(i64 312) #6
  %10 = bitcast i8* %9 to %"class.gpu::VulkanImage"*
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = getelementptr inbounds i8, i8* %9, i64 52
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 28, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #7
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %9, i64 56
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 64
  %16 = getelementptr inbounds i8, i8* %9, i64 128
  %17 = bitcast i8* %16 to %"class.gfx::NativePixmap"**
  store %"class.gfx::NativePixmap"* null, %"class.gfx::NativePixmap"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 136
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 60, i1 false) #7
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 72057594037927935, i64 1>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 152
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 160, i1 false) #7
  %21 = ptrtoint i8* %9 to i64
  call void @_ZN3gfx21GpuMemoryBufferHandleC1EOS0_(%"struct.gfx::GpuMemoryBufferHandle"* nonnull %8, %"struct.gfx::GpuMemoryBufferHandle"* dereferenceable(112) %1) #7
  %22 = call zeroext i1 @_ZN3gpu11VulkanImage35InitializeFromGpuMemoryBufferHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleERKNS3_4SizeE8VkFormatjj13VkImageTiling(%"class.gpu::VulkanImage"* nonnull %10, %"class.gpu::VulkanDeviceQueue"* %0, %"struct.gfx::GpuMemoryBufferHandle"* nonnull %8, %"class.gfx::Size"* dereferenceable(8) %2, i32 %3, i32 %4, i32 %5, i32 %6) #7
  call void @_ZN3gfx21GpuMemoryBufferHandleD1Ev(%"struct.gfx::GpuMemoryBufferHandle"* nonnull %8) #7
  br i1 %22, label %39, label %23

23:                                               ; preds = %7
  %24 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %17, align 8
  %25 = icmp eq %"class.gfx::NativePixmap"* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %24, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to %"class.gfx::NativePixmap"*
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %32 to void (%"class.gfx::NativePixmap"*)***
  %35 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %35, i64 13
  %37 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %36, align 8
  call void %37(%"class.gfx::NativePixmap"* nonnull %33) #7
  br label %38

38:                                               ; preds = %31, %26, %23
  call void @_ZdlPv(i8* nonnull %9) #6
  br label %39

39:                                               ; preds = %7, %38
  %40 = phi i64 [ 0, %38 ], [ %21, %7 ]
  %41 = inttoptr i64 %40 to %"class.gpu::VulkanImage"*
  ret %"class.gpu::VulkanImage"* %41
}

declare zeroext i1 @_ZN3gpu11VulkanImage35InitializeFromGpuMemoryBufferHandleEPNS_17VulkanDeviceQueueEN3gfx21GpuMemoryBufferHandleERKNS3_4SizeE8VkFormatjj13VkImageTiling(%"class.gpu::VulkanImage"*, %"class.gpu::VulkanDeviceQueue"*, %"struct.gfx::GpuMemoryBufferHandle"*, %"class.gfx::Size"* dereferenceable(8), i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN3gfx21GpuMemoryBufferHandleC1EOS0_(%"struct.gfx::GpuMemoryBufferHandle"*, %"struct.gfx::GpuMemoryBufferHandle"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx21GpuMemoryBufferHandleD1Ev(%"struct.gfx::GpuMemoryBufferHandle"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::VulkanImage"* @_ZN3gpu11VulkanImage6CreateEPNS_17VulkanDeviceQueueEP9VkImage_TP16VkDeviceMemory_TRKN3gfx4SizeE8VkFormat13VkImageTilingmjRN4absl8optionalINS_15VulkanYCbCrInfoEEEjj(%"class.gpu::VulkanDeviceQueue"*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i32, i64, i32, %"class.absl::optional"* nocapture readonly dereferenceable(48), i32, i32) local_unnamed_addr #0 align 2 {
  %12 = tail call i8* @_Znwm(i64 312) #6
  %13 = bitcast i8* %12 to %"class.gpu::VulkanImage"*
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = getelementptr inbounds i8, i8* %12, i64 52
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %12, i64 48
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  store i32 -1, i32* %16, align 4
  %19 = getelementptr inbounds i8, i8* %12, i64 56
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 64
  %21 = getelementptr inbounds i8, i8* %12, i64 128
  %22 = bitcast i8* %21 to %"class.gfx::NativePixmap"**
  store %"class.gfx::NativePixmap"* null, %"class.gfx::NativePixmap"** %22, align 8
  %23 = getelementptr inbounds i8, i8* %12, i64 136
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 60, i1 false) #7
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> <i64 72057594037927935, i64 1>, <2 x i64>* %24, align 8
  %25 = getelementptr inbounds i8, i8* %12, i64 152
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 160, i1 false) #7
  %26 = bitcast i8* %12 to %"class.gpu::VulkanDeviceQueue"**
  store %"class.gpu::VulkanDeviceQueue"* %0, %"class.gpu::VulkanDeviceQueue"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %12, i64 104
  %28 = bitcast i8* %27 to %struct.VkImage_T**
  store %struct.VkImage_T* %1, %struct.VkImage_T** %28, align 8
  %29 = getelementptr inbounds i8, i8* %12, i64 112
  %30 = bitcast i8* %29 to %struct.VkDeviceMemory_T**
  store %struct.VkDeviceMemory_T* %2, %struct.VkDeviceMemory_T** %30, align 8
  %31 = getelementptr inbounds i8, i8* %12, i64 8
  %32 = bitcast %"class.gfx::Size"* %3 to i64*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %32, align 4
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds i8, i8* %12, i64 16
  %36 = bitcast i8* %35 to i32*
  store i32 %4, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %12, i64 44
  %38 = bitcast i8* %37 to i32*
  store i32 %5, i32* %38, align 4
  %39 = bitcast i8* %14 to i64*
  store i64 %6, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %12, i64 40
  %41 = bitcast i8* %40 to i32*
  store i32 %7, i32* %41, align 8
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %42, i64 48, i1 false)
  %43 = getelementptr inbounds i8, i8* %12, i64 24
  %44 = bitcast i8* %43 to i32*
  store i32 %9, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %12, i64 20
  %46 = bitcast i8* %45 to i32*
  store i32 %10, i32* %46, align 4
  ret %"class.gpu::VulkanImage"* %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu11VulkanImageC2EN4base7PassKeyIS0_EE(%"class.gpu::VulkanImage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 9
  %4 = bitcast %"class.gpu::VulkanImage"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 28, i1 false)
  %5 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false)
  store i32 -1, i32* %3, align 4
  %6 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 14, i32 0
  store %"class.gfx::NativePixmap"* null, %"class.gfx::NativePixmap"** %8, align 8
  %9 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 15
  %10 = bitcast %union.anon* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 60, i1 false)
  %11 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 72057594037927935, i64 1>, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 17, i32 0
  %13 = bitcast [4 x %struct.VkSubresourceLayout]* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 160, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu11VulkanImageD2Ev(%"class.gpu::VulkanImage"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 14, i32 0
  %3 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %2, align 8
  %4 = icmp eq %"class.gfx::NativePixmap"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.gfx::NativePixmap"*
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %11 to void (%"class.gfx::NativePixmap"*)***
  %14 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %14, i64 13
  %16 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %15, align 8
  tail call void %16(%"class.gfx::NativePixmap"* nonnull %12) #7
  br label %17

17:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu11VulkanImage7DestroyEv(%"class.gpu::VulkanImage"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 0
  %3 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %2, align 8
  %4 = icmp eq %"class.gpu::VulkanDeviceQueue"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %3, i64 0, i32 5
  %7 = load %struct.VkDevice_T*, %struct.VkDevice_T** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 11
  %9 = load %struct.VkImage_T*, %struct.VkImage_T** %8, align 8
  %10 = icmp eq %struct.VkImage_T* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %5
  %12 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %13 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %12, i64 0, i32 62, i32 0
  %14 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %13, align 8
  tail call void %14(%struct.VkDevice_T* %7, %struct.VkImage_T* nonnull %9, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkImage_T* null, %struct.VkImage_T** %8, align 8
  br label %15

15:                                               ; preds = %5, %11
  %16 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %0, i64 0, i32 12
  %17 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %16, align 8
  %18 = icmp eq %struct.VkDeviceMemory_T* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %21 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %20, i64 0, i32 73, i32 0
  %22 = load void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %21, align 8
  tail call void %22(%struct.VkDevice_T* %7, %struct.VkDeviceMemory_T* nonnull %17, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkDeviceMemory_T* null, %struct.VkDeviceMemory_T** %16, align 8
  br label %23

23:                                               ; preds = %15, %19
  store %"class.gpu::VulkanDeviceQueue"* null, %"class.gpu::VulkanDeviceQueue"** %2, align 8
  br label %24

24:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu11VulkanImage11GetMemoryFdE34VkExternalMemoryHandleTypeFlagBits(%"class.base::ScopedGeneric"* noalias sret, %"class.gpu::VulkanImage"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkMemoryGetFdInfoKHR, align 8
  %5 = alloca i32, align 4
  %6 = bitcast %struct.VkMemoryGetFdInfoKHR* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %struct.VkMemoryGetFdInfoKHR, %struct.VkMemoryGetFdInfoKHR* %4, i64 0, i32 0
  store i32 1000074002, i32* %7, align 8
  %8 = getelementptr inbounds %struct.VkMemoryGetFdInfoKHR, %struct.VkMemoryGetFdInfoKHR* %4, i64 0, i32 1
  store i8* null, i8** %8, align 8
  %9 = getelementptr inbounds %struct.VkMemoryGetFdInfoKHR, %struct.VkMemoryGetFdInfoKHR* %4, i64 0, i32 2
  %10 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %1, i64 0, i32 12
  %11 = bitcast %struct.VkDeviceMemory_T** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.VkDeviceMemory_T** %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.VkMemoryGetFdInfoKHR, %struct.VkMemoryGetFdInfoKHR* %4, i64 0, i32 3
  store i32 %2, i32* %14, align 8
  %15 = getelementptr inbounds %"class.gpu::VulkanImage", %"class.gpu::VulkanImage"* %1, i64 0, i32 0
  %16 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %15, align 8
  %17 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %16, i64 0, i32 5
  %18 = load %struct.VkDevice_T*, %struct.VkDevice_T** %17, align 8
  %19 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #7
  store i32 -1, i32* %5, align 4
  %20 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %21 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %20, i64 0, i32 93, i32 0
  %22 = load i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)** %21, align 8
  %23 = call i32 %22(%struct.VkDevice_T* %18, %struct.VkMemoryGetFdInfoKHR* nonnull %4, i32* nonnull %5) #7
  %24 = load i32, i32* %5, align 4
  %25 = icmp slt i32 %24, 0
  %26 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  br i1 %25, label %28, label %30

28:                                               ; preds = %3
  store i32 -1, i32* %27, align 4
  %29 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  store i8 0, i8* %29, align 4
  br label %32

30:                                               ; preds = %3
  store i32 %24, i32* %27, align 4
  %31 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  store i8 0, i8* %31, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %24) #7
  br label %32

32:                                               ; preds = %30, %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7
  ret void
}

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)) #7
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i64 44) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #7
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #7
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #7
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #7
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #7
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #7
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #7
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #7
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #7
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #6
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #7
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #7
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #6
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #7
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #2

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
