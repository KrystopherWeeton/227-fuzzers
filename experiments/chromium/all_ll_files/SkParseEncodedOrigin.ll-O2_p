; ModuleID = '../../third_party/skia/src/codec/SkParseEncodedOrigin.cpp'
source_filename = "../../third_party/skia/src/codec/SkParseEncodedOrigin.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z20SkParseEncodedOriginPKhmP15SkEncodedOrigin(i8* nocapture, i64, i32* nocapture) local_unnamed_addr #0 {
  %4 = icmp ult i64 %1, 8
  br i1 %4, label %56, label %5

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  switch i8 %6, label %56 [
    i8 73, label %7
    i8 77, label %11
  ]

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 73
  br i1 %10, label %15, label %56

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8, i8* %0, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 77
  br i1 %14, label %31, label %56

15:                                               ; preds = %7
  %16 = getelementptr inbounds i8, i8* %0, i64 4
  %17 = getelementptr inbounds i8, i8* %0, i64 7
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i64
  %20 = shl nuw nsw i64 %19, 24
  %21 = getelementptr inbounds i8, i8* %0, i64 6
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 16
  %25 = or i64 %24, %20
  %26 = getelementptr inbounds i8, i8* %0, i64 5
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = shl nuw nsw i64 %28, 8
  %30 = or i64 %25, %29
  br label %47

31:                                               ; preds = %11
  %32 = getelementptr inbounds i8, i8* %0, i64 4
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = shl nuw nsw i64 %34, 24
  %36 = getelementptr inbounds i8, i8* %0, i64 5
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = shl nuw nsw i64 %38, 16
  %40 = or i64 %39, %35
  %41 = getelementptr inbounds i8, i8* %0, i64 6
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = shl nuw nsw i64 %43, 8
  %45 = or i64 %40, %44
  %46 = getelementptr inbounds i8, i8* %0, i64 7
  br label %47

47:                                               ; preds = %15, %31
  %48 = phi i8* [ %16, %15 ], [ %46, %31 ]
  %49 = phi i64 [ %30, %15 ], [ %45, %31 ]
  %50 = phi i1 [ true, %15 ], [ false, %31 ]
  %51 = load i8, i8* %48, align 1
  %52 = zext i8 %51 to i64
  %53 = and i64 %49, 4294967295
  %54 = or i64 %53, %52
  %55 = tail call fastcc zeroext i1 @_ZL20parse_encoded_originPKhmmbbP15SkEncodedOrigin(i8* %0, i64 %1, i64 %54, i1 zeroext %50, i1 zeroext true, i32* %2)
  br label %56

56:                                               ; preds = %5, %7, %11, %3, %47
  %57 = phi i1 [ %55, %47 ], [ false, %3 ], [ false, %11 ], [ false, %7 ], [ false, %5 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL20parse_encoded_originPKhmmbbP15SkEncodedOrigin(i8* nocapture, i64, i64, i1 zeroext, i1 zeroext, i32* nocapture) unnamed_addr #0 {
  %7 = add i64 %2, 2
  %8 = icmp ugt i64 %7, %1
  br i1 %8, label %175, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds i8, i8* %0, i64 %2
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  %12 = select i1 %3, i8* %10, i8* %11
  %13 = select i1 %3, i8* %11, i8* %10
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = load i8, i8* %12, align 1
  %18 = zext i8 %17 to i32
  %19 = or i32 %16, %18
  %20 = add i64 %1, -2
  %21 = sub i64 %20, %2
  %22 = udiv i64 %21, 12
  %23 = trunc i64 %22 to i32
  %24 = icmp ugt i32 %19, %23
  %25 = select i1 %24, i32 %23, i32 %19
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %175, label %27

27:                                               ; preds = %9
  %28 = getelementptr inbounds i8, i8* %10, i64 2
  %29 = xor i1 %4, true
  br label %30

30:                                               ; preds = %27, %171
  %31 = phi i32 [ 0, %27 ], [ %172, %171 ]
  %32 = phi i8* [ %28, %27 ], [ %173, %171 ]
  br i1 %3, label %33, label %64

33:                                               ; preds = %30
  %34 = getelementptr inbounds i8, i8* %32, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = shl nuw i16 %36, 8
  %38 = load i8, i8* %32, align 1
  %39 = zext i8 %38 to i16
  %40 = or i16 %37, %39
  %41 = getelementptr inbounds i8, i8* %32, i64 2
  %42 = getelementptr inbounds i8, i8* %32, i64 3
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw i16 %44, 8
  %46 = load i8, i8* %41, align 1
  %47 = zext i8 %46 to i16
  %48 = or i16 %45, %47
  %49 = getelementptr inbounds i8, i8* %32, i64 4
  %50 = getelementptr inbounds i8, i8* %32, i64 7
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = getelementptr inbounds i8, i8* %32, i64 6
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = or i32 %57, %53
  %59 = getelementptr inbounds i8, i8* %32, i64 5
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = or i32 %58, %62
  br label %95

64:                                               ; preds = %30
  %65 = load i8, i8* %32, align 1
  %66 = zext i8 %65 to i16
  %67 = shl nuw i16 %66, 8
  %68 = getelementptr inbounds i8, i8* %32, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i16
  %71 = or i16 %67, %70
  %72 = getelementptr inbounds i8, i8* %32, i64 2
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  %75 = shl nuw i16 %74, 8
  %76 = getelementptr inbounds i8, i8* %32, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  %79 = or i16 %75, %78
  %80 = getelementptr inbounds i8, i8* %32, i64 4
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl nuw i32 %82, 24
  %84 = getelementptr inbounds i8, i8* %32, i64 5
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw nsw i32 %86, 16
  %88 = or i32 %87, %83
  %89 = getelementptr inbounds i8, i8* %32, i64 6
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl nuw nsw i32 %91, 8
  %93 = or i32 %88, %92
  %94 = getelementptr inbounds i8, i8* %32, i64 7
  br label %95

95:                                               ; preds = %33, %64
  %96 = phi i8* [ %49, %33 ], [ %94, %64 ]
  %97 = phi i32 [ %63, %33 ], [ %93, %64 ]
  %98 = phi i16 [ %48, %33 ], [ %79, %64 ]
  %99 = phi i16 [ %40, %33 ], [ %71, %64 ]
  %100 = load i8, i8* %96, align 1
  %101 = zext i8 %100 to i32
  %102 = or i32 %97, %101
  switch i16 %99, label %171 [
    i16 274, label %103
    i16 -30871, label %122
  ]

103:                                              ; preds = %95
  %104 = icmp eq i16 %98, 3
  %105 = icmp eq i32 %102, 1
  %106 = and i1 %104, %105
  br i1 %106, label %107, label %171

107:                                              ; preds = %103
  %108 = getelementptr inbounds i8, i8* %32, i64 8
  %109 = getelementptr inbounds i8, i8* %32, i64 9
  %110 = select i1 %3, i8* %108, i8* %109
  %111 = select i1 %3, i8* %109, i8* %108
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i16
  %114 = shl nuw i16 %113, 8
  %115 = load i8, i8* %110, align 1
  %116 = zext i8 %115 to i16
  %117 = or i16 %114, %116
  %118 = add i16 %117, -1
  %119 = icmp ult i16 %118, 8
  br i1 %119, label %120, label %171

120:                                              ; preds = %107
  %121 = zext i16 %117 to i32
  store i32 %121, i32* %5, align 4
  br label %175

122:                                              ; preds = %95
  %123 = icmp ne i16 %98, 4
  %124 = icmp ne i32 %102, 1
  %125 = or i1 %123, %124
  %126 = or i1 %125, %29
  br i1 %126, label %171, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds i8, i8* %32, i64 8
  br i1 %3, label %129, label %144

129:                                              ; preds = %127
  %130 = getelementptr inbounds i8, i8* %32, i64 11
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = shl nuw i32 %132, 24
  %134 = getelementptr inbounds i8, i8* %32, i64 10
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = shl nuw nsw i32 %136, 16
  %138 = or i32 %137, %133
  %139 = getelementptr inbounds i8, i8* %32, i64 9
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = shl nuw nsw i32 %141, 8
  %143 = or i32 %138, %142
  br label %159

144:                                              ; preds = %127
  %145 = load i8, i8* %128, align 1
  %146 = zext i8 %145 to i32
  %147 = shl nuw i32 %146, 24
  %148 = getelementptr inbounds i8, i8* %32, i64 9
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = shl nuw nsw i32 %150, 16
  %152 = or i32 %151, %147
  %153 = getelementptr inbounds i8, i8* %32, i64 10
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = shl nuw nsw i32 %155, 8
  %157 = or i32 %152, %156
  %158 = getelementptr inbounds i8, i8* %32, i64 11
  br label %159

159:                                              ; preds = %129, %144
  %160 = phi i8* [ %128, %129 ], [ %158, %144 ]
  %161 = phi i32 [ %143, %129 ], [ %157, %144 ]
  %162 = load i8, i8* %160, align 1
  %163 = zext i8 %162 to i32
  %164 = or i32 %161, %163
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %171, label %166

166:                                              ; preds = %159
  %167 = zext i32 %164 to i64
  %168 = icmp ult i64 %167, %1
  br i1 %168, label %169, label %171

169:                                              ; preds = %166
  %170 = tail call fastcc zeroext i1 @_ZL20parse_encoded_originPKhmmbbP15SkEncodedOrigin(i8* %0, i64 %1, i64 %167, i1 zeroext %3, i1 zeroext false, i32* %5)
  br i1 %170, label %175, label %171

171:                                              ; preds = %159, %169, %166, %107, %103, %122, %95
  %172 = add nuw i32 %31, 1
  %173 = getelementptr inbounds i8, i8* %32, i64 12
  %174 = icmp ult i32 %172, %25
  br i1 %174, label %30, label %175

175:                                              ; preds = %171, %169, %9, %120, %6
  %176 = phi i1 [ false, %6 ], [ true, %120 ], [ false, %9 ], [ false, %171 ], [ true, %169 ]
  ret i1 %176
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
