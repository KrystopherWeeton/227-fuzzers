; ModuleID = '../../chrome/browser/vr/model/text_input_info.cc'
source_filename = "../../chrome/browser/vr/model/text_input_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.vr::TextInputInfo" = type { %"class.std::__1::basic_string", i32, i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.vr::EditedText" = type { %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"*, %"class.std::__1::__compressed_pair.10" }
%"class.vr::TextEditAction" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.vr::TextEditAction"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__16vectorIN2vr14TextEditActionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str.1 = private unnamed_addr constant [26 x i8] c"t(%s) s(%d, %d) c(%d, %d)\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c", previously \00", align 1

@_ZN2vr13TextInputInfoC1Ev = hidden unnamed_addr alias void (%"struct.vr::TextInputInfo"*), void (%"struct.vr::TextInputInfo"*)* @_ZN2vr13TextInputInfoC2Ev
@_ZN2vr13TextInputInfoC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE = hidden unnamed_addr alias void (%"struct.vr::TextInputInfo"*, %"class.std::__1::basic_string"*), void (%"struct.vr::TextInputInfo"*, %"class.std::__1::basic_string"*)* @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE
@_ZN2vr13TextInputInfoC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEii = hidden unnamed_addr alias void (%"struct.vr::TextInputInfo"*, %"class.std::__1::basic_string"*, i32, i32), void (%"struct.vr::TextInputInfo"*, %"class.std::__1::basic_string"*, i32, i32)* @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEii
@_ZN2vr13TextInputInfoC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii = hidden unnamed_addr alias void (%"struct.vr::TextInputInfo"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32), void (%"struct.vr::TextInputInfo"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32)* @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii
@_ZN2vr13TextInputInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.vr::TextInputInfo"*, %"struct.vr::TextInputInfo"*), void (%"struct.vr::TextInputInfo"*, %"struct.vr::TextInputInfo"*)* @_ZN2vr13TextInputInfoC2ERKS0_
@_ZN2vr10EditedTextC1Ev = hidden unnamed_addr alias void (%"struct.vr::EditedText"*), void (%"struct.vr::EditedText"*)* @_ZN2vr10EditedTextC2Ev
@_ZN2vr10EditedTextC1ERKS0_ = hidden unnamed_addr alias void (%"struct.vr::EditedText"*, %"struct.vr::EditedText"*), void (%"struct.vr::EditedText"*, %"struct.vr::EditedText"*)* @_ZN2vr10EditedTextC2ERKS0_
@_ZN2vr10EditedTextC1ERKNS_13TextInputInfoE = hidden unnamed_addr alias void (%"struct.vr::EditedText"*, %"struct.vr::TextInputInfo"*), void (%"struct.vr::EditedText"*, %"struct.vr::TextInputInfo"*)* @_ZN2vr10EditedTextC2ERKNS_13TextInputInfoE
@_ZN2vr10EditedTextC1ERKNS_13TextInputInfoES3_ = hidden unnamed_addr alias void (%"struct.vr::EditedText"*, %"struct.vr::TextInputInfo"*, %"struct.vr::TextInputInfo"*), void (%"struct.vr::EditedText"*, %"struct.vr::TextInputInfo"*, %"struct.vr::TextInputInfo"*)* @_ZN2vr10EditedTextC2ERKNS_13TextInputInfoES3_
@_ZN2vr10EditedTextC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE = hidden unnamed_addr alias void (%"struct.vr::EditedText"*, %"class.std::__1::basic_string"*), void (%"struct.vr::EditedText"*, %"class.std::__1::basic_string"*)* @_ZN2vr10EditedTextC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr13TextInputInfoC2Ev(%"struct.vr::TextInputInfo"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  store i8 0, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  store i16 0, i16* %5, align 8
  call void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii(%"struct.vr::TextInputInfo"* %0, %"class.std::__1::basic_string"* nonnull %2, i32 0, i32 0, i32 -1, i32 -1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii(%"struct.vr::TextInputInfo"*, %"class.std::__1::basic_string"* nocapture readonly, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = bitcast %"struct.vr::TextInputInfo"* %0 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #9
  br label %189

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = bitcast %"struct.vr::TextInputInfo"* %0 to i16*
  %22 = trunc i64 %18 to i8
  %23 = bitcast %"struct.vr::TextInputInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %14
  %26 = icmp ugt i64 %18, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"struct.vr::TextInputInfo"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #10
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %18, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #10
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #11
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"struct.vr::TextInputInfo"* %0 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %18, 1
  %45 = add i64 %18, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %18, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %16, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %16, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %16, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %16, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !2
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !2
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !5, !noalias !2
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !5, !noalias !2
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %16, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !2
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !2
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !5, !noalias !2
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !5, !noalias !2
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %16, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !2
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !2
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !5, !noalias !2
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !5, !noalias !2
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %16, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !2
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !2
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !5, !noalias !2
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !5, !noalias !2
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !7

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %16, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !2
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !2
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !5, !noalias !2
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !5, !noalias !2
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !9

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %16, %47 ], [ %16, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !11

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !12

189:                                              ; preds = %154, %159, %134, %11
  %190 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 1
  store i32 %2, i32* %190, align 8
  %191 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 2
  store i32 %3, i32* %191, align 4
  %192 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 3
  store i32 %4, i32* %192, align 8
  %193 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 4
  store i32 %5, i32* %193, align 4
  %194 = bitcast %"struct.vr::TextInputInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %194, i64 0, i32 1, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %189
  %199 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8
  br label %203

201:                                              ; preds = %189
  %202 = zext i8 %196 to i64
  br label %203

203:                                              ; preds = %201, %198
  %204 = phi i64 [ %200, %198 ], [ %202, %201 ]
  %205 = trunc i64 %204 to i32
  %206 = icmp slt i32 %205, %2
  %207 = select i1 %206, i32 %205, i32 %2
  store i32 %207, i32* %190, align 8
  %208 = icmp slt i32 %205, %3
  %209 = select i1 %208, i32 %205, i32 %3
  %210 = icmp slt i32 %209, %207
  %211 = select i1 %210, i32 %207, i32 %209
  store i32 %211, i32* %191, align 4
  %212 = icmp slt i32 %205, %4
  %213 = select i1 %212, i32 %205, i32 %4
  store i32 %213, i32* %192, align 8
  %214 = icmp slt i32 %205, %5
  %215 = select i1 %214, i32 %205, i32 %5
  store i32 %215, i32* %193, align 4
  %216 = icmp sgt i32 %215, %213
  br i1 %216, label %218, label %217

217:                                              ; preds = %203
  store i32 -1, i32* %192, align 8
  store i32 -1, i32* %193, align 4
  br label %218

218:                                              ; preds = %203, %217
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.vr::TextInputInfo"*, %"class.std::__1::basic_string"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #9
  br label %193

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #10
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #11
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = sub i64 %41, %52
  %54 = getelementptr i16, i16* %13, i64 %52
  %55 = getelementptr i16, i16* %40, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %13, i64 %64
  %67 = getelementptr i16, i16* %40, i64 %64
  %68 = bitcast i16* %66 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !13
  %70 = getelementptr i16, i16* %66, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !13
  %73 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !16, !noalias !13
  %74 = getelementptr i16, i16* %67, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !16, !noalias !13
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %13, i64 %76
  %78 = getelementptr i16, i16* %40, i64 %76
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !13
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !13
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !16, !noalias !13
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !16, !noalias !13
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %13, i64 %87
  %89 = getelementptr i16, i16* %40, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !13
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !13
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !16, !noalias !13
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !16, !noalias !13
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %13, i64 %98
  %100 = getelementptr i16, i16* %40, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !13
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !13
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !16, !noalias !13
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !16, !noalias !13
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !18

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %13, i64 %116
  %119 = getelementptr i16, i16* %40, i64 %116
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !13
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !13
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !16, !noalias !13
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !16, !noalias !13
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !19

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %53, %131 ]
  %135 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %55, %131 ]
  %137 = add i64 %134, -1
  %138 = and i64 %134, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i64 [ %146, %140 ], [ %134, %133 ]
  %142 = phi i16* [ %148, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %147, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %142, align 2
  store i16 %145, i16* %143, align 2
  %146 = add i64 %141, -1
  %147 = getelementptr inbounds i16, i16* %143, i64 1
  %148 = getelementptr inbounds i16, i16* %142, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !20

151:                                              ; preds = %140, %133
  %152 = phi i64 [ %134, %133 ], [ %146, %140 ]
  %153 = phi i16* [ %135, %133 ], [ %148, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %147, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i64 [ %182, %156 ], [ %152, %151 ]
  %158 = phi i16* [ %184, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %183, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %158, align 2
  store i16 %160, i16* %159, align 2
  %161 = getelementptr inbounds i16, i16* %159, i64 1
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %159, i64 2
  %165 = getelementptr inbounds i16, i16* %158, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %159, i64 3
  %168 = getelementptr inbounds i16, i16* %158, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %159, i64 4
  %171 = getelementptr inbounds i16, i16* %158, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %159, i64 5
  %174 = getelementptr inbounds i16, i16* %158, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %159, i64 6
  %177 = getelementptr inbounds i16, i16* %158, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %159, i64 7
  %180 = getelementptr inbounds i16, i16* %158, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %157, -8
  %183 = getelementptr inbounds i16, i16* %159, i64 8
  %184 = getelementptr inbounds i16, i16* %158, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !21

186:                                              ; preds = %151, %156, %131
  %187 = load i8, i8* %5, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = trunc i64 %191 to i32
  br label %197

193:                                              ; preds = %8, %186
  %194 = phi i8 [ %6, %8 ], [ %187, %186 ]
  %195 = zext i8 %194 to i32
  %196 = zext i8 %194 to i32
  br label %197

197:                                              ; preds = %189, %193
  %198 = phi i32 [ %192, %189 ], [ %196, %193 ]
  %199 = phi i32 [ %192, %189 ], [ %195, %193 ]
  call void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii(%"struct.vr::TextInputInfo"* %0, %"class.std::__1::basic_string"* nonnull %3, i32 %199, i32 %198, i32 -1, i32 -1)
  %200 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %200, i64 0, i32 1, i32 1
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %197
  %205 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %206 = load i8*, i8** %205, align 8
  tail call void @_ZdlPv(i8* %206) #11
  br label %207

207:                                              ; preds = %197, %204
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEii(%"struct.vr::TextInputInfo"*, %"class.std::__1::basic_string"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 24, i1 false) #9
  br label %188

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #10
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #10
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #11
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !22
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !22
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !25, !noalias !22
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !25, !noalias !22
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !22
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !22
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !25, !noalias !22
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !25, !noalias !22
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !22
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !22
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !25, !noalias !22
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !25, !noalias !22
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !22
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !22
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !25, !noalias !22
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !25, !noalias !22
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !27

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !22
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !22
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !25, !noalias !22
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !25, !noalias !22
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !28

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !29

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !30

188:                                              ; preds = %153, %158, %133, %10
  call void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii(%"struct.vr::TextInputInfo"* %0, %"class.std::__1::basic_string"* nonnull %5, i32 %2, i32 %3, i32 -1, i32 -1)
  %189 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %189, i64 0, i32 1, i32 1
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %195 = load i8*, i8** %194, align 8
  tail call void @_ZdlPv(i8* %195) #11
  br label %196

196:                                              ; preds = %188, %193
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr13TextInputInfo12ClampIndicesEv(%"struct.vr::TextInputInfo"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.vr::TextInputInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = zext i8 %4 to i64
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ %8, %6 ], [ %10, %9 ]
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %13
  %17 = select i1 %16, i32 %13, i32 %15
  store i32 %17, i32* %14, align 8
  %18 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, %13
  %21 = select i1 %20, i32 %13, i32 %19
  %22 = icmp slt i32 %21, %17
  %23 = select i1 %22, i32 %17, i32 %21
  store i32 %23, i32* %18, align 4
  %24 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, %13
  %27 = select i1 %26, i32 %13, i32 %25
  store i32 %27, i32* %24, align 8
  %28 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, %13
  %31 = select i1 %30, i32 %13, i32 %29
  store i32 %31, i32* %28, align 4
  %32 = icmp sgt i32 %31, %27
  br i1 %32, label %34, label %33

33:                                               ; preds = %11
  store i32 -1, i32* %24, align 8
  store i32 -1, i32* %28, align 4
  br label %34

34:                                               ; preds = %11, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr13TextInputInfoC2ERKS0_(%"struct.vr::TextInputInfo"*, %"struct.vr::TextInputInfo"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.vr::TextInputInfo"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.vr::TextInputInfo"* %0 to i8*
  %9 = bitcast %"struct.vr::TextInputInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #9
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.vr::TextInputInfo"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.vr::TextInputInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.vr::TextInputInfo"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #10
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #10
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.vr::TextInputInfo"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !31
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !31
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !34, !noalias !31
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !34, !noalias !31
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !31
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !31
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !34, !noalias !31
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !34, !noalias !31
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !31
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !31
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !34, !noalias !31
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !34, !noalias !31
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !31
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !31
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !34, !noalias !31
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !34, !noalias !31
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !36

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !31
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !31
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !34, !noalias !31
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !34, !noalias !31
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !37

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !38

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !39

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  store i32 %188, i32* %186, align 8
  %189 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 2
  %190 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 2
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 3
  %193 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 3
  %194 = load i32, i32* %193, align 8
  store i32 %194, i32* %192, align 8
  %195 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 4
  %196 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 4
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vr13TextInputInfoeqERKS0_(%"struct.vr::TextInputInfo"* nocapture readonly, %"struct.vr::TextInputInfo"* nocapture readonly dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.vr::TextInputInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.vr::TextInputInfo"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %67

20:                                               ; preds = %2
  %21 = icmp eq i64 %10, 0
  br i1 %21, label %43, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"struct.vr::TextInputInfo"* %1 to i16*
  %26 = select i1 %14, i16* %24, i16* %25
  %27 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = bitcast %"struct.vr::TextInputInfo"* %0 to i16*
  %30 = select i1 %6, i16* %28, i16* %29
  br label %31

31:                                               ; preds = %38, %22
  %32 = phi i64 [ %39, %38 ], [ %10, %22 ]
  %33 = phi i16* [ %41, %38 ], [ %26, %22 ]
  %34 = phi i16* [ %40, %38 ], [ %30, %22 ]
  %35 = load i16, i16* %34, align 2
  %36 = load i16, i16* %33, align 2
  %37 = icmp eq i16 %36, %35
  br i1 %37, label %38, label %67

38:                                               ; preds = %31
  %39 = add i64 %32, -1
  %40 = getelementptr inbounds i16, i16* %34, i64 1
  %41 = getelementptr inbounds i16, i16* %33, i64 1
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %43, label %31

43:                                               ; preds = %38, %20
  %44 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %67

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %55, label %67

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 4
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 4
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %63, %65
  br label %67

67:                                               ; preds = %31, %2, %61, %55, %49, %43
  %68 = phi i1 [ false, %55 ], [ false, %49 ], [ false, %43 ], [ %66, %61 ], [ false, %2 ], [ false, %31 ]
  ret i1 %68
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vr13TextInputInfoneERKS0_(%"struct.vr::TextInputInfo"* nocapture readonly, %"struct.vr::TextInputInfo"* nocapture readonly dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.vr::TextInputInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.vr::TextInputInfo"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %67

20:                                               ; preds = %2
  %21 = icmp eq i64 %10, 0
  br i1 %21, label %43, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"struct.vr::TextInputInfo"* %1 to i16*
  %26 = select i1 %14, i16* %24, i16* %25
  %27 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = bitcast %"struct.vr::TextInputInfo"* %0 to i16*
  %30 = select i1 %6, i16* %28, i16* %29
  br label %31

31:                                               ; preds = %38, %22
  %32 = phi i64 [ %39, %38 ], [ %10, %22 ]
  %33 = phi i16* [ %41, %38 ], [ %26, %22 ]
  %34 = phi i16* [ %40, %38 ], [ %30, %22 ]
  %35 = load i16, i16* %34, align 2
  %36 = load i16, i16* %33, align 2
  %37 = icmp eq i16 %36, %35
  br i1 %37, label %38, label %67

38:                                               ; preds = %31
  %39 = add i64 %32, -1
  %40 = getelementptr inbounds i16, i16* %34, i64 1
  %41 = getelementptr inbounds i16, i16* %33, i64 1
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %43, label %31

43:                                               ; preds = %38, %20
  %44 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %67

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %55, label %67

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 4
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 4
  %65 = load i32, i32* %64, align 4
  %66 = icmp ne i32 %63, %65
  br label %67

67:                                               ; preds = %31, %2, %43, %49, %55, %61
  %68 = phi i1 [ true, %55 ], [ true, %49 ], [ true, %43 ], [ %66, %61 ], [ true, %2 ], [ true, %31 ]
  ret i1 %68
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2vr13TextInputInfo13SelectionSizeEv(%"struct.vr::TextInputInfo"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sub nsw i32 %3, %5
  %7 = icmp slt i32 %6, 0
  %8 = sub nsw i32 0, %6
  %9 = select i1 %7, i32 %8, i32 %6
  %10 = zext i32 %9 to i64
  ret i64 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2vr13TextInputInfo15CompositionSizeEv(%"struct.vr::TextInputInfo"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = sub nsw i32 %3, %5
  %7 = sext i32 %6 to i64
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv(%"class.std::__1::basic_string"* noalias sret, %"struct.vr::TextInputInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  %8 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0
  br i1 %7, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %11, %9 ], [ %4, %2 ]
  %14 = sext i32 %13 to i64
  %15 = bitcast %"struct.vr::TextInputInfo"* %1 to %"class.std::__1::allocator"*
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %8, i64 0, i64 %14, %"class.std::__1::allocator"* dereferenceable(1) %15) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2vr13TextInputInfo13ComposingTextEv(%"class.std::__1::basic_string"* noalias sret, %"struct.vr::TextInputInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, %4
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  store i8 0, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 0, i16* %11, align 8
  br label %18

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0
  %14 = sext i32 %4 to i64
  %15 = sub nsw i32 %6, %4
  %16 = sext i32 %15 to i64
  %17 = bitcast %"struct.vr::TextInputInfo"* %1 to %"class.std::__1::allocator"*
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %13, i64 %14, i64 %16, %"class.std::__1::allocator"* dereferenceable(1) %17) #9
  br label %18

18:                                               ; preds = %12, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2vr13TextInputInfo8ToStringEv(%"class.std::__1::basic_string.1"* noalias sret, %"struct.vr::TextInputInfo"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.1", align 8
  %4 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = bitcast %"struct.vr::TextInputInfo"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = bitcast %"struct.vr::TextInputInfo"* %1 to i16*
  %12 = select i1 %8, i16* %10, i16* %11
  %13 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %3, i16* %12, i64 %16) #9
  %17 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = select i1 %20, i8* %22, i8* %4
  %24 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  call void (%"class.std::__1::basic_string.1"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* sret %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* %23, i32 %25, i32 %27, i32 %29, i32 %31) #9
  %32 = load i8, i8* %18, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %2
  %35 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %2, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr10EditedTextC2Ev(%"struct.vr::EditedText"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  store i8 0, i8* %7, align 1
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  store i16 0, i16* %8, align 8
  call void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii(%"struct.vr::TextInputInfo"* %4, %"class.std::__1::basic_string"* nonnull %3, i32 0, i32 0, i32 -1, i32 -1) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  %9 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  store i8 0, i8* %12, align 1
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  store i16 0, i16* %13, align 8
  call void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii(%"struct.vr::TextInputInfo"* %9, %"class.std::__1::basic_string"* nonnull %2, i32 0, i32 0, i32 -1, i32 -1) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr10EditedTextC2ERKS0_(%"struct.vr::EditedText"*, %"struct.vr::EditedText"* nocapture readonly dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0
  tail call void @_ZN2vr13TextInputInfoC2ERKS0_(%"struct.vr::TextInputInfo"* %3, %"struct.vr::TextInputInfo"* dereferenceable(40) %4)
  %5 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1
  tail call void @_ZN2vr13TextInputInfoC2ERKS0_(%"struct.vr::TextInputInfo"* %5, %"struct.vr::TextInputInfo"* dereferenceable(40) %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr10EditedTextC2ERKNS_13TextInputInfoE(%"struct.vr::EditedText"*, %"struct.vr::TextInputInfo"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0
  tail call void @_ZN2vr13TextInputInfoC2ERKS0_(%"struct.vr::TextInputInfo"* %4, %"struct.vr::TextInputInfo"* dereferenceable(40) %1)
  %5 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  store i8 0, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  store i16 0, i16* %9, align 8
  call void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii(%"struct.vr::TextInputInfo"* %5, %"class.std::__1::basic_string"* nonnull %3, i32 0, i32 0, i32 -1, i32 -1) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr10EditedTextC2ERKNS_13TextInputInfoES3_(%"struct.vr::EditedText"*, %"struct.vr::TextInputInfo"* nocapture readonly dereferenceable(40), %"struct.vr::TextInputInfo"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0
  tail call void @_ZN2vr13TextInputInfoC2ERKS0_(%"struct.vr::TextInputInfo"* %4, %"struct.vr::TextInputInfo"* dereferenceable(40) %1)
  %5 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1
  tail call void @_ZN2vr13TextInputInfoC2ERKS0_(%"struct.vr::TextInputInfo"* %5, %"struct.vr::TextInputInfo"* dereferenceable(40) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr10EditedTextC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.vr::EditedText"*, %"class.std::__1::basic_string"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 24, i1 false) #9
  br label %188

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #10
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #10
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #11
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !40
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !40
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !43, !noalias !40
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !43, !noalias !40
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !40
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !40
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !43, !noalias !40
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !43, !noalias !40
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !40
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !40
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !43, !noalias !40
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !43, !noalias !40
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !40
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !40
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !43, !noalias !40
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !43, !noalias !40
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !45

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !40
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !40
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !43, !noalias !40
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !43, !noalias !40
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !46

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !47

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !48

188:                                              ; preds = %153, %158, %133, %10
  call void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.vr::TextInputInfo"* %5, %"class.std::__1::basic_string"* nonnull %4)
  %189 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %189, i64 0, i32 1, i32 1
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %195 = load i8*, i8** %194, align 8
  tail call void @_ZdlPv(i8* %195) #11
  br label %196

196:                                              ; preds = %188, %193
  %197 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1
  %198 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198)
  %199 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %199, i64 0, i32 1, i32 1
  store i8 0, i8* %200, align 1
  %201 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  store i16 0, i16* %201, align 8
  call void @_ZN2vr13TextInputInfoC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiiii(%"struct.vr::TextInputInfo"* %197, %"class.std::__1::basic_string"* nonnull %3, i32 0, i32 0, i32 -1, i32 -1) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vr10EditedTexteqERKS0_(%"struct.vr::EditedText"* nocapture readonly, %"struct.vr::EditedText"* nocapture readonly dereferenceable(80)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.vr::EditedText"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.vr::EditedText"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %134

20:                                               ; preds = %2
  %21 = icmp eq i64 %10, 0
  br i1 %21, label %43, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"struct.vr::EditedText"* %1 to i16*
  %26 = select i1 %14, i16* %24, i16* %25
  %27 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = bitcast %"struct.vr::EditedText"* %0 to i16*
  %30 = select i1 %6, i16* %28, i16* %29
  br label %31

31:                                               ; preds = %38, %22
  %32 = phi i64 [ %39, %38 ], [ %10, %22 ]
  %33 = phi i16* [ %41, %38 ], [ %26, %22 ]
  %34 = phi i16* [ %40, %38 ], [ %30, %22 ]
  %35 = load i16, i16* %34, align 2
  %36 = load i16, i16* %33, align 2
  %37 = icmp eq i16 %36, %35
  br i1 %37, label %38, label %134

38:                                               ; preds = %31
  %39 = add i64 %32, -1
  %40 = getelementptr inbounds i16, i16* %34, i64 1
  %41 = getelementptr inbounds i16, i16* %33, i64 1
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %43, label %31

43:                                               ; preds = %38, %20
  %44 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %134

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %55, label %134

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %134

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0, i32 4
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 4
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %67, label %134

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1
  %70 = bitcast %"struct.vr::TextInputInfo"* %68 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %72 to i64
  %77 = select i1 %73, i64 %75, i64 %76
  %78 = bitcast %"struct.vr::TextInputInfo"* %69 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %78, i64 0, i32 1, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = zext i8 %80 to i64
  %85 = select i1 %81, i64 %83, i64 %84
  %86 = icmp eq i64 %77, %85
  br i1 %86, label %87, label %134

87:                                               ; preds = %67
  %88 = icmp eq i64 %77, 0
  br i1 %88, label %110, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i16*, i16** %90, align 8
  %92 = bitcast %"struct.vr::TextInputInfo"* %69 to i16*
  %93 = select i1 %81, i16* %91, i16* %92
  %94 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i16*, i16** %94, align 8
  %96 = bitcast %"struct.vr::TextInputInfo"* %68 to i16*
  %97 = select i1 %73, i16* %95, i16* %96
  br label %98

98:                                               ; preds = %105, %89
  %99 = phi i64 [ %106, %105 ], [ %77, %89 ]
  %100 = phi i16* [ %108, %105 ], [ %93, %89 ]
  %101 = phi i16* [ %107, %105 ], [ %97, %89 ]
  %102 = load i16, i16* %101, align 2
  %103 = load i16, i16* %100, align 2
  %104 = icmp eq i16 %103, %102
  br i1 %104, label %105, label %134

105:                                              ; preds = %98
  %106 = add i64 %99, -1
  %107 = getelementptr inbounds i16, i16* %101, i64 1
  %108 = getelementptr inbounds i16, i16* %100, i64 1
  %109 = icmp eq i64 %106, 0
  br i1 %109, label %110, label %98

110:                                              ; preds = %105, %87
  %111 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %112, %114
  br i1 %115, label %116, label %134

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %118, %120
  br i1 %121, label %122, label %134

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %124, %126
  br i1 %127, label %128, label %134

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1, i32 4
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 4
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %130, %132
  br label %134

134:                                              ; preds = %31, %98, %2, %43, %49, %55, %128, %122, %116, %110, %67, %61
  %135 = phi i1 [ false, %61 ], [ false, %122 ], [ false, %116 ], [ false, %110 ], [ %133, %128 ], [ false, %67 ], [ false, %55 ], [ false, %49 ], [ false, %43 ], [ false, %2 ], [ false, %98 ], [ false, %31 ]
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr10EditedText6UpdateERKNS_13TextInputInfoE(%"struct.vr::EditedText"*, %"struct.vr::TextInputInfo"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %4) #9
  %6 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 1, i32 1
  %7 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i32* %6 to i8*
  %9 = bitcast i32* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #9
  %10 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 0
  %11 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %10) #9
  %12 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %1, i64 0, i32 1
  %13 = bitcast i32* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %13, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2vr10EditedText8ToStringEv(%"class.std::__1::basic_string.1"* noalias nocapture sret, %"struct.vr::EditedText"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.1", align 8
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9, !noalias !49
  %11 = bitcast %"struct.vr::EditedText"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1, !noalias !49
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8, !noalias !49
  %17 = bitcast %"struct.vr::EditedText"* %1 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  %19 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !49
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %4, i16* %18, i64 %22) #9, !noalias !49
  %23 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1, !noalias !49
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !49
  %29 = select i1 %26, i8* %28, i8* %10
  %30 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8, !noalias !49
  %32 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4, !noalias !49
  %34 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 3
  %35 = load i32, i32* %34, align 8, !noalias !49
  %36 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 4
  %37 = load i32, i32* %36, align 4, !noalias !49
  call void (%"class.std::__1::basic_string.1"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* nonnull sret %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* %29, i32 %31, i32 %33, i32 %35, i32 %37) #9
  %38 = load i8, i8* %24, align 1, !noalias !49
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %2
  %41 = load i8*, i8** %27, align 8, !noalias !49
  call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %2, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9, !noalias !49
  %43 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.1"* nonnull %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #9, !noalias !52
  %44 = bitcast %"class.std::__1::basic_string.1"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %44, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #9, !noalias !52
  %45 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #9, !noalias !55
  %48 = bitcast %"struct.vr::TextInputInfo"* %46 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1, !noalias !55
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8, !noalias !55
  %54 = bitcast %"struct.vr::TextInputInfo"* %46 to i16*
  %55 = select i1 %51, i16* %53, i16* %54
  %56 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8, !noalias !55
  %58 = zext i8 %50 to i64
  %59 = select i1 %51, i64 %57, i64 %58
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %3, i16* %55, i64 %59) #9, !noalias !55
  %60 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1, !noalias !55
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8, !noalias !55
  %66 = select i1 %63, i8* %65, i8* %47
  %67 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 1
  %68 = load i32, i32* %67, align 8, !noalias !55
  %69 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 2
  %70 = load i32, i32* %69, align 4, !noalias !55
  %71 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 3
  %72 = load i32, i32* %71, align 8, !noalias !55
  %73 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 4
  %74 = load i32, i32* %73, align 4, !noalias !55
  call void (%"class.std::__1::basic_string.1"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* nonnull sret %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* %66, i32 %68, i32 %70, i32 %72, i32 %74) #9
  %75 = load i8, i8* %61, align 1, !noalias !55
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %42
  %78 = load i8*, i8** %64, align 8, !noalias !55
  call void @_ZdlPv(i8* %78) #11
  br label %79

79:                                               ; preds = %42, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #9, !noalias !55
  %80 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1, !noalias !58
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8, !noalias !58
  %86 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8, !noalias !58
  %88 = zext i8 %82 to i64
  %89 = select i1 %83, i8* %85, i8* %45
  %90 = select i1 %83, i64 %87, i64 %88
  %91 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.1"* nonnull %5, i8* %89, i64 %90) #9, !noalias !58
  %92 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  %93 = bitcast %"class.std::__1::basic_string.1"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #9, !noalias !58
  %94 = load i8, i8* %81, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %79
  %97 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %97) #11
  br label %98

98:                                               ; preds = %79, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  %99 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #11
  br label %106

106:                                              ; preds = %98, %103
  %107 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #11
  br label %114

114:                                              ; preds = %106, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2vr10EditedText7GetDiffEv(%"class.std::__1::vector"* noalias sret, %"struct.vr::EditedText"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.vr::TextEditAction", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.vr::TextEditAction", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.vr::TextEditAction", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.vr::TextEditAction", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9
  %18 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1
  %19 = bitcast %"struct.vr::EditedText"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = bitcast %"struct.vr::TextInputInfo"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = icmp eq i64 %26, %34
  br i1 %35, label %36, label %83

36:                                               ; preds = %2
  %37 = icmp eq i64 %26, 0
  br i1 %37, label %59, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = bitcast %"struct.vr::TextInputInfo"* %18 to i16*
  %42 = select i1 %30, i16* %40, i16* %41
  %43 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = bitcast %"struct.vr::EditedText"* %1 to i16*
  %46 = select i1 %22, i16* %44, i16* %45
  br label %47

47:                                               ; preds = %54, %38
  %48 = phi i64 [ %55, %54 ], [ %26, %38 ]
  %49 = phi i16* [ %57, %54 ], [ %42, %38 ]
  %50 = phi i16* [ %56, %54 ], [ %46, %38 ]
  %51 = load i16, i16* %50, align 2
  %52 = load i16, i16* %49, align 2
  %53 = icmp eq i16 %52, %51
  br i1 %53, label %54, label %83

54:                                               ; preds = %47
  %55 = add i64 %48, -1
  %56 = getelementptr inbounds i16, i16* %50, i64 1
  %57 = getelementptr inbounds i16, i16* %49, i64 1
  %58 = icmp eq i64 %55, 0
  br i1 %58, label %59, label %47

59:                                               ; preds = %54, %36
  %60 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %61, %63
  br i1 %64, label %65, label %83

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %71, label %83

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 4
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 4
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %448, label %83

83:                                               ; preds = %47, %2, %59, %65, %71, %77
  %84 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 3
  %85 = load i32, i32* %84, align 8, !noalias !61
  %86 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 4
  %87 = load i32, i32* %86, align 4, !noalias !61
  %88 = icmp eq i32 %85, %87
  %89 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 0
  br i1 %88, label %90, label %93

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 8, !noalias !61
  br label %93

93:                                               ; preds = %83, %90
  %94 = phi i32 [ %92, %90 ], [ %85, %83 ]
  %95 = sext i32 %94 to i64
  %96 = bitcast %"struct.vr::EditedText"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %89, i64 0, i64 %95, %"class.std::__1::allocator"* dereferenceable(1) %96) #9
  %97 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 3
  %98 = load i32, i32* %97, align 8, !noalias !64
  %99 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 4
  %100 = load i32, i32* %99, align 4, !noalias !64
  %101 = icmp eq i32 %98, %100
  %102 = getelementptr inbounds %"struct.vr::TextInputInfo", %"struct.vr::TextInputInfo"* %18, i64 0, i32 0
  br i1 %101, label %103, label %106

103:                                              ; preds = %93
  %104 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 1
  %105 = load i32, i32* %104, align 8, !noalias !64
  br label %106

106:                                              ; preds = %93, %103
  %107 = phi i32 [ %105, %103 ], [ %98, %93 ]
  %108 = sext i32 %107 to i64
  %109 = bitcast %"struct.vr::TextInputInfo"* %18 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %102, i64 0, i64 %108, %"class.std::__1::allocator"* dereferenceable(1) %109) #9
  %110 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = zext i8 %112 to i64
  %117 = select i1 %113, i64 %115, i64 %116
  %118 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %118, i64 0, i32 1, i32 1
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = zext i8 %120 to i64
  %125 = select i1 %121, i64 %123, i64 %124
  %126 = icmp ne i64 %117, 0
  %127 = icmp ne i64 %125, 0
  %128 = and i1 %126, %127
  br i1 %128, label %129, label %150

129:                                              ; preds = %106
  %130 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i16*, i16** %131, align 8
  %135 = select i1 %113, i16* %134, i16* %130
  %136 = load i16*, i16** %133, align 8
  %137 = select i1 %121, i16* %136, i16* %132
  br label %138

138:                                              ; preds = %145, %129
  %139 = phi i64 [ 0, %129 ], [ %146, %145 ]
  %140 = getelementptr inbounds i16, i16* %135, i64 %139
  %141 = load i16, i16* %140, align 2
  %142 = getelementptr inbounds i16, i16* %137, i64 %139
  %143 = load i16, i16* %142, align 2
  %144 = icmp eq i16 %141, %143
  br i1 %144, label %145, label %150

145:                                              ; preds = %138
  %146 = add nuw i64 %139, 1
  %147 = icmp ult i64 %146, %117
  %148 = icmp ult i64 %146, %125
  %149 = and i1 %147, %148
  br i1 %149, label %138, label %150

150:                                              ; preds = %138, %145, %106
  %151 = phi i64 [ 0, %106 ], [ %139, %138 ], [ %146, %145 ]
  br i1 %121, label %152, label %156

152:                                              ; preds = %150
  %153 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %154 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %154) #11
  %155 = load i8, i8* %111, align 1
  br label %156

156:                                              ; preds = %150, %152
  %157 = phi i8 [ %112, %150 ], [ %155, %152 ]
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %156
  %160 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %161 = load i8*, i8** %160, align 8
  call void @_ZdlPv(i8* %161) #11
  br label %162

162:                                              ; preds = %156, %159
  %163 = load i32, i32* %99, align 4
  %164 = load i32, i32* %97, align 8
  %165 = sub nsw i32 %163, %164
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = load i32, i32* %86, align 4
  %169 = load i32, i32* %84, align 8
  %170 = icmp eq i32 %168, %169
  br label %171

171:                                              ; preds = %162, %167
  %172 = phi i1 [ false, %162 ], [ %170, %167 ]
  %173 = load i32, i32* %84, align 8
  %174 = icmp ne i32 %164, %173
  %175 = icmp ne i32 %165, 0
  %176 = and i1 %175, %174
  %177 = or i1 %172, %176
  br i1 %177, label %178, label %208

178:                                              ; preds = %171
  %179 = bitcast %"class.vr::TextEditAction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %179) #9
  call void @_ZN2vr14TextEditActionC1ENS_18TextEditActionTypeE(%"class.vr::TextEditAction"* nonnull %5, i32 0) #9
  %180 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %15, align 8
  %181 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %16, align 8
  %182 = icmp ult %"class.vr::TextEditAction"* %180, %181
  br i1 %182, label %183, label %197

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %180, i64 0, i32 0
  %185 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %5, i64 0, i32 0
  %186 = load i32, i32* %185, align 8
  store i32 %186, i32* %184, align 8
  %187 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %180, i64 0, i32 2
  %188 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %5, i64 0, i32 2
  %189 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  %190 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 24, i1 false) #9
  %191 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %180, i64 0, i32 3
  %192 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %5, i64 0, i32 3
  %193 = load i32, i32* %192, align 8
  store i32 %193, i32* %191, align 8
  %194 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %180, i64 1
  %195 = ptrtoint %"class.vr::TextEditAction"* %194 to i64
  %196 = bitcast %"class.vr::TextEditAction"** %15 to i64*
  store i64 %195, i64* %196, align 8
  br label %207

197:                                              ; preds = %178
  call void @_ZNSt3__16vectorIN2vr14TextEditActionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"class.vr::TextEditAction"* nonnull dereferenceable(40) %5) #9
  %198 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %5, i64 0, i32 2
  %199 = bitcast %"class.std::__1::basic_string"* %198 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %199, i64 0, i32 1, i32 1
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %207

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %5, i64 0, i32 2
  %205 = bitcast %"class.std::__1::basic_string"* %204 to i8**
  %206 = load i8*, i8** %205, align 8
  call void @_ZdlPv(i8* %206) #11
  br label %207

207:                                              ; preds = %183, %197, %203
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %179) #9
  br label %208

208:                                              ; preds = %171, %207
  %209 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 2
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 1, i32 1
  %212 = load i32, i32* %211, align 8
  %213 = sub nsw i32 %210, %212
  %214 = icmp slt i32 %213, 0
  %215 = sub nsw i32 0, %213
  %216 = select i1 %214, i32 %215, i32 %213
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %228, label %218

218:                                              ; preds = %208
  %219 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 1
  %222 = load i32, i32* %221, align 8
  %223 = sub nsw i32 %220, %222
  %224 = icmp slt i32 %223, 0
  %225 = sub nsw i32 0, %223
  %226 = select i1 %224, i32 %225, i32 %223
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %292, label %228

228:                                              ; preds = %208, %218
  %229 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #9
  %230 = load i32, i32* %97, align 8, !noalias !67
  %231 = load i32, i32* %99, align 4, !noalias !67
  %232 = icmp eq i32 %230, %231
  %233 = select i1 %232, i32 %212, i32 %230
  %234 = sext i32 %233 to i64
  %235 = bitcast %"struct.vr::TextInputInfo"* %18 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %102, i64 0, i64 %234, %"class.std::__1::allocator"* dereferenceable(1) %235) #9
  %236 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %236, i64 0, i32 1, i32 1
  %238 = load i8, i8* %237, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %228
  %241 = zext i8 %238 to i64
  br label %247

242:                                              ; preds = %228
  %243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %246 = load i8*, i8** %245, align 8
  call void @_ZdlPv(i8* %246) #11
  br label %247

247:                                              ; preds = %240, %242
  %248 = phi i64 [ %241, %240 ], [ %244, %242 ]
  %249 = sub i64 %248, %151
  %250 = trunc i64 %249 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #9
  %251 = icmp sgt i32 %250, 0
  br i1 %251, label %252, label %292

252:                                              ; preds = %247
  %253 = bitcast %"class.vr::TextEditAction"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %253) #9
  %254 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %254, i64 0, i32 1, i32 1
  store i8 0, i8* %255, align 1
  %256 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  store i16 0, i16* %256, align 8
  %257 = sub nsw i32 0, %250
  call void @_ZN2vr14TextEditActionC1ENS_18TextEditActionTypeENSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEi(%"class.vr::TextEditAction"* nonnull %7, i32 3, %"class.std::__1::basic_string"* nonnull %8, i32 %257) #9
  %258 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %15, align 8
  %259 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %16, align 8
  %260 = icmp ult %"class.vr::TextEditAction"* %258, %259
  br i1 %260, label %261, label %275

261:                                              ; preds = %252
  %262 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %258, i64 0, i32 0
  %263 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %7, i64 0, i32 0
  %264 = load i32, i32* %263, align 8
  store i32 %264, i32* %262, align 8
  %265 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %258, i64 0, i32 2
  %266 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %7, i64 0, i32 2
  %267 = bitcast %"class.std::__1::basic_string"* %265 to i8*
  %268 = bitcast %"class.std::__1::basic_string"* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 8 %268, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %268, i8 0, i64 24, i1 false) #9
  %269 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %258, i64 0, i32 3
  %270 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %7, i64 0, i32 3
  %271 = load i32, i32* %270, align 8
  store i32 %271, i32* %269, align 8
  %272 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %258, i64 1
  %273 = ptrtoint %"class.vr::TextEditAction"* %272 to i64
  %274 = bitcast %"class.vr::TextEditAction"** %15 to i64*
  store i64 %273, i64* %274, align 8
  br label %285

275:                                              ; preds = %252
  call void @_ZNSt3__16vectorIN2vr14TextEditActionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"class.vr::TextEditAction"* nonnull dereferenceable(40) %7) #9
  %276 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %7, i64 0, i32 2
  %277 = bitcast %"class.std::__1::basic_string"* %276 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %277, i64 0, i32 1, i32 1
  %279 = load i8, i8* %278, align 1
  %280 = icmp slt i8 %279, 0
  br i1 %280, label %281, label %285

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %7, i64 0, i32 2
  %283 = bitcast %"class.std::__1::basic_string"* %282 to i8**
  %284 = load i8*, i8** %283, align 8
  call void @_ZdlPv(i8* %284) #11
  br label %285

285:                                              ; preds = %261, %275, %281
  %286 = load i8, i8* %255, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %285
  %289 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %290 = load i8*, i8** %289, align 8
  call void @_ZdlPv(i8* %290) #11
  br label %291

291:                                              ; preds = %285, %288
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %253) #9
  br label %292

292:                                              ; preds = %247, %291, %218
  %293 = phi i1 [ false, %247 ], [ false, %291 ], [ true, %218 ]
  %294 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %294) #9
  %295 = load i32, i32* %84, align 8, !noalias !70
  %296 = load i32, i32* %86, align 4, !noalias !70
  %297 = icmp eq i32 %295, %296
  br i1 %297, label %298, label %301

298:                                              ; preds = %292
  %299 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 1
  %300 = load i32, i32* %299, align 8, !noalias !70
  br label %301

301:                                              ; preds = %292, %298
  %302 = phi i32 [ %300, %298 ], [ %295, %292 ]
  %303 = sext i32 %302 to i64
  %304 = bitcast %"struct.vr::EditedText"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %89, i64 0, i64 %303, %"class.std::__1::allocator"* dereferenceable(1) %304) #9
  %305 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %306 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %305, i64 0, i32 1, i32 1
  %307 = load i8, i8* %306, align 1
  %308 = icmp slt i8 %307, 0
  br i1 %308, label %314, label %309

309:                                              ; preds = %301
  %310 = zext i8 %307 to i64
  %311 = shl i64 %151, 32
  %312 = ashr exact i64 %311, 32
  %313 = sub nsw i64 %310, %312
  br label %322

314:                                              ; preds = %301
  %315 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %316 = load i64, i64* %315, align 8
  %317 = shl i64 %151, 32
  %318 = ashr exact i64 %317, 32
  %319 = sub i64 %316, %318
  %320 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %321 = load i8*, i8** %320, align 8
  call void @_ZdlPv(i8* %321) #11
  br label %322

322:                                              ; preds = %309, %314
  %323 = phi i64 [ %313, %309 ], [ %319, %314 ]
  %324 = phi i64 [ %312, %309 ], [ %318, %314 ]
  %325 = trunc i64 %323 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %294) #9
  %326 = icmp sgt i32 %325, 0
  %327 = or i1 %293, %326
  br i1 %327, label %328, label %388

328:                                              ; preds = %322
  %329 = bitcast %"class.vr::TextEditAction"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %329) #9
  %330 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %330) #9
  %331 = load i32, i32* %84, align 8, !noalias !73
  %332 = load i32, i32* %86, align 4, !noalias !73
  %333 = icmp eq i32 %331, %332
  br i1 %333, label %334, label %337

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"struct.vr::EditedText", %"struct.vr::EditedText"* %1, i64 0, i32 0, i32 1
  %336 = load i32, i32* %335, align 8, !noalias !73
  br label %337

337:                                              ; preds = %328, %334
  %338 = phi i32 [ %336, %334 ], [ %331, %328 ]
  %339 = sext i32 %338 to i64
  %340 = bitcast %"struct.vr::EditedText"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* dereferenceable(24) %89, i64 0, i64 %339, %"class.std::__1::allocator"* dereferenceable(1) %340) #9
  %341 = shl i64 %323, 32
  %342 = ashr exact i64 %341, 32
  %343 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i64 %324, i64 %342, %"class.std::__1::allocator"* nonnull dereferenceable(1) %343) #9
  call void @_ZN2vr14TextEditActionC1ENS_18TextEditActionTypeENSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEi(%"class.vr::TextEditAction"* nonnull %10, i32 1, %"class.std::__1::basic_string"* nonnull %11, i32 %325) #9
  %344 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %15, align 8
  %345 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %16, align 8
  %346 = icmp ult %"class.vr::TextEditAction"* %344, %345
  br i1 %346, label %347, label %361

347:                                              ; preds = %337
  %348 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %344, i64 0, i32 0
  %349 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %10, i64 0, i32 0
  %350 = load i32, i32* %349, align 8
  store i32 %350, i32* %348, align 8
  %351 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %344, i64 0, i32 2
  %352 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %10, i64 0, i32 2
  %353 = bitcast %"class.std::__1::basic_string"* %351 to i8*
  %354 = bitcast %"class.std::__1::basic_string"* %352 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %353, i8* align 8 %354, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %354, i8 0, i64 24, i1 false) #9
  %355 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %344, i64 0, i32 3
  %356 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %10, i64 0, i32 3
  %357 = load i32, i32* %356, align 8
  store i32 %357, i32* %355, align 8
  %358 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %344, i64 1
  %359 = ptrtoint %"class.vr::TextEditAction"* %358 to i64
  %360 = bitcast %"class.vr::TextEditAction"** %15 to i64*
  store i64 %359, i64* %360, align 8
  br label %371

361:                                              ; preds = %337
  call void @_ZNSt3__16vectorIN2vr14TextEditActionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"class.vr::TextEditAction"* nonnull dereferenceable(40) %10) #9
  %362 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %10, i64 0, i32 2
  %363 = bitcast %"class.std::__1::basic_string"* %362 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %364 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %363, i64 0, i32 1, i32 1
  %365 = load i8, i8* %364, align 1
  %366 = icmp slt i8 %365, 0
  br i1 %366, label %367, label %371

367:                                              ; preds = %361
  %368 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %10, i64 0, i32 2
  %369 = bitcast %"class.std::__1::basic_string"* %368 to i8**
  %370 = load i8*, i8** %369, align 8
  call void @_ZdlPv(i8* %370) #11
  br label %371

371:                                              ; preds = %347, %361, %367
  %372 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %373 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %372, i64 0, i32 1, i32 1
  %374 = load i8, i8* %373, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %379

376:                                              ; preds = %371
  %377 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %378 = load i8*, i8** %377, align 8
  call void @_ZdlPv(i8* %378) #11
  br label %379

379:                                              ; preds = %371, %376
  %380 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %381 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %380, i64 0, i32 1, i32 1
  %382 = load i8, i8* %381, align 1
  %383 = icmp slt i8 %382, 0
  br i1 %383, label %384, label %387

384:                                              ; preds = %379
  %385 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %386 = load i8*, i8** %385, align 8
  call void @_ZdlPv(i8* %386) #11
  br label %387

387:                                              ; preds = %379, %384
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %330) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %329) #9
  br label %388

388:                                              ; preds = %322, %387
  %389 = load i32, i32* %86, align 4
  %390 = load i32, i32* %84, align 8
  %391 = sub nsw i32 %389, %390
  %392 = sext i32 %391 to i64
  %393 = icmp eq i32 %391, 0
  br i1 %393, label %448, label %394

394:                                              ; preds = %388
  br i1 %176, label %400, label %395

395:                                              ; preds = %394
  %396 = load i32, i32* %99, align 4
  %397 = load i32, i32* %97, align 8
  %398 = sub i32 %391, %396
  %399 = add i32 %398, %397
  br label %400

400:                                              ; preds = %395, %394
  %401 = phi i32 [ %391, %394 ], [ %399, %395 ]
  %402 = bitcast %"class.vr::TextEditAction"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %402) #9
  %403 = icmp eq i32 %389, %390
  br i1 %403, label %404, label %408

404:                                              ; preds = %400
  %405 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %406 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %405, i64 0, i32 1, i32 1
  store i8 0, i8* %406, align 1, !alias.scope !76
  %407 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  store i16 0, i16* %407, align 8, !alias.scope !76
  br label %411

408:                                              ; preds = %400
  %409 = sext i32 %390 to i64
  %410 = bitcast %"struct.vr::EditedText"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %14, %"class.std::__1::basic_string"* dereferenceable(24) %89, i64 %409, i64 %392, %"class.std::__1::allocator"* dereferenceable(1) %410) #9
  br label %411

411:                                              ; preds = %404, %408
  call void @_ZN2vr14TextEditActionC1ENS_18TextEditActionTypeENSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEi(%"class.vr::TextEditAction"* nonnull %13, i32 2, %"class.std::__1::basic_string"* nonnull %14, i32 %401) #9
  %412 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %15, align 8
  %413 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %16, align 8
  %414 = icmp ult %"class.vr::TextEditAction"* %412, %413
  br i1 %414, label %415, label %429

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %412, i64 0, i32 0
  %417 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %13, i64 0, i32 0
  %418 = load i32, i32* %417, align 8
  store i32 %418, i32* %416, align 8
  %419 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %412, i64 0, i32 2
  %420 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %13, i64 0, i32 2
  %421 = bitcast %"class.std::__1::basic_string"* %419 to i8*
  %422 = bitcast %"class.std::__1::basic_string"* %420 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %421, i8* align 8 %422, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %422, i8 0, i64 24, i1 false) #9
  %423 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %412, i64 0, i32 3
  %424 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %13, i64 0, i32 3
  %425 = load i32, i32* %424, align 8
  store i32 %425, i32* %423, align 8
  %426 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %412, i64 1
  %427 = ptrtoint %"class.vr::TextEditAction"* %426 to i64
  %428 = bitcast %"class.vr::TextEditAction"** %15 to i64*
  store i64 %427, i64* %428, align 8
  br label %439

429:                                              ; preds = %411
  call void @_ZNSt3__16vectorIN2vr14TextEditActionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"class.vr::TextEditAction"* nonnull dereferenceable(40) %13) #9
  %430 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %13, i64 0, i32 2
  %431 = bitcast %"class.std::__1::basic_string"* %430 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %432 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %431, i64 0, i32 1, i32 1
  %433 = load i8, i8* %432, align 1
  %434 = icmp slt i8 %433, 0
  br i1 %434, label %435, label %439

435:                                              ; preds = %429
  %436 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %13, i64 0, i32 2
  %437 = bitcast %"class.std::__1::basic_string"* %436 to i8**
  %438 = load i8*, i8** %437, align 8
  call void @_ZdlPv(i8* %438) #11
  br label %439

439:                                              ; preds = %415, %429, %435
  %440 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %441 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %440, i64 0, i32 1, i32 1
  %442 = load i8, i8* %441, align 1
  %443 = icmp slt i8 %442, 0
  br i1 %443, label %444, label %447

444:                                              ; preds = %439
  %445 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %446 = load i8*, i8** %445, align 8
  call void @_ZdlPv(i8* %446) #11
  br label %447

447:                                              ; preds = %439, %444
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %402) #9
  br label %448

448:                                              ; preds = %77, %388, %447
  ret void
}

declare void @_ZN2vr14TextEditActionC1ENS_18TextEditActionTypeE(%"class.vr::TextEditAction"*, i32) unnamed_addr #2

declare void @_ZN2vr14TextEditActionC1ENS_18TextEditActionTypeENSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEi(%"class.vr::TextEditAction"*, i32, %"class.std::__1::basic_string"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !79
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !79
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !82, !noalias !79
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !82, !noalias !79
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !79
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !79
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !82, !noalias !79
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !82, !noalias !79
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !79
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !79
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !82, !noalias !79
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !82, !noalias !79
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !79
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !79
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !82, !noalias !79
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !82, !noalias !79
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !84

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !79
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !79
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !82, !noalias !79
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !82, !noalias !79
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !85

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !86

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !87

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #10
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #10
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !88
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !88
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !91, !noalias !88
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !91, !noalias !88
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !88
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !88
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !91, !noalias !88
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !91, !noalias !88
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !88
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !88
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !91, !noalias !88
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !91, !noalias !88
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !88
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !88
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !91, !noalias !88
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !91, !noalias !88
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !93

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !88
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !88
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !91, !noalias !88
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !91, !noalias !88
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !94

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !95

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !96

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !97
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !97
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !100, !noalias !97
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !100, !noalias !97
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !97
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !97
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !100, !noalias !97
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !100, !noalias !97
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !97
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !97
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !100, !noalias !97
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !100, !noalias !97
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !97
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !97
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !100, !noalias !97
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !100, !noalias !97
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !102

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !97
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !97
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !100, !noalias !97
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !100, !noalias !97
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !103

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !104

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !105

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #9
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #10
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #10
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !106
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !106
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !109, !noalias !106
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !109, !noalias !106
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !106
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !106
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !109, !noalias !106
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !109, !noalias !106
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !106
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !106
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !109, !noalias !106
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !109, !noalias !106
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !106
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !106
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !109, !noalias !106
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !109, !noalias !106
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !111

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !106
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !106
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !109, !noalias !106
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !109, !noalias !106
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !112

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !113

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !114

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !115

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !116

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !117

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !119
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !119
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !122, !noalias !119
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !122, !noalias !119
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !119
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !119
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !122, !noalias !119
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !122, !noalias !119
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !119
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !119
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !122, !noalias !119
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !122, !noalias !119
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !119
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !119
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !122, !noalias !119
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !122, !noalias !119
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !124

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !119
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !119
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !122, !noalias !119
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !122, !noalias !119
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !125

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !126

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !127

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #10
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #10
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #10
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #11
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !128
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !128
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !131, !noalias !128
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !131, !noalias !128
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !128
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !128
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !131, !noalias !128
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !131, !noalias !128
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !128
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !128
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !131, !noalias !128
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !131, !noalias !128
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !128
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !128
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !131, !noalias !128
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !131, !noalias !128
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !133

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !128
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !128
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !131, !noalias !128
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !131, !noalias !128
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !134

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !135

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !136

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.1"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2vr14TextEditActionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"class.vr::TextEditAction"* dereferenceable(40)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.vr::TextEditAction"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.vr::TextEditAction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.vr::TextEditAction"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.vr::TextEditAction"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %33, i64 %9
  %35 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %33, i64 %32
  %36 = ptrtoint %"class.vr::TextEditAction"* %35 to i64
  %37 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %33, i64 %9, i32 2
  %41 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %1, i64 0, i32 2
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #9
  %44 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %33, i64 %9, i32 3
  %45 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %1, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %34, i64 1
  %48 = ptrtoint %"class.vr::TextEditAction"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %50 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %49, align 8
  %51 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %3, align 8
  %52 = icmp eq %"class.vr::TextEditAction"* %51, %50
  br i1 %52, label %53, label %55

53:                                               ; preds = %31
  %54 = ptrtoint %"class.vr::TextEditAction"* %50 to i64
  br label %74

55:                                               ; preds = %31, %55
  %56 = phi %"class.vr::TextEditAction"* [ %69, %55 ], [ %34, %31 ]
  %57 = phi %"class.vr::TextEditAction"* [ %58, %55 ], [ %51, %31 ]
  %58 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %57, i64 -1
  %59 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %56, i64 -1, i32 0
  %60 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %58, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %59, align 8
  %62 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %56, i64 -1, i32 2
  %63 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %57, i64 -1, i32 2
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %65 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #9
  %66 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %56, i64 -1, i32 3
  %67 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %57, i64 -1, i32 3
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %66, align 8
  %69 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %56, i64 -1
  %70 = icmp eq %"class.vr::TextEditAction"* %58, %50
  br i1 %70, label %71, label %55

71:                                               ; preds = %55
  %72 = load i64, i64* %6, align 8
  %73 = load %"class.vr::TextEditAction"*, %"class.vr::TextEditAction"** %3, align 8
  br label %74

74:                                               ; preds = %53, %71
  %75 = phi %"class.vr::TextEditAction"* [ %50, %53 ], [ %73, %71 ]
  %76 = phi %"class.vr::TextEditAction"* [ %34, %53 ], [ %69, %71 ]
  %77 = phi i64 [ %54, %53 ], [ %72, %71 ]
  %78 = ptrtoint %"class.vr::TextEditAction"* %76 to i64
  store i64 %78, i64* %6, align 8
  store i64 %48, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %79 = inttoptr i64 %77 to %"class.vr::TextEditAction"*
  %80 = icmp eq %"class.vr::TextEditAction"* %75, %79
  br i1 %80, label %94, label %81

81:                                               ; preds = %74, %92
  %82 = phi %"class.vr::TextEditAction"* [ %83, %92 ], [ %75, %74 ]
  %83 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %82, i64 -1
  %84 = getelementptr inbounds %"class.vr::TextEditAction", %"class.vr::TextEditAction"* %82, i64 -1, i32 2
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %85, i64 0, i32 1, i32 1
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %81
  %90 = bitcast %"class.std::__1::basic_string"* %84 to i8**
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %89, %81
  %93 = icmp eq %"class.vr::TextEditAction"* %83, %79
  br i1 %93, label %94, label %81

94:                                               ; preds = %92, %74
  %95 = icmp eq i64 %77, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %77 to i8*
  tail call void @_ZdlPv(i8* %97) #11
  br label %98

98:                                               ; preds = %94, %96
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK2vr13TextInputInfo8ToStringEv: argument 0"}
!51 = distinct !{!51, !"_ZNK2vr13TextInputInfo8ToStringEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK2vr13TextInputInfo8ToStringEv: argument 0"}
!57 = distinct !{!57, !"_ZNK2vr13TextInputInfo8ToStringEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv: argument 0"}
!63 = distinct !{!63, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv: argument 0"}
!66 = distinct !{!66, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv: argument 0"}
!69 = distinct !{!69, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv: argument 0"}
!72 = distinct !{!72, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv: argument 0"}
!75 = distinct !{!75, !"_ZNK2vr13TextInputInfo25CommittedTextBeforeCursorEv"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZNK2vr13TextInputInfo13ComposingTextEv: argument 0"}
!78 = distinct !{!78, !"_ZNK2vr13TextInputInfo13ComposingTextEv"}
!79 = !{!80}
!80 = distinct !{!80, !81}
!81 = distinct !{!81, !"LVerDomain"}
!82 = !{!83}
!83 = distinct !{!83, !81}
!84 = distinct !{!84, !8}
!85 = distinct !{!85, !10}
!86 = distinct !{!86, !10}
!87 = distinct !{!87, !8}
!88 = !{!89}
!89 = distinct !{!89, !90}
!90 = distinct !{!90, !"LVerDomain"}
!91 = !{!92}
!92 = distinct !{!92, !90}
!93 = distinct !{!93, !8}
!94 = distinct !{!94, !10}
!95 = distinct !{!95, !10}
!96 = distinct !{!96, !8}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = distinct !{!102, !8}
!103 = distinct !{!103, !10}
!104 = distinct !{!104, !10}
!105 = distinct !{!105, !8}
!106 = !{!107}
!107 = distinct !{!107, !108}
!108 = distinct !{!108, !"LVerDomain"}
!109 = !{!110}
!110 = distinct !{!110, !108}
!111 = distinct !{!111, !8}
!112 = distinct !{!112, !10}
!113 = distinct !{!113, !10}
!114 = distinct !{!114, !8}
!115 = distinct !{!115, !8}
!116 = distinct !{!116, !10}
!117 = distinct !{!117, !118, !8}
!118 = !{!"llvm.loop.unroll.runtime.disable"}
!119 = !{!120}
!120 = distinct !{!120, !121}
!121 = distinct !{!121, !"LVerDomain"}
!122 = !{!123}
!123 = distinct !{!123, !121}
!124 = distinct !{!124, !8}
!125 = distinct !{!125, !10}
!126 = distinct !{!126, !10}
!127 = distinct !{!127, !8}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !8}
!134 = distinct !{!134, !10}
!135 = distinct !{!135, !10}
!136 = distinct !{!136, !8}
