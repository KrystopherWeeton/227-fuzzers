; ModuleID = '../../dbus/scoped_dbus_error.cc'
source_filename = "../../dbus/scoped_dbus_error.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dbus::ScopedDBusError" = type { %struct.DBusError }
%struct.DBusError = type { i8*, i8*, i8, i8* }

@_ZN4dbus15ScopedDBusErrorC1Ev = hidden unnamed_addr alias void (%"class.dbus::ScopedDBusError"*), void (%"class.dbus::ScopedDBusError"*)* @_ZN4dbus15ScopedDBusErrorC2Ev
@_ZN4dbus15ScopedDBusErrorD1Ev = hidden unnamed_addr alias void (%"class.dbus::ScopedDBusError"*), void (%"class.dbus::ScopedDBusError"*)* @_ZN4dbus15ScopedDBusErrorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4dbus15ScopedDBusErrorC2Ev(%"class.dbus::ScopedDBusError"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dbus::ScopedDBusError", %"class.dbus::ScopedDBusError"* %0, i64 0, i32 0
  tail call void @dbus_error_init(%struct.DBusError* %2) #2
  ret void
}

declare void @dbus_error_init(%struct.DBusError*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4dbus15ScopedDBusErrorD2Ev(%"class.dbus::ScopedDBusError"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dbus::ScopedDBusError", %"class.dbus::ScopedDBusError"* %0, i64 0, i32 0
  tail call void @dbus_error_free(%struct.DBusError* %2) #2
  ret void
}

declare void @dbus_error_free(%struct.DBusError*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4dbus15ScopedDBusError6is_setEv(%"class.dbus::ScopedDBusError"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dbus::ScopedDBusError", %"class.dbus::ScopedDBusError"* %0, i64 0, i32 0
  %3 = tail call i32 @dbus_error_is_set(%struct.DBusError* %2) #2
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

declare i32 @dbus_error_is_set(%struct.DBusError*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
