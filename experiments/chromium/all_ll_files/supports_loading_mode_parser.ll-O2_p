; ModuleID = '../../services/network/public/cpp/supports_loading_mode/supports_loading_mode_parser.cc'
source_filename = "../../services/network/public/cpp/supports_loading_mode/supports_loading_mode_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.network::mojom::SupportsLoadingMode"* }
%"class.network::mojom::SupportsLoadingMode" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { i32* }
%"class.base::internal::BinaryPredicateProjector" = type { %"struct.std::__1::less"*, %"struct.base::identity"*, %"struct.base::identity"* }
%"struct.std::__1::less" = type { i8 }
%"struct.base::identity" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector.4" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.net::structured_headers::ParameterizedMember"*, %"struct.net::structured_headers::ParameterizedMember"*, %"class.std::__1::__compressed_pair.26" }
%"struct.net::structured_headers::ParameterizedMember" = type { %"class.std::__1::vector.6", i8, %"class.std::__1::vector.14" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.net::structured_headers::ParameterizedItem"*, %"struct.net::structured_headers::ParameterizedItem"*, %"class.std::__1::__compressed_pair.21" }
%"struct.net::structured_headers::ParameterizedItem" = type { %"class.net::structured_headers::Item", %"class.std::__1::vector.14" }
%"class.net::structured_headers::Item" = type <{ i32, [4 x i8], i64, %"class.std::__1::basic_string", double, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.net::structured_headers::ParameterizedItem"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.net::structured_headers::Item" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.net::structured_headers::ParameterizedMember"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.network::(anonymous namespace)::KnownLoadingMode" = type <{ %"class.base::BasicStringPiece", i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector.34", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.36" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }

$_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEvT0_SD_T_ = comdat any

$_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEjT0_SD_SD_SD_SD_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEbT0_SD_T_ = comdat any

@.str = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"uncredentialed-prefetch\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"uncredentialed-prerender\00", align 1
@_ZN7network12_GLOBAL__N_118kKnownLoadingModesE = internal unnamed_addr constant [3 x { %"class.base::BasicStringPiece", i32 }] [{ %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i64 7 }, i32 0 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0), i64 23 }, i32 1 }, { %"class.base::BasicStringPiece", i32 } { %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0), i64 24 }, i32 2 }], align 16
@.str.4 = private unnamed_addr constant [22 x i8] c"Supports-Loading-Mode\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24ParseSupportsLoadingModeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.mojo::StructPtr"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.base::internal::BinaryPredicateProjector", align 8
  %6 = alloca %"struct.std::__1::less", align 1
  %7 = alloca %"struct.base::identity", align 1
  %8 = alloca %"class.absl::optional", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @_ZN3net18structured_headers9ParseListEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional"* nonnull sret %8, i8* %1, i64 %2) #9
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %288

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = call i8* @_Znwm(i64 4) #10
  %21 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 4
  %23 = bitcast i32** %19 to i8**
  store i8* %22, i8** %23, align 8
  %24 = bitcast i32** %18 to i64*
  %25 = bitcast i8* %20 to i32*
  store i32 0, i32* %25, align 4
  %26 = ptrtoint i8* %22 to i64
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.net::structured_headers::ParameterizedMember"*, %"struct.net::structured_headers::ParameterizedMember"** %27, align 8
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %30 = load %"struct.net::structured_headers::ParameterizedMember"*, %"struct.net::structured_headers::ParameterizedMember"** %29, align 8
  %31 = icmp eq %"struct.net::structured_headers::ParameterizedMember"* %28, %30
  %32 = bitcast i8* %22 to i32*
  br i1 %31, label %39, label %33

33:                                               ; preds = %15
  %34 = bitcast %"class.std::__1::vector"* %9 to i64*
  %35 = bitcast i32** %19 to i64*
  br label %167

36:                                               ; preds = %262
  %37 = load i32*, i32** %17, align 8
  %38 = load i32*, i32** %18, align 8
  br label %39

39:                                               ; preds = %36, %15
  %40 = phi i32* [ %38, %36 ], [ %32, %15 ]
  %41 = phi i32* [ %37, %36 ], [ %25, %15 ]
  %42 = getelementptr inbounds %"struct.std::__1::less", %"struct.std::__1::less"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"struct.base::identity", %"struct.base::identity"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #9
  %44 = bitcast %"class.base::internal::BinaryPredicateProjector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #9
  %45 = getelementptr inbounds %"class.base::internal::BinaryPredicateProjector", %"class.base::internal::BinaryPredicateProjector"* %5, i64 0, i32 0
  store %"struct.std::__1::less"* %6, %"struct.std::__1::less"** %45, align 8
  %46 = getelementptr inbounds %"class.base::internal::BinaryPredicateProjector", %"class.base::internal::BinaryPredicateProjector"* %5, i64 0, i32 1
  store %"struct.base::identity"* %7, %"struct.base::identity"** %46, align 8
  %47 = getelementptr inbounds %"class.base::internal::BinaryPredicateProjector", %"class.base::internal::BinaryPredicateProjector"* %5, i64 0, i32 2
  store %"struct.base::identity"* %7, %"struct.base::identity"** %47, align 8
  call void @_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEvT0_SD_T_(i32* %41, i32* %40, %"class.base::internal::BinaryPredicateProjector"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #9
  %48 = load i32*, i32** %17, align 8
  %49 = load i32*, i32** %18, align 8
  %50 = icmp eq i32* %48, %49
  %51 = ptrtoint i32* %49 to i64
  br i1 %50, label %60, label %52

52:                                               ; preds = %39, %56
  %53 = phi i32* [ %54, %56 ], [ %48, %39 ]
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = icmp eq i32* %54, %49
  br i1 %55, label %139, label %56

56:                                               ; preds = %52
  %57 = load i32, i32* %53, align 4
  %58 = load i32, i32* %54, align 4
  %59 = icmp eq i32 %57, %58
  br i1 %59, label %60, label %52

60:                                               ; preds = %56, %39
  %61 = phi i32* [ %48, %39 ], [ %53, %56 ]
  %62 = ptrtoint i32* %61 to i64
  %63 = icmp eq i32* %61, %49
  br i1 %63, label %139, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds i32, i32* %61, i64 2
  %66 = icmp eq i32* %65, %49
  br i1 %66, label %122, label %67

67:                                               ; preds = %64
  %68 = getelementptr i32, i32* %49, i64 -3
  %69 = ptrtoint i32* %68 to i64
  %70 = sub i64 %69, %62
  %71 = lshr i64 %70, 2
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %94, label %75

75:                                               ; preds = %67, %86
  %76 = phi i32* [ %89, %86 ], [ %61, %67 ]
  %77 = phi i32* [ %88, %86 ], [ %65, %67 ]
  %78 = phi i64 [ %87, %86 ], [ %62, %67 ]
  %79 = phi i64 [ %90, %86 ], [ %73, %67 ]
  %80 = load i32, i32* %76, align 4
  %81 = load i32, i32* %77, align 4
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %86, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds i32, i32* %76, i64 1
  %85 = ptrtoint i32* %84 to i64
  store i32 %81, i32* %84, align 4
  br label %86

86:                                               ; preds = %83, %75
  %87 = phi i64 [ %78, %75 ], [ %85, %83 ]
  %88 = getelementptr inbounds i32, i32* %77, i64 1
  %89 = inttoptr i64 %87 to i32*
  %90 = add i64 %79, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %75, !llvm.loop !3

92:                                               ; preds = %86
  %93 = inttoptr i64 %87 to i32*
  br label %94

94:                                               ; preds = %67, %92
  %95 = phi i64 [ undef, %67 ], [ %87, %92 ]
  %96 = phi i32* [ %61, %67 ], [ %93, %92 ]
  %97 = phi i32* [ %65, %67 ], [ %88, %92 ]
  %98 = phi i64 [ %62, %67 ], [ %87, %92 ]
  %99 = icmp ult i64 %70, 12
  br i1 %99, label %117, label %100

100:                                              ; preds = %94, %312
  %101 = phi i32* [ %316, %312 ], [ %96, %94 ]
  %102 = phi i32* [ %314, %312 ], [ %97, %94 ]
  %103 = phi i64 [ %313, %312 ], [ %98, %94 ]
  %104 = load i32, i32* %101, align 4
  %105 = load i32, i32* %102, align 4
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i32, i32* %101, i64 1
  %109 = ptrtoint i32* %108 to i64
  store i32 %105, i32* %108, align 4
  br label %110

110:                                              ; preds = %107, %100
  %111 = phi i64 [ %103, %100 ], [ %109, %107 ]
  %112 = getelementptr inbounds i32, i32* %102, i64 1
  %113 = inttoptr i64 %111 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = load i32, i32* %112, align 4
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %292, label %289

117:                                              ; preds = %312, %94
  %118 = phi i64 [ %95, %94 ], [ %313, %312 ]
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32*, i32** %18, align 8
  %121 = ptrtoint i32* %120 to i64
  br label %122

122:                                              ; preds = %64, %117
  %123 = phi i64 [ %121, %117 ], [ %51, %64 ]
  %124 = phi i32* [ %120, %117 ], [ %49, %64 ]
  %125 = phi i32* [ %119, %117 ], [ %61, %64 ]
  %126 = getelementptr inbounds i32, i32* %125, i64 1
  %127 = icmp eq i32* %126, %124
  br i1 %127, label %139, label %128

128:                                              ; preds = %122
  %129 = ptrtoint i32* %124 to i64
  %130 = sub i64 %123, %129
  %131 = ashr exact i64 %130, 2
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %128
  %134 = bitcast i32* %126 to i8*
  %135 = bitcast i32* %124 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %134, i8* align 4 %135, i64 %130, i1 false) #9
  br label %136

136:                                              ; preds = %133, %128
  %137 = getelementptr inbounds i32, i32* %126, i64 %131
  store i32* %137, i32** %18, align 8
  %138 = ptrtoint i32* %137 to i64
  br label %139

139:                                              ; preds = %52, %60, %122, %136
  %140 = phi i64 [ %123, %122 ], [ %138, %136 ], [ %51, %60 ], [ %51, %52 ]
  %141 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #9, !noalias !5
  %142 = call i8* @_Znwm(i64 24) #10, !noalias !5
  %143 = bitcast i8* %142 to %"class.network::mojom::SupportsLoadingMode"*
  %144 = bitcast %"class.std::__1::vector"* %9 to i64*
  %145 = load i64, i64* %144, align 8, !noalias !5
  %146 = bitcast %"class.std::__1::vector"* %4 to i64*
  store i64 %145, i64* %146, align 8, !noalias !5
  %147 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %148 = bitcast i32** %147 to i64*
  store i64 %140, i64* %148, align 8, !noalias !5
  %149 = bitcast i32** %19 to i64*
  %150 = load i64, i64* %149, align 8, !noalias !5
  %151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast i32** %151 to i64*
  store i64 %150, i64* %152, align 8, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #9, !noalias !5
  call void @_ZN7network5mojom19SupportsLoadingModeC1ENSt3__16vectorINS0_11LoadingModeENS2_9allocatorIS4_EEEE(%"class.network::mojom::SupportsLoadingMode"* nonnull %143, %"class.std::__1::vector"* nonnull %4) #9, !noalias !5
  %153 = ptrtoint i8* %142 to i64
  %154 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %153, i64* %154, align 8, !alias.scope !5
  %155 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8, !noalias !5
  %157 = icmp eq i32* %156, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %139
  %159 = ptrtoint i32* %156 to i64
  store i64 %159, i64* %148, align 8, !noalias !5
  %160 = bitcast i32* %156 to i8*
  call void @_ZdlPv(i8* %160) #10, !noalias !5
  br label %161

161:                                              ; preds = %139, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #9, !noalias !5
  %162 = load i32*, i32** %17, align 8
  %163 = icmp eq i32* %162, null
  br i1 %163, label %265, label %164

164:                                              ; preds = %161
  %165 = ptrtoint i32* %162 to i64
  store i64 %165, i64* %24, align 8
  %166 = bitcast i32* %162 to i8*
  call void @_ZdlPv(i8* %166) #10
  br label %265

167:                                              ; preds = %33, %262
  %168 = phi %"struct.net::structured_headers::ParameterizedMember"* [ %28, %33 ], [ %263, %262 ]
  %169 = getelementptr inbounds %"struct.net::structured_headers::ParameterizedMember", %"struct.net::structured_headers::ParameterizedMember"* %168, i64 0, i32 1
  %170 = load i8, i8* %169, align 8, !range !2
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %172, label %262

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"struct.net::structured_headers::ParameterizedMember", %"struct.net::structured_headers::ParameterizedMember"* %168, i64 0, i32 2, i32 0, i32 0
  %174 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %173, align 8
  %175 = getelementptr inbounds %"struct.net::structured_headers::ParameterizedMember", %"struct.net::structured_headers::ParameterizedMember"* %168, i64 0, i32 2, i32 0, i32 1
  %176 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %175, align 8
  %177 = icmp eq %"struct.std::__1::pair"* %174, %176
  br i1 %177, label %178, label %262

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"struct.net::structured_headers::ParameterizedMember", %"struct.net::structured_headers::ParameterizedMember"* %168, i64 0, i32 0, i32 0, i32 0
  %180 = load %"struct.net::structured_headers::ParameterizedItem"*, %"struct.net::structured_headers::ParameterizedItem"** %179, align 8
  %181 = getelementptr inbounds %"struct.net::structured_headers::ParameterizedItem", %"struct.net::structured_headers::ParameterizedItem"* %180, i64 0, i32 0, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 4
  br i1 %183, label %184, label %262

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"struct.net::structured_headers::ParameterizedItem", %"struct.net::structured_headers::ParameterizedItem"* %180, i64 0, i32 0, i32 3
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %185, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = bitcast %"class.std::__1::basic_string"* %185 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  %191 = getelementptr inbounds %"struct.net::structured_headers::ParameterizedItem", %"struct.net::structured_headers::ParameterizedItem"* %180, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = zext i8 %189 to i64
  %194 = select i1 %190, i64 %192, i64 %193
  %195 = load i8*, i8** %186, align 8
  %196 = bitcast %"class.std::__1::basic_string"* %185 to i8*
  %197 = select i1 %190, i8* %195, i8* %196
  switch i64 %194, label %262 [
    i64 7, label %198
    i64 23, label %201
    i64 24, label %204
  ]

198:                                              ; preds = %184
  %199 = call i32 @bcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* %197, i64 7) #9
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %207, label %262

201:                                              ; preds = %184
  %202 = call i32 @bcmp(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i8* %197, i64 23) #9
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %207, label %262

204:                                              ; preds = %184
  %205 = call i32 @bcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8* %197, i64 24) #9
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %262

207:                                              ; preds = %198, %201, %204
  %208 = phi %"struct.network::(anonymous namespace)::KnownLoadingMode"* [ bitcast (i8** getelementptr inbounds ([3 x { %"class.base::BasicStringPiece", i32 }], [3 x { %"class.base::BasicStringPiece", i32 }]* @_ZN7network12_GLOBAL__N_118kKnownLoadingModesE, i64 0, i64 2, i32 0, i32 0) to %"struct.network::(anonymous namespace)::KnownLoadingMode"*), %204 ], [ bitcast (i8** getelementptr inbounds ([3 x { %"class.base::BasicStringPiece", i32 }], [3 x { %"class.base::BasicStringPiece", i32 }]* @_ZN7network12_GLOBAL__N_118kKnownLoadingModesE, i64 0, i64 1, i32 0, i32 0) to %"struct.network::(anonymous namespace)::KnownLoadingMode"*), %201 ], [ bitcast ([3 x { %"class.base::BasicStringPiece", i32 }]* @_ZN7network12_GLOBAL__N_118kKnownLoadingModesE to %"struct.network::(anonymous namespace)::KnownLoadingMode"*), %198 ]
  %209 = getelementptr inbounds %"struct.network::(anonymous namespace)::KnownLoadingMode", %"struct.network::(anonymous namespace)::KnownLoadingMode"* %208, i64 0, i32 1
  %210 = load i32*, i32** %18, align 8
  %211 = load i32*, i32** %19, align 8
  %212 = icmp eq i32* %210, %211
  %213 = ptrtoint i32* %211 to i64
  br i1 %212, label %218, label %214

214:                                              ; preds = %207
  %215 = load i32, i32* %209, align 4
  store i32 %215, i32* %210, align 4
  %216 = getelementptr inbounds i32, i32* %210, i64 1
  %217 = ptrtoint i32* %216 to i64
  store i64 %217, i64* %24, align 8
  br label %262

218:                                              ; preds = %207
  %219 = ptrtoint i32* %210 to i64
  %220 = load i64, i64* %34, align 8
  %221 = sub i64 %219, %220
  %222 = ashr exact i64 %221, 2
  %223 = add nsw i64 %222, 1
  %224 = icmp ugt i64 %223, 4611686018427387903
  br i1 %224, label %225, label %227

225:                                              ; preds = %218
  %226 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %226) #11
  unreachable

227:                                              ; preds = %218
  %228 = sub i64 %213, %220
  %229 = ashr exact i64 %228, 2
  %230 = icmp ult i64 %229, 2305843009213693951
  br i1 %230, label %231, label %239

231:                                              ; preds = %227
  %232 = ashr exact i64 %228, 1
  %233 = icmp ult i64 %232, %223
  %234 = select i1 %233, i64 %223, i64 %232
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %244, label %236

236:                                              ; preds = %231
  %237 = icmp ugt i64 %234, 4611686018427387903
  br i1 %237, label %238, label %239

238:                                              ; preds = %236
  call void @abort() #11
  unreachable

239:                                              ; preds = %236, %227
  %240 = phi i64 [ %234, %236 ], [ 4611686018427387903, %227 ]
  %241 = shl i64 %240, 2
  %242 = call i8* @_Znwm(i64 %241) #10
  %243 = bitcast i8* %242 to i32*
  br label %244

244:                                              ; preds = %239, %231
  %245 = phi i64 [ %240, %239 ], [ 0, %231 ]
  %246 = phi i8* [ %242, %239 ], [ null, %231 ]
  %247 = phi i32* [ %243, %239 ], [ null, %231 ]
  %248 = getelementptr inbounds i32, i32* %247, i64 %222
  %249 = getelementptr inbounds i32, i32* %247, i64 %245
  %250 = ptrtoint i32* %249 to i64
  %251 = load i32, i32* %209, align 4
  store i32 %251, i32* %248, align 4
  %252 = getelementptr inbounds i32, i32* %248, i64 1
  %253 = ptrtoint i32* %252 to i64
  %254 = ptrtoint i32* %247 to i64
  %255 = icmp sgt i64 %221, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %244
  %257 = inttoptr i64 %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %246, i8* align 4 %257, i64 %221, i1 false) #9
  br label %258

258:                                              ; preds = %256, %244
  store i64 %254, i64* %34, align 8
  store i64 %253, i64* %24, align 8
  store i64 %250, i64* %35, align 8
  %259 = icmp eq i64 %220, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = inttoptr i64 %220 to i8*
  call void @_ZdlPv(i8* %261) #10
  br label %262

262:                                              ; preds = %260, %258, %214, %204, %201, %198, %184, %178, %172, %167
  %263 = getelementptr inbounds %"struct.net::structured_headers::ParameterizedMember", %"struct.net::structured_headers::ParameterizedMember"* %168, i64 1
  %264 = icmp eq %"struct.net::structured_headers::ParameterizedMember"* %263, %30
  br i1 %264, label %36, label %167

265:                                              ; preds = %164, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  %266 = load i8, i8* %10, align 8, !range !2
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %288, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %270 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %269, i64 0, i32 0, i32 0
  %271 = load %"struct.net::structured_headers::ParameterizedMember"*, %"struct.net::structured_headers::ParameterizedMember"** %270, align 8
  %272 = icmp eq %"struct.net::structured_headers::ParameterizedMember"* %271, null
  br i1 %272, label %287, label %273

273:                                              ; preds = %268
  %274 = bitcast %"struct.net::structured_headers::ParameterizedMember"* %271 to i8*
  %275 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %276 = load %"struct.net::structured_headers::ParameterizedMember"*, %"struct.net::structured_headers::ParameterizedMember"** %275, align 8
  %277 = icmp eq %"struct.net::structured_headers::ParameterizedMember"* %276, %271
  br i1 %277, label %285, label %278

278:                                              ; preds = %273, %278
  %279 = phi %"struct.net::structured_headers::ParameterizedMember"* [ %280, %278 ], [ %276, %273 ]
  %280 = getelementptr inbounds %"struct.net::structured_headers::ParameterizedMember", %"struct.net::structured_headers::ParameterizedMember"* %279, i64 -1
  call void @_ZN3net18structured_headers19ParameterizedMemberD1Ev(%"struct.net::structured_headers::ParameterizedMember"* %280) #9
  %281 = icmp eq %"struct.net::structured_headers::ParameterizedMember"* %280, %271
  br i1 %281, label %282, label %278

282:                                              ; preds = %278
  %283 = bitcast %"class.std::__1::vector.4"* %269 to i8**
  %284 = load i8*, i8** %283, align 8
  br label %285

285:                                              ; preds = %282, %273
  %286 = phi i8* [ %284, %282 ], [ %274, %273 ]
  store %"struct.net::structured_headers::ParameterizedMember"* %271, %"struct.net::structured_headers::ParameterizedMember"** %275, align 8
  call void @_ZdlPv(i8* %286) #10
  br label %287

287:                                              ; preds = %285, %268
  store i8 0, i8* %10, align 8
  br label %288

288:                                              ; preds = %13, %265, %287
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  ret void

289:                                              ; preds = %110
  %290 = getelementptr inbounds i32, i32* %113, i64 1
  %291 = ptrtoint i32* %290 to i64
  store i32 %115, i32* %290, align 4
  br label %292

292:                                              ; preds = %289, %110
  %293 = phi i64 [ %111, %110 ], [ %291, %289 ]
  %294 = getelementptr inbounds i32, i32* %102, i64 2
  %295 = inttoptr i64 %293 to i32*
  %296 = load i32, i32* %295, align 4
  %297 = load i32, i32* %294, align 4
  %298 = icmp eq i32 %296, %297
  br i1 %298, label %302, label %299

299:                                              ; preds = %292
  %300 = getelementptr inbounds i32, i32* %295, i64 1
  %301 = ptrtoint i32* %300 to i64
  store i32 %297, i32* %300, align 4
  br label %302

302:                                              ; preds = %299, %292
  %303 = phi i64 [ %293, %292 ], [ %301, %299 ]
  %304 = getelementptr inbounds i32, i32* %102, i64 3
  %305 = inttoptr i64 %303 to i32*
  %306 = load i32, i32* %305, align 4
  %307 = load i32, i32* %304, align 4
  %308 = icmp eq i32 %306, %307
  br i1 %308, label %312, label %309

309:                                              ; preds = %302
  %310 = getelementptr inbounds i32, i32* %305, i64 1
  %311 = ptrtoint i32* %310 to i64
  store i32 %307, i32* %310, align 4
  br label %312

312:                                              ; preds = %309, %302
  %313 = phi i64 [ %303, %302 ], [ %311, %309 ]
  %314 = getelementptr inbounds i32, i32* %102, i64 4
  %315 = icmp eq i32* %314, %49
  %316 = inttoptr i64 %313 to i32*
  br i1 %315, label %117, label %100
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net18structured_headers9ParseListEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.absl::optional"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24ParseSupportsLoadingModeERKN3net19HttpResponseHeadersE(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.net::HttpResponseHeaders"* dereferenceable(64)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #9
  %6 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i64 21, %"class.std::__1::basic_string"* nonnull %3) #9
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %8, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = load i8*, i8** %5, align 8
  %17 = select i1 %15, i8* %16, i8* %4
  %18 = load i64, i64* %11, align 8
  %19 = zext i8 %14 to i64
  %20 = select i1 %15, i64 %18, i64 %19
  call void @_ZN7network24ParseSupportsLoadingModeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.mojo::StructPtr"* sret %0, i8* %17, i64 %20)
  br label %21

21:                                               ; preds = %10, %7
  %22 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %12, %10 ], [ %9, %7 ]
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %21, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret void
}

declare zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEvT0_SD_T_(i32*, i32*, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %247, %3
  %5 = phi i32* [ %1, %3 ], [ %231, %247 ]
  %6 = phi i32* [ %0, %3 ], [ %13, %247 ]
  %7 = ptrtoint i32* %5 to i64
  %8 = getelementptr inbounds i32, i32* %5, i64 -1
  %9 = ptrtoint i32* %5 to i64
  br label %10

10:                                               ; preds = %256, %4
  %11 = phi i32* [ %6, %4 ], [ %257, %256 ]
  br label %12

12:                                               ; preds = %192, %10
  %13 = phi i32* [ %11, %10 ], [ %183, %192 ]
  %14 = ptrtoint i32* %13 to i64
  %15 = sub i64 %7, %14
  %16 = ashr exact i64 %15, 2
  switch i64 %16, label %79 [
    i64 0, label %260
    i64 1, label %260
    i64 2, label %17
    i64 3, label %23
    i64 4, label %43
    i64 5, label %73
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds i32, i32* %5, i64 -1
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* %13, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %260

22:                                               ; preds = %17
  store i32 %19, i32* %13, align 4
  store i32 %20, i32* %18, align 4
  br label %260

23:                                               ; preds = %12
  %24 = getelementptr inbounds i32, i32* %13, i64 1
  %25 = getelementptr inbounds i32, i32* %5, i64 -1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %13, align 4
  %28 = icmp slt i32 %26, %27
  %29 = load i32, i32* %25, align 4
  %30 = icmp slt i32 %29, %26
  br i1 %28, label %37, label %31

31:                                               ; preds = %23
  br i1 %30, label %32, label %260

32:                                               ; preds = %31
  store i32 %29, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %33 = load i32, i32* %24, align 4
  %34 = load i32, i32* %13, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %260

36:                                               ; preds = %32
  store i32 %33, i32* %13, align 4
  store i32 %34, i32* %24, align 4
  br label %260

37:                                               ; preds = %23
  br i1 %30, label %38, label %39

38:                                               ; preds = %37
  store i32 %29, i32* %13, align 4
  store i32 %27, i32* %25, align 4
  br label %260

39:                                               ; preds = %37
  store i32 %26, i32* %13, align 4
  store i32 %27, i32* %24, align 4
  %40 = load i32, i32* %25, align 4
  %41 = icmp slt i32 %40, %27
  br i1 %41, label %42, label %260

42:                                               ; preds = %39
  store i32 %40, i32* %24, align 4
  store i32 %27, i32* %25, align 4
  br label %260

43:                                               ; preds = %12
  %44 = getelementptr inbounds i32, i32* %13, i64 1
  %45 = getelementptr inbounds i32, i32* %13, i64 2
  %46 = getelementptr inbounds i32, i32* %5, i64 -1
  %47 = load i32, i32* %44, align 4
  %48 = load i32, i32* %13, align 4
  %49 = icmp slt i32 %47, %48
  %50 = load i32, i32* %45, align 4
  %51 = icmp slt i32 %50, %47
  br i1 %49, label %56, label %52

52:                                               ; preds = %43
  br i1 %51, label %53, label %61

53:                                               ; preds = %52
  store i32 %50, i32* %44, align 4
  store i32 %47, i32* %45, align 4
  %54 = icmp slt i32 %50, %48
  br i1 %54, label %55, label %61

55:                                               ; preds = %53
  store i32 %50, i32* %13, align 4
  store i32 %48, i32* %44, align 4
  br label %61

56:                                               ; preds = %43
  br i1 %51, label %57, label %58

57:                                               ; preds = %56
  store i32 %50, i32* %13, align 4
  store i32 %48, i32* %45, align 4
  br label %61

58:                                               ; preds = %56
  store i32 %47, i32* %13, align 4
  store i32 %48, i32* %44, align 4
  %59 = icmp slt i32 %50, %48
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  store i32 %50, i32* %44, align 4
  store i32 %48, i32* %45, align 4
  br label %61

61:                                               ; preds = %60, %58, %57, %55, %53, %52
  %62 = phi i32 [ %48, %57 ], [ %50, %52 ], [ %47, %55 ], [ %47, %53 ], [ %48, %60 ], [ %50, %58 ]
  %63 = load i32, i32* %46, align 4
  %64 = icmp slt i32 %63, %62
  br i1 %64, label %65, label %260

65:                                               ; preds = %61
  store i32 %63, i32* %45, align 4
  store i32 %62, i32* %46, align 4
  %66 = load i32, i32* %45, align 4
  %67 = load i32, i32* %44, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %260

69:                                               ; preds = %65
  store i32 %66, i32* %44, align 4
  store i32 %67, i32* %45, align 4
  %70 = load i32, i32* %13, align 4
  %71 = icmp slt i32 %66, %70
  br i1 %71, label %72, label %260

72:                                               ; preds = %69
  store i32 %66, i32* %13, align 4
  store i32 %70, i32* %44, align 4
  br label %260

73:                                               ; preds = %12
  %74 = getelementptr inbounds i32, i32* %13, i64 1
  %75 = getelementptr inbounds i32, i32* %13, i64 2
  %76 = getelementptr inbounds i32, i32* %13, i64 3
  %77 = getelementptr inbounds i32, i32* %5, i64 -1
  %78 = tail call i32 @_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEjT0_SD_SD_SD_SD_T_(i32* %13, i32* %74, i32* %75, i32* %76, i32* %77, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %260

79:                                               ; preds = %12
  %80 = icmp slt i64 %15, 124
  br i1 %80, label %81, label %124

81:                                               ; preds = %79
  %82 = getelementptr inbounds i32, i32* %13, i64 2
  %83 = getelementptr inbounds i32, i32* %13, i64 1
  %84 = load i32, i32* %83, align 4
  %85 = load i32, i32* %13, align 4
  %86 = icmp slt i32 %84, %85
  %87 = load i32, i32* %82, align 4
  %88 = icmp slt i32 %87, %84
  br i1 %86, label %93, label %89

89:                                               ; preds = %81
  br i1 %88, label %90, label %98

90:                                               ; preds = %89
  store i32 %87, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %91 = icmp slt i32 %87, %85
  br i1 %91, label %92, label %98

92:                                               ; preds = %90
  store i32 %87, i32* %13, align 4
  store i32 %85, i32* %83, align 4
  br label %98

93:                                               ; preds = %81
  br i1 %88, label %94, label %95

94:                                               ; preds = %93
  store i32 %87, i32* %13, align 4
  store i32 %85, i32* %82, align 4
  br label %98

95:                                               ; preds = %93
  store i32 %84, i32* %13, align 4
  store i32 %85, i32* %83, align 4
  %96 = icmp slt i32 %87, %85
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  store i32 %87, i32* %83, align 4
  store i32 %85, i32* %82, align 4
  br label %98

98:                                               ; preds = %97, %95, %94, %92, %90, %89
  %99 = phi i32 [ %87, %89 ], [ %84, %90 ], [ %84, %92 ], [ %85, %94 ], [ %87, %95 ], [ %85, %97 ]
  %100 = getelementptr inbounds i32, i32* %13, i64 3
  %101 = icmp eq i32* %100, %5
  br i1 %101, label %260, label %102

102:                                              ; preds = %98, %122
  %103 = phi i32 [ %123, %122 ], [ %99, %98 ]
  %104 = phi i32* [ %120, %122 ], [ %100, %98 ]
  %105 = phi i32* [ %104, %122 ], [ %82, %98 ]
  %106 = load i32, i32* %104, align 4
  %107 = icmp slt i32 %106, %103
  br i1 %107, label %108, label %119

108:                                              ; preds = %102, %113
  %109 = phi i32 [ %115, %113 ], [ %103, %102 ]
  %110 = phi i32* [ %111, %113 ], [ %104, %102 ]
  %111 = phi i32* [ %114, %113 ], [ %105, %102 ]
  store i32 %109, i32* %110, align 4
  %112 = icmp eq i32* %111, %13
  br i1 %112, label %117, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds i32, i32* %111, i64 -1
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %106, %115
  br i1 %116, label %108, label %117

117:                                              ; preds = %113, %108
  %118 = phi i32* [ %13, %108 ], [ %111, %113 ]
  store i32 %106, i32* %118, align 4
  br label %119

119:                                              ; preds = %117, %102
  %120 = getelementptr inbounds i32, i32* %104, i64 1
  %121 = icmp eq i32* %120, %5
  br i1 %121, label %260, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %104, align 4
  br label %102

124:                                              ; preds = %79
  %125 = icmp sgt i64 %15, 3996
  %126 = sdiv i64 %16, 2
  %127 = getelementptr inbounds i32, i32* %13, i64 %126
  br i1 %125, label %128, label %133

128:                                              ; preds = %124
  %129 = sdiv i64 %16, 4
  %130 = getelementptr inbounds i32, i32* %13, i64 %129
  %131 = getelementptr inbounds i32, i32* %127, i64 %129
  %132 = tail call i32 @_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEjT0_SD_SD_SD_SD_T_(i32* %13, i32* %130, i32* %127, i32* %131, i32* %8, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %151

133:                                              ; preds = %124
  %134 = load i32, i32* %127, align 4
  %135 = load i32, i32* %13, align 4
  %136 = icmp slt i32 %134, %135
  %137 = load i32, i32* %8, align 4
  %138 = icmp slt i32 %137, %134
  br i1 %136, label %145, label %139

139:                                              ; preds = %133
  br i1 %138, label %140, label %151

140:                                              ; preds = %139
  store i32 %137, i32* %127, align 4
  store i32 %134, i32* %8, align 4
  %141 = load i32, i32* %127, align 4
  %142 = load i32, i32* %13, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %144, label %151

144:                                              ; preds = %140
  store i32 %141, i32* %13, align 4
  store i32 %142, i32* %127, align 4
  br label %151

145:                                              ; preds = %133
  br i1 %138, label %146, label %147

146:                                              ; preds = %145
  store i32 %137, i32* %13, align 4
  store i32 %135, i32* %8, align 4
  br label %151

147:                                              ; preds = %145
  store i32 %134, i32* %13, align 4
  store i32 %135, i32* %127, align 4
  %148 = load i32, i32* %8, align 4
  %149 = icmp slt i32 %148, %135
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  store i32 %148, i32* %127, align 4
  store i32 %135, i32* %8, align 4
  br label %151

151:                                              ; preds = %150, %147, %146, %144, %140, %139, %128
  %152 = phi i32 [ %132, %128 ], [ 1, %146 ], [ 0, %139 ], [ 2, %144 ], [ 1, %140 ], [ 2, %150 ], [ 1, %147 ]
  %153 = load i32, i32* %13, align 4
  %154 = load i32, i32* %127, align 4
  %155 = icmp slt i32 %153, %154
  br i1 %155, label %200, label %156

156:                                              ; preds = %151, %195
  %157 = phi i32* [ %158, %195 ], [ %8, %151 ]
  %158 = getelementptr inbounds i32, i32* %157, i64 -1
  %159 = icmp eq i32* %13, %158
  br i1 %159, label %160, label %195

160:                                              ; preds = %156
  %161 = getelementptr inbounds i32, i32* %13, i64 1
  %162 = load i32, i32* %8, align 4
  %163 = icmp slt i32 %153, %162
  br i1 %163, label %175, label %164

164:                                              ; preds = %160
  %165 = icmp eq i32* %161, %8
  br i1 %165, label %260, label %166

166:                                              ; preds = %164, %172
  %167 = phi i32* [ %173, %172 ], [ %161, %164 ]
  %168 = load i32, i32* %167, align 4
  %169 = icmp slt i32 %153, %168
  br i1 %169, label %170, label %172

170:                                              ; preds = %166
  store i32 %162, i32* %167, align 4
  store i32 %168, i32* %8, align 4
  %171 = getelementptr inbounds i32, i32* %167, i64 1
  br label %175

172:                                              ; preds = %166
  %173 = getelementptr inbounds i32, i32* %167, i64 1
  %174 = icmp eq i32* %173, %8
  br i1 %174, label %260, label %166

175:                                              ; preds = %170, %160
  %176 = phi i32* [ %161, %160 ], [ %171, %170 ]
  %177 = icmp eq i32* %176, %8
  br i1 %177, label %260, label %178

178:                                              ; preds = %175, %194
  %179 = phi i32* [ %186, %194 ], [ %176, %175 ]
  %180 = phi i32* [ %189, %194 ], [ %8, %175 ]
  %181 = load i32, i32* %13, align 4
  br label %182

182:                                              ; preds = %182, %178
  %183 = phi i32* [ %179, %178 ], [ %186, %182 ]
  %184 = load i32, i32* %183, align 4
  %185 = icmp slt i32 %181, %184
  %186 = getelementptr inbounds i32, i32* %183, i64 1
  br i1 %185, label %187, label %182

187:                                              ; preds = %182, %187
  %188 = phi i32* [ %189, %187 ], [ %180, %182 ]
  %189 = getelementptr inbounds i32, i32* %188, i64 -1
  %190 = load i32, i32* %189, align 4
  %191 = icmp slt i32 %181, %190
  br i1 %191, label %187, label %192

192:                                              ; preds = %187
  %193 = icmp ult i32* %183, %189
  br i1 %193, label %194, label %12

194:                                              ; preds = %192
  store i32 %190, i32* %183, align 4
  store i32 %184, i32* %189, align 4
  br label %178

195:                                              ; preds = %156
  %196 = load i32, i32* %158, align 4
  %197 = icmp slt i32 %196, %154
  br i1 %197, label %198, label %156

198:                                              ; preds = %195
  store i32 %196, i32* %13, align 4
  store i32 %153, i32* %158, align 4
  %199 = add i32 %152, 1
  br label %200

200:                                              ; preds = %151, %198
  %201 = phi i32 [ %199, %198 ], [ %152, %151 ]
  %202 = phi i32* [ %158, %198 ], [ %8, %151 ]
  %203 = ptrtoint i32* %13 to i64
  %204 = getelementptr inbounds i32, i32* %13, i64 1
  %205 = icmp ult i32* %204, %202
  br i1 %205, label %206, label %228

206:                                              ; preds = %200, %224
  %207 = phi i32* [ %227, %224 ], [ %127, %200 ]
  %208 = phi i32 [ %225, %224 ], [ %201, %200 ]
  %209 = phi i32* [ %216, %224 ], [ %204, %200 ]
  %210 = phi i32* [ %219, %224 ], [ %202, %200 ]
  %211 = load i32, i32* %207, align 4
  br label %212

212:                                              ; preds = %212, %206
  %213 = phi i32* [ %209, %206 ], [ %216, %212 ]
  %214 = load i32, i32* %213, align 4
  %215 = icmp slt i32 %214, %211
  %216 = getelementptr inbounds i32, i32* %213, i64 1
  br i1 %215, label %212, label %217

217:                                              ; preds = %212, %217
  %218 = phi i32* [ %219, %217 ], [ %210, %212 ]
  %219 = getelementptr inbounds i32, i32* %218, i64 -1
  %220 = load i32, i32* %219, align 4
  %221 = icmp slt i32 %220, %211
  br i1 %221, label %222, label %217

222:                                              ; preds = %217
  %223 = icmp ugt i32* %213, %219
  br i1 %223, label %228, label %224

224:                                              ; preds = %222
  store i32 %220, i32* %213, align 4
  store i32 %214, i32* %219, align 4
  %225 = add i32 %208, 1
  %226 = icmp eq i32* %207, %213
  %227 = select i1 %226, i32* %219, i32* %207
  br label %206

228:                                              ; preds = %222, %200
  %229 = phi i32* [ %127, %200 ], [ %207, %222 ]
  %230 = phi i32 [ %201, %200 ], [ %208, %222 ]
  %231 = phi i32* [ %204, %200 ], [ %213, %222 ]
  %232 = icmp eq i32* %231, %229
  br i1 %232, label %239, label %233

233:                                              ; preds = %228
  %234 = load i32, i32* %229, align 4
  %235 = load i32, i32* %231, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %237, label %239

237:                                              ; preds = %233
  store i32 %234, i32* %231, align 4
  store i32 %235, i32* %229, align 4
  %238 = add i32 %230, 1
  br label %239

239:                                              ; preds = %228, %237, %233
  %240 = phi i32 [ %238, %237 ], [ %230, %233 ], [ %230, %228 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %239
  %243 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEbT0_SD_T_(i32* %13, i32* %231, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  %244 = getelementptr inbounds i32, i32* %231, i64 1
  %245 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEbT0_SD_T_(i32* %244, i32* %5, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br i1 %245, label %246, label %248

246:                                              ; preds = %242
  br i1 %243, label %260, label %247

247:                                              ; preds = %246, %258
  br label %4

248:                                              ; preds = %242
  br i1 %243, label %256, label %249

249:                                              ; preds = %248, %239
  %250 = ptrtoint i32* %231 to i64
  %251 = sub i64 %250, %203
  %252 = sub i64 %9, %250
  %253 = icmp slt i64 %251, %252
  br i1 %253, label %254, label %258

254:                                              ; preds = %249
  tail call void @_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEvT0_SD_T_(i32* %13, i32* %231, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  %255 = getelementptr inbounds i32, i32* %231, i64 1
  br label %256

256:                                              ; preds = %254, %248
  %257 = phi i32* [ %244, %248 ], [ %255, %254 ]
  br label %10

258:                                              ; preds = %249
  %259 = getelementptr inbounds i32, i32* %231, i64 1
  tail call void @_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEvT0_SD_T_(i32* %259, i32* %5, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %247

260:                                              ; preds = %246, %175, %12, %12, %164, %172, %119, %98, %72, %69, %65, %61, %42, %39, %38, %36, %32, %31, %17, %22, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEjT0_SD_SD_SD_SD_T_(i32*, i32*, i32*, i32*, i32*, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %7 = load i32, i32* %1, align 4
  %8 = load i32, i32* %0, align 4
  %9 = icmp slt i32 %7, %8
  %10 = load i32, i32* %2, align 4
  %11 = icmp slt i32 %10, %7
  br i1 %9, label %19, label %12

12:                                               ; preds = %6
  br i1 %11, label %13, label %25

13:                                               ; preds = %12
  store i32 %10, i32* %1, align 4
  store i32 %7, i32* %2, align 4
  %14 = load i32, i32* %1, align 4
  %15 = load i32, i32* %0, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  store i32 %15, i32* %1, align 4
  %18 = load i32, i32* %2, align 4
  br label %25

19:                                               ; preds = %6
  br i1 %11, label %20, label %21

20:                                               ; preds = %19
  store i32 %10, i32* %0, align 4
  store i32 %8, i32* %2, align 4
  br label %25

21:                                               ; preds = %19
  store i32 %7, i32* %0, align 4
  store i32 %8, i32* %1, align 4
  %22 = load i32, i32* %2, align 4
  %23 = icmp slt i32 %22, %8
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  store i32 %22, i32* %1, align 4
  store i32 %8, i32* %2, align 4
  br label %25

25:                                               ; preds = %24, %21, %20, %17, %13, %12
  %26 = phi i32 [ %8, %20 ], [ %10, %12 ], [ %18, %17 ], [ %7, %13 ], [ %8, %24 ], [ %22, %21 ]
  %27 = phi i32 [ 1, %20 ], [ 0, %12 ], [ 2, %17 ], [ 1, %13 ], [ 2, %24 ], [ 1, %21 ]
  %28 = load i32, i32* %3, align 4
  %29 = icmp slt i32 %28, %26
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  store i32 %28, i32* %2, align 4
  store i32 %26, i32* %3, align 4
  %31 = add nuw nsw i32 %27, 1
  %32 = load i32, i32* %2, align 4
  %33 = load i32, i32* %1, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  store i32 %32, i32* %1, align 4
  store i32 %33, i32* %2, align 4
  %36 = add nuw nsw i32 %27, 2
  %37 = load i32, i32* %1, align 4
  %38 = load i32, i32* %0, align 4
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  store i32 %37, i32* %0, align 4
  store i32 %38, i32* %1, align 4
  %41 = add nuw nsw i32 %27, 3
  br label %42

42:                                               ; preds = %25, %30, %35, %40
  %43 = phi i32 [ %41, %40 ], [ %36, %35 ], [ %31, %30 ], [ %27, %25 ]
  %44 = load i32, i32* %4, align 4
  %45 = load i32, i32* %3, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %64

47:                                               ; preds = %42
  store i32 %44, i32* %3, align 4
  store i32 %45, i32* %4, align 4
  %48 = add nuw nsw i32 %43, 1
  %49 = load i32, i32* %3, align 4
  %50 = load i32, i32* %2, align 4
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  store i32 %49, i32* %2, align 4
  store i32 %50, i32* %3, align 4
  %53 = add nuw nsw i32 %43, 2
  %54 = load i32, i32* %2, align 4
  %55 = load i32, i32* %1, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %52
  store i32 %54, i32* %1, align 4
  store i32 %55, i32* %2, align 4
  %58 = add nuw nsw i32 %43, 3
  %59 = load i32, i32* %1, align 4
  %60 = load i32, i32* %0, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  store i32 %59, i32* %0, align 4
  store i32 %60, i32* %1, align 4
  %63 = add nuw nsw i32 %43, 4
  br label %64

64:                                               ; preds = %47, %57, %62, %52, %42
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ], [ %53, %52 ], [ %48, %47 ], [ %43, %42 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEbT0_SD_T_(i32*, i32*, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint i32* %1 to i64
  %5 = ptrtoint i32* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  switch i64 %7, label %70 [
    i64 0, label %120
    i64 1, label %120
    i64 2, label %8
    i64 3, label %14
    i64 4, label %34
    i64 5, label %64
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %120

13:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %120

14:                                               ; preds = %3
  %15 = getelementptr inbounds i32, i32* %0, i64 1
  %16 = getelementptr inbounds i32, i32* %1, i64 -1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %0, align 4
  %19 = icmp slt i32 %17, %18
  %20 = load i32, i32* %16, align 4
  %21 = icmp slt i32 %20, %17
  br i1 %19, label %28, label %22

22:                                               ; preds = %14
  br i1 %21, label %23, label %120

23:                                               ; preds = %22
  store i32 %20, i32* %15, align 4
  store i32 %17, i32* %16, align 4
  %24 = load i32, i32* %15, align 4
  %25 = load i32, i32* %0, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %120

27:                                               ; preds = %23
  store i32 %24, i32* %0, align 4
  store i32 %25, i32* %15, align 4
  br label %120

28:                                               ; preds = %14
  br i1 %21, label %29, label %30

29:                                               ; preds = %28
  store i32 %20, i32* %0, align 4
  store i32 %18, i32* %16, align 4
  br label %120

30:                                               ; preds = %28
  store i32 %17, i32* %0, align 4
  store i32 %18, i32* %15, align 4
  %31 = load i32, i32* %16, align 4
  %32 = icmp slt i32 %31, %18
  br i1 %32, label %33, label %120

33:                                               ; preds = %30
  store i32 %31, i32* %15, align 4
  store i32 %18, i32* %16, align 4
  br label %120

34:                                               ; preds = %3
  %35 = getelementptr inbounds i32, i32* %0, i64 1
  %36 = getelementptr inbounds i32, i32* %0, i64 2
  %37 = getelementptr inbounds i32, i32* %1, i64 -1
  %38 = load i32, i32* %35, align 4
  %39 = load i32, i32* %0, align 4
  %40 = icmp slt i32 %38, %39
  %41 = load i32, i32* %36, align 4
  %42 = icmp slt i32 %41, %38
  br i1 %40, label %47, label %43

43:                                               ; preds = %34
  br i1 %42, label %44, label %52

44:                                               ; preds = %43
  store i32 %41, i32* %35, align 4
  store i32 %38, i32* %36, align 4
  %45 = icmp slt i32 %41, %39
  br i1 %45, label %46, label %52

46:                                               ; preds = %44
  store i32 %41, i32* %0, align 4
  store i32 %39, i32* %35, align 4
  br label %52

47:                                               ; preds = %34
  br i1 %42, label %48, label %49

48:                                               ; preds = %47
  store i32 %41, i32* %0, align 4
  store i32 %39, i32* %36, align 4
  br label %52

49:                                               ; preds = %47
  store i32 %38, i32* %0, align 4
  store i32 %39, i32* %35, align 4
  %50 = icmp slt i32 %41, %39
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  store i32 %41, i32* %35, align 4
  store i32 %39, i32* %36, align 4
  br label %52

52:                                               ; preds = %51, %49, %48, %46, %44, %43
  %53 = phi i32 [ %39, %48 ], [ %41, %43 ], [ %38, %46 ], [ %38, %44 ], [ %39, %51 ], [ %41, %49 ]
  %54 = load i32, i32* %37, align 4
  %55 = icmp slt i32 %54, %53
  br i1 %55, label %56, label %120

56:                                               ; preds = %52
  store i32 %54, i32* %36, align 4
  store i32 %53, i32* %37, align 4
  %57 = load i32, i32* %36, align 4
  %58 = load i32, i32* %35, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %120

60:                                               ; preds = %56
  store i32 %57, i32* %35, align 4
  store i32 %58, i32* %36, align 4
  %61 = load i32, i32* %0, align 4
  %62 = icmp slt i32 %57, %61
  br i1 %62, label %63, label %120

63:                                               ; preds = %60
  store i32 %57, i32* %0, align 4
  store i32 %61, i32* %35, align 4
  br label %120

64:                                               ; preds = %3
  %65 = getelementptr inbounds i32, i32* %0, i64 1
  %66 = getelementptr inbounds i32, i32* %0, i64 2
  %67 = getelementptr inbounds i32, i32* %0, i64 3
  %68 = getelementptr inbounds i32, i32* %1, i64 -1
  %69 = tail call i32 @_ZNSt3__17__sort5IRN4base8internal24BinaryPredicateProjectorINS_4lessIvEENS1_8identityES6_Lb0EEEPN7network5mojom11LoadingModeEEEjT0_SD_SD_SD_SD_T_(i32* %0, i32* %65, i32* %66, i32* %67, i32* %68, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %120

70:                                               ; preds = %3
  %71 = getelementptr inbounds i32, i32* %0, i64 2
  %72 = getelementptr inbounds i32, i32* %0, i64 1
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* %0, align 4
  %75 = icmp slt i32 %73, %74
  %76 = load i32, i32* %71, align 4
  %77 = icmp slt i32 %76, %73
  br i1 %75, label %82, label %78

78:                                               ; preds = %70
  br i1 %77, label %79, label %87

79:                                               ; preds = %78
  store i32 %76, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %80 = icmp slt i32 %76, %74
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  store i32 %76, i32* %0, align 4
  store i32 %74, i32* %72, align 4
  br label %87

82:                                               ; preds = %70
  br i1 %77, label %83, label %84

83:                                               ; preds = %82
  store i32 %76, i32* %0, align 4
  store i32 %74, i32* %71, align 4
  br label %87

84:                                               ; preds = %82
  store i32 %73, i32* %0, align 4
  store i32 %74, i32* %72, align 4
  %85 = icmp slt i32 %76, %74
  br i1 %85, label %86, label %87

86:                                               ; preds = %84
  store i32 %76, i32* %72, align 4
  store i32 %74, i32* %71, align 4
  br label %87

87:                                               ; preds = %78, %79, %81, %83, %84, %86
  %88 = phi i32 [ %76, %78 ], [ %73, %79 ], [ %73, %81 ], [ %74, %83 ], [ %76, %84 ], [ %74, %86 ]
  %89 = getelementptr inbounds i32, i32* %0, i64 3
  %90 = icmp eq i32* %89, %1
  br i1 %90, label %120, label %91

91:                                               ; preds = %87, %115
  %92 = phi i32 [ %116, %115 ], [ %88, %87 ]
  %93 = phi i32* [ %113, %115 ], [ %89, %87 ]
  %94 = phi i32 [ %112, %115 ], [ 0, %87 ]
  %95 = phi i32* [ %93, %115 ], [ %71, %87 ]
  %96 = load i32, i32* %93, align 4
  %97 = icmp slt i32 %96, %92
  br i1 %97, label %98, label %111

98:                                               ; preds = %91, %103
  %99 = phi i32 [ %105, %103 ], [ %92, %91 ]
  %100 = phi i32* [ %101, %103 ], [ %93, %91 ]
  %101 = phi i32* [ %104, %103 ], [ %95, %91 ]
  store i32 %99, i32* %100, align 4
  %102 = icmp eq i32* %101, %0
  br i1 %102, label %107, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds i32, i32* %101, i64 -1
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %96, %105
  br i1 %106, label %98, label %107

107:                                              ; preds = %98, %103
  %108 = phi i32* [ %0, %98 ], [ %101, %103 ]
  store i32 %96, i32* %108, align 4
  %109 = add i32 %94, 1
  %110 = icmp eq i32 %109, 8
  br i1 %110, label %117, label %111

111:                                              ; preds = %107, %91
  %112 = phi i32 [ %109, %107 ], [ %94, %91 ]
  %113 = getelementptr inbounds i32, i32* %93, i64 1
  %114 = icmp eq i32* %113, %1
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = load i32, i32* %93, align 4
  br label %91

117:                                              ; preds = %107
  %118 = getelementptr inbounds i32, i32* %93, i64 1
  %119 = icmp eq i32* %118, %1
  br label %120

120:                                              ; preds = %111, %117, %87, %63, %60, %56, %52, %33, %30, %29, %27, %23, %22, %8, %13, %3, %3, %64
  %121 = phi i1 [ true, %64 ], [ true, %3 ], [ true, %3 ], [ true, %13 ], [ true, %8 ], [ true, %22 ], [ true, %23 ], [ true, %27 ], [ true, %29 ], [ true, %30 ], [ true, %33 ], [ true, %52 ], [ true, %56 ], [ true, %60 ], [ true, %63 ], [ true, %87 ], [ %119, %117 ], [ true, %111 ]
  ret i1 %121
}

; Function Attrs: nounwind
declare void @_ZN3net18structured_headers19ParameterizedMemberD1Ev(%"struct.net::structured_headers::ParameterizedMember"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7network5mojom19SupportsLoadingModeC1ENSt3__16vectorINS0_11LoadingModeENS2_9allocatorIS4_EEEE(%"class.network::mojom::SupportsLoadingMode"*, %"class.std::__1::vector"*) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN7network5mojom19SupportsLoadingMode3NewIJNSt3__16vectorINS0_11LoadingModeENS3_9allocatorIS5_EEEEEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZN7network5mojom19SupportsLoadingMode3NewIJNSt3__16vectorINS0_11LoadingModeENS3_9allocatorIS5_EEEEEEEN4mojo9StructPtrIS1_EEDpOT_"}
